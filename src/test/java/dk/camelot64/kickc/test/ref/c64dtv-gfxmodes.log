PARSING src/test/java/dk/camelot64/kickc/test/kc/c64dtv-gfxmodes.kc
// Exploring C64DTV Screen Modes
import "c64dtv.kc"
import "print.kc"
import "keyboard.kc"

void main() {
    asm { sei }  // Disable normal interrupt (prevent keyboard reading glitches)
    *DTV_FEATURE = DTV_FEATURE_ENABLE;
    while(true) {
        menu();
    }
}

byte[] MENU_TEXT =
     "C64DTV Graphics Modes            CCLHBME@" +
     "                                 OHIIMCC@" +
     "                                 LUNCMMM@" +
     "----------------------------------------@" +
     "1. Standard Char             (V) 0000000@" +
     "2. Extended Color Char       (V) 0000001@" +
     "3. Multicolor Char           (V) 0000010@" +
     "4. Standard Bitmap           (V) 0000100@" +
     "5. Multicolor Bitmap         (V) 0000110@" +
     "6. High Color Standard Char  (H) 0001000@" +
     "7. High Extended Color Char  (H) 0001001@" +
     "8. High Multicolor Char      (H) 0001010@" +
     "9. High Multicolor Bitmap    (H) 0001110@" +
     "a. Sixs Fred 2               (D) 0010111@" +
     "b. Two Plane Bitmap          (D) 0011101@" +
     "c. Sixs Fred (2 Plane MC BM) (D) 0011111@" +
     "d. 8bpp Pixel Cell           (D) 0111011@" +
     "e. Chunky 8bpp Bitmap        (D) 1111011@" +
     "----------------------------------------@" +
     "    (V) vicII (H) vicII+hicol (D) c64dtv@" +
     "@" ;

void menu() {
    const byte* SCREEN = $8000;
    const byte* CHARSET = $9800; // Charset ROM
    // DTV Graphics Bank
    *DTV_GRAPHICS_VIC_BANK = (byte)((dword)CHARSET/$10000);
    // DTV Color Bank
     *DTV_COLOR_BANK_LO = <((word)(DTV_COLOR_BANK_DEFAULT/$400));
     *DTV_COLOR_BANK_HI = >((word)(DTV_COLOR_BANK_DEFAULT/$400));
    // DTV Graphics Mode
    *DTV_CONTROL = 0;
    // VIC Graphics Bank
    *CIA2_PORT_A_DDR = %00000011; // Set VIC Bank bits to output - all others to input
    *CIA2_PORT_A = %00000011 ^ (byte)((word)CHARSET/$4000); // Set VIC Bank
    // VIC Graphics Mode
    *VIC_CONTROL = VIC_DEN|VIC_RSEL|3;
    *VIC_CONTROL2 = VIC_CSEL;
    // VIC Memory Pointers
    *VIC_MEMORY =  (byte)((((word)SCREEN&$3fff)/$40)|(((word)CHARSET&$3fff)/$400));
    // DTV Palette - default
    for(byte i : 0..$f) {
        DTV_PALETTE[i] = DTV_PALETTE_DEFAULT[i];
    }
    // Char Colors
    for(byte* c=COLS;c!=COLS+1000;c++) *c=LIGHT_GREEN;
    // Screen colors
    *BGCOL = 0;
    *BORDERCOL = 0;
    // Display menu Text
    print_set_screen(SCREEN);
    print_cls();
    print_str_lines(MENU_TEXT);
    // Wait for key press
    while(true) {
        if(keyboard_key_pressed(KEY_1)!=0) {
            mode_stdchar();
            return;
        }
        if(keyboard_key_pressed(KEY_2)!=0) {
            mode_ecmchar();
            return;
        }
        if(keyboard_key_pressed(KEY_3)!=0) {
            mode_mcchar();
            return;
        }
        if(keyboard_key_pressed(KEY_6)!=0) {
            mode_hicolstdchar();
            return;
        }
        if(keyboard_key_pressed(KEY_7)!=0) {
            mode_hicolecmchar();
            return;
        }
        if(keyboard_key_pressed(KEY_8)!=0) {
            mode_hicolmcchar();
            return;
        }
        if(keyboard_key_pressed(KEY_A)!=0) {
            mode_sixsfred2();
            return;
        }
        if(keyboard_key_pressed(KEY_B)!=0) {
            mode_twoplanebitmap();
            return;
        }
        if(keyboard_key_pressed(KEY_C)!=0) {
            mode_sixsfred();
            return;
        }
        if(keyboard_key_pressed(KEY_D)!=0) {
            mode_8bpppixelcell();
            return;
        }
        if(keyboard_key_pressed(KEY_E)!=0) {
            mode_8bppchunkybmm();
            return;
        }
    }

}

// Standard Character Mode (LINEAR/HICOL/CHUNK/COLDIS/ECM/MCM/BMM = 0)
// Resolution: 320x200
// Normal VIC Adressing:
// VicGfxData[16]: ( VicBank[1:0] & CharBase[2:0] & CharData[7:0] & RowCounter[2:0] )
// Pixel Shifter (1)
// - 0: 4bpp BgColor0[3:0]
// - 1: 4bpp ColorData[3:0]
void mode_stdchar() {
    const byte* SCREEN = $8000;
    const byte* CHARSET = $9000; // Charset ROM
    const byte* COLORS = $8400;
    // DTV Graphics Bank
    *DTV_GRAPHICS_VIC_BANK = (byte)((dword)CHARSET/$10000);
    // DTV Color Bank
     *DTV_COLOR_BANK_LO = <((word)(COLORS/$400));
     *DTV_COLOR_BANK_HI = >((word)(COLORS/$400));
    // DTV Graphics Mode
    *DTV_CONTROL = 0;
    // VIC Graphics Bank
    *CIA2_PORT_A_DDR = %00000011; // Set VIC Bank bits to output - all others to input
    *CIA2_PORT_A = %00000011 ^ (byte)((word)CHARSET/$4000); // Set VIC Bank
    // VIC Graphics Mode
    *VIC_CONTROL = VIC_DEN|VIC_RSEL|3;
    *VIC_CONTROL2 = VIC_CSEL;
    // VIC Memory Pointers
    *VIC_MEMORY =  (byte)((((word)SCREEN&$3fff)/$40)|(((word)CHARSET&$3fff)/$400));
    // DTV Palette - default
    for(byte i : 0..$f) {
        DTV_PALETTE[i] = DTV_PALETTE_DEFAULT[i];
    }
    // Screen colors
    *BGCOL = 0;
    *BORDERCOL = 0;
    // Char Colors and screen chars
    byte* col=COLORS;
    byte* ch=SCREEN;
    for(byte cy: 0..24 ) {
        for(byte cx: 0..39) {
            *col++ = (cx+cy)&$f;
            *ch++ = (cy&$f)<<4|(cx&$f);
        }
    }
    // Wait for keypress
    while(true) {
        if(keyboard_key_pressed(KEY_SPACE)!=0) {
            return;
        }
    }
}

// Extended Background Color Character Mode (LINEAR/HICOL/CHUNK/COLDIS/MCM/BMM = 0, ECM = 1)
// Resolution: 320x200
// Normal VIC Adressing:
// VicGfxData[16]: ( VicBank[1:0] & CharBase[2:0] & "00" & CharData[5:0] & RowCounter[2:0] ) 
// GfxData Pixel Shifter (1)
//  - 0: 4bpp Background Color
//    - CharData[7:6] 00: 4bpp BgColor0[3:0]
//    - CharData[7:6] 01: 4bpp BgColor1[3:0]
//    - CharData[7:6] 10: 4bpp BgColor2[3:0]
//    - CharData[7:6] 11: 4bpp BgColor3[3:0]
//  - 1: 4bpp ColorData[3:0]
void mode_ecmchar() {
    const byte* ECMCHAR_SCREEN = $8000;
    const byte* ECMCHAR_CHARSET = $9000; // Charset ROM
    const byte* ECMCHAR_COLORS = $8400;
    // DTV Graphics Bank
    *DTV_GRAPHICS_VIC_BANK = (byte)((dword)ECMCHAR_CHARSET/$10000);
    // DTV Color Bank
     *DTV_COLOR_BANK_LO = <((word)(ECMCHAR_COLORS/$400));
     *DTV_COLOR_BANK_HI = >((word)(ECMCHAR_COLORS/$400));
    // DTV Graphics Mode
    *DTV_CONTROL = 0;
    // VIC Graphics Bank
    *CIA2_PORT_A_DDR = %00000011; // Set VIC Bank bits to output - all others to input
    *CIA2_PORT_A = %00000011 ^ (byte)((word)ECMCHAR_CHARSET/$4000); // Set VIC Bank
    // VIC Graphics Mode
    *VIC_CONTROL = VIC_DEN|VIC_RSEL|VIC_ECM|3;
    *VIC_CONTROL2 = VIC_CSEL;
    // VIC Memory Pointers
    *VIC_MEMORY =  (byte)((((word)ECMCHAR_SCREEN&$3fff)/$40)|(((word)ECMCHAR_CHARSET&$3fff)/$400));
    // DTV Palette - default
    for(byte i : 0..$f) {
        DTV_PALETTE[i] = DTV_PALETTE_DEFAULT[i];
    }
    // Screen colors
    *BORDERCOL = 0;
    *BGCOL1 = 0;
    *BGCOL2 = 2;
    *BGCOL3 = 5;
    *BGCOL4 = 6;
    // Char Colors and screen chars
    byte* col=ECMCHAR_COLORS;
    byte* ch=ECMCHAR_SCREEN;
    for(byte cy: 0..24 ) {
        for(byte cx: 0..39) {
            *col++ = (cx+cy)&$f;
            *ch++ = (cy&$f)<<4|(cx&$f);
        }
    }
    // Wait for keypress
    while(true) {
        if(keyboard_key_pressed(KEY_SPACE)!=0) {
            return;
        }
    }
}

// Multicolor Character Mode (LINEAR/HICOL/CHUNK/COLDIS/BMM/ECM = 0, MCM = 1)
// Resolution: 160x200 (320x200)
// Normal VIC Adressing:
// VicGfxData[16]: ( VicBank[1:0] & CharBase[2:0] & CharData[7:0] & RowCounter[2:0] )
// GfxData Pixel Shifter (1) if ColorData[3:3] = 0:
//  - 0: 4bpp BgColor0[3:0]
//  - 1: 4bpp ColorData[2:0]
// GfxData Pixel Shifter (2) if ColorData[3:3] = 1:
//  - 00: 4bpp BgColor0[3:0]
//  - 01: 4bpp BgColor1[3:0]
//  - 10: 4bpp BgColor2[3:0]
//  - 11: 4bpp ColorData[2:0]// Standard Character Mode (LINEAR/HICOL/CHUNK/COLDIS/ECM/MCM/BMM = 0)
void mode_mcchar() {
    const byte* SCREEN = $8000;
    const byte* CHARSET = $9000; // Charset ROM
    const byte* COLORS = $8400;
    // DTV Graphics Bank
    *DTV_GRAPHICS_VIC_BANK = (byte)((dword)CHARSET/$10000);
    // DTV Color Bank
     *DTV_COLOR_BANK_LO = <((word)(COLORS/$400));
     *DTV_COLOR_BANK_HI = >((word)(COLORS/$400));
    // DTV Graphics Mode
    *DTV_CONTROL = 0;
    // VIC Graphics Bank
    *CIA2_PORT_A_DDR = %00000011; // Set VIC Bank bits to output - all others to input
    *CIA2_PORT_A = %00000011 ^ (byte)((word)CHARSET/$4000); // Set VIC Bank
    // VIC Graphics Mode
    *VIC_CONTROL = VIC_DEN|VIC_RSEL|3;
    *VIC_CONTROL2 = VIC_CSEL|VIC_MCM;
    // VIC Memory Pointers
    *VIC_MEMORY =  (byte)((((word)SCREEN&$3fff)/$40)|(((word)CHARSET&$3fff)/$400));
    // DTV Palette - default
    for(byte i : 0..$f) {
        DTV_PALETTE[i] = DTV_PALETTE_DEFAULT[i];
    }
    // Screen colors
    *BORDERCOL = 0;
    *BGCOL1 = BLACK;
    *BGCOL2 = GREEN;
    *BGCOL3 = BLUE;
    // Char Colors and screen chars
    byte* col=COLORS;
    byte* ch=SCREEN;
    for(byte cy: 0..24 ) {
        for(byte cx: 0..39) {
            *col++ = (cx+cy)&$f;
            *ch++ = (cy&$f)<<4|(cx&$f);
        }
    }
    // Wait for keypress
    while(true) {
        if(keyboard_key_pressed(KEY_SPACE)!=0) {
            return;
        }
    }
}

// High Color Standard Character Mode (LINEAR/CHUNK/COLDIS/ECM/MCM/BMM = 0, HICOL = 1)
// Resolution: 320x200
// Normal VIC Adressing:
// VicGfxData[16]: ( VicBank[1:0] & CharBase[2:0] & CharData[7:0] & RowCounter[2:0] )
// Pixel Shifter (1)
//  - 0: 8bpp BgColor0[7:0]
//  - 1: 8bpp ColorData[7:0]
void mode_hicolstdchar() {
    const byte* SCREEN = $8000;
    const byte* CHARSET = $9000; // Charset ROM
    const byte* COLORS = $8400;
    // DTV Graphics Bank
    *DTV_GRAPHICS_VIC_BANK = (byte)((dword)CHARSET/$10000);
    // DTV Color Bank
     *DTV_COLOR_BANK_LO = <((word)(COLORS/$400));
     *DTV_COLOR_BANK_HI = >((word)(COLORS/$400));
    // DTV Graphics Mode
    *DTV_CONTROL = DTV_CONTROL_HIGHCOLOR_ON;
    // VIC Graphics Bank
    *CIA2_PORT_A_DDR = %00000011; // Set VIC Bank bits to output - all others to input
    *CIA2_PORT_A = %00000011 ^ (byte)((word)CHARSET/$4000); // Set VIC Bank
    // VIC Graphics Mode
    *VIC_CONTROL = VIC_DEN|VIC_RSEL|3;
    *VIC_CONTROL2 = VIC_CSEL;
    // VIC Memory Pointers
    *VIC_MEMORY =  (byte)((((word)SCREEN&$3fff)/$40)|(((word)CHARSET&$3fff)/$400));
    // DTV Palette - Grey Tones
     for(byte i : 0..$f) {
         DTV_PALETTE[i] = i;
     }
    // Screen colors
    *BGCOL = 0;
    *BORDERCOL = 0;
    // Char Colors and screen chars
    byte* col=COLORS;
    byte* ch=SCREEN;
    for(byte cy: 0..24 ) {
        for(byte cx: 0..39) {
            byte v = (cy&$f)<<4|(cx&$f);
            *col++ = v;
            *ch++ = v;
        }
    }
    // Wait for keypress
    while(true) {
        if(keyboard_key_pressed(KEY_SPACE)!=0) {
            return;
        }
    }
}

// High Color Extended Background Color Character Mode (LINEAR/CHUNK/COLDIS/MCM/BMM = 0, ECM/HICOL = 1)
// Resolution: 320x200
// Normal VIC Adressing:
// VicGfxData[16]: ( VicBank[1:0] & CharBase[2:0] & "00" & CharData[5:0] & RowCounter[2:0] )
// GfxData Pixel Shifter (1)
//  - 0: 8bpp Background Color
//    - CharData[7:6] 00: 8bpp BgColor0[7:0]
//    - CharData[7:6] 01: 8bpp BgColor1[7:0]
//    - CharData[7:6] 10: 8bpp BgColor2[7:0]
//    - CharData[7:6] 11: 8bpp BgColor3[7:0]
//  - 1: 8bpp ColorData[7:0]
void mode_hicolecmchar() {
    const byte* SCREEN = $8000;
    const byte* CHARSET = $9000; // Charset ROM
    const byte* COLORS = $8400;
    // DTV Graphics Bank
    *DTV_GRAPHICS_VIC_BANK = (byte)((dword)CHARSET/$10000);
    // DTV Color Bank
     *DTV_COLOR_BANK_LO = <((word)(COLORS/$400));
     *DTV_COLOR_BANK_HI = >((word)(COLORS/$400));
    // DTV Graphics Mode
    *DTV_CONTROL = DTV_CONTROL_HIGHCOLOR_ON;
    // VIC Graphics Bank
    *CIA2_PORT_A_DDR = %00000011; // Set VIC Bank bits to output - all others to input
    *CIA2_PORT_A = %00000011 ^ (byte)((word)CHARSET/$4000); // Set VIC Bank
    // VIC Graphics Mode
    *VIC_CONTROL = VIC_DEN|VIC_RSEL|VIC_ECM|3;
    *VIC_CONTROL2 = VIC_CSEL;
    // VIC Memory Pointers
    *VIC_MEMORY =  (byte)((((word)SCREEN&$3fff)/$40)|(((word)CHARSET&$3fff)/$400));
    // DTV Palette - Grey Tones
     for(byte i : 0..$f) {
         DTV_PALETTE[i] = i;
     }
    // Screen colors
    *BORDERCOL = 0;
    *BGCOL1 = $50;
    *BGCOL2 = $54;
    *BGCOL3 = $58;
    *BGCOL4 = $5c;
    // Char Colors and screen chars
    byte* col=COLORS;
    byte* ch=SCREEN;
    for(byte cy: 0..24 ) {
        for(byte cx: 0..39) {
            byte v = (cy&$f)<<4|(cx&$f);
            *col++ = v;
            *ch++ = v;
        }
    }
    // Wait for keypress
    while(true) {
        if(keyboard_key_pressed(KEY_SPACE)!=0) {
            return;
        }
    }
}

// High Color Multicolor Character Mode (LINEAR/CHUNK/COLDIS/BMM/ECM = 0, MCM/HICOL = 1)
// Resolution: 160x200 (320x200)
// Normal VIC Adressing:
// VicGfxData[16]: ( VicBank[1:0] & CharBase[2:0] & CharData[7:0] & RowCounter[2:0] )
//GfxData Pixel Shifter (1) if ColorData[3:3] = 0:
// - 0: 8bpp BgColor0[7:0]
// - 1: 8bpp ColorData[7:4] "0" & Color[2:0]
//GfxData Pixel Shifter (2) if ColorData[3:3] = 1:
// - 00: 8bpp BgColor0[7:0]
// - 01: 8bpp BgColor1[7:0]
// - 10: 8bpp BgColor2[7:0]
// - 11: 8bpp ColorData[7:4] "0" & Color[2:0]
void mode_hicolmcchar() {
    const byte* SCREEN = $8000;
    const byte* CHARSET = $9000; // Charset ROM
    const byte* COLORS = $8400;
    // DTV Graphics Bank
    *DTV_GRAPHICS_VIC_BANK = (byte)((dword)CHARSET/$10000);
    // DTV Color Bank
     *DTV_COLOR_BANK_LO = <((word)(COLORS/$400));
     *DTV_COLOR_BANK_HI = >((word)(COLORS/$400));
    // DTV Graphics Mode
    *DTV_CONTROL = DTV_CONTROL_HIGHCOLOR_ON;
    // VIC Graphics Bank
    *CIA2_PORT_A_DDR = %00000011; // Set VIC Bank bits to output - all others to input
    *CIA2_PORT_A = %00000011 ^ (byte)((word)CHARSET/$4000); // Set VIC Bank
    // VIC Graphics Mode
    *VIC_CONTROL = VIC_DEN|VIC_RSEL|3;
    *VIC_CONTROL2 = VIC_CSEL|VIC_MCM;
    // VIC Memory Pointers
    *VIC_MEMORY =  (byte)((((word)SCREEN&$3fff)/$40)|(((word)CHARSET&$3fff)/$400));
    // DTV Palette - Grey Tones
     for(byte i : 0..$f) {
         DTV_PALETTE[i] = i;
     }
    // Screen colors
    *BORDERCOL = 0;
    *BGCOL1 = $50;
    *BGCOL2 = $54;
    *BGCOL3 = $58;
    // Char Colors and screen chars
    byte* col=COLORS;
    byte* ch=SCREEN;
    for(byte cy: 0..24 ) {
        for(byte cx: 0..39) {
            byte v = (cy&$f)<<4|(cx&$f);
            *col++ = v;
            *ch++ = v;
        }
    }
    // Wait for keypress
    while(true) {
        if(keyboard_key_pressed(KEY_SPACE)!=0) {
            return;
        }
    }
}

// Two Plane Bitmap - generated from the two DTV linear graphics plane counters
// Two Plane Bitmap Mode (CHUNK/COLDIS/MCM = 0, ECM/BMM/HICOL/LINEAR = 1)
// Resolution: 320x200
// Linear Adressing
// GfxData/PlaneA Pixel Shifter (1), CharData/PlaneB Pixel Shifter (1):
// - Plane A = 0 Plane B = 0: 8bpp BgColor0[7:0]
// - Plane A = 0 Plane B = 1: 8bpp "0000" & ColorData[7:4]
// - Plane A = 1 Plane B = 0: 8bpp "0000" & ColorData[3:0]
// - Plane A = 1 Plane B = 1: 8bpp BgColor1[7:0]
void mode_twoplanebitmap() {
    const byte* PLANEA = $4000;
    const byte* PLANEB = $6000;
    const byte* COLORS = $8000;
    // DTV Graphics Mode
    *DTV_CONTROL = DTV_CONTROL_HIGHCOLOR_ON | DTV_CONTROL_LINEAR_ADDRESSING_ON;
    // VIC Graphics Mode
    *VIC_CONTROL = VIC_ECM|VIC_BMM|VIC_DEN|VIC_RSEL|3;
    *VIC_CONTROL2 = VIC_CSEL;
    // Linear Graphics Plane A Counter
    *DTV_PLANEA_START_LO = <PLANEA;
    *DTV_PLANEA_START_MI = >PLANEA;
    *DTV_PLANEA_START_HI = 0;
    *DTV_PLANEA_STEP = 1;
    *DTV_PLANEA_MODULO_LO = 0;
    *DTV_PLANEA_MODULO_HI = 0;
    // Linear Graphics Plane B Counter
    *DTV_PLANEB_START_LO = <PLANEB;
    *DTV_PLANEB_START_MI = >PLANEB;
    *DTV_PLANEB_START_HI = 0;
    *DTV_PLANEB_STEP = 1;
    *DTV_PLANEB_MODULO_LO = 0;
    *DTV_PLANEB_MODULO_HI = 0;
    // DTV Color Bank
     *DTV_COLOR_BANK_LO = <(COLORS/$400);
     *DTV_COLOR_BANK_HI = >(COLORS/$400);
    // DTV Palette - Grey Tones
    for(byte i : 0..$f) {
        DTV_PALETTE[i] = i;
    }
    // Screen colors
    *BORDERCOL = $00;
    *BGCOL1 = $70; // Color for bits 00
    *BGCOL2 = $d4; // Color for bits 11
    // Colors for bits 01 / 10
    byte* col=COLORS;
    for(byte cy: 0..24 ) {
        for(byte cx: 0..39) {
            *col++ = (cy & $f)<<4 | (cx &$f);
        }
    }
    // Graphics for Plane A - horizontal stripes
    byte* gfxa = PLANEA;
    for(byte ay : 0..199) {
        for (byte ax : 0..39) {
            if((ay&4)==0) {
                *gfxa++ = %00000000;
            } else {
                *gfxa++ = %11111111;
            }
        }
    }
    // Graphics for Plane B - vertical stripes
    byte* gfxb = PLANEB;
    for(byte by : 0..199) {
        for ( byte bx : 0..39) {
            *gfxb++ = %00001111;
        }
    }
    // Wait for keypress
    while(true) {
        if(keyboard_key_pressed(KEY_SPACE)!=0) {
            return;
        }
    }

}

// Sixs Fred Mode - 8bpp Packed Bitmap - Generated from the two DTV linear graphics plane counters
// Two Plane MultiColor Bitmap - 8bpp Packed Bitmap (CHUNK/COLDIS = 0, ECM/BMM/MCM/HICOL/LINEAR = 1)
// Resolution: 160x200
// Linear Adressing
// GfxData/PlaneA Pixel Shifter (2), CharData/PlaneB Pixel Shifter (2):
// - 8bpp color (ColorData[3:0],CharData/PlaneB[1:0], GfxData/PlaneA[1:0])
void mode_sixsfred() {
    const byte* PLANEA = $4000;
    const byte* PLANEB = $6000;
    const byte* COLORS = $8000;
    // DTV Graphics Mode
    *DTV_CONTROL = DTV_CONTROL_HIGHCOLOR_ON | DTV_CONTROL_LINEAR_ADDRESSING_ON;
    // VIC Graphics Mode
    *VIC_CONTROL = VIC_ECM|VIC_BMM|VIC_DEN|VIC_RSEL|3;
    *VIC_CONTROL2 = VIC_MCM|VIC_CSEL;
    // Linear Graphics Plane A Counter
    *DTV_PLANEA_START_LO = <PLANEA;
    *DTV_PLANEA_START_MI = >PLANEA;
    *DTV_PLANEA_START_HI = 0;
    *DTV_PLANEA_STEP = 1;
    *DTV_PLANEA_MODULO_LO = 0;
    *DTV_PLANEA_MODULO_HI = 0;
    // Linear Graphics Plane B Counter
    *DTV_PLANEB_START_LO = <PLANEB;
    *DTV_PLANEB_START_MI = >PLANEB;
    *DTV_PLANEB_START_HI = 0;
    *DTV_PLANEB_STEP = 1;
    *DTV_PLANEB_MODULO_LO = 0;
    *DTV_PLANEB_MODULO_HI = 0;
    // DTV Color Bank
     *DTV_COLOR_BANK_LO = <(COLORS/$400);
     *DTV_COLOR_BANK_HI = >(COLORS/$400);
    // DTV Palette - Grey Tones
    for(byte i : 0..$f) {
        DTV_PALETTE[i] = i;
    }
    // Screen colors
    *BORDERCOL = $00;
    // Colors for high 4 bits of 8bpp
    byte* col=COLORS;
    for(byte cy: 0..24 ) {
        for(byte cx: 0..39) {
            *col++ = (cx+cy) & $f;
        }
    }
    // Graphics for Plane A () - horizontal stripes every 2 pixels
    byte* gfxa = PLANEA;
    byte[] row_bitmask = { %00000000, %01010101, %10101010, %11111111 };
    for(byte ay : 0..199) {
        for (byte ax : 0..39) {
            byte row = (ay>>1) & 3;
            *gfxa++ = row_bitmask[row];
        }
    }
    // Graphics for Plane B - vertical stripes every 2 pixels
    byte* gfxb = PLANEB;
    for(byte by : 0..199) {
        for ( byte bx : 0..39) {
                *gfxb++ = %00011011;
        }
    }
    // Wait for keypress
    while(true) {
        if(keyboard_key_pressed(KEY_SPACE)!=0) {
            return;
        }
    }

}

// Sixs Fred Mode 2 - 8bpp Packed Bitmap - Generated from the two DTV linear graphics plane counters
// Two Plane MultiColor Bitmap - 8bpp Packed Bitmap (CHUNK/COLDIS/HICOL = 0, ECM/BMM/MCM/LINEAR = 1)
// Resolution: 160x200
// Linear Adressing
// PlaneA Pixel Shifter (2), PlaneB Pixel Shifter (2):
// - 8bpp color (PlaneB[1:0],ColorData[5:4],PlaneA[1:0],ColorData[1:0])
void mode_sixsfred2() {
    const byte* PLANEA = $4000;
    const byte* PLANEB = $6000;
    const byte* COLORS = $8000;
    // DTV Graphics Mode
    *DTV_CONTROL = DTV_CONTROL_LINEAR_ADDRESSING_ON;
    // VIC Graphics Mode
    *VIC_CONTROL = VIC_ECM|VIC_BMM|VIC_DEN|VIC_RSEL|3;
    *VIC_CONTROL2 = VIC_MCM|VIC_CSEL;
    // Linear Graphics Plane A Counter
    *DTV_PLANEA_START_LO = <PLANEA;
    *DTV_PLANEA_START_MI = >PLANEA;
    *DTV_PLANEA_START_HI = 0;
    *DTV_PLANEA_STEP = 1;
    *DTV_PLANEA_MODULO_LO = 0;
    *DTV_PLANEA_MODULO_HI = 0;
    // Linear Graphics Plane B Counter
    *DTV_PLANEB_START_LO = <PLANEB;
    *DTV_PLANEB_START_MI = >PLANEB;
    *DTV_PLANEB_START_HI = 0;
    *DTV_PLANEB_STEP = 1;
    *DTV_PLANEB_MODULO_LO = 0;
    *DTV_PLANEB_MODULO_HI = 0;
    // DTV Color Bank
     *DTV_COLOR_BANK_LO = <(COLORS/$400);
     *DTV_COLOR_BANK_HI = >(COLORS/$400);
    // DTV Palette - Grey Tones
    for(byte i : 0..$f) {
        DTV_PALETTE[i] = i;
    }
    // Screen colors
    *BORDERCOL = $00;
    // Colors for high 4 bits of 8bpp
    byte* col=COLORS;
    for(byte cy: 0..24 ) {
        for(byte cx: 0..39) {
            *col++ = (cx&3)<<4|(cy&3);
        }
    }
    // Graphics for Plane A () - horizontal stripes every 2 pixels
    byte* gfxa = PLANEA;
    byte[] row_bitmask = { %00000000, %01010101, %10101010, %11111111 };
    for(byte ay : 0..199) {
        for (byte ax : 0..39) {
            byte row = (ay>>1) & 3;
            *gfxa++ = row_bitmask[row];
        }
    }
    // Graphics for Plane B - vertical stripes every 2 pixels
    byte* gfxb = PLANEB;
    for(byte by : 0..199) {
        for ( byte bx : 0..39) {
                *gfxb++ = %00011011;
        }
    }
    // Wait for keypress
    while(true) {
        if(keyboard_key_pressed(KEY_SPACE)!=0) {
            return;
        }
    }

}


//8bpp Pixel Cell Mode (BMM/COLDIS = 0, ECM/MCM/HICOL/LINEAR/CHUNK = 1)
//Pixel Cell Adressing
//CharData[8]: (PlaneA[21:0])
//GfxData[8]: (PlaneB[21:14] & CharData[7:0] & RowCounter[3:0] & PixelCounter[7:0] )
//GfxData Pixel Shifter (8):
//- 8bpp color GfxData[7:0]
//Pixel cell mode can be thought of as a text mode that uses a 8x8 pixel 8bpp font (64 bytes/char).
//The characters come from counter A and the font (or "cells") from counter B.
//Counter B step and modulo should be set to 0, counter A modulo to 0 and counter A step to 1 for normal operation.
void mode_8bpppixelcell() {
    // 8BPP Pixel Cell Screen (contains 40x25=1000 chars)
    const byte* PLANEA = $3c00;
    // 8BPP Pixel Cell Charset (contains 256 64 byte chars)
    const byte* PLANEB = $4000;
    // DTV Graphics Mode
    *DTV_CONTROL = DTV_CONTROL_HIGHCOLOR_ON | DTV_CONTROL_LINEAR_ADDRESSING_ON|DTV_CONTROL_CHUNKY_ON;
    // VIC Graphics Mode
    *VIC_CONTROL = VIC_ECM|VIC_DEN|VIC_RSEL|3;
    *VIC_CONTROL2 = VIC_MCM|VIC_CSEL;
    // Linear Graphics Plane A Counter
    *DTV_PLANEA_START_LO = <PLANEA;
    *DTV_PLANEA_START_MI = >PLANEA;
    *DTV_PLANEA_START_HI = 0;
    *DTV_PLANEA_STEP = 1;
    *DTV_PLANEA_MODULO_LO = 0;
    *DTV_PLANEA_MODULO_HI = 0;
    // Linear Graphics Plane B Counter
    *DTV_PLANEB_START_LO = <PLANEB;
    *DTV_PLANEB_START_MI = >PLANEB;
    *DTV_PLANEB_START_HI = 0;
    *DTV_PLANEB_STEP = 0;
    *DTV_PLANEB_MODULO_LO = 0;
    *DTV_PLANEB_MODULO_HI = 0;
    // Border color
    *BORDERCOL = $00;
    // DTV Palette - Grey Tones
    for(byte i : 0..$f) {
        DTV_PALETTE[i] = i;
    }
    // Screen Chars for Plane A (screen) - 16x16 repeating
    byte* gfxa = PLANEA;
    for(byte ay : 0..24) {
        for (byte ax : 0..39) {
            *gfxa++ = (ay & $f)<<4 | (ax & $f);
        }
    }
    // 8bpp cells for Plane B (charset) - ROM charset with 256 colors
    *PROCPORT = $32;
    byte* CHARGEN = $d000;
    byte* gfxb = PLANEB;
    byte* chargen = CHARGEN;
    byte col = 0;
    for(byte ch : $00..$ff) {
        for ( byte cr : 0..7) {
            byte bits = *chargen++;
            for ( byte cp : 0..7) {
                byte c = 0;
                if((bits & $80) != 0) {
                    c = col;
                }
                *gfxb++ = c;
                bits = bits<<1;
                col++;
            }
        }
    }
    *PROCPORT = $37;
    // Wait for keypress
    while(true) {
        if(keyboard_key_pressed(KEY_SPACE)!=0) {
            return;
        }
    }
}


//Chunky 8bpp Bitmap Mode (BMM = 0, ECM/MCM/HICOL/LINEAR/CHUNK/COLDIS = 1)
// Resolution: 320x200
// Linear Adressing
// CharData/PlaneB Pixel Shifter (8):
// - 8bpp color PlaneB[7:0]
// To set up a linear video frame buffer the step size must be set to 8.
void mode_8bppchunkybmm() {
    // 8BPP Chunky Bitmap (contains 8bpp pixels)
    const dword PLANEB = $20000;
    // DTV Graphics Mode
    *DTV_CONTROL = DTV_CONTROL_HIGHCOLOR_ON | DTV_CONTROL_LINEAR_ADDRESSING_ON | DTV_CONTROL_CHUNKY_ON | DTV_CONTROL_COLORRAM_OFF;
    // VIC Graphics Mode
    *VIC_CONTROL = VIC_ECM | VIC_DEN | VIC_RSEL | 3;
    *VIC_CONTROL2 = VIC_MCM | VIC_CSEL;
    // Linear Graphics Plane B Counter
    *DTV_PLANEB_START_LO = < < PLANEB;
    *DTV_PLANEB_START_MI = > < PLANEB;
    *DTV_PLANEB_START_HI = < > PLANEB;
    *DTV_PLANEB_STEP = 8;
    *DTV_PLANEB_MODULO_LO = 0;
    *DTV_PLANEB_MODULO_HI = 0;
    // Border color
    *BORDERCOL = $00;
    // DTV Palette - Grey Tones
    for(byte i : 0..$f) {
        DTV_PALETTE[i] = i;
    }

    // 320x200 8bpp pixels for Plane B
    byte gfxbCpuBank = (byte)(PLANEB/$4000);
    dtvSetCpuBankSegment1(gfxbCpuBank++);
    byte* gfxb = $4000;
    for(byte y : 0..199) {
        for (word x : 0..319) {
            // If we have crossed to $8000 increase the CPU BANK segment and reset to $4000
            if(gfxb==$8000) {
                dtvSetCpuBankSegment1(gfxbCpuBank++);
                gfxb = $4000;
            }
            byte c = (byte)(x+y);
            *gfxb++ = c;
        }
    }
    // Reset CPU BANK segment to $4000
    dtvSetCpuBankSegment1((byte)($4000/$4000));
    // Wait for keypress
    while(true) {
        if(keyboard_key_pressed(KEY_SPACE)!=0) {
            return;
        }
    }
}

Importing c64dtv.kc
PARSING src/test/java/dk/camelot64/kickc/test/kc/c64dtv.kc
// C64 DTV version 2 Registers and Constants
//
// Sources
// (J) https://www.c64-wiki.com/wiki/C64DTV_Programming_Guide
// (H) http://dtvhacking.cbm8bit.com/dtv_wiki/images/d/d9/Dtv_registers_full.txt

import "c64.kc"

// Feature enables or disables the extra C64 DTV features
const byte* DTV_FEATURE = $d03f;
const byte DTV_FEATURE_ENABLE = 1;
const byte DTV_FEATURE_DISABLE_TIL_RESET = 2;

// Controls the graphics modes of the C64 DTV
const byte* DTV_CONTROL = $d03c;
const byte DTV_CONTROL_LINEAR_ADDRESSING_ON = $01;
const byte DTV_CONTROL_BORDER_OFF = $02;
const byte DTV_CONTROL_HIGHCOLOR_ON = $04;
const byte DTV_CONTROL_OVERSCAN_ON = $08;
const byte DTV_CONTROL_COLORRAM_OFF = $10;
const byte DTV_CONTROL_BADLINE_OFF = $20;
const byte DTV_CONTROL_CHUNKY_ON = $40;

// Defines colors for the 16 first colors ($00-$0f)
const byte* DTV_PALETTE = $d200;

// Default vallues for the palette
byte[16] DTV_PALETTE_DEFAULT = { $00, $0f, $36, $be, $58, $db, $86, $ff, $29, $26, $3b, $05, $07, $df, $9a, $0a };

// Linear Graphics Plane A Counter Control
const byte* DTV_PLANEA_START_LO = $d03a;
const byte* DTV_PLANEA_START_MI = $d03b;
const byte* DTV_PLANEA_START_HI = $d045;
const byte* DTV_PLANEA_STEP = $d046;
const byte* DTV_PLANEA_MODULO_LO = $d038;
const byte* DTV_PLANEA_MODULO_HI = $d039;

// Linear Graphics Plane B Counter Control
const byte* DTV_PLANEB_START_LO = $d049;
const byte* DTV_PLANEB_START_MI = $d04a;
const byte* DTV_PLANEB_START_HI = $d04b;
const byte* DTV_PLANEB_STEP = $d04c;
const byte* DTV_PLANEB_MODULO_LO = $d047;
const byte* DTV_PLANEB_MODULO_HI = $d048;

// Select memory bank where sprite data is fetched from (bits 5:0) - source only (J)
// Memory address of Sprite RAM is SpriteBank*$10000
const byte* DTV_SPRITE_BANK = $d04d;

// Select memory bank where color data is fetched from (bits 11:0)
// Memory address of Color RAM is ColorBank*$400
const byte* DTV_COLOR_BANK_LO = $d036;
const byte* DTV_COLOR_BANK_HI = $d037;

const dword DTV_COLOR_BANK_DEFAULT = $1d800;

// Selects memory bank for normal VIC color mode and lower data for high color modes. (bits 5:0)
// Memory address of VIC Graphics is GraphicsBank*$10000
const byte* DTV_GRAPHICS_VIC_BANK = $d03d;
// Selects memory bank for upper data for high color modes. (bits 5:0) - source only (H)
const byte* DTV_GRAPHICS_HICOL_BANK = $d03e;

// Set the memory pointed to by CPU BANK 1 SEGMENT ($4000-$7fff)
// This sets which actual memory is addressed when the CPU reads/writes to $4000-$7fff
// The actual memory addressed will be $4000*cpuSegmentIdx
void dtvSetCpuBankSegment1(byte cpuBankIdx) {
    // Move CPU BANK 1 SEGMENT ($4000-$7fff)
    byte* cpuBank = $ff;
    *cpuBank = cpuBankIdx;
    asm {
        // SAC $dd - A register points to 13 BANK 1 segment
        .byte $32, $dd
        // LDA $ff - Set CPU BANK 1 SEGMENT ($4000-$7fff) to ($ff)*$4000
        lda $ff
        // SAC $00 - A register points to 0 ACCUMULATOR
        .byte $32, $00
    }
}

Importing c64.kc
PARSING src/test/java/dk/camelot64/kickc/test/kc/c64.kc
// Commodore 64 Registers and Constants

const byte* PROCPORT = $01;

const byte* CHARGEN = $d000;

const byte* SPRITES_XPOS = $d000;
const byte* SPRITES_YPOS = $d001;
const byte* SPRITES_XMSB = $d010;
const byte* RASTER = $d012;
const byte* SPRITES_ENABLE = $d015;
const byte* SPRITES_EXPAND_Y = $d017;
const byte* SPRITES_PRIORITY = $d01b;
const byte* SPRITES_MC = $d01c;
const byte* SPRITES_EXPAND_X = $d01d;
const byte* BORDERCOL = $d020;
const byte* BGCOL = $d021;
const byte* BGCOL1 = $d021;
const byte* BGCOL2 = $d022;
const byte* BGCOL3 = $d023;
const byte* BGCOL4 = $d024;
const byte* SPRITES_MC1 = $d025;
const byte* SPRITES_MC2 = $d026;
const byte* SPRITES_COLS = $d027;

const byte* VIC_CONTROL = $d011;
const byte* D011 = $d011;
const byte VIC_RST8 = %10000000;
const byte VIC_ECM =  %01000000;
const byte VIC_BMM =  %00100000;
const byte VIC_DEN =  %00010000;
const byte VIC_RSEL =  %00001000;

const byte* VIC_CONTROL2 = $d016;
const byte* D016 = $d016;
const byte VIC_MCM =  %00010000;
const byte VIC_CSEL = %00001000;

const byte* D018 = $d018;
const byte* VIC_MEMORY = $d018;

const byte* COLS = $d800;

// CIA#1 Port A: keyboard matrix columns and joystick #2
const byte* CIA1_PORT_A = $dc00;
// CIA#1 Port B: keyboard matrix rows and joystick #1.
const byte* CIA1_PORT_B = $dc01;
// CIA #1 Port A data direction register.
const byte* CIA1_PORT_A_DDR = $dc02;
// CIA #1 Port B data direction register.
const byte* CIA1_PORT_B_DDR = $dc03;

// CIA#2 Port A: Serial bus, RS-232, VIC memory bank
const byte* CIA2_PORT_A = $dd00;
// CIA#2 Port B: RS-232
const byte* CIA2_PORT_B = $dd01;
// CIA #2 Port A data direction register.
const byte* CIA2_PORT_A_DDR = $dd02;
// CIA #2 Port B data direction register.
const byte* CIA2_PORT_B_DDR = $dd03;

const byte BLACK = $0;
const byte WHITE = $1;
const byte RED = $2;
const byte CYAN = $3;
const byte PURPLE = $4;
const byte GREEN = $5;
const byte BLUE = $6;
const byte YELLOW = $7;
const byte ORANGE = $8;
const byte BROWN = $9;
const byte PINK = $a;
const byte DARK_GREY= $b;
const byte GREY = $c;
const byte LIGHT_GREEN = $d;
const byte LIGHT_BLUE = $e;
const byte LIGHT_GREY = $f;

Importing print.kc
PARSING src/test/java/dk/camelot64/kickc/test/kc/print.kc

byte* print_screen = $0400;
byte* print_line_cursor = print_screen;
byte* print_char_cursor = print_line_cursor;

// Print a number of zero-terminated strings, each followed by a newline.
// The sequence of lines is terminated by another zero.
void print_str_lines(byte* str) {
    while(*str!='@') {
        do {
            byte ch = *(str++);
            if(ch!='@') {
                *(print_char_cursor++) = ch;
            }
        } while (ch!='@');
        print_ln();
    }
}

// Print a zero-terminated string followed by a newline
void print_str_ln(byte* str) {
    print_str(str);
    print_ln();
}

// Print a zero-terminated string
void print_str(byte* str) {
    while(*str!='@') {
        *(print_char_cursor++) = *(str++);
    }
}

// Print a string at a specific screen position
void print_str_at(byte* str, byte* at) {
    while(*str!='@') {
        *(at++) = *(str++);
    }
}

// Print a newline
void print_ln() {
    do {
        print_line_cursor = print_line_cursor + $28;
    } while (print_line_cursor<print_char_cursor);
    print_char_cursor = print_line_cursor;
}

// Print a signed word as HEX
void print_sword(signed word w) {
    if(w<0) {
        print_char('-');
        w = -w;
    }
    print_word((word)w);
}

// Print a signed byte as HEX
void print_sbyte(signed byte b) {
    if(b<0) {
        print_char('-');
        b = -b;
    }
    print_byte((byte)b);
}

// Print a word as HEX
void print_word(word w) {
    print_byte(>w);
    print_byte(<w);
}

// Print a dword as HEX
void print_dword(dword dw) {
    print_word(>dw);
    print_word(<dw);
}

// Print a signed dword as HEX
void print_sdword(signed dword dw) {
    if(dw<0) {
        print_char('-');
        dw = -dw;
    }
    print_dword((dword)dw);
}

// Print a byte as HEX
void print_byte(byte b) {
    // Table of hexadecimal digits
    const byte[] hextab = "0123456789abcdef";
    print_char(hextab[b>>4]);
    print_char(hextab[b&$f]);
}

// Print a single char
void print_char(byte ch) {
    *(print_char_cursor++) = ch;
}

// Clear the screen. Also resets current line/char cursor.
void print_cls() {
    for(byte* sc=print_screen; sc!=print_screen+1000; sc++) {
        *sc = ' ';
    }
    print_line_cursor = print_screen;
    print_char_cursor = print_line_cursor;
}

// Set the screen to print on. Also resets current line/char cursor.
void print_set_screen(byte* screen) {
    print_screen = screen;
    print_line_cursor = print_screen;
    print_char_cursor = print_line_cursor;
}

Adding pre/post-modifier (byte*) print_str_lines::str ← ++ (byte*) print_str_lines::str
Adding pre/post-modifier (byte*) print_char_cursor ← ++ (byte*) print_char_cursor
Adding pre/post-modifier (byte*) print_char_cursor ← ++ (byte*) print_char_cursor
Adding pre/post-modifier (byte*) print_str::str ← ++ (byte*) print_str::str
Adding pre/post-modifier (byte*) print_str_at::at ← ++ (byte*) print_str_at::at
Adding pre/post-modifier (byte*) print_str_at::str ← ++ (byte*) print_str_at::str
Adding pre/post-modifier (byte*) print_char_cursor ← ++ (byte*) print_char_cursor
Adding pre/post-modifier (byte*) print_cls::sc ← ++ (byte*) print_cls::sc
Importing keyboard.kc
PARSING src/test/java/dk/camelot64/kickc/test/kc/keyboard.kc
// Simple Keyboard Input Library
// C64 Keyboard Matrix Reference - from http://codebase64.org/doku.php?id=base:reading_the_keyboard
// Keyboard Codes are %00rrrccc, where rrr is the row ID (0-7) and ccc is the column ID (0-7)
// +----+----------------------+-------------------------------------------------------------------------------------------------------+
// |    | Write                |                                Read $dc01 (C64 screen code in parenthesis):                              |
// |row:| $dc00: row bits      +------------+------------+------------+------------+------------+------------+------------+------------+
// |    |                      |   BIT 7    |   BIT 6    |   BIT 5    |   BIT 4    |   BIT 3    |   BIT 2    |   BIT 1    |   BIT 0    |
// +----+----------------------+------------+------------+------------+------------+------------+------------+------------+------------+
// |0.  | #%11111110 (254/$fe) | DOWN  ($  )|   F5  ($  )|   F3  ($  )|   F1  ($  )|   F7  ($  )| RIGHT ($  )| RETURN($  )|DELETE ($  )|
// |1.  | #%11111101 (253/$fd) |LEFT-SH($  )|   e   ($05)|   s   ($13)|   z   ($1a)|   4   ($34)|   a   ($01)|   w   ($17)|   3   ($33)|
// |2.  | #%11111011 (251/$fb) |   x   ($18)|   t   ($14)|   f   ($06)|   c   ($03)|   6   ($36)|   d   ($04)|   r   ($12)|   5   ($35)|
// |3.  | #%11110111 (247/$f7) |   v   ($16)|   u   ($15)|   h   ($08)|   b   ($02)|   8   ($38)|   g   ($07)|   y   ($19)|   7   ($37)|
// |4.  | #%11101111 (239/$ef) |   n   ($0e)|   o   ($0f)|   k   ($0b)|   m   ($0d)|   0   ($30)|   j   ($0a)|   i   ($09)|   9   ($39)|
// |5.  | #%11011111 (223/$df) |   ,   ($2c)|   @   ($00)|   :   ($3a)|   .   ($2e)|   -   ($2d)|   l   ($0c)|   p   ($10)|   +   ($2b)|
// |6.  | #%10111111 (191/$bf) |   /   ($2f)|   ^   ($1e)|   =   ($3d)|RGHT-SH($  )|  HOME ($  )|   ;   ($3b)|   *   ($2a)|   £   ($1c)|
// |7.  | #%01111111 (127/$7f) | STOP  ($  )|   q   ($11)|COMMODR($  )| SPACE ($20)|   2   ($32)|CONTROL($  )|  <-   ($1f)|   1   ($31)|
// +----+----------------------+------------+------------+------------+------------+------------+------------+------------+------------+

import "c64.kc"

// Keyboard Codes for all 63 keys.
// Keyboard Codes are %00rrrccc, where rrr is the row ID (0-7) and ccc is the column ID (0-7).
// See C64 Keyboard Matrix Reference http://codebase64.org/doku.php?id=base:reading_the_keyboard
const byte KEY_DEL          = $00;
const byte KEY_RETURN       = $01;
const byte KEY_CRSR_RIGHT   = $02;
const byte KEY_F7           = $03;
const byte KEY_F1           = $04;
const byte KEY_F3           = $05;
const byte KEY_F5           = $06;
const byte KEY_CRSR_DOWN    = $07;
const byte KEY_3            = $08;
const byte KEY_W            = $09;
const byte KEY_A            = $0a;
const byte KEY_4            = $0b;
const byte KEY_Z            = $0c;
const byte KEY_S            = $0d;
const byte KEY_E            = $0e;
const byte KEY_LSHIFT       = $0f;
const byte KEY_5            = $10;
const byte KEY_R            = $11;
const byte KEY_D            = $12;
const byte KEY_6            = $13;
const byte KEY_C            = $14;
const byte KEY_F            = $15;
const byte KEY_T            = $16;
const byte KEY_X            = $17;
const byte KEY_7            = $18;
const byte KEY_Y            = $19;
const byte KEY_G            = $1a;
const byte KEY_8            = $1b;
const byte KEY_B            = $1c;
const byte KEY_H            = $1d;
const byte KEY_U            = $1e;
const byte KEY_V            = $1f;
const byte KEY_9            = $20;
const byte KEY_I            = $21;
const byte KEY_J            = $22;
const byte KEY_0            = $23;
const byte KEY_M            = $24;
const byte KEY_K            = $25;
const byte KEY_O            = $26;
const byte KEY_N            = $27;
const byte KEY_PLUS         = $28;
const byte KEY_P            = $29;
const byte KEY_L            = $2a;
const byte KEY_MINUS        = $2b;
const byte KEY_DOT          = $2c;
const byte KEY_COLON        = $2d;
const byte KEY_AT           = $2e;
const byte KEY_COMMA        = $2f;
const byte KEY_POUND        = $30;
const byte KEY_ASTERISK     = $31;
const byte KEY_SEMICOLON    = $32;
const byte KEY_HOME         = $33;
const byte KEY_RSHIFT       = $34;
const byte KEY_EQUALS       = $35;
const byte KEY_ARROW_UP     = $36;
const byte KEY_SLASH        = $37;
const byte KEY_1            = $38;
const byte KEY_ARROW_LEFT   = $39;
const byte KEY_CTRL         = $3a;
const byte KEY_2            = $3b;
const byte KEY_SPACE        = $3c;
const byte KEY_COMMODORE    = $3d;
const byte KEY_Q            = $3e;
const byte KEY_RUNSTOP      = $3f;

// Keycodes for each screen code character from $00-$3f.
// Chars that do not have an unmodified keycode return $3f (representing RUN/STOP).
const byte[] keyboard_char_keycodes = {
    /*@*/KEY_AT,    /*a*/KEY_A,   /*b*/KEY_B,        /*c*/KEY_C,         /*d*/KEY_D,     /*e*/KEY_E,      /*f*/KEY_F,        /*g*/KEY_G,
    /*h*/KEY_H,     /*i*/KEY_I,   /*j*/KEY_J,        /*k*/KEY_K,         /*l*/KEY_L,     /*m*/KEY_M,      /*n*/KEY_N,        /*o*/KEY_O,
    /*p*/KEY_P,     /*q*/KEY_Q,   /*r*/KEY_R,        /*s*/KEY_S,         /*t*/KEY_T,     /*u*/KEY_U,      /*v*/KEY_V,        /*w*/KEY_W,
    /*x*/KEY_X,     /*y*/KEY_Y,   /*z*/KEY_Z,        /*[*/$3f,           /*£*/KEY_POUND, /*]*/$3f,        /*^*/KEY_ARROW_UP, /*<-*/KEY_ARROW_LEFT,
    /* */KEY_SPACE, /*!*/$3f,     /*"*/$3f,          /*#*/$3f,           /*$*/$3f,       /*%*/$3f,        /*&*/$3f,          /*´*/$3f,
    /*(*/$3f,       /*)*/$3f,     /***/KEY_ASTERISK, /*+*/KEY_PLUS,      /*,*/KEY_COMMA, /*-*/KEY_MINUS,  /*.*/KEY_DOT,      /*/*/KEY_SLASH,
    /*0*/KEY_0,     /*1*/KEY_1,   /*2*/KEY_2,        /*3*/KEY_3,         /*4*/KEY_4,     /*5*/KEY_5,      /*6*/KEY_6,        /*7*/KEY_7,
    /*8*/KEY_8,     /*9*/KEY_9,   /*:*/KEY_COLON,    /*;*/KEY_SEMICOLON, /*<*/$3f,       /*=*/KEY_EQUALS, /*>*/$3f,          /*?*/$3f
};

// Keyboard row bitmask as expected by CIA#1 Port A when reading a specific keyboard matrix row (rows are numbered 0-7)
byte[8] keyboard_matrix_row_bitmask = { %11111110, %11111101, %11111011, %11110111, %11101111, %11011111, %10111111, %01111111 };

// Keyboard matrix column bitmasks for a specific keybooard matrix column when reading the keyboard. (columns are numbered 0-7)
byte[] keyboard_matrix_col_bitmask = { %00000001, %00000010, %00000100, %00001000, %00010000, %00100000, %01000000, %10000000 };

// Initialize keyboard reading by setting CIA#$ Data Direction Registers
void keyboard_init() {
    // Keyboard Matrix Columns Write Mode
    *CIA1_PORT_A_DDR = $ff;
    // Keyboard Matrix Columns Read Mode
    *CIA1_PORT_B_DDR = $00;
}
// Read a single row of the keyboard matrix
// The row ID (0-7) of the keyboard matrix row to read. See the C64 key matrix for row IDs.
// Returns the keys pressed on the row as bits according to the C64 key matrix.
// Notice: If the C64 normal interrupt is still running it will occasionally interrupt right between the read & write
// leading to erroneous readings. You must disable kill the normal interrupt or sei/cli around calls to the keyboard matrix reader.
byte keyboard_matrix_read(byte rowid) {
    *CIA1_PORT_A = keyboard_matrix_row_bitmask[rowid];
    byte row_pressed_bits = ~*CIA1_PORT_B;
    return row_pressed_bits;
}

// Determines whether a specific key is currently pressed
// The key is a keyboard code defined from the keyboard matrix by %00rrrccc, where rrr is the row ID (0-7) and ccc is the column ID (0-7)
// All keys exist as as KEY_XXX constants.
// Returns zero if the key is not pressed and a non-zero value if the key is currently pressed
byte keyboard_key_pressed(byte key) {
    byte colidx = key&7;
    byte rowidx = key>>3;
    return keyboard_matrix_read(rowidx) & keyboard_matrix_col_bitmask[colidx];
}

// Get the keycode corresponding to a specific screen code character
// ch is the character to get the key code for ($00-$3f)
// Returns the key code corresponding to the passed character. Only characters with a non-shifted key are handled.
// If there is no non-shifted key representing the char $3f is returned (representing RUN/STOP) .
byte keyboard_get_keycode(byte ch) {
    return keyboard_char_keycodes[ch];
}
Importing c64.kc
Adding pre/post-modifier (byte*) menu::c ← ++ (byte*) menu::c
Adding pre/post-modifier (byte*) mode_stdchar::col ← ++ (byte*) mode_stdchar::col
Adding pre/post-modifier (byte*) mode_stdchar::ch ← ++ (byte*) mode_stdchar::ch
Adding pre/post-modifier (byte*) mode_ecmchar::col ← ++ (byte*) mode_ecmchar::col
Adding pre/post-modifier (byte*) mode_ecmchar::ch ← ++ (byte*) mode_ecmchar::ch
Adding pre/post-modifier (byte*) mode_mcchar::col ← ++ (byte*) mode_mcchar::col
Adding pre/post-modifier (byte*) mode_mcchar::ch ← ++ (byte*) mode_mcchar::ch
Adding pre/post-modifier (byte*) mode_hicolstdchar::col ← ++ (byte*) mode_hicolstdchar::col
Adding pre/post-modifier (byte*) mode_hicolstdchar::ch ← ++ (byte*) mode_hicolstdchar::ch
Adding pre/post-modifier (byte*) mode_hicolecmchar::col ← ++ (byte*) mode_hicolecmchar::col
Adding pre/post-modifier (byte*) mode_hicolecmchar::ch ← ++ (byte*) mode_hicolecmchar::ch
Adding pre/post-modifier (byte*) mode_hicolmcchar::col ← ++ (byte*) mode_hicolmcchar::col
Adding pre/post-modifier (byte*) mode_hicolmcchar::ch ← ++ (byte*) mode_hicolmcchar::ch
Adding pre/post-modifier (byte*) mode_twoplanebitmap::col ← ++ (byte*) mode_twoplanebitmap::col
Adding pre/post-modifier (byte*) mode_twoplanebitmap::gfxa ← ++ (byte*) mode_twoplanebitmap::gfxa
Adding pre/post-modifier (byte*) mode_twoplanebitmap::gfxa ← ++ (byte*) mode_twoplanebitmap::gfxa
Adding pre/post-modifier (byte*) mode_twoplanebitmap::gfxb ← ++ (byte*) mode_twoplanebitmap::gfxb
Adding pre/post-modifier (byte*) mode_sixsfred::col ← ++ (byte*) mode_sixsfred::col
Adding pre/post-modifier (byte*) mode_sixsfred::gfxa ← ++ (byte*) mode_sixsfred::gfxa
Adding pre/post-modifier (byte*) mode_sixsfred::gfxb ← ++ (byte*) mode_sixsfred::gfxb
Adding pre/post-modifier (byte*) mode_sixsfred2::col ← ++ (byte*) mode_sixsfred2::col
Adding pre/post-modifier (byte*) mode_sixsfred2::gfxa ← ++ (byte*) mode_sixsfred2::gfxa
Adding pre/post-modifier (byte*) mode_sixsfred2::gfxb ← ++ (byte*) mode_sixsfred2::gfxb
Adding pre/post-modifier (byte*) mode_8bpppixelcell::gfxa ← ++ (byte*) mode_8bpppixelcell::gfxa
Adding pre/post-modifier (byte*) mode_8bpppixelcell::chargen ← ++ (byte*) mode_8bpppixelcell::chargen
Adding pre/post-modifier (byte*) mode_8bpppixelcell::gfxb ← ++ (byte*) mode_8bpppixelcell::gfxb
Adding pre/post-modifier (byte) mode_8bpppixelcell::col ← ++ (byte) mode_8bpppixelcell::col
Adding pre/post-modifier (byte) mode_8bppchunkybmm::gfxbCpuBank ← ++ (byte) mode_8bppchunkybmm::gfxbCpuBank
Adding pre/post-modifier (byte) mode_8bppchunkybmm::gfxbCpuBank ← ++ (byte) mode_8bppchunkybmm::gfxbCpuBank
Adding pre/post-modifier (byte*) mode_8bppchunkybmm::gfxb ← ++ (byte*) mode_8bppchunkybmm::gfxb

STATEMENTS
  (byte*) PROCPORT ← (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte*) CHARGEN ← (word/dword/signed dword) 53248
  (byte*) SPRITES_XPOS ← (word/dword/signed dword) 53248
  (byte*) SPRITES_YPOS ← (word/dword/signed dword) 53249
  (byte*) SPRITES_XMSB ← (word/dword/signed dword) 53264
  (byte*) RASTER ← (word/dword/signed dword) 53266
  (byte*) SPRITES_ENABLE ← (word/dword/signed dword) 53269
  (byte*) SPRITES_EXPAND_Y ← (word/dword/signed dword) 53271
  (byte*) SPRITES_PRIORITY ← (word/dword/signed dword) 53275
  (byte*) SPRITES_MC ← (word/dword/signed dword) 53276
  (byte*) SPRITES_EXPAND_X ← (word/dword/signed dword) 53277
  (byte*) BORDERCOL ← (word/dword/signed dword) 53280
  (byte*) BGCOL ← (word/dword/signed dword) 53281
  (byte*) BGCOL1 ← (word/dword/signed dword) 53281
  (byte*) BGCOL2 ← (word/dword/signed dword) 53282
  (byte*) BGCOL3 ← (word/dword/signed dword) 53283
  (byte*) BGCOL4 ← (word/dword/signed dword) 53284
  (byte*) SPRITES_MC1 ← (word/dword/signed dword) 53285
  (byte*) SPRITES_MC2 ← (word/dword/signed dword) 53286
  (byte*) SPRITES_COLS ← (word/dword/signed dword) 53287
  (byte*) VIC_CONTROL ← (word/dword/signed dword) 53265
  (byte*) D011 ← (word/dword/signed dword) 53265
  (byte) VIC_RST8 ← (byte/word/signed word/dword/signed dword) 128
  (byte) VIC_ECM ← (byte/signed byte/word/signed word/dword/signed dword) 64
  (byte) VIC_BMM ← (byte/signed byte/word/signed word/dword/signed dword) 32
  (byte) VIC_DEN ← (byte/signed byte/word/signed word/dword/signed dword) 16
  (byte) VIC_RSEL ← (byte/signed byte/word/signed word/dword/signed dword) 8
  (byte*) VIC_CONTROL2 ← (word/dword/signed dword) 53270
  (byte*) D016 ← (word/dword/signed dword) 53270
  (byte) VIC_MCM ← (byte/signed byte/word/signed word/dword/signed dword) 16
  (byte) VIC_CSEL ← (byte/signed byte/word/signed word/dword/signed dword) 8
  (byte*) D018 ← (word/dword/signed dword) 53272
  (byte*) VIC_MEMORY ← (word/dword/signed dword) 53272
  (byte*) COLS ← (word/dword/signed dword) 55296
  (byte*) CIA1_PORT_A ← (word/dword/signed dword) 56320
  (byte*) CIA1_PORT_B ← (word/dword/signed dword) 56321
  (byte*) CIA1_PORT_A_DDR ← (word/dword/signed dword) 56322
  (byte*) CIA1_PORT_B_DDR ← (word/dword/signed dword) 56323
  (byte*) CIA2_PORT_A ← (word/dword/signed dword) 56576
  (byte*) CIA2_PORT_B ← (word/dword/signed dword) 56577
  (byte*) CIA2_PORT_A_DDR ← (word/dword/signed dword) 56578
  (byte*) CIA2_PORT_B_DDR ← (word/dword/signed dword) 56579
  (byte) BLACK ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) WHITE ← (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte) RED ← (byte/signed byte/word/signed word/dword/signed dword) 2
  (byte) CYAN ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (byte) PURPLE ← (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte) GREEN ← (byte/signed byte/word/signed word/dword/signed dword) 5
  (byte) BLUE ← (byte/signed byte/word/signed word/dword/signed dword) 6
  (byte) YELLOW ← (byte/signed byte/word/signed word/dword/signed dword) 7
  (byte) ORANGE ← (byte/signed byte/word/signed word/dword/signed dword) 8
  (byte) BROWN ← (byte/signed byte/word/signed word/dword/signed dword) 9
  (byte) PINK ← (byte/signed byte/word/signed word/dword/signed dword) 10
  (byte) DARK_GREY ← (byte/signed byte/word/signed word/dword/signed dword) 11
  (byte) GREY ← (byte/signed byte/word/signed word/dword/signed dword) 12
  (byte) LIGHT_GREEN ← (byte/signed byte/word/signed word/dword/signed dword) 13
  (byte) LIGHT_BLUE ← (byte/signed byte/word/signed word/dword/signed dword) 14
  (byte) LIGHT_GREY ← (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte*) DTV_FEATURE ← (word/dword/signed dword) 53311
  (byte) DTV_FEATURE_ENABLE ← (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte) DTV_FEATURE_DISABLE_TIL_RESET ← (byte/signed byte/word/signed word/dword/signed dword) 2
  (byte*) DTV_CONTROL ← (word/dword/signed dword) 53308
  (byte) DTV_CONTROL_LINEAR_ADDRESSING_ON ← (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte) DTV_CONTROL_BORDER_OFF ← (byte/signed byte/word/signed word/dword/signed dword) 2
  (byte) DTV_CONTROL_HIGHCOLOR_ON ← (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte) DTV_CONTROL_OVERSCAN_ON ← (byte/signed byte/word/signed word/dword/signed dword) 8
  (byte) DTV_CONTROL_COLORRAM_OFF ← (byte/signed byte/word/signed word/dword/signed dword) 16
  (byte) DTV_CONTROL_BADLINE_OFF ← (byte/signed byte/word/signed word/dword/signed dword) 32
  (byte) DTV_CONTROL_CHUNKY_ON ← (byte/signed byte/word/signed word/dword/signed dword) 64
  (byte*) DTV_PALETTE ← (word/dword/signed dword) 53760
  (byte[16]) DTV_PALETTE_DEFAULT ← { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 15, (byte/signed byte/word/signed word/dword/signed dword) 54, (byte/word/signed word/dword/signed dword) 190, (byte/signed byte/word/signed word/dword/signed dword) 88, (byte/word/signed word/dword/signed dword) 219, (byte/word/signed word/dword/signed dword) 134, (byte/word/signed word/dword/signed dword) 255, (byte/signed byte/word/signed word/dword/signed dword) 41, (byte/signed byte/word/signed word/dword/signed dword) 38, (byte/signed byte/word/signed word/dword/signed dword) 59, (byte/signed byte/word/signed word/dword/signed dword) 5, (byte/signed byte/word/signed word/dword/signed dword) 7, (byte/word/signed word/dword/signed dword) 223, (byte/word/signed word/dword/signed dword) 154, (byte/signed byte/word/signed word/dword/signed dword) 10 }
  (byte*) DTV_PLANEA_START_LO ← (word/dword/signed dword) 53306
  (byte*) DTV_PLANEA_START_MI ← (word/dword/signed dword) 53307
  (byte*) DTV_PLANEA_START_HI ← (word/dword/signed dword) 53317
  (byte*) DTV_PLANEA_STEP ← (word/dword/signed dword) 53318
  (byte*) DTV_PLANEA_MODULO_LO ← (word/dword/signed dword) 53304
  (byte*) DTV_PLANEA_MODULO_HI ← (word/dword/signed dword) 53305
  (byte*) DTV_PLANEB_START_LO ← (word/dword/signed dword) 53321
  (byte*) DTV_PLANEB_START_MI ← (word/dword/signed dword) 53322
  (byte*) DTV_PLANEB_START_HI ← (word/dword/signed dword) 53323
  (byte*) DTV_PLANEB_STEP ← (word/dword/signed dword) 53324
  (byte*) DTV_PLANEB_MODULO_LO ← (word/dword/signed dword) 53319
  (byte*) DTV_PLANEB_MODULO_HI ← (word/dword/signed dword) 53320
  (byte*) DTV_SPRITE_BANK ← (word/dword/signed dword) 53325
  (byte*) DTV_COLOR_BANK_LO ← (word/dword/signed dword) 53302
  (byte*) DTV_COLOR_BANK_HI ← (word/dword/signed dword) 53303
  (dword) DTV_COLOR_BANK_DEFAULT ← (dword/signed dword) 120832
  (byte*) DTV_GRAPHICS_VIC_BANK ← (word/dword/signed dword) 53309
  (byte*) DTV_GRAPHICS_HICOL_BANK ← (word/dword/signed dword) 53310
proc (void()) dtvSetCpuBankSegment1((byte) dtvSetCpuBankSegment1::cpuBankIdx)
  (byte*) dtvSetCpuBankSegment1::cpuBank ← (byte/word/signed word/dword/signed dword) 255
  *((byte*) dtvSetCpuBankSegment1::cpuBank) ← (byte) dtvSetCpuBankSegment1::cpuBankIdx
  asm { .byte$32,$dd lda$ff .byte$32,$00  }
dtvSetCpuBankSegment1::@return:
  return 
endproc // dtvSetCpuBankSegment1()
  (byte*) print_screen ← (word/signed word/dword/signed dword) 1024
  (byte*) print_line_cursor ← (byte*) print_screen
  (byte*) print_char_cursor ← (byte*) print_line_cursor
proc (void()) print_str_lines((byte*) print_str_lines::str)
print_str_lines::@1:
  (boolean~) print_str_lines::$0 ← *((byte*) print_str_lines::str) != (byte) '@'
  if((boolean~) print_str_lines::$0) goto print_str_lines::@2
  goto print_str_lines::@3
print_str_lines::@2:
print_str_lines::@4:
  (byte) print_str_lines::ch ← *((byte*) print_str_lines::str)
  (byte*) print_str_lines::str ← ++ (byte*) print_str_lines::str
  (boolean~) print_str_lines::$1 ← (byte) print_str_lines::ch != (byte) '@'
  (boolean~) print_str_lines::$2 ← ! (boolean~) print_str_lines::$1
  if((boolean~) print_str_lines::$2) goto print_str_lines::@5
  *((byte*) print_char_cursor) ← (byte) print_str_lines::ch
  (byte*) print_char_cursor ← ++ (byte*) print_char_cursor
print_str_lines::@5:
  (boolean~) print_str_lines::$3 ← (byte) print_str_lines::ch != (byte) '@'
  if((boolean~) print_str_lines::$3) goto print_str_lines::@4
  (void~) print_str_lines::$4 ← call print_ln 
  goto print_str_lines::@1
print_str_lines::@3:
print_str_lines::@return:
  return 
endproc // print_str_lines()
proc (void()) print_str_ln((byte*) print_str_ln::str)
  (void~) print_str_ln::$0 ← call print_str (byte*) print_str_ln::str 
  (void~) print_str_ln::$1 ← call print_ln 
print_str_ln::@return:
  return 
endproc // print_str_ln()
proc (void()) print_str((byte*) print_str::str)
print_str::@1:
  (boolean~) print_str::$0 ← *((byte*) print_str::str) != (byte) '@'
  if((boolean~) print_str::$0) goto print_str::@2
  goto print_str::@3
print_str::@2:
  *((byte*) print_char_cursor) ← *((byte*) print_str::str)
  (byte*) print_char_cursor ← ++ (byte*) print_char_cursor
  (byte*) print_str::str ← ++ (byte*) print_str::str
  goto print_str::@1
print_str::@3:
print_str::@return:
  return 
endproc // print_str()
proc (void()) print_str_at((byte*) print_str_at::str , (byte*) print_str_at::at)
print_str_at::@1:
  (boolean~) print_str_at::$0 ← *((byte*) print_str_at::str) != (byte) '@'
  if((boolean~) print_str_at::$0) goto print_str_at::@2
  goto print_str_at::@3
print_str_at::@2:
  *((byte*) print_str_at::at) ← *((byte*) print_str_at::str)
  (byte*) print_str_at::at ← ++ (byte*) print_str_at::at
  (byte*) print_str_at::str ← ++ (byte*) print_str_at::str
  goto print_str_at::@1
print_str_at::@3:
print_str_at::@return:
  return 
endproc // print_str_at()
proc (void()) print_ln()
print_ln::@1:
  (byte*~) print_ln::$0 ← (byte*) print_line_cursor + (byte/signed byte/word/signed word/dword/signed dword) 40
  (byte*) print_line_cursor ← (byte*~) print_ln::$0
  (boolean~) print_ln::$1 ← (byte*) print_line_cursor < (byte*) print_char_cursor
  if((boolean~) print_ln::$1) goto print_ln::@1
  (byte*) print_char_cursor ← (byte*) print_line_cursor
print_ln::@return:
  return 
endproc // print_ln()
proc (void()) print_sword((signed word) print_sword::w)
  (boolean~) print_sword::$0 ← (signed word) print_sword::w < (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) print_sword::$1 ← ! (boolean~) print_sword::$0
  if((boolean~) print_sword::$1) goto print_sword::@1
  (void~) print_sword::$2 ← call print_char (byte) '-' 
  (signed word~) print_sword::$3 ← - (signed word) print_sword::w
  (signed word) print_sword::w ← (signed word~) print_sword::$3
print_sword::@1:
  (word~) print_sword::$4 ← ((word)) (signed word) print_sword::w
  (void~) print_sword::$5 ← call print_word (word~) print_sword::$4 
print_sword::@return:
  return 
endproc // print_sword()
proc (void()) print_sbyte((signed byte) print_sbyte::b)
  (boolean~) print_sbyte::$0 ← (signed byte) print_sbyte::b < (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) print_sbyte::$1 ← ! (boolean~) print_sbyte::$0
  if((boolean~) print_sbyte::$1) goto print_sbyte::@1
  (void~) print_sbyte::$2 ← call print_char (byte) '-' 
  (signed byte~) print_sbyte::$3 ← - (signed byte) print_sbyte::b
  (signed byte) print_sbyte::b ← (signed byte~) print_sbyte::$3
print_sbyte::@1:
  (byte~) print_sbyte::$4 ← ((byte)) (signed byte) print_sbyte::b
  (void~) print_sbyte::$5 ← call print_byte (byte~) print_sbyte::$4 
print_sbyte::@return:
  return 
endproc // print_sbyte()
proc (void()) print_word((word) print_word::w)
  (byte~) print_word::$0 ← > (word) print_word::w
  (void~) print_word::$1 ← call print_byte (byte~) print_word::$0 
  (byte~) print_word::$2 ← < (word) print_word::w
  (void~) print_word::$3 ← call print_byte (byte~) print_word::$2 
print_word::@return:
  return 
endproc // print_word()
proc (void()) print_dword((dword) print_dword::dw)
  (word~) print_dword::$0 ← > (dword) print_dword::dw
  (void~) print_dword::$1 ← call print_word (word~) print_dword::$0 
  (word~) print_dword::$2 ← < (dword) print_dword::dw
  (void~) print_dword::$3 ← call print_word (word~) print_dword::$2 
print_dword::@return:
  return 
endproc // print_dword()
proc (void()) print_sdword((signed dword) print_sdword::dw)
  (boolean~) print_sdword::$0 ← (signed dword) print_sdword::dw < (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) print_sdword::$1 ← ! (boolean~) print_sdword::$0
  if((boolean~) print_sdword::$1) goto print_sdword::@1
  (void~) print_sdword::$2 ← call print_char (byte) '-' 
  (signed dword~) print_sdword::$3 ← - (signed dword) print_sdword::dw
  (signed dword) print_sdword::dw ← (signed dword~) print_sdword::$3
print_sdword::@1:
  (dword~) print_sdword::$4 ← ((dword)) (signed dword) print_sdword::dw
  (void~) print_sdword::$5 ← call print_dword (dword~) print_sdword::$4 
print_sdword::@return:
  return 
endproc // print_sdword()
proc (void()) print_byte((byte) print_byte::b)
  (byte[]) print_byte::hextab ← (string) "0123456789abcdef"
  (byte~) print_byte::$0 ← (byte) print_byte::b >> (byte/signed byte/word/signed word/dword/signed dword) 4
  (void~) print_byte::$1 ← call print_char *((byte[]) print_byte::hextab + (byte~) print_byte::$0) 
  (byte~) print_byte::$2 ← (byte) print_byte::b & (byte/signed byte/word/signed word/dword/signed dword) 15
  (void~) print_byte::$3 ← call print_char *((byte[]) print_byte::hextab + (byte~) print_byte::$2) 
print_byte::@return:
  return 
endproc // print_byte()
proc (void()) print_char((byte) print_char::ch)
  *((byte*) print_char_cursor) ← (byte) print_char::ch
  (byte*) print_char_cursor ← ++ (byte*) print_char_cursor
print_char::@return:
  return 
endproc // print_char()
proc (void()) print_cls()
  (byte*) print_cls::sc ← (byte*) print_screen
print_cls::@1:
  *((byte*) print_cls::sc) ← (byte) ' '
  (byte*) print_cls::sc ← ++ (byte*) print_cls::sc
  (byte*~) print_cls::$0 ← (byte*) print_screen + (word/signed word/dword/signed dword) 1000
  (boolean~) print_cls::$1 ← (byte*) print_cls::sc != (byte*~) print_cls::$0
  if((boolean~) print_cls::$1) goto print_cls::@1
  (byte*) print_line_cursor ← (byte*) print_screen
  (byte*) print_char_cursor ← (byte*) print_line_cursor
print_cls::@return:
  return 
endproc // print_cls()
proc (void()) print_set_screen((byte*) print_set_screen::screen)
  (byte*) print_screen ← (byte*) print_set_screen::screen
  (byte*) print_line_cursor ← (byte*) print_screen
  (byte*) print_char_cursor ← (byte*) print_line_cursor
print_set_screen::@return:
  return 
endproc // print_set_screen()
  (byte) KEY_DEL ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) KEY_RETURN ← (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte) KEY_CRSR_RIGHT ← (byte/signed byte/word/signed word/dword/signed dword) 2
  (byte) KEY_F7 ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (byte) KEY_F1 ← (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte) KEY_F3 ← (byte/signed byte/word/signed word/dword/signed dword) 5
  (byte) KEY_F5 ← (byte/signed byte/word/signed word/dword/signed dword) 6
  (byte) KEY_CRSR_DOWN ← (byte/signed byte/word/signed word/dword/signed dword) 7
  (byte) KEY_3 ← (byte/signed byte/word/signed word/dword/signed dword) 8
  (byte) KEY_W ← (byte/signed byte/word/signed word/dword/signed dword) 9
  (byte) KEY_A ← (byte/signed byte/word/signed word/dword/signed dword) 10
  (byte) KEY_4 ← (byte/signed byte/word/signed word/dword/signed dword) 11
  (byte) KEY_Z ← (byte/signed byte/word/signed word/dword/signed dword) 12
  (byte) KEY_S ← (byte/signed byte/word/signed word/dword/signed dword) 13
  (byte) KEY_E ← (byte/signed byte/word/signed word/dword/signed dword) 14
  (byte) KEY_LSHIFT ← (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte) KEY_5 ← (byte/signed byte/word/signed word/dword/signed dword) 16
  (byte) KEY_R ← (byte/signed byte/word/signed word/dword/signed dword) 17
  (byte) KEY_D ← (byte/signed byte/word/signed word/dword/signed dword) 18
  (byte) KEY_6 ← (byte/signed byte/word/signed word/dword/signed dword) 19
  (byte) KEY_C ← (byte/signed byte/word/signed word/dword/signed dword) 20
  (byte) KEY_F ← (byte/signed byte/word/signed word/dword/signed dword) 21
  (byte) KEY_T ← (byte/signed byte/word/signed word/dword/signed dword) 22
  (byte) KEY_X ← (byte/signed byte/word/signed word/dword/signed dword) 23
  (byte) KEY_7 ← (byte/signed byte/word/signed word/dword/signed dword) 24
  (byte) KEY_Y ← (byte/signed byte/word/signed word/dword/signed dword) 25
  (byte) KEY_G ← (byte/signed byte/word/signed word/dword/signed dword) 26
  (byte) KEY_8 ← (byte/signed byte/word/signed word/dword/signed dword) 27
  (byte) KEY_B ← (byte/signed byte/word/signed word/dword/signed dword) 28
  (byte) KEY_H ← (byte/signed byte/word/signed word/dword/signed dword) 29
  (byte) KEY_U ← (byte/signed byte/word/signed word/dword/signed dword) 30
  (byte) KEY_V ← (byte/signed byte/word/signed word/dword/signed dword) 31
  (byte) KEY_9 ← (byte/signed byte/word/signed word/dword/signed dword) 32
  (byte) KEY_I ← (byte/signed byte/word/signed word/dword/signed dword) 33
  (byte) KEY_J ← (byte/signed byte/word/signed word/dword/signed dword) 34
  (byte) KEY_0 ← (byte/signed byte/word/signed word/dword/signed dword) 35
  (byte) KEY_M ← (byte/signed byte/word/signed word/dword/signed dword) 36
  (byte) KEY_K ← (byte/signed byte/word/signed word/dword/signed dword) 37
  (byte) KEY_O ← (byte/signed byte/word/signed word/dword/signed dword) 38
  (byte) KEY_N ← (byte/signed byte/word/signed word/dword/signed dword) 39
  (byte) KEY_PLUS ← (byte/signed byte/word/signed word/dword/signed dword) 40
  (byte) KEY_P ← (byte/signed byte/word/signed word/dword/signed dword) 41
  (byte) KEY_L ← (byte/signed byte/word/signed word/dword/signed dword) 42
  (byte) KEY_MINUS ← (byte/signed byte/word/signed word/dword/signed dword) 43
  (byte) KEY_DOT ← (byte/signed byte/word/signed word/dword/signed dword) 44
  (byte) KEY_COLON ← (byte/signed byte/word/signed word/dword/signed dword) 45
  (byte) KEY_AT ← (byte/signed byte/word/signed word/dword/signed dword) 46
  (byte) KEY_COMMA ← (byte/signed byte/word/signed word/dword/signed dword) 47
  (byte) KEY_POUND ← (byte/signed byte/word/signed word/dword/signed dword) 48
  (byte) KEY_ASTERISK ← (byte/signed byte/word/signed word/dword/signed dword) 49
  (byte) KEY_SEMICOLON ← (byte/signed byte/word/signed word/dword/signed dword) 50
  (byte) KEY_HOME ← (byte/signed byte/word/signed word/dword/signed dword) 51
  (byte) KEY_RSHIFT ← (byte/signed byte/word/signed word/dword/signed dword) 52
  (byte) KEY_EQUALS ← (byte/signed byte/word/signed word/dword/signed dword) 53
  (byte) KEY_ARROW_UP ← (byte/signed byte/word/signed word/dword/signed dword) 54
  (byte) KEY_SLASH ← (byte/signed byte/word/signed word/dword/signed dword) 55
  (byte) KEY_1 ← (byte/signed byte/word/signed word/dword/signed dword) 56
  (byte) KEY_ARROW_LEFT ← (byte/signed byte/word/signed word/dword/signed dword) 57
  (byte) KEY_CTRL ← (byte/signed byte/word/signed word/dword/signed dword) 58
  (byte) KEY_2 ← (byte/signed byte/word/signed word/dword/signed dword) 59
  (byte) KEY_SPACE ← (byte/signed byte/word/signed word/dword/signed dword) 60
  (byte) KEY_COMMODORE ← (byte/signed byte/word/signed word/dword/signed dword) 61
  (byte) KEY_Q ← (byte/signed byte/word/signed word/dword/signed dword) 62
  (byte) KEY_RUNSTOP ← (byte/signed byte/word/signed word/dword/signed dword) 63
  (byte[]) keyboard_char_keycodes ← { (byte) KEY_AT, (byte) KEY_A, (byte) KEY_B, (byte) KEY_C, (byte) KEY_D, (byte) KEY_E, (byte) KEY_F, (byte) KEY_G, (byte) KEY_H, (byte) KEY_I, (byte) KEY_J, (byte) KEY_K, (byte) KEY_L, (byte) KEY_M, (byte) KEY_N, (byte) KEY_O, (byte) KEY_P, (byte) KEY_Q, (byte) KEY_R, (byte) KEY_S, (byte) KEY_T, (byte) KEY_U, (byte) KEY_V, (byte) KEY_W, (byte) KEY_X, (byte) KEY_Y, (byte) KEY_Z, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte) KEY_POUND, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte) KEY_ARROW_UP, (byte) KEY_ARROW_LEFT, (byte) KEY_SPACE, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte) KEY_ASTERISK, (byte) KEY_PLUS, (byte) KEY_COMMA, (byte) KEY_MINUS, (byte) KEY_DOT, (byte) KEY_SLASH, (byte) KEY_0, (byte) KEY_1, (byte) KEY_2, (byte) KEY_3, (byte) KEY_4, (byte) KEY_5, (byte) KEY_6, (byte) KEY_7, (byte) KEY_8, (byte) KEY_9, (byte) KEY_COLON, (byte) KEY_SEMICOLON, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte) KEY_EQUALS, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63 }
  (byte[8]) keyboard_matrix_row_bitmask ← { (byte/word/signed word/dword/signed dword) 254, (byte/word/signed word/dword/signed dword) 253, (byte/word/signed word/dword/signed dword) 251, (byte/word/signed word/dword/signed dword) 247, (byte/word/signed word/dword/signed dword) 239, (byte/word/signed word/dword/signed dword) 223, (byte/word/signed word/dword/signed dword) 191, (byte/signed byte/word/signed word/dword/signed dword) 127 }
  (byte[]) keyboard_matrix_col_bitmask ← { (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 2, (byte/signed byte/word/signed word/dword/signed dword) 4, (byte/signed byte/word/signed word/dword/signed dword) 8, (byte/signed byte/word/signed word/dword/signed dword) 16, (byte/signed byte/word/signed word/dword/signed dword) 32, (byte/signed byte/word/signed word/dword/signed dword) 64, (byte/word/signed word/dword/signed dword) 128 }
proc (void()) keyboard_init()
  *((byte*) CIA1_PORT_A_DDR) ← (byte/word/signed word/dword/signed dword) 255
  *((byte*) CIA1_PORT_B_DDR) ← (byte/signed byte/word/signed word/dword/signed dword) 0
keyboard_init::@return:
  return 
endproc // keyboard_init()
proc (byte()) keyboard_matrix_read((byte) keyboard_matrix_read::rowid)
  *((byte*) CIA1_PORT_A) ← *((byte[8]) keyboard_matrix_row_bitmask + (byte) keyboard_matrix_read::rowid)
  (byte~) keyboard_matrix_read::$0 ← ~ *((byte*) CIA1_PORT_B)
  (byte) keyboard_matrix_read::row_pressed_bits ← (byte~) keyboard_matrix_read::$0
  (byte) keyboard_matrix_read::return ← (byte) keyboard_matrix_read::row_pressed_bits
  goto keyboard_matrix_read::@return
keyboard_matrix_read::@return:
  (byte) keyboard_matrix_read::return ← (byte) keyboard_matrix_read::return
  return (byte) keyboard_matrix_read::return
endproc // keyboard_matrix_read()
proc (byte()) keyboard_key_pressed((byte) keyboard_key_pressed::key)
  (byte~) keyboard_key_pressed::$0 ← (byte) keyboard_key_pressed::key & (byte/signed byte/word/signed word/dword/signed dword) 7
  (byte) keyboard_key_pressed::colidx ← (byte~) keyboard_key_pressed::$0
  (byte~) keyboard_key_pressed::$1 ← (byte) keyboard_key_pressed::key >> (byte/signed byte/word/signed word/dword/signed dword) 3
  (byte) keyboard_key_pressed::rowidx ← (byte~) keyboard_key_pressed::$1
  (byte~) keyboard_key_pressed::$2 ← call keyboard_matrix_read (byte) keyboard_key_pressed::rowidx 
  (byte~) keyboard_key_pressed::$3 ← (byte~) keyboard_key_pressed::$2 & *((byte[]) keyboard_matrix_col_bitmask + (byte) keyboard_key_pressed::colidx)
  (byte) keyboard_key_pressed::return ← (byte~) keyboard_key_pressed::$3
  goto keyboard_key_pressed::@return
keyboard_key_pressed::@return:
  (byte) keyboard_key_pressed::return ← (byte) keyboard_key_pressed::return
  return (byte) keyboard_key_pressed::return
endproc // keyboard_key_pressed()
proc (byte()) keyboard_get_keycode((byte) keyboard_get_keycode::ch)
  (byte) keyboard_get_keycode::return ← *((byte[]) keyboard_char_keycodes + (byte) keyboard_get_keycode::ch)
  goto keyboard_get_keycode::@return
keyboard_get_keycode::@return:
  (byte) keyboard_get_keycode::return ← (byte) keyboard_get_keycode::return
  return (byte) keyboard_get_keycode::return
endproc // keyboard_get_keycode()
proc (void()) main()
  asm { sei  }
  *((byte*) DTV_FEATURE) ← (byte) DTV_FEATURE_ENABLE
main::@1:
  if(true) goto main::@2
  goto main::@3
main::@2:
  (void~) main::$0 ← call menu 
  goto main::@1
main::@3:
main::@return:
  return 
endproc // main()
  (string~) $0 ← (string) "C64DTV Graphics Modes            CCLHBME@" + (string) "                                 OHIIMCC@"
  (string~) $1 ← (string~) $0 + (string) "                                 LUNCMMM@"
  (string~) $2 ← (string~) $1 + (string) "----------------------------------------@"
  (string~) $3 ← (string~) $2 + (string) "1. Standard Char             (V) 0000000@"
  (string~) $4 ← (string~) $3 + (string) "2. Extended Color Char       (V) 0000001@"
  (string~) $5 ← (string~) $4 + (string) "3. Multicolor Char           (V) 0000010@"
  (string~) $6 ← (string~) $5 + (string) "4. Standard Bitmap           (V) 0000100@"
  (string~) $7 ← (string~) $6 + (string) "5. Multicolor Bitmap         (V) 0000110@"
  (string~) $8 ← (string~) $7 + (string) "6. High Color Standard Char  (H) 0001000@"
  (string~) $9 ← (string~) $8 + (string) "7. High Extended Color Char  (H) 0001001@"
  (string~) $10 ← (string~) $9 + (string) "8. High Multicolor Char      (H) 0001010@"
  (string~) $11 ← (string~) $10 + (string) "9. High Multicolor Bitmap    (H) 0001110@"
  (string~) $12 ← (string~) $11 + (string) "a. Sixs Fred 2               (D) 0010111@"
  (string~) $13 ← (string~) $12 + (string) "b. Two Plane Bitmap          (D) 0011101@"
  (string~) $14 ← (string~) $13 + (string) "c. Sixs Fred (2 Plane MC BM) (D) 0011111@"
  (string~) $15 ← (string~) $14 + (string) "d. 8bpp Pixel Cell           (D) 0111011@"
  (string~) $16 ← (string~) $15 + (string) "e. Chunky 8bpp Bitmap        (D) 1111011@"
  (string~) $17 ← (string~) $16 + (string) "----------------------------------------@"
  (string~) $18 ← (string~) $17 + (string) "    (V) vicII (H) vicII+hicol (D) c64dtv@"
  (string~) $19 ← (string~) $18 + (string) "@"
  (byte[]) MENU_TEXT ← (string~) $19
proc (void()) menu()
  (byte*) menu::SCREEN ← (word/dword/signed dword) 32768
  (byte*) menu::CHARSET ← (word/dword/signed dword) 38912
  (dword~) menu::$0 ← ((dword)) (byte*) menu::CHARSET
  (dword~) menu::$1 ← (dword~) menu::$0 / (dword/signed dword) 65536
  (byte~) menu::$2 ← ((byte)) (dword~) menu::$1
  *((byte*) DTV_GRAPHICS_VIC_BANK) ← (byte~) menu::$2
  (dword~) menu::$3 ← (dword) DTV_COLOR_BANK_DEFAULT / (word/signed word/dword/signed dword) 1024
  (word~) menu::$4 ← ((word)) (dword~) menu::$3
  (byte~) menu::$5 ← < (word~) menu::$4
  *((byte*) DTV_COLOR_BANK_LO) ← (byte~) menu::$5
  (dword~) menu::$6 ← (dword) DTV_COLOR_BANK_DEFAULT / (word/signed word/dword/signed dword) 1024
  (word~) menu::$7 ← ((word)) (dword~) menu::$6
  (byte~) menu::$8 ← > (word~) menu::$7
  *((byte*) DTV_COLOR_BANK_HI) ← (byte~) menu::$8
  *((byte*) DTV_CONTROL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) CIA2_PORT_A_DDR) ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (word~) menu::$9 ← ((word)) (byte*) menu::CHARSET
  (word/signed dword/dword~) menu::$10 ← (word~) menu::$9 / (word/signed word/dword/signed dword) 16384
  (byte~) menu::$11 ← ((byte)) (word/signed dword/dword~) menu::$10
  (byte/word/dword~) menu::$12 ← (byte/signed byte/word/signed word/dword/signed dword) 3 ^ (byte~) menu::$11
  *((byte*) CIA2_PORT_A) ← (byte/word/dword~) menu::$12
  (byte~) menu::$13 ← (byte) VIC_DEN | (byte) VIC_RSEL
  (byte/word/dword~) menu::$14 ← (byte~) menu::$13 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL) ← (byte/word/dword~) menu::$14
  *((byte*) VIC_CONTROL2) ← (byte) VIC_CSEL
  (word~) menu::$15 ← ((word)) (byte*) menu::SCREEN
  (word~) menu::$16 ← (word~) menu::$15 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) menu::$17 ← (word~) menu::$16 / (byte/signed byte/word/signed word/dword/signed dword) 64
  (word~) menu::$18 ← ((word)) (byte*) menu::CHARSET
  (word~) menu::$19 ← (word~) menu::$18 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) menu::$20 ← (word~) menu::$19 / (word/signed word/dword/signed dword) 1024
  (word/dword~) menu::$21 ← (word/signed dword/dword~) menu::$17 | (word/signed dword/dword~) menu::$20
  (byte~) menu::$22 ← ((byte)) (word/dword~) menu::$21
  *((byte*) VIC_MEMORY) ← (byte~) menu::$22
  (byte) menu::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
menu::@1:
  *((byte*) DTV_PALETTE + (byte) menu::i) ← *((byte[16]) DTV_PALETTE_DEFAULT + (byte) menu::i)
  (byte) menu::i ← ++ (byte) menu::i
  (boolean~) menu::$23 ← (byte) menu::i != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) menu::$23) goto menu::@1
  (byte*) menu::c ← (byte*) COLS
menu::@2:
  *((byte*) menu::c) ← (byte) LIGHT_GREEN
  (byte*) menu::c ← ++ (byte*) menu::c
  (byte*~) menu::$24 ← (byte*) COLS + (word/signed word/dword/signed dword) 1000
  (boolean~) menu::$25 ← (byte*) menu::c != (byte*~) menu::$24
  if((boolean~) menu::$25) goto menu::@2
  *((byte*) BGCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BORDERCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (void~) menu::$26 ← call print_set_screen (byte*) menu::SCREEN 
  (void~) menu::$27 ← call print_cls 
  (void~) menu::$28 ← call print_str_lines (byte[]) MENU_TEXT 
menu::@3:
  if(true) goto menu::@4
  goto menu::@5
menu::@4:
  (byte~) menu::$29 ← call keyboard_key_pressed (byte) KEY_1 
  (boolean~) menu::$30 ← (byte~) menu::$29 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$31 ← ! (boolean~) menu::$30
  if((boolean~) menu::$31) goto menu::@6
  (void~) menu::$32 ← call mode_stdchar 
  goto menu::@return
menu::@6:
  (byte~) menu::$33 ← call keyboard_key_pressed (byte) KEY_2 
  (boolean~) menu::$34 ← (byte~) menu::$33 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$35 ← ! (boolean~) menu::$34
  if((boolean~) menu::$35) goto menu::@7
  (void~) menu::$36 ← call mode_ecmchar 
  goto menu::@return
menu::@7:
  (byte~) menu::$37 ← call keyboard_key_pressed (byte) KEY_3 
  (boolean~) menu::$38 ← (byte~) menu::$37 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$39 ← ! (boolean~) menu::$38
  if((boolean~) menu::$39) goto menu::@8
  (void~) menu::$40 ← call mode_mcchar 
  goto menu::@return
menu::@8:
  (byte~) menu::$41 ← call keyboard_key_pressed (byte) KEY_6 
  (boolean~) menu::$42 ← (byte~) menu::$41 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$43 ← ! (boolean~) menu::$42
  if((boolean~) menu::$43) goto menu::@9
  (void~) menu::$44 ← call mode_hicolstdchar 
  goto menu::@return
menu::@9:
  (byte~) menu::$45 ← call keyboard_key_pressed (byte) KEY_7 
  (boolean~) menu::$46 ← (byte~) menu::$45 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$47 ← ! (boolean~) menu::$46
  if((boolean~) menu::$47) goto menu::@10
  (void~) menu::$48 ← call mode_hicolecmchar 
  goto menu::@return
menu::@10:
  (byte~) menu::$49 ← call keyboard_key_pressed (byte) KEY_8 
  (boolean~) menu::$50 ← (byte~) menu::$49 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$51 ← ! (boolean~) menu::$50
  if((boolean~) menu::$51) goto menu::@11
  (void~) menu::$52 ← call mode_hicolmcchar 
  goto menu::@return
menu::@11:
  (byte~) menu::$53 ← call keyboard_key_pressed (byte) KEY_A 
  (boolean~) menu::$54 ← (byte~) menu::$53 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$55 ← ! (boolean~) menu::$54
  if((boolean~) menu::$55) goto menu::@12
  (void~) menu::$56 ← call mode_sixsfred2 
  goto menu::@return
menu::@12:
  (byte~) menu::$57 ← call keyboard_key_pressed (byte) KEY_B 
  (boolean~) menu::$58 ← (byte~) menu::$57 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$59 ← ! (boolean~) menu::$58
  if((boolean~) menu::$59) goto menu::@13
  (void~) menu::$60 ← call mode_twoplanebitmap 
  goto menu::@return
menu::@13:
  (byte~) menu::$61 ← call keyboard_key_pressed (byte) KEY_C 
  (boolean~) menu::$62 ← (byte~) menu::$61 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$63 ← ! (boolean~) menu::$62
  if((boolean~) menu::$63) goto menu::@14
  (void~) menu::$64 ← call mode_sixsfred 
  goto menu::@return
menu::@14:
  (byte~) menu::$65 ← call keyboard_key_pressed (byte) KEY_D 
  (boolean~) menu::$66 ← (byte~) menu::$65 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$67 ← ! (boolean~) menu::$66
  if((boolean~) menu::$67) goto menu::@15
  (void~) menu::$68 ← call mode_8bpppixelcell 
  goto menu::@return
menu::@15:
  (byte~) menu::$69 ← call keyboard_key_pressed (byte) KEY_E 
  (boolean~) menu::$70 ← (byte~) menu::$69 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$71 ← ! (boolean~) menu::$70
  if((boolean~) menu::$71) goto menu::@16
  (void~) menu::$72 ← call mode_8bppchunkybmm 
  goto menu::@return
menu::@16:
  goto menu::@3
menu::@5:
menu::@return:
  return 
endproc // menu()
proc (void()) mode_stdchar()
  (byte*) mode_stdchar::SCREEN ← (word/dword/signed dword) 32768
  (byte*) mode_stdchar::CHARSET ← (word/dword/signed dword) 36864
  (byte*) mode_stdchar::COLORS ← (word/dword/signed dword) 33792
  (dword~) mode_stdchar::$0 ← ((dword)) (byte*) mode_stdchar::CHARSET
  (dword~) mode_stdchar::$1 ← (dword~) mode_stdchar::$0 / (dword/signed dword) 65536
  (byte~) mode_stdchar::$2 ← ((byte)) (dword~) mode_stdchar::$1
  *((byte*) DTV_GRAPHICS_VIC_BANK) ← (byte~) mode_stdchar::$2
  (byte*~) mode_stdchar::$3 ← (byte*) mode_stdchar::COLORS / (word/signed word/dword/signed dword) 1024
  (word~) mode_stdchar::$4 ← ((word)) (byte*~) mode_stdchar::$3
  (byte~) mode_stdchar::$5 ← < (word~) mode_stdchar::$4
  *((byte*) DTV_COLOR_BANK_LO) ← (byte~) mode_stdchar::$5
  (byte*~) mode_stdchar::$6 ← (byte*) mode_stdchar::COLORS / (word/signed word/dword/signed dword) 1024
  (word~) mode_stdchar::$7 ← ((word)) (byte*~) mode_stdchar::$6
  (byte~) mode_stdchar::$8 ← > (word~) mode_stdchar::$7
  *((byte*) DTV_COLOR_BANK_HI) ← (byte~) mode_stdchar::$8
  *((byte*) DTV_CONTROL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) CIA2_PORT_A_DDR) ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (word~) mode_stdchar::$9 ← ((word)) (byte*) mode_stdchar::CHARSET
  (word/signed dword/dword~) mode_stdchar::$10 ← (word~) mode_stdchar::$9 / (word/signed word/dword/signed dword) 16384
  (byte~) mode_stdchar::$11 ← ((byte)) (word/signed dword/dword~) mode_stdchar::$10
  (byte/word/dword~) mode_stdchar::$12 ← (byte/signed byte/word/signed word/dword/signed dword) 3 ^ (byte~) mode_stdchar::$11
  *((byte*) CIA2_PORT_A) ← (byte/word/dword~) mode_stdchar::$12
  (byte~) mode_stdchar::$13 ← (byte) VIC_DEN | (byte) VIC_RSEL
  (byte/word/dword~) mode_stdchar::$14 ← (byte~) mode_stdchar::$13 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL) ← (byte/word/dword~) mode_stdchar::$14
  *((byte*) VIC_CONTROL2) ← (byte) VIC_CSEL
  (word~) mode_stdchar::$15 ← ((word)) (byte*) mode_stdchar::SCREEN
  (word~) mode_stdchar::$16 ← (word~) mode_stdchar::$15 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_stdchar::$17 ← (word~) mode_stdchar::$16 / (byte/signed byte/word/signed word/dword/signed dword) 64
  (word~) mode_stdchar::$18 ← ((word)) (byte*) mode_stdchar::CHARSET
  (word~) mode_stdchar::$19 ← (word~) mode_stdchar::$18 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_stdchar::$20 ← (word~) mode_stdchar::$19 / (word/signed word/dword/signed dword) 1024
  (word/dword~) mode_stdchar::$21 ← (word/signed dword/dword~) mode_stdchar::$17 | (word/signed dword/dword~) mode_stdchar::$20
  (byte~) mode_stdchar::$22 ← ((byte)) (word/dword~) mode_stdchar::$21
  *((byte*) VIC_MEMORY) ← (byte~) mode_stdchar::$22
  (byte) mode_stdchar::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_stdchar::@1:
  *((byte*) DTV_PALETTE + (byte) mode_stdchar::i) ← *((byte[16]) DTV_PALETTE_DEFAULT + (byte) mode_stdchar::i)
  (byte) mode_stdchar::i ← ++ (byte) mode_stdchar::i
  (boolean~) mode_stdchar::$23 ← (byte) mode_stdchar::i != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_stdchar::$23) goto mode_stdchar::@1
  *((byte*) BGCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BORDERCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*) mode_stdchar::col ← (byte*) mode_stdchar::COLORS
  (byte*) mode_stdchar::ch ← (byte*) mode_stdchar::SCREEN
  (byte) mode_stdchar::cy ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_stdchar::@2:
  (byte) mode_stdchar::cx ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_stdchar::@3:
  (byte~) mode_stdchar::$24 ← (byte) mode_stdchar::cx + (byte) mode_stdchar::cy
  (byte~) mode_stdchar::$25 ← (byte~) mode_stdchar::$24 & (byte/signed byte/word/signed word/dword/signed dword) 15
  *((byte*) mode_stdchar::col) ← (byte~) mode_stdchar::$25
  (byte*) mode_stdchar::col ← ++ (byte*) mode_stdchar::col
  (byte~) mode_stdchar::$26 ← (byte) mode_stdchar::cy & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_stdchar::$27 ← (byte~) mode_stdchar::$26 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_stdchar::$28 ← (byte) mode_stdchar::cx & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_stdchar::$29 ← (byte~) mode_stdchar::$27 | (byte~) mode_stdchar::$28
  *((byte*) mode_stdchar::ch) ← (byte~) mode_stdchar::$29
  (byte*) mode_stdchar::ch ← ++ (byte*) mode_stdchar::ch
  (byte) mode_stdchar::cx ← ++ (byte) mode_stdchar::cx
  (boolean~) mode_stdchar::$30 ← (byte) mode_stdchar::cx != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_stdchar::$30) goto mode_stdchar::@3
  (byte) mode_stdchar::cy ← ++ (byte) mode_stdchar::cy
  (boolean~) mode_stdchar::$31 ← (byte) mode_stdchar::cy != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_stdchar::$31) goto mode_stdchar::@2
mode_stdchar::@4:
  if(true) goto mode_stdchar::@5
  goto mode_stdchar::@6
mode_stdchar::@5:
  (byte~) mode_stdchar::$32 ← call keyboard_key_pressed (byte) KEY_SPACE 
  (boolean~) mode_stdchar::$33 ← (byte~) mode_stdchar::$32 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_stdchar::$34 ← ! (boolean~) mode_stdchar::$33
  if((boolean~) mode_stdchar::$34) goto mode_stdchar::@7
  goto mode_stdchar::@return
mode_stdchar::@7:
  goto mode_stdchar::@4
mode_stdchar::@6:
mode_stdchar::@return:
  return 
endproc // mode_stdchar()
proc (void()) mode_ecmchar()
  (byte*) mode_ecmchar::ECMCHAR_SCREEN ← (word/dword/signed dword) 32768
  (byte*) mode_ecmchar::ECMCHAR_CHARSET ← (word/dword/signed dword) 36864
  (byte*) mode_ecmchar::ECMCHAR_COLORS ← (word/dword/signed dword) 33792
  (dword~) mode_ecmchar::$0 ← ((dword)) (byte*) mode_ecmchar::ECMCHAR_CHARSET
  (dword~) mode_ecmchar::$1 ← (dword~) mode_ecmchar::$0 / (dword/signed dword) 65536
  (byte~) mode_ecmchar::$2 ← ((byte)) (dword~) mode_ecmchar::$1
  *((byte*) DTV_GRAPHICS_VIC_BANK) ← (byte~) mode_ecmchar::$2
  (byte*~) mode_ecmchar::$3 ← (byte*) mode_ecmchar::ECMCHAR_COLORS / (word/signed word/dword/signed dword) 1024
  (word~) mode_ecmchar::$4 ← ((word)) (byte*~) mode_ecmchar::$3
  (byte~) mode_ecmchar::$5 ← < (word~) mode_ecmchar::$4
  *((byte*) DTV_COLOR_BANK_LO) ← (byte~) mode_ecmchar::$5
  (byte*~) mode_ecmchar::$6 ← (byte*) mode_ecmchar::ECMCHAR_COLORS / (word/signed word/dword/signed dword) 1024
  (word~) mode_ecmchar::$7 ← ((word)) (byte*~) mode_ecmchar::$6
  (byte~) mode_ecmchar::$8 ← > (word~) mode_ecmchar::$7
  *((byte*) DTV_COLOR_BANK_HI) ← (byte~) mode_ecmchar::$8
  *((byte*) DTV_CONTROL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) CIA2_PORT_A_DDR) ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (word~) mode_ecmchar::$9 ← ((word)) (byte*) mode_ecmchar::ECMCHAR_CHARSET
  (word/signed dword/dword~) mode_ecmchar::$10 ← (word~) mode_ecmchar::$9 / (word/signed word/dword/signed dword) 16384
  (byte~) mode_ecmchar::$11 ← ((byte)) (word/signed dword/dword~) mode_ecmchar::$10
  (byte/word/dword~) mode_ecmchar::$12 ← (byte/signed byte/word/signed word/dword/signed dword) 3 ^ (byte~) mode_ecmchar::$11
  *((byte*) CIA2_PORT_A) ← (byte/word/dword~) mode_ecmchar::$12
  (byte~) mode_ecmchar::$13 ← (byte) VIC_DEN | (byte) VIC_RSEL
  (byte~) mode_ecmchar::$14 ← (byte~) mode_ecmchar::$13 | (byte) VIC_ECM
  (byte/word/dword~) mode_ecmchar::$15 ← (byte~) mode_ecmchar::$14 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL) ← (byte/word/dword~) mode_ecmchar::$15
  *((byte*) VIC_CONTROL2) ← (byte) VIC_CSEL
  (word~) mode_ecmchar::$16 ← ((word)) (byte*) mode_ecmchar::ECMCHAR_SCREEN
  (word~) mode_ecmchar::$17 ← (word~) mode_ecmchar::$16 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_ecmchar::$18 ← (word~) mode_ecmchar::$17 / (byte/signed byte/word/signed word/dword/signed dword) 64
  (word~) mode_ecmchar::$19 ← ((word)) (byte*) mode_ecmchar::ECMCHAR_CHARSET
  (word~) mode_ecmchar::$20 ← (word~) mode_ecmchar::$19 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_ecmchar::$21 ← (word~) mode_ecmchar::$20 / (word/signed word/dword/signed dword) 1024
  (word/dword~) mode_ecmchar::$22 ← (word/signed dword/dword~) mode_ecmchar::$18 | (word/signed dword/dword~) mode_ecmchar::$21
  (byte~) mode_ecmchar::$23 ← ((byte)) (word/dword~) mode_ecmchar::$22
  *((byte*) VIC_MEMORY) ← (byte~) mode_ecmchar::$23
  (byte) mode_ecmchar::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_ecmchar::@1:
  *((byte*) DTV_PALETTE + (byte) mode_ecmchar::i) ← *((byte[16]) DTV_PALETTE_DEFAULT + (byte) mode_ecmchar::i)
  (byte) mode_ecmchar::i ← ++ (byte) mode_ecmchar::i
  (boolean~) mode_ecmchar::$24 ← (byte) mode_ecmchar::i != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_ecmchar::$24) goto mode_ecmchar::@1
  *((byte*) BORDERCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BGCOL1) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BGCOL2) ← (byte/signed byte/word/signed word/dword/signed dword) 2
  *((byte*) BGCOL3) ← (byte/signed byte/word/signed word/dword/signed dword) 5
  *((byte*) BGCOL4) ← (byte/signed byte/word/signed word/dword/signed dword) 6
  (byte*) mode_ecmchar::col ← (byte*) mode_ecmchar::ECMCHAR_COLORS
  (byte*) mode_ecmchar::ch ← (byte*) mode_ecmchar::ECMCHAR_SCREEN
  (byte) mode_ecmchar::cy ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_ecmchar::@2:
  (byte) mode_ecmchar::cx ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_ecmchar::@3:
  (byte~) mode_ecmchar::$25 ← (byte) mode_ecmchar::cx + (byte) mode_ecmchar::cy
  (byte~) mode_ecmchar::$26 ← (byte~) mode_ecmchar::$25 & (byte/signed byte/word/signed word/dword/signed dword) 15
  *((byte*) mode_ecmchar::col) ← (byte~) mode_ecmchar::$26
  (byte*) mode_ecmchar::col ← ++ (byte*) mode_ecmchar::col
  (byte~) mode_ecmchar::$27 ← (byte) mode_ecmchar::cy & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_ecmchar::$28 ← (byte~) mode_ecmchar::$27 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_ecmchar::$29 ← (byte) mode_ecmchar::cx & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_ecmchar::$30 ← (byte~) mode_ecmchar::$28 | (byte~) mode_ecmchar::$29
  *((byte*) mode_ecmchar::ch) ← (byte~) mode_ecmchar::$30
  (byte*) mode_ecmchar::ch ← ++ (byte*) mode_ecmchar::ch
  (byte) mode_ecmchar::cx ← ++ (byte) mode_ecmchar::cx
  (boolean~) mode_ecmchar::$31 ← (byte) mode_ecmchar::cx != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_ecmchar::$31) goto mode_ecmchar::@3
  (byte) mode_ecmchar::cy ← ++ (byte) mode_ecmchar::cy
  (boolean~) mode_ecmchar::$32 ← (byte) mode_ecmchar::cy != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_ecmchar::$32) goto mode_ecmchar::@2
mode_ecmchar::@4:
  if(true) goto mode_ecmchar::@5
  goto mode_ecmchar::@6
mode_ecmchar::@5:
  (byte~) mode_ecmchar::$33 ← call keyboard_key_pressed (byte) KEY_SPACE 
  (boolean~) mode_ecmchar::$34 ← (byte~) mode_ecmchar::$33 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_ecmchar::$35 ← ! (boolean~) mode_ecmchar::$34
  if((boolean~) mode_ecmchar::$35) goto mode_ecmchar::@7
  goto mode_ecmchar::@return
mode_ecmchar::@7:
  goto mode_ecmchar::@4
mode_ecmchar::@6:
mode_ecmchar::@return:
  return 
endproc // mode_ecmchar()
proc (void()) mode_mcchar()
  (byte*) mode_mcchar::SCREEN ← (word/dword/signed dword) 32768
  (byte*) mode_mcchar::CHARSET ← (word/dword/signed dword) 36864
  (byte*) mode_mcchar::COLORS ← (word/dword/signed dword) 33792
  (dword~) mode_mcchar::$0 ← ((dword)) (byte*) mode_mcchar::CHARSET
  (dword~) mode_mcchar::$1 ← (dword~) mode_mcchar::$0 / (dword/signed dword) 65536
  (byte~) mode_mcchar::$2 ← ((byte)) (dword~) mode_mcchar::$1
  *((byte*) DTV_GRAPHICS_VIC_BANK) ← (byte~) mode_mcchar::$2
  (byte*~) mode_mcchar::$3 ← (byte*) mode_mcchar::COLORS / (word/signed word/dword/signed dword) 1024
  (word~) mode_mcchar::$4 ← ((word)) (byte*~) mode_mcchar::$3
  (byte~) mode_mcchar::$5 ← < (word~) mode_mcchar::$4
  *((byte*) DTV_COLOR_BANK_LO) ← (byte~) mode_mcchar::$5
  (byte*~) mode_mcchar::$6 ← (byte*) mode_mcchar::COLORS / (word/signed word/dword/signed dword) 1024
  (word~) mode_mcchar::$7 ← ((word)) (byte*~) mode_mcchar::$6
  (byte~) mode_mcchar::$8 ← > (word~) mode_mcchar::$7
  *((byte*) DTV_COLOR_BANK_HI) ← (byte~) mode_mcchar::$8
  *((byte*) DTV_CONTROL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) CIA2_PORT_A_DDR) ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (word~) mode_mcchar::$9 ← ((word)) (byte*) mode_mcchar::CHARSET
  (word/signed dword/dword~) mode_mcchar::$10 ← (word~) mode_mcchar::$9 / (word/signed word/dword/signed dword) 16384
  (byte~) mode_mcchar::$11 ← ((byte)) (word/signed dword/dword~) mode_mcchar::$10
  (byte/word/dword~) mode_mcchar::$12 ← (byte/signed byte/word/signed word/dword/signed dword) 3 ^ (byte~) mode_mcchar::$11
  *((byte*) CIA2_PORT_A) ← (byte/word/dword~) mode_mcchar::$12
  (byte~) mode_mcchar::$13 ← (byte) VIC_DEN | (byte) VIC_RSEL
  (byte/word/dword~) mode_mcchar::$14 ← (byte~) mode_mcchar::$13 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL) ← (byte/word/dword~) mode_mcchar::$14
  (byte~) mode_mcchar::$15 ← (byte) VIC_CSEL | (byte) VIC_MCM
  *((byte*) VIC_CONTROL2) ← (byte~) mode_mcchar::$15
  (word~) mode_mcchar::$16 ← ((word)) (byte*) mode_mcchar::SCREEN
  (word~) mode_mcchar::$17 ← (word~) mode_mcchar::$16 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_mcchar::$18 ← (word~) mode_mcchar::$17 / (byte/signed byte/word/signed word/dword/signed dword) 64
  (word~) mode_mcchar::$19 ← ((word)) (byte*) mode_mcchar::CHARSET
  (word~) mode_mcchar::$20 ← (word~) mode_mcchar::$19 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_mcchar::$21 ← (word~) mode_mcchar::$20 / (word/signed word/dword/signed dword) 1024
  (word/dword~) mode_mcchar::$22 ← (word/signed dword/dword~) mode_mcchar::$18 | (word/signed dword/dword~) mode_mcchar::$21
  (byte~) mode_mcchar::$23 ← ((byte)) (word/dword~) mode_mcchar::$22
  *((byte*) VIC_MEMORY) ← (byte~) mode_mcchar::$23
  (byte) mode_mcchar::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_mcchar::@1:
  *((byte*) DTV_PALETTE + (byte) mode_mcchar::i) ← *((byte[16]) DTV_PALETTE_DEFAULT + (byte) mode_mcchar::i)
  (byte) mode_mcchar::i ← ++ (byte) mode_mcchar::i
  (boolean~) mode_mcchar::$24 ← (byte) mode_mcchar::i != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_mcchar::$24) goto mode_mcchar::@1
  *((byte*) BORDERCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BGCOL1) ← (byte) BLACK
  *((byte*) BGCOL2) ← (byte) GREEN
  *((byte*) BGCOL3) ← (byte) BLUE
  (byte*) mode_mcchar::col ← (byte*) mode_mcchar::COLORS
  (byte*) mode_mcchar::ch ← (byte*) mode_mcchar::SCREEN
  (byte) mode_mcchar::cy ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_mcchar::@2:
  (byte) mode_mcchar::cx ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_mcchar::@3:
  (byte~) mode_mcchar::$25 ← (byte) mode_mcchar::cx + (byte) mode_mcchar::cy
  (byte~) mode_mcchar::$26 ← (byte~) mode_mcchar::$25 & (byte/signed byte/word/signed word/dword/signed dword) 15
  *((byte*) mode_mcchar::col) ← (byte~) mode_mcchar::$26
  (byte*) mode_mcchar::col ← ++ (byte*) mode_mcchar::col
  (byte~) mode_mcchar::$27 ← (byte) mode_mcchar::cy & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_mcchar::$28 ← (byte~) mode_mcchar::$27 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_mcchar::$29 ← (byte) mode_mcchar::cx & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_mcchar::$30 ← (byte~) mode_mcchar::$28 | (byte~) mode_mcchar::$29
  *((byte*) mode_mcchar::ch) ← (byte~) mode_mcchar::$30
  (byte*) mode_mcchar::ch ← ++ (byte*) mode_mcchar::ch
  (byte) mode_mcchar::cx ← ++ (byte) mode_mcchar::cx
  (boolean~) mode_mcchar::$31 ← (byte) mode_mcchar::cx != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_mcchar::$31) goto mode_mcchar::@3
  (byte) mode_mcchar::cy ← ++ (byte) mode_mcchar::cy
  (boolean~) mode_mcchar::$32 ← (byte) mode_mcchar::cy != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_mcchar::$32) goto mode_mcchar::@2
mode_mcchar::@4:
  if(true) goto mode_mcchar::@5
  goto mode_mcchar::@6
mode_mcchar::@5:
  (byte~) mode_mcchar::$33 ← call keyboard_key_pressed (byte) KEY_SPACE 
  (boolean~) mode_mcchar::$34 ← (byte~) mode_mcchar::$33 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_mcchar::$35 ← ! (boolean~) mode_mcchar::$34
  if((boolean~) mode_mcchar::$35) goto mode_mcchar::@7
  goto mode_mcchar::@return
mode_mcchar::@7:
  goto mode_mcchar::@4
mode_mcchar::@6:
mode_mcchar::@return:
  return 
endproc // mode_mcchar()
proc (void()) mode_hicolstdchar()
  (byte*) mode_hicolstdchar::SCREEN ← (word/dword/signed dword) 32768
  (byte*) mode_hicolstdchar::CHARSET ← (word/dword/signed dword) 36864
  (byte*) mode_hicolstdchar::COLORS ← (word/dword/signed dword) 33792
  (dword~) mode_hicolstdchar::$0 ← ((dword)) (byte*) mode_hicolstdchar::CHARSET
  (dword~) mode_hicolstdchar::$1 ← (dword~) mode_hicolstdchar::$0 / (dword/signed dword) 65536
  (byte~) mode_hicolstdchar::$2 ← ((byte)) (dword~) mode_hicolstdchar::$1
  *((byte*) DTV_GRAPHICS_VIC_BANK) ← (byte~) mode_hicolstdchar::$2
  (byte*~) mode_hicolstdchar::$3 ← (byte*) mode_hicolstdchar::COLORS / (word/signed word/dword/signed dword) 1024
  (word~) mode_hicolstdchar::$4 ← ((word)) (byte*~) mode_hicolstdchar::$3
  (byte~) mode_hicolstdchar::$5 ← < (word~) mode_hicolstdchar::$4
  *((byte*) DTV_COLOR_BANK_LO) ← (byte~) mode_hicolstdchar::$5
  (byte*~) mode_hicolstdchar::$6 ← (byte*) mode_hicolstdchar::COLORS / (word/signed word/dword/signed dword) 1024
  (word~) mode_hicolstdchar::$7 ← ((word)) (byte*~) mode_hicolstdchar::$6
  (byte~) mode_hicolstdchar::$8 ← > (word~) mode_hicolstdchar::$7
  *((byte*) DTV_COLOR_BANK_HI) ← (byte~) mode_hicolstdchar::$8
  *((byte*) DTV_CONTROL) ← (byte) DTV_CONTROL_HIGHCOLOR_ON
  *((byte*) CIA2_PORT_A_DDR) ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (word~) mode_hicolstdchar::$9 ← ((word)) (byte*) mode_hicolstdchar::CHARSET
  (word/signed dword/dword~) mode_hicolstdchar::$10 ← (word~) mode_hicolstdchar::$9 / (word/signed word/dword/signed dword) 16384
  (byte~) mode_hicolstdchar::$11 ← ((byte)) (word/signed dword/dword~) mode_hicolstdchar::$10
  (byte/word/dword~) mode_hicolstdchar::$12 ← (byte/signed byte/word/signed word/dword/signed dword) 3 ^ (byte~) mode_hicolstdchar::$11
  *((byte*) CIA2_PORT_A) ← (byte/word/dword~) mode_hicolstdchar::$12
  (byte~) mode_hicolstdchar::$13 ← (byte) VIC_DEN | (byte) VIC_RSEL
  (byte/word/dword~) mode_hicolstdchar::$14 ← (byte~) mode_hicolstdchar::$13 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL) ← (byte/word/dword~) mode_hicolstdchar::$14
  *((byte*) VIC_CONTROL2) ← (byte) VIC_CSEL
  (word~) mode_hicolstdchar::$15 ← ((word)) (byte*) mode_hicolstdchar::SCREEN
  (word~) mode_hicolstdchar::$16 ← (word~) mode_hicolstdchar::$15 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_hicolstdchar::$17 ← (word~) mode_hicolstdchar::$16 / (byte/signed byte/word/signed word/dword/signed dword) 64
  (word~) mode_hicolstdchar::$18 ← ((word)) (byte*) mode_hicolstdchar::CHARSET
  (word~) mode_hicolstdchar::$19 ← (word~) mode_hicolstdchar::$18 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_hicolstdchar::$20 ← (word~) mode_hicolstdchar::$19 / (word/signed word/dword/signed dword) 1024
  (word/dword~) mode_hicolstdchar::$21 ← (word/signed dword/dword~) mode_hicolstdchar::$17 | (word/signed dword/dword~) mode_hicolstdchar::$20
  (byte~) mode_hicolstdchar::$22 ← ((byte)) (word/dword~) mode_hicolstdchar::$21
  *((byte*) VIC_MEMORY) ← (byte~) mode_hicolstdchar::$22
  (byte) mode_hicolstdchar::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_hicolstdchar::@1:
  *((byte*) DTV_PALETTE + (byte) mode_hicolstdchar::i) ← (byte) mode_hicolstdchar::i
  (byte) mode_hicolstdchar::i ← ++ (byte) mode_hicolstdchar::i
  (boolean~) mode_hicolstdchar::$23 ← (byte) mode_hicolstdchar::i != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_hicolstdchar::$23) goto mode_hicolstdchar::@1
  *((byte*) BGCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BORDERCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*) mode_hicolstdchar::col ← (byte*) mode_hicolstdchar::COLORS
  (byte*) mode_hicolstdchar::ch ← (byte*) mode_hicolstdchar::SCREEN
  (byte) mode_hicolstdchar::cy ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_hicolstdchar::@2:
  (byte) mode_hicolstdchar::cx ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_hicolstdchar::@3:
  (byte~) mode_hicolstdchar::$24 ← (byte) mode_hicolstdchar::cy & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_hicolstdchar::$25 ← (byte~) mode_hicolstdchar::$24 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_hicolstdchar::$26 ← (byte) mode_hicolstdchar::cx & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_hicolstdchar::$27 ← (byte~) mode_hicolstdchar::$25 | (byte~) mode_hicolstdchar::$26
  (byte) mode_hicolstdchar::v ← (byte~) mode_hicolstdchar::$27
  *((byte*) mode_hicolstdchar::col) ← (byte) mode_hicolstdchar::v
  (byte*) mode_hicolstdchar::col ← ++ (byte*) mode_hicolstdchar::col
  *((byte*) mode_hicolstdchar::ch) ← (byte) mode_hicolstdchar::v
  (byte*) mode_hicolstdchar::ch ← ++ (byte*) mode_hicolstdchar::ch
  (byte) mode_hicolstdchar::cx ← ++ (byte) mode_hicolstdchar::cx
  (boolean~) mode_hicolstdchar::$28 ← (byte) mode_hicolstdchar::cx != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_hicolstdchar::$28) goto mode_hicolstdchar::@3
  (byte) mode_hicolstdchar::cy ← ++ (byte) mode_hicolstdchar::cy
  (boolean~) mode_hicolstdchar::$29 ← (byte) mode_hicolstdchar::cy != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_hicolstdchar::$29) goto mode_hicolstdchar::@2
mode_hicolstdchar::@4:
  if(true) goto mode_hicolstdchar::@5
  goto mode_hicolstdchar::@6
mode_hicolstdchar::@5:
  (byte~) mode_hicolstdchar::$30 ← call keyboard_key_pressed (byte) KEY_SPACE 
  (boolean~) mode_hicolstdchar::$31 ← (byte~) mode_hicolstdchar::$30 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_hicolstdchar::$32 ← ! (boolean~) mode_hicolstdchar::$31
  if((boolean~) mode_hicolstdchar::$32) goto mode_hicolstdchar::@7
  goto mode_hicolstdchar::@return
mode_hicolstdchar::@7:
  goto mode_hicolstdchar::@4
mode_hicolstdchar::@6:
mode_hicolstdchar::@return:
  return 
endproc // mode_hicolstdchar()
proc (void()) mode_hicolecmchar()
  (byte*) mode_hicolecmchar::SCREEN ← (word/dword/signed dword) 32768
  (byte*) mode_hicolecmchar::CHARSET ← (word/dword/signed dword) 36864
  (byte*) mode_hicolecmchar::COLORS ← (word/dword/signed dword) 33792
  (dword~) mode_hicolecmchar::$0 ← ((dword)) (byte*) mode_hicolecmchar::CHARSET
  (dword~) mode_hicolecmchar::$1 ← (dword~) mode_hicolecmchar::$0 / (dword/signed dword) 65536
  (byte~) mode_hicolecmchar::$2 ← ((byte)) (dword~) mode_hicolecmchar::$1
  *((byte*) DTV_GRAPHICS_VIC_BANK) ← (byte~) mode_hicolecmchar::$2
  (byte*~) mode_hicolecmchar::$3 ← (byte*) mode_hicolecmchar::COLORS / (word/signed word/dword/signed dword) 1024
  (word~) mode_hicolecmchar::$4 ← ((word)) (byte*~) mode_hicolecmchar::$3
  (byte~) mode_hicolecmchar::$5 ← < (word~) mode_hicolecmchar::$4
  *((byte*) DTV_COLOR_BANK_LO) ← (byte~) mode_hicolecmchar::$5
  (byte*~) mode_hicolecmchar::$6 ← (byte*) mode_hicolecmchar::COLORS / (word/signed word/dword/signed dword) 1024
  (word~) mode_hicolecmchar::$7 ← ((word)) (byte*~) mode_hicolecmchar::$6
  (byte~) mode_hicolecmchar::$8 ← > (word~) mode_hicolecmchar::$7
  *((byte*) DTV_COLOR_BANK_HI) ← (byte~) mode_hicolecmchar::$8
  *((byte*) DTV_CONTROL) ← (byte) DTV_CONTROL_HIGHCOLOR_ON
  *((byte*) CIA2_PORT_A_DDR) ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (word~) mode_hicolecmchar::$9 ← ((word)) (byte*) mode_hicolecmchar::CHARSET
  (word/signed dword/dword~) mode_hicolecmchar::$10 ← (word~) mode_hicolecmchar::$9 / (word/signed word/dword/signed dword) 16384
  (byte~) mode_hicolecmchar::$11 ← ((byte)) (word/signed dword/dword~) mode_hicolecmchar::$10
  (byte/word/dword~) mode_hicolecmchar::$12 ← (byte/signed byte/word/signed word/dword/signed dword) 3 ^ (byte~) mode_hicolecmchar::$11
  *((byte*) CIA2_PORT_A) ← (byte/word/dword~) mode_hicolecmchar::$12
  (byte~) mode_hicolecmchar::$13 ← (byte) VIC_DEN | (byte) VIC_RSEL
  (byte~) mode_hicolecmchar::$14 ← (byte~) mode_hicolecmchar::$13 | (byte) VIC_ECM
  (byte/word/dword~) mode_hicolecmchar::$15 ← (byte~) mode_hicolecmchar::$14 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL) ← (byte/word/dword~) mode_hicolecmchar::$15
  *((byte*) VIC_CONTROL2) ← (byte) VIC_CSEL
  (word~) mode_hicolecmchar::$16 ← ((word)) (byte*) mode_hicolecmchar::SCREEN
  (word~) mode_hicolecmchar::$17 ← (word~) mode_hicolecmchar::$16 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_hicolecmchar::$18 ← (word~) mode_hicolecmchar::$17 / (byte/signed byte/word/signed word/dword/signed dword) 64
  (word~) mode_hicolecmchar::$19 ← ((word)) (byte*) mode_hicolecmchar::CHARSET
  (word~) mode_hicolecmchar::$20 ← (word~) mode_hicolecmchar::$19 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_hicolecmchar::$21 ← (word~) mode_hicolecmchar::$20 / (word/signed word/dword/signed dword) 1024
  (word/dword~) mode_hicolecmchar::$22 ← (word/signed dword/dword~) mode_hicolecmchar::$18 | (word/signed dword/dword~) mode_hicolecmchar::$21
  (byte~) mode_hicolecmchar::$23 ← ((byte)) (word/dword~) mode_hicolecmchar::$22
  *((byte*) VIC_MEMORY) ← (byte~) mode_hicolecmchar::$23
  (byte) mode_hicolecmchar::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_hicolecmchar::@1:
  *((byte*) DTV_PALETTE + (byte) mode_hicolecmchar::i) ← (byte) mode_hicolecmchar::i
  (byte) mode_hicolecmchar::i ← ++ (byte) mode_hicolecmchar::i
  (boolean~) mode_hicolecmchar::$24 ← (byte) mode_hicolecmchar::i != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_hicolecmchar::$24) goto mode_hicolecmchar::@1
  *((byte*) BORDERCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BGCOL1) ← (byte/signed byte/word/signed word/dword/signed dword) 80
  *((byte*) BGCOL2) ← (byte/signed byte/word/signed word/dword/signed dword) 84
  *((byte*) BGCOL3) ← (byte/signed byte/word/signed word/dword/signed dword) 88
  *((byte*) BGCOL4) ← (byte/signed byte/word/signed word/dword/signed dword) 92
  (byte*) mode_hicolecmchar::col ← (byte*) mode_hicolecmchar::COLORS
  (byte*) mode_hicolecmchar::ch ← (byte*) mode_hicolecmchar::SCREEN
  (byte) mode_hicolecmchar::cy ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_hicolecmchar::@2:
  (byte) mode_hicolecmchar::cx ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_hicolecmchar::@3:
  (byte~) mode_hicolecmchar::$25 ← (byte) mode_hicolecmchar::cy & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_hicolecmchar::$26 ← (byte~) mode_hicolecmchar::$25 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_hicolecmchar::$27 ← (byte) mode_hicolecmchar::cx & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_hicolecmchar::$28 ← (byte~) mode_hicolecmchar::$26 | (byte~) mode_hicolecmchar::$27
  (byte) mode_hicolecmchar::v ← (byte~) mode_hicolecmchar::$28
  *((byte*) mode_hicolecmchar::col) ← (byte) mode_hicolecmchar::v
  (byte*) mode_hicolecmchar::col ← ++ (byte*) mode_hicolecmchar::col
  *((byte*) mode_hicolecmchar::ch) ← (byte) mode_hicolecmchar::v
  (byte*) mode_hicolecmchar::ch ← ++ (byte*) mode_hicolecmchar::ch
  (byte) mode_hicolecmchar::cx ← ++ (byte) mode_hicolecmchar::cx
  (boolean~) mode_hicolecmchar::$29 ← (byte) mode_hicolecmchar::cx != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_hicolecmchar::$29) goto mode_hicolecmchar::@3
  (byte) mode_hicolecmchar::cy ← ++ (byte) mode_hicolecmchar::cy
  (boolean~) mode_hicolecmchar::$30 ← (byte) mode_hicolecmchar::cy != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_hicolecmchar::$30) goto mode_hicolecmchar::@2
mode_hicolecmchar::@4:
  if(true) goto mode_hicolecmchar::@5
  goto mode_hicolecmchar::@6
mode_hicolecmchar::@5:
  (byte~) mode_hicolecmchar::$31 ← call keyboard_key_pressed (byte) KEY_SPACE 
  (boolean~) mode_hicolecmchar::$32 ← (byte~) mode_hicolecmchar::$31 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_hicolecmchar::$33 ← ! (boolean~) mode_hicolecmchar::$32
  if((boolean~) mode_hicolecmchar::$33) goto mode_hicolecmchar::@7
  goto mode_hicolecmchar::@return
mode_hicolecmchar::@7:
  goto mode_hicolecmchar::@4
mode_hicolecmchar::@6:
mode_hicolecmchar::@return:
  return 
endproc // mode_hicolecmchar()
proc (void()) mode_hicolmcchar()
  (byte*) mode_hicolmcchar::SCREEN ← (word/dword/signed dword) 32768
  (byte*) mode_hicolmcchar::CHARSET ← (word/dword/signed dword) 36864
  (byte*) mode_hicolmcchar::COLORS ← (word/dword/signed dword) 33792
  (dword~) mode_hicolmcchar::$0 ← ((dword)) (byte*) mode_hicolmcchar::CHARSET
  (dword~) mode_hicolmcchar::$1 ← (dword~) mode_hicolmcchar::$0 / (dword/signed dword) 65536
  (byte~) mode_hicolmcchar::$2 ← ((byte)) (dword~) mode_hicolmcchar::$1
  *((byte*) DTV_GRAPHICS_VIC_BANK) ← (byte~) mode_hicolmcchar::$2
  (byte*~) mode_hicolmcchar::$3 ← (byte*) mode_hicolmcchar::COLORS / (word/signed word/dword/signed dword) 1024
  (word~) mode_hicolmcchar::$4 ← ((word)) (byte*~) mode_hicolmcchar::$3
  (byte~) mode_hicolmcchar::$5 ← < (word~) mode_hicolmcchar::$4
  *((byte*) DTV_COLOR_BANK_LO) ← (byte~) mode_hicolmcchar::$5
  (byte*~) mode_hicolmcchar::$6 ← (byte*) mode_hicolmcchar::COLORS / (word/signed word/dword/signed dword) 1024
  (word~) mode_hicolmcchar::$7 ← ((word)) (byte*~) mode_hicolmcchar::$6
  (byte~) mode_hicolmcchar::$8 ← > (word~) mode_hicolmcchar::$7
  *((byte*) DTV_COLOR_BANK_HI) ← (byte~) mode_hicolmcchar::$8
  *((byte*) DTV_CONTROL) ← (byte) DTV_CONTROL_HIGHCOLOR_ON
  *((byte*) CIA2_PORT_A_DDR) ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (word~) mode_hicolmcchar::$9 ← ((word)) (byte*) mode_hicolmcchar::CHARSET
  (word/signed dword/dword~) mode_hicolmcchar::$10 ← (word~) mode_hicolmcchar::$9 / (word/signed word/dword/signed dword) 16384
  (byte~) mode_hicolmcchar::$11 ← ((byte)) (word/signed dword/dword~) mode_hicolmcchar::$10
  (byte/word/dword~) mode_hicolmcchar::$12 ← (byte/signed byte/word/signed word/dword/signed dword) 3 ^ (byte~) mode_hicolmcchar::$11
  *((byte*) CIA2_PORT_A) ← (byte/word/dword~) mode_hicolmcchar::$12
  (byte~) mode_hicolmcchar::$13 ← (byte) VIC_DEN | (byte) VIC_RSEL
  (byte/word/dword~) mode_hicolmcchar::$14 ← (byte~) mode_hicolmcchar::$13 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL) ← (byte/word/dword~) mode_hicolmcchar::$14
  (byte~) mode_hicolmcchar::$15 ← (byte) VIC_CSEL | (byte) VIC_MCM
  *((byte*) VIC_CONTROL2) ← (byte~) mode_hicolmcchar::$15
  (word~) mode_hicolmcchar::$16 ← ((word)) (byte*) mode_hicolmcchar::SCREEN
  (word~) mode_hicolmcchar::$17 ← (word~) mode_hicolmcchar::$16 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_hicolmcchar::$18 ← (word~) mode_hicolmcchar::$17 / (byte/signed byte/word/signed word/dword/signed dword) 64
  (word~) mode_hicolmcchar::$19 ← ((word)) (byte*) mode_hicolmcchar::CHARSET
  (word~) mode_hicolmcchar::$20 ← (word~) mode_hicolmcchar::$19 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_hicolmcchar::$21 ← (word~) mode_hicolmcchar::$20 / (word/signed word/dword/signed dword) 1024
  (word/dword~) mode_hicolmcchar::$22 ← (word/signed dword/dword~) mode_hicolmcchar::$18 | (word/signed dword/dword~) mode_hicolmcchar::$21
  (byte~) mode_hicolmcchar::$23 ← ((byte)) (word/dword~) mode_hicolmcchar::$22
  *((byte*) VIC_MEMORY) ← (byte~) mode_hicolmcchar::$23
  (byte) mode_hicolmcchar::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_hicolmcchar::@1:
  *((byte*) DTV_PALETTE + (byte) mode_hicolmcchar::i) ← (byte) mode_hicolmcchar::i
  (byte) mode_hicolmcchar::i ← ++ (byte) mode_hicolmcchar::i
  (boolean~) mode_hicolmcchar::$24 ← (byte) mode_hicolmcchar::i != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_hicolmcchar::$24) goto mode_hicolmcchar::@1
  *((byte*) BORDERCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BGCOL1) ← (byte/signed byte/word/signed word/dword/signed dword) 80
  *((byte*) BGCOL2) ← (byte/signed byte/word/signed word/dword/signed dword) 84
  *((byte*) BGCOL3) ← (byte/signed byte/word/signed word/dword/signed dword) 88
  (byte*) mode_hicolmcchar::col ← (byte*) mode_hicolmcchar::COLORS
  (byte*) mode_hicolmcchar::ch ← (byte*) mode_hicolmcchar::SCREEN
  (byte) mode_hicolmcchar::cy ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_hicolmcchar::@2:
  (byte) mode_hicolmcchar::cx ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_hicolmcchar::@3:
  (byte~) mode_hicolmcchar::$25 ← (byte) mode_hicolmcchar::cy & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_hicolmcchar::$26 ← (byte~) mode_hicolmcchar::$25 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_hicolmcchar::$27 ← (byte) mode_hicolmcchar::cx & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_hicolmcchar::$28 ← (byte~) mode_hicolmcchar::$26 | (byte~) mode_hicolmcchar::$27
  (byte) mode_hicolmcchar::v ← (byte~) mode_hicolmcchar::$28
  *((byte*) mode_hicolmcchar::col) ← (byte) mode_hicolmcchar::v
  (byte*) mode_hicolmcchar::col ← ++ (byte*) mode_hicolmcchar::col
  *((byte*) mode_hicolmcchar::ch) ← (byte) mode_hicolmcchar::v
  (byte*) mode_hicolmcchar::ch ← ++ (byte*) mode_hicolmcchar::ch
  (byte) mode_hicolmcchar::cx ← ++ (byte) mode_hicolmcchar::cx
  (boolean~) mode_hicolmcchar::$29 ← (byte) mode_hicolmcchar::cx != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_hicolmcchar::$29) goto mode_hicolmcchar::@3
  (byte) mode_hicolmcchar::cy ← ++ (byte) mode_hicolmcchar::cy
  (boolean~) mode_hicolmcchar::$30 ← (byte) mode_hicolmcchar::cy != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_hicolmcchar::$30) goto mode_hicolmcchar::@2
mode_hicolmcchar::@4:
  if(true) goto mode_hicolmcchar::@5
  goto mode_hicolmcchar::@6
mode_hicolmcchar::@5:
  (byte~) mode_hicolmcchar::$31 ← call keyboard_key_pressed (byte) KEY_SPACE 
  (boolean~) mode_hicolmcchar::$32 ← (byte~) mode_hicolmcchar::$31 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_hicolmcchar::$33 ← ! (boolean~) mode_hicolmcchar::$32
  if((boolean~) mode_hicolmcchar::$33) goto mode_hicolmcchar::@7
  goto mode_hicolmcchar::@return
mode_hicolmcchar::@7:
  goto mode_hicolmcchar::@4
mode_hicolmcchar::@6:
mode_hicolmcchar::@return:
  return 
endproc // mode_hicolmcchar()
proc (void()) mode_twoplanebitmap()
  (byte*) mode_twoplanebitmap::PLANEA ← (word/signed word/dword/signed dword) 16384
  (byte*) mode_twoplanebitmap::PLANEB ← (word/signed word/dword/signed dword) 24576
  (byte*) mode_twoplanebitmap::COLORS ← (word/dword/signed dword) 32768
  (byte~) mode_twoplanebitmap::$0 ← (byte) DTV_CONTROL_HIGHCOLOR_ON | (byte) DTV_CONTROL_LINEAR_ADDRESSING_ON
  *((byte*) DTV_CONTROL) ← (byte~) mode_twoplanebitmap::$0
  (byte~) mode_twoplanebitmap::$1 ← (byte) VIC_ECM | (byte) VIC_BMM
  (byte~) mode_twoplanebitmap::$2 ← (byte~) mode_twoplanebitmap::$1 | (byte) VIC_DEN
  (byte~) mode_twoplanebitmap::$3 ← (byte~) mode_twoplanebitmap::$2 | (byte) VIC_RSEL
  (byte/word/dword~) mode_twoplanebitmap::$4 ← (byte~) mode_twoplanebitmap::$3 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL) ← (byte/word/dword~) mode_twoplanebitmap::$4
  *((byte*) VIC_CONTROL2) ← (byte) VIC_CSEL
  (byte~) mode_twoplanebitmap::$5 ← < (byte*) mode_twoplanebitmap::PLANEA
  *((byte*) DTV_PLANEA_START_LO) ← (byte~) mode_twoplanebitmap::$5
  (byte~) mode_twoplanebitmap::$6 ← > (byte*) mode_twoplanebitmap::PLANEA
  *((byte*) DTV_PLANEA_START_MI) ← (byte~) mode_twoplanebitmap::$6
  *((byte*) DTV_PLANEA_START_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEA_STEP) ← (byte/signed byte/word/signed word/dword/signed dword) 1
  *((byte*) DTV_PLANEA_MODULO_LO) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEA_MODULO_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte~) mode_twoplanebitmap::$7 ← < (byte*) mode_twoplanebitmap::PLANEB
  *((byte*) DTV_PLANEB_START_LO) ← (byte~) mode_twoplanebitmap::$7
  (byte~) mode_twoplanebitmap::$8 ← > (byte*) mode_twoplanebitmap::PLANEB
  *((byte*) DTV_PLANEB_START_MI) ← (byte~) mode_twoplanebitmap::$8
  *((byte*) DTV_PLANEB_START_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_STEP) ← (byte/signed byte/word/signed word/dword/signed dword) 1
  *((byte*) DTV_PLANEB_MODULO_LO) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_MODULO_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*~) mode_twoplanebitmap::$9 ← (byte*) mode_twoplanebitmap::COLORS / (word/signed word/dword/signed dword) 1024
  (byte~) mode_twoplanebitmap::$10 ← < (byte*~) mode_twoplanebitmap::$9
  *((byte*) DTV_COLOR_BANK_LO) ← (byte~) mode_twoplanebitmap::$10
  (byte*~) mode_twoplanebitmap::$11 ← (byte*) mode_twoplanebitmap::COLORS / (word/signed word/dword/signed dword) 1024
  (byte~) mode_twoplanebitmap::$12 ← > (byte*~) mode_twoplanebitmap::$11
  *((byte*) DTV_COLOR_BANK_HI) ← (byte~) mode_twoplanebitmap::$12
  (byte) mode_twoplanebitmap::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_twoplanebitmap::@1:
  *((byte*) DTV_PALETTE + (byte) mode_twoplanebitmap::i) ← (byte) mode_twoplanebitmap::i
  (byte) mode_twoplanebitmap::i ← ++ (byte) mode_twoplanebitmap::i
  (boolean~) mode_twoplanebitmap::$13 ← (byte) mode_twoplanebitmap::i != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_twoplanebitmap::$13) goto mode_twoplanebitmap::@1
  *((byte*) BORDERCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BGCOL1) ← (byte/signed byte/word/signed word/dword/signed dword) 112
  *((byte*) BGCOL2) ← (byte/word/signed word/dword/signed dword) 212
  (byte*) mode_twoplanebitmap::col ← (byte*) mode_twoplanebitmap::COLORS
  (byte) mode_twoplanebitmap::cy ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_twoplanebitmap::@2:
  (byte) mode_twoplanebitmap::cx ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_twoplanebitmap::@3:
  (byte~) mode_twoplanebitmap::$14 ← (byte) mode_twoplanebitmap::cy & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_twoplanebitmap::$15 ← (byte~) mode_twoplanebitmap::$14 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_twoplanebitmap::$16 ← (byte) mode_twoplanebitmap::cx & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_twoplanebitmap::$17 ← (byte~) mode_twoplanebitmap::$15 | (byte~) mode_twoplanebitmap::$16
  *((byte*) mode_twoplanebitmap::col) ← (byte~) mode_twoplanebitmap::$17
  (byte*) mode_twoplanebitmap::col ← ++ (byte*) mode_twoplanebitmap::col
  (byte) mode_twoplanebitmap::cx ← ++ (byte) mode_twoplanebitmap::cx
  (boolean~) mode_twoplanebitmap::$18 ← (byte) mode_twoplanebitmap::cx != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_twoplanebitmap::$18) goto mode_twoplanebitmap::@3
  (byte) mode_twoplanebitmap::cy ← ++ (byte) mode_twoplanebitmap::cy
  (boolean~) mode_twoplanebitmap::$19 ← (byte) mode_twoplanebitmap::cy != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_twoplanebitmap::$19) goto mode_twoplanebitmap::@2
  (byte*) mode_twoplanebitmap::gfxa ← (byte*) mode_twoplanebitmap::PLANEA
  (byte) mode_twoplanebitmap::ay ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_twoplanebitmap::@4:
  (byte) mode_twoplanebitmap::ax ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_twoplanebitmap::@5:
  (byte~) mode_twoplanebitmap::$20 ← (byte) mode_twoplanebitmap::ay & (byte/signed byte/word/signed word/dword/signed dword) 4
  (boolean~) mode_twoplanebitmap::$21 ← (byte~) mode_twoplanebitmap::$20 == (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_twoplanebitmap::$22 ← ! (boolean~) mode_twoplanebitmap::$21
  if((boolean~) mode_twoplanebitmap::$22) goto mode_twoplanebitmap::@6
  *((byte*) mode_twoplanebitmap::gfxa) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*) mode_twoplanebitmap::gfxa ← ++ (byte*) mode_twoplanebitmap::gfxa
  goto mode_twoplanebitmap::@7
mode_twoplanebitmap::@6:
  *((byte*) mode_twoplanebitmap::gfxa) ← (byte/word/signed word/dword/signed dword) 255
  (byte*) mode_twoplanebitmap::gfxa ← ++ (byte*) mode_twoplanebitmap::gfxa
mode_twoplanebitmap::@7:
  (byte) mode_twoplanebitmap::ax ← ++ (byte) mode_twoplanebitmap::ax
  (boolean~) mode_twoplanebitmap::$23 ← (byte) mode_twoplanebitmap::ax != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_twoplanebitmap::$23) goto mode_twoplanebitmap::@5
  (byte) mode_twoplanebitmap::ay ← ++ (byte) mode_twoplanebitmap::ay
  (boolean~) mode_twoplanebitmap::$24 ← (byte) mode_twoplanebitmap::ay != (byte/word/signed word/dword/signed dword) 200
  if((boolean~) mode_twoplanebitmap::$24) goto mode_twoplanebitmap::@4
  (byte*) mode_twoplanebitmap::gfxb ← (byte*) mode_twoplanebitmap::PLANEB
  (byte) mode_twoplanebitmap::by ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_twoplanebitmap::@8:
  (byte) mode_twoplanebitmap::bx ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_twoplanebitmap::@9:
  *((byte*) mode_twoplanebitmap::gfxb) ← (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte*) mode_twoplanebitmap::gfxb ← ++ (byte*) mode_twoplanebitmap::gfxb
  (byte) mode_twoplanebitmap::bx ← ++ (byte) mode_twoplanebitmap::bx
  (boolean~) mode_twoplanebitmap::$25 ← (byte) mode_twoplanebitmap::bx != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_twoplanebitmap::$25) goto mode_twoplanebitmap::@9
  (byte) mode_twoplanebitmap::by ← ++ (byte) mode_twoplanebitmap::by
  (boolean~) mode_twoplanebitmap::$26 ← (byte) mode_twoplanebitmap::by != (byte/word/signed word/dword/signed dword) 200
  if((boolean~) mode_twoplanebitmap::$26) goto mode_twoplanebitmap::@8
mode_twoplanebitmap::@10:
  if(true) goto mode_twoplanebitmap::@11
  goto mode_twoplanebitmap::@12
mode_twoplanebitmap::@11:
  (byte~) mode_twoplanebitmap::$27 ← call keyboard_key_pressed (byte) KEY_SPACE 
  (boolean~) mode_twoplanebitmap::$28 ← (byte~) mode_twoplanebitmap::$27 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_twoplanebitmap::$29 ← ! (boolean~) mode_twoplanebitmap::$28
  if((boolean~) mode_twoplanebitmap::$29) goto mode_twoplanebitmap::@13
  goto mode_twoplanebitmap::@return
mode_twoplanebitmap::@13:
  goto mode_twoplanebitmap::@10
mode_twoplanebitmap::@12:
mode_twoplanebitmap::@return:
  return 
endproc // mode_twoplanebitmap()
proc (void()) mode_sixsfred()
  (byte*) mode_sixsfred::PLANEA ← (word/signed word/dword/signed dword) 16384
  (byte*) mode_sixsfred::PLANEB ← (word/signed word/dword/signed dword) 24576
  (byte*) mode_sixsfred::COLORS ← (word/dword/signed dword) 32768
  (byte~) mode_sixsfred::$0 ← (byte) DTV_CONTROL_HIGHCOLOR_ON | (byte) DTV_CONTROL_LINEAR_ADDRESSING_ON
  *((byte*) DTV_CONTROL) ← (byte~) mode_sixsfred::$0
  (byte~) mode_sixsfred::$1 ← (byte) VIC_ECM | (byte) VIC_BMM
  (byte~) mode_sixsfred::$2 ← (byte~) mode_sixsfred::$1 | (byte) VIC_DEN
  (byte~) mode_sixsfred::$3 ← (byte~) mode_sixsfred::$2 | (byte) VIC_RSEL
  (byte/word/dword~) mode_sixsfred::$4 ← (byte~) mode_sixsfred::$3 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL) ← (byte/word/dword~) mode_sixsfred::$4
  (byte~) mode_sixsfred::$5 ← (byte) VIC_MCM | (byte) VIC_CSEL
  *((byte*) VIC_CONTROL2) ← (byte~) mode_sixsfred::$5
  (byte~) mode_sixsfred::$6 ← < (byte*) mode_sixsfred::PLANEA
  *((byte*) DTV_PLANEA_START_LO) ← (byte~) mode_sixsfred::$6
  (byte~) mode_sixsfred::$7 ← > (byte*) mode_sixsfred::PLANEA
  *((byte*) DTV_PLANEA_START_MI) ← (byte~) mode_sixsfred::$7
  *((byte*) DTV_PLANEA_START_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEA_STEP) ← (byte/signed byte/word/signed word/dword/signed dword) 1
  *((byte*) DTV_PLANEA_MODULO_LO) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEA_MODULO_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte~) mode_sixsfred::$8 ← < (byte*) mode_sixsfred::PLANEB
  *((byte*) DTV_PLANEB_START_LO) ← (byte~) mode_sixsfred::$8
  (byte~) mode_sixsfred::$9 ← > (byte*) mode_sixsfred::PLANEB
  *((byte*) DTV_PLANEB_START_MI) ← (byte~) mode_sixsfred::$9
  *((byte*) DTV_PLANEB_START_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_STEP) ← (byte/signed byte/word/signed word/dword/signed dword) 1
  *((byte*) DTV_PLANEB_MODULO_LO) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_MODULO_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*~) mode_sixsfred::$10 ← (byte*) mode_sixsfred::COLORS / (word/signed word/dword/signed dword) 1024
  (byte~) mode_sixsfred::$11 ← < (byte*~) mode_sixsfred::$10
  *((byte*) DTV_COLOR_BANK_LO) ← (byte~) mode_sixsfred::$11
  (byte*~) mode_sixsfred::$12 ← (byte*) mode_sixsfred::COLORS / (word/signed word/dword/signed dword) 1024
  (byte~) mode_sixsfred::$13 ← > (byte*~) mode_sixsfred::$12
  *((byte*) DTV_COLOR_BANK_HI) ← (byte~) mode_sixsfred::$13
  (byte) mode_sixsfred::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_sixsfred::@1:
  *((byte*) DTV_PALETTE + (byte) mode_sixsfred::i) ← (byte) mode_sixsfred::i
  (byte) mode_sixsfred::i ← ++ (byte) mode_sixsfred::i
  (boolean~) mode_sixsfred::$14 ← (byte) mode_sixsfred::i != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_sixsfred::$14) goto mode_sixsfred::@1
  *((byte*) BORDERCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*) mode_sixsfred::col ← (byte*) mode_sixsfred::COLORS
  (byte) mode_sixsfred::cy ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_sixsfred::@2:
  (byte) mode_sixsfred::cx ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_sixsfred::@3:
  (byte~) mode_sixsfred::$15 ← (byte) mode_sixsfred::cx + (byte) mode_sixsfred::cy
  (byte~) mode_sixsfred::$16 ← (byte~) mode_sixsfred::$15 & (byte/signed byte/word/signed word/dword/signed dword) 15
  *((byte*) mode_sixsfred::col) ← (byte~) mode_sixsfred::$16
  (byte*) mode_sixsfred::col ← ++ (byte*) mode_sixsfred::col
  (byte) mode_sixsfred::cx ← ++ (byte) mode_sixsfred::cx
  (boolean~) mode_sixsfred::$17 ← (byte) mode_sixsfred::cx != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_sixsfred::$17) goto mode_sixsfred::@3
  (byte) mode_sixsfred::cy ← ++ (byte) mode_sixsfred::cy
  (boolean~) mode_sixsfred::$18 ← (byte) mode_sixsfred::cy != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_sixsfred::$18) goto mode_sixsfred::@2
  (byte*) mode_sixsfred::gfxa ← (byte*) mode_sixsfred::PLANEA
  (byte[]) mode_sixsfred::row_bitmask ← { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 85, (byte/word/signed word/dword/signed dword) 170, (byte/word/signed word/dword/signed dword) 255 }
  (byte) mode_sixsfred::ay ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_sixsfred::@4:
  (byte) mode_sixsfred::ax ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_sixsfred::@5:
  (byte~) mode_sixsfred::$19 ← (byte) mode_sixsfred::ay >> (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte~) mode_sixsfred::$20 ← (byte~) mode_sixsfred::$19 & (byte/signed byte/word/signed word/dword/signed dword) 3
  (byte) mode_sixsfred::row ← (byte~) mode_sixsfred::$20
  *((byte*) mode_sixsfred::gfxa) ← *((byte[]) mode_sixsfred::row_bitmask + (byte) mode_sixsfred::row)
  (byte*) mode_sixsfred::gfxa ← ++ (byte*) mode_sixsfred::gfxa
  (byte) mode_sixsfred::ax ← ++ (byte) mode_sixsfred::ax
  (boolean~) mode_sixsfred::$21 ← (byte) mode_sixsfred::ax != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_sixsfred::$21) goto mode_sixsfred::@5
  (byte) mode_sixsfred::ay ← ++ (byte) mode_sixsfred::ay
  (boolean~) mode_sixsfred::$22 ← (byte) mode_sixsfred::ay != (byte/word/signed word/dword/signed dword) 200
  if((boolean~) mode_sixsfred::$22) goto mode_sixsfred::@4
  (byte*) mode_sixsfred::gfxb ← (byte*) mode_sixsfred::PLANEB
  (byte) mode_sixsfred::by ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_sixsfred::@6:
  (byte) mode_sixsfred::bx ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_sixsfred::@7:
  *((byte*) mode_sixsfred::gfxb) ← (byte/signed byte/word/signed word/dword/signed dword) 27
  (byte*) mode_sixsfred::gfxb ← ++ (byte*) mode_sixsfred::gfxb
  (byte) mode_sixsfred::bx ← ++ (byte) mode_sixsfred::bx
  (boolean~) mode_sixsfred::$23 ← (byte) mode_sixsfred::bx != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_sixsfred::$23) goto mode_sixsfred::@7
  (byte) mode_sixsfred::by ← ++ (byte) mode_sixsfred::by
  (boolean~) mode_sixsfred::$24 ← (byte) mode_sixsfred::by != (byte/word/signed word/dword/signed dword) 200
  if((boolean~) mode_sixsfred::$24) goto mode_sixsfred::@6
mode_sixsfred::@8:
  if(true) goto mode_sixsfred::@9
  goto mode_sixsfred::@10
mode_sixsfred::@9:
  (byte~) mode_sixsfred::$25 ← call keyboard_key_pressed (byte) KEY_SPACE 
  (boolean~) mode_sixsfred::$26 ← (byte~) mode_sixsfred::$25 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_sixsfred::$27 ← ! (boolean~) mode_sixsfred::$26
  if((boolean~) mode_sixsfred::$27) goto mode_sixsfred::@11
  goto mode_sixsfred::@return
mode_sixsfred::@11:
  goto mode_sixsfred::@8
mode_sixsfred::@10:
mode_sixsfred::@return:
  return 
endproc // mode_sixsfred()
proc (void()) mode_sixsfred2()
  (byte*) mode_sixsfred2::PLANEA ← (word/signed word/dword/signed dword) 16384
  (byte*) mode_sixsfred2::PLANEB ← (word/signed word/dword/signed dword) 24576
  (byte*) mode_sixsfred2::COLORS ← (word/dword/signed dword) 32768
  *((byte*) DTV_CONTROL) ← (byte) DTV_CONTROL_LINEAR_ADDRESSING_ON
  (byte~) mode_sixsfred2::$0 ← (byte) VIC_ECM | (byte) VIC_BMM
  (byte~) mode_sixsfred2::$1 ← (byte~) mode_sixsfred2::$0 | (byte) VIC_DEN
  (byte~) mode_sixsfred2::$2 ← (byte~) mode_sixsfred2::$1 | (byte) VIC_RSEL
  (byte/word/dword~) mode_sixsfred2::$3 ← (byte~) mode_sixsfred2::$2 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL) ← (byte/word/dword~) mode_sixsfred2::$3
  (byte~) mode_sixsfred2::$4 ← (byte) VIC_MCM | (byte) VIC_CSEL
  *((byte*) VIC_CONTROL2) ← (byte~) mode_sixsfred2::$4
  (byte~) mode_sixsfred2::$5 ← < (byte*) mode_sixsfred2::PLANEA
  *((byte*) DTV_PLANEA_START_LO) ← (byte~) mode_sixsfred2::$5
  (byte~) mode_sixsfred2::$6 ← > (byte*) mode_sixsfred2::PLANEA
  *((byte*) DTV_PLANEA_START_MI) ← (byte~) mode_sixsfred2::$6
  *((byte*) DTV_PLANEA_START_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEA_STEP) ← (byte/signed byte/word/signed word/dword/signed dword) 1
  *((byte*) DTV_PLANEA_MODULO_LO) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEA_MODULO_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte~) mode_sixsfred2::$7 ← < (byte*) mode_sixsfred2::PLANEB
  *((byte*) DTV_PLANEB_START_LO) ← (byte~) mode_sixsfred2::$7
  (byte~) mode_sixsfred2::$8 ← > (byte*) mode_sixsfred2::PLANEB
  *((byte*) DTV_PLANEB_START_MI) ← (byte~) mode_sixsfred2::$8
  *((byte*) DTV_PLANEB_START_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_STEP) ← (byte/signed byte/word/signed word/dword/signed dword) 1
  *((byte*) DTV_PLANEB_MODULO_LO) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_MODULO_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*~) mode_sixsfred2::$9 ← (byte*) mode_sixsfred2::COLORS / (word/signed word/dword/signed dword) 1024
  (byte~) mode_sixsfred2::$10 ← < (byte*~) mode_sixsfred2::$9
  *((byte*) DTV_COLOR_BANK_LO) ← (byte~) mode_sixsfred2::$10
  (byte*~) mode_sixsfred2::$11 ← (byte*) mode_sixsfred2::COLORS / (word/signed word/dword/signed dword) 1024
  (byte~) mode_sixsfred2::$12 ← > (byte*~) mode_sixsfred2::$11
  *((byte*) DTV_COLOR_BANK_HI) ← (byte~) mode_sixsfred2::$12
  (byte) mode_sixsfred2::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_sixsfred2::@1:
  *((byte*) DTV_PALETTE + (byte) mode_sixsfred2::i) ← (byte) mode_sixsfred2::i
  (byte) mode_sixsfred2::i ← ++ (byte) mode_sixsfred2::i
  (boolean~) mode_sixsfred2::$13 ← (byte) mode_sixsfred2::i != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_sixsfred2::$13) goto mode_sixsfred2::@1
  *((byte*) BORDERCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*) mode_sixsfred2::col ← (byte*) mode_sixsfred2::COLORS
  (byte) mode_sixsfred2::cy ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_sixsfred2::@2:
  (byte) mode_sixsfred2::cx ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_sixsfred2::@3:
  (byte~) mode_sixsfred2::$14 ← (byte) mode_sixsfred2::cx & (byte/signed byte/word/signed word/dword/signed dword) 3
  (byte~) mode_sixsfred2::$15 ← (byte~) mode_sixsfred2::$14 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_sixsfred2::$16 ← (byte) mode_sixsfred2::cy & (byte/signed byte/word/signed word/dword/signed dword) 3
  (byte~) mode_sixsfred2::$17 ← (byte~) mode_sixsfred2::$15 | (byte~) mode_sixsfred2::$16
  *((byte*) mode_sixsfred2::col) ← (byte~) mode_sixsfred2::$17
  (byte*) mode_sixsfred2::col ← ++ (byte*) mode_sixsfred2::col
  (byte) mode_sixsfred2::cx ← ++ (byte) mode_sixsfred2::cx
  (boolean~) mode_sixsfred2::$18 ← (byte) mode_sixsfred2::cx != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_sixsfred2::$18) goto mode_sixsfred2::@3
  (byte) mode_sixsfred2::cy ← ++ (byte) mode_sixsfred2::cy
  (boolean~) mode_sixsfred2::$19 ← (byte) mode_sixsfred2::cy != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_sixsfred2::$19) goto mode_sixsfred2::@2
  (byte*) mode_sixsfred2::gfxa ← (byte*) mode_sixsfred2::PLANEA
  (byte[]) mode_sixsfred2::row_bitmask ← { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 85, (byte/word/signed word/dword/signed dword) 170, (byte/word/signed word/dword/signed dword) 255 }
  (byte) mode_sixsfred2::ay ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_sixsfred2::@4:
  (byte) mode_sixsfred2::ax ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_sixsfred2::@5:
  (byte~) mode_sixsfred2::$20 ← (byte) mode_sixsfred2::ay >> (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte~) mode_sixsfred2::$21 ← (byte~) mode_sixsfred2::$20 & (byte/signed byte/word/signed word/dword/signed dword) 3
  (byte) mode_sixsfred2::row ← (byte~) mode_sixsfred2::$21
  *((byte*) mode_sixsfred2::gfxa) ← *((byte[]) mode_sixsfred2::row_bitmask + (byte) mode_sixsfred2::row)
  (byte*) mode_sixsfred2::gfxa ← ++ (byte*) mode_sixsfred2::gfxa
  (byte) mode_sixsfred2::ax ← ++ (byte) mode_sixsfred2::ax
  (boolean~) mode_sixsfred2::$22 ← (byte) mode_sixsfred2::ax != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_sixsfred2::$22) goto mode_sixsfred2::@5
  (byte) mode_sixsfred2::ay ← ++ (byte) mode_sixsfred2::ay
  (boolean~) mode_sixsfred2::$23 ← (byte) mode_sixsfred2::ay != (byte/word/signed word/dword/signed dword) 200
  if((boolean~) mode_sixsfred2::$23) goto mode_sixsfred2::@4
  (byte*) mode_sixsfred2::gfxb ← (byte*) mode_sixsfred2::PLANEB
  (byte) mode_sixsfred2::by ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_sixsfred2::@6:
  (byte) mode_sixsfred2::bx ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_sixsfred2::@7:
  *((byte*) mode_sixsfred2::gfxb) ← (byte/signed byte/word/signed word/dword/signed dword) 27
  (byte*) mode_sixsfred2::gfxb ← ++ (byte*) mode_sixsfred2::gfxb
  (byte) mode_sixsfred2::bx ← ++ (byte) mode_sixsfred2::bx
  (boolean~) mode_sixsfred2::$24 ← (byte) mode_sixsfred2::bx != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_sixsfred2::$24) goto mode_sixsfred2::@7
  (byte) mode_sixsfred2::by ← ++ (byte) mode_sixsfred2::by
  (boolean~) mode_sixsfred2::$25 ← (byte) mode_sixsfred2::by != (byte/word/signed word/dword/signed dword) 200
  if((boolean~) mode_sixsfred2::$25) goto mode_sixsfred2::@6
mode_sixsfred2::@8:
  if(true) goto mode_sixsfred2::@9
  goto mode_sixsfred2::@10
mode_sixsfred2::@9:
  (byte~) mode_sixsfred2::$26 ← call keyboard_key_pressed (byte) KEY_SPACE 
  (boolean~) mode_sixsfred2::$27 ← (byte~) mode_sixsfred2::$26 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_sixsfred2::$28 ← ! (boolean~) mode_sixsfred2::$27
  if((boolean~) mode_sixsfred2::$28) goto mode_sixsfred2::@11
  goto mode_sixsfred2::@return
mode_sixsfred2::@11:
  goto mode_sixsfred2::@8
mode_sixsfred2::@10:
mode_sixsfred2::@return:
  return 
endproc // mode_sixsfred2()
proc (void()) mode_8bpppixelcell()
  (byte*) mode_8bpppixelcell::PLANEA ← (word/signed word/dword/signed dword) 15360
  (byte*) mode_8bpppixelcell::PLANEB ← (word/signed word/dword/signed dword) 16384
  (byte~) mode_8bpppixelcell::$0 ← (byte) DTV_CONTROL_HIGHCOLOR_ON | (byte) DTV_CONTROL_LINEAR_ADDRESSING_ON
  (byte~) mode_8bpppixelcell::$1 ← (byte~) mode_8bpppixelcell::$0 | (byte) DTV_CONTROL_CHUNKY_ON
  *((byte*) DTV_CONTROL) ← (byte~) mode_8bpppixelcell::$1
  (byte~) mode_8bpppixelcell::$2 ← (byte) VIC_ECM | (byte) VIC_DEN
  (byte~) mode_8bpppixelcell::$3 ← (byte~) mode_8bpppixelcell::$2 | (byte) VIC_RSEL
  (byte/word/dword~) mode_8bpppixelcell::$4 ← (byte~) mode_8bpppixelcell::$3 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL) ← (byte/word/dword~) mode_8bpppixelcell::$4
  (byte~) mode_8bpppixelcell::$5 ← (byte) VIC_MCM | (byte) VIC_CSEL
  *((byte*) VIC_CONTROL2) ← (byte~) mode_8bpppixelcell::$5
  (byte~) mode_8bpppixelcell::$6 ← < (byte*) mode_8bpppixelcell::PLANEA
  *((byte*) DTV_PLANEA_START_LO) ← (byte~) mode_8bpppixelcell::$6
  (byte~) mode_8bpppixelcell::$7 ← > (byte*) mode_8bpppixelcell::PLANEA
  *((byte*) DTV_PLANEA_START_MI) ← (byte~) mode_8bpppixelcell::$7
  *((byte*) DTV_PLANEA_START_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEA_STEP) ← (byte/signed byte/word/signed word/dword/signed dword) 1
  *((byte*) DTV_PLANEA_MODULO_LO) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEA_MODULO_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte~) mode_8bpppixelcell::$8 ← < (byte*) mode_8bpppixelcell::PLANEB
  *((byte*) DTV_PLANEB_START_LO) ← (byte~) mode_8bpppixelcell::$8
  (byte~) mode_8bpppixelcell::$9 ← > (byte*) mode_8bpppixelcell::PLANEB
  *((byte*) DTV_PLANEB_START_MI) ← (byte~) mode_8bpppixelcell::$9
  *((byte*) DTV_PLANEB_START_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_STEP) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_MODULO_LO) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_MODULO_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BORDERCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) mode_8bpppixelcell::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_8bpppixelcell::@1:
  *((byte*) DTV_PALETTE + (byte) mode_8bpppixelcell::i) ← (byte) mode_8bpppixelcell::i
  (byte) mode_8bpppixelcell::i ← ++ (byte) mode_8bpppixelcell::i
  (boolean~) mode_8bpppixelcell::$10 ← (byte) mode_8bpppixelcell::i != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_8bpppixelcell::$10) goto mode_8bpppixelcell::@1
  (byte*) mode_8bpppixelcell::gfxa ← (byte*) mode_8bpppixelcell::PLANEA
  (byte) mode_8bpppixelcell::ay ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_8bpppixelcell::@2:
  (byte) mode_8bpppixelcell::ax ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_8bpppixelcell::@3:
  (byte~) mode_8bpppixelcell::$11 ← (byte) mode_8bpppixelcell::ay & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_8bpppixelcell::$12 ← (byte~) mode_8bpppixelcell::$11 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_8bpppixelcell::$13 ← (byte) mode_8bpppixelcell::ax & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_8bpppixelcell::$14 ← (byte~) mode_8bpppixelcell::$12 | (byte~) mode_8bpppixelcell::$13
  *((byte*) mode_8bpppixelcell::gfxa) ← (byte~) mode_8bpppixelcell::$14
  (byte*) mode_8bpppixelcell::gfxa ← ++ (byte*) mode_8bpppixelcell::gfxa
  (byte) mode_8bpppixelcell::ax ← ++ (byte) mode_8bpppixelcell::ax
  (boolean~) mode_8bpppixelcell::$15 ← (byte) mode_8bpppixelcell::ax != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_8bpppixelcell::$15) goto mode_8bpppixelcell::@3
  (byte) mode_8bpppixelcell::ay ← ++ (byte) mode_8bpppixelcell::ay
  (boolean~) mode_8bpppixelcell::$16 ← (byte) mode_8bpppixelcell::ay != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_8bpppixelcell::$16) goto mode_8bpppixelcell::@2
  *((byte*) PROCPORT) ← (byte/signed byte/word/signed word/dword/signed dword) 50
  (byte*) mode_8bpppixelcell::CHARGEN ← (word/dword/signed dword) 53248
  (byte*) mode_8bpppixelcell::gfxb ← (byte*) mode_8bpppixelcell::PLANEB
  (byte*) mode_8bpppixelcell::chargen ← (byte*) mode_8bpppixelcell::CHARGEN
  (byte) mode_8bpppixelcell::col ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) mode_8bpppixelcell::ch ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_8bpppixelcell::@4:
  (byte) mode_8bpppixelcell::cr ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_8bpppixelcell::@5:
  (byte) mode_8bpppixelcell::bits ← *((byte*) mode_8bpppixelcell::chargen)
  (byte*) mode_8bpppixelcell::chargen ← ++ (byte*) mode_8bpppixelcell::chargen
  (byte) mode_8bpppixelcell::cp ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_8bpppixelcell::@6:
  (byte) mode_8bpppixelcell::c ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte~) mode_8bpppixelcell::$17 ← (byte) mode_8bpppixelcell::bits & (byte/word/signed word/dword/signed dword) 128
  (boolean~) mode_8bpppixelcell::$18 ← (byte~) mode_8bpppixelcell::$17 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_8bpppixelcell::$19 ← ! (boolean~) mode_8bpppixelcell::$18
  if((boolean~) mode_8bpppixelcell::$19) goto mode_8bpppixelcell::@7
  (byte) mode_8bpppixelcell::c ← (byte) mode_8bpppixelcell::col
mode_8bpppixelcell::@7:
  *((byte*) mode_8bpppixelcell::gfxb) ← (byte) mode_8bpppixelcell::c
  (byte*) mode_8bpppixelcell::gfxb ← ++ (byte*) mode_8bpppixelcell::gfxb
  (byte~) mode_8bpppixelcell::$20 ← (byte) mode_8bpppixelcell::bits << (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte) mode_8bpppixelcell::bits ← (byte~) mode_8bpppixelcell::$20
  (byte) mode_8bpppixelcell::col ← ++ (byte) mode_8bpppixelcell::col
  (byte) mode_8bpppixelcell::cp ← ++ (byte) mode_8bpppixelcell::cp
  (boolean~) mode_8bpppixelcell::$21 ← (byte) mode_8bpppixelcell::cp != (byte/signed byte/word/signed word/dword/signed dword) 8
  if((boolean~) mode_8bpppixelcell::$21) goto mode_8bpppixelcell::@6
  (byte) mode_8bpppixelcell::cr ← ++ (byte) mode_8bpppixelcell::cr
  (boolean~) mode_8bpppixelcell::$22 ← (byte) mode_8bpppixelcell::cr != (byte/signed byte/word/signed word/dword/signed dword) 8
  if((boolean~) mode_8bpppixelcell::$22) goto mode_8bpppixelcell::@5
  (byte) mode_8bpppixelcell::ch ← ++ (byte) mode_8bpppixelcell::ch
  (boolean~) mode_8bpppixelcell::$23 ← (byte) mode_8bpppixelcell::ch != (byte/signed byte/word/signed word/dword/signed dword) 0
  if((boolean~) mode_8bpppixelcell::$23) goto mode_8bpppixelcell::@4
  *((byte*) PROCPORT) ← (byte/signed byte/word/signed word/dword/signed dword) 55
mode_8bpppixelcell::@8:
  if(true) goto mode_8bpppixelcell::@9
  goto mode_8bpppixelcell::@10
mode_8bpppixelcell::@9:
  (byte~) mode_8bpppixelcell::$24 ← call keyboard_key_pressed (byte) KEY_SPACE 
  (boolean~) mode_8bpppixelcell::$25 ← (byte~) mode_8bpppixelcell::$24 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_8bpppixelcell::$26 ← ! (boolean~) mode_8bpppixelcell::$25
  if((boolean~) mode_8bpppixelcell::$26) goto mode_8bpppixelcell::@11
  goto mode_8bpppixelcell::@return
mode_8bpppixelcell::@11:
  goto mode_8bpppixelcell::@8
mode_8bpppixelcell::@10:
mode_8bpppixelcell::@return:
  return 
endproc // mode_8bpppixelcell()
proc (void()) mode_8bppchunkybmm()
  (dword) mode_8bppchunkybmm::PLANEB ← (dword/signed dword) 131072
  (byte~) mode_8bppchunkybmm::$0 ← (byte) DTV_CONTROL_HIGHCOLOR_ON | (byte) DTV_CONTROL_LINEAR_ADDRESSING_ON
  (byte~) mode_8bppchunkybmm::$1 ← (byte~) mode_8bppchunkybmm::$0 | (byte) DTV_CONTROL_CHUNKY_ON
  (byte~) mode_8bppchunkybmm::$2 ← (byte~) mode_8bppchunkybmm::$1 | (byte) DTV_CONTROL_COLORRAM_OFF
  *((byte*) DTV_CONTROL) ← (byte~) mode_8bppchunkybmm::$2
  (byte~) mode_8bppchunkybmm::$3 ← (byte) VIC_ECM | (byte) VIC_DEN
  (byte~) mode_8bppchunkybmm::$4 ← (byte~) mode_8bppchunkybmm::$3 | (byte) VIC_RSEL
  (byte/word/dword~) mode_8bppchunkybmm::$5 ← (byte~) mode_8bppchunkybmm::$4 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL) ← (byte/word/dword~) mode_8bppchunkybmm::$5
  (byte~) mode_8bppchunkybmm::$6 ← (byte) VIC_MCM | (byte) VIC_CSEL
  *((byte*) VIC_CONTROL2) ← (byte~) mode_8bppchunkybmm::$6
  (word~) mode_8bppchunkybmm::$7 ← < (dword) mode_8bppchunkybmm::PLANEB
  (byte~) mode_8bppchunkybmm::$8 ← < (word~) mode_8bppchunkybmm::$7
  *((byte*) DTV_PLANEB_START_LO) ← (byte~) mode_8bppchunkybmm::$8
  (word~) mode_8bppchunkybmm::$9 ← < (dword) mode_8bppchunkybmm::PLANEB
  (byte~) mode_8bppchunkybmm::$10 ← > (word~) mode_8bppchunkybmm::$9
  *((byte*) DTV_PLANEB_START_MI) ← (byte~) mode_8bppchunkybmm::$10
  (word~) mode_8bppchunkybmm::$11 ← > (dword) mode_8bppchunkybmm::PLANEB
  (byte~) mode_8bppchunkybmm::$12 ← < (word~) mode_8bppchunkybmm::$11
  *((byte*) DTV_PLANEB_START_HI) ← (byte~) mode_8bppchunkybmm::$12
  *((byte*) DTV_PLANEB_STEP) ← (byte/signed byte/word/signed word/dword/signed dword) 8
  *((byte*) DTV_PLANEB_MODULO_LO) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_MODULO_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BORDERCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) mode_8bppchunkybmm::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_8bppchunkybmm::@1:
  *((byte*) DTV_PALETTE + (byte) mode_8bppchunkybmm::i) ← (byte) mode_8bppchunkybmm::i
  (byte) mode_8bppchunkybmm::i ← ++ (byte) mode_8bppchunkybmm::i
  (boolean~) mode_8bppchunkybmm::$13 ← (byte) mode_8bppchunkybmm::i != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_8bppchunkybmm::$13) goto mode_8bppchunkybmm::@1
  (dword~) mode_8bppchunkybmm::$14 ← (dword) mode_8bppchunkybmm::PLANEB / (word/signed word/dword/signed dword) 16384
  (byte~) mode_8bppchunkybmm::$15 ← ((byte)) (dword~) mode_8bppchunkybmm::$14
  (byte) mode_8bppchunkybmm::gfxbCpuBank ← (byte~) mode_8bppchunkybmm::$15
  (void~) mode_8bppchunkybmm::$16 ← call dtvSetCpuBankSegment1 (byte) mode_8bppchunkybmm::gfxbCpuBank 
  (byte) mode_8bppchunkybmm::gfxbCpuBank ← ++ (byte) mode_8bppchunkybmm::gfxbCpuBank
  (byte*) mode_8bppchunkybmm::gfxb ← (word/signed word/dword/signed dword) 16384
  (byte) mode_8bppchunkybmm::y ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_8bppchunkybmm::@2:
  (word) mode_8bppchunkybmm::x ← (byte/signed byte/word/signed word/dword/signed dword) 0
mode_8bppchunkybmm::@3:
  (boolean~) mode_8bppchunkybmm::$17 ← (byte*) mode_8bppchunkybmm::gfxb == (word/dword/signed dword) 32768
  (boolean~) mode_8bppchunkybmm::$18 ← ! (boolean~) mode_8bppchunkybmm::$17
  if((boolean~) mode_8bppchunkybmm::$18) goto mode_8bppchunkybmm::@4
  (void~) mode_8bppchunkybmm::$19 ← call dtvSetCpuBankSegment1 (byte) mode_8bppchunkybmm::gfxbCpuBank 
  (byte) mode_8bppchunkybmm::gfxbCpuBank ← ++ (byte) mode_8bppchunkybmm::gfxbCpuBank
  (byte*) mode_8bppchunkybmm::gfxb ← (word/signed word/dword/signed dword) 16384
mode_8bppchunkybmm::@4:
  (word~) mode_8bppchunkybmm::$20 ← (word) mode_8bppchunkybmm::x + (byte) mode_8bppchunkybmm::y
  (byte~) mode_8bppchunkybmm::$21 ← ((byte)) (word~) mode_8bppchunkybmm::$20
  (byte) mode_8bppchunkybmm::c ← (byte~) mode_8bppchunkybmm::$21
  *((byte*) mode_8bppchunkybmm::gfxb) ← (byte) mode_8bppchunkybmm::c
  (byte*) mode_8bppchunkybmm::gfxb ← ++ (byte*) mode_8bppchunkybmm::gfxb
  (word) mode_8bppchunkybmm::x ← ++ (word) mode_8bppchunkybmm::x
  (boolean~) mode_8bppchunkybmm::$22 ← (word) mode_8bppchunkybmm::x != (word/signed word/dword/signed dword) 320
  if((boolean~) mode_8bppchunkybmm::$22) goto mode_8bppchunkybmm::@3
  (byte) mode_8bppchunkybmm::y ← ++ (byte) mode_8bppchunkybmm::y
  (boolean~) mode_8bppchunkybmm::$23 ← (byte) mode_8bppchunkybmm::y != (byte/word/signed word/dword/signed dword) 200
  if((boolean~) mode_8bppchunkybmm::$23) goto mode_8bppchunkybmm::@2
  (byte/signed byte/word/signed word/dword/signed dword~) mode_8bppchunkybmm::$24 ← (word/signed word/dword/signed dword) 16384 / (word/signed word/dword/signed dword) 16384
  (byte~) mode_8bppchunkybmm::$25 ← ((byte)) (byte/signed byte/word/signed word/dword/signed dword~) mode_8bppchunkybmm::$24
  (void~) mode_8bppchunkybmm::$26 ← call dtvSetCpuBankSegment1 (byte~) mode_8bppchunkybmm::$25 
mode_8bppchunkybmm::@5:
  if(true) goto mode_8bppchunkybmm::@6
  goto mode_8bppchunkybmm::@7
mode_8bppchunkybmm::@6:
  (byte~) mode_8bppchunkybmm::$27 ← call keyboard_key_pressed (byte) KEY_SPACE 
  (boolean~) mode_8bppchunkybmm::$28 ← (byte~) mode_8bppchunkybmm::$27 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_8bppchunkybmm::$29 ← ! (boolean~) mode_8bppchunkybmm::$28
  if((boolean~) mode_8bppchunkybmm::$29) goto mode_8bppchunkybmm::@8
  goto mode_8bppchunkybmm::@return
mode_8bppchunkybmm::@8:
  goto mode_8bppchunkybmm::@5
mode_8bppchunkybmm::@7:
mode_8bppchunkybmm::@return:
  return 
endproc // mode_8bppchunkybmm()
  call main 

SYMBOLS
(string~) $0
(string~) $1
(string~) $10
(string~) $11
(string~) $12
(string~) $13
(string~) $14
(string~) $15
(string~) $16
(string~) $17
(string~) $18
(string~) $19
(string~) $2
(string~) $3
(string~) $4
(string~) $5
(string~) $6
(string~) $7
(string~) $8
(string~) $9
(byte*) BGCOL
(byte*) BGCOL1
(byte*) BGCOL2
(byte*) BGCOL3
(byte*) BGCOL4
(byte) BLACK
(byte) BLUE
(byte*) BORDERCOL
(byte) BROWN
(byte*) CHARGEN
(byte*) CIA1_PORT_A
(byte*) CIA1_PORT_A_DDR
(byte*) CIA1_PORT_B
(byte*) CIA1_PORT_B_DDR
(byte*) CIA2_PORT_A
(byte*) CIA2_PORT_A_DDR
(byte*) CIA2_PORT_B
(byte*) CIA2_PORT_B_DDR
(byte*) COLS
(byte) CYAN
(byte*) D011
(byte*) D016
(byte*) D018
(byte) DARK_GREY
(dword) DTV_COLOR_BANK_DEFAULT
(byte*) DTV_COLOR_BANK_HI
(byte*) DTV_COLOR_BANK_LO
(byte*) DTV_CONTROL
(byte) DTV_CONTROL_BADLINE_OFF
(byte) DTV_CONTROL_BORDER_OFF
(byte) DTV_CONTROL_CHUNKY_ON
(byte) DTV_CONTROL_COLORRAM_OFF
(byte) DTV_CONTROL_HIGHCOLOR_ON
(byte) DTV_CONTROL_LINEAR_ADDRESSING_ON
(byte) DTV_CONTROL_OVERSCAN_ON
(byte*) DTV_FEATURE
(byte) DTV_FEATURE_DISABLE_TIL_RESET
(byte) DTV_FEATURE_ENABLE
(byte*) DTV_GRAPHICS_HICOL_BANK
(byte*) DTV_GRAPHICS_VIC_BANK
(byte*) DTV_PALETTE
(byte[16]) DTV_PALETTE_DEFAULT
(byte*) DTV_PLANEA_MODULO_HI
(byte*) DTV_PLANEA_MODULO_LO
(byte*) DTV_PLANEA_START_HI
(byte*) DTV_PLANEA_START_LO
(byte*) DTV_PLANEA_START_MI
(byte*) DTV_PLANEA_STEP
(byte*) DTV_PLANEB_MODULO_HI
(byte*) DTV_PLANEB_MODULO_LO
(byte*) DTV_PLANEB_START_HI
(byte*) DTV_PLANEB_START_LO
(byte*) DTV_PLANEB_START_MI
(byte*) DTV_PLANEB_STEP
(byte*) DTV_SPRITE_BANK
(byte) GREEN
(byte) GREY
(byte) KEY_0
(byte) KEY_1
(byte) KEY_2
(byte) KEY_3
(byte) KEY_4
(byte) KEY_5
(byte) KEY_6
(byte) KEY_7
(byte) KEY_8
(byte) KEY_9
(byte) KEY_A
(byte) KEY_ARROW_LEFT
(byte) KEY_ARROW_UP
(byte) KEY_ASTERISK
(byte) KEY_AT
(byte) KEY_B
(byte) KEY_C
(byte) KEY_COLON
(byte) KEY_COMMA
(byte) KEY_COMMODORE
(byte) KEY_CRSR_DOWN
(byte) KEY_CRSR_RIGHT
(byte) KEY_CTRL
(byte) KEY_D
(byte) KEY_DEL
(byte) KEY_DOT
(byte) KEY_E
(byte) KEY_EQUALS
(byte) KEY_F
(byte) KEY_F1
(byte) KEY_F3
(byte) KEY_F5
(byte) KEY_F7
(byte) KEY_G
(byte) KEY_H
(byte) KEY_HOME
(byte) KEY_I
(byte) KEY_J
(byte) KEY_K
(byte) KEY_L
(byte) KEY_LSHIFT
(byte) KEY_M
(byte) KEY_MINUS
(byte) KEY_N
(byte) KEY_O
(byte) KEY_P
(byte) KEY_PLUS
(byte) KEY_POUND
(byte) KEY_Q
(byte) KEY_R
(byte) KEY_RETURN
(byte) KEY_RSHIFT
(byte) KEY_RUNSTOP
(byte) KEY_S
(byte) KEY_SEMICOLON
(byte) KEY_SLASH
(byte) KEY_SPACE
(byte) KEY_T
(byte) KEY_U
(byte) KEY_V
(byte) KEY_W
(byte) KEY_X
(byte) KEY_Y
(byte) KEY_Z
(byte) LIGHT_BLUE
(byte) LIGHT_GREEN
(byte) LIGHT_GREY
(byte[]) MENU_TEXT
(byte) ORANGE
(byte) PINK
(byte*) PROCPORT
(byte) PURPLE
(byte*) RASTER
(byte) RED
(byte*) SPRITES_COLS
(byte*) SPRITES_ENABLE
(byte*) SPRITES_EXPAND_X
(byte*) SPRITES_EXPAND_Y
(byte*) SPRITES_MC
(byte*) SPRITES_MC1
(byte*) SPRITES_MC2
(byte*) SPRITES_PRIORITY
(byte*) SPRITES_XMSB
(byte*) SPRITES_XPOS
(byte*) SPRITES_YPOS
(byte) VIC_BMM
(byte*) VIC_CONTROL
(byte*) VIC_CONTROL2
(byte) VIC_CSEL
(byte) VIC_DEN
(byte) VIC_ECM
(byte) VIC_MCM
(byte*) VIC_MEMORY
(byte) VIC_RSEL
(byte) VIC_RST8
(byte) WHITE
(byte) YELLOW
(void()) dtvSetCpuBankSegment1((byte) dtvSetCpuBankSegment1::cpuBankIdx)
(label) dtvSetCpuBankSegment1::@return
(byte*) dtvSetCpuBankSegment1::cpuBank
(byte) dtvSetCpuBankSegment1::cpuBankIdx
(byte[]) keyboard_char_keycodes
(byte()) keyboard_get_keycode((byte) keyboard_get_keycode::ch)
(label) keyboard_get_keycode::@return
(byte) keyboard_get_keycode::ch
(byte) keyboard_get_keycode::return
(void()) keyboard_init()
(label) keyboard_init::@return
(byte()) keyboard_key_pressed((byte) keyboard_key_pressed::key)
(byte~) keyboard_key_pressed::$0
(byte~) keyboard_key_pressed::$1
(byte~) keyboard_key_pressed::$2
(byte~) keyboard_key_pressed::$3
(label) keyboard_key_pressed::@return
(byte) keyboard_key_pressed::colidx
(byte) keyboard_key_pressed::key
(byte) keyboard_key_pressed::return
(byte) keyboard_key_pressed::rowidx
(byte[]) keyboard_matrix_col_bitmask
(byte()) keyboard_matrix_read((byte) keyboard_matrix_read::rowid)
(byte~) keyboard_matrix_read::$0
(label) keyboard_matrix_read::@return
(byte) keyboard_matrix_read::return
(byte) keyboard_matrix_read::row_pressed_bits
(byte) keyboard_matrix_read::rowid
(byte[8]) keyboard_matrix_row_bitmask
(void()) main()
(void~) main::$0
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@return
(void()) menu()
(dword~) menu::$0
(dword~) menu::$1
(word/signed dword/dword~) menu::$10
(byte~) menu::$11
(byte/word/dword~) menu::$12
(byte~) menu::$13
(byte/word/dword~) menu::$14
(word~) menu::$15
(word~) menu::$16
(word/signed dword/dword~) menu::$17
(word~) menu::$18
(word~) menu::$19
(byte~) menu::$2
(word/signed dword/dword~) menu::$20
(word/dword~) menu::$21
(byte~) menu::$22
(boolean~) menu::$23
(byte*~) menu::$24
(boolean~) menu::$25
(void~) menu::$26
(void~) menu::$27
(void~) menu::$28
(byte~) menu::$29
(dword~) menu::$3
(boolean~) menu::$30
(boolean~) menu::$31
(void~) menu::$32
(byte~) menu::$33
(boolean~) menu::$34
(boolean~) menu::$35
(void~) menu::$36
(byte~) menu::$37
(boolean~) menu::$38
(boolean~) menu::$39
(word~) menu::$4
(void~) menu::$40
(byte~) menu::$41
(boolean~) menu::$42
(boolean~) menu::$43
(void~) menu::$44
(byte~) menu::$45
(boolean~) menu::$46
(boolean~) menu::$47
(void~) menu::$48
(byte~) menu::$49
(byte~) menu::$5
(boolean~) menu::$50
(boolean~) menu::$51
(void~) menu::$52
(byte~) menu::$53
(boolean~) menu::$54
(boolean~) menu::$55
(void~) menu::$56
(byte~) menu::$57
(boolean~) menu::$58
(boolean~) menu::$59
(dword~) menu::$6
(void~) menu::$60
(byte~) menu::$61
(boolean~) menu::$62
(boolean~) menu::$63
(void~) menu::$64
(byte~) menu::$65
(boolean~) menu::$66
(boolean~) menu::$67
(void~) menu::$68
(byte~) menu::$69
(word~) menu::$7
(boolean~) menu::$70
(boolean~) menu::$71
(void~) menu::$72
(byte~) menu::$8
(word~) menu::$9
(label) menu::@1
(label) menu::@10
(label) menu::@11
(label) menu::@12
(label) menu::@13
(label) menu::@14
(label) menu::@15
(label) menu::@16
(label) menu::@2
(label) menu::@3
(label) menu::@4
(label) menu::@5
(label) menu::@6
(label) menu::@7
(label) menu::@8
(label) menu::@9
(label) menu::@return
(byte*) menu::CHARSET
(byte*) menu::SCREEN
(byte*) menu::c
(byte) menu::i
(void()) mode_8bppchunkybmm()
(byte~) mode_8bppchunkybmm::$0
(byte~) mode_8bppchunkybmm::$1
(byte~) mode_8bppchunkybmm::$10
(word~) mode_8bppchunkybmm::$11
(byte~) mode_8bppchunkybmm::$12
(boolean~) mode_8bppchunkybmm::$13
(dword~) mode_8bppchunkybmm::$14
(byte~) mode_8bppchunkybmm::$15
(void~) mode_8bppchunkybmm::$16
(boolean~) mode_8bppchunkybmm::$17
(boolean~) mode_8bppchunkybmm::$18
(void~) mode_8bppchunkybmm::$19
(byte~) mode_8bppchunkybmm::$2
(word~) mode_8bppchunkybmm::$20
(byte~) mode_8bppchunkybmm::$21
(boolean~) mode_8bppchunkybmm::$22
(boolean~) mode_8bppchunkybmm::$23
(byte/signed byte/word/signed word/dword/signed dword~) mode_8bppchunkybmm::$24
(byte~) mode_8bppchunkybmm::$25
(void~) mode_8bppchunkybmm::$26
(byte~) mode_8bppchunkybmm::$27
(boolean~) mode_8bppchunkybmm::$28
(boolean~) mode_8bppchunkybmm::$29
(byte~) mode_8bppchunkybmm::$3
(byte~) mode_8bppchunkybmm::$4
(byte/word/dword~) mode_8bppchunkybmm::$5
(byte~) mode_8bppchunkybmm::$6
(word~) mode_8bppchunkybmm::$7
(byte~) mode_8bppchunkybmm::$8
(word~) mode_8bppchunkybmm::$9
(label) mode_8bppchunkybmm::@1
(label) mode_8bppchunkybmm::@2
(label) mode_8bppchunkybmm::@3
(label) mode_8bppchunkybmm::@4
(label) mode_8bppchunkybmm::@5
(label) mode_8bppchunkybmm::@6
(label) mode_8bppchunkybmm::@7
(label) mode_8bppchunkybmm::@8
(label) mode_8bppchunkybmm::@return
(dword) mode_8bppchunkybmm::PLANEB
(byte) mode_8bppchunkybmm::c
(byte*) mode_8bppchunkybmm::gfxb
(byte) mode_8bppchunkybmm::gfxbCpuBank
(byte) mode_8bppchunkybmm::i
(word) mode_8bppchunkybmm::x
(byte) mode_8bppchunkybmm::y
(void()) mode_8bpppixelcell()
(byte~) mode_8bpppixelcell::$0
(byte~) mode_8bpppixelcell::$1
(boolean~) mode_8bpppixelcell::$10
(byte~) mode_8bpppixelcell::$11
(byte~) mode_8bpppixelcell::$12
(byte~) mode_8bpppixelcell::$13
(byte~) mode_8bpppixelcell::$14
(boolean~) mode_8bpppixelcell::$15
(boolean~) mode_8bpppixelcell::$16
(byte~) mode_8bpppixelcell::$17
(boolean~) mode_8bpppixelcell::$18
(boolean~) mode_8bpppixelcell::$19
(byte~) mode_8bpppixelcell::$2
(byte~) mode_8bpppixelcell::$20
(boolean~) mode_8bpppixelcell::$21
(boolean~) mode_8bpppixelcell::$22
(boolean~) mode_8bpppixelcell::$23
(byte~) mode_8bpppixelcell::$24
(boolean~) mode_8bpppixelcell::$25
(boolean~) mode_8bpppixelcell::$26
(byte~) mode_8bpppixelcell::$3
(byte/word/dword~) mode_8bpppixelcell::$4
(byte~) mode_8bpppixelcell::$5
(byte~) mode_8bpppixelcell::$6
(byte~) mode_8bpppixelcell::$7
(byte~) mode_8bpppixelcell::$8
(byte~) mode_8bpppixelcell::$9
(label) mode_8bpppixelcell::@1
(label) mode_8bpppixelcell::@10
(label) mode_8bpppixelcell::@11
(label) mode_8bpppixelcell::@2
(label) mode_8bpppixelcell::@3
(label) mode_8bpppixelcell::@4
(label) mode_8bpppixelcell::@5
(label) mode_8bpppixelcell::@6
(label) mode_8bpppixelcell::@7
(label) mode_8bpppixelcell::@8
(label) mode_8bpppixelcell::@9
(label) mode_8bpppixelcell::@return
(byte*) mode_8bpppixelcell::CHARGEN
(byte*) mode_8bpppixelcell::PLANEA
(byte*) mode_8bpppixelcell::PLANEB
(byte) mode_8bpppixelcell::ax
(byte) mode_8bpppixelcell::ay
(byte) mode_8bpppixelcell::bits
(byte) mode_8bpppixelcell::c
(byte) mode_8bpppixelcell::ch
(byte*) mode_8bpppixelcell::chargen
(byte) mode_8bpppixelcell::col
(byte) mode_8bpppixelcell::cp
(byte) mode_8bpppixelcell::cr
(byte*) mode_8bpppixelcell::gfxa
(byte*) mode_8bpppixelcell::gfxb
(byte) mode_8bpppixelcell::i
(void()) mode_ecmchar()
(dword~) mode_ecmchar::$0
(dword~) mode_ecmchar::$1
(word/signed dword/dword~) mode_ecmchar::$10
(byte~) mode_ecmchar::$11
(byte/word/dword~) mode_ecmchar::$12
(byte~) mode_ecmchar::$13
(byte~) mode_ecmchar::$14
(byte/word/dword~) mode_ecmchar::$15
(word~) mode_ecmchar::$16
(word~) mode_ecmchar::$17
(word/signed dword/dword~) mode_ecmchar::$18
(word~) mode_ecmchar::$19
(byte~) mode_ecmchar::$2
(word~) mode_ecmchar::$20
(word/signed dword/dword~) mode_ecmchar::$21
(word/dword~) mode_ecmchar::$22
(byte~) mode_ecmchar::$23
(boolean~) mode_ecmchar::$24
(byte~) mode_ecmchar::$25
(byte~) mode_ecmchar::$26
(byte~) mode_ecmchar::$27
(byte~) mode_ecmchar::$28
(byte~) mode_ecmchar::$29
(byte*~) mode_ecmchar::$3
(byte~) mode_ecmchar::$30
(boolean~) mode_ecmchar::$31
(boolean~) mode_ecmchar::$32
(byte~) mode_ecmchar::$33
(boolean~) mode_ecmchar::$34
(boolean~) mode_ecmchar::$35
(word~) mode_ecmchar::$4
(byte~) mode_ecmchar::$5
(byte*~) mode_ecmchar::$6
(word~) mode_ecmchar::$7
(byte~) mode_ecmchar::$8
(word~) mode_ecmchar::$9
(label) mode_ecmchar::@1
(label) mode_ecmchar::@2
(label) mode_ecmchar::@3
(label) mode_ecmchar::@4
(label) mode_ecmchar::@5
(label) mode_ecmchar::@6
(label) mode_ecmchar::@7
(label) mode_ecmchar::@return
(byte*) mode_ecmchar::ECMCHAR_CHARSET
(byte*) mode_ecmchar::ECMCHAR_COLORS
(byte*) mode_ecmchar::ECMCHAR_SCREEN
(byte*) mode_ecmchar::ch
(byte*) mode_ecmchar::col
(byte) mode_ecmchar::cx
(byte) mode_ecmchar::cy
(byte) mode_ecmchar::i
(void()) mode_hicolecmchar()
(dword~) mode_hicolecmchar::$0
(dword~) mode_hicolecmchar::$1
(word/signed dword/dword~) mode_hicolecmchar::$10
(byte~) mode_hicolecmchar::$11
(byte/word/dword~) mode_hicolecmchar::$12
(byte~) mode_hicolecmchar::$13
(byte~) mode_hicolecmchar::$14
(byte/word/dword~) mode_hicolecmchar::$15
(word~) mode_hicolecmchar::$16
(word~) mode_hicolecmchar::$17
(word/signed dword/dword~) mode_hicolecmchar::$18
(word~) mode_hicolecmchar::$19
(byte~) mode_hicolecmchar::$2
(word~) mode_hicolecmchar::$20
(word/signed dword/dword~) mode_hicolecmchar::$21
(word/dword~) mode_hicolecmchar::$22
(byte~) mode_hicolecmchar::$23
(boolean~) mode_hicolecmchar::$24
(byte~) mode_hicolecmchar::$25
(byte~) mode_hicolecmchar::$26
(byte~) mode_hicolecmchar::$27
(byte~) mode_hicolecmchar::$28
(boolean~) mode_hicolecmchar::$29
(byte*~) mode_hicolecmchar::$3
(boolean~) mode_hicolecmchar::$30
(byte~) mode_hicolecmchar::$31
(boolean~) mode_hicolecmchar::$32
(boolean~) mode_hicolecmchar::$33
(word~) mode_hicolecmchar::$4
(byte~) mode_hicolecmchar::$5
(byte*~) mode_hicolecmchar::$6
(word~) mode_hicolecmchar::$7
(byte~) mode_hicolecmchar::$8
(word~) mode_hicolecmchar::$9
(label) mode_hicolecmchar::@1
(label) mode_hicolecmchar::@2
(label) mode_hicolecmchar::@3
(label) mode_hicolecmchar::@4
(label) mode_hicolecmchar::@5
(label) mode_hicolecmchar::@6
(label) mode_hicolecmchar::@7
(label) mode_hicolecmchar::@return
(byte*) mode_hicolecmchar::CHARSET
(byte*) mode_hicolecmchar::COLORS
(byte*) mode_hicolecmchar::SCREEN
(byte*) mode_hicolecmchar::ch
(byte*) mode_hicolecmchar::col
(byte) mode_hicolecmchar::cx
(byte) mode_hicolecmchar::cy
(byte) mode_hicolecmchar::i
(byte) mode_hicolecmchar::v
(void()) mode_hicolmcchar()
(dword~) mode_hicolmcchar::$0
(dword~) mode_hicolmcchar::$1
(word/signed dword/dword~) mode_hicolmcchar::$10
(byte~) mode_hicolmcchar::$11
(byte/word/dword~) mode_hicolmcchar::$12
(byte~) mode_hicolmcchar::$13
(byte/word/dword~) mode_hicolmcchar::$14
(byte~) mode_hicolmcchar::$15
(word~) mode_hicolmcchar::$16
(word~) mode_hicolmcchar::$17
(word/signed dword/dword~) mode_hicolmcchar::$18
(word~) mode_hicolmcchar::$19
(byte~) mode_hicolmcchar::$2
(word~) mode_hicolmcchar::$20
(word/signed dword/dword~) mode_hicolmcchar::$21
(word/dword~) mode_hicolmcchar::$22
(byte~) mode_hicolmcchar::$23
(boolean~) mode_hicolmcchar::$24
(byte~) mode_hicolmcchar::$25
(byte~) mode_hicolmcchar::$26
(byte~) mode_hicolmcchar::$27
(byte~) mode_hicolmcchar::$28
(boolean~) mode_hicolmcchar::$29
(byte*~) mode_hicolmcchar::$3
(boolean~) mode_hicolmcchar::$30
(byte~) mode_hicolmcchar::$31
(boolean~) mode_hicolmcchar::$32
(boolean~) mode_hicolmcchar::$33
(word~) mode_hicolmcchar::$4
(byte~) mode_hicolmcchar::$5
(byte*~) mode_hicolmcchar::$6
(word~) mode_hicolmcchar::$7
(byte~) mode_hicolmcchar::$8
(word~) mode_hicolmcchar::$9
(label) mode_hicolmcchar::@1
(label) mode_hicolmcchar::@2
(label) mode_hicolmcchar::@3
(label) mode_hicolmcchar::@4
(label) mode_hicolmcchar::@5
(label) mode_hicolmcchar::@6
(label) mode_hicolmcchar::@7
(label) mode_hicolmcchar::@return
(byte*) mode_hicolmcchar::CHARSET
(byte*) mode_hicolmcchar::COLORS
(byte*) mode_hicolmcchar::SCREEN
(byte*) mode_hicolmcchar::ch
(byte*) mode_hicolmcchar::col
(byte) mode_hicolmcchar::cx
(byte) mode_hicolmcchar::cy
(byte) mode_hicolmcchar::i
(byte) mode_hicolmcchar::v
(void()) mode_hicolstdchar()
(dword~) mode_hicolstdchar::$0
(dword~) mode_hicolstdchar::$1
(word/signed dword/dword~) mode_hicolstdchar::$10
(byte~) mode_hicolstdchar::$11
(byte/word/dword~) mode_hicolstdchar::$12
(byte~) mode_hicolstdchar::$13
(byte/word/dword~) mode_hicolstdchar::$14
(word~) mode_hicolstdchar::$15
(word~) mode_hicolstdchar::$16
(word/signed dword/dword~) mode_hicolstdchar::$17
(word~) mode_hicolstdchar::$18
(word~) mode_hicolstdchar::$19
(byte~) mode_hicolstdchar::$2
(word/signed dword/dword~) mode_hicolstdchar::$20
(word/dword~) mode_hicolstdchar::$21
(byte~) mode_hicolstdchar::$22
(boolean~) mode_hicolstdchar::$23
(byte~) mode_hicolstdchar::$24
(byte~) mode_hicolstdchar::$25
(byte~) mode_hicolstdchar::$26
(byte~) mode_hicolstdchar::$27
(boolean~) mode_hicolstdchar::$28
(boolean~) mode_hicolstdchar::$29
(byte*~) mode_hicolstdchar::$3
(byte~) mode_hicolstdchar::$30
(boolean~) mode_hicolstdchar::$31
(boolean~) mode_hicolstdchar::$32
(word~) mode_hicolstdchar::$4
(byte~) mode_hicolstdchar::$5
(byte*~) mode_hicolstdchar::$6
(word~) mode_hicolstdchar::$7
(byte~) mode_hicolstdchar::$8
(word~) mode_hicolstdchar::$9
(label) mode_hicolstdchar::@1
(label) mode_hicolstdchar::@2
(label) mode_hicolstdchar::@3
(label) mode_hicolstdchar::@4
(label) mode_hicolstdchar::@5
(label) mode_hicolstdchar::@6
(label) mode_hicolstdchar::@7
(label) mode_hicolstdchar::@return
(byte*) mode_hicolstdchar::CHARSET
(byte*) mode_hicolstdchar::COLORS
(byte*) mode_hicolstdchar::SCREEN
(byte*) mode_hicolstdchar::ch
(byte*) mode_hicolstdchar::col
(byte) mode_hicolstdchar::cx
(byte) mode_hicolstdchar::cy
(byte) mode_hicolstdchar::i
(byte) mode_hicolstdchar::v
(void()) mode_mcchar()
(dword~) mode_mcchar::$0
(dword~) mode_mcchar::$1
(word/signed dword/dword~) mode_mcchar::$10
(byte~) mode_mcchar::$11
(byte/word/dword~) mode_mcchar::$12
(byte~) mode_mcchar::$13
(byte/word/dword~) mode_mcchar::$14
(byte~) mode_mcchar::$15
(word~) mode_mcchar::$16
(word~) mode_mcchar::$17
(word/signed dword/dword~) mode_mcchar::$18
(word~) mode_mcchar::$19
(byte~) mode_mcchar::$2
(word~) mode_mcchar::$20
(word/signed dword/dword~) mode_mcchar::$21
(word/dword~) mode_mcchar::$22
(byte~) mode_mcchar::$23
(boolean~) mode_mcchar::$24
(byte~) mode_mcchar::$25
(byte~) mode_mcchar::$26
(byte~) mode_mcchar::$27
(byte~) mode_mcchar::$28
(byte~) mode_mcchar::$29
(byte*~) mode_mcchar::$3
(byte~) mode_mcchar::$30
(boolean~) mode_mcchar::$31
(boolean~) mode_mcchar::$32
(byte~) mode_mcchar::$33
(boolean~) mode_mcchar::$34
(boolean~) mode_mcchar::$35
(word~) mode_mcchar::$4
(byte~) mode_mcchar::$5
(byte*~) mode_mcchar::$6
(word~) mode_mcchar::$7
(byte~) mode_mcchar::$8
(word~) mode_mcchar::$9
(label) mode_mcchar::@1
(label) mode_mcchar::@2
(label) mode_mcchar::@3
(label) mode_mcchar::@4
(label) mode_mcchar::@5
(label) mode_mcchar::@6
(label) mode_mcchar::@7
(label) mode_mcchar::@return
(byte*) mode_mcchar::CHARSET
(byte*) mode_mcchar::COLORS
(byte*) mode_mcchar::SCREEN
(byte*) mode_mcchar::ch
(byte*) mode_mcchar::col
(byte) mode_mcchar::cx
(byte) mode_mcchar::cy
(byte) mode_mcchar::i
(void()) mode_sixsfred()
(byte~) mode_sixsfred::$0
(byte~) mode_sixsfred::$1
(byte*~) mode_sixsfred::$10
(byte~) mode_sixsfred::$11
(byte*~) mode_sixsfred::$12
(byte~) mode_sixsfred::$13
(boolean~) mode_sixsfred::$14
(byte~) mode_sixsfred::$15
(byte~) mode_sixsfred::$16
(boolean~) mode_sixsfred::$17
(boolean~) mode_sixsfred::$18
(byte~) mode_sixsfred::$19
(byte~) mode_sixsfred::$2
(byte~) mode_sixsfred::$20
(boolean~) mode_sixsfred::$21
(boolean~) mode_sixsfred::$22
(boolean~) mode_sixsfred::$23
(boolean~) mode_sixsfred::$24
(byte~) mode_sixsfred::$25
(boolean~) mode_sixsfred::$26
(boolean~) mode_sixsfred::$27
(byte~) mode_sixsfred::$3
(byte/word/dword~) mode_sixsfred::$4
(byte~) mode_sixsfred::$5
(byte~) mode_sixsfred::$6
(byte~) mode_sixsfred::$7
(byte~) mode_sixsfred::$8
(byte~) mode_sixsfred::$9
(label) mode_sixsfred::@1
(label) mode_sixsfred::@10
(label) mode_sixsfred::@11
(label) mode_sixsfred::@2
(label) mode_sixsfred::@3
(label) mode_sixsfred::@4
(label) mode_sixsfred::@5
(label) mode_sixsfred::@6
(label) mode_sixsfred::@7
(label) mode_sixsfred::@8
(label) mode_sixsfred::@9
(label) mode_sixsfred::@return
(byte*) mode_sixsfred::COLORS
(byte*) mode_sixsfred::PLANEA
(byte*) mode_sixsfred::PLANEB
(byte) mode_sixsfred::ax
(byte) mode_sixsfred::ay
(byte) mode_sixsfred::bx
(byte) mode_sixsfred::by
(byte*) mode_sixsfred::col
(byte) mode_sixsfred::cx
(byte) mode_sixsfred::cy
(byte*) mode_sixsfred::gfxa
(byte*) mode_sixsfred::gfxb
(byte) mode_sixsfred::i
(byte) mode_sixsfred::row
(byte[]) mode_sixsfred::row_bitmask
(void()) mode_sixsfred2()
(byte~) mode_sixsfred2::$0
(byte~) mode_sixsfred2::$1
(byte~) mode_sixsfred2::$10
(byte*~) mode_sixsfred2::$11
(byte~) mode_sixsfred2::$12
(boolean~) mode_sixsfred2::$13
(byte~) mode_sixsfred2::$14
(byte~) mode_sixsfred2::$15
(byte~) mode_sixsfred2::$16
(byte~) mode_sixsfred2::$17
(boolean~) mode_sixsfred2::$18
(boolean~) mode_sixsfred2::$19
(byte~) mode_sixsfred2::$2
(byte~) mode_sixsfred2::$20
(byte~) mode_sixsfred2::$21
(boolean~) mode_sixsfred2::$22
(boolean~) mode_sixsfred2::$23
(boolean~) mode_sixsfred2::$24
(boolean~) mode_sixsfred2::$25
(byte~) mode_sixsfred2::$26
(boolean~) mode_sixsfred2::$27
(boolean~) mode_sixsfred2::$28
(byte/word/dword~) mode_sixsfred2::$3
(byte~) mode_sixsfred2::$4
(byte~) mode_sixsfred2::$5
(byte~) mode_sixsfred2::$6
(byte~) mode_sixsfred2::$7
(byte~) mode_sixsfred2::$8
(byte*~) mode_sixsfred2::$9
(label) mode_sixsfred2::@1
(label) mode_sixsfred2::@10
(label) mode_sixsfred2::@11
(label) mode_sixsfred2::@2
(label) mode_sixsfred2::@3
(label) mode_sixsfred2::@4
(label) mode_sixsfred2::@5
(label) mode_sixsfred2::@6
(label) mode_sixsfred2::@7
(label) mode_sixsfred2::@8
(label) mode_sixsfred2::@9
(label) mode_sixsfred2::@return
(byte*) mode_sixsfred2::COLORS
(byte*) mode_sixsfred2::PLANEA
(byte*) mode_sixsfred2::PLANEB
(byte) mode_sixsfred2::ax
(byte) mode_sixsfred2::ay
(byte) mode_sixsfred2::bx
(byte) mode_sixsfred2::by
(byte*) mode_sixsfred2::col
(byte) mode_sixsfred2::cx
(byte) mode_sixsfred2::cy
(byte*) mode_sixsfred2::gfxa
(byte*) mode_sixsfred2::gfxb
(byte) mode_sixsfred2::i
(byte) mode_sixsfred2::row
(byte[]) mode_sixsfred2::row_bitmask
(void()) mode_stdchar()
(dword~) mode_stdchar::$0
(dword~) mode_stdchar::$1
(word/signed dword/dword~) mode_stdchar::$10
(byte~) mode_stdchar::$11
(byte/word/dword~) mode_stdchar::$12
(byte~) mode_stdchar::$13
(byte/word/dword~) mode_stdchar::$14
(word~) mode_stdchar::$15
(word~) mode_stdchar::$16
(word/signed dword/dword~) mode_stdchar::$17
(word~) mode_stdchar::$18
(word~) mode_stdchar::$19
(byte~) mode_stdchar::$2
(word/signed dword/dword~) mode_stdchar::$20
(word/dword~) mode_stdchar::$21
(byte~) mode_stdchar::$22
(boolean~) mode_stdchar::$23
(byte~) mode_stdchar::$24
(byte~) mode_stdchar::$25
(byte~) mode_stdchar::$26
(byte~) mode_stdchar::$27
(byte~) mode_stdchar::$28
(byte~) mode_stdchar::$29
(byte*~) mode_stdchar::$3
(boolean~) mode_stdchar::$30
(boolean~) mode_stdchar::$31
(byte~) mode_stdchar::$32
(boolean~) mode_stdchar::$33
(boolean~) mode_stdchar::$34
(word~) mode_stdchar::$4
(byte~) mode_stdchar::$5
(byte*~) mode_stdchar::$6
(word~) mode_stdchar::$7
(byte~) mode_stdchar::$8
(word~) mode_stdchar::$9
(label) mode_stdchar::@1
(label) mode_stdchar::@2
(label) mode_stdchar::@3
(label) mode_stdchar::@4
(label) mode_stdchar::@5
(label) mode_stdchar::@6
(label) mode_stdchar::@7
(label) mode_stdchar::@return
(byte*) mode_stdchar::CHARSET
(byte*) mode_stdchar::COLORS
(byte*) mode_stdchar::SCREEN
(byte*) mode_stdchar::ch
(byte*) mode_stdchar::col
(byte) mode_stdchar::cx
(byte) mode_stdchar::cy
(byte) mode_stdchar::i
(void()) mode_twoplanebitmap()
(byte~) mode_twoplanebitmap::$0
(byte~) mode_twoplanebitmap::$1
(byte~) mode_twoplanebitmap::$10
(byte*~) mode_twoplanebitmap::$11
(byte~) mode_twoplanebitmap::$12
(boolean~) mode_twoplanebitmap::$13
(byte~) mode_twoplanebitmap::$14
(byte~) mode_twoplanebitmap::$15
(byte~) mode_twoplanebitmap::$16
(byte~) mode_twoplanebitmap::$17
(boolean~) mode_twoplanebitmap::$18
(boolean~) mode_twoplanebitmap::$19
(byte~) mode_twoplanebitmap::$2
(byte~) mode_twoplanebitmap::$20
(boolean~) mode_twoplanebitmap::$21
(boolean~) mode_twoplanebitmap::$22
(boolean~) mode_twoplanebitmap::$23
(boolean~) mode_twoplanebitmap::$24
(boolean~) mode_twoplanebitmap::$25
(boolean~) mode_twoplanebitmap::$26
(byte~) mode_twoplanebitmap::$27
(boolean~) mode_twoplanebitmap::$28
(boolean~) mode_twoplanebitmap::$29
(byte~) mode_twoplanebitmap::$3
(byte/word/dword~) mode_twoplanebitmap::$4
(byte~) mode_twoplanebitmap::$5
(byte~) mode_twoplanebitmap::$6
(byte~) mode_twoplanebitmap::$7
(byte~) mode_twoplanebitmap::$8
(byte*~) mode_twoplanebitmap::$9
(label) mode_twoplanebitmap::@1
(label) mode_twoplanebitmap::@10
(label) mode_twoplanebitmap::@11
(label) mode_twoplanebitmap::@12
(label) mode_twoplanebitmap::@13
(label) mode_twoplanebitmap::@2
(label) mode_twoplanebitmap::@3
(label) mode_twoplanebitmap::@4
(label) mode_twoplanebitmap::@5
(label) mode_twoplanebitmap::@6
(label) mode_twoplanebitmap::@7
(label) mode_twoplanebitmap::@8
(label) mode_twoplanebitmap::@9
(label) mode_twoplanebitmap::@return
(byte*) mode_twoplanebitmap::COLORS
(byte*) mode_twoplanebitmap::PLANEA
(byte*) mode_twoplanebitmap::PLANEB
(byte) mode_twoplanebitmap::ax
(byte) mode_twoplanebitmap::ay
(byte) mode_twoplanebitmap::bx
(byte) mode_twoplanebitmap::by
(byte*) mode_twoplanebitmap::col
(byte) mode_twoplanebitmap::cx
(byte) mode_twoplanebitmap::cy
(byte*) mode_twoplanebitmap::gfxa
(byte*) mode_twoplanebitmap::gfxb
(byte) mode_twoplanebitmap::i
(void()) print_byte((byte) print_byte::b)
(byte~) print_byte::$0
(void~) print_byte::$1
(byte~) print_byte::$2
(void~) print_byte::$3
(label) print_byte::@return
(byte) print_byte::b
(byte[]) print_byte::hextab
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(byte*) print_char_cursor
(void()) print_cls()
(byte*~) print_cls::$0
(boolean~) print_cls::$1
(label) print_cls::@1
(label) print_cls::@return
(byte*) print_cls::sc
(void()) print_dword((dword) print_dword::dw)
(word~) print_dword::$0
(void~) print_dword::$1
(word~) print_dword::$2
(void~) print_dword::$3
(label) print_dword::@return
(dword) print_dword::dw
(byte*) print_line_cursor
(void()) print_ln()
(byte*~) print_ln::$0
(boolean~) print_ln::$1
(label) print_ln::@1
(label) print_ln::@return
(void()) print_sbyte((signed byte) print_sbyte::b)
(boolean~) print_sbyte::$0
(boolean~) print_sbyte::$1
(void~) print_sbyte::$2
(signed byte~) print_sbyte::$3
(byte~) print_sbyte::$4
(void~) print_sbyte::$5
(label) print_sbyte::@1
(label) print_sbyte::@return
(signed byte) print_sbyte::b
(byte*) print_screen
(void()) print_sdword((signed dword) print_sdword::dw)
(boolean~) print_sdword::$0
(boolean~) print_sdword::$1
(void~) print_sdword::$2
(signed dword~) print_sdword::$3
(dword~) print_sdword::$4
(void~) print_sdword::$5
(label) print_sdword::@1
(label) print_sdword::@return
(signed dword) print_sdword::dw
(void()) print_set_screen((byte*) print_set_screen::screen)
(label) print_set_screen::@return
(byte*) print_set_screen::screen
(void()) print_str((byte*) print_str::str)
(boolean~) print_str::$0
(label) print_str::@1
(label) print_str::@2
(label) print_str::@3
(label) print_str::@return
(byte*) print_str::str
(void()) print_str_at((byte*) print_str_at::str , (byte*) print_str_at::at)
(boolean~) print_str_at::$0
(label) print_str_at::@1
(label) print_str_at::@2
(label) print_str_at::@3
(label) print_str_at::@return
(byte*) print_str_at::at
(byte*) print_str_at::str
(void()) print_str_lines((byte*) print_str_lines::str)
(boolean~) print_str_lines::$0
(boolean~) print_str_lines::$1
(boolean~) print_str_lines::$2
(boolean~) print_str_lines::$3
(void~) print_str_lines::$4
(label) print_str_lines::@1
(label) print_str_lines::@2
(label) print_str_lines::@3
(label) print_str_lines::@4
(label) print_str_lines::@5
(label) print_str_lines::@return
(byte) print_str_lines::ch
(byte*) print_str_lines::str
(void()) print_str_ln((byte*) print_str_ln::str)
(void~) print_str_ln::$0
(void~) print_str_ln::$1
(label) print_str_ln::@return
(byte*) print_str_ln::str
(void()) print_sword((signed word) print_sword::w)
(boolean~) print_sword::$0
(boolean~) print_sword::$1
(void~) print_sword::$2
(signed word~) print_sword::$3
(word~) print_sword::$4
(void~) print_sword::$5
(label) print_sword::@1
(label) print_sword::@return
(signed word) print_sword::w
(void()) print_word((word) print_word::w)
(byte~) print_word::$0
(void~) print_word::$1
(byte~) print_word::$2
(void~) print_word::$3
(label) print_word::@return
(word) print_word::w

Promoting byte/signed byte/word/signed word/dword/signed dword to byte* in PROCPORT ← ((byte*)) 1
Promoting word/dword/signed dword to byte* in CHARGEN ← ((byte*)) 53248
Promoting word/dword/signed dword to byte* in SPRITES_XPOS ← ((byte*)) 53248
Promoting word/dword/signed dword to byte* in SPRITES_YPOS ← ((byte*)) 53249
Promoting word/dword/signed dword to byte* in SPRITES_XMSB ← ((byte*)) 53264
Promoting word/dword/signed dword to byte* in RASTER ← ((byte*)) 53266
Promoting word/dword/signed dword to byte* in SPRITES_ENABLE ← ((byte*)) 53269
Promoting word/dword/signed dword to byte* in SPRITES_EXPAND_Y ← ((byte*)) 53271
Promoting word/dword/signed dword to byte* in SPRITES_PRIORITY ← ((byte*)) 53275
Promoting word/dword/signed dword to byte* in SPRITES_MC ← ((byte*)) 53276
Promoting word/dword/signed dword to byte* in SPRITES_EXPAND_X ← ((byte*)) 53277
Promoting word/dword/signed dword to byte* in BORDERCOL ← ((byte*)) 53280
Promoting word/dword/signed dword to byte* in BGCOL ← ((byte*)) 53281
Promoting word/dword/signed dword to byte* in BGCOL1 ← ((byte*)) 53281
Promoting word/dword/signed dword to byte* in BGCOL2 ← ((byte*)) 53282
Promoting word/dword/signed dword to byte* in BGCOL3 ← ((byte*)) 53283
Promoting word/dword/signed dword to byte* in BGCOL4 ← ((byte*)) 53284
Promoting word/dword/signed dword to byte* in SPRITES_MC1 ← ((byte*)) 53285
Promoting word/dword/signed dword to byte* in SPRITES_MC2 ← ((byte*)) 53286
Promoting word/dword/signed dword to byte* in SPRITES_COLS ← ((byte*)) 53287
Promoting word/dword/signed dword to byte* in VIC_CONTROL ← ((byte*)) 53265
Promoting word/dword/signed dword to byte* in D011 ← ((byte*)) 53265
Promoting word/dword/signed dword to byte* in VIC_CONTROL2 ← ((byte*)) 53270
Promoting word/dword/signed dword to byte* in D016 ← ((byte*)) 53270
Promoting word/dword/signed dword to byte* in D018 ← ((byte*)) 53272
Promoting word/dword/signed dword to byte* in VIC_MEMORY ← ((byte*)) 53272
Promoting word/dword/signed dword to byte* in COLS ← ((byte*)) 55296
Promoting word/dword/signed dword to byte* in CIA1_PORT_A ← ((byte*)) 56320
Promoting word/dword/signed dword to byte* in CIA1_PORT_B ← ((byte*)) 56321
Promoting word/dword/signed dword to byte* in CIA1_PORT_A_DDR ← ((byte*)) 56322
Promoting word/dword/signed dword to byte* in CIA1_PORT_B_DDR ← ((byte*)) 56323
Promoting word/dword/signed dword to byte* in CIA2_PORT_A ← ((byte*)) 56576
Promoting word/dword/signed dword to byte* in CIA2_PORT_B ← ((byte*)) 56577
Promoting word/dword/signed dword to byte* in CIA2_PORT_A_DDR ← ((byte*)) 56578
Promoting word/dword/signed dword to byte* in CIA2_PORT_B_DDR ← ((byte*)) 56579
Promoting word/dword/signed dword to byte* in DTV_FEATURE ← ((byte*)) 53311
Promoting word/dword/signed dword to byte* in DTV_CONTROL ← ((byte*)) 53308
Promoting word/dword/signed dword to byte* in DTV_PALETTE ← ((byte*)) 53760
Promoting word/dword/signed dword to byte* in DTV_PLANEA_START_LO ← ((byte*)) 53306
Promoting word/dword/signed dword to byte* in DTV_PLANEA_START_MI ← ((byte*)) 53307
Promoting word/dword/signed dword to byte* in DTV_PLANEA_START_HI ← ((byte*)) 53317
Promoting word/dword/signed dword to byte* in DTV_PLANEA_STEP ← ((byte*)) 53318
Promoting word/dword/signed dword to byte* in DTV_PLANEA_MODULO_LO ← ((byte*)) 53304
Promoting word/dword/signed dword to byte* in DTV_PLANEA_MODULO_HI ← ((byte*)) 53305
Promoting word/dword/signed dword to byte* in DTV_PLANEB_START_LO ← ((byte*)) 53321
Promoting word/dword/signed dword to byte* in DTV_PLANEB_START_MI ← ((byte*)) 53322
Promoting word/dword/signed dword to byte* in DTV_PLANEB_START_HI ← ((byte*)) 53323
Promoting word/dword/signed dword to byte* in DTV_PLANEB_STEP ← ((byte*)) 53324
Promoting word/dword/signed dword to byte* in DTV_PLANEB_MODULO_LO ← ((byte*)) 53319
Promoting word/dword/signed dword to byte* in DTV_PLANEB_MODULO_HI ← ((byte*)) 53320
Promoting word/dword/signed dword to byte* in DTV_SPRITE_BANK ← ((byte*)) 53325
Promoting word/dword/signed dword to byte* in DTV_COLOR_BANK_LO ← ((byte*)) 53302
Promoting word/dword/signed dword to byte* in DTV_COLOR_BANK_HI ← ((byte*)) 53303
Promoting word/dword/signed dword to byte* in DTV_GRAPHICS_VIC_BANK ← ((byte*)) 53309
Promoting word/dword/signed dword to byte* in DTV_GRAPHICS_HICOL_BANK ← ((byte*)) 53310
Promoting byte/word/signed word/dword/signed dword to byte* in dtvSetCpuBankSegment1::cpuBank ← ((byte*)) 255
Promoting word/signed word/dword/signed dword to byte* in print_screen ← ((byte*)) 1024
Promoting word/dword/signed dword to byte* in menu::SCREEN ← ((byte*)) 32768
Promoting word/dword/signed dword to byte* in menu::CHARSET ← ((byte*)) 38912
Promoting word/dword/signed dword to byte* in mode_stdchar::SCREEN ← ((byte*)) 32768
Promoting word/dword/signed dword to byte* in mode_stdchar::CHARSET ← ((byte*)) 36864
Promoting word/dword/signed dword to byte* in mode_stdchar::COLORS ← ((byte*)) 33792
Promoting word/dword/signed dword to byte* in mode_ecmchar::ECMCHAR_SCREEN ← ((byte*)) 32768
Promoting word/dword/signed dword to byte* in mode_ecmchar::ECMCHAR_CHARSET ← ((byte*)) 36864
Promoting word/dword/signed dword to byte* in mode_ecmchar::ECMCHAR_COLORS ← ((byte*)) 33792
Promoting word/dword/signed dword to byte* in mode_mcchar::SCREEN ← ((byte*)) 32768
Promoting word/dword/signed dword to byte* in mode_mcchar::CHARSET ← ((byte*)) 36864
Promoting word/dword/signed dword to byte* in mode_mcchar::COLORS ← ((byte*)) 33792
Promoting word/dword/signed dword to byte* in mode_hicolstdchar::SCREEN ← ((byte*)) 32768
Promoting word/dword/signed dword to byte* in mode_hicolstdchar::CHARSET ← ((byte*)) 36864
Promoting word/dword/signed dword to byte* in mode_hicolstdchar::COLORS ← ((byte*)) 33792
Promoting word/dword/signed dword to byte* in mode_hicolecmchar::SCREEN ← ((byte*)) 32768
Promoting word/dword/signed dword to byte* in mode_hicolecmchar::CHARSET ← ((byte*)) 36864
Promoting word/dword/signed dword to byte* in mode_hicolecmchar::COLORS ← ((byte*)) 33792
Promoting word/dword/signed dword to byte* in mode_hicolmcchar::SCREEN ← ((byte*)) 32768
Promoting word/dword/signed dword to byte* in mode_hicolmcchar::CHARSET ← ((byte*)) 36864
Promoting word/dword/signed dword to byte* in mode_hicolmcchar::COLORS ← ((byte*)) 33792
Promoting word/signed word/dword/signed dword to byte* in mode_twoplanebitmap::PLANEA ← ((byte*)) 16384
Promoting word/signed word/dword/signed dword to byte* in mode_twoplanebitmap::PLANEB ← ((byte*)) 24576
Promoting word/dword/signed dword to byte* in mode_twoplanebitmap::COLORS ← ((byte*)) 32768
Promoting word/signed word/dword/signed dword to byte* in mode_sixsfred::PLANEA ← ((byte*)) 16384
Promoting word/signed word/dword/signed dword to byte* in mode_sixsfred::PLANEB ← ((byte*)) 24576
Promoting word/dword/signed dword to byte* in mode_sixsfred::COLORS ← ((byte*)) 32768
Promoting word/signed word/dword/signed dword to byte* in mode_sixsfred2::PLANEA ← ((byte*)) 16384
Promoting word/signed word/dword/signed dword to byte* in mode_sixsfred2::PLANEB ← ((byte*)) 24576
Promoting word/dword/signed dword to byte* in mode_sixsfred2::COLORS ← ((byte*)) 32768
Promoting word/signed word/dword/signed dword to byte* in mode_8bpppixelcell::PLANEA ← ((byte*)) 15360
Promoting word/signed word/dword/signed dword to byte* in mode_8bpppixelcell::PLANEB ← ((byte*)) 16384
Promoting word/dword/signed dword to byte* in mode_8bpppixelcell::CHARGEN ← ((byte*)) 53248
Promoting word/signed word/dword/signed dword to byte* in mode_8bppchunkybmm::gfxb ← ((byte*)) 16384
Promoting word/signed word/dword/signed dword to byte* in mode_8bppchunkybmm::gfxb ← ((byte*)) 16384
INITIAL CONTROL FLOW GRAPH
@begin: scope:[]  from
  (byte*) PROCPORT ← ((byte*)) (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte*) CHARGEN ← ((byte*)) (word/dword/signed dword) 53248
  (byte*) SPRITES_XPOS ← ((byte*)) (word/dword/signed dword) 53248
  (byte*) SPRITES_YPOS ← ((byte*)) (word/dword/signed dword) 53249
  (byte*) SPRITES_XMSB ← ((byte*)) (word/dword/signed dword) 53264
  (byte*) RASTER ← ((byte*)) (word/dword/signed dword) 53266
  (byte*) SPRITES_ENABLE ← ((byte*)) (word/dword/signed dword) 53269
  (byte*) SPRITES_EXPAND_Y ← ((byte*)) (word/dword/signed dword) 53271
  (byte*) SPRITES_PRIORITY ← ((byte*)) (word/dword/signed dword) 53275
  (byte*) SPRITES_MC ← ((byte*)) (word/dword/signed dword) 53276
  (byte*) SPRITES_EXPAND_X ← ((byte*)) (word/dword/signed dword) 53277
  (byte*) BORDERCOL ← ((byte*)) (word/dword/signed dword) 53280
  (byte*) BGCOL ← ((byte*)) (word/dword/signed dword) 53281
  (byte*) BGCOL1 ← ((byte*)) (word/dword/signed dword) 53281
  (byte*) BGCOL2 ← ((byte*)) (word/dword/signed dword) 53282
  (byte*) BGCOL3 ← ((byte*)) (word/dword/signed dword) 53283
  (byte*) BGCOL4 ← ((byte*)) (word/dword/signed dword) 53284
  (byte*) SPRITES_MC1 ← ((byte*)) (word/dword/signed dword) 53285
  (byte*) SPRITES_MC2 ← ((byte*)) (word/dword/signed dword) 53286
  (byte*) SPRITES_COLS ← ((byte*)) (word/dword/signed dword) 53287
  (byte*) VIC_CONTROL ← ((byte*)) (word/dword/signed dword) 53265
  (byte*) D011 ← ((byte*)) (word/dword/signed dword) 53265
  (byte) VIC_RST8 ← (byte/word/signed word/dword/signed dword) 128
  (byte) VIC_ECM ← (byte/signed byte/word/signed word/dword/signed dword) 64
  (byte) VIC_BMM ← (byte/signed byte/word/signed word/dword/signed dword) 32
  (byte) VIC_DEN ← (byte/signed byte/word/signed word/dword/signed dword) 16
  (byte) VIC_RSEL ← (byte/signed byte/word/signed word/dword/signed dword) 8
  (byte*) VIC_CONTROL2 ← ((byte*)) (word/dword/signed dword) 53270
  (byte*) D016 ← ((byte*)) (word/dword/signed dword) 53270
  (byte) VIC_MCM ← (byte/signed byte/word/signed word/dword/signed dword) 16
  (byte) VIC_CSEL ← (byte/signed byte/word/signed word/dword/signed dword) 8
  (byte*) D018 ← ((byte*)) (word/dword/signed dword) 53272
  (byte*) VIC_MEMORY ← ((byte*)) (word/dword/signed dword) 53272
  (byte*) COLS ← ((byte*)) (word/dword/signed dword) 55296
  (byte*) CIA1_PORT_A ← ((byte*)) (word/dword/signed dword) 56320
  (byte*) CIA1_PORT_B ← ((byte*)) (word/dword/signed dword) 56321
  (byte*) CIA1_PORT_A_DDR ← ((byte*)) (word/dword/signed dword) 56322
  (byte*) CIA1_PORT_B_DDR ← ((byte*)) (word/dword/signed dword) 56323
  (byte*) CIA2_PORT_A ← ((byte*)) (word/dword/signed dword) 56576
  (byte*) CIA2_PORT_B ← ((byte*)) (word/dword/signed dword) 56577
  (byte*) CIA2_PORT_A_DDR ← ((byte*)) (word/dword/signed dword) 56578
  (byte*) CIA2_PORT_B_DDR ← ((byte*)) (word/dword/signed dword) 56579
  (byte) BLACK ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) WHITE ← (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte) RED ← (byte/signed byte/word/signed word/dword/signed dword) 2
  (byte) CYAN ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (byte) PURPLE ← (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte) GREEN ← (byte/signed byte/word/signed word/dword/signed dword) 5
  (byte) BLUE ← (byte/signed byte/word/signed word/dword/signed dword) 6
  (byte) YELLOW ← (byte/signed byte/word/signed word/dword/signed dword) 7
  (byte) ORANGE ← (byte/signed byte/word/signed word/dword/signed dword) 8
  (byte) BROWN ← (byte/signed byte/word/signed word/dword/signed dword) 9
  (byte) PINK ← (byte/signed byte/word/signed word/dword/signed dword) 10
  (byte) DARK_GREY ← (byte/signed byte/word/signed word/dword/signed dword) 11
  (byte) GREY ← (byte/signed byte/word/signed word/dword/signed dword) 12
  (byte) LIGHT_GREEN ← (byte/signed byte/word/signed word/dword/signed dword) 13
  (byte) LIGHT_BLUE ← (byte/signed byte/word/signed word/dword/signed dword) 14
  (byte) LIGHT_GREY ← (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte*) DTV_FEATURE ← ((byte*)) (word/dword/signed dword) 53311
  (byte) DTV_FEATURE_ENABLE ← (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte) DTV_FEATURE_DISABLE_TIL_RESET ← (byte/signed byte/word/signed word/dword/signed dword) 2
  (byte*) DTV_CONTROL ← ((byte*)) (word/dword/signed dword) 53308
  (byte) DTV_CONTROL_LINEAR_ADDRESSING_ON ← (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte) DTV_CONTROL_BORDER_OFF ← (byte/signed byte/word/signed word/dword/signed dword) 2
  (byte) DTV_CONTROL_HIGHCOLOR_ON ← (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte) DTV_CONTROL_OVERSCAN_ON ← (byte/signed byte/word/signed word/dword/signed dword) 8
  (byte) DTV_CONTROL_COLORRAM_OFF ← (byte/signed byte/word/signed word/dword/signed dword) 16
  (byte) DTV_CONTROL_BADLINE_OFF ← (byte/signed byte/word/signed word/dword/signed dword) 32
  (byte) DTV_CONTROL_CHUNKY_ON ← (byte/signed byte/word/signed word/dword/signed dword) 64
  (byte*) DTV_PALETTE ← ((byte*)) (word/dword/signed dword) 53760
  (byte[16]) DTV_PALETTE_DEFAULT ← { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 15, (byte/signed byte/word/signed word/dword/signed dword) 54, (byte/word/signed word/dword/signed dword) 190, (byte/signed byte/word/signed word/dword/signed dword) 88, (byte/word/signed word/dword/signed dword) 219, (byte/word/signed word/dword/signed dword) 134, (byte/word/signed word/dword/signed dword) 255, (byte/signed byte/word/signed word/dword/signed dword) 41, (byte/signed byte/word/signed word/dword/signed dword) 38, (byte/signed byte/word/signed word/dword/signed dword) 59, (byte/signed byte/word/signed word/dword/signed dword) 5, (byte/signed byte/word/signed word/dword/signed dword) 7, (byte/word/signed word/dword/signed dword) 223, (byte/word/signed word/dword/signed dword) 154, (byte/signed byte/word/signed word/dword/signed dword) 10 }
  (byte*) DTV_PLANEA_START_LO ← ((byte*)) (word/dword/signed dword) 53306
  (byte*) DTV_PLANEA_START_MI ← ((byte*)) (word/dword/signed dword) 53307
  (byte*) DTV_PLANEA_START_HI ← ((byte*)) (word/dword/signed dword) 53317
  (byte*) DTV_PLANEA_STEP ← ((byte*)) (word/dword/signed dword) 53318
  (byte*) DTV_PLANEA_MODULO_LO ← ((byte*)) (word/dword/signed dword) 53304
  (byte*) DTV_PLANEA_MODULO_HI ← ((byte*)) (word/dword/signed dword) 53305
  (byte*) DTV_PLANEB_START_LO ← ((byte*)) (word/dword/signed dword) 53321
  (byte*) DTV_PLANEB_START_MI ← ((byte*)) (word/dword/signed dword) 53322
  (byte*) DTV_PLANEB_START_HI ← ((byte*)) (word/dword/signed dword) 53323
  (byte*) DTV_PLANEB_STEP ← ((byte*)) (word/dword/signed dword) 53324
  (byte*) DTV_PLANEB_MODULO_LO ← ((byte*)) (word/dword/signed dword) 53319
  (byte*) DTV_PLANEB_MODULO_HI ← ((byte*)) (word/dword/signed dword) 53320
  (byte*) DTV_SPRITE_BANK ← ((byte*)) (word/dword/signed dword) 53325
  (byte*) DTV_COLOR_BANK_LO ← ((byte*)) (word/dword/signed dword) 53302
  (byte*) DTV_COLOR_BANK_HI ← ((byte*)) (word/dword/signed dword) 53303
  (dword) DTV_COLOR_BANK_DEFAULT ← (dword/signed dword) 120832
  (byte*) DTV_GRAPHICS_VIC_BANK ← ((byte*)) (word/dword/signed dword) 53309
  (byte*) DTV_GRAPHICS_HICOL_BANK ← ((byte*)) (word/dword/signed dword) 53310
  to:@1
dtvSetCpuBankSegment1: scope:[dtvSetCpuBankSegment1]  from
  (byte*) dtvSetCpuBankSegment1::cpuBank ← ((byte*)) (byte/word/signed word/dword/signed dword) 255
  *((byte*) dtvSetCpuBankSegment1::cpuBank) ← (byte) dtvSetCpuBankSegment1::cpuBankIdx
  asm { .byte$32,$dd lda$ff .byte$32,$00  }
  to:dtvSetCpuBankSegment1::@return
dtvSetCpuBankSegment1::@return: scope:[dtvSetCpuBankSegment1]  from dtvSetCpuBankSegment1
  return 
  to:@return
@1: scope:[]  from @begin
  (byte*) print_screen ← ((byte*)) (word/signed word/dword/signed dword) 1024
  (byte*) print_line_cursor ← (byte*) print_screen
  (byte*) print_char_cursor ← (byte*) print_line_cursor
  to:@2
print_str_lines: scope:[print_str_lines]  from
  to:print_str_lines::@1
print_str_lines::@1: scope:[print_str_lines]  from print_str_lines print_str_lines::@9
  (boolean~) print_str_lines::$0 ← *((byte*) print_str_lines::str) != (byte) '@'
  if((boolean~) print_str_lines::$0) goto print_str_lines::@2
  to:print_str_lines::@6
print_str_lines::@2: scope:[print_str_lines]  from print_str_lines::@1 print_str_lines::@7
  to:print_str_lines::@4
print_str_lines::@6: scope:[print_str_lines]  from print_str_lines::@1
  to:print_str_lines::@3
print_str_lines::@3: scope:[print_str_lines]  from print_str_lines::@10 print_str_lines::@6
  to:print_str_lines::@return
print_str_lines::@7: scope:[print_str_lines]  from
  to:print_str_lines::@2
print_str_lines::@4: scope:[print_str_lines]  from print_str_lines::@2 print_str_lines::@5
  (byte) print_str_lines::ch ← *((byte*) print_str_lines::str)
  (byte*) print_str_lines::str ← ++ (byte*) print_str_lines::str
  (boolean~) print_str_lines::$1 ← (byte) print_str_lines::ch != (byte) '@'
  (boolean~) print_str_lines::$2 ← ! (boolean~) print_str_lines::$1
  if((boolean~) print_str_lines::$2) goto print_str_lines::@5
  to:print_str_lines::@8
print_str_lines::@5: scope:[print_str_lines]  from print_str_lines::@4 print_str_lines::@8
  (boolean~) print_str_lines::$3 ← (byte) print_str_lines::ch != (byte) '@'
  if((boolean~) print_str_lines::$3) goto print_str_lines::@4
  to:print_str_lines::@9
print_str_lines::@8: scope:[print_str_lines]  from print_str_lines::@4
  *((byte*) print_char_cursor) ← (byte) print_str_lines::ch
  (byte*) print_char_cursor ← ++ (byte*) print_char_cursor
  to:print_str_lines::@5
print_str_lines::@9: scope:[print_str_lines]  from print_str_lines::@5
  (void~) print_str_lines::$4 ← call print_ln 
  to:print_str_lines::@1
print_str_lines::@10: scope:[print_str_lines]  from
  to:print_str_lines::@3
print_str_lines::@return: scope:[print_str_lines]  from print_str_lines::@3
  return 
  to:@return
@2: scope:[]  from @1
  to:@3
print_str_ln: scope:[print_str_ln]  from
  (void~) print_str_ln::$0 ← call print_str (byte*) print_str_ln::str 
  (void~) print_str_ln::$1 ← call print_ln 
  to:print_str_ln::@return
print_str_ln::@return: scope:[print_str_ln]  from print_str_ln
  return 
  to:@return
@3: scope:[]  from @2
  to:@4
print_str: scope:[print_str]  from
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@2
  (boolean~) print_str::$0 ← *((byte*) print_str::str) != (byte) '@'
  if((boolean~) print_str::$0) goto print_str::@2
  to:print_str::@4
print_str::@2: scope:[print_str]  from print_str::@1 print_str::@5
  *((byte*) print_char_cursor) ← *((byte*) print_str::str)
  (byte*) print_char_cursor ← ++ (byte*) print_char_cursor
  (byte*) print_str::str ← ++ (byte*) print_str::str
  to:print_str::@1
print_str::@4: scope:[print_str]  from print_str::@1
  to:print_str::@3
print_str::@3: scope:[print_str]  from print_str::@4 print_str::@6
  to:print_str::@return
print_str::@5: scope:[print_str]  from
  to:print_str::@2
print_str::@6: scope:[print_str]  from
  to:print_str::@3
print_str::@return: scope:[print_str]  from print_str::@3
  return 
  to:@return
@4: scope:[]  from @3
  to:@5
print_str_at: scope:[print_str_at]  from
  to:print_str_at::@1
print_str_at::@1: scope:[print_str_at]  from print_str_at print_str_at::@2
  (boolean~) print_str_at::$0 ← *((byte*) print_str_at::str) != (byte) '@'
  if((boolean~) print_str_at::$0) goto print_str_at::@2
  to:print_str_at::@4
print_str_at::@2: scope:[print_str_at]  from print_str_at::@1 print_str_at::@5
  *((byte*) print_str_at::at) ← *((byte*) print_str_at::str)
  (byte*) print_str_at::at ← ++ (byte*) print_str_at::at
  (byte*) print_str_at::str ← ++ (byte*) print_str_at::str
  to:print_str_at::@1
print_str_at::@4: scope:[print_str_at]  from print_str_at::@1
  to:print_str_at::@3
print_str_at::@3: scope:[print_str_at]  from print_str_at::@4 print_str_at::@6
  to:print_str_at::@return
print_str_at::@5: scope:[print_str_at]  from
  to:print_str_at::@2
print_str_at::@6: scope:[print_str_at]  from
  to:print_str_at::@3
print_str_at::@return: scope:[print_str_at]  from print_str_at::@3
  return 
  to:@return
@5: scope:[]  from @4
  to:@6
print_ln: scope:[print_ln]  from
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  (byte*~) print_ln::$0 ← (byte*) print_line_cursor + (byte/signed byte/word/signed word/dword/signed dword) 40
  (byte*) print_line_cursor ← (byte*~) print_ln::$0
  (boolean~) print_ln::$1 ← (byte*) print_line_cursor < (byte*) print_char_cursor
  if((boolean~) print_ln::$1) goto print_ln::@1
  to:print_ln::@2
print_ln::@2: scope:[print_ln]  from print_ln::@1
  (byte*) print_char_cursor ← (byte*) print_line_cursor
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@2
  return 
  to:@return
@6: scope:[]  from @5
  to:@7
print_sword: scope:[print_sword]  from
  (boolean~) print_sword::$0 ← (signed word) print_sword::w < (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) print_sword::$1 ← ! (boolean~) print_sword::$0
  if((boolean~) print_sword::$1) goto print_sword::@1
  to:print_sword::@2
print_sword::@1: scope:[print_sword]  from print_sword print_sword::@2
  (word~) print_sword::$4 ← ((word)) (signed word) print_sword::w
  (void~) print_sword::$5 ← call print_word (word~) print_sword::$4 
  to:print_sword::@return
print_sword::@2: scope:[print_sword]  from print_sword
  (void~) print_sword::$2 ← call print_char (byte) '-' 
  (signed word~) print_sword::$3 ← - (signed word) print_sword::w
  (signed word) print_sword::w ← (signed word~) print_sword::$3
  to:print_sword::@1
print_sword::@return: scope:[print_sword]  from print_sword::@1
  return 
  to:@return
@7: scope:[]  from @6
  to:@8
print_sbyte: scope:[print_sbyte]  from
  (boolean~) print_sbyte::$0 ← (signed byte) print_sbyte::b < (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) print_sbyte::$1 ← ! (boolean~) print_sbyte::$0
  if((boolean~) print_sbyte::$1) goto print_sbyte::@1
  to:print_sbyte::@2
print_sbyte::@1: scope:[print_sbyte]  from print_sbyte print_sbyte::@2
  (byte~) print_sbyte::$4 ← ((byte)) (signed byte) print_sbyte::b
  (void~) print_sbyte::$5 ← call print_byte (byte~) print_sbyte::$4 
  to:print_sbyte::@return
print_sbyte::@2: scope:[print_sbyte]  from print_sbyte
  (void~) print_sbyte::$2 ← call print_char (byte) '-' 
  (signed byte~) print_sbyte::$3 ← - (signed byte) print_sbyte::b
  (signed byte) print_sbyte::b ← (signed byte~) print_sbyte::$3
  to:print_sbyte::@1
print_sbyte::@return: scope:[print_sbyte]  from print_sbyte::@1
  return 
  to:@return
@8: scope:[]  from @7
  to:@9
print_word: scope:[print_word]  from
  (byte~) print_word::$0 ← > (word) print_word::w
  (void~) print_word::$1 ← call print_byte (byte~) print_word::$0 
  (byte~) print_word::$2 ← < (word) print_word::w
  (void~) print_word::$3 ← call print_byte (byte~) print_word::$2 
  to:print_word::@return
print_word::@return: scope:[print_word]  from print_word
  return 
  to:@return
@9: scope:[]  from @8
  to:@10
print_dword: scope:[print_dword]  from
  (word~) print_dword::$0 ← > (dword) print_dword::dw
  (void~) print_dword::$1 ← call print_word (word~) print_dword::$0 
  (word~) print_dword::$2 ← < (dword) print_dword::dw
  (void~) print_dword::$3 ← call print_word (word~) print_dword::$2 
  to:print_dword::@return
print_dword::@return: scope:[print_dword]  from print_dword
  return 
  to:@return
@10: scope:[]  from @9
  to:@11
print_sdword: scope:[print_sdword]  from
  (boolean~) print_sdword::$0 ← (signed dword) print_sdword::dw < (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) print_sdword::$1 ← ! (boolean~) print_sdword::$0
  if((boolean~) print_sdword::$1) goto print_sdword::@1
  to:print_sdword::@2
print_sdword::@1: scope:[print_sdword]  from print_sdword print_sdword::@2
  (dword~) print_sdword::$4 ← ((dword)) (signed dword) print_sdword::dw
  (void~) print_sdword::$5 ← call print_dword (dword~) print_sdword::$4 
  to:print_sdword::@return
print_sdword::@2: scope:[print_sdword]  from print_sdword
  (void~) print_sdword::$2 ← call print_char (byte) '-' 
  (signed dword~) print_sdword::$3 ← - (signed dword) print_sdword::dw
  (signed dword) print_sdword::dw ← (signed dword~) print_sdword::$3
  to:print_sdword::@1
print_sdword::@return: scope:[print_sdword]  from print_sdword::@1
  return 
  to:@return
@11: scope:[]  from @10
  to:@12
print_byte: scope:[print_byte]  from
  (byte[]) print_byte::hextab ← (string) "0123456789abcdef"
  (byte~) print_byte::$0 ← (byte) print_byte::b >> (byte/signed byte/word/signed word/dword/signed dword) 4
  (void~) print_byte::$1 ← call print_char *((byte[]) print_byte::hextab + (byte~) print_byte::$0) 
  (byte~) print_byte::$2 ← (byte) print_byte::b & (byte/signed byte/word/signed word/dword/signed dword) 15
  (void~) print_byte::$3 ← call print_char *((byte[]) print_byte::hextab + (byte~) print_byte::$2) 
  to:print_byte::@return
print_byte::@return: scope:[print_byte]  from print_byte
  return 
  to:@return
@12: scope:[]  from @11
  to:@13
print_char: scope:[print_char]  from
  *((byte*) print_char_cursor) ← (byte) print_char::ch
  (byte*) print_char_cursor ← ++ (byte*) print_char_cursor
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  return 
  to:@return
@13: scope:[]  from @12
  to:@14
print_cls: scope:[print_cls]  from
  (byte*) print_cls::sc ← (byte*) print_screen
  to:print_cls::@1
print_cls::@1: scope:[print_cls]  from print_cls print_cls::@1
  *((byte*) print_cls::sc) ← (byte) ' '
  (byte*) print_cls::sc ← ++ (byte*) print_cls::sc
  (byte*~) print_cls::$0 ← (byte*) print_screen + (word/signed word/dword/signed dword) 1000
  (boolean~) print_cls::$1 ← (byte*) print_cls::sc != (byte*~) print_cls::$0
  if((boolean~) print_cls::$1) goto print_cls::@1
  to:print_cls::@2
print_cls::@2: scope:[print_cls]  from print_cls::@1
  (byte*) print_line_cursor ← (byte*) print_screen
  (byte*) print_char_cursor ← (byte*) print_line_cursor
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls::@2
  return 
  to:@return
@14: scope:[]  from @13
  to:@15
print_set_screen: scope:[print_set_screen]  from
  (byte*) print_screen ← (byte*) print_set_screen::screen
  (byte*) print_line_cursor ← (byte*) print_screen
  (byte*) print_char_cursor ← (byte*) print_line_cursor
  to:print_set_screen::@return
print_set_screen::@return: scope:[print_set_screen]  from print_set_screen
  return 
  to:@return
@15: scope:[]  from @14
  (byte) KEY_DEL ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) KEY_RETURN ← (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte) KEY_CRSR_RIGHT ← (byte/signed byte/word/signed word/dword/signed dword) 2
  (byte) KEY_F7 ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (byte) KEY_F1 ← (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte) KEY_F3 ← (byte/signed byte/word/signed word/dword/signed dword) 5
  (byte) KEY_F5 ← (byte/signed byte/word/signed word/dword/signed dword) 6
  (byte) KEY_CRSR_DOWN ← (byte/signed byte/word/signed word/dword/signed dword) 7
  (byte) KEY_3 ← (byte/signed byte/word/signed word/dword/signed dword) 8
  (byte) KEY_W ← (byte/signed byte/word/signed word/dword/signed dword) 9
  (byte) KEY_A ← (byte/signed byte/word/signed word/dword/signed dword) 10
  (byte) KEY_4 ← (byte/signed byte/word/signed word/dword/signed dword) 11
  (byte) KEY_Z ← (byte/signed byte/word/signed word/dword/signed dword) 12
  (byte) KEY_S ← (byte/signed byte/word/signed word/dword/signed dword) 13
  (byte) KEY_E ← (byte/signed byte/word/signed word/dword/signed dword) 14
  (byte) KEY_LSHIFT ← (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte) KEY_5 ← (byte/signed byte/word/signed word/dword/signed dword) 16
  (byte) KEY_R ← (byte/signed byte/word/signed word/dword/signed dword) 17
  (byte) KEY_D ← (byte/signed byte/word/signed word/dword/signed dword) 18
  (byte) KEY_6 ← (byte/signed byte/word/signed word/dword/signed dword) 19
  (byte) KEY_C ← (byte/signed byte/word/signed word/dword/signed dword) 20
  (byte) KEY_F ← (byte/signed byte/word/signed word/dword/signed dword) 21
  (byte) KEY_T ← (byte/signed byte/word/signed word/dword/signed dword) 22
  (byte) KEY_X ← (byte/signed byte/word/signed word/dword/signed dword) 23
  (byte) KEY_7 ← (byte/signed byte/word/signed word/dword/signed dword) 24
  (byte) KEY_Y ← (byte/signed byte/word/signed word/dword/signed dword) 25
  (byte) KEY_G ← (byte/signed byte/word/signed word/dword/signed dword) 26
  (byte) KEY_8 ← (byte/signed byte/word/signed word/dword/signed dword) 27
  (byte) KEY_B ← (byte/signed byte/word/signed word/dword/signed dword) 28
  (byte) KEY_H ← (byte/signed byte/word/signed word/dword/signed dword) 29
  (byte) KEY_U ← (byte/signed byte/word/signed word/dword/signed dword) 30
  (byte) KEY_V ← (byte/signed byte/word/signed word/dword/signed dword) 31
  (byte) KEY_9 ← (byte/signed byte/word/signed word/dword/signed dword) 32
  (byte) KEY_I ← (byte/signed byte/word/signed word/dword/signed dword) 33
  (byte) KEY_J ← (byte/signed byte/word/signed word/dword/signed dword) 34
  (byte) KEY_0 ← (byte/signed byte/word/signed word/dword/signed dword) 35
  (byte) KEY_M ← (byte/signed byte/word/signed word/dword/signed dword) 36
  (byte) KEY_K ← (byte/signed byte/word/signed word/dword/signed dword) 37
  (byte) KEY_O ← (byte/signed byte/word/signed word/dword/signed dword) 38
  (byte) KEY_N ← (byte/signed byte/word/signed word/dword/signed dword) 39
  (byte) KEY_PLUS ← (byte/signed byte/word/signed word/dword/signed dword) 40
  (byte) KEY_P ← (byte/signed byte/word/signed word/dword/signed dword) 41
  (byte) KEY_L ← (byte/signed byte/word/signed word/dword/signed dword) 42
  (byte) KEY_MINUS ← (byte/signed byte/word/signed word/dword/signed dword) 43
  (byte) KEY_DOT ← (byte/signed byte/word/signed word/dword/signed dword) 44
  (byte) KEY_COLON ← (byte/signed byte/word/signed word/dword/signed dword) 45
  (byte) KEY_AT ← (byte/signed byte/word/signed word/dword/signed dword) 46
  (byte) KEY_COMMA ← (byte/signed byte/word/signed word/dword/signed dword) 47
  (byte) KEY_POUND ← (byte/signed byte/word/signed word/dword/signed dword) 48
  (byte) KEY_ASTERISK ← (byte/signed byte/word/signed word/dword/signed dword) 49
  (byte) KEY_SEMICOLON ← (byte/signed byte/word/signed word/dword/signed dword) 50
  (byte) KEY_HOME ← (byte/signed byte/word/signed word/dword/signed dword) 51
  (byte) KEY_RSHIFT ← (byte/signed byte/word/signed word/dword/signed dword) 52
  (byte) KEY_EQUALS ← (byte/signed byte/word/signed word/dword/signed dword) 53
  (byte) KEY_ARROW_UP ← (byte/signed byte/word/signed word/dword/signed dword) 54
  (byte) KEY_SLASH ← (byte/signed byte/word/signed word/dword/signed dword) 55
  (byte) KEY_1 ← (byte/signed byte/word/signed word/dword/signed dword) 56
  (byte) KEY_ARROW_LEFT ← (byte/signed byte/word/signed word/dword/signed dword) 57
  (byte) KEY_CTRL ← (byte/signed byte/word/signed word/dword/signed dword) 58
  (byte) KEY_2 ← (byte/signed byte/word/signed word/dword/signed dword) 59
  (byte) KEY_SPACE ← (byte/signed byte/word/signed word/dword/signed dword) 60
  (byte) KEY_COMMODORE ← (byte/signed byte/word/signed word/dword/signed dword) 61
  (byte) KEY_Q ← (byte/signed byte/word/signed word/dword/signed dword) 62
  (byte) KEY_RUNSTOP ← (byte/signed byte/word/signed word/dword/signed dword) 63
  (byte[]) keyboard_char_keycodes ← { (byte) KEY_AT, (byte) KEY_A, (byte) KEY_B, (byte) KEY_C, (byte) KEY_D, (byte) KEY_E, (byte) KEY_F, (byte) KEY_G, (byte) KEY_H, (byte) KEY_I, (byte) KEY_J, (byte) KEY_K, (byte) KEY_L, (byte) KEY_M, (byte) KEY_N, (byte) KEY_O, (byte) KEY_P, (byte) KEY_Q, (byte) KEY_R, (byte) KEY_S, (byte) KEY_T, (byte) KEY_U, (byte) KEY_V, (byte) KEY_W, (byte) KEY_X, (byte) KEY_Y, (byte) KEY_Z, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte) KEY_POUND, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte) KEY_ARROW_UP, (byte) KEY_ARROW_LEFT, (byte) KEY_SPACE, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte) KEY_ASTERISK, (byte) KEY_PLUS, (byte) KEY_COMMA, (byte) KEY_MINUS, (byte) KEY_DOT, (byte) KEY_SLASH, (byte) KEY_0, (byte) KEY_1, (byte) KEY_2, (byte) KEY_3, (byte) KEY_4, (byte) KEY_5, (byte) KEY_6, (byte) KEY_7, (byte) KEY_8, (byte) KEY_9, (byte) KEY_COLON, (byte) KEY_SEMICOLON, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte) KEY_EQUALS, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63 }
  (byte[8]) keyboard_matrix_row_bitmask ← { (byte/word/signed word/dword/signed dword) 254, (byte/word/signed word/dword/signed dword) 253, (byte/word/signed word/dword/signed dword) 251, (byte/word/signed word/dword/signed dword) 247, (byte/word/signed word/dword/signed dword) 239, (byte/word/signed word/dword/signed dword) 223, (byte/word/signed word/dword/signed dword) 191, (byte/signed byte/word/signed word/dword/signed dword) 127 }
  (byte[]) keyboard_matrix_col_bitmask ← { (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 2, (byte/signed byte/word/signed word/dword/signed dword) 4, (byte/signed byte/word/signed word/dword/signed dword) 8, (byte/signed byte/word/signed word/dword/signed dword) 16, (byte/signed byte/word/signed word/dword/signed dword) 32, (byte/signed byte/word/signed word/dword/signed dword) 64, (byte/word/signed word/dword/signed dword) 128 }
  to:@16
keyboard_init: scope:[keyboard_init]  from
  *((byte*) CIA1_PORT_A_DDR) ← (byte/word/signed word/dword/signed dword) 255
  *((byte*) CIA1_PORT_B_DDR) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:keyboard_init::@return
keyboard_init::@return: scope:[keyboard_init]  from keyboard_init
  return 
  to:@return
@16: scope:[]  from @15
  to:@17
keyboard_matrix_read: scope:[keyboard_matrix_read]  from
  *((byte*) CIA1_PORT_A) ← *((byte[8]) keyboard_matrix_row_bitmask + (byte) keyboard_matrix_read::rowid)
  (byte~) keyboard_matrix_read::$0 ← ~ *((byte*) CIA1_PORT_B)
  (byte) keyboard_matrix_read::row_pressed_bits ← (byte~) keyboard_matrix_read::$0
  (byte) keyboard_matrix_read::return ← (byte) keyboard_matrix_read::row_pressed_bits
  to:keyboard_matrix_read::@return
keyboard_matrix_read::@return: scope:[keyboard_matrix_read]  from keyboard_matrix_read keyboard_matrix_read::@1
  (byte) keyboard_matrix_read::return ← (byte) keyboard_matrix_read::return
  return (byte) keyboard_matrix_read::return
  to:@return
keyboard_matrix_read::@1: scope:[keyboard_matrix_read]  from
  to:keyboard_matrix_read::@return
@17: scope:[]  from @16
  to:@18
keyboard_key_pressed: scope:[keyboard_key_pressed]  from
  (byte~) keyboard_key_pressed::$0 ← (byte) keyboard_key_pressed::key & (byte/signed byte/word/signed word/dword/signed dword) 7
  (byte) keyboard_key_pressed::colidx ← (byte~) keyboard_key_pressed::$0
  (byte~) keyboard_key_pressed::$1 ← (byte) keyboard_key_pressed::key >> (byte/signed byte/word/signed word/dword/signed dword) 3
  (byte) keyboard_key_pressed::rowidx ← (byte~) keyboard_key_pressed::$1
  (byte~) keyboard_key_pressed::$2 ← call keyboard_matrix_read (byte) keyboard_key_pressed::rowidx 
  (byte~) keyboard_key_pressed::$3 ← (byte~) keyboard_key_pressed::$2 & *((byte[]) keyboard_matrix_col_bitmask + (byte) keyboard_key_pressed::colidx)
  (byte) keyboard_key_pressed::return ← (byte~) keyboard_key_pressed::$3
  to:keyboard_key_pressed::@return
keyboard_key_pressed::@return: scope:[keyboard_key_pressed]  from keyboard_key_pressed keyboard_key_pressed::@1
  (byte) keyboard_key_pressed::return ← (byte) keyboard_key_pressed::return
  return (byte) keyboard_key_pressed::return
  to:@return
keyboard_key_pressed::@1: scope:[keyboard_key_pressed]  from
  to:keyboard_key_pressed::@return
@18: scope:[]  from @17
  to:@19
keyboard_get_keycode: scope:[keyboard_get_keycode]  from
  (byte) keyboard_get_keycode::return ← *((byte[]) keyboard_char_keycodes + (byte) keyboard_get_keycode::ch)
  to:keyboard_get_keycode::@return
keyboard_get_keycode::@return: scope:[keyboard_get_keycode]  from keyboard_get_keycode keyboard_get_keycode::@1
  (byte) keyboard_get_keycode::return ← (byte) keyboard_get_keycode::return
  return (byte) keyboard_get_keycode::return
  to:@return
keyboard_get_keycode::@1: scope:[keyboard_get_keycode]  from
  to:keyboard_get_keycode::@return
@19: scope:[]  from @18
  to:@20
main: scope:[main]  from
  asm { sei  }
  *((byte*) DTV_FEATURE) ← (byte) DTV_FEATURE_ENABLE
  to:main::@1
main::@1: scope:[main]  from main main::@2
  if(true) goto main::@2
  to:main::@4
main::@2: scope:[main]  from main::@1 main::@5
  (void~) main::$0 ← call menu 
  to:main::@1
main::@4: scope:[main]  from main::@1
  to:main::@3
main::@3: scope:[main]  from main::@4 main::@6
  to:main::@return
main::@5: scope:[main]  from
  to:main::@2
main::@6: scope:[main]  from
  to:main::@3
main::@return: scope:[main]  from main::@3
  return 
  to:@return
@20: scope:[]  from @19
  (string~) $0 ← (string) "C64DTV Graphics Modes            CCLHBME@" + (string) "                                 OHIIMCC@"
  (string~) $1 ← (string~) $0 + (string) "                                 LUNCMMM@"
  (string~) $2 ← (string~) $1 + (string) "----------------------------------------@"
  (string~) $3 ← (string~) $2 + (string) "1. Standard Char             (V) 0000000@"
  (string~) $4 ← (string~) $3 + (string) "2. Extended Color Char       (V) 0000001@"
  (string~) $5 ← (string~) $4 + (string) "3. Multicolor Char           (V) 0000010@"
  (string~) $6 ← (string~) $5 + (string) "4. Standard Bitmap           (V) 0000100@"
  (string~) $7 ← (string~) $6 + (string) "5. Multicolor Bitmap         (V) 0000110@"
  (string~) $8 ← (string~) $7 + (string) "6. High Color Standard Char  (H) 0001000@"
  (string~) $9 ← (string~) $8 + (string) "7. High Extended Color Char  (H) 0001001@"
  (string~) $10 ← (string~) $9 + (string) "8. High Multicolor Char      (H) 0001010@"
  (string~) $11 ← (string~) $10 + (string) "9. High Multicolor Bitmap    (H) 0001110@"
  (string~) $12 ← (string~) $11 + (string) "a. Sixs Fred 2               (D) 0010111@"
  (string~) $13 ← (string~) $12 + (string) "b. Two Plane Bitmap          (D) 0011101@"
  (string~) $14 ← (string~) $13 + (string) "c. Sixs Fred (2 Plane MC BM) (D) 0011111@"
  (string~) $15 ← (string~) $14 + (string) "d. 8bpp Pixel Cell           (D) 0111011@"
  (string~) $16 ← (string~) $15 + (string) "e. Chunky 8bpp Bitmap        (D) 1111011@"
  (string~) $17 ← (string~) $16 + (string) "----------------------------------------@"
  (string~) $18 ← (string~) $17 + (string) "    (V) vicII (H) vicII+hicol (D) c64dtv@"
  (string~) $19 ← (string~) $18 + (string) "@"
  (byte[]) MENU_TEXT ← (string~) $19
  to:@21
menu: scope:[menu]  from
  (byte*) menu::SCREEN ← ((byte*)) (word/dword/signed dword) 32768
  (byte*) menu::CHARSET ← ((byte*)) (word/dword/signed dword) 38912
  (dword~) menu::$0 ← ((dword)) (byte*) menu::CHARSET
  (dword~) menu::$1 ← (dword~) menu::$0 / (dword/signed dword) 65536
  (byte~) menu::$2 ← ((byte)) (dword~) menu::$1
  *((byte*) DTV_GRAPHICS_VIC_BANK) ← (byte~) menu::$2
  (dword~) menu::$3 ← (dword) DTV_COLOR_BANK_DEFAULT / (word/signed word/dword/signed dword) 1024
  (word~) menu::$4 ← ((word)) (dword~) menu::$3
  (byte~) menu::$5 ← < (word~) menu::$4
  *((byte*) DTV_COLOR_BANK_LO) ← (byte~) menu::$5
  (dword~) menu::$6 ← (dword) DTV_COLOR_BANK_DEFAULT / (word/signed word/dword/signed dword) 1024
  (word~) menu::$7 ← ((word)) (dword~) menu::$6
  (byte~) menu::$8 ← > (word~) menu::$7
  *((byte*) DTV_COLOR_BANK_HI) ← (byte~) menu::$8
  *((byte*) DTV_CONTROL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) CIA2_PORT_A_DDR) ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (word~) menu::$9 ← ((word)) (byte*) menu::CHARSET
  (word/signed dword/dword~) menu::$10 ← (word~) menu::$9 / (word/signed word/dword/signed dword) 16384
  (byte~) menu::$11 ← ((byte)) (word/signed dword/dword~) menu::$10
  (byte/word/dword~) menu::$12 ← (byte/signed byte/word/signed word/dword/signed dword) 3 ^ (byte~) menu::$11
  *((byte*) CIA2_PORT_A) ← (byte/word/dword~) menu::$12
  (byte~) menu::$13 ← (byte) VIC_DEN | (byte) VIC_RSEL
  (byte/word/dword~) menu::$14 ← (byte~) menu::$13 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL) ← (byte/word/dword~) menu::$14
  *((byte*) VIC_CONTROL2) ← (byte) VIC_CSEL
  (word~) menu::$15 ← ((word)) (byte*) menu::SCREEN
  (word~) menu::$16 ← (word~) menu::$15 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) menu::$17 ← (word~) menu::$16 / (byte/signed byte/word/signed word/dword/signed dword) 64
  (word~) menu::$18 ← ((word)) (byte*) menu::CHARSET
  (word~) menu::$19 ← (word~) menu::$18 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) menu::$20 ← (word~) menu::$19 / (word/signed word/dword/signed dword) 1024
  (word/dword~) menu::$21 ← (word/signed dword/dword~) menu::$17 | (word/signed dword/dword~) menu::$20
  (byte~) menu::$22 ← ((byte)) (word/dword~) menu::$21
  *((byte*) VIC_MEMORY) ← (byte~) menu::$22
  (byte) menu::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:menu::@1
menu::@1: scope:[menu]  from menu menu::@1
  *((byte*) DTV_PALETTE + (byte) menu::i) ← *((byte[16]) DTV_PALETTE_DEFAULT + (byte) menu::i)
  (byte) menu::i ← ++ (byte) menu::i
  (boolean~) menu::$23 ← (byte) menu::i != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) menu::$23) goto menu::@1
  to:menu::@17
menu::@17: scope:[menu]  from menu::@1
  (byte*) menu::c ← (byte*) COLS
  to:menu::@2
menu::@2: scope:[menu]  from menu::@17 menu::@2
  *((byte*) menu::c) ← (byte) LIGHT_GREEN
  (byte*) menu::c ← ++ (byte*) menu::c
  (byte*~) menu::$24 ← (byte*) COLS + (word/signed word/dword/signed dword) 1000
  (boolean~) menu::$25 ← (byte*) menu::c != (byte*~) menu::$24
  if((boolean~) menu::$25) goto menu::@2
  to:menu::@18
menu::@18: scope:[menu]  from menu::@2
  *((byte*) BGCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BORDERCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (void~) menu::$26 ← call print_set_screen (byte*) menu::SCREEN 
  (void~) menu::$27 ← call print_cls 
  (void~) menu::$28 ← call print_str_lines (byte[]) MENU_TEXT 
  to:menu::@3
menu::@3: scope:[menu]  from menu::@16 menu::@18
  if(true) goto menu::@4
  to:menu::@19
menu::@4: scope:[menu]  from menu::@20 menu::@3
  (byte~) menu::$29 ← call keyboard_key_pressed (byte) KEY_1 
  (boolean~) menu::$30 ← (byte~) menu::$29 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$31 ← ! (boolean~) menu::$30
  if((boolean~) menu::$31) goto menu::@6
  to:menu::@21
menu::@19: scope:[menu]  from menu::@3
  to:menu::@5
menu::@5: scope:[menu]  from menu::@19 menu::@43
  to:menu::@return
menu::@20: scope:[menu]  from
  to:menu::@4
menu::@6: scope:[menu]  from menu::@22 menu::@4
  (byte~) menu::$33 ← call keyboard_key_pressed (byte) KEY_2 
  (boolean~) menu::$34 ← (byte~) menu::$33 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$35 ← ! (boolean~) menu::$34
  if((boolean~) menu::$35) goto menu::@7
  to:menu::@23
menu::@21: scope:[menu]  from menu::@4
  (void~) menu::$32 ← call mode_stdchar 
  to:menu::@return
menu::@return: scope:[menu]  from menu::@21 menu::@23 menu::@25 menu::@27 menu::@29 menu::@31 menu::@33 menu::@35 menu::@37 menu::@39 menu::@41 menu::@5
  return 
  to:@return
menu::@22: scope:[menu]  from
  to:menu::@6
menu::@7: scope:[menu]  from menu::@24 menu::@6
  (byte~) menu::$37 ← call keyboard_key_pressed (byte) KEY_3 
  (boolean~) menu::$38 ← (byte~) menu::$37 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$39 ← ! (boolean~) menu::$38
  if((boolean~) menu::$39) goto menu::@8
  to:menu::@25
menu::@23: scope:[menu]  from menu::@6
  (void~) menu::$36 ← call mode_ecmchar 
  to:menu::@return
menu::@24: scope:[menu]  from
  to:menu::@7
menu::@8: scope:[menu]  from menu::@26 menu::@7
  (byte~) menu::$41 ← call keyboard_key_pressed (byte) KEY_6 
  (boolean~) menu::$42 ← (byte~) menu::$41 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$43 ← ! (boolean~) menu::$42
  if((boolean~) menu::$43) goto menu::@9
  to:menu::@27
menu::@25: scope:[menu]  from menu::@7
  (void~) menu::$40 ← call mode_mcchar 
  to:menu::@return
menu::@26: scope:[menu]  from
  to:menu::@8
menu::@9: scope:[menu]  from menu::@28 menu::@8
  (byte~) menu::$45 ← call keyboard_key_pressed (byte) KEY_7 
  (boolean~) menu::$46 ← (byte~) menu::$45 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$47 ← ! (boolean~) menu::$46
  if((boolean~) menu::$47) goto menu::@10
  to:menu::@29
menu::@27: scope:[menu]  from menu::@8
  (void~) menu::$44 ← call mode_hicolstdchar 
  to:menu::@return
menu::@28: scope:[menu]  from
  to:menu::@9
menu::@10: scope:[menu]  from menu::@30 menu::@9
  (byte~) menu::$49 ← call keyboard_key_pressed (byte) KEY_8 
  (boolean~) menu::$50 ← (byte~) menu::$49 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$51 ← ! (boolean~) menu::$50
  if((boolean~) menu::$51) goto menu::@11
  to:menu::@31
menu::@29: scope:[menu]  from menu::@9
  (void~) menu::$48 ← call mode_hicolecmchar 
  to:menu::@return
menu::@30: scope:[menu]  from
  to:menu::@10
menu::@11: scope:[menu]  from menu::@10 menu::@32
  (byte~) menu::$53 ← call keyboard_key_pressed (byte) KEY_A 
  (boolean~) menu::$54 ← (byte~) menu::$53 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$55 ← ! (boolean~) menu::$54
  if((boolean~) menu::$55) goto menu::@12
  to:menu::@33
menu::@31: scope:[menu]  from menu::@10
  (void~) menu::$52 ← call mode_hicolmcchar 
  to:menu::@return
menu::@32: scope:[menu]  from
  to:menu::@11
menu::@12: scope:[menu]  from menu::@11 menu::@34
  (byte~) menu::$57 ← call keyboard_key_pressed (byte) KEY_B 
  (boolean~) menu::$58 ← (byte~) menu::$57 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$59 ← ! (boolean~) menu::$58
  if((boolean~) menu::$59) goto menu::@13
  to:menu::@35
menu::@33: scope:[menu]  from menu::@11
  (void~) menu::$56 ← call mode_sixsfred2 
  to:menu::@return
menu::@34: scope:[menu]  from
  to:menu::@12
menu::@13: scope:[menu]  from menu::@12 menu::@36
  (byte~) menu::$61 ← call keyboard_key_pressed (byte) KEY_C 
  (boolean~) menu::$62 ← (byte~) menu::$61 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$63 ← ! (boolean~) menu::$62
  if((boolean~) menu::$63) goto menu::@14
  to:menu::@37
menu::@35: scope:[menu]  from menu::@12
  (void~) menu::$60 ← call mode_twoplanebitmap 
  to:menu::@return
menu::@36: scope:[menu]  from
  to:menu::@13
menu::@14: scope:[menu]  from menu::@13 menu::@38
  (byte~) menu::$65 ← call keyboard_key_pressed (byte) KEY_D 
  (boolean~) menu::$66 ← (byte~) menu::$65 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$67 ← ! (boolean~) menu::$66
  if((boolean~) menu::$67) goto menu::@15
  to:menu::@39
menu::@37: scope:[menu]  from menu::@13
  (void~) menu::$64 ← call mode_sixsfred 
  to:menu::@return
menu::@38: scope:[menu]  from
  to:menu::@14
menu::@15: scope:[menu]  from menu::@14 menu::@40
  (byte~) menu::$69 ← call keyboard_key_pressed (byte) KEY_E 
  (boolean~) menu::$70 ← (byte~) menu::$69 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$71 ← ! (boolean~) menu::$70
  if((boolean~) menu::$71) goto menu::@16
  to:menu::@41
menu::@39: scope:[menu]  from menu::@14
  (void~) menu::$68 ← call mode_8bpppixelcell 
  to:menu::@return
menu::@40: scope:[menu]  from
  to:menu::@15
menu::@16: scope:[menu]  from menu::@15 menu::@42
  to:menu::@3
menu::@41: scope:[menu]  from menu::@15
  (void~) menu::$72 ← call mode_8bppchunkybmm 
  to:menu::@return
menu::@42: scope:[menu]  from
  to:menu::@16
menu::@43: scope:[menu]  from
  to:menu::@5
@21: scope:[]  from @20
  to:@22
mode_stdchar: scope:[mode_stdchar]  from
  (byte*) mode_stdchar::SCREEN ← ((byte*)) (word/dword/signed dword) 32768
  (byte*) mode_stdchar::CHARSET ← ((byte*)) (word/dword/signed dword) 36864
  (byte*) mode_stdchar::COLORS ← ((byte*)) (word/dword/signed dword) 33792
  (dword~) mode_stdchar::$0 ← ((dword)) (byte*) mode_stdchar::CHARSET
  (dword~) mode_stdchar::$1 ← (dword~) mode_stdchar::$0 / (dword/signed dword) 65536
  (byte~) mode_stdchar::$2 ← ((byte)) (dword~) mode_stdchar::$1
  *((byte*) DTV_GRAPHICS_VIC_BANK) ← (byte~) mode_stdchar::$2
  (byte*~) mode_stdchar::$3 ← (byte*) mode_stdchar::COLORS / (word/signed word/dword/signed dword) 1024
  (word~) mode_stdchar::$4 ← ((word)) (byte*~) mode_stdchar::$3
  (byte~) mode_stdchar::$5 ← < (word~) mode_stdchar::$4
  *((byte*) DTV_COLOR_BANK_LO) ← (byte~) mode_stdchar::$5
  (byte*~) mode_stdchar::$6 ← (byte*) mode_stdchar::COLORS / (word/signed word/dword/signed dword) 1024
  (word~) mode_stdchar::$7 ← ((word)) (byte*~) mode_stdchar::$6
  (byte~) mode_stdchar::$8 ← > (word~) mode_stdchar::$7
  *((byte*) DTV_COLOR_BANK_HI) ← (byte~) mode_stdchar::$8
  *((byte*) DTV_CONTROL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) CIA2_PORT_A_DDR) ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (word~) mode_stdchar::$9 ← ((word)) (byte*) mode_stdchar::CHARSET
  (word/signed dword/dword~) mode_stdchar::$10 ← (word~) mode_stdchar::$9 / (word/signed word/dword/signed dword) 16384
  (byte~) mode_stdchar::$11 ← ((byte)) (word/signed dword/dword~) mode_stdchar::$10
  (byte/word/dword~) mode_stdchar::$12 ← (byte/signed byte/word/signed word/dword/signed dword) 3 ^ (byte~) mode_stdchar::$11
  *((byte*) CIA2_PORT_A) ← (byte/word/dword~) mode_stdchar::$12
  (byte~) mode_stdchar::$13 ← (byte) VIC_DEN | (byte) VIC_RSEL
  (byte/word/dword~) mode_stdchar::$14 ← (byte~) mode_stdchar::$13 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL) ← (byte/word/dword~) mode_stdchar::$14
  *((byte*) VIC_CONTROL2) ← (byte) VIC_CSEL
  (word~) mode_stdchar::$15 ← ((word)) (byte*) mode_stdchar::SCREEN
  (word~) mode_stdchar::$16 ← (word~) mode_stdchar::$15 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_stdchar::$17 ← (word~) mode_stdchar::$16 / (byte/signed byte/word/signed word/dword/signed dword) 64
  (word~) mode_stdchar::$18 ← ((word)) (byte*) mode_stdchar::CHARSET
  (word~) mode_stdchar::$19 ← (word~) mode_stdchar::$18 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_stdchar::$20 ← (word~) mode_stdchar::$19 / (word/signed word/dword/signed dword) 1024
  (word/dword~) mode_stdchar::$21 ← (word/signed dword/dword~) mode_stdchar::$17 | (word/signed dword/dword~) mode_stdchar::$20
  (byte~) mode_stdchar::$22 ← ((byte)) (word/dword~) mode_stdchar::$21
  *((byte*) VIC_MEMORY) ← (byte~) mode_stdchar::$22
  (byte) mode_stdchar::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_stdchar::@1
mode_stdchar::@1: scope:[mode_stdchar]  from mode_stdchar mode_stdchar::@1
  *((byte*) DTV_PALETTE + (byte) mode_stdchar::i) ← *((byte[16]) DTV_PALETTE_DEFAULT + (byte) mode_stdchar::i)
  (byte) mode_stdchar::i ← ++ (byte) mode_stdchar::i
  (boolean~) mode_stdchar::$23 ← (byte) mode_stdchar::i != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_stdchar::$23) goto mode_stdchar::@1
  to:mode_stdchar::@8
mode_stdchar::@8: scope:[mode_stdchar]  from mode_stdchar::@1
  *((byte*) BGCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BORDERCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*) mode_stdchar::col ← (byte*) mode_stdchar::COLORS
  (byte*) mode_stdchar::ch ← (byte*) mode_stdchar::SCREEN
  (byte) mode_stdchar::cy ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_stdchar::@2
mode_stdchar::@2: scope:[mode_stdchar]  from mode_stdchar::@8 mode_stdchar::@9
  (byte) mode_stdchar::cx ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_stdchar::@3
mode_stdchar::@3: scope:[mode_stdchar]  from mode_stdchar::@2 mode_stdchar::@3
  (byte~) mode_stdchar::$24 ← (byte) mode_stdchar::cx + (byte) mode_stdchar::cy
  (byte~) mode_stdchar::$25 ← (byte~) mode_stdchar::$24 & (byte/signed byte/word/signed word/dword/signed dword) 15
  *((byte*) mode_stdchar::col) ← (byte~) mode_stdchar::$25
  (byte*) mode_stdchar::col ← ++ (byte*) mode_stdchar::col
  (byte~) mode_stdchar::$26 ← (byte) mode_stdchar::cy & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_stdchar::$27 ← (byte~) mode_stdchar::$26 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_stdchar::$28 ← (byte) mode_stdchar::cx & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_stdchar::$29 ← (byte~) mode_stdchar::$27 | (byte~) mode_stdchar::$28
  *((byte*) mode_stdchar::ch) ← (byte~) mode_stdchar::$29
  (byte*) mode_stdchar::ch ← ++ (byte*) mode_stdchar::ch
  (byte) mode_stdchar::cx ← ++ (byte) mode_stdchar::cx
  (boolean~) mode_stdchar::$30 ← (byte) mode_stdchar::cx != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_stdchar::$30) goto mode_stdchar::@3
  to:mode_stdchar::@9
mode_stdchar::@9: scope:[mode_stdchar]  from mode_stdchar::@3
  (byte) mode_stdchar::cy ← ++ (byte) mode_stdchar::cy
  (boolean~) mode_stdchar::$31 ← (byte) mode_stdchar::cy != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_stdchar::$31) goto mode_stdchar::@2
  to:mode_stdchar::@10
mode_stdchar::@10: scope:[mode_stdchar]  from mode_stdchar::@9
  to:mode_stdchar::@4
mode_stdchar::@4: scope:[mode_stdchar]  from mode_stdchar::@10 mode_stdchar::@7
  if(true) goto mode_stdchar::@5
  to:mode_stdchar::@11
mode_stdchar::@5: scope:[mode_stdchar]  from mode_stdchar::@12 mode_stdchar::@4
  (byte~) mode_stdchar::$32 ← call keyboard_key_pressed (byte) KEY_SPACE 
  (boolean~) mode_stdchar::$33 ← (byte~) mode_stdchar::$32 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_stdchar::$34 ← ! (boolean~) mode_stdchar::$33
  if((boolean~) mode_stdchar::$34) goto mode_stdchar::@7
  to:mode_stdchar::@13
mode_stdchar::@11: scope:[mode_stdchar]  from mode_stdchar::@4
  to:mode_stdchar::@6
mode_stdchar::@6: scope:[mode_stdchar]  from mode_stdchar::@11 mode_stdchar::@15
  to:mode_stdchar::@return
mode_stdchar::@12: scope:[mode_stdchar]  from
  to:mode_stdchar::@5
mode_stdchar::@7: scope:[mode_stdchar]  from mode_stdchar::@14 mode_stdchar::@5
  to:mode_stdchar::@4
mode_stdchar::@13: scope:[mode_stdchar]  from mode_stdchar::@5
  to:mode_stdchar::@return
mode_stdchar::@return: scope:[mode_stdchar]  from mode_stdchar::@13 mode_stdchar::@6
  return 
  to:@return
mode_stdchar::@14: scope:[mode_stdchar]  from
  to:mode_stdchar::@7
mode_stdchar::@15: scope:[mode_stdchar]  from
  to:mode_stdchar::@6
@22: scope:[]  from @21
  to:@23
mode_ecmchar: scope:[mode_ecmchar]  from
  (byte*) mode_ecmchar::ECMCHAR_SCREEN ← ((byte*)) (word/dword/signed dword) 32768
  (byte*) mode_ecmchar::ECMCHAR_CHARSET ← ((byte*)) (word/dword/signed dword) 36864
  (byte*) mode_ecmchar::ECMCHAR_COLORS ← ((byte*)) (word/dword/signed dword) 33792
  (dword~) mode_ecmchar::$0 ← ((dword)) (byte*) mode_ecmchar::ECMCHAR_CHARSET
  (dword~) mode_ecmchar::$1 ← (dword~) mode_ecmchar::$0 / (dword/signed dword) 65536
  (byte~) mode_ecmchar::$2 ← ((byte)) (dword~) mode_ecmchar::$1
  *((byte*) DTV_GRAPHICS_VIC_BANK) ← (byte~) mode_ecmchar::$2
  (byte*~) mode_ecmchar::$3 ← (byte*) mode_ecmchar::ECMCHAR_COLORS / (word/signed word/dword/signed dword) 1024
  (word~) mode_ecmchar::$4 ← ((word)) (byte*~) mode_ecmchar::$3
  (byte~) mode_ecmchar::$5 ← < (word~) mode_ecmchar::$4
  *((byte*) DTV_COLOR_BANK_LO) ← (byte~) mode_ecmchar::$5
  (byte*~) mode_ecmchar::$6 ← (byte*) mode_ecmchar::ECMCHAR_COLORS / (word/signed word/dword/signed dword) 1024
  (word~) mode_ecmchar::$7 ← ((word)) (byte*~) mode_ecmchar::$6
  (byte~) mode_ecmchar::$8 ← > (word~) mode_ecmchar::$7
  *((byte*) DTV_COLOR_BANK_HI) ← (byte~) mode_ecmchar::$8
  *((byte*) DTV_CONTROL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) CIA2_PORT_A_DDR) ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (word~) mode_ecmchar::$9 ← ((word)) (byte*) mode_ecmchar::ECMCHAR_CHARSET
  (word/signed dword/dword~) mode_ecmchar::$10 ← (word~) mode_ecmchar::$9 / (word/signed word/dword/signed dword) 16384
  (byte~) mode_ecmchar::$11 ← ((byte)) (word/signed dword/dword~) mode_ecmchar::$10
  (byte/word/dword~) mode_ecmchar::$12 ← (byte/signed byte/word/signed word/dword/signed dword) 3 ^ (byte~) mode_ecmchar::$11
  *((byte*) CIA2_PORT_A) ← (byte/word/dword~) mode_ecmchar::$12
  (byte~) mode_ecmchar::$13 ← (byte) VIC_DEN | (byte) VIC_RSEL
  (byte~) mode_ecmchar::$14 ← (byte~) mode_ecmchar::$13 | (byte) VIC_ECM
  (byte/word/dword~) mode_ecmchar::$15 ← (byte~) mode_ecmchar::$14 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL) ← (byte/word/dword~) mode_ecmchar::$15
  *((byte*) VIC_CONTROL2) ← (byte) VIC_CSEL
  (word~) mode_ecmchar::$16 ← ((word)) (byte*) mode_ecmchar::ECMCHAR_SCREEN
  (word~) mode_ecmchar::$17 ← (word~) mode_ecmchar::$16 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_ecmchar::$18 ← (word~) mode_ecmchar::$17 / (byte/signed byte/word/signed word/dword/signed dword) 64
  (word~) mode_ecmchar::$19 ← ((word)) (byte*) mode_ecmchar::ECMCHAR_CHARSET
  (word~) mode_ecmchar::$20 ← (word~) mode_ecmchar::$19 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_ecmchar::$21 ← (word~) mode_ecmchar::$20 / (word/signed word/dword/signed dword) 1024
  (word/dword~) mode_ecmchar::$22 ← (word/signed dword/dword~) mode_ecmchar::$18 | (word/signed dword/dword~) mode_ecmchar::$21
  (byte~) mode_ecmchar::$23 ← ((byte)) (word/dword~) mode_ecmchar::$22
  *((byte*) VIC_MEMORY) ← (byte~) mode_ecmchar::$23
  (byte) mode_ecmchar::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_ecmchar::@1
mode_ecmchar::@1: scope:[mode_ecmchar]  from mode_ecmchar mode_ecmchar::@1
  *((byte*) DTV_PALETTE + (byte) mode_ecmchar::i) ← *((byte[16]) DTV_PALETTE_DEFAULT + (byte) mode_ecmchar::i)
  (byte) mode_ecmchar::i ← ++ (byte) mode_ecmchar::i
  (boolean~) mode_ecmchar::$24 ← (byte) mode_ecmchar::i != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_ecmchar::$24) goto mode_ecmchar::@1
  to:mode_ecmchar::@8
mode_ecmchar::@8: scope:[mode_ecmchar]  from mode_ecmchar::@1
  *((byte*) BORDERCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BGCOL1) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BGCOL2) ← (byte/signed byte/word/signed word/dword/signed dword) 2
  *((byte*) BGCOL3) ← (byte/signed byte/word/signed word/dword/signed dword) 5
  *((byte*) BGCOL4) ← (byte/signed byte/word/signed word/dword/signed dword) 6
  (byte*) mode_ecmchar::col ← (byte*) mode_ecmchar::ECMCHAR_COLORS
  (byte*) mode_ecmchar::ch ← (byte*) mode_ecmchar::ECMCHAR_SCREEN
  (byte) mode_ecmchar::cy ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_ecmchar::@2
mode_ecmchar::@2: scope:[mode_ecmchar]  from mode_ecmchar::@8 mode_ecmchar::@9
  (byte) mode_ecmchar::cx ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_ecmchar::@3
mode_ecmchar::@3: scope:[mode_ecmchar]  from mode_ecmchar::@2 mode_ecmchar::@3
  (byte~) mode_ecmchar::$25 ← (byte) mode_ecmchar::cx + (byte) mode_ecmchar::cy
  (byte~) mode_ecmchar::$26 ← (byte~) mode_ecmchar::$25 & (byte/signed byte/word/signed word/dword/signed dword) 15
  *((byte*) mode_ecmchar::col) ← (byte~) mode_ecmchar::$26
  (byte*) mode_ecmchar::col ← ++ (byte*) mode_ecmchar::col
  (byte~) mode_ecmchar::$27 ← (byte) mode_ecmchar::cy & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_ecmchar::$28 ← (byte~) mode_ecmchar::$27 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_ecmchar::$29 ← (byte) mode_ecmchar::cx & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_ecmchar::$30 ← (byte~) mode_ecmchar::$28 | (byte~) mode_ecmchar::$29
  *((byte*) mode_ecmchar::ch) ← (byte~) mode_ecmchar::$30
  (byte*) mode_ecmchar::ch ← ++ (byte*) mode_ecmchar::ch
  (byte) mode_ecmchar::cx ← ++ (byte) mode_ecmchar::cx
  (boolean~) mode_ecmchar::$31 ← (byte) mode_ecmchar::cx != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_ecmchar::$31) goto mode_ecmchar::@3
  to:mode_ecmchar::@9
mode_ecmchar::@9: scope:[mode_ecmchar]  from mode_ecmchar::@3
  (byte) mode_ecmchar::cy ← ++ (byte) mode_ecmchar::cy
  (boolean~) mode_ecmchar::$32 ← (byte) mode_ecmchar::cy != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_ecmchar::$32) goto mode_ecmchar::@2
  to:mode_ecmchar::@10
mode_ecmchar::@10: scope:[mode_ecmchar]  from mode_ecmchar::@9
  to:mode_ecmchar::@4
mode_ecmchar::@4: scope:[mode_ecmchar]  from mode_ecmchar::@10 mode_ecmchar::@7
  if(true) goto mode_ecmchar::@5
  to:mode_ecmchar::@11
mode_ecmchar::@5: scope:[mode_ecmchar]  from mode_ecmchar::@12 mode_ecmchar::@4
  (byte~) mode_ecmchar::$33 ← call keyboard_key_pressed (byte) KEY_SPACE 
  (boolean~) mode_ecmchar::$34 ← (byte~) mode_ecmchar::$33 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_ecmchar::$35 ← ! (boolean~) mode_ecmchar::$34
  if((boolean~) mode_ecmchar::$35) goto mode_ecmchar::@7
  to:mode_ecmchar::@13
mode_ecmchar::@11: scope:[mode_ecmchar]  from mode_ecmchar::@4
  to:mode_ecmchar::@6
mode_ecmchar::@6: scope:[mode_ecmchar]  from mode_ecmchar::@11 mode_ecmchar::@15
  to:mode_ecmchar::@return
mode_ecmchar::@12: scope:[mode_ecmchar]  from
  to:mode_ecmchar::@5
mode_ecmchar::@7: scope:[mode_ecmchar]  from mode_ecmchar::@14 mode_ecmchar::@5
  to:mode_ecmchar::@4
mode_ecmchar::@13: scope:[mode_ecmchar]  from mode_ecmchar::@5
  to:mode_ecmchar::@return
mode_ecmchar::@return: scope:[mode_ecmchar]  from mode_ecmchar::@13 mode_ecmchar::@6
  return 
  to:@return
mode_ecmchar::@14: scope:[mode_ecmchar]  from
  to:mode_ecmchar::@7
mode_ecmchar::@15: scope:[mode_ecmchar]  from
  to:mode_ecmchar::@6
@23: scope:[]  from @22
  to:@24
mode_mcchar: scope:[mode_mcchar]  from
  (byte*) mode_mcchar::SCREEN ← ((byte*)) (word/dword/signed dword) 32768
  (byte*) mode_mcchar::CHARSET ← ((byte*)) (word/dword/signed dword) 36864
  (byte*) mode_mcchar::COLORS ← ((byte*)) (word/dword/signed dword) 33792
  (dword~) mode_mcchar::$0 ← ((dword)) (byte*) mode_mcchar::CHARSET
  (dword~) mode_mcchar::$1 ← (dword~) mode_mcchar::$0 / (dword/signed dword) 65536
  (byte~) mode_mcchar::$2 ← ((byte)) (dword~) mode_mcchar::$1
  *((byte*) DTV_GRAPHICS_VIC_BANK) ← (byte~) mode_mcchar::$2
  (byte*~) mode_mcchar::$3 ← (byte*) mode_mcchar::COLORS / (word/signed word/dword/signed dword) 1024
  (word~) mode_mcchar::$4 ← ((word)) (byte*~) mode_mcchar::$3
  (byte~) mode_mcchar::$5 ← < (word~) mode_mcchar::$4
  *((byte*) DTV_COLOR_BANK_LO) ← (byte~) mode_mcchar::$5
  (byte*~) mode_mcchar::$6 ← (byte*) mode_mcchar::COLORS / (word/signed word/dword/signed dword) 1024
  (word~) mode_mcchar::$7 ← ((word)) (byte*~) mode_mcchar::$6
  (byte~) mode_mcchar::$8 ← > (word~) mode_mcchar::$7
  *((byte*) DTV_COLOR_BANK_HI) ← (byte~) mode_mcchar::$8
  *((byte*) DTV_CONTROL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) CIA2_PORT_A_DDR) ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (word~) mode_mcchar::$9 ← ((word)) (byte*) mode_mcchar::CHARSET
  (word/signed dword/dword~) mode_mcchar::$10 ← (word~) mode_mcchar::$9 / (word/signed word/dword/signed dword) 16384
  (byte~) mode_mcchar::$11 ← ((byte)) (word/signed dword/dword~) mode_mcchar::$10
  (byte/word/dword~) mode_mcchar::$12 ← (byte/signed byte/word/signed word/dword/signed dword) 3 ^ (byte~) mode_mcchar::$11
  *((byte*) CIA2_PORT_A) ← (byte/word/dword~) mode_mcchar::$12
  (byte~) mode_mcchar::$13 ← (byte) VIC_DEN | (byte) VIC_RSEL
  (byte/word/dword~) mode_mcchar::$14 ← (byte~) mode_mcchar::$13 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL) ← (byte/word/dword~) mode_mcchar::$14
  (byte~) mode_mcchar::$15 ← (byte) VIC_CSEL | (byte) VIC_MCM
  *((byte*) VIC_CONTROL2) ← (byte~) mode_mcchar::$15
  (word~) mode_mcchar::$16 ← ((word)) (byte*) mode_mcchar::SCREEN
  (word~) mode_mcchar::$17 ← (word~) mode_mcchar::$16 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_mcchar::$18 ← (word~) mode_mcchar::$17 / (byte/signed byte/word/signed word/dword/signed dword) 64
  (word~) mode_mcchar::$19 ← ((word)) (byte*) mode_mcchar::CHARSET
  (word~) mode_mcchar::$20 ← (word~) mode_mcchar::$19 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_mcchar::$21 ← (word~) mode_mcchar::$20 / (word/signed word/dword/signed dword) 1024
  (word/dword~) mode_mcchar::$22 ← (word/signed dword/dword~) mode_mcchar::$18 | (word/signed dword/dword~) mode_mcchar::$21
  (byte~) mode_mcchar::$23 ← ((byte)) (word/dword~) mode_mcchar::$22
  *((byte*) VIC_MEMORY) ← (byte~) mode_mcchar::$23
  (byte) mode_mcchar::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_mcchar::@1
mode_mcchar::@1: scope:[mode_mcchar]  from mode_mcchar mode_mcchar::@1
  *((byte*) DTV_PALETTE + (byte) mode_mcchar::i) ← *((byte[16]) DTV_PALETTE_DEFAULT + (byte) mode_mcchar::i)
  (byte) mode_mcchar::i ← ++ (byte) mode_mcchar::i
  (boolean~) mode_mcchar::$24 ← (byte) mode_mcchar::i != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_mcchar::$24) goto mode_mcchar::@1
  to:mode_mcchar::@8
mode_mcchar::@8: scope:[mode_mcchar]  from mode_mcchar::@1
  *((byte*) BORDERCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BGCOL1) ← (byte) BLACK
  *((byte*) BGCOL2) ← (byte) GREEN
  *((byte*) BGCOL3) ← (byte) BLUE
  (byte*) mode_mcchar::col ← (byte*) mode_mcchar::COLORS
  (byte*) mode_mcchar::ch ← (byte*) mode_mcchar::SCREEN
  (byte) mode_mcchar::cy ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_mcchar::@2
mode_mcchar::@2: scope:[mode_mcchar]  from mode_mcchar::@8 mode_mcchar::@9
  (byte) mode_mcchar::cx ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_mcchar::@3
mode_mcchar::@3: scope:[mode_mcchar]  from mode_mcchar::@2 mode_mcchar::@3
  (byte~) mode_mcchar::$25 ← (byte) mode_mcchar::cx + (byte) mode_mcchar::cy
  (byte~) mode_mcchar::$26 ← (byte~) mode_mcchar::$25 & (byte/signed byte/word/signed word/dword/signed dword) 15
  *((byte*) mode_mcchar::col) ← (byte~) mode_mcchar::$26
  (byte*) mode_mcchar::col ← ++ (byte*) mode_mcchar::col
  (byte~) mode_mcchar::$27 ← (byte) mode_mcchar::cy & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_mcchar::$28 ← (byte~) mode_mcchar::$27 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_mcchar::$29 ← (byte) mode_mcchar::cx & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_mcchar::$30 ← (byte~) mode_mcchar::$28 | (byte~) mode_mcchar::$29
  *((byte*) mode_mcchar::ch) ← (byte~) mode_mcchar::$30
  (byte*) mode_mcchar::ch ← ++ (byte*) mode_mcchar::ch
  (byte) mode_mcchar::cx ← ++ (byte) mode_mcchar::cx
  (boolean~) mode_mcchar::$31 ← (byte) mode_mcchar::cx != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_mcchar::$31) goto mode_mcchar::@3
  to:mode_mcchar::@9
mode_mcchar::@9: scope:[mode_mcchar]  from mode_mcchar::@3
  (byte) mode_mcchar::cy ← ++ (byte) mode_mcchar::cy
  (boolean~) mode_mcchar::$32 ← (byte) mode_mcchar::cy != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_mcchar::$32) goto mode_mcchar::@2
  to:mode_mcchar::@10
mode_mcchar::@10: scope:[mode_mcchar]  from mode_mcchar::@9
  to:mode_mcchar::@4
mode_mcchar::@4: scope:[mode_mcchar]  from mode_mcchar::@10 mode_mcchar::@7
  if(true) goto mode_mcchar::@5
  to:mode_mcchar::@11
mode_mcchar::@5: scope:[mode_mcchar]  from mode_mcchar::@12 mode_mcchar::@4
  (byte~) mode_mcchar::$33 ← call keyboard_key_pressed (byte) KEY_SPACE 
  (boolean~) mode_mcchar::$34 ← (byte~) mode_mcchar::$33 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_mcchar::$35 ← ! (boolean~) mode_mcchar::$34
  if((boolean~) mode_mcchar::$35) goto mode_mcchar::@7
  to:mode_mcchar::@13
mode_mcchar::@11: scope:[mode_mcchar]  from mode_mcchar::@4
  to:mode_mcchar::@6
mode_mcchar::@6: scope:[mode_mcchar]  from mode_mcchar::@11 mode_mcchar::@15
  to:mode_mcchar::@return
mode_mcchar::@12: scope:[mode_mcchar]  from
  to:mode_mcchar::@5
mode_mcchar::@7: scope:[mode_mcchar]  from mode_mcchar::@14 mode_mcchar::@5
  to:mode_mcchar::@4
mode_mcchar::@13: scope:[mode_mcchar]  from mode_mcchar::@5
  to:mode_mcchar::@return
mode_mcchar::@return: scope:[mode_mcchar]  from mode_mcchar::@13 mode_mcchar::@6
  return 
  to:@return
mode_mcchar::@14: scope:[mode_mcchar]  from
  to:mode_mcchar::@7
mode_mcchar::@15: scope:[mode_mcchar]  from
  to:mode_mcchar::@6
@24: scope:[]  from @23
  to:@25
mode_hicolstdchar: scope:[mode_hicolstdchar]  from
  (byte*) mode_hicolstdchar::SCREEN ← ((byte*)) (word/dword/signed dword) 32768
  (byte*) mode_hicolstdchar::CHARSET ← ((byte*)) (word/dword/signed dword) 36864
  (byte*) mode_hicolstdchar::COLORS ← ((byte*)) (word/dword/signed dword) 33792
  (dword~) mode_hicolstdchar::$0 ← ((dword)) (byte*) mode_hicolstdchar::CHARSET
  (dword~) mode_hicolstdchar::$1 ← (dword~) mode_hicolstdchar::$0 / (dword/signed dword) 65536
  (byte~) mode_hicolstdchar::$2 ← ((byte)) (dword~) mode_hicolstdchar::$1
  *((byte*) DTV_GRAPHICS_VIC_BANK) ← (byte~) mode_hicolstdchar::$2
  (byte*~) mode_hicolstdchar::$3 ← (byte*) mode_hicolstdchar::COLORS / (word/signed word/dword/signed dword) 1024
  (word~) mode_hicolstdchar::$4 ← ((word)) (byte*~) mode_hicolstdchar::$3
  (byte~) mode_hicolstdchar::$5 ← < (word~) mode_hicolstdchar::$4
  *((byte*) DTV_COLOR_BANK_LO) ← (byte~) mode_hicolstdchar::$5
  (byte*~) mode_hicolstdchar::$6 ← (byte*) mode_hicolstdchar::COLORS / (word/signed word/dword/signed dword) 1024
  (word~) mode_hicolstdchar::$7 ← ((word)) (byte*~) mode_hicolstdchar::$6
  (byte~) mode_hicolstdchar::$8 ← > (word~) mode_hicolstdchar::$7
  *((byte*) DTV_COLOR_BANK_HI) ← (byte~) mode_hicolstdchar::$8
  *((byte*) DTV_CONTROL) ← (byte) DTV_CONTROL_HIGHCOLOR_ON
  *((byte*) CIA2_PORT_A_DDR) ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (word~) mode_hicolstdchar::$9 ← ((word)) (byte*) mode_hicolstdchar::CHARSET
  (word/signed dword/dword~) mode_hicolstdchar::$10 ← (word~) mode_hicolstdchar::$9 / (word/signed word/dword/signed dword) 16384
  (byte~) mode_hicolstdchar::$11 ← ((byte)) (word/signed dword/dword~) mode_hicolstdchar::$10
  (byte/word/dword~) mode_hicolstdchar::$12 ← (byte/signed byte/word/signed word/dword/signed dword) 3 ^ (byte~) mode_hicolstdchar::$11
  *((byte*) CIA2_PORT_A) ← (byte/word/dword~) mode_hicolstdchar::$12
  (byte~) mode_hicolstdchar::$13 ← (byte) VIC_DEN | (byte) VIC_RSEL
  (byte/word/dword~) mode_hicolstdchar::$14 ← (byte~) mode_hicolstdchar::$13 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL) ← (byte/word/dword~) mode_hicolstdchar::$14
  *((byte*) VIC_CONTROL2) ← (byte) VIC_CSEL
  (word~) mode_hicolstdchar::$15 ← ((word)) (byte*) mode_hicolstdchar::SCREEN
  (word~) mode_hicolstdchar::$16 ← (word~) mode_hicolstdchar::$15 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_hicolstdchar::$17 ← (word~) mode_hicolstdchar::$16 / (byte/signed byte/word/signed word/dword/signed dword) 64
  (word~) mode_hicolstdchar::$18 ← ((word)) (byte*) mode_hicolstdchar::CHARSET
  (word~) mode_hicolstdchar::$19 ← (word~) mode_hicolstdchar::$18 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_hicolstdchar::$20 ← (word~) mode_hicolstdchar::$19 / (word/signed word/dword/signed dword) 1024
  (word/dword~) mode_hicolstdchar::$21 ← (word/signed dword/dword~) mode_hicolstdchar::$17 | (word/signed dword/dword~) mode_hicolstdchar::$20
  (byte~) mode_hicolstdchar::$22 ← ((byte)) (word/dword~) mode_hicolstdchar::$21
  *((byte*) VIC_MEMORY) ← (byte~) mode_hicolstdchar::$22
  (byte) mode_hicolstdchar::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_hicolstdchar::@1
mode_hicolstdchar::@1: scope:[mode_hicolstdchar]  from mode_hicolstdchar mode_hicolstdchar::@1
  *((byte*) DTV_PALETTE + (byte) mode_hicolstdchar::i) ← (byte) mode_hicolstdchar::i
  (byte) mode_hicolstdchar::i ← ++ (byte) mode_hicolstdchar::i
  (boolean~) mode_hicolstdchar::$23 ← (byte) mode_hicolstdchar::i != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_hicolstdchar::$23) goto mode_hicolstdchar::@1
  to:mode_hicolstdchar::@8
mode_hicolstdchar::@8: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@1
  *((byte*) BGCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BORDERCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*) mode_hicolstdchar::col ← (byte*) mode_hicolstdchar::COLORS
  (byte*) mode_hicolstdchar::ch ← (byte*) mode_hicolstdchar::SCREEN
  (byte) mode_hicolstdchar::cy ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_hicolstdchar::@2
mode_hicolstdchar::@2: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@8 mode_hicolstdchar::@9
  (byte) mode_hicolstdchar::cx ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_hicolstdchar::@3
mode_hicolstdchar::@3: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@2 mode_hicolstdchar::@3
  (byte~) mode_hicolstdchar::$24 ← (byte) mode_hicolstdchar::cy & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_hicolstdchar::$25 ← (byte~) mode_hicolstdchar::$24 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_hicolstdchar::$26 ← (byte) mode_hicolstdchar::cx & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_hicolstdchar::$27 ← (byte~) mode_hicolstdchar::$25 | (byte~) mode_hicolstdchar::$26
  (byte) mode_hicolstdchar::v ← (byte~) mode_hicolstdchar::$27
  *((byte*) mode_hicolstdchar::col) ← (byte) mode_hicolstdchar::v
  (byte*) mode_hicolstdchar::col ← ++ (byte*) mode_hicolstdchar::col
  *((byte*) mode_hicolstdchar::ch) ← (byte) mode_hicolstdchar::v
  (byte*) mode_hicolstdchar::ch ← ++ (byte*) mode_hicolstdchar::ch
  (byte) mode_hicolstdchar::cx ← ++ (byte) mode_hicolstdchar::cx
  (boolean~) mode_hicolstdchar::$28 ← (byte) mode_hicolstdchar::cx != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_hicolstdchar::$28) goto mode_hicolstdchar::@3
  to:mode_hicolstdchar::@9
mode_hicolstdchar::@9: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@3
  (byte) mode_hicolstdchar::cy ← ++ (byte) mode_hicolstdchar::cy
  (boolean~) mode_hicolstdchar::$29 ← (byte) mode_hicolstdchar::cy != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_hicolstdchar::$29) goto mode_hicolstdchar::@2
  to:mode_hicolstdchar::@10
mode_hicolstdchar::@10: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@9
  to:mode_hicolstdchar::@4
mode_hicolstdchar::@4: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@10 mode_hicolstdchar::@7
  if(true) goto mode_hicolstdchar::@5
  to:mode_hicolstdchar::@11
mode_hicolstdchar::@5: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@12 mode_hicolstdchar::@4
  (byte~) mode_hicolstdchar::$30 ← call keyboard_key_pressed (byte) KEY_SPACE 
  (boolean~) mode_hicolstdchar::$31 ← (byte~) mode_hicolstdchar::$30 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_hicolstdchar::$32 ← ! (boolean~) mode_hicolstdchar::$31
  if((boolean~) mode_hicolstdchar::$32) goto mode_hicolstdchar::@7
  to:mode_hicolstdchar::@13
mode_hicolstdchar::@11: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@4
  to:mode_hicolstdchar::@6
mode_hicolstdchar::@6: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@11 mode_hicolstdchar::@15
  to:mode_hicolstdchar::@return
mode_hicolstdchar::@12: scope:[mode_hicolstdchar]  from
  to:mode_hicolstdchar::@5
mode_hicolstdchar::@7: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@14 mode_hicolstdchar::@5
  to:mode_hicolstdchar::@4
mode_hicolstdchar::@13: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@5
  to:mode_hicolstdchar::@return
mode_hicolstdchar::@return: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@13 mode_hicolstdchar::@6
  return 
  to:@return
mode_hicolstdchar::@14: scope:[mode_hicolstdchar]  from
  to:mode_hicolstdchar::@7
mode_hicolstdchar::@15: scope:[mode_hicolstdchar]  from
  to:mode_hicolstdchar::@6
@25: scope:[]  from @24
  to:@26
mode_hicolecmchar: scope:[mode_hicolecmchar]  from
  (byte*) mode_hicolecmchar::SCREEN ← ((byte*)) (word/dword/signed dword) 32768
  (byte*) mode_hicolecmchar::CHARSET ← ((byte*)) (word/dword/signed dword) 36864
  (byte*) mode_hicolecmchar::COLORS ← ((byte*)) (word/dword/signed dword) 33792
  (dword~) mode_hicolecmchar::$0 ← ((dword)) (byte*) mode_hicolecmchar::CHARSET
  (dword~) mode_hicolecmchar::$1 ← (dword~) mode_hicolecmchar::$0 / (dword/signed dword) 65536
  (byte~) mode_hicolecmchar::$2 ← ((byte)) (dword~) mode_hicolecmchar::$1
  *((byte*) DTV_GRAPHICS_VIC_BANK) ← (byte~) mode_hicolecmchar::$2
  (byte*~) mode_hicolecmchar::$3 ← (byte*) mode_hicolecmchar::COLORS / (word/signed word/dword/signed dword) 1024
  (word~) mode_hicolecmchar::$4 ← ((word)) (byte*~) mode_hicolecmchar::$3
  (byte~) mode_hicolecmchar::$5 ← < (word~) mode_hicolecmchar::$4
  *((byte*) DTV_COLOR_BANK_LO) ← (byte~) mode_hicolecmchar::$5
  (byte*~) mode_hicolecmchar::$6 ← (byte*) mode_hicolecmchar::COLORS / (word/signed word/dword/signed dword) 1024
  (word~) mode_hicolecmchar::$7 ← ((word)) (byte*~) mode_hicolecmchar::$6
  (byte~) mode_hicolecmchar::$8 ← > (word~) mode_hicolecmchar::$7
  *((byte*) DTV_COLOR_BANK_HI) ← (byte~) mode_hicolecmchar::$8
  *((byte*) DTV_CONTROL) ← (byte) DTV_CONTROL_HIGHCOLOR_ON
  *((byte*) CIA2_PORT_A_DDR) ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (word~) mode_hicolecmchar::$9 ← ((word)) (byte*) mode_hicolecmchar::CHARSET
  (word/signed dword/dword~) mode_hicolecmchar::$10 ← (word~) mode_hicolecmchar::$9 / (word/signed word/dword/signed dword) 16384
  (byte~) mode_hicolecmchar::$11 ← ((byte)) (word/signed dword/dword~) mode_hicolecmchar::$10
  (byte/word/dword~) mode_hicolecmchar::$12 ← (byte/signed byte/word/signed word/dword/signed dword) 3 ^ (byte~) mode_hicolecmchar::$11
  *((byte*) CIA2_PORT_A) ← (byte/word/dword~) mode_hicolecmchar::$12
  (byte~) mode_hicolecmchar::$13 ← (byte) VIC_DEN | (byte) VIC_RSEL
  (byte~) mode_hicolecmchar::$14 ← (byte~) mode_hicolecmchar::$13 | (byte) VIC_ECM
  (byte/word/dword~) mode_hicolecmchar::$15 ← (byte~) mode_hicolecmchar::$14 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL) ← (byte/word/dword~) mode_hicolecmchar::$15
  *((byte*) VIC_CONTROL2) ← (byte) VIC_CSEL
  (word~) mode_hicolecmchar::$16 ← ((word)) (byte*) mode_hicolecmchar::SCREEN
  (word~) mode_hicolecmchar::$17 ← (word~) mode_hicolecmchar::$16 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_hicolecmchar::$18 ← (word~) mode_hicolecmchar::$17 / (byte/signed byte/word/signed word/dword/signed dword) 64
  (word~) mode_hicolecmchar::$19 ← ((word)) (byte*) mode_hicolecmchar::CHARSET
  (word~) mode_hicolecmchar::$20 ← (word~) mode_hicolecmchar::$19 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_hicolecmchar::$21 ← (word~) mode_hicolecmchar::$20 / (word/signed word/dword/signed dword) 1024
  (word/dword~) mode_hicolecmchar::$22 ← (word/signed dword/dword~) mode_hicolecmchar::$18 | (word/signed dword/dword~) mode_hicolecmchar::$21
  (byte~) mode_hicolecmchar::$23 ← ((byte)) (word/dword~) mode_hicolecmchar::$22
  *((byte*) VIC_MEMORY) ← (byte~) mode_hicolecmchar::$23
  (byte) mode_hicolecmchar::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_hicolecmchar::@1
mode_hicolecmchar::@1: scope:[mode_hicolecmchar]  from mode_hicolecmchar mode_hicolecmchar::@1
  *((byte*) DTV_PALETTE + (byte) mode_hicolecmchar::i) ← (byte) mode_hicolecmchar::i
  (byte) mode_hicolecmchar::i ← ++ (byte) mode_hicolecmchar::i
  (boolean~) mode_hicolecmchar::$24 ← (byte) mode_hicolecmchar::i != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_hicolecmchar::$24) goto mode_hicolecmchar::@1
  to:mode_hicolecmchar::@8
mode_hicolecmchar::@8: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@1
  *((byte*) BORDERCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BGCOL1) ← (byte/signed byte/word/signed word/dword/signed dword) 80
  *((byte*) BGCOL2) ← (byte/signed byte/word/signed word/dword/signed dword) 84
  *((byte*) BGCOL3) ← (byte/signed byte/word/signed word/dword/signed dword) 88
  *((byte*) BGCOL4) ← (byte/signed byte/word/signed word/dword/signed dword) 92
  (byte*) mode_hicolecmchar::col ← (byte*) mode_hicolecmchar::COLORS
  (byte*) mode_hicolecmchar::ch ← (byte*) mode_hicolecmchar::SCREEN
  (byte) mode_hicolecmchar::cy ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_hicolecmchar::@2
mode_hicolecmchar::@2: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@8 mode_hicolecmchar::@9
  (byte) mode_hicolecmchar::cx ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_hicolecmchar::@3
mode_hicolecmchar::@3: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@2 mode_hicolecmchar::@3
  (byte~) mode_hicolecmchar::$25 ← (byte) mode_hicolecmchar::cy & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_hicolecmchar::$26 ← (byte~) mode_hicolecmchar::$25 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_hicolecmchar::$27 ← (byte) mode_hicolecmchar::cx & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_hicolecmchar::$28 ← (byte~) mode_hicolecmchar::$26 | (byte~) mode_hicolecmchar::$27
  (byte) mode_hicolecmchar::v ← (byte~) mode_hicolecmchar::$28
  *((byte*) mode_hicolecmchar::col) ← (byte) mode_hicolecmchar::v
  (byte*) mode_hicolecmchar::col ← ++ (byte*) mode_hicolecmchar::col
  *((byte*) mode_hicolecmchar::ch) ← (byte) mode_hicolecmchar::v
  (byte*) mode_hicolecmchar::ch ← ++ (byte*) mode_hicolecmchar::ch
  (byte) mode_hicolecmchar::cx ← ++ (byte) mode_hicolecmchar::cx
  (boolean~) mode_hicolecmchar::$29 ← (byte) mode_hicolecmchar::cx != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_hicolecmchar::$29) goto mode_hicolecmchar::@3
  to:mode_hicolecmchar::@9
mode_hicolecmchar::@9: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@3
  (byte) mode_hicolecmchar::cy ← ++ (byte) mode_hicolecmchar::cy
  (boolean~) mode_hicolecmchar::$30 ← (byte) mode_hicolecmchar::cy != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_hicolecmchar::$30) goto mode_hicolecmchar::@2
  to:mode_hicolecmchar::@10
mode_hicolecmchar::@10: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@9
  to:mode_hicolecmchar::@4
mode_hicolecmchar::@4: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@10 mode_hicolecmchar::@7
  if(true) goto mode_hicolecmchar::@5
  to:mode_hicolecmchar::@11
mode_hicolecmchar::@5: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@12 mode_hicolecmchar::@4
  (byte~) mode_hicolecmchar::$31 ← call keyboard_key_pressed (byte) KEY_SPACE 
  (boolean~) mode_hicolecmchar::$32 ← (byte~) mode_hicolecmchar::$31 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_hicolecmchar::$33 ← ! (boolean~) mode_hicolecmchar::$32
  if((boolean~) mode_hicolecmchar::$33) goto mode_hicolecmchar::@7
  to:mode_hicolecmchar::@13
mode_hicolecmchar::@11: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@4
  to:mode_hicolecmchar::@6
mode_hicolecmchar::@6: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@11 mode_hicolecmchar::@15
  to:mode_hicolecmchar::@return
mode_hicolecmchar::@12: scope:[mode_hicolecmchar]  from
  to:mode_hicolecmchar::@5
mode_hicolecmchar::@7: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@14 mode_hicolecmchar::@5
  to:mode_hicolecmchar::@4
mode_hicolecmchar::@13: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@5
  to:mode_hicolecmchar::@return
mode_hicolecmchar::@return: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@13 mode_hicolecmchar::@6
  return 
  to:@return
mode_hicolecmchar::@14: scope:[mode_hicolecmchar]  from
  to:mode_hicolecmchar::@7
mode_hicolecmchar::@15: scope:[mode_hicolecmchar]  from
  to:mode_hicolecmchar::@6
@26: scope:[]  from @25
  to:@27
mode_hicolmcchar: scope:[mode_hicolmcchar]  from
  (byte*) mode_hicolmcchar::SCREEN ← ((byte*)) (word/dword/signed dword) 32768
  (byte*) mode_hicolmcchar::CHARSET ← ((byte*)) (word/dword/signed dword) 36864
  (byte*) mode_hicolmcchar::COLORS ← ((byte*)) (word/dword/signed dword) 33792
  (dword~) mode_hicolmcchar::$0 ← ((dword)) (byte*) mode_hicolmcchar::CHARSET
  (dword~) mode_hicolmcchar::$1 ← (dword~) mode_hicolmcchar::$0 / (dword/signed dword) 65536
  (byte~) mode_hicolmcchar::$2 ← ((byte)) (dword~) mode_hicolmcchar::$1
  *((byte*) DTV_GRAPHICS_VIC_BANK) ← (byte~) mode_hicolmcchar::$2
  (byte*~) mode_hicolmcchar::$3 ← (byte*) mode_hicolmcchar::COLORS / (word/signed word/dword/signed dword) 1024
  (word~) mode_hicolmcchar::$4 ← ((word)) (byte*~) mode_hicolmcchar::$3
  (byte~) mode_hicolmcchar::$5 ← < (word~) mode_hicolmcchar::$4
  *((byte*) DTV_COLOR_BANK_LO) ← (byte~) mode_hicolmcchar::$5
  (byte*~) mode_hicolmcchar::$6 ← (byte*) mode_hicolmcchar::COLORS / (word/signed word/dword/signed dword) 1024
  (word~) mode_hicolmcchar::$7 ← ((word)) (byte*~) mode_hicolmcchar::$6
  (byte~) mode_hicolmcchar::$8 ← > (word~) mode_hicolmcchar::$7
  *((byte*) DTV_COLOR_BANK_HI) ← (byte~) mode_hicolmcchar::$8
  *((byte*) DTV_CONTROL) ← (byte) DTV_CONTROL_HIGHCOLOR_ON
  *((byte*) CIA2_PORT_A_DDR) ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (word~) mode_hicolmcchar::$9 ← ((word)) (byte*) mode_hicolmcchar::CHARSET
  (word/signed dword/dword~) mode_hicolmcchar::$10 ← (word~) mode_hicolmcchar::$9 / (word/signed word/dword/signed dword) 16384
  (byte~) mode_hicolmcchar::$11 ← ((byte)) (word/signed dword/dword~) mode_hicolmcchar::$10
  (byte/word/dword~) mode_hicolmcchar::$12 ← (byte/signed byte/word/signed word/dword/signed dword) 3 ^ (byte~) mode_hicolmcchar::$11
  *((byte*) CIA2_PORT_A) ← (byte/word/dword~) mode_hicolmcchar::$12
  (byte~) mode_hicolmcchar::$13 ← (byte) VIC_DEN | (byte) VIC_RSEL
  (byte/word/dword~) mode_hicolmcchar::$14 ← (byte~) mode_hicolmcchar::$13 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL) ← (byte/word/dword~) mode_hicolmcchar::$14
  (byte~) mode_hicolmcchar::$15 ← (byte) VIC_CSEL | (byte) VIC_MCM
  *((byte*) VIC_CONTROL2) ← (byte~) mode_hicolmcchar::$15
  (word~) mode_hicolmcchar::$16 ← ((word)) (byte*) mode_hicolmcchar::SCREEN
  (word~) mode_hicolmcchar::$17 ← (word~) mode_hicolmcchar::$16 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_hicolmcchar::$18 ← (word~) mode_hicolmcchar::$17 / (byte/signed byte/word/signed word/dword/signed dword) 64
  (word~) mode_hicolmcchar::$19 ← ((word)) (byte*) mode_hicolmcchar::CHARSET
  (word~) mode_hicolmcchar::$20 ← (word~) mode_hicolmcchar::$19 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_hicolmcchar::$21 ← (word~) mode_hicolmcchar::$20 / (word/signed word/dword/signed dword) 1024
  (word/dword~) mode_hicolmcchar::$22 ← (word/signed dword/dword~) mode_hicolmcchar::$18 | (word/signed dword/dword~) mode_hicolmcchar::$21
  (byte~) mode_hicolmcchar::$23 ← ((byte)) (word/dword~) mode_hicolmcchar::$22
  *((byte*) VIC_MEMORY) ← (byte~) mode_hicolmcchar::$23
  (byte) mode_hicolmcchar::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_hicolmcchar::@1
mode_hicolmcchar::@1: scope:[mode_hicolmcchar]  from mode_hicolmcchar mode_hicolmcchar::@1
  *((byte*) DTV_PALETTE + (byte) mode_hicolmcchar::i) ← (byte) mode_hicolmcchar::i
  (byte) mode_hicolmcchar::i ← ++ (byte) mode_hicolmcchar::i
  (boolean~) mode_hicolmcchar::$24 ← (byte) mode_hicolmcchar::i != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_hicolmcchar::$24) goto mode_hicolmcchar::@1
  to:mode_hicolmcchar::@8
mode_hicolmcchar::@8: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@1
  *((byte*) BORDERCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BGCOL1) ← (byte/signed byte/word/signed word/dword/signed dword) 80
  *((byte*) BGCOL2) ← (byte/signed byte/word/signed word/dword/signed dword) 84
  *((byte*) BGCOL3) ← (byte/signed byte/word/signed word/dword/signed dword) 88
  (byte*) mode_hicolmcchar::col ← (byte*) mode_hicolmcchar::COLORS
  (byte*) mode_hicolmcchar::ch ← (byte*) mode_hicolmcchar::SCREEN
  (byte) mode_hicolmcchar::cy ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_hicolmcchar::@2
mode_hicolmcchar::@2: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@8 mode_hicolmcchar::@9
  (byte) mode_hicolmcchar::cx ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_hicolmcchar::@3
mode_hicolmcchar::@3: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@2 mode_hicolmcchar::@3
  (byte~) mode_hicolmcchar::$25 ← (byte) mode_hicolmcchar::cy & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_hicolmcchar::$26 ← (byte~) mode_hicolmcchar::$25 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_hicolmcchar::$27 ← (byte) mode_hicolmcchar::cx & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_hicolmcchar::$28 ← (byte~) mode_hicolmcchar::$26 | (byte~) mode_hicolmcchar::$27
  (byte) mode_hicolmcchar::v ← (byte~) mode_hicolmcchar::$28
  *((byte*) mode_hicolmcchar::col) ← (byte) mode_hicolmcchar::v
  (byte*) mode_hicolmcchar::col ← ++ (byte*) mode_hicolmcchar::col
  *((byte*) mode_hicolmcchar::ch) ← (byte) mode_hicolmcchar::v
  (byte*) mode_hicolmcchar::ch ← ++ (byte*) mode_hicolmcchar::ch
  (byte) mode_hicolmcchar::cx ← ++ (byte) mode_hicolmcchar::cx
  (boolean~) mode_hicolmcchar::$29 ← (byte) mode_hicolmcchar::cx != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_hicolmcchar::$29) goto mode_hicolmcchar::@3
  to:mode_hicolmcchar::@9
mode_hicolmcchar::@9: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@3
  (byte) mode_hicolmcchar::cy ← ++ (byte) mode_hicolmcchar::cy
  (boolean~) mode_hicolmcchar::$30 ← (byte) mode_hicolmcchar::cy != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_hicolmcchar::$30) goto mode_hicolmcchar::@2
  to:mode_hicolmcchar::@10
mode_hicolmcchar::@10: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@9
  to:mode_hicolmcchar::@4
mode_hicolmcchar::@4: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@10 mode_hicolmcchar::@7
  if(true) goto mode_hicolmcchar::@5
  to:mode_hicolmcchar::@11
mode_hicolmcchar::@5: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@12 mode_hicolmcchar::@4
  (byte~) mode_hicolmcchar::$31 ← call keyboard_key_pressed (byte) KEY_SPACE 
  (boolean~) mode_hicolmcchar::$32 ← (byte~) mode_hicolmcchar::$31 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_hicolmcchar::$33 ← ! (boolean~) mode_hicolmcchar::$32
  if((boolean~) mode_hicolmcchar::$33) goto mode_hicolmcchar::@7
  to:mode_hicolmcchar::@13
mode_hicolmcchar::@11: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@4
  to:mode_hicolmcchar::@6
mode_hicolmcchar::@6: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@11 mode_hicolmcchar::@15
  to:mode_hicolmcchar::@return
mode_hicolmcchar::@12: scope:[mode_hicolmcchar]  from
  to:mode_hicolmcchar::@5
mode_hicolmcchar::@7: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@14 mode_hicolmcchar::@5
  to:mode_hicolmcchar::@4
mode_hicolmcchar::@13: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@5
  to:mode_hicolmcchar::@return
mode_hicolmcchar::@return: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@13 mode_hicolmcchar::@6
  return 
  to:@return
mode_hicolmcchar::@14: scope:[mode_hicolmcchar]  from
  to:mode_hicolmcchar::@7
mode_hicolmcchar::@15: scope:[mode_hicolmcchar]  from
  to:mode_hicolmcchar::@6
@27: scope:[]  from @26
  to:@28
mode_twoplanebitmap: scope:[mode_twoplanebitmap]  from
  (byte*) mode_twoplanebitmap::PLANEA ← ((byte*)) (word/signed word/dword/signed dword) 16384
  (byte*) mode_twoplanebitmap::PLANEB ← ((byte*)) (word/signed word/dword/signed dword) 24576
  (byte*) mode_twoplanebitmap::COLORS ← ((byte*)) (word/dword/signed dword) 32768
  (byte~) mode_twoplanebitmap::$0 ← (byte) DTV_CONTROL_HIGHCOLOR_ON | (byte) DTV_CONTROL_LINEAR_ADDRESSING_ON
  *((byte*) DTV_CONTROL) ← (byte~) mode_twoplanebitmap::$0
  (byte~) mode_twoplanebitmap::$1 ← (byte) VIC_ECM | (byte) VIC_BMM
  (byte~) mode_twoplanebitmap::$2 ← (byte~) mode_twoplanebitmap::$1 | (byte) VIC_DEN
  (byte~) mode_twoplanebitmap::$3 ← (byte~) mode_twoplanebitmap::$2 | (byte) VIC_RSEL
  (byte/word/dword~) mode_twoplanebitmap::$4 ← (byte~) mode_twoplanebitmap::$3 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL) ← (byte/word/dword~) mode_twoplanebitmap::$4
  *((byte*) VIC_CONTROL2) ← (byte) VIC_CSEL
  (byte~) mode_twoplanebitmap::$5 ← < (byte*) mode_twoplanebitmap::PLANEA
  *((byte*) DTV_PLANEA_START_LO) ← (byte~) mode_twoplanebitmap::$5
  (byte~) mode_twoplanebitmap::$6 ← > (byte*) mode_twoplanebitmap::PLANEA
  *((byte*) DTV_PLANEA_START_MI) ← (byte~) mode_twoplanebitmap::$6
  *((byte*) DTV_PLANEA_START_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEA_STEP) ← (byte/signed byte/word/signed word/dword/signed dword) 1
  *((byte*) DTV_PLANEA_MODULO_LO) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEA_MODULO_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte~) mode_twoplanebitmap::$7 ← < (byte*) mode_twoplanebitmap::PLANEB
  *((byte*) DTV_PLANEB_START_LO) ← (byte~) mode_twoplanebitmap::$7
  (byte~) mode_twoplanebitmap::$8 ← > (byte*) mode_twoplanebitmap::PLANEB
  *((byte*) DTV_PLANEB_START_MI) ← (byte~) mode_twoplanebitmap::$8
  *((byte*) DTV_PLANEB_START_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_STEP) ← (byte/signed byte/word/signed word/dword/signed dword) 1
  *((byte*) DTV_PLANEB_MODULO_LO) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_MODULO_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*~) mode_twoplanebitmap::$9 ← (byte*) mode_twoplanebitmap::COLORS / (word/signed word/dword/signed dword) 1024
  (byte~) mode_twoplanebitmap::$10 ← < (byte*~) mode_twoplanebitmap::$9
  *((byte*) DTV_COLOR_BANK_LO) ← (byte~) mode_twoplanebitmap::$10
  (byte*~) mode_twoplanebitmap::$11 ← (byte*) mode_twoplanebitmap::COLORS / (word/signed word/dword/signed dword) 1024
  (byte~) mode_twoplanebitmap::$12 ← > (byte*~) mode_twoplanebitmap::$11
  *((byte*) DTV_COLOR_BANK_HI) ← (byte~) mode_twoplanebitmap::$12
  (byte) mode_twoplanebitmap::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_twoplanebitmap::@1
mode_twoplanebitmap::@1: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap mode_twoplanebitmap::@1
  *((byte*) DTV_PALETTE + (byte) mode_twoplanebitmap::i) ← (byte) mode_twoplanebitmap::i
  (byte) mode_twoplanebitmap::i ← ++ (byte) mode_twoplanebitmap::i
  (boolean~) mode_twoplanebitmap::$13 ← (byte) mode_twoplanebitmap::i != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_twoplanebitmap::$13) goto mode_twoplanebitmap::@1
  to:mode_twoplanebitmap::@14
mode_twoplanebitmap::@14: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@1
  *((byte*) BORDERCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BGCOL1) ← (byte/signed byte/word/signed word/dword/signed dword) 112
  *((byte*) BGCOL2) ← (byte/word/signed word/dword/signed dword) 212
  (byte*) mode_twoplanebitmap::col ← (byte*) mode_twoplanebitmap::COLORS
  (byte) mode_twoplanebitmap::cy ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_twoplanebitmap::@2
mode_twoplanebitmap::@2: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@14 mode_twoplanebitmap::@15
  (byte) mode_twoplanebitmap::cx ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_twoplanebitmap::@3
mode_twoplanebitmap::@3: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@2 mode_twoplanebitmap::@3
  (byte~) mode_twoplanebitmap::$14 ← (byte) mode_twoplanebitmap::cy & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_twoplanebitmap::$15 ← (byte~) mode_twoplanebitmap::$14 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_twoplanebitmap::$16 ← (byte) mode_twoplanebitmap::cx & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_twoplanebitmap::$17 ← (byte~) mode_twoplanebitmap::$15 | (byte~) mode_twoplanebitmap::$16
  *((byte*) mode_twoplanebitmap::col) ← (byte~) mode_twoplanebitmap::$17
  (byte*) mode_twoplanebitmap::col ← ++ (byte*) mode_twoplanebitmap::col
  (byte) mode_twoplanebitmap::cx ← ++ (byte) mode_twoplanebitmap::cx
  (boolean~) mode_twoplanebitmap::$18 ← (byte) mode_twoplanebitmap::cx != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_twoplanebitmap::$18) goto mode_twoplanebitmap::@3
  to:mode_twoplanebitmap::@15
mode_twoplanebitmap::@15: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@3
  (byte) mode_twoplanebitmap::cy ← ++ (byte) mode_twoplanebitmap::cy
  (boolean~) mode_twoplanebitmap::$19 ← (byte) mode_twoplanebitmap::cy != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_twoplanebitmap::$19) goto mode_twoplanebitmap::@2
  to:mode_twoplanebitmap::@16
mode_twoplanebitmap::@16: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@15
  (byte*) mode_twoplanebitmap::gfxa ← (byte*) mode_twoplanebitmap::PLANEA
  (byte) mode_twoplanebitmap::ay ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_twoplanebitmap::@4
mode_twoplanebitmap::@4: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@16 mode_twoplanebitmap::@19
  (byte) mode_twoplanebitmap::ax ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_twoplanebitmap::@5
mode_twoplanebitmap::@5: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@4 mode_twoplanebitmap::@7
  (byte~) mode_twoplanebitmap::$20 ← (byte) mode_twoplanebitmap::ay & (byte/signed byte/word/signed word/dword/signed dword) 4
  (boolean~) mode_twoplanebitmap::$21 ← (byte~) mode_twoplanebitmap::$20 == (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_twoplanebitmap::$22 ← ! (boolean~) mode_twoplanebitmap::$21
  if((boolean~) mode_twoplanebitmap::$22) goto mode_twoplanebitmap::@6
  to:mode_twoplanebitmap::@17
mode_twoplanebitmap::@6: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@18 mode_twoplanebitmap::@5
  *((byte*) mode_twoplanebitmap::gfxa) ← (byte/word/signed word/dword/signed dword) 255
  (byte*) mode_twoplanebitmap::gfxa ← ++ (byte*) mode_twoplanebitmap::gfxa
  to:mode_twoplanebitmap::@7
mode_twoplanebitmap::@17: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@5
  *((byte*) mode_twoplanebitmap::gfxa) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*) mode_twoplanebitmap::gfxa ← ++ (byte*) mode_twoplanebitmap::gfxa
  to:mode_twoplanebitmap::@7
mode_twoplanebitmap::@7: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@17 mode_twoplanebitmap::@6
  (byte) mode_twoplanebitmap::ax ← ++ (byte) mode_twoplanebitmap::ax
  (boolean~) mode_twoplanebitmap::$23 ← (byte) mode_twoplanebitmap::ax != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_twoplanebitmap::$23) goto mode_twoplanebitmap::@5
  to:mode_twoplanebitmap::@19
mode_twoplanebitmap::@18: scope:[mode_twoplanebitmap]  from
  to:mode_twoplanebitmap::@6
mode_twoplanebitmap::@19: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@7
  (byte) mode_twoplanebitmap::ay ← ++ (byte) mode_twoplanebitmap::ay
  (boolean~) mode_twoplanebitmap::$24 ← (byte) mode_twoplanebitmap::ay != (byte/word/signed word/dword/signed dword) 200
  if((boolean~) mode_twoplanebitmap::$24) goto mode_twoplanebitmap::@4
  to:mode_twoplanebitmap::@20
mode_twoplanebitmap::@20: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@19
  (byte*) mode_twoplanebitmap::gfxb ← (byte*) mode_twoplanebitmap::PLANEB
  (byte) mode_twoplanebitmap::by ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_twoplanebitmap::@8
mode_twoplanebitmap::@8: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@20 mode_twoplanebitmap::@21
  (byte) mode_twoplanebitmap::bx ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_twoplanebitmap::@9
mode_twoplanebitmap::@9: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@8 mode_twoplanebitmap::@9
  *((byte*) mode_twoplanebitmap::gfxb) ← (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte*) mode_twoplanebitmap::gfxb ← ++ (byte*) mode_twoplanebitmap::gfxb
  (byte) mode_twoplanebitmap::bx ← ++ (byte) mode_twoplanebitmap::bx
  (boolean~) mode_twoplanebitmap::$25 ← (byte) mode_twoplanebitmap::bx != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_twoplanebitmap::$25) goto mode_twoplanebitmap::@9
  to:mode_twoplanebitmap::@21
mode_twoplanebitmap::@21: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@9
  (byte) mode_twoplanebitmap::by ← ++ (byte) mode_twoplanebitmap::by
  (boolean~) mode_twoplanebitmap::$26 ← (byte) mode_twoplanebitmap::by != (byte/word/signed word/dword/signed dword) 200
  if((boolean~) mode_twoplanebitmap::$26) goto mode_twoplanebitmap::@8
  to:mode_twoplanebitmap::@22
mode_twoplanebitmap::@22: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@21
  to:mode_twoplanebitmap::@10
mode_twoplanebitmap::@10: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@13 mode_twoplanebitmap::@22
  if(true) goto mode_twoplanebitmap::@11
  to:mode_twoplanebitmap::@23
mode_twoplanebitmap::@11: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@10 mode_twoplanebitmap::@24
  (byte~) mode_twoplanebitmap::$27 ← call keyboard_key_pressed (byte) KEY_SPACE 
  (boolean~) mode_twoplanebitmap::$28 ← (byte~) mode_twoplanebitmap::$27 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_twoplanebitmap::$29 ← ! (boolean~) mode_twoplanebitmap::$28
  if((boolean~) mode_twoplanebitmap::$29) goto mode_twoplanebitmap::@13
  to:mode_twoplanebitmap::@25
mode_twoplanebitmap::@23: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@10
  to:mode_twoplanebitmap::@12
mode_twoplanebitmap::@12: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@23 mode_twoplanebitmap::@27
  to:mode_twoplanebitmap::@return
mode_twoplanebitmap::@24: scope:[mode_twoplanebitmap]  from
  to:mode_twoplanebitmap::@11
mode_twoplanebitmap::@13: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@11 mode_twoplanebitmap::@26
  to:mode_twoplanebitmap::@10
mode_twoplanebitmap::@25: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@11
  to:mode_twoplanebitmap::@return
mode_twoplanebitmap::@return: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@12 mode_twoplanebitmap::@25
  return 
  to:@return
mode_twoplanebitmap::@26: scope:[mode_twoplanebitmap]  from
  to:mode_twoplanebitmap::@13
mode_twoplanebitmap::@27: scope:[mode_twoplanebitmap]  from
  to:mode_twoplanebitmap::@12
@28: scope:[]  from @27
  to:@29
mode_sixsfred: scope:[mode_sixsfred]  from
  (byte*) mode_sixsfred::PLANEA ← ((byte*)) (word/signed word/dword/signed dword) 16384
  (byte*) mode_sixsfred::PLANEB ← ((byte*)) (word/signed word/dword/signed dword) 24576
  (byte*) mode_sixsfred::COLORS ← ((byte*)) (word/dword/signed dword) 32768
  (byte~) mode_sixsfred::$0 ← (byte) DTV_CONTROL_HIGHCOLOR_ON | (byte) DTV_CONTROL_LINEAR_ADDRESSING_ON
  *((byte*) DTV_CONTROL) ← (byte~) mode_sixsfred::$0
  (byte~) mode_sixsfred::$1 ← (byte) VIC_ECM | (byte) VIC_BMM
  (byte~) mode_sixsfred::$2 ← (byte~) mode_sixsfred::$1 | (byte) VIC_DEN
  (byte~) mode_sixsfred::$3 ← (byte~) mode_sixsfred::$2 | (byte) VIC_RSEL
  (byte/word/dword~) mode_sixsfred::$4 ← (byte~) mode_sixsfred::$3 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL) ← (byte/word/dword~) mode_sixsfred::$4
  (byte~) mode_sixsfred::$5 ← (byte) VIC_MCM | (byte) VIC_CSEL
  *((byte*) VIC_CONTROL2) ← (byte~) mode_sixsfred::$5
  (byte~) mode_sixsfred::$6 ← < (byte*) mode_sixsfred::PLANEA
  *((byte*) DTV_PLANEA_START_LO) ← (byte~) mode_sixsfred::$6
  (byte~) mode_sixsfred::$7 ← > (byte*) mode_sixsfred::PLANEA
  *((byte*) DTV_PLANEA_START_MI) ← (byte~) mode_sixsfred::$7
  *((byte*) DTV_PLANEA_START_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEA_STEP) ← (byte/signed byte/word/signed word/dword/signed dword) 1
  *((byte*) DTV_PLANEA_MODULO_LO) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEA_MODULO_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte~) mode_sixsfred::$8 ← < (byte*) mode_sixsfred::PLANEB
  *((byte*) DTV_PLANEB_START_LO) ← (byte~) mode_sixsfred::$8
  (byte~) mode_sixsfred::$9 ← > (byte*) mode_sixsfred::PLANEB
  *((byte*) DTV_PLANEB_START_MI) ← (byte~) mode_sixsfred::$9
  *((byte*) DTV_PLANEB_START_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_STEP) ← (byte/signed byte/word/signed word/dword/signed dword) 1
  *((byte*) DTV_PLANEB_MODULO_LO) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_MODULO_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*~) mode_sixsfred::$10 ← (byte*) mode_sixsfred::COLORS / (word/signed word/dword/signed dword) 1024
  (byte~) mode_sixsfred::$11 ← < (byte*~) mode_sixsfred::$10
  *((byte*) DTV_COLOR_BANK_LO) ← (byte~) mode_sixsfred::$11
  (byte*~) mode_sixsfred::$12 ← (byte*) mode_sixsfred::COLORS / (word/signed word/dword/signed dword) 1024
  (byte~) mode_sixsfred::$13 ← > (byte*~) mode_sixsfred::$12
  *((byte*) DTV_COLOR_BANK_HI) ← (byte~) mode_sixsfred::$13
  (byte) mode_sixsfred::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred::@1
mode_sixsfred::@1: scope:[mode_sixsfred]  from mode_sixsfred mode_sixsfred::@1
  *((byte*) DTV_PALETTE + (byte) mode_sixsfred::i) ← (byte) mode_sixsfred::i
  (byte) mode_sixsfred::i ← ++ (byte) mode_sixsfred::i
  (boolean~) mode_sixsfred::$14 ← (byte) mode_sixsfred::i != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_sixsfred::$14) goto mode_sixsfred::@1
  to:mode_sixsfred::@12
mode_sixsfred::@12: scope:[mode_sixsfred]  from mode_sixsfred::@1
  *((byte*) BORDERCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*) mode_sixsfred::col ← (byte*) mode_sixsfred::COLORS
  (byte) mode_sixsfred::cy ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred::@2
mode_sixsfred::@2: scope:[mode_sixsfred]  from mode_sixsfred::@12 mode_sixsfred::@13
  (byte) mode_sixsfred::cx ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred::@3
mode_sixsfred::@3: scope:[mode_sixsfred]  from mode_sixsfred::@2 mode_sixsfred::@3
  (byte~) mode_sixsfred::$15 ← (byte) mode_sixsfred::cx + (byte) mode_sixsfred::cy
  (byte~) mode_sixsfred::$16 ← (byte~) mode_sixsfred::$15 & (byte/signed byte/word/signed word/dword/signed dword) 15
  *((byte*) mode_sixsfred::col) ← (byte~) mode_sixsfred::$16
  (byte*) mode_sixsfred::col ← ++ (byte*) mode_sixsfred::col
  (byte) mode_sixsfred::cx ← ++ (byte) mode_sixsfred::cx
  (boolean~) mode_sixsfred::$17 ← (byte) mode_sixsfred::cx != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_sixsfred::$17) goto mode_sixsfred::@3
  to:mode_sixsfred::@13
mode_sixsfred::@13: scope:[mode_sixsfred]  from mode_sixsfred::@3
  (byte) mode_sixsfred::cy ← ++ (byte) mode_sixsfred::cy
  (boolean~) mode_sixsfred::$18 ← (byte) mode_sixsfred::cy != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_sixsfred::$18) goto mode_sixsfred::@2
  to:mode_sixsfred::@14
mode_sixsfred::@14: scope:[mode_sixsfred]  from mode_sixsfred::@13
  (byte*) mode_sixsfred::gfxa ← (byte*) mode_sixsfred::PLANEA
  (byte[]) mode_sixsfred::row_bitmask ← { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 85, (byte/word/signed word/dword/signed dword) 170, (byte/word/signed word/dword/signed dword) 255 }
  (byte) mode_sixsfred::ay ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred::@4
mode_sixsfred::@4: scope:[mode_sixsfred]  from mode_sixsfred::@14 mode_sixsfred::@15
  (byte) mode_sixsfred::ax ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred::@5
mode_sixsfred::@5: scope:[mode_sixsfred]  from mode_sixsfred::@4 mode_sixsfred::@5
  (byte~) mode_sixsfred::$19 ← (byte) mode_sixsfred::ay >> (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte~) mode_sixsfred::$20 ← (byte~) mode_sixsfred::$19 & (byte/signed byte/word/signed word/dword/signed dword) 3
  (byte) mode_sixsfred::row ← (byte~) mode_sixsfred::$20
  *((byte*) mode_sixsfred::gfxa) ← *((byte[]) mode_sixsfred::row_bitmask + (byte) mode_sixsfred::row)
  (byte*) mode_sixsfred::gfxa ← ++ (byte*) mode_sixsfred::gfxa
  (byte) mode_sixsfred::ax ← ++ (byte) mode_sixsfred::ax
  (boolean~) mode_sixsfred::$21 ← (byte) mode_sixsfred::ax != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_sixsfred::$21) goto mode_sixsfred::@5
  to:mode_sixsfred::@15
mode_sixsfred::@15: scope:[mode_sixsfred]  from mode_sixsfred::@5
  (byte) mode_sixsfred::ay ← ++ (byte) mode_sixsfred::ay
  (boolean~) mode_sixsfred::$22 ← (byte) mode_sixsfred::ay != (byte/word/signed word/dword/signed dword) 200
  if((boolean~) mode_sixsfred::$22) goto mode_sixsfred::@4
  to:mode_sixsfred::@16
mode_sixsfred::@16: scope:[mode_sixsfred]  from mode_sixsfred::@15
  (byte*) mode_sixsfred::gfxb ← (byte*) mode_sixsfred::PLANEB
  (byte) mode_sixsfred::by ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred::@6
mode_sixsfred::@6: scope:[mode_sixsfred]  from mode_sixsfred::@16 mode_sixsfred::@17
  (byte) mode_sixsfred::bx ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred::@7
mode_sixsfred::@7: scope:[mode_sixsfred]  from mode_sixsfred::@6 mode_sixsfred::@7
  *((byte*) mode_sixsfred::gfxb) ← (byte/signed byte/word/signed word/dword/signed dword) 27
  (byte*) mode_sixsfred::gfxb ← ++ (byte*) mode_sixsfred::gfxb
  (byte) mode_sixsfred::bx ← ++ (byte) mode_sixsfred::bx
  (boolean~) mode_sixsfred::$23 ← (byte) mode_sixsfred::bx != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_sixsfred::$23) goto mode_sixsfred::@7
  to:mode_sixsfred::@17
mode_sixsfred::@17: scope:[mode_sixsfred]  from mode_sixsfred::@7
  (byte) mode_sixsfred::by ← ++ (byte) mode_sixsfred::by
  (boolean~) mode_sixsfred::$24 ← (byte) mode_sixsfred::by != (byte/word/signed word/dword/signed dword) 200
  if((boolean~) mode_sixsfred::$24) goto mode_sixsfred::@6
  to:mode_sixsfred::@18
mode_sixsfred::@18: scope:[mode_sixsfred]  from mode_sixsfred::@17
  to:mode_sixsfred::@8
mode_sixsfred::@8: scope:[mode_sixsfred]  from mode_sixsfred::@11 mode_sixsfred::@18
  if(true) goto mode_sixsfred::@9
  to:mode_sixsfred::@19
mode_sixsfred::@9: scope:[mode_sixsfred]  from mode_sixsfred::@20 mode_sixsfred::@8
  (byte~) mode_sixsfred::$25 ← call keyboard_key_pressed (byte) KEY_SPACE 
  (boolean~) mode_sixsfred::$26 ← (byte~) mode_sixsfred::$25 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_sixsfred::$27 ← ! (boolean~) mode_sixsfred::$26
  if((boolean~) mode_sixsfred::$27) goto mode_sixsfred::@11
  to:mode_sixsfred::@21
mode_sixsfred::@19: scope:[mode_sixsfred]  from mode_sixsfred::@8
  to:mode_sixsfred::@10
mode_sixsfred::@10: scope:[mode_sixsfred]  from mode_sixsfred::@19 mode_sixsfred::@23
  to:mode_sixsfred::@return
mode_sixsfred::@20: scope:[mode_sixsfred]  from
  to:mode_sixsfred::@9
mode_sixsfred::@11: scope:[mode_sixsfred]  from mode_sixsfred::@22 mode_sixsfred::@9
  to:mode_sixsfred::@8
mode_sixsfred::@21: scope:[mode_sixsfred]  from mode_sixsfred::@9
  to:mode_sixsfred::@return
mode_sixsfred::@return: scope:[mode_sixsfred]  from mode_sixsfred::@10 mode_sixsfred::@21
  return 
  to:@return
mode_sixsfred::@22: scope:[mode_sixsfred]  from
  to:mode_sixsfred::@11
mode_sixsfred::@23: scope:[mode_sixsfred]  from
  to:mode_sixsfred::@10
@29: scope:[]  from @28
  to:@30
mode_sixsfred2: scope:[mode_sixsfred2]  from
  (byte*) mode_sixsfred2::PLANEA ← ((byte*)) (word/signed word/dword/signed dword) 16384
  (byte*) mode_sixsfred2::PLANEB ← ((byte*)) (word/signed word/dword/signed dword) 24576
  (byte*) mode_sixsfred2::COLORS ← ((byte*)) (word/dword/signed dword) 32768
  *((byte*) DTV_CONTROL) ← (byte) DTV_CONTROL_LINEAR_ADDRESSING_ON
  (byte~) mode_sixsfred2::$0 ← (byte) VIC_ECM | (byte) VIC_BMM
  (byte~) mode_sixsfred2::$1 ← (byte~) mode_sixsfred2::$0 | (byte) VIC_DEN
  (byte~) mode_sixsfred2::$2 ← (byte~) mode_sixsfred2::$1 | (byte) VIC_RSEL
  (byte/word/dword~) mode_sixsfred2::$3 ← (byte~) mode_sixsfred2::$2 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL) ← (byte/word/dword~) mode_sixsfred2::$3
  (byte~) mode_sixsfred2::$4 ← (byte) VIC_MCM | (byte) VIC_CSEL
  *((byte*) VIC_CONTROL2) ← (byte~) mode_sixsfred2::$4
  (byte~) mode_sixsfred2::$5 ← < (byte*) mode_sixsfred2::PLANEA
  *((byte*) DTV_PLANEA_START_LO) ← (byte~) mode_sixsfred2::$5
  (byte~) mode_sixsfred2::$6 ← > (byte*) mode_sixsfred2::PLANEA
  *((byte*) DTV_PLANEA_START_MI) ← (byte~) mode_sixsfred2::$6
  *((byte*) DTV_PLANEA_START_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEA_STEP) ← (byte/signed byte/word/signed word/dword/signed dword) 1
  *((byte*) DTV_PLANEA_MODULO_LO) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEA_MODULO_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte~) mode_sixsfred2::$7 ← < (byte*) mode_sixsfred2::PLANEB
  *((byte*) DTV_PLANEB_START_LO) ← (byte~) mode_sixsfred2::$7
  (byte~) mode_sixsfred2::$8 ← > (byte*) mode_sixsfred2::PLANEB
  *((byte*) DTV_PLANEB_START_MI) ← (byte~) mode_sixsfred2::$8
  *((byte*) DTV_PLANEB_START_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_STEP) ← (byte/signed byte/word/signed word/dword/signed dword) 1
  *((byte*) DTV_PLANEB_MODULO_LO) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_MODULO_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*~) mode_sixsfred2::$9 ← (byte*) mode_sixsfred2::COLORS / (word/signed word/dword/signed dword) 1024
  (byte~) mode_sixsfred2::$10 ← < (byte*~) mode_sixsfred2::$9
  *((byte*) DTV_COLOR_BANK_LO) ← (byte~) mode_sixsfred2::$10
  (byte*~) mode_sixsfred2::$11 ← (byte*) mode_sixsfred2::COLORS / (word/signed word/dword/signed dword) 1024
  (byte~) mode_sixsfred2::$12 ← > (byte*~) mode_sixsfred2::$11
  *((byte*) DTV_COLOR_BANK_HI) ← (byte~) mode_sixsfred2::$12
  (byte) mode_sixsfred2::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred2::@1
mode_sixsfred2::@1: scope:[mode_sixsfred2]  from mode_sixsfred2 mode_sixsfred2::@1
  *((byte*) DTV_PALETTE + (byte) mode_sixsfred2::i) ← (byte) mode_sixsfred2::i
  (byte) mode_sixsfred2::i ← ++ (byte) mode_sixsfred2::i
  (boolean~) mode_sixsfred2::$13 ← (byte) mode_sixsfred2::i != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_sixsfred2::$13) goto mode_sixsfred2::@1
  to:mode_sixsfred2::@12
mode_sixsfred2::@12: scope:[mode_sixsfred2]  from mode_sixsfred2::@1
  *((byte*) BORDERCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*) mode_sixsfred2::col ← (byte*) mode_sixsfred2::COLORS
  (byte) mode_sixsfred2::cy ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred2::@2
mode_sixsfred2::@2: scope:[mode_sixsfred2]  from mode_sixsfred2::@12 mode_sixsfred2::@13
  (byte) mode_sixsfred2::cx ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred2::@3
mode_sixsfred2::@3: scope:[mode_sixsfred2]  from mode_sixsfred2::@2 mode_sixsfred2::@3
  (byte~) mode_sixsfred2::$14 ← (byte) mode_sixsfred2::cx & (byte/signed byte/word/signed word/dword/signed dword) 3
  (byte~) mode_sixsfred2::$15 ← (byte~) mode_sixsfred2::$14 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_sixsfred2::$16 ← (byte) mode_sixsfred2::cy & (byte/signed byte/word/signed word/dword/signed dword) 3
  (byte~) mode_sixsfred2::$17 ← (byte~) mode_sixsfred2::$15 | (byte~) mode_sixsfred2::$16
  *((byte*) mode_sixsfred2::col) ← (byte~) mode_sixsfred2::$17
  (byte*) mode_sixsfred2::col ← ++ (byte*) mode_sixsfred2::col
  (byte) mode_sixsfred2::cx ← ++ (byte) mode_sixsfred2::cx
  (boolean~) mode_sixsfred2::$18 ← (byte) mode_sixsfred2::cx != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_sixsfred2::$18) goto mode_sixsfred2::@3
  to:mode_sixsfred2::@13
mode_sixsfred2::@13: scope:[mode_sixsfred2]  from mode_sixsfred2::@3
  (byte) mode_sixsfred2::cy ← ++ (byte) mode_sixsfred2::cy
  (boolean~) mode_sixsfred2::$19 ← (byte) mode_sixsfred2::cy != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_sixsfred2::$19) goto mode_sixsfred2::@2
  to:mode_sixsfred2::@14
mode_sixsfred2::@14: scope:[mode_sixsfred2]  from mode_sixsfred2::@13
  (byte*) mode_sixsfred2::gfxa ← (byte*) mode_sixsfred2::PLANEA
  (byte[]) mode_sixsfred2::row_bitmask ← { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 85, (byte/word/signed word/dword/signed dword) 170, (byte/word/signed word/dword/signed dword) 255 }
  (byte) mode_sixsfred2::ay ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred2::@4
mode_sixsfred2::@4: scope:[mode_sixsfred2]  from mode_sixsfred2::@14 mode_sixsfred2::@15
  (byte) mode_sixsfred2::ax ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred2::@5
mode_sixsfred2::@5: scope:[mode_sixsfred2]  from mode_sixsfred2::@4 mode_sixsfred2::@5
  (byte~) mode_sixsfred2::$20 ← (byte) mode_sixsfred2::ay >> (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte~) mode_sixsfred2::$21 ← (byte~) mode_sixsfred2::$20 & (byte/signed byte/word/signed word/dword/signed dword) 3
  (byte) mode_sixsfred2::row ← (byte~) mode_sixsfred2::$21
  *((byte*) mode_sixsfred2::gfxa) ← *((byte[]) mode_sixsfred2::row_bitmask + (byte) mode_sixsfred2::row)
  (byte*) mode_sixsfred2::gfxa ← ++ (byte*) mode_sixsfred2::gfxa
  (byte) mode_sixsfred2::ax ← ++ (byte) mode_sixsfred2::ax
  (boolean~) mode_sixsfred2::$22 ← (byte) mode_sixsfred2::ax != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_sixsfred2::$22) goto mode_sixsfred2::@5
  to:mode_sixsfred2::@15
mode_sixsfred2::@15: scope:[mode_sixsfred2]  from mode_sixsfred2::@5
  (byte) mode_sixsfred2::ay ← ++ (byte) mode_sixsfred2::ay
  (boolean~) mode_sixsfred2::$23 ← (byte) mode_sixsfred2::ay != (byte/word/signed word/dword/signed dword) 200
  if((boolean~) mode_sixsfred2::$23) goto mode_sixsfred2::@4
  to:mode_sixsfred2::@16
mode_sixsfred2::@16: scope:[mode_sixsfred2]  from mode_sixsfred2::@15
  (byte*) mode_sixsfred2::gfxb ← (byte*) mode_sixsfred2::PLANEB
  (byte) mode_sixsfred2::by ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred2::@6
mode_sixsfred2::@6: scope:[mode_sixsfred2]  from mode_sixsfred2::@16 mode_sixsfred2::@17
  (byte) mode_sixsfred2::bx ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred2::@7
mode_sixsfred2::@7: scope:[mode_sixsfred2]  from mode_sixsfred2::@6 mode_sixsfred2::@7
  *((byte*) mode_sixsfred2::gfxb) ← (byte/signed byte/word/signed word/dword/signed dword) 27
  (byte*) mode_sixsfred2::gfxb ← ++ (byte*) mode_sixsfred2::gfxb
  (byte) mode_sixsfred2::bx ← ++ (byte) mode_sixsfred2::bx
  (boolean~) mode_sixsfred2::$24 ← (byte) mode_sixsfred2::bx != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_sixsfred2::$24) goto mode_sixsfred2::@7
  to:mode_sixsfred2::@17
mode_sixsfred2::@17: scope:[mode_sixsfred2]  from mode_sixsfred2::@7
  (byte) mode_sixsfred2::by ← ++ (byte) mode_sixsfred2::by
  (boolean~) mode_sixsfred2::$25 ← (byte) mode_sixsfred2::by != (byte/word/signed word/dword/signed dword) 200
  if((boolean~) mode_sixsfred2::$25) goto mode_sixsfred2::@6
  to:mode_sixsfred2::@18
mode_sixsfred2::@18: scope:[mode_sixsfred2]  from mode_sixsfred2::@17
  to:mode_sixsfred2::@8
mode_sixsfred2::@8: scope:[mode_sixsfred2]  from mode_sixsfred2::@11 mode_sixsfred2::@18
  if(true) goto mode_sixsfred2::@9
  to:mode_sixsfred2::@19
mode_sixsfred2::@9: scope:[mode_sixsfred2]  from mode_sixsfred2::@20 mode_sixsfred2::@8
  (byte~) mode_sixsfred2::$26 ← call keyboard_key_pressed (byte) KEY_SPACE 
  (boolean~) mode_sixsfred2::$27 ← (byte~) mode_sixsfred2::$26 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_sixsfred2::$28 ← ! (boolean~) mode_sixsfred2::$27
  if((boolean~) mode_sixsfred2::$28) goto mode_sixsfred2::@11
  to:mode_sixsfred2::@21
mode_sixsfred2::@19: scope:[mode_sixsfred2]  from mode_sixsfred2::@8
  to:mode_sixsfred2::@10
mode_sixsfred2::@10: scope:[mode_sixsfred2]  from mode_sixsfred2::@19 mode_sixsfred2::@23
  to:mode_sixsfred2::@return
mode_sixsfred2::@20: scope:[mode_sixsfred2]  from
  to:mode_sixsfred2::@9
mode_sixsfred2::@11: scope:[mode_sixsfred2]  from mode_sixsfred2::@22 mode_sixsfred2::@9
  to:mode_sixsfred2::@8
mode_sixsfred2::@21: scope:[mode_sixsfred2]  from mode_sixsfred2::@9
  to:mode_sixsfred2::@return
mode_sixsfred2::@return: scope:[mode_sixsfred2]  from mode_sixsfred2::@10 mode_sixsfred2::@21
  return 
  to:@return
mode_sixsfred2::@22: scope:[mode_sixsfred2]  from
  to:mode_sixsfred2::@11
mode_sixsfred2::@23: scope:[mode_sixsfred2]  from
  to:mode_sixsfred2::@10
@30: scope:[]  from @29
  to:@31
mode_8bpppixelcell: scope:[mode_8bpppixelcell]  from
  (byte*) mode_8bpppixelcell::PLANEA ← ((byte*)) (word/signed word/dword/signed dword) 15360
  (byte*) mode_8bpppixelcell::PLANEB ← ((byte*)) (word/signed word/dword/signed dword) 16384
  (byte~) mode_8bpppixelcell::$0 ← (byte) DTV_CONTROL_HIGHCOLOR_ON | (byte) DTV_CONTROL_LINEAR_ADDRESSING_ON
  (byte~) mode_8bpppixelcell::$1 ← (byte~) mode_8bpppixelcell::$0 | (byte) DTV_CONTROL_CHUNKY_ON
  *((byte*) DTV_CONTROL) ← (byte~) mode_8bpppixelcell::$1
  (byte~) mode_8bpppixelcell::$2 ← (byte) VIC_ECM | (byte) VIC_DEN
  (byte~) mode_8bpppixelcell::$3 ← (byte~) mode_8bpppixelcell::$2 | (byte) VIC_RSEL
  (byte/word/dword~) mode_8bpppixelcell::$4 ← (byte~) mode_8bpppixelcell::$3 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL) ← (byte/word/dword~) mode_8bpppixelcell::$4
  (byte~) mode_8bpppixelcell::$5 ← (byte) VIC_MCM | (byte) VIC_CSEL
  *((byte*) VIC_CONTROL2) ← (byte~) mode_8bpppixelcell::$5
  (byte~) mode_8bpppixelcell::$6 ← < (byte*) mode_8bpppixelcell::PLANEA
  *((byte*) DTV_PLANEA_START_LO) ← (byte~) mode_8bpppixelcell::$6
  (byte~) mode_8bpppixelcell::$7 ← > (byte*) mode_8bpppixelcell::PLANEA
  *((byte*) DTV_PLANEA_START_MI) ← (byte~) mode_8bpppixelcell::$7
  *((byte*) DTV_PLANEA_START_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEA_STEP) ← (byte/signed byte/word/signed word/dword/signed dword) 1
  *((byte*) DTV_PLANEA_MODULO_LO) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEA_MODULO_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte~) mode_8bpppixelcell::$8 ← < (byte*) mode_8bpppixelcell::PLANEB
  *((byte*) DTV_PLANEB_START_LO) ← (byte~) mode_8bpppixelcell::$8
  (byte~) mode_8bpppixelcell::$9 ← > (byte*) mode_8bpppixelcell::PLANEB
  *((byte*) DTV_PLANEB_START_MI) ← (byte~) mode_8bpppixelcell::$9
  *((byte*) DTV_PLANEB_START_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_STEP) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_MODULO_LO) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_MODULO_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BORDERCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) mode_8bpppixelcell::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_8bpppixelcell::@1
mode_8bpppixelcell::@1: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell mode_8bpppixelcell::@1
  *((byte*) DTV_PALETTE + (byte) mode_8bpppixelcell::i) ← (byte) mode_8bpppixelcell::i
  (byte) mode_8bpppixelcell::i ← ++ (byte) mode_8bpppixelcell::i
  (boolean~) mode_8bpppixelcell::$10 ← (byte) mode_8bpppixelcell::i != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_8bpppixelcell::$10) goto mode_8bpppixelcell::@1
  to:mode_8bpppixelcell::@12
mode_8bpppixelcell::@12: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@1
  (byte*) mode_8bpppixelcell::gfxa ← (byte*) mode_8bpppixelcell::PLANEA
  (byte) mode_8bpppixelcell::ay ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_8bpppixelcell::@2
mode_8bpppixelcell::@2: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@12 mode_8bpppixelcell::@13
  (byte) mode_8bpppixelcell::ax ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_8bpppixelcell::@3
mode_8bpppixelcell::@3: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@2 mode_8bpppixelcell::@3
  (byte~) mode_8bpppixelcell::$11 ← (byte) mode_8bpppixelcell::ay & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_8bpppixelcell::$12 ← (byte~) mode_8bpppixelcell::$11 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_8bpppixelcell::$13 ← (byte) mode_8bpppixelcell::ax & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_8bpppixelcell::$14 ← (byte~) mode_8bpppixelcell::$12 | (byte~) mode_8bpppixelcell::$13
  *((byte*) mode_8bpppixelcell::gfxa) ← (byte~) mode_8bpppixelcell::$14
  (byte*) mode_8bpppixelcell::gfxa ← ++ (byte*) mode_8bpppixelcell::gfxa
  (byte) mode_8bpppixelcell::ax ← ++ (byte) mode_8bpppixelcell::ax
  (boolean~) mode_8bpppixelcell::$15 ← (byte) mode_8bpppixelcell::ax != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_8bpppixelcell::$15) goto mode_8bpppixelcell::@3
  to:mode_8bpppixelcell::@13
mode_8bpppixelcell::@13: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@3
  (byte) mode_8bpppixelcell::ay ← ++ (byte) mode_8bpppixelcell::ay
  (boolean~) mode_8bpppixelcell::$16 ← (byte) mode_8bpppixelcell::ay != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_8bpppixelcell::$16) goto mode_8bpppixelcell::@2
  to:mode_8bpppixelcell::@14
mode_8bpppixelcell::@14: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@13
  *((byte*) PROCPORT) ← (byte/signed byte/word/signed word/dword/signed dword) 50
  (byte*) mode_8bpppixelcell::CHARGEN ← ((byte*)) (word/dword/signed dword) 53248
  (byte*) mode_8bpppixelcell::gfxb ← (byte*) mode_8bpppixelcell::PLANEB
  (byte*) mode_8bpppixelcell::chargen ← (byte*) mode_8bpppixelcell::CHARGEN
  (byte) mode_8bpppixelcell::col ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) mode_8bpppixelcell::ch ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_8bpppixelcell::@4
mode_8bpppixelcell::@4: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@14 mode_8bpppixelcell::@17
  (byte) mode_8bpppixelcell::cr ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_8bpppixelcell::@5
mode_8bpppixelcell::@5: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@16 mode_8bpppixelcell::@4
  (byte) mode_8bpppixelcell::bits ← *((byte*) mode_8bpppixelcell::chargen)
  (byte*) mode_8bpppixelcell::chargen ← ++ (byte*) mode_8bpppixelcell::chargen
  (byte) mode_8bpppixelcell::cp ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_8bpppixelcell::@6
mode_8bpppixelcell::@6: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@5 mode_8bpppixelcell::@7
  (byte) mode_8bpppixelcell::c ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte~) mode_8bpppixelcell::$17 ← (byte) mode_8bpppixelcell::bits & (byte/word/signed word/dword/signed dword) 128
  (boolean~) mode_8bpppixelcell::$18 ← (byte~) mode_8bpppixelcell::$17 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_8bpppixelcell::$19 ← ! (boolean~) mode_8bpppixelcell::$18
  if((boolean~) mode_8bpppixelcell::$19) goto mode_8bpppixelcell::@7
  to:mode_8bpppixelcell::@15
mode_8bpppixelcell::@7: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@15 mode_8bpppixelcell::@6
  *((byte*) mode_8bpppixelcell::gfxb) ← (byte) mode_8bpppixelcell::c
  (byte*) mode_8bpppixelcell::gfxb ← ++ (byte*) mode_8bpppixelcell::gfxb
  (byte~) mode_8bpppixelcell::$20 ← (byte) mode_8bpppixelcell::bits << (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte) mode_8bpppixelcell::bits ← (byte~) mode_8bpppixelcell::$20
  (byte) mode_8bpppixelcell::col ← ++ (byte) mode_8bpppixelcell::col
  (byte) mode_8bpppixelcell::cp ← ++ (byte) mode_8bpppixelcell::cp
  (boolean~) mode_8bpppixelcell::$21 ← (byte) mode_8bpppixelcell::cp != (byte/signed byte/word/signed word/dword/signed dword) 8
  if((boolean~) mode_8bpppixelcell::$21) goto mode_8bpppixelcell::@6
  to:mode_8bpppixelcell::@16
mode_8bpppixelcell::@15: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@6
  (byte) mode_8bpppixelcell::c ← (byte) mode_8bpppixelcell::col
  to:mode_8bpppixelcell::@7
mode_8bpppixelcell::@16: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@7
  (byte) mode_8bpppixelcell::cr ← ++ (byte) mode_8bpppixelcell::cr
  (boolean~) mode_8bpppixelcell::$22 ← (byte) mode_8bpppixelcell::cr != (byte/signed byte/word/signed word/dword/signed dword) 8
  if((boolean~) mode_8bpppixelcell::$22) goto mode_8bpppixelcell::@5
  to:mode_8bpppixelcell::@17
mode_8bpppixelcell::@17: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@16
  (byte) mode_8bpppixelcell::ch ← ++ (byte) mode_8bpppixelcell::ch
  (boolean~) mode_8bpppixelcell::$23 ← (byte) mode_8bpppixelcell::ch != (byte/signed byte/word/signed word/dword/signed dword) 0
  if((boolean~) mode_8bpppixelcell::$23) goto mode_8bpppixelcell::@4
  to:mode_8bpppixelcell::@18
mode_8bpppixelcell::@18: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@17
  *((byte*) PROCPORT) ← (byte/signed byte/word/signed word/dword/signed dword) 55
  to:mode_8bpppixelcell::@8
mode_8bpppixelcell::@8: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@11 mode_8bpppixelcell::@18
  if(true) goto mode_8bpppixelcell::@9
  to:mode_8bpppixelcell::@19
mode_8bpppixelcell::@9: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@20 mode_8bpppixelcell::@8
  (byte~) mode_8bpppixelcell::$24 ← call keyboard_key_pressed (byte) KEY_SPACE 
  (boolean~) mode_8bpppixelcell::$25 ← (byte~) mode_8bpppixelcell::$24 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_8bpppixelcell::$26 ← ! (boolean~) mode_8bpppixelcell::$25
  if((boolean~) mode_8bpppixelcell::$26) goto mode_8bpppixelcell::@11
  to:mode_8bpppixelcell::@21
mode_8bpppixelcell::@19: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@8
  to:mode_8bpppixelcell::@10
mode_8bpppixelcell::@10: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@19 mode_8bpppixelcell::@23
  to:mode_8bpppixelcell::@return
mode_8bpppixelcell::@20: scope:[mode_8bpppixelcell]  from
  to:mode_8bpppixelcell::@9
mode_8bpppixelcell::@11: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@22 mode_8bpppixelcell::@9
  to:mode_8bpppixelcell::@8
mode_8bpppixelcell::@21: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@9
  to:mode_8bpppixelcell::@return
mode_8bpppixelcell::@return: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@10 mode_8bpppixelcell::@21
  return 
  to:@return
mode_8bpppixelcell::@22: scope:[mode_8bpppixelcell]  from
  to:mode_8bpppixelcell::@11
mode_8bpppixelcell::@23: scope:[mode_8bpppixelcell]  from
  to:mode_8bpppixelcell::@10
@31: scope:[]  from @30
  to:@32
mode_8bppchunkybmm: scope:[mode_8bppchunkybmm]  from
  (dword) mode_8bppchunkybmm::PLANEB ← (dword/signed dword) 131072
  (byte~) mode_8bppchunkybmm::$0 ← (byte) DTV_CONTROL_HIGHCOLOR_ON | (byte) DTV_CONTROL_LINEAR_ADDRESSING_ON
  (byte~) mode_8bppchunkybmm::$1 ← (byte~) mode_8bppchunkybmm::$0 | (byte) DTV_CONTROL_CHUNKY_ON
  (byte~) mode_8bppchunkybmm::$2 ← (byte~) mode_8bppchunkybmm::$1 | (byte) DTV_CONTROL_COLORRAM_OFF
  *((byte*) DTV_CONTROL) ← (byte~) mode_8bppchunkybmm::$2
  (byte~) mode_8bppchunkybmm::$3 ← (byte) VIC_ECM | (byte) VIC_DEN
  (byte~) mode_8bppchunkybmm::$4 ← (byte~) mode_8bppchunkybmm::$3 | (byte) VIC_RSEL
  (byte/word/dword~) mode_8bppchunkybmm::$5 ← (byte~) mode_8bppchunkybmm::$4 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL) ← (byte/word/dword~) mode_8bppchunkybmm::$5
  (byte~) mode_8bppchunkybmm::$6 ← (byte) VIC_MCM | (byte) VIC_CSEL
  *((byte*) VIC_CONTROL2) ← (byte~) mode_8bppchunkybmm::$6
  (word~) mode_8bppchunkybmm::$7 ← < (dword) mode_8bppchunkybmm::PLANEB
  (byte~) mode_8bppchunkybmm::$8 ← < (word~) mode_8bppchunkybmm::$7
  *((byte*) DTV_PLANEB_START_LO) ← (byte~) mode_8bppchunkybmm::$8
  (word~) mode_8bppchunkybmm::$9 ← < (dword) mode_8bppchunkybmm::PLANEB
  (byte~) mode_8bppchunkybmm::$10 ← > (word~) mode_8bppchunkybmm::$9
  *((byte*) DTV_PLANEB_START_MI) ← (byte~) mode_8bppchunkybmm::$10
  (word~) mode_8bppchunkybmm::$11 ← > (dword) mode_8bppchunkybmm::PLANEB
  (byte~) mode_8bppchunkybmm::$12 ← < (word~) mode_8bppchunkybmm::$11
  *((byte*) DTV_PLANEB_START_HI) ← (byte~) mode_8bppchunkybmm::$12
  *((byte*) DTV_PLANEB_STEP) ← (byte/signed byte/word/signed word/dword/signed dword) 8
  *((byte*) DTV_PLANEB_MODULO_LO) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_MODULO_HI) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BORDERCOL) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) mode_8bppchunkybmm::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_8bppchunkybmm::@1
mode_8bppchunkybmm::@1: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm mode_8bppchunkybmm::@1
  *((byte*) DTV_PALETTE + (byte) mode_8bppchunkybmm::i) ← (byte) mode_8bppchunkybmm::i
  (byte) mode_8bppchunkybmm::i ← ++ (byte) mode_8bppchunkybmm::i
  (boolean~) mode_8bppchunkybmm::$13 ← (byte) mode_8bppchunkybmm::i != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_8bppchunkybmm::$13) goto mode_8bppchunkybmm::@1
  to:mode_8bppchunkybmm::@9
mode_8bppchunkybmm::@9: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@1
  (dword~) mode_8bppchunkybmm::$14 ← (dword) mode_8bppchunkybmm::PLANEB / (word/signed word/dword/signed dword) 16384
  (byte~) mode_8bppchunkybmm::$15 ← ((byte)) (dword~) mode_8bppchunkybmm::$14
  (byte) mode_8bppchunkybmm::gfxbCpuBank ← (byte~) mode_8bppchunkybmm::$15
  (void~) mode_8bppchunkybmm::$16 ← call dtvSetCpuBankSegment1 (byte) mode_8bppchunkybmm::gfxbCpuBank 
  (byte) mode_8bppchunkybmm::gfxbCpuBank ← ++ (byte) mode_8bppchunkybmm::gfxbCpuBank
  (byte*) mode_8bppchunkybmm::gfxb ← ((byte*)) (word/signed word/dword/signed dword) 16384
  (byte) mode_8bppchunkybmm::y ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_8bppchunkybmm::@2
mode_8bppchunkybmm::@2: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@11 mode_8bppchunkybmm::@9
  (word) mode_8bppchunkybmm::x ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_8bppchunkybmm::@3
mode_8bppchunkybmm::@3: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@2 mode_8bppchunkybmm::@4
  (boolean~) mode_8bppchunkybmm::$17 ← (byte*) mode_8bppchunkybmm::gfxb == (word/dword/signed dword) 32768
  (boolean~) mode_8bppchunkybmm::$18 ← ! (boolean~) mode_8bppchunkybmm::$17
  if((boolean~) mode_8bppchunkybmm::$18) goto mode_8bppchunkybmm::@4
  to:mode_8bppchunkybmm::@10
mode_8bppchunkybmm::@4: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@10 mode_8bppchunkybmm::@3
  (word~) mode_8bppchunkybmm::$20 ← (word) mode_8bppchunkybmm::x + (byte) mode_8bppchunkybmm::y
  (byte~) mode_8bppchunkybmm::$21 ← ((byte)) (word~) mode_8bppchunkybmm::$20
  (byte) mode_8bppchunkybmm::c ← (byte~) mode_8bppchunkybmm::$21
  *((byte*) mode_8bppchunkybmm::gfxb) ← (byte) mode_8bppchunkybmm::c
  (byte*) mode_8bppchunkybmm::gfxb ← ++ (byte*) mode_8bppchunkybmm::gfxb
  (word) mode_8bppchunkybmm::x ← ++ (word) mode_8bppchunkybmm::x
  (boolean~) mode_8bppchunkybmm::$22 ← (word) mode_8bppchunkybmm::x != (word/signed word/dword/signed dword) 320
  if((boolean~) mode_8bppchunkybmm::$22) goto mode_8bppchunkybmm::@3
  to:mode_8bppchunkybmm::@11
mode_8bppchunkybmm::@10: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@3
  (void~) mode_8bppchunkybmm::$19 ← call dtvSetCpuBankSegment1 (byte) mode_8bppchunkybmm::gfxbCpuBank 
  (byte) mode_8bppchunkybmm::gfxbCpuBank ← ++ (byte) mode_8bppchunkybmm::gfxbCpuBank
  (byte*) mode_8bppchunkybmm::gfxb ← ((byte*)) (word/signed word/dword/signed dword) 16384
  to:mode_8bppchunkybmm::@4
mode_8bppchunkybmm::@11: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@4
  (byte) mode_8bppchunkybmm::y ← ++ (byte) mode_8bppchunkybmm::y
  (boolean~) mode_8bppchunkybmm::$23 ← (byte) mode_8bppchunkybmm::y != (byte/word/signed word/dword/signed dword) 200
  if((boolean~) mode_8bppchunkybmm::$23) goto mode_8bppchunkybmm::@2
  to:mode_8bppchunkybmm::@12
mode_8bppchunkybmm::@12: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@11
  (byte/signed byte/word/signed word/dword/signed dword~) mode_8bppchunkybmm::$24 ← (word/signed word/dword/signed dword) 16384 / (word/signed word/dword/signed dword) 16384
  (byte~) mode_8bppchunkybmm::$25 ← ((byte)) (byte/signed byte/word/signed word/dword/signed dword~) mode_8bppchunkybmm::$24
  (void~) mode_8bppchunkybmm::$26 ← call dtvSetCpuBankSegment1 (byte~) mode_8bppchunkybmm::$25 
  to:mode_8bppchunkybmm::@5
mode_8bppchunkybmm::@5: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@12 mode_8bppchunkybmm::@8
  if(true) goto mode_8bppchunkybmm::@6
  to:mode_8bppchunkybmm::@13
mode_8bppchunkybmm::@6: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@14 mode_8bppchunkybmm::@5
  (byte~) mode_8bppchunkybmm::$27 ← call keyboard_key_pressed (byte) KEY_SPACE 
  (boolean~) mode_8bppchunkybmm::$28 ← (byte~) mode_8bppchunkybmm::$27 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_8bppchunkybmm::$29 ← ! (boolean~) mode_8bppchunkybmm::$28
  if((boolean~) mode_8bppchunkybmm::$29) goto mode_8bppchunkybmm::@8
  to:mode_8bppchunkybmm::@15
mode_8bppchunkybmm::@13: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@5
  to:mode_8bppchunkybmm::@7
mode_8bppchunkybmm::@7: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@13 mode_8bppchunkybmm::@17
  to:mode_8bppchunkybmm::@return
mode_8bppchunkybmm::@14: scope:[mode_8bppchunkybmm]  from
  to:mode_8bppchunkybmm::@6
mode_8bppchunkybmm::@8: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@16 mode_8bppchunkybmm::@6
  to:mode_8bppchunkybmm::@5
mode_8bppchunkybmm::@15: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@6
  to:mode_8bppchunkybmm::@return
mode_8bppchunkybmm::@return: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@15 mode_8bppchunkybmm::@7
  return 
  to:@return
mode_8bppchunkybmm::@16: scope:[mode_8bppchunkybmm]  from
  to:mode_8bppchunkybmm::@8
mode_8bppchunkybmm::@17: scope:[mode_8bppchunkybmm]  from
  to:mode_8bppchunkybmm::@7
@32: scope:[]  from @31
  call main 
  to:@end
@end: scope:[]  from @32

Removing unused procedure print_str_ln
Removing unused procedure print_str_at
Removing unused procedure print_sword
Removing unused procedure print_sbyte
Removing unused procedure print_sdword
Removing unused procedure keyboard_init
Removing unused procedure keyboard_get_keycode
Removing unused procedure print_str
Removing unused procedure print_dword
Removing unused procedure print_word
Removing unused procedure print_byte
Removing unused procedure print_char
Eliminating unused variable (byte*) CHARGEN and assignment [1] (byte*) CHARGEN ← ((byte*)) (word/dword/signed dword) 53248
Eliminating unused variable (byte*) SPRITES_XPOS and assignment [2] (byte*) SPRITES_XPOS ← ((byte*)) (word/dword/signed dword) 53248
Eliminating unused variable (byte*) SPRITES_YPOS and assignment [3] (byte*) SPRITES_YPOS ← ((byte*)) (word/dword/signed dword) 53249
Eliminating unused variable (byte*) SPRITES_XMSB and assignment [4] (byte*) SPRITES_XMSB ← ((byte*)) (word/dword/signed dword) 53264
Eliminating unused variable (byte*) RASTER and assignment [5] (byte*) RASTER ← ((byte*)) (word/dword/signed dword) 53266
Eliminating unused variable (byte*) SPRITES_ENABLE and assignment [6] (byte*) SPRITES_ENABLE ← ((byte*)) (word/dword/signed dword) 53269
Eliminating unused variable (byte*) SPRITES_EXPAND_Y and assignment [7] (byte*) SPRITES_EXPAND_Y ← ((byte*)) (word/dword/signed dword) 53271
Eliminating unused variable (byte*) SPRITES_PRIORITY and assignment [8] (byte*) SPRITES_PRIORITY ← ((byte*)) (word/dword/signed dword) 53275
Eliminating unused variable (byte*) SPRITES_MC and assignment [9] (byte*) SPRITES_MC ← ((byte*)) (word/dword/signed dword) 53276
Eliminating unused variable (byte*) SPRITES_EXPAND_X and assignment [10] (byte*) SPRITES_EXPAND_X ← ((byte*)) (word/dword/signed dword) 53277
Eliminating unused variable (byte*) SPRITES_MC1 and assignment [17] (byte*) SPRITES_MC1 ← ((byte*)) (word/dword/signed dword) 53285
Eliminating unused variable (byte*) SPRITES_MC2 and assignment [18] (byte*) SPRITES_MC2 ← ((byte*)) (word/dword/signed dword) 53286
Eliminating unused variable (byte*) SPRITES_COLS and assignment [19] (byte*) SPRITES_COLS ← ((byte*)) (word/dword/signed dword) 53287
Eliminating unused variable (byte*) D011 and assignment [21] (byte*) D011 ← ((byte*)) (word/dword/signed dword) 53265
Eliminating unused variable (byte) VIC_RST8 and assignment [22] (byte) VIC_RST8 ← (byte/word/signed word/dword/signed dword) 128
Eliminating unused variable (byte*) D016 and assignment [28] (byte*) D016 ← ((byte*)) (word/dword/signed dword) 53270
Eliminating unused variable (byte*) D018 and assignment [31] (byte*) D018 ← ((byte*)) (word/dword/signed dword) 53272
Eliminating unused variable (byte*) CIA1_PORT_A_DDR and assignment [36] (byte*) CIA1_PORT_A_DDR ← ((byte*)) (word/dword/signed dword) 56322
Eliminating unused variable (byte*) CIA1_PORT_B_DDR and assignment [37] (byte*) CIA1_PORT_B_DDR ← ((byte*)) (word/dword/signed dword) 56323
Eliminating unused variable (byte*) CIA2_PORT_B and assignment [39] (byte*) CIA2_PORT_B ← ((byte*)) (word/dword/signed dword) 56577
Eliminating unused variable (byte*) CIA2_PORT_B_DDR and assignment [41] (byte*) CIA2_PORT_B_DDR ← ((byte*)) (word/dword/signed dword) 56579
Eliminating unused variable (byte) WHITE and assignment [43] (byte) WHITE ← (byte/signed byte/word/signed word/dword/signed dword) 1
Eliminating unused variable (byte) RED and assignment [44] (byte) RED ← (byte/signed byte/word/signed word/dword/signed dword) 2
Eliminating unused variable (byte) CYAN and assignment [45] (byte) CYAN ← (byte/signed byte/word/signed word/dword/signed dword) 3
Eliminating unused variable (byte) PURPLE and assignment [46] (byte) PURPLE ← (byte/signed byte/word/signed word/dword/signed dword) 4
Eliminating unused variable (byte) YELLOW and assignment [49] (byte) YELLOW ← (byte/signed byte/word/signed word/dword/signed dword) 7
Eliminating unused variable (byte) ORANGE and assignment [50] (byte) ORANGE ← (byte/signed byte/word/signed word/dword/signed dword) 8
Eliminating unused variable (byte) BROWN and assignment [51] (byte) BROWN ← (byte/signed byte/word/signed word/dword/signed dword) 9
Eliminating unused variable (byte) PINK and assignment [52] (byte) PINK ← (byte/signed byte/word/signed word/dword/signed dword) 10
Eliminating unused variable (byte) DARK_GREY and assignment [53] (byte) DARK_GREY ← (byte/signed byte/word/signed word/dword/signed dword) 11
Eliminating unused variable (byte) GREY and assignment [54] (byte) GREY ← (byte/signed byte/word/signed word/dword/signed dword) 12
Eliminating unused variable (byte) LIGHT_BLUE and assignment [56] (byte) LIGHT_BLUE ← (byte/signed byte/word/signed word/dword/signed dword) 14
Eliminating unused variable (byte) LIGHT_GREY and assignment [57] (byte) LIGHT_GREY ← (byte/signed byte/word/signed word/dword/signed dword) 15
Eliminating unused variable (byte) DTV_FEATURE_DISABLE_TIL_RESET and assignment [60] (byte) DTV_FEATURE_DISABLE_TIL_RESET ← (byte/signed byte/word/signed word/dword/signed dword) 2
Eliminating unused variable (byte) DTV_CONTROL_BORDER_OFF and assignment [63] (byte) DTV_CONTROL_BORDER_OFF ← (byte/signed byte/word/signed word/dword/signed dword) 2
Eliminating unused variable (byte) DTV_CONTROL_OVERSCAN_ON and assignment [65] (byte) DTV_CONTROL_OVERSCAN_ON ← (byte/signed byte/word/signed word/dword/signed dword) 8
Eliminating unused variable (byte) DTV_CONTROL_BADLINE_OFF and assignment [67] (byte) DTV_CONTROL_BADLINE_OFF ← (byte/signed byte/word/signed word/dword/signed dword) 32
Eliminating unused variable (byte*) DTV_SPRITE_BANK and assignment [83] (byte*) DTV_SPRITE_BANK ← ((byte*)) (word/dword/signed dword) 53325
Eliminating unused variable (byte*) DTV_GRAPHICS_HICOL_BANK and assignment [88] (byte*) DTV_GRAPHICS_HICOL_BANK ← ((byte*)) (word/dword/signed dword) 53310
Eliminating unused variable - keeping the call (void~) print_str_lines::$4
Eliminating unused variable (byte) KEY_DEL and assignment [128] (byte) KEY_DEL ← (byte/signed byte/word/signed word/dword/signed dword) 0
Eliminating unused variable (byte) KEY_RETURN and assignment [129] (byte) KEY_RETURN ← (byte/signed byte/word/signed word/dword/signed dword) 1
Eliminating unused variable (byte) KEY_CRSR_RIGHT and assignment [130] (byte) KEY_CRSR_RIGHT ← (byte/signed byte/word/signed word/dword/signed dword) 2
Eliminating unused variable (byte) KEY_F7 and assignment [131] (byte) KEY_F7 ← (byte/signed byte/word/signed word/dword/signed dword) 3
Eliminating unused variable (byte) KEY_F1 and assignment [132] (byte) KEY_F1 ← (byte/signed byte/word/signed word/dword/signed dword) 4
Eliminating unused variable (byte) KEY_F3 and assignment [133] (byte) KEY_F3 ← (byte/signed byte/word/signed word/dword/signed dword) 5
Eliminating unused variable (byte) KEY_F5 and assignment [134] (byte) KEY_F5 ← (byte/signed byte/word/signed word/dword/signed dword) 6
Eliminating unused variable (byte) KEY_CRSR_DOWN and assignment [135] (byte) KEY_CRSR_DOWN ← (byte/signed byte/word/signed word/dword/signed dword) 7
Eliminating unused variable (byte) KEY_LSHIFT and assignment [143] (byte) KEY_LSHIFT ← (byte/signed byte/word/signed word/dword/signed dword) 15
Eliminating unused variable (byte) KEY_HOME and assignment [179] (byte) KEY_HOME ← (byte/signed byte/word/signed word/dword/signed dword) 51
Eliminating unused variable (byte) KEY_RSHIFT and assignment [180] (byte) KEY_RSHIFT ← (byte/signed byte/word/signed word/dword/signed dword) 52
Eliminating unused variable (byte) KEY_CTRL and assignment [186] (byte) KEY_CTRL ← (byte/signed byte/word/signed word/dword/signed dword) 58
Eliminating unused variable (byte) KEY_COMMODORE and assignment [189] (byte) KEY_COMMODORE ← (byte/signed byte/word/signed word/dword/signed dword) 61
Eliminating unused variable (byte) KEY_RUNSTOP and assignment [191] (byte) KEY_RUNSTOP ← (byte/signed byte/word/signed word/dword/signed dword) 63
Eliminating unused variable (byte[]) keyboard_char_keycodes and assignment [192] (byte[]) keyboard_char_keycodes ← { (byte) KEY_AT, (byte) KEY_A, (byte) KEY_B, (byte) KEY_C, (byte) KEY_D, (byte) KEY_E, (byte) KEY_F, (byte) KEY_G, (byte) KEY_H, (byte) KEY_I, (byte) KEY_J, (byte) KEY_K, (byte) KEY_L, (byte) KEY_M, (byte) KEY_N, (byte) KEY_O, (byte) KEY_P, (byte) KEY_Q, (byte) KEY_R, (byte) KEY_S, (byte) KEY_T, (byte) KEY_U, (byte) KEY_V, (byte) KEY_W, (byte) KEY_X, (byte) KEY_Y, (byte) KEY_Z, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte) KEY_POUND, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte) KEY_ARROW_UP, (byte) KEY_ARROW_LEFT, (byte) KEY_SPACE, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte) KEY_ASTERISK, (byte) KEY_PLUS, (byte) KEY_COMMA, (byte) KEY_MINUS, (byte) KEY_DOT, (byte) KEY_SLASH, (byte) KEY_0, (byte) KEY_1, (byte) KEY_2, (byte) KEY_3, (byte) KEY_4, (byte) KEY_5, (byte) KEY_6, (byte) KEY_7, (byte) KEY_8, (byte) KEY_9, (byte) KEY_COLON, (byte) KEY_SEMICOLON, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte) KEY_EQUALS, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63 }
Eliminating unused variable - keeping the call (void~) main::$0
Eliminating unused variable - keeping the call (void~) menu::$26
Eliminating unused variable - keeping the call (void~) menu::$27
Eliminating unused variable - keeping the call (void~) menu::$28
Eliminating unused variable - keeping the call (void~) menu::$32
Eliminating unused variable - keeping the call (void~) menu::$36
Eliminating unused variable - keeping the call (void~) menu::$40
Eliminating unused variable - keeping the call (void~) menu::$44
Eliminating unused variable - keeping the call (void~) menu::$48
Eliminating unused variable - keeping the call (void~) menu::$52
Eliminating unused variable - keeping the call (void~) menu::$56
Eliminating unused variable - keeping the call (void~) menu::$60
Eliminating unused variable - keeping the call (void~) menu::$64
Eliminating unused variable - keeping the call (void~) menu::$68
Eliminating unused variable - keeping the call (void~) menu::$72
Eliminating unused variable - keeping the call (void~) mode_8bppchunkybmm::$16
Eliminating unused variable - keeping the call (void~) mode_8bppchunkybmm::$19
Eliminating unused variable - keeping the call (void~) mode_8bppchunkybmm::$26
Eliminating unused variable (byte) KEY_W and assignment [90] (byte) KEY_W ← (byte/signed byte/word/signed word/dword/signed dword) 9
Eliminating unused variable (byte) KEY_4 and assignment [92] (byte) KEY_4 ← (byte/signed byte/word/signed word/dword/signed dword) 11
Eliminating unused variable (byte) KEY_Z and assignment [93] (byte) KEY_Z ← (byte/signed byte/word/signed word/dword/signed dword) 12
Eliminating unused variable (byte) KEY_S and assignment [94] (byte) KEY_S ← (byte/signed byte/word/signed word/dword/signed dword) 13
Eliminating unused variable (byte) KEY_5 and assignment [96] (byte) KEY_5 ← (byte/signed byte/word/signed word/dword/signed dword) 16
Eliminating unused variable (byte) KEY_R and assignment [97] (byte) KEY_R ← (byte/signed byte/word/signed word/dword/signed dword) 17
Eliminating unused variable (byte) KEY_F and assignment [101] (byte) KEY_F ← (byte/signed byte/word/signed word/dword/signed dword) 21
Eliminating unused variable (byte) KEY_T and assignment [102] (byte) KEY_T ← (byte/signed byte/word/signed word/dword/signed dword) 22
Eliminating unused variable (byte) KEY_X and assignment [103] (byte) KEY_X ← (byte/signed byte/word/signed word/dword/signed dword) 23
Eliminating unused variable (byte) KEY_Y and assignment [105] (byte) KEY_Y ← (byte/signed byte/word/signed word/dword/signed dword) 25
Eliminating unused variable (byte) KEY_G and assignment [106] (byte) KEY_G ← (byte/signed byte/word/signed word/dword/signed dword) 26
Eliminating unused variable (byte) KEY_H and assignment [109] (byte) KEY_H ← (byte/signed byte/word/signed word/dword/signed dword) 29
Eliminating unused variable (byte) KEY_U and assignment [110] (byte) KEY_U ← (byte/signed byte/word/signed word/dword/signed dword) 30
Eliminating unused variable (byte) KEY_V and assignment [111] (byte) KEY_V ← (byte/signed byte/word/signed word/dword/signed dword) 31
Eliminating unused variable (byte) KEY_9 and assignment [112] (byte) KEY_9 ← (byte/signed byte/word/signed word/dword/signed dword) 32
Eliminating unused variable (byte) KEY_I and assignment [113] (byte) KEY_I ← (byte/signed byte/word/signed word/dword/signed dword) 33
Eliminating unused variable (byte) KEY_J and assignment [114] (byte) KEY_J ← (byte/signed byte/word/signed word/dword/signed dword) 34
Eliminating unused variable (byte) KEY_0 and assignment [115] (byte) KEY_0 ← (byte/signed byte/word/signed word/dword/signed dword) 35
Eliminating unused variable (byte) KEY_M and assignment [116] (byte) KEY_M ← (byte/signed byte/word/signed word/dword/signed dword) 36
Eliminating unused variable (byte) KEY_K and assignment [117] (byte) KEY_K ← (byte/signed byte/word/signed word/dword/signed dword) 37
Eliminating unused variable (byte) KEY_O and assignment [118] (byte) KEY_O ← (byte/signed byte/word/signed word/dword/signed dword) 38
Eliminating unused variable (byte) KEY_N and assignment [119] (byte) KEY_N ← (byte/signed byte/word/signed word/dword/signed dword) 39
Eliminating unused variable (byte) KEY_PLUS and assignment [120] (byte) KEY_PLUS ← (byte/signed byte/word/signed word/dword/signed dword) 40
Eliminating unused variable (byte) KEY_P and assignment [121] (byte) KEY_P ← (byte/signed byte/word/signed word/dword/signed dword) 41
Eliminating unused variable (byte) KEY_L and assignment [122] (byte) KEY_L ← (byte/signed byte/word/signed word/dword/signed dword) 42
Eliminating unused variable (byte) KEY_MINUS and assignment [123] (byte) KEY_MINUS ← (byte/signed byte/word/signed word/dword/signed dword) 43
Eliminating unused variable (byte) KEY_DOT and assignment [124] (byte) KEY_DOT ← (byte/signed byte/word/signed word/dword/signed dword) 44
Eliminating unused variable (byte) KEY_COLON and assignment [125] (byte) KEY_COLON ← (byte/signed byte/word/signed word/dword/signed dword) 45
Eliminating unused variable (byte) KEY_AT and assignment [126] (byte) KEY_AT ← (byte/signed byte/word/signed word/dword/signed dword) 46
Eliminating unused variable (byte) KEY_COMMA and assignment [127] (byte) KEY_COMMA ← (byte/signed byte/word/signed word/dword/signed dword) 47
Eliminating unused variable (byte) KEY_POUND and assignment [128] (byte) KEY_POUND ← (byte/signed byte/word/signed word/dword/signed dword) 48
Eliminating unused variable (byte) KEY_ASTERISK and assignment [129] (byte) KEY_ASTERISK ← (byte/signed byte/word/signed word/dword/signed dword) 49
Eliminating unused variable (byte) KEY_SEMICOLON and assignment [130] (byte) KEY_SEMICOLON ← (byte/signed byte/word/signed word/dword/signed dword) 50
Eliminating unused variable (byte) KEY_EQUALS and assignment [131] (byte) KEY_EQUALS ← (byte/signed byte/word/signed word/dword/signed dword) 53
Eliminating unused variable (byte) KEY_ARROW_UP and assignment [132] (byte) KEY_ARROW_UP ← (byte/signed byte/word/signed word/dword/signed dword) 54
Eliminating unused variable (byte) KEY_SLASH and assignment [133] (byte) KEY_SLASH ← (byte/signed byte/word/signed word/dword/signed dword) 55
Eliminating unused variable (byte) KEY_ARROW_LEFT and assignment [135] (byte) KEY_ARROW_LEFT ← (byte/signed byte/word/signed word/dword/signed dword) 57
Eliminating unused variable (byte) KEY_Q and assignment [138] (byte) KEY_Q ← (byte/signed byte/word/signed word/dword/signed dword) 62
Creating constant string variable for inline (const string) $20 "C64DTV Graphics Modes            CCLHBME@"
Creating constant string variable for inline (const string) $21 "                                 OHIIMCC@"
Creating constant string variable for inline (const string) $22 "                                 LUNCMMM@"
Creating constant string variable for inline (const string) $23 "----------------------------------------@"
Creating constant string variable for inline (const string) $24 "1. Standard Char             (V) 0000000@"
Creating constant string variable for inline (const string) $25 "2. Extended Color Char       (V) 0000001@"
Creating constant string variable for inline (const string) $26 "3. Multicolor Char           (V) 0000010@"
Creating constant string variable for inline (const string) $27 "4. Standard Bitmap           (V) 0000100@"
Creating constant string variable for inline (const string) $28 "5. Multicolor Bitmap         (V) 0000110@"
Creating constant string variable for inline (const string) $29 "6. High Color Standard Char  (H) 0001000@"
Creating constant string variable for inline (const string) $30 "7. High Extended Color Char  (H) 0001001@"
Creating constant string variable for inline (const string) $31 "8. High Multicolor Char      (H) 0001010@"
Creating constant string variable for inline (const string) $32 "9. High Multicolor Bitmap    (H) 0001110@"
Creating constant string variable for inline (const string) $33 "a. Sixs Fred 2               (D) 0010111@"
Creating constant string variable for inline (const string) $34 "b. Two Plane Bitmap          (D) 0011101@"
Creating constant string variable for inline (const string) $35 "c. Sixs Fred (2 Plane MC BM) (D) 0011111@"
Creating constant string variable for inline (const string) $36 "d. 8bpp Pixel Cell           (D) 0111011@"
Creating constant string variable for inline (const string) $37 "e. Chunky 8bpp Bitmap        (D) 1111011@"
Creating constant string variable for inline (const string) $38 "----------------------------------------@"
Creating constant string variable for inline (const string) $39 "    (V) vicII (H) vicII+hicol (D) c64dtv@"
Creating constant string variable for inline (const string) $40 "@"
Removing empty block print_str_lines::@6
Removing empty block print_str_lines::@3
Removing empty block print_str_lines::@7
Removing empty block print_str_lines::@10
Removing empty block @2
Removing empty block @3
Removing empty block @4
Removing empty block @5
Removing empty block @6
Removing empty block @7
Removing empty block @8
Removing empty block @9
Removing empty block @10
Removing empty block @11
Removing empty block @12
Removing empty block @13
Removing empty block @14
Removing empty block @16
Removing empty block keyboard_matrix_read::@1
Removing empty block @17
Removing empty block keyboard_key_pressed::@1
Removing empty block @18
Removing empty block @19
Removing empty block main::@4
Removing empty block main::@3
Removing empty block main::@5
Removing empty block main::@6
Removing empty block menu::@19
Removing empty block menu::@5
Removing empty block menu::@20
Removing empty block menu::@22
Removing empty block menu::@24
Removing empty block menu::@26
Removing empty block menu::@28
Removing empty block menu::@30
Removing empty block menu::@32
Removing empty block menu::@34
Removing empty block menu::@36
Removing empty block menu::@38
Removing empty block menu::@40
Removing empty block menu::@42
Removing empty block menu::@43
Removing empty block @21
Removing empty block mode_stdchar::@10
Removing empty block mode_stdchar::@11
Removing empty block mode_stdchar::@6
Removing empty block mode_stdchar::@12
Removing empty block mode_stdchar::@13
Removing empty block mode_stdchar::@14
Removing empty block mode_stdchar::@15
Removing empty block @22
Removing empty block mode_ecmchar::@10
Removing empty block mode_ecmchar::@11
Removing empty block mode_ecmchar::@6
Removing empty block mode_ecmchar::@12
Removing empty block mode_ecmchar::@13
Removing empty block mode_ecmchar::@14
Removing empty block mode_ecmchar::@15
Removing empty block @23
Removing empty block mode_mcchar::@10
Removing empty block mode_mcchar::@11
Removing empty block mode_mcchar::@6
Removing empty block mode_mcchar::@12
Removing empty block mode_mcchar::@13
Removing empty block mode_mcchar::@14
Removing empty block mode_mcchar::@15
Removing empty block @24
Removing empty block mode_hicolstdchar::@10
Removing empty block mode_hicolstdchar::@11
Removing empty block mode_hicolstdchar::@6
Removing empty block mode_hicolstdchar::@12
Removing empty block mode_hicolstdchar::@13
Removing empty block mode_hicolstdchar::@14
Removing empty block mode_hicolstdchar::@15
Removing empty block @25
Removing empty block mode_hicolecmchar::@10
Removing empty block mode_hicolecmchar::@11
Removing empty block mode_hicolecmchar::@6
Removing empty block mode_hicolecmchar::@12
Removing empty block mode_hicolecmchar::@13
Removing empty block mode_hicolecmchar::@14
Removing empty block mode_hicolecmchar::@15
Removing empty block @26
Removing empty block mode_hicolmcchar::@10
Removing empty block mode_hicolmcchar::@11
Removing empty block mode_hicolmcchar::@6
Removing empty block mode_hicolmcchar::@12
Removing empty block mode_hicolmcchar::@13
Removing empty block mode_hicolmcchar::@14
Removing empty block mode_hicolmcchar::@15
Removing empty block @27
Removing empty block mode_twoplanebitmap::@18
Removing empty block mode_twoplanebitmap::@22
Removing empty block mode_twoplanebitmap::@23
Removing empty block mode_twoplanebitmap::@12
Removing empty block mode_twoplanebitmap::@24
Removing empty block mode_twoplanebitmap::@25
Removing empty block mode_twoplanebitmap::@26
Removing empty block mode_twoplanebitmap::@27
Removing empty block @28
Removing empty block mode_sixsfred::@18
Removing empty block mode_sixsfred::@19
Removing empty block mode_sixsfred::@10
Removing empty block mode_sixsfred::@20
Removing empty block mode_sixsfred::@21
Removing empty block mode_sixsfred::@22
Removing empty block mode_sixsfred::@23
Removing empty block @29
Removing empty block mode_sixsfred2::@18
Removing empty block mode_sixsfred2::@19
Removing empty block mode_sixsfred2::@10
Removing empty block mode_sixsfred2::@20
Removing empty block mode_sixsfred2::@21
Removing empty block mode_sixsfred2::@22
Removing empty block mode_sixsfred2::@23
Removing empty block @30
Removing empty block mode_8bpppixelcell::@19
Removing empty block mode_8bpppixelcell::@10
Removing empty block mode_8bpppixelcell::@20
Removing empty block mode_8bpppixelcell::@21
Removing empty block mode_8bpppixelcell::@22
Removing empty block mode_8bpppixelcell::@23
Removing empty block @31
Removing empty block mode_8bppchunkybmm::@13
Removing empty block mode_8bppchunkybmm::@7
Removing empty block mode_8bppchunkybmm::@14
Removing empty block mode_8bppchunkybmm::@15
Removing empty block mode_8bppchunkybmm::@16
Removing empty block mode_8bppchunkybmm::@17
PROCEDURE MODIFY VARIABLE ANALYSIS
print_str_lines modifies print_char_cursor
print_str_lines modifies print_line_cursor
print_ln modifies print_line_cursor
print_ln modifies print_char_cursor
print_cls modifies print_line_cursor
print_cls modifies print_char_cursor
print_set_screen modifies print_screen
print_set_screen modifies print_line_cursor
print_set_screen modifies print_char_cursor
main modifies print_screen
main modifies print_line_cursor
main modifies print_char_cursor
menu modifies print_screen
menu modifies print_line_cursor
menu modifies print_char_cursor

Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...

CONTROL FLOW GRAPH SSA WITH ASSIGNMENT CALL & RETURN
@begin: scope:[]  from
  (byte*) PROCPORT#0 ← ((byte*)) (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte*) BORDERCOL#0 ← ((byte*)) (word/dword/signed dword) 53280
  (byte*) BGCOL#0 ← ((byte*)) (word/dword/signed dword) 53281
  (byte*) BGCOL1#0 ← ((byte*)) (word/dword/signed dword) 53281
  (byte*) BGCOL2#0 ← ((byte*)) (word/dword/signed dword) 53282
  (byte*) BGCOL3#0 ← ((byte*)) (word/dword/signed dword) 53283
  (byte*) BGCOL4#0 ← ((byte*)) (word/dword/signed dword) 53284
  (byte*) VIC_CONTROL#0 ← ((byte*)) (word/dword/signed dword) 53265
  (byte) VIC_ECM#0 ← (byte/signed byte/word/signed word/dword/signed dword) 64
  (byte) VIC_BMM#0 ← (byte/signed byte/word/signed word/dword/signed dword) 32
  (byte) VIC_DEN#0 ← (byte/signed byte/word/signed word/dword/signed dword) 16
  (byte) VIC_RSEL#0 ← (byte/signed byte/word/signed word/dword/signed dword) 8
  (byte*) VIC_CONTROL2#0 ← ((byte*)) (word/dword/signed dword) 53270
  (byte) VIC_MCM#0 ← (byte/signed byte/word/signed word/dword/signed dword) 16
  (byte) VIC_CSEL#0 ← (byte/signed byte/word/signed word/dword/signed dword) 8
  (byte*) VIC_MEMORY#0 ← ((byte*)) (word/dword/signed dword) 53272
  (byte*) COLS#0 ← ((byte*)) (word/dword/signed dword) 55296
  (byte*) CIA1_PORT_A#0 ← ((byte*)) (word/dword/signed dword) 56320
  (byte*) CIA1_PORT_B#0 ← ((byte*)) (word/dword/signed dword) 56321
  (byte*) CIA2_PORT_A#0 ← ((byte*)) (word/dword/signed dword) 56576
  (byte*) CIA2_PORT_A_DDR#0 ← ((byte*)) (word/dword/signed dword) 56578
  (byte) BLACK#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) GREEN#0 ← (byte/signed byte/word/signed word/dword/signed dword) 5
  (byte) BLUE#0 ← (byte/signed byte/word/signed word/dword/signed dword) 6
  (byte) LIGHT_GREEN#0 ← (byte/signed byte/word/signed word/dword/signed dword) 13
  (byte*) DTV_FEATURE#0 ← ((byte*)) (word/dword/signed dword) 53311
  (byte) DTV_FEATURE_ENABLE#0 ← (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte*) DTV_CONTROL#0 ← ((byte*)) (word/dword/signed dword) 53308
  (byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0 ← (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte) DTV_CONTROL_HIGHCOLOR_ON#0 ← (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte) DTV_CONTROL_COLORRAM_OFF#0 ← (byte/signed byte/word/signed word/dword/signed dword) 16
  (byte) DTV_CONTROL_CHUNKY_ON#0 ← (byte/signed byte/word/signed word/dword/signed dword) 64
  (byte*) DTV_PALETTE#0 ← ((byte*)) (word/dword/signed dword) 53760
  (byte[16]) DTV_PALETTE_DEFAULT#0 ← { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 15, (byte/signed byte/word/signed word/dword/signed dword) 54, (byte/word/signed word/dword/signed dword) 190, (byte/signed byte/word/signed word/dword/signed dword) 88, (byte/word/signed word/dword/signed dword) 219, (byte/word/signed word/dword/signed dword) 134, (byte/word/signed word/dword/signed dword) 255, (byte/signed byte/word/signed word/dword/signed dword) 41, (byte/signed byte/word/signed word/dword/signed dword) 38, (byte/signed byte/word/signed word/dword/signed dword) 59, (byte/signed byte/word/signed word/dword/signed dword) 5, (byte/signed byte/word/signed word/dword/signed dword) 7, (byte/word/signed word/dword/signed dword) 223, (byte/word/signed word/dword/signed dword) 154, (byte/signed byte/word/signed word/dword/signed dword) 10 }
  (byte*) DTV_PLANEA_START_LO#0 ← ((byte*)) (word/dword/signed dword) 53306
  (byte*) DTV_PLANEA_START_MI#0 ← ((byte*)) (word/dword/signed dword) 53307
  (byte*) DTV_PLANEA_START_HI#0 ← ((byte*)) (word/dword/signed dword) 53317
  (byte*) DTV_PLANEA_STEP#0 ← ((byte*)) (word/dword/signed dword) 53318
  (byte*) DTV_PLANEA_MODULO_LO#0 ← ((byte*)) (word/dword/signed dword) 53304
  (byte*) DTV_PLANEA_MODULO_HI#0 ← ((byte*)) (word/dword/signed dword) 53305
  (byte*) DTV_PLANEB_START_LO#0 ← ((byte*)) (word/dword/signed dword) 53321
  (byte*) DTV_PLANEB_START_MI#0 ← ((byte*)) (word/dword/signed dword) 53322
  (byte*) DTV_PLANEB_START_HI#0 ← ((byte*)) (word/dword/signed dword) 53323
  (byte*) DTV_PLANEB_STEP#0 ← ((byte*)) (word/dword/signed dword) 53324
  (byte*) DTV_PLANEB_MODULO_LO#0 ← ((byte*)) (word/dword/signed dword) 53319
  (byte*) DTV_PLANEB_MODULO_HI#0 ← ((byte*)) (word/dword/signed dword) 53320
  (byte*) DTV_COLOR_BANK_LO#0 ← ((byte*)) (word/dword/signed dword) 53302
  (byte*) DTV_COLOR_BANK_HI#0 ← ((byte*)) (word/dword/signed dword) 53303
  (dword) DTV_COLOR_BANK_DEFAULT#0 ← (dword/signed dword) 120832
  (byte*) DTV_GRAPHICS_VIC_BANK#0 ← ((byte*)) (word/dword/signed dword) 53309
  to:@1
dtvSetCpuBankSegment1: scope:[dtvSetCpuBankSegment1]  from mode_8bppchunkybmm::@10 mode_8bppchunkybmm::@12 mode_8bppchunkybmm::@9
  (byte) dtvSetCpuBankSegment1::cpuBankIdx#3 ← phi( mode_8bppchunkybmm::@10/(byte) dtvSetCpuBankSegment1::cpuBankIdx#1 mode_8bppchunkybmm::@12/(byte) dtvSetCpuBankSegment1::cpuBankIdx#2 mode_8bppchunkybmm::@9/(byte) dtvSetCpuBankSegment1::cpuBankIdx#0 )
  (byte*) dtvSetCpuBankSegment1::cpuBank#0 ← ((byte*)) (byte/word/signed word/dword/signed dword) 255
  *((byte*) dtvSetCpuBankSegment1::cpuBank#0) ← (byte) dtvSetCpuBankSegment1::cpuBankIdx#3
  asm { .byte$32,$dd lda$ff .byte$32,$00  }
  to:dtvSetCpuBankSegment1::@return
dtvSetCpuBankSegment1::@return: scope:[dtvSetCpuBankSegment1]  from dtvSetCpuBankSegment1
  return 
  to:@return
@1: scope:[]  from @begin
  (byte*) print_screen#0 ← ((byte*)) (word/signed word/dword/signed dword) 1024
  (byte*) print_line_cursor#0 ← (byte*) print_screen#0
  (byte*) print_char_cursor#0 ← (byte*) print_line_cursor#0
  to:@15
print_str_lines: scope:[print_str_lines]  from menu::@45
  (byte*) print_line_cursor#49 ← phi( menu::@45/(byte*) print_line_cursor#12 )
  (byte*) print_char_cursor#51 ← phi( menu::@45/(byte*) print_char_cursor#13 )
  (byte*) print_str_lines::str#4 ← phi( menu::@45/(byte*) print_str_lines::str#1 )
  to:print_str_lines::@1
print_str_lines::@1: scope:[print_str_lines]  from print_str_lines print_str_lines::@11
  (byte*) print_line_cursor#31 ← phi( print_str_lines/(byte*) print_line_cursor#49 print_str_lines::@11/(byte*) print_line_cursor#1 )
  (byte*) print_char_cursor#33 ← phi( print_str_lines/(byte*) print_char_cursor#51 print_str_lines::@11/(byte*) print_char_cursor#2 )
  (byte*) print_str_lines::str#2 ← phi( print_str_lines/(byte*) print_str_lines::str#4 print_str_lines::@11/(byte*) print_str_lines::str#5 )
  (boolean~) print_str_lines::$0 ← *((byte*) print_str_lines::str#2) != (byte) '@'
  if((boolean~) print_str_lines::$0) goto print_str_lines::@2
  to:print_str_lines::@return
print_str_lines::@2: scope:[print_str_lines]  from print_str_lines::@1
  (byte*) print_line_cursor#81 ← phi( print_str_lines::@1/(byte*) print_line_cursor#31 )
  (byte*) print_char_cursor#52 ← phi( print_str_lines::@1/(byte*) print_char_cursor#33 )
  (byte*) print_str_lines::str#6 ← phi( print_str_lines::@1/(byte*) print_str_lines::str#2 )
  to:print_str_lines::@4
print_str_lines::@4: scope:[print_str_lines]  from print_str_lines::@2 print_str_lines::@5
  (byte*) print_line_cursor#66 ← phi( print_str_lines::@2/(byte*) print_line_cursor#81 print_str_lines::@5/(byte*) print_line_cursor#50 )
  (byte*) print_char_cursor#31 ← phi( print_str_lines::@2/(byte*) print_char_cursor#52 print_str_lines::@5/(byte*) print_char_cursor#53 )
  (byte*) print_str_lines::str#3 ← phi( print_str_lines::@2/(byte*) print_str_lines::str#6 print_str_lines::@5/(byte*) print_str_lines::str#7 )
  (byte) print_str_lines::ch#0 ← *((byte*) print_str_lines::str#3)
  (byte*) print_str_lines::str#0 ← ++ (byte*) print_str_lines::str#3
  (boolean~) print_str_lines::$1 ← (byte) print_str_lines::ch#0 != (byte) '@'
  (boolean~) print_str_lines::$2 ← ! (boolean~) print_str_lines::$1
  if((boolean~) print_str_lines::$2) goto print_str_lines::@5
  to:print_str_lines::@8
print_str_lines::@5: scope:[print_str_lines]  from print_str_lines::@4 print_str_lines::@8
  (byte*) print_line_cursor#50 ← phi( print_str_lines::@4/(byte*) print_line_cursor#66 print_str_lines::@8/(byte*) print_line_cursor#67 )
  (byte*) print_char_cursor#53 ← phi( print_str_lines::@4/(byte*) print_char_cursor#31 print_str_lines::@8/(byte*) print_char_cursor#1 )
  (byte*) print_str_lines::str#7 ← phi( print_str_lines::@4/(byte*) print_str_lines::str#0 print_str_lines::@8/(byte*) print_str_lines::str#8 )
  (byte) print_str_lines::ch#1 ← phi( print_str_lines::@4/(byte) print_str_lines::ch#0 print_str_lines::@8/(byte) print_str_lines::ch#2 )
  (boolean~) print_str_lines::$3 ← (byte) print_str_lines::ch#1 != (byte) '@'
  if((boolean~) print_str_lines::$3) goto print_str_lines::@4
  to:print_str_lines::@9
print_str_lines::@8: scope:[print_str_lines]  from print_str_lines::@4
  (byte*) print_line_cursor#67 ← phi( print_str_lines::@4/(byte*) print_line_cursor#66 )
  (byte*) print_str_lines::str#8 ← phi( print_str_lines::@4/(byte*) print_str_lines::str#0 )
  (byte*) print_char_cursor#17 ← phi( print_str_lines::@4/(byte*) print_char_cursor#31 )
  (byte) print_str_lines::ch#2 ← phi( print_str_lines::@4/(byte) print_str_lines::ch#0 )
  *((byte*) print_char_cursor#17) ← (byte) print_str_lines::ch#2
  (byte*) print_char_cursor#1 ← ++ (byte*) print_char_cursor#17
  to:print_str_lines::@5
print_str_lines::@9: scope:[print_str_lines]  from print_str_lines::@5
  (byte*) print_str_lines::str#9 ← phi( print_str_lines::@5/(byte*) print_str_lines::str#7 )
  (byte*) print_char_cursor#32 ← phi( print_str_lines::@5/(byte*) print_char_cursor#53 )
  (byte*) print_line_cursor#30 ← phi( print_str_lines::@5/(byte*) print_line_cursor#50 )
  call print_ln param-assignment
  to:print_str_lines::@11
print_str_lines::@11: scope:[print_str_lines]  from print_str_lines::@9
  (byte*) print_str_lines::str#5 ← phi( print_str_lines::@9/(byte*) print_str_lines::str#9 )
  (byte*) print_char_cursor#18 ← phi( print_str_lines::@9/(byte*) print_char_cursor#5 )
  (byte*) print_line_cursor#16 ← phi( print_str_lines::@9/(byte*) print_line_cursor#4 )
  (byte*) print_line_cursor#1 ← (byte*) print_line_cursor#16
  (byte*) print_char_cursor#2 ← (byte*) print_char_cursor#18
  to:print_str_lines::@1
print_str_lines::@return: scope:[print_str_lines]  from print_str_lines::@1
  (byte*) print_line_cursor#17 ← phi( print_str_lines::@1/(byte*) print_line_cursor#31 )
  (byte*) print_char_cursor#19 ← phi( print_str_lines::@1/(byte*) print_char_cursor#33 )
  (byte*) print_char_cursor#3 ← (byte*) print_char_cursor#19
  (byte*) print_line_cursor#2 ← (byte*) print_line_cursor#17
  return 
  to:@return
print_ln: scope:[print_ln]  from print_str_lines::@9
  (byte*) print_char_cursor#34 ← phi( print_str_lines::@9/(byte*) print_char_cursor#32 )
  (byte*) print_line_cursor#32 ← phi( print_str_lines::@9/(byte*) print_line_cursor#30 )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  (byte*) print_char_cursor#20 ← phi( print_ln/(byte*) print_char_cursor#34 print_ln::@1/(byte*) print_char_cursor#20 )
  (byte*) print_line_cursor#18 ← phi( print_ln/(byte*) print_line_cursor#32 print_ln::@1/(byte*) print_line_cursor#3 )
  (byte*~) print_ln::$0 ← (byte*) print_line_cursor#18 + (byte/signed byte/word/signed word/dword/signed dword) 40
  (byte*) print_line_cursor#3 ← (byte*~) print_ln::$0
  (boolean~) print_ln::$1 ← (byte*) print_line_cursor#3 < (byte*) print_char_cursor#20
  if((boolean~) print_ln::$1) goto print_ln::@1
  to:print_ln::@2
print_ln::@2: scope:[print_ln]  from print_ln::@1
  (byte*) print_line_cursor#19 ← phi( print_ln::@1/(byte*) print_line_cursor#3 )
  (byte*) print_char_cursor#4 ← (byte*) print_line_cursor#19
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@2
  (byte*) print_char_cursor#21 ← phi( print_ln::@2/(byte*) print_char_cursor#4 )
  (byte*) print_line_cursor#20 ← phi( print_ln::@2/(byte*) print_line_cursor#19 )
  (byte*) print_line_cursor#4 ← (byte*) print_line_cursor#20
  (byte*) print_char_cursor#5 ← (byte*) print_char_cursor#21
  return 
  to:@return
print_cls: scope:[print_cls]  from menu::@44
  (byte*) print_screen#8 ← phi( menu::@44/(byte*) print_screen#5 )
  (byte*) print_cls::sc#0 ← (byte*) print_screen#8
  to:print_cls::@1
print_cls::@1: scope:[print_cls]  from print_cls print_cls::@1
  (byte*) print_screen#9 ← phi( print_cls/(byte*) print_screen#8 print_cls::@1/(byte*) print_screen#9 )
  (byte*) print_cls::sc#2 ← phi( print_cls/(byte*) print_cls::sc#0 print_cls::@1/(byte*) print_cls::sc#1 )
  *((byte*) print_cls::sc#2) ← (byte) ' '
  (byte*) print_cls::sc#1 ← ++ (byte*) print_cls::sc#2
  (byte*~) print_cls::$0 ← (byte*) print_screen#9 + (word/signed word/dword/signed dword) 1000
  (boolean~) print_cls::$1 ← (byte*) print_cls::sc#1 != (byte*~) print_cls::$0
  if((boolean~) print_cls::$1) goto print_cls::@1
  to:print_cls::@2
print_cls::@2: scope:[print_cls]  from print_cls::@1
  (byte*) print_screen#10 ← phi( print_cls::@1/(byte*) print_screen#9 )
  (byte*) print_line_cursor#5 ← (byte*) print_screen#10
  (byte*) print_char_cursor#6 ← (byte*) print_line_cursor#5
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls::@2
  (byte*) print_char_cursor#22 ← phi( print_cls::@2/(byte*) print_char_cursor#6 )
  (byte*) print_line_cursor#21 ← phi( print_cls::@2/(byte*) print_line_cursor#5 )
  (byte*) print_line_cursor#6 ← (byte*) print_line_cursor#21
  (byte*) print_char_cursor#7 ← (byte*) print_char_cursor#22
  return 
  to:@return
print_set_screen: scope:[print_set_screen]  from menu::@18
  (byte*) print_set_screen::screen#1 ← phi( menu::@18/(byte*) print_set_screen::screen#0 )
  (byte*) print_screen#1 ← (byte*) print_set_screen::screen#1
  (byte*) print_line_cursor#7 ← (byte*) print_screen#1
  (byte*) print_char_cursor#8 ← (byte*) print_line_cursor#7
  to:print_set_screen::@return
print_set_screen::@return: scope:[print_set_screen]  from print_set_screen
  (byte*) print_char_cursor#23 ← phi( print_set_screen/(byte*) print_char_cursor#8 )
  (byte*) print_line_cursor#22 ← phi( print_set_screen/(byte*) print_line_cursor#7 )
  (byte*) print_screen#11 ← phi( print_set_screen/(byte*) print_screen#1 )
  (byte*) print_screen#2 ← (byte*) print_screen#11
  (byte*) print_line_cursor#8 ← (byte*) print_line_cursor#22
  (byte*) print_char_cursor#9 ← (byte*) print_char_cursor#23
  return 
  to:@return
@15: scope:[]  from @1
  (byte*) print_char_cursor#69 ← phi( @1/(byte*) print_char_cursor#0 )
  (byte*) print_line_cursor#68 ← phi( @1/(byte*) print_line_cursor#0 )
  (byte*) print_screen#49 ← phi( @1/(byte*) print_screen#0 )
  (byte) KEY_3#0 ← (byte/signed byte/word/signed word/dword/signed dword) 8
  (byte) KEY_A#0 ← (byte/signed byte/word/signed word/dword/signed dword) 10
  (byte) KEY_E#0 ← (byte/signed byte/word/signed word/dword/signed dword) 14
  (byte) KEY_D#0 ← (byte/signed byte/word/signed word/dword/signed dword) 18
  (byte) KEY_6#0 ← (byte/signed byte/word/signed word/dword/signed dword) 19
  (byte) KEY_C#0 ← (byte/signed byte/word/signed word/dword/signed dword) 20
  (byte) KEY_7#0 ← (byte/signed byte/word/signed word/dword/signed dword) 24
  (byte) KEY_8#0 ← (byte/signed byte/word/signed word/dword/signed dword) 27
  (byte) KEY_B#0 ← (byte/signed byte/word/signed word/dword/signed dword) 28
  (byte) KEY_1#0 ← (byte/signed byte/word/signed word/dword/signed dword) 56
  (byte) KEY_2#0 ← (byte/signed byte/word/signed word/dword/signed dword) 59
  (byte) KEY_SPACE#0 ← (byte/signed byte/word/signed word/dword/signed dword) 60
  (byte[8]) keyboard_matrix_row_bitmask#0 ← { (byte/word/signed word/dword/signed dword) 254, (byte/word/signed word/dword/signed dword) 253, (byte/word/signed word/dword/signed dword) 251, (byte/word/signed word/dword/signed dword) 247, (byte/word/signed word/dword/signed dword) 239, (byte/word/signed word/dword/signed dword) 223, (byte/word/signed word/dword/signed dword) 191, (byte/signed byte/word/signed word/dword/signed dword) 127 }
  (byte[]) keyboard_matrix_col_bitmask#0 ← { (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 2, (byte/signed byte/word/signed word/dword/signed dword) 4, (byte/signed byte/word/signed word/dword/signed dword) 8, (byte/signed byte/word/signed word/dword/signed dword) 16, (byte/signed byte/word/signed word/dword/signed dword) 32, (byte/signed byte/word/signed word/dword/signed dword) 64, (byte/word/signed word/dword/signed dword) 128 }
  to:@20
keyboard_matrix_read: scope:[keyboard_matrix_read]  from keyboard_key_pressed
  (byte) keyboard_matrix_read::rowid#1 ← phi( keyboard_key_pressed/(byte) keyboard_matrix_read::rowid#0 )
  *((byte*) CIA1_PORT_A#0) ← *((byte[8]) keyboard_matrix_row_bitmask#0 + (byte) keyboard_matrix_read::rowid#1)
  (byte~) keyboard_matrix_read::$0 ← ~ *((byte*) CIA1_PORT_B#0)
  (byte) keyboard_matrix_read::row_pressed_bits#0 ← (byte~) keyboard_matrix_read::$0
  (byte) keyboard_matrix_read::return#0 ← (byte) keyboard_matrix_read::row_pressed_bits#0
  to:keyboard_matrix_read::@return
keyboard_matrix_read::@return: scope:[keyboard_matrix_read]  from keyboard_matrix_read
  (byte) keyboard_matrix_read::return#3 ← phi( keyboard_matrix_read/(byte) keyboard_matrix_read::return#0 )
  (byte) keyboard_matrix_read::return#1 ← (byte) keyboard_matrix_read::return#3
  return 
  to:@return
keyboard_key_pressed: scope:[keyboard_key_pressed]  from menu::@10 menu::@11 menu::@12 menu::@13 menu::@14 menu::@15 menu::@4 menu::@6 menu::@7 menu::@8 menu::@9 mode_8bppchunkybmm::@6 mode_8bpppixelcell::@9 mode_ecmchar::@5 mode_hicolecmchar::@5 mode_hicolmcchar::@5 mode_hicolstdchar::@5 mode_mcchar::@5 mode_sixsfred2::@9 mode_sixsfred::@9 mode_stdchar::@5 mode_twoplanebitmap::@11
  (byte) keyboard_key_pressed::key#22 ← phi( menu::@10/(byte) keyboard_key_pressed::key#5 menu::@11/(byte) keyboard_key_pressed::key#6 menu::@12/(byte) keyboard_key_pressed::key#7 menu::@13/(byte) keyboard_key_pressed::key#8 menu::@14/(byte) keyboard_key_pressed::key#9 menu::@15/(byte) keyboard_key_pressed::key#10 menu::@4/(byte) keyboard_key_pressed::key#0 menu::@6/(byte) keyboard_key_pressed::key#1 menu::@7/(byte) keyboard_key_pressed::key#2 menu::@8/(byte) keyboard_key_pressed::key#3 menu::@9/(byte) keyboard_key_pressed::key#4 mode_8bppchunkybmm::@6/(byte) keyboard_key_pressed::key#21 mode_8bpppixelcell::@9/(byte) keyboard_key_pressed::key#20 mode_ecmchar::@5/(byte) keyboard_key_pressed::key#12 mode_hicolecmchar::@5/(byte) keyboard_key_pressed::key#15 mode_hicolmcchar::@5/(byte) keyboard_key_pressed::key#16 mode_hicolstdchar::@5/(byte) keyboard_key_pressed::key#14 mode_mcchar::@5/(byte) keyboard_key_pressed::key#13 mode_sixsfred2::@9/(byte) keyboard_key_pressed::key#19 mode_sixsfred::@9/(byte) keyboard_key_pressed::key#18 mode_stdchar::@5/(byte) keyboard_key_pressed::key#11 mode_twoplanebitmap::@11/(byte) keyboard_key_pressed::key#17 )
  (byte~) keyboard_key_pressed::$0 ← (byte) keyboard_key_pressed::key#22 & (byte/signed byte/word/signed word/dword/signed dword) 7
  (byte) keyboard_key_pressed::colidx#0 ← (byte~) keyboard_key_pressed::$0
  (byte~) keyboard_key_pressed::$1 ← (byte) keyboard_key_pressed::key#22 >> (byte/signed byte/word/signed word/dword/signed dword) 3
  (byte) keyboard_key_pressed::rowidx#0 ← (byte~) keyboard_key_pressed::$1
  (byte) keyboard_matrix_read::rowid#0 ← (byte) keyboard_key_pressed::rowidx#0
  call keyboard_matrix_read param-assignment
  (byte) keyboard_matrix_read::return#2 ← (byte) keyboard_matrix_read::return#1
  to:keyboard_key_pressed::@2
keyboard_key_pressed::@2: scope:[keyboard_key_pressed]  from keyboard_key_pressed
  (byte) keyboard_key_pressed::colidx#1 ← phi( keyboard_key_pressed/(byte) keyboard_key_pressed::colidx#0 )
  (byte) keyboard_matrix_read::return#4 ← phi( keyboard_key_pressed/(byte) keyboard_matrix_read::return#2 )
  (byte~) keyboard_key_pressed::$2 ← (byte) keyboard_matrix_read::return#4
  (byte~) keyboard_key_pressed::$3 ← (byte~) keyboard_key_pressed::$2 & *((byte[]) keyboard_matrix_col_bitmask#0 + (byte) keyboard_key_pressed::colidx#1)
  (byte) keyboard_key_pressed::return#0 ← (byte~) keyboard_key_pressed::$3
  to:keyboard_key_pressed::@return
keyboard_key_pressed::@return: scope:[keyboard_key_pressed]  from keyboard_key_pressed::@2
  (byte) keyboard_key_pressed::return#24 ← phi( keyboard_key_pressed::@2/(byte) keyboard_key_pressed::return#0 )
  (byte) keyboard_key_pressed::return#1 ← (byte) keyboard_key_pressed::return#24
  return 
  to:@return
main: scope:[main]  from @32
  (byte*) print_char_cursor#54 ← phi( @32/(byte*) print_char_cursor#50 )
  (byte*) print_line_cursor#51 ← phi( @32/(byte*) print_line_cursor#48 )
  (byte*) print_screen#33 ← phi( @32/(byte*) print_screen#32 )
  asm { sei  }
  *((byte*) DTV_FEATURE#0) ← (byte) DTV_FEATURE_ENABLE#0
  to:main::@1
main::@1: scope:[main]  from main main::@7
  (byte*) print_char_cursor#36 ← phi( main/(byte*) print_char_cursor#54 main::@7/(byte*) print_char_cursor#10 )
  (byte*) print_line_cursor#34 ← phi( main/(byte*) print_line_cursor#51 main::@7/(byte*) print_line_cursor#9 )
  (byte*) print_screen#18 ← phi( main/(byte*) print_screen#33 main::@7/(byte*) print_screen#3 )
  if(true) goto main::@2
  to:main::@return
main::@2: scope:[main]  from main::@1
  (byte*) print_char_cursor#35 ← phi( main::@1/(byte*) print_char_cursor#36 )
  (byte*) print_line_cursor#33 ← phi( main::@1/(byte*) print_line_cursor#34 )
  (byte*) print_screen#17 ← phi( main::@1/(byte*) print_screen#18 )
  call menu param-assignment
  to:main::@7
main::@7: scope:[main]  from main::@2
  (byte*) print_char_cursor#24 ← phi( main::@2/(byte*) print_char_cursor#15 )
  (byte*) print_line_cursor#23 ← phi( main::@2/(byte*) print_line_cursor#14 )
  (byte*) print_screen#12 ← phi( main::@2/(byte*) print_screen#6 )
  (byte*) print_screen#3 ← (byte*) print_screen#12
  (byte*) print_line_cursor#9 ← (byte*) print_line_cursor#23
  (byte*) print_char_cursor#10 ← (byte*) print_char_cursor#24
  to:main::@1
main::@return: scope:[main]  from main::@1
  (byte*) print_char_cursor#25 ← phi( main::@1/(byte*) print_char_cursor#36 )
  (byte*) print_line_cursor#24 ← phi( main::@1/(byte*) print_line_cursor#34 )
  (byte*) print_screen#13 ← phi( main::@1/(byte*) print_screen#18 )
  (byte*) print_screen#4 ← (byte*) print_screen#13
  (byte*) print_line_cursor#10 ← (byte*) print_line_cursor#24
  (byte*) print_char_cursor#11 ← (byte*) print_char_cursor#25
  return 
  to:@return
@20: scope:[]  from @15
  (byte*) print_char_cursor#68 ← phi( @15/(byte*) print_char_cursor#69 )
  (byte*) print_line_cursor#65 ← phi( @15/(byte*) print_line_cursor#68 )
  (byte*) print_screen#48 ← phi( @15/(byte*) print_screen#49 )
  (string~) $0 ← (const string) $20 + (const string) $21
  (string~) $1 ← (string~) $0 + (const string) $22
  (string~) $2 ← (string~) $1 + (const string) $23
  (string~) $3 ← (string~) $2 + (const string) $24
  (string~) $4 ← (string~) $3 + (const string) $25
  (string~) $5 ← (string~) $4 + (const string) $26
  (string~) $6 ← (string~) $5 + (const string) $27
  (string~) $7 ← (string~) $6 + (const string) $28
  (string~) $8 ← (string~) $7 + (const string) $29
  (string~) $9 ← (string~) $8 + (const string) $30
  (string~) $10 ← (string~) $9 + (const string) $31
  (string~) $11 ← (string~) $10 + (const string) $32
  (string~) $12 ← (string~) $11 + (const string) $33
  (string~) $13 ← (string~) $12 + (const string) $34
  (string~) $14 ← (string~) $13 + (const string) $35
  (string~) $15 ← (string~) $14 + (const string) $36
  (string~) $16 ← (string~) $15 + (const string) $37
  (string~) $17 ← (string~) $16 + (const string) $38
  (string~) $18 ← (string~) $17 + (const string) $39
  (string~) $19 ← (string~) $18 + (const string) $40
  (byte[]) MENU_TEXT#0 ← (string~) $19
  to:@32
menu: scope:[menu]  from main::@2
  (byte*) print_char_cursor#94 ← phi( main::@2/(byte*) print_char_cursor#35 )
  (byte*) print_line_cursor#94 ← phi( main::@2/(byte*) print_line_cursor#33 )
  (byte*) print_screen#75 ← phi( main::@2/(byte*) print_screen#17 )
  (byte*) menu::SCREEN#0 ← ((byte*)) (word/dword/signed dword) 32768
  (byte*) menu::CHARSET#0 ← ((byte*)) (word/dword/signed dword) 38912
  (dword~) menu::$0 ← ((dword)) (byte*) menu::CHARSET#0
  (dword~) menu::$1 ← (dword~) menu::$0 / (dword/signed dword) 65536
  (byte~) menu::$2 ← ((byte)) (dword~) menu::$1
  *((byte*) DTV_GRAPHICS_VIC_BANK#0) ← (byte~) menu::$2
  (dword~) menu::$3 ← (dword) DTV_COLOR_BANK_DEFAULT#0 / (word/signed word/dword/signed dword) 1024
  (word~) menu::$4 ← ((word)) (dword~) menu::$3
  (byte~) menu::$5 ← < (word~) menu::$4
  *((byte*) DTV_COLOR_BANK_LO#0) ← (byte~) menu::$5
  (dword~) menu::$6 ← (dword) DTV_COLOR_BANK_DEFAULT#0 / (word/signed word/dword/signed dword) 1024
  (word~) menu::$7 ← ((word)) (dword~) menu::$6
  (byte~) menu::$8 ← > (word~) menu::$7
  *((byte*) DTV_COLOR_BANK_HI#0) ← (byte~) menu::$8
  *((byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (word~) menu::$9 ← ((word)) (byte*) menu::CHARSET#0
  (word/signed dword/dword~) menu::$10 ← (word~) menu::$9 / (word/signed word/dword/signed dword) 16384
  (byte~) menu::$11 ← ((byte)) (word/signed dword/dword~) menu::$10
  (byte/word/dword~) menu::$12 ← (byte/signed byte/word/signed word/dword/signed dword) 3 ^ (byte~) menu::$11
  *((byte*) CIA2_PORT_A#0) ← (byte/word/dword~) menu::$12
  (byte~) menu::$13 ← (byte) VIC_DEN#0 | (byte) VIC_RSEL#0
  (byte/word/dword~) menu::$14 ← (byte~) menu::$13 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL#0) ← (byte/word/dword~) menu::$14
  *((byte*) VIC_CONTROL2#0) ← (byte) VIC_CSEL#0
  (word~) menu::$15 ← ((word)) (byte*) menu::SCREEN#0
  (word~) menu::$16 ← (word~) menu::$15 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) menu::$17 ← (word~) menu::$16 / (byte/signed byte/word/signed word/dword/signed dword) 64
  (word~) menu::$18 ← ((word)) (byte*) menu::CHARSET#0
  (word~) menu::$19 ← (word~) menu::$18 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) menu::$20 ← (word~) menu::$19 / (word/signed word/dword/signed dword) 1024
  (word/dword~) menu::$21 ← (word/signed dword/dword~) menu::$17 | (word/signed dword/dword~) menu::$20
  (byte~) menu::$22 ← ((byte)) (word/dword~) menu::$21
  *((byte*) VIC_MEMORY#0) ← (byte~) menu::$22
  (byte) menu::i#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:menu::@1
menu::@1: scope:[menu]  from menu menu::@1
  (byte*) print_char_cursor#82 ← phi( menu/(byte*) print_char_cursor#94 menu::@1/(byte*) print_char_cursor#82 )
  (byte*) print_line_cursor#82 ← phi( menu/(byte*) print_line_cursor#94 menu::@1/(byte*) print_line_cursor#82 )
  (byte*) print_screen#63 ← phi( menu/(byte*) print_screen#75 menu::@1/(byte*) print_screen#63 )
  (byte) menu::i#2 ← phi( menu/(byte) menu::i#0 menu::@1/(byte) menu::i#1 )
  *((byte*) DTV_PALETTE#0 + (byte) menu::i#2) ← *((byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) menu::i#2)
  (byte) menu::i#1 ← ++ (byte) menu::i#2
  (boolean~) menu::$23 ← (byte) menu::i#1 != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) menu::$23) goto menu::@1
  to:menu::@17
menu::@17: scope:[menu]  from menu::@1
  (byte*) print_char_cursor#70 ← phi( menu::@1/(byte*) print_char_cursor#82 )
  (byte*) print_line_cursor#69 ← phi( menu::@1/(byte*) print_line_cursor#82 )
  (byte*) print_screen#50 ← phi( menu::@1/(byte*) print_screen#63 )
  (byte*) menu::c#0 ← (byte*) COLS#0
  to:menu::@2
menu::@2: scope:[menu]  from menu::@17 menu::@2
  (byte*) print_char_cursor#55 ← phi( menu::@17/(byte*) print_char_cursor#70 menu::@2/(byte*) print_char_cursor#55 )
  (byte*) print_line_cursor#52 ← phi( menu::@17/(byte*) print_line_cursor#69 menu::@2/(byte*) print_line_cursor#52 )
  (byte*) print_screen#34 ← phi( menu::@17/(byte*) print_screen#50 menu::@2/(byte*) print_screen#34 )
  (byte*) menu::c#2 ← phi( menu::@17/(byte*) menu::c#0 menu::@2/(byte*) menu::c#1 )
  *((byte*) menu::c#2) ← (byte) LIGHT_GREEN#0
  (byte*) menu::c#1 ← ++ (byte*) menu::c#2
  (byte*~) menu::$24 ← (byte*) COLS#0 + (word/signed word/dword/signed dword) 1000
  (boolean~) menu::$25 ← (byte*) menu::c#1 != (byte*~) menu::$24
  if((boolean~) menu::$25) goto menu::@2
  to:menu::@18
menu::@18: scope:[menu]  from menu::@2
  (byte*) print_char_cursor#37 ← phi( menu::@2/(byte*) print_char_cursor#55 )
  (byte*) print_line_cursor#35 ← phi( menu::@2/(byte*) print_line_cursor#52 )
  (byte*) print_screen#19 ← phi( menu::@2/(byte*) print_screen#34 )
  *((byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*) print_set_screen::screen#0 ← (byte*) menu::SCREEN#0
  call print_set_screen param-assignment
  to:menu::@44
menu::@44: scope:[menu]  from menu::@18
  (byte*) print_char_cursor#26 ← phi( menu::@18/(byte*) print_char_cursor#9 )
  (byte*) print_line_cursor#25 ← phi( menu::@18/(byte*) print_line_cursor#8 )
  (byte*) print_screen#14 ← phi( menu::@18/(byte*) print_screen#2 )
  (byte*) print_screen#5 ← (byte*) print_screen#14
  (byte*) print_line_cursor#11 ← (byte*) print_line_cursor#25
  (byte*) print_char_cursor#12 ← (byte*) print_char_cursor#26
  call print_cls param-assignment
  to:menu::@45
menu::@45: scope:[menu]  from menu::@44
  (byte*) print_screen#51 ← phi( menu::@44/(byte*) print_screen#5 )
  (byte*) print_char_cursor#27 ← phi( menu::@44/(byte*) print_char_cursor#7 )
  (byte*) print_line_cursor#26 ← phi( menu::@44/(byte*) print_line_cursor#6 )
  (byte*) print_line_cursor#12 ← (byte*) print_line_cursor#26
  (byte*) print_char_cursor#13 ← (byte*) print_char_cursor#27
  (byte*) print_str_lines::str#1 ← (byte[]) MENU_TEXT#0
  call print_str_lines param-assignment
  to:menu::@46
menu::@46: scope:[menu]  from menu::@45
  (byte*) print_screen#36 ← phi( menu::@45/(byte*) print_screen#51 )
  (byte*) print_line_cursor#27 ← phi( menu::@45/(byte*) print_line_cursor#2 )
  (byte*) print_char_cursor#28 ← phi( menu::@45/(byte*) print_char_cursor#3 )
  (byte*) print_char_cursor#14 ← (byte*) print_char_cursor#28
  (byte*) print_line_cursor#13 ← (byte*) print_line_cursor#27
  to:menu::@3
menu::@3: scope:[menu]  from menu::@16 menu::@46
  (byte*) print_char_cursor#38 ← phi( menu::@16/(byte*) print_char_cursor#56 menu::@46/(byte*) print_char_cursor#14 )
  (byte*) print_line_cursor#36 ← phi( menu::@16/(byte*) print_line_cursor#53 menu::@46/(byte*) print_line_cursor#13 )
  (byte*) print_screen#20 ← phi( menu::@16/(byte*) print_screen#35 menu::@46/(byte*) print_screen#36 )
  if(true) goto menu::@4
  to:menu::@return
menu::@4: scope:[menu]  from menu::@3
  (byte*) print_char_cursor#83 ← phi( menu::@3/(byte*) print_char_cursor#38 )
  (byte*) print_line_cursor#83 ← phi( menu::@3/(byte*) print_line_cursor#36 )
  (byte*) print_screen#64 ← phi( menu::@3/(byte*) print_screen#20 )
  (byte) keyboard_key_pressed::key#0 ← (byte) KEY_1#0
  call keyboard_key_pressed param-assignment
  (byte) keyboard_key_pressed::return#2 ← (byte) keyboard_key_pressed::return#1
  to:menu::@47
menu::@47: scope:[menu]  from menu::@4
  (byte*) print_char_cursor#71 ← phi( menu::@4/(byte*) print_char_cursor#83 )
  (byte*) print_line_cursor#70 ← phi( menu::@4/(byte*) print_line_cursor#83 )
  (byte*) print_screen#52 ← phi( menu::@4/(byte*) print_screen#64 )
  (byte) keyboard_key_pressed::return#25 ← phi( menu::@4/(byte) keyboard_key_pressed::return#2 )
  (byte~) menu::$29 ← (byte) keyboard_key_pressed::return#25
  (boolean~) menu::$30 ← (byte~) menu::$29 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$31 ← ! (boolean~) menu::$30
  if((boolean~) menu::$31) goto menu::@6
  to:menu::@21
menu::@6: scope:[menu]  from menu::@47
  (byte*) print_char_cursor#84 ← phi( menu::@47/(byte*) print_char_cursor#71 )
  (byte*) print_line_cursor#84 ← phi( menu::@47/(byte*) print_line_cursor#70 )
  (byte*) print_screen#65 ← phi( menu::@47/(byte*) print_screen#52 )
  (byte) keyboard_key_pressed::key#1 ← (byte) KEY_2#0
  call keyboard_key_pressed param-assignment
  (byte) keyboard_key_pressed::return#3 ← (byte) keyboard_key_pressed::return#1
  to:menu::@48
menu::@48: scope:[menu]  from menu::@6
  (byte*) print_char_cursor#72 ← phi( menu::@6/(byte*) print_char_cursor#84 )
  (byte*) print_line_cursor#71 ← phi( menu::@6/(byte*) print_line_cursor#84 )
  (byte*) print_screen#53 ← phi( menu::@6/(byte*) print_screen#65 )
  (byte) keyboard_key_pressed::return#26 ← phi( menu::@6/(byte) keyboard_key_pressed::return#3 )
  (byte~) menu::$33 ← (byte) keyboard_key_pressed::return#26
  (boolean~) menu::$34 ← (byte~) menu::$33 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$35 ← ! (boolean~) menu::$34
  if((boolean~) menu::$35) goto menu::@7
  to:menu::@23
menu::@21: scope:[menu]  from menu::@47
  (byte*) print_char_cursor#57 ← phi( menu::@47/(byte*) print_char_cursor#71 )
  (byte*) print_line_cursor#54 ← phi( menu::@47/(byte*) print_line_cursor#70 )
  (byte*) print_screen#37 ← phi( menu::@47/(byte*) print_screen#52 )
  call mode_stdchar param-assignment
  to:menu::@49
menu::@49: scope:[menu]  from menu::@21
  (byte*) print_char_cursor#39 ← phi( menu::@21/(byte*) print_char_cursor#57 )
  (byte*) print_line_cursor#37 ← phi( menu::@21/(byte*) print_line_cursor#54 )
  (byte*) print_screen#21 ← phi( menu::@21/(byte*) print_screen#37 )
  to:menu::@return
menu::@return: scope:[menu]  from menu::@3 menu::@49 menu::@51 menu::@53 menu::@55 menu::@57 menu::@59 menu::@61 menu::@63 menu::@65 menu::@67 menu::@68
  (byte*) print_char_cursor#29 ← phi( menu::@3/(byte*) print_char_cursor#38 menu::@49/(byte*) print_char_cursor#39 menu::@51/(byte*) print_char_cursor#40 menu::@53/(byte*) print_char_cursor#41 menu::@55/(byte*) print_char_cursor#42 menu::@57/(byte*) print_char_cursor#43 menu::@59/(byte*) print_char_cursor#44 menu::@61/(byte*) print_char_cursor#45 menu::@63/(byte*) print_char_cursor#46 menu::@65/(byte*) print_char_cursor#47 menu::@67/(byte*) print_char_cursor#48 menu::@68/(byte*) print_char_cursor#49 )
  (byte*) print_line_cursor#28 ← phi( menu::@3/(byte*) print_line_cursor#36 menu::@49/(byte*) print_line_cursor#37 menu::@51/(byte*) print_line_cursor#38 menu::@53/(byte*) print_line_cursor#39 menu::@55/(byte*) print_line_cursor#40 menu::@57/(byte*) print_line_cursor#41 menu::@59/(byte*) print_line_cursor#42 menu::@61/(byte*) print_line_cursor#43 menu::@63/(byte*) print_line_cursor#44 menu::@65/(byte*) print_line_cursor#45 menu::@67/(byte*) print_line_cursor#46 menu::@68/(byte*) print_line_cursor#47 )
  (byte*) print_screen#15 ← phi( menu::@3/(byte*) print_screen#20 menu::@49/(byte*) print_screen#21 menu::@51/(byte*) print_screen#22 menu::@53/(byte*) print_screen#23 menu::@55/(byte*) print_screen#24 menu::@57/(byte*) print_screen#25 menu::@59/(byte*) print_screen#26 menu::@61/(byte*) print_screen#27 menu::@63/(byte*) print_screen#28 menu::@65/(byte*) print_screen#29 menu::@67/(byte*) print_screen#30 menu::@68/(byte*) print_screen#31 )
  (byte*) print_screen#6 ← (byte*) print_screen#15
  (byte*) print_line_cursor#14 ← (byte*) print_line_cursor#28
  (byte*) print_char_cursor#15 ← (byte*) print_char_cursor#29
  return 
  to:@return
menu::@7: scope:[menu]  from menu::@48
  (byte*) print_char_cursor#85 ← phi( menu::@48/(byte*) print_char_cursor#72 )
  (byte*) print_line_cursor#85 ← phi( menu::@48/(byte*) print_line_cursor#71 )
  (byte*) print_screen#66 ← phi( menu::@48/(byte*) print_screen#53 )
  (byte) keyboard_key_pressed::key#2 ← (byte) KEY_3#0
  call keyboard_key_pressed param-assignment
  (byte) keyboard_key_pressed::return#4 ← (byte) keyboard_key_pressed::return#1
  to:menu::@50
menu::@50: scope:[menu]  from menu::@7
  (byte*) print_char_cursor#73 ← phi( menu::@7/(byte*) print_char_cursor#85 )
  (byte*) print_line_cursor#72 ← phi( menu::@7/(byte*) print_line_cursor#85 )
  (byte*) print_screen#54 ← phi( menu::@7/(byte*) print_screen#66 )
  (byte) keyboard_key_pressed::return#27 ← phi( menu::@7/(byte) keyboard_key_pressed::return#4 )
  (byte~) menu::$37 ← (byte) keyboard_key_pressed::return#27
  (boolean~) menu::$38 ← (byte~) menu::$37 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$39 ← ! (boolean~) menu::$38
  if((boolean~) menu::$39) goto menu::@8
  to:menu::@25
menu::@23: scope:[menu]  from menu::@48
  (byte*) print_char_cursor#58 ← phi( menu::@48/(byte*) print_char_cursor#72 )
  (byte*) print_line_cursor#55 ← phi( menu::@48/(byte*) print_line_cursor#71 )
  (byte*) print_screen#38 ← phi( menu::@48/(byte*) print_screen#53 )
  call mode_ecmchar param-assignment
  to:menu::@51
menu::@51: scope:[menu]  from menu::@23
  (byte*) print_char_cursor#40 ← phi( menu::@23/(byte*) print_char_cursor#58 )
  (byte*) print_line_cursor#38 ← phi( menu::@23/(byte*) print_line_cursor#55 )
  (byte*) print_screen#22 ← phi( menu::@23/(byte*) print_screen#38 )
  to:menu::@return
menu::@8: scope:[menu]  from menu::@50
  (byte*) print_char_cursor#86 ← phi( menu::@50/(byte*) print_char_cursor#73 )
  (byte*) print_line_cursor#86 ← phi( menu::@50/(byte*) print_line_cursor#72 )
  (byte*) print_screen#67 ← phi( menu::@50/(byte*) print_screen#54 )
  (byte) keyboard_key_pressed::key#3 ← (byte) KEY_6#0
  call keyboard_key_pressed param-assignment
  (byte) keyboard_key_pressed::return#5 ← (byte) keyboard_key_pressed::return#1
  to:menu::@52
menu::@52: scope:[menu]  from menu::@8
  (byte*) print_char_cursor#74 ← phi( menu::@8/(byte*) print_char_cursor#86 )
  (byte*) print_line_cursor#73 ← phi( menu::@8/(byte*) print_line_cursor#86 )
  (byte*) print_screen#55 ← phi( menu::@8/(byte*) print_screen#67 )
  (byte) keyboard_key_pressed::return#28 ← phi( menu::@8/(byte) keyboard_key_pressed::return#5 )
  (byte~) menu::$41 ← (byte) keyboard_key_pressed::return#28
  (boolean~) menu::$42 ← (byte~) menu::$41 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$43 ← ! (boolean~) menu::$42
  if((boolean~) menu::$43) goto menu::@9
  to:menu::@27
menu::@25: scope:[menu]  from menu::@50
  (byte*) print_char_cursor#59 ← phi( menu::@50/(byte*) print_char_cursor#73 )
  (byte*) print_line_cursor#56 ← phi( menu::@50/(byte*) print_line_cursor#72 )
  (byte*) print_screen#39 ← phi( menu::@50/(byte*) print_screen#54 )
  call mode_mcchar param-assignment
  to:menu::@53
menu::@53: scope:[menu]  from menu::@25
  (byte*) print_char_cursor#41 ← phi( menu::@25/(byte*) print_char_cursor#59 )
  (byte*) print_line_cursor#39 ← phi( menu::@25/(byte*) print_line_cursor#56 )
  (byte*) print_screen#23 ← phi( menu::@25/(byte*) print_screen#39 )
  to:menu::@return
menu::@9: scope:[menu]  from menu::@52
  (byte*) print_char_cursor#87 ← phi( menu::@52/(byte*) print_char_cursor#74 )
  (byte*) print_line_cursor#87 ← phi( menu::@52/(byte*) print_line_cursor#73 )
  (byte*) print_screen#68 ← phi( menu::@52/(byte*) print_screen#55 )
  (byte) keyboard_key_pressed::key#4 ← (byte) KEY_7#0
  call keyboard_key_pressed param-assignment
  (byte) keyboard_key_pressed::return#6 ← (byte) keyboard_key_pressed::return#1
  to:menu::@54
menu::@54: scope:[menu]  from menu::@9
  (byte*) print_char_cursor#75 ← phi( menu::@9/(byte*) print_char_cursor#87 )
  (byte*) print_line_cursor#74 ← phi( menu::@9/(byte*) print_line_cursor#87 )
  (byte*) print_screen#56 ← phi( menu::@9/(byte*) print_screen#68 )
  (byte) keyboard_key_pressed::return#29 ← phi( menu::@9/(byte) keyboard_key_pressed::return#6 )
  (byte~) menu::$45 ← (byte) keyboard_key_pressed::return#29
  (boolean~) menu::$46 ← (byte~) menu::$45 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$47 ← ! (boolean~) menu::$46
  if((boolean~) menu::$47) goto menu::@10
  to:menu::@29
menu::@27: scope:[menu]  from menu::@52
  (byte*) print_char_cursor#60 ← phi( menu::@52/(byte*) print_char_cursor#74 )
  (byte*) print_line_cursor#57 ← phi( menu::@52/(byte*) print_line_cursor#73 )
  (byte*) print_screen#40 ← phi( menu::@52/(byte*) print_screen#55 )
  call mode_hicolstdchar param-assignment
  to:menu::@55
menu::@55: scope:[menu]  from menu::@27
  (byte*) print_char_cursor#42 ← phi( menu::@27/(byte*) print_char_cursor#60 )
  (byte*) print_line_cursor#40 ← phi( menu::@27/(byte*) print_line_cursor#57 )
  (byte*) print_screen#24 ← phi( menu::@27/(byte*) print_screen#40 )
  to:menu::@return
menu::@10: scope:[menu]  from menu::@54
  (byte*) print_char_cursor#88 ← phi( menu::@54/(byte*) print_char_cursor#75 )
  (byte*) print_line_cursor#88 ← phi( menu::@54/(byte*) print_line_cursor#74 )
  (byte*) print_screen#69 ← phi( menu::@54/(byte*) print_screen#56 )
  (byte) keyboard_key_pressed::key#5 ← (byte) KEY_8#0
  call keyboard_key_pressed param-assignment
  (byte) keyboard_key_pressed::return#7 ← (byte) keyboard_key_pressed::return#1
  to:menu::@56
menu::@56: scope:[menu]  from menu::@10
  (byte*) print_char_cursor#76 ← phi( menu::@10/(byte*) print_char_cursor#88 )
  (byte*) print_line_cursor#75 ← phi( menu::@10/(byte*) print_line_cursor#88 )
  (byte*) print_screen#57 ← phi( menu::@10/(byte*) print_screen#69 )
  (byte) keyboard_key_pressed::return#30 ← phi( menu::@10/(byte) keyboard_key_pressed::return#7 )
  (byte~) menu::$49 ← (byte) keyboard_key_pressed::return#30
  (boolean~) menu::$50 ← (byte~) menu::$49 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$51 ← ! (boolean~) menu::$50
  if((boolean~) menu::$51) goto menu::@11
  to:menu::@31
menu::@29: scope:[menu]  from menu::@54
  (byte*) print_char_cursor#61 ← phi( menu::@54/(byte*) print_char_cursor#75 )
  (byte*) print_line_cursor#58 ← phi( menu::@54/(byte*) print_line_cursor#74 )
  (byte*) print_screen#41 ← phi( menu::@54/(byte*) print_screen#56 )
  call mode_hicolecmchar param-assignment
  to:menu::@57
menu::@57: scope:[menu]  from menu::@29
  (byte*) print_char_cursor#43 ← phi( menu::@29/(byte*) print_char_cursor#61 )
  (byte*) print_line_cursor#41 ← phi( menu::@29/(byte*) print_line_cursor#58 )
  (byte*) print_screen#25 ← phi( menu::@29/(byte*) print_screen#41 )
  to:menu::@return
menu::@11: scope:[menu]  from menu::@56
  (byte*) print_char_cursor#89 ← phi( menu::@56/(byte*) print_char_cursor#76 )
  (byte*) print_line_cursor#89 ← phi( menu::@56/(byte*) print_line_cursor#75 )
  (byte*) print_screen#70 ← phi( menu::@56/(byte*) print_screen#57 )
  (byte) keyboard_key_pressed::key#6 ← (byte) KEY_A#0
  call keyboard_key_pressed param-assignment
  (byte) keyboard_key_pressed::return#8 ← (byte) keyboard_key_pressed::return#1
  to:menu::@58
menu::@58: scope:[menu]  from menu::@11
  (byte*) print_char_cursor#77 ← phi( menu::@11/(byte*) print_char_cursor#89 )
  (byte*) print_line_cursor#76 ← phi( menu::@11/(byte*) print_line_cursor#89 )
  (byte*) print_screen#58 ← phi( menu::@11/(byte*) print_screen#70 )
  (byte) keyboard_key_pressed::return#31 ← phi( menu::@11/(byte) keyboard_key_pressed::return#8 )
  (byte~) menu::$53 ← (byte) keyboard_key_pressed::return#31
  (boolean~) menu::$54 ← (byte~) menu::$53 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$55 ← ! (boolean~) menu::$54
  if((boolean~) menu::$55) goto menu::@12
  to:menu::@33
menu::@31: scope:[menu]  from menu::@56
  (byte*) print_char_cursor#62 ← phi( menu::@56/(byte*) print_char_cursor#76 )
  (byte*) print_line_cursor#59 ← phi( menu::@56/(byte*) print_line_cursor#75 )
  (byte*) print_screen#42 ← phi( menu::@56/(byte*) print_screen#57 )
  call mode_hicolmcchar param-assignment
  to:menu::@59
menu::@59: scope:[menu]  from menu::@31
  (byte*) print_char_cursor#44 ← phi( menu::@31/(byte*) print_char_cursor#62 )
  (byte*) print_line_cursor#42 ← phi( menu::@31/(byte*) print_line_cursor#59 )
  (byte*) print_screen#26 ← phi( menu::@31/(byte*) print_screen#42 )
  to:menu::@return
menu::@12: scope:[menu]  from menu::@58
  (byte*) print_char_cursor#90 ← phi( menu::@58/(byte*) print_char_cursor#77 )
  (byte*) print_line_cursor#90 ← phi( menu::@58/(byte*) print_line_cursor#76 )
  (byte*) print_screen#71 ← phi( menu::@58/(byte*) print_screen#58 )
  (byte) keyboard_key_pressed::key#7 ← (byte) KEY_B#0
  call keyboard_key_pressed param-assignment
  (byte) keyboard_key_pressed::return#9 ← (byte) keyboard_key_pressed::return#1
  to:menu::@60
menu::@60: scope:[menu]  from menu::@12
  (byte*) print_char_cursor#78 ← phi( menu::@12/(byte*) print_char_cursor#90 )
  (byte*) print_line_cursor#77 ← phi( menu::@12/(byte*) print_line_cursor#90 )
  (byte*) print_screen#59 ← phi( menu::@12/(byte*) print_screen#71 )
  (byte) keyboard_key_pressed::return#32 ← phi( menu::@12/(byte) keyboard_key_pressed::return#9 )
  (byte~) menu::$57 ← (byte) keyboard_key_pressed::return#32
  (boolean~) menu::$58 ← (byte~) menu::$57 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$59 ← ! (boolean~) menu::$58
  if((boolean~) menu::$59) goto menu::@13
  to:menu::@35
menu::@33: scope:[menu]  from menu::@58
  (byte*) print_char_cursor#63 ← phi( menu::@58/(byte*) print_char_cursor#77 )
  (byte*) print_line_cursor#60 ← phi( menu::@58/(byte*) print_line_cursor#76 )
  (byte*) print_screen#43 ← phi( menu::@58/(byte*) print_screen#58 )
  call mode_sixsfred2 param-assignment
  to:menu::@61
menu::@61: scope:[menu]  from menu::@33
  (byte*) print_char_cursor#45 ← phi( menu::@33/(byte*) print_char_cursor#63 )
  (byte*) print_line_cursor#43 ← phi( menu::@33/(byte*) print_line_cursor#60 )
  (byte*) print_screen#27 ← phi( menu::@33/(byte*) print_screen#43 )
  to:menu::@return
menu::@13: scope:[menu]  from menu::@60
  (byte*) print_char_cursor#91 ← phi( menu::@60/(byte*) print_char_cursor#78 )
  (byte*) print_line_cursor#91 ← phi( menu::@60/(byte*) print_line_cursor#77 )
  (byte*) print_screen#72 ← phi( menu::@60/(byte*) print_screen#59 )
  (byte) keyboard_key_pressed::key#8 ← (byte) KEY_C#0
  call keyboard_key_pressed param-assignment
  (byte) keyboard_key_pressed::return#10 ← (byte) keyboard_key_pressed::return#1
  to:menu::@62
menu::@62: scope:[menu]  from menu::@13
  (byte*) print_char_cursor#79 ← phi( menu::@13/(byte*) print_char_cursor#91 )
  (byte*) print_line_cursor#78 ← phi( menu::@13/(byte*) print_line_cursor#91 )
  (byte*) print_screen#60 ← phi( menu::@13/(byte*) print_screen#72 )
  (byte) keyboard_key_pressed::return#33 ← phi( menu::@13/(byte) keyboard_key_pressed::return#10 )
  (byte~) menu::$61 ← (byte) keyboard_key_pressed::return#33
  (boolean~) menu::$62 ← (byte~) menu::$61 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$63 ← ! (boolean~) menu::$62
  if((boolean~) menu::$63) goto menu::@14
  to:menu::@37
menu::@35: scope:[menu]  from menu::@60
  (byte*) print_char_cursor#64 ← phi( menu::@60/(byte*) print_char_cursor#78 )
  (byte*) print_line_cursor#61 ← phi( menu::@60/(byte*) print_line_cursor#77 )
  (byte*) print_screen#44 ← phi( menu::@60/(byte*) print_screen#59 )
  call mode_twoplanebitmap param-assignment
  to:menu::@63
menu::@63: scope:[menu]  from menu::@35
  (byte*) print_char_cursor#46 ← phi( menu::@35/(byte*) print_char_cursor#64 )
  (byte*) print_line_cursor#44 ← phi( menu::@35/(byte*) print_line_cursor#61 )
  (byte*) print_screen#28 ← phi( menu::@35/(byte*) print_screen#44 )
  to:menu::@return
menu::@14: scope:[menu]  from menu::@62
  (byte*) print_char_cursor#92 ← phi( menu::@62/(byte*) print_char_cursor#79 )
  (byte*) print_line_cursor#92 ← phi( menu::@62/(byte*) print_line_cursor#78 )
  (byte*) print_screen#73 ← phi( menu::@62/(byte*) print_screen#60 )
  (byte) keyboard_key_pressed::key#9 ← (byte) KEY_D#0
  call keyboard_key_pressed param-assignment
  (byte) keyboard_key_pressed::return#11 ← (byte) keyboard_key_pressed::return#1
  to:menu::@64
menu::@64: scope:[menu]  from menu::@14
  (byte*) print_char_cursor#80 ← phi( menu::@14/(byte*) print_char_cursor#92 )
  (byte*) print_line_cursor#79 ← phi( menu::@14/(byte*) print_line_cursor#92 )
  (byte*) print_screen#61 ← phi( menu::@14/(byte*) print_screen#73 )
  (byte) keyboard_key_pressed::return#34 ← phi( menu::@14/(byte) keyboard_key_pressed::return#11 )
  (byte~) menu::$65 ← (byte) keyboard_key_pressed::return#34
  (boolean~) menu::$66 ← (byte~) menu::$65 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$67 ← ! (boolean~) menu::$66
  if((boolean~) menu::$67) goto menu::@15
  to:menu::@39
menu::@37: scope:[menu]  from menu::@62
  (byte*) print_char_cursor#65 ← phi( menu::@62/(byte*) print_char_cursor#79 )
  (byte*) print_line_cursor#62 ← phi( menu::@62/(byte*) print_line_cursor#78 )
  (byte*) print_screen#45 ← phi( menu::@62/(byte*) print_screen#60 )
  call mode_sixsfred param-assignment
  to:menu::@65
menu::@65: scope:[menu]  from menu::@37
  (byte*) print_char_cursor#47 ← phi( menu::@37/(byte*) print_char_cursor#65 )
  (byte*) print_line_cursor#45 ← phi( menu::@37/(byte*) print_line_cursor#62 )
  (byte*) print_screen#29 ← phi( menu::@37/(byte*) print_screen#45 )
  to:menu::@return
menu::@15: scope:[menu]  from menu::@64
  (byte*) print_char_cursor#93 ← phi( menu::@64/(byte*) print_char_cursor#80 )
  (byte*) print_line_cursor#93 ← phi( menu::@64/(byte*) print_line_cursor#79 )
  (byte*) print_screen#74 ← phi( menu::@64/(byte*) print_screen#61 )
  (byte) keyboard_key_pressed::key#10 ← (byte) KEY_E#0
  call keyboard_key_pressed param-assignment
  (byte) keyboard_key_pressed::return#12 ← (byte) keyboard_key_pressed::return#1
  to:menu::@66
menu::@66: scope:[menu]  from menu::@15
  (byte*) print_char_cursor#81 ← phi( menu::@15/(byte*) print_char_cursor#93 )
  (byte*) print_line_cursor#80 ← phi( menu::@15/(byte*) print_line_cursor#93 )
  (byte*) print_screen#62 ← phi( menu::@15/(byte*) print_screen#74 )
  (byte) keyboard_key_pressed::return#35 ← phi( menu::@15/(byte) keyboard_key_pressed::return#12 )
  (byte~) menu::$69 ← (byte) keyboard_key_pressed::return#35
  (boolean~) menu::$70 ← (byte~) menu::$69 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) menu::$71 ← ! (boolean~) menu::$70
  if((boolean~) menu::$71) goto menu::@16
  to:menu::@41
menu::@39: scope:[menu]  from menu::@64
  (byte*) print_char_cursor#66 ← phi( menu::@64/(byte*) print_char_cursor#80 )
  (byte*) print_line_cursor#63 ← phi( menu::@64/(byte*) print_line_cursor#79 )
  (byte*) print_screen#46 ← phi( menu::@64/(byte*) print_screen#61 )
  call mode_8bpppixelcell param-assignment
  to:menu::@67
menu::@67: scope:[menu]  from menu::@39
  (byte*) print_char_cursor#48 ← phi( menu::@39/(byte*) print_char_cursor#66 )
  (byte*) print_line_cursor#46 ← phi( menu::@39/(byte*) print_line_cursor#63 )
  (byte*) print_screen#30 ← phi( menu::@39/(byte*) print_screen#46 )
  to:menu::@return
menu::@16: scope:[menu]  from menu::@66
  (byte*) print_char_cursor#56 ← phi( menu::@66/(byte*) print_char_cursor#81 )
  (byte*) print_line_cursor#53 ← phi( menu::@66/(byte*) print_line_cursor#80 )
  (byte*) print_screen#35 ← phi( menu::@66/(byte*) print_screen#62 )
  to:menu::@3
menu::@41: scope:[menu]  from menu::@66
  (byte*) print_char_cursor#67 ← phi( menu::@66/(byte*) print_char_cursor#81 )
  (byte*) print_line_cursor#64 ← phi( menu::@66/(byte*) print_line_cursor#80 )
  (byte*) print_screen#47 ← phi( menu::@66/(byte*) print_screen#62 )
  call mode_8bppchunkybmm param-assignment
  to:menu::@68
menu::@68: scope:[menu]  from menu::@41
  (byte*) print_char_cursor#49 ← phi( menu::@41/(byte*) print_char_cursor#67 )
  (byte*) print_line_cursor#47 ← phi( menu::@41/(byte*) print_line_cursor#64 )
  (byte*) print_screen#31 ← phi( menu::@41/(byte*) print_screen#47 )
  to:menu::@return
mode_stdchar: scope:[mode_stdchar]  from menu::@21
  (byte*) mode_stdchar::SCREEN#0 ← ((byte*)) (word/dword/signed dword) 32768
  (byte*) mode_stdchar::CHARSET#0 ← ((byte*)) (word/dword/signed dword) 36864
  (byte*) mode_stdchar::COLORS#0 ← ((byte*)) (word/dword/signed dword) 33792
  (dword~) mode_stdchar::$0 ← ((dword)) (byte*) mode_stdchar::CHARSET#0
  (dword~) mode_stdchar::$1 ← (dword~) mode_stdchar::$0 / (dword/signed dword) 65536
  (byte~) mode_stdchar::$2 ← ((byte)) (dword~) mode_stdchar::$1
  *((byte*) DTV_GRAPHICS_VIC_BANK#0) ← (byte~) mode_stdchar::$2
  (byte*~) mode_stdchar::$3 ← (byte*) mode_stdchar::COLORS#0 / (word/signed word/dword/signed dword) 1024
  (word~) mode_stdchar::$4 ← ((word)) (byte*~) mode_stdchar::$3
  (byte~) mode_stdchar::$5 ← < (word~) mode_stdchar::$4
  *((byte*) DTV_COLOR_BANK_LO#0) ← (byte~) mode_stdchar::$5
  (byte*~) mode_stdchar::$6 ← (byte*) mode_stdchar::COLORS#0 / (word/signed word/dword/signed dword) 1024
  (word~) mode_stdchar::$7 ← ((word)) (byte*~) mode_stdchar::$6
  (byte~) mode_stdchar::$8 ← > (word~) mode_stdchar::$7
  *((byte*) DTV_COLOR_BANK_HI#0) ← (byte~) mode_stdchar::$8
  *((byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (word~) mode_stdchar::$9 ← ((word)) (byte*) mode_stdchar::CHARSET#0
  (word/signed dword/dword~) mode_stdchar::$10 ← (word~) mode_stdchar::$9 / (word/signed word/dword/signed dword) 16384
  (byte~) mode_stdchar::$11 ← ((byte)) (word/signed dword/dword~) mode_stdchar::$10
  (byte/word/dword~) mode_stdchar::$12 ← (byte/signed byte/word/signed word/dword/signed dword) 3 ^ (byte~) mode_stdchar::$11
  *((byte*) CIA2_PORT_A#0) ← (byte/word/dword~) mode_stdchar::$12
  (byte~) mode_stdchar::$13 ← (byte) VIC_DEN#0 | (byte) VIC_RSEL#0
  (byte/word/dword~) mode_stdchar::$14 ← (byte~) mode_stdchar::$13 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL#0) ← (byte/word/dword~) mode_stdchar::$14
  *((byte*) VIC_CONTROL2#0) ← (byte) VIC_CSEL#0
  (word~) mode_stdchar::$15 ← ((word)) (byte*) mode_stdchar::SCREEN#0
  (word~) mode_stdchar::$16 ← (word~) mode_stdchar::$15 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_stdchar::$17 ← (word~) mode_stdchar::$16 / (byte/signed byte/word/signed word/dword/signed dword) 64
  (word~) mode_stdchar::$18 ← ((word)) (byte*) mode_stdchar::CHARSET#0
  (word~) mode_stdchar::$19 ← (word~) mode_stdchar::$18 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_stdchar::$20 ← (word~) mode_stdchar::$19 / (word/signed word/dword/signed dword) 1024
  (word/dword~) mode_stdchar::$21 ← (word/signed dword/dword~) mode_stdchar::$17 | (word/signed dword/dword~) mode_stdchar::$20
  (byte~) mode_stdchar::$22 ← ((byte)) (word/dword~) mode_stdchar::$21
  *((byte*) VIC_MEMORY#0) ← (byte~) mode_stdchar::$22
  (byte) mode_stdchar::i#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_stdchar::@1
mode_stdchar::@1: scope:[mode_stdchar]  from mode_stdchar mode_stdchar::@1
  (byte) mode_stdchar::i#2 ← phi( mode_stdchar/(byte) mode_stdchar::i#0 mode_stdchar::@1/(byte) mode_stdchar::i#1 )
  *((byte*) DTV_PALETTE#0 + (byte) mode_stdchar::i#2) ← *((byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) mode_stdchar::i#2)
  (byte) mode_stdchar::i#1 ← ++ (byte) mode_stdchar::i#2
  (boolean~) mode_stdchar::$23 ← (byte) mode_stdchar::i#1 != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_stdchar::$23) goto mode_stdchar::@1
  to:mode_stdchar::@8
mode_stdchar::@8: scope:[mode_stdchar]  from mode_stdchar::@1
  *((byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*) mode_stdchar::col#0 ← (byte*) mode_stdchar::COLORS#0
  (byte*) mode_stdchar::ch#0 ← (byte*) mode_stdchar::SCREEN#0
  (byte) mode_stdchar::cy#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_stdchar::@2
mode_stdchar::@2: scope:[mode_stdchar]  from mode_stdchar::@8 mode_stdchar::@9
  (byte*) mode_stdchar::ch#3 ← phi( mode_stdchar::@8/(byte*) mode_stdchar::ch#0 mode_stdchar::@9/(byte*) mode_stdchar::ch#4 )
  (byte*) mode_stdchar::col#3 ← phi( mode_stdchar::@8/(byte*) mode_stdchar::col#0 mode_stdchar::@9/(byte*) mode_stdchar::col#4 )
  (byte) mode_stdchar::cy#4 ← phi( mode_stdchar::@8/(byte) mode_stdchar::cy#0 mode_stdchar::@9/(byte) mode_stdchar::cy#1 )
  (byte) mode_stdchar::cx#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_stdchar::@3
mode_stdchar::@3: scope:[mode_stdchar]  from mode_stdchar::@2 mode_stdchar::@3
  (byte*) mode_stdchar::ch#2 ← phi( mode_stdchar::@2/(byte*) mode_stdchar::ch#3 mode_stdchar::@3/(byte*) mode_stdchar::ch#1 )
  (byte*) mode_stdchar::col#2 ← phi( mode_stdchar::@2/(byte*) mode_stdchar::col#3 mode_stdchar::@3/(byte*) mode_stdchar::col#1 )
  (byte) mode_stdchar::cy#2 ← phi( mode_stdchar::@2/(byte) mode_stdchar::cy#4 mode_stdchar::@3/(byte) mode_stdchar::cy#2 )
  (byte) mode_stdchar::cx#2 ← phi( mode_stdchar::@2/(byte) mode_stdchar::cx#0 mode_stdchar::@3/(byte) mode_stdchar::cx#1 )
  (byte~) mode_stdchar::$24 ← (byte) mode_stdchar::cx#2 + (byte) mode_stdchar::cy#2
  (byte~) mode_stdchar::$25 ← (byte~) mode_stdchar::$24 & (byte/signed byte/word/signed word/dword/signed dword) 15
  *((byte*) mode_stdchar::col#2) ← (byte~) mode_stdchar::$25
  (byte*) mode_stdchar::col#1 ← ++ (byte*) mode_stdchar::col#2
  (byte~) mode_stdchar::$26 ← (byte) mode_stdchar::cy#2 & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_stdchar::$27 ← (byte~) mode_stdchar::$26 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_stdchar::$28 ← (byte) mode_stdchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_stdchar::$29 ← (byte~) mode_stdchar::$27 | (byte~) mode_stdchar::$28
  *((byte*) mode_stdchar::ch#2) ← (byte~) mode_stdchar::$29
  (byte*) mode_stdchar::ch#1 ← ++ (byte*) mode_stdchar::ch#2
  (byte) mode_stdchar::cx#1 ← ++ (byte) mode_stdchar::cx#2
  (boolean~) mode_stdchar::$30 ← (byte) mode_stdchar::cx#1 != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_stdchar::$30) goto mode_stdchar::@3
  to:mode_stdchar::@9
mode_stdchar::@9: scope:[mode_stdchar]  from mode_stdchar::@3
  (byte*) mode_stdchar::ch#4 ← phi( mode_stdchar::@3/(byte*) mode_stdchar::ch#1 )
  (byte*) mode_stdchar::col#4 ← phi( mode_stdchar::@3/(byte*) mode_stdchar::col#1 )
  (byte) mode_stdchar::cy#3 ← phi( mode_stdchar::@3/(byte) mode_stdchar::cy#2 )
  (byte) mode_stdchar::cy#1 ← ++ (byte) mode_stdchar::cy#3
  (boolean~) mode_stdchar::$31 ← (byte) mode_stdchar::cy#1 != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_stdchar::$31) goto mode_stdchar::@2
  to:mode_stdchar::@4
mode_stdchar::@4: scope:[mode_stdchar]  from mode_stdchar::@7 mode_stdchar::@9
  if(true) goto mode_stdchar::@5
  to:mode_stdchar::@return
mode_stdchar::@5: scope:[mode_stdchar]  from mode_stdchar::@4
  (byte) keyboard_key_pressed::key#11 ← (byte) KEY_SPACE#0
  call keyboard_key_pressed param-assignment
  (byte) keyboard_key_pressed::return#13 ← (byte) keyboard_key_pressed::return#1
  to:mode_stdchar::@16
mode_stdchar::@16: scope:[mode_stdchar]  from mode_stdchar::@5
  (byte) keyboard_key_pressed::return#36 ← phi( mode_stdchar::@5/(byte) keyboard_key_pressed::return#13 )
  (byte~) mode_stdchar::$32 ← (byte) keyboard_key_pressed::return#36
  (boolean~) mode_stdchar::$33 ← (byte~) mode_stdchar::$32 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_stdchar::$34 ← ! (boolean~) mode_stdchar::$33
  if((boolean~) mode_stdchar::$34) goto mode_stdchar::@7
  to:mode_stdchar::@return
mode_stdchar::@7: scope:[mode_stdchar]  from mode_stdchar::@16
  to:mode_stdchar::@4
mode_stdchar::@return: scope:[mode_stdchar]  from mode_stdchar::@16 mode_stdchar::@4
  return 
  to:@return
mode_ecmchar: scope:[mode_ecmchar]  from menu::@23
  (byte*) mode_ecmchar::ECMCHAR_SCREEN#0 ← ((byte*)) (word/dword/signed dword) 32768
  (byte*) mode_ecmchar::ECMCHAR_CHARSET#0 ← ((byte*)) (word/dword/signed dword) 36864
  (byte*) mode_ecmchar::ECMCHAR_COLORS#0 ← ((byte*)) (word/dword/signed dword) 33792
  (dword~) mode_ecmchar::$0 ← ((dword)) (byte*) mode_ecmchar::ECMCHAR_CHARSET#0
  (dword~) mode_ecmchar::$1 ← (dword~) mode_ecmchar::$0 / (dword/signed dword) 65536
  (byte~) mode_ecmchar::$2 ← ((byte)) (dword~) mode_ecmchar::$1
  *((byte*) DTV_GRAPHICS_VIC_BANK#0) ← (byte~) mode_ecmchar::$2
  (byte*~) mode_ecmchar::$3 ← (byte*) mode_ecmchar::ECMCHAR_COLORS#0 / (word/signed word/dword/signed dword) 1024
  (word~) mode_ecmchar::$4 ← ((word)) (byte*~) mode_ecmchar::$3
  (byte~) mode_ecmchar::$5 ← < (word~) mode_ecmchar::$4
  *((byte*) DTV_COLOR_BANK_LO#0) ← (byte~) mode_ecmchar::$5
  (byte*~) mode_ecmchar::$6 ← (byte*) mode_ecmchar::ECMCHAR_COLORS#0 / (word/signed word/dword/signed dword) 1024
  (word~) mode_ecmchar::$7 ← ((word)) (byte*~) mode_ecmchar::$6
  (byte~) mode_ecmchar::$8 ← > (word~) mode_ecmchar::$7
  *((byte*) DTV_COLOR_BANK_HI#0) ← (byte~) mode_ecmchar::$8
  *((byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (word~) mode_ecmchar::$9 ← ((word)) (byte*) mode_ecmchar::ECMCHAR_CHARSET#0
  (word/signed dword/dword~) mode_ecmchar::$10 ← (word~) mode_ecmchar::$9 / (word/signed word/dword/signed dword) 16384
  (byte~) mode_ecmchar::$11 ← ((byte)) (word/signed dword/dword~) mode_ecmchar::$10
  (byte/word/dword~) mode_ecmchar::$12 ← (byte/signed byte/word/signed word/dword/signed dword) 3 ^ (byte~) mode_ecmchar::$11
  *((byte*) CIA2_PORT_A#0) ← (byte/word/dword~) mode_ecmchar::$12
  (byte~) mode_ecmchar::$13 ← (byte) VIC_DEN#0 | (byte) VIC_RSEL#0
  (byte~) mode_ecmchar::$14 ← (byte~) mode_ecmchar::$13 | (byte) VIC_ECM#0
  (byte/word/dword~) mode_ecmchar::$15 ← (byte~) mode_ecmchar::$14 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL#0) ← (byte/word/dword~) mode_ecmchar::$15
  *((byte*) VIC_CONTROL2#0) ← (byte) VIC_CSEL#0
  (word~) mode_ecmchar::$16 ← ((word)) (byte*) mode_ecmchar::ECMCHAR_SCREEN#0
  (word~) mode_ecmchar::$17 ← (word~) mode_ecmchar::$16 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_ecmchar::$18 ← (word~) mode_ecmchar::$17 / (byte/signed byte/word/signed word/dword/signed dword) 64
  (word~) mode_ecmchar::$19 ← ((word)) (byte*) mode_ecmchar::ECMCHAR_CHARSET#0
  (word~) mode_ecmchar::$20 ← (word~) mode_ecmchar::$19 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_ecmchar::$21 ← (word~) mode_ecmchar::$20 / (word/signed word/dword/signed dword) 1024
  (word/dword~) mode_ecmchar::$22 ← (word/signed dword/dword~) mode_ecmchar::$18 | (word/signed dword/dword~) mode_ecmchar::$21
  (byte~) mode_ecmchar::$23 ← ((byte)) (word/dword~) mode_ecmchar::$22
  *((byte*) VIC_MEMORY#0) ← (byte~) mode_ecmchar::$23
  (byte) mode_ecmchar::i#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_ecmchar::@1
mode_ecmchar::@1: scope:[mode_ecmchar]  from mode_ecmchar mode_ecmchar::@1
  (byte) mode_ecmchar::i#2 ← phi( mode_ecmchar/(byte) mode_ecmchar::i#0 mode_ecmchar::@1/(byte) mode_ecmchar::i#1 )
  *((byte*) DTV_PALETTE#0 + (byte) mode_ecmchar::i#2) ← *((byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) mode_ecmchar::i#2)
  (byte) mode_ecmchar::i#1 ← ++ (byte) mode_ecmchar::i#2
  (boolean~) mode_ecmchar::$24 ← (byte) mode_ecmchar::i#1 != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_ecmchar::$24) goto mode_ecmchar::@1
  to:mode_ecmchar::@8
mode_ecmchar::@8: scope:[mode_ecmchar]  from mode_ecmchar::@1
  *((byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BGCOL2#0) ← (byte/signed byte/word/signed word/dword/signed dword) 2
  *((byte*) BGCOL3#0) ← (byte/signed byte/word/signed word/dword/signed dword) 5
  *((byte*) BGCOL4#0) ← (byte/signed byte/word/signed word/dword/signed dword) 6
  (byte*) mode_ecmchar::col#0 ← (byte*) mode_ecmchar::ECMCHAR_COLORS#0
  (byte*) mode_ecmchar::ch#0 ← (byte*) mode_ecmchar::ECMCHAR_SCREEN#0
  (byte) mode_ecmchar::cy#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_ecmchar::@2
mode_ecmchar::@2: scope:[mode_ecmchar]  from mode_ecmchar::@8 mode_ecmchar::@9
  (byte*) mode_ecmchar::ch#3 ← phi( mode_ecmchar::@8/(byte*) mode_ecmchar::ch#0 mode_ecmchar::@9/(byte*) mode_ecmchar::ch#4 )
  (byte*) mode_ecmchar::col#3 ← phi( mode_ecmchar::@8/(byte*) mode_ecmchar::col#0 mode_ecmchar::@9/(byte*) mode_ecmchar::col#4 )
  (byte) mode_ecmchar::cy#4 ← phi( mode_ecmchar::@8/(byte) mode_ecmchar::cy#0 mode_ecmchar::@9/(byte) mode_ecmchar::cy#1 )
  (byte) mode_ecmchar::cx#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_ecmchar::@3
mode_ecmchar::@3: scope:[mode_ecmchar]  from mode_ecmchar::@2 mode_ecmchar::@3
  (byte*) mode_ecmchar::ch#2 ← phi( mode_ecmchar::@2/(byte*) mode_ecmchar::ch#3 mode_ecmchar::@3/(byte*) mode_ecmchar::ch#1 )
  (byte*) mode_ecmchar::col#2 ← phi( mode_ecmchar::@2/(byte*) mode_ecmchar::col#3 mode_ecmchar::@3/(byte*) mode_ecmchar::col#1 )
  (byte) mode_ecmchar::cy#2 ← phi( mode_ecmchar::@2/(byte) mode_ecmchar::cy#4 mode_ecmchar::@3/(byte) mode_ecmchar::cy#2 )
  (byte) mode_ecmchar::cx#2 ← phi( mode_ecmchar::@2/(byte) mode_ecmchar::cx#0 mode_ecmchar::@3/(byte) mode_ecmchar::cx#1 )
  (byte~) mode_ecmchar::$25 ← (byte) mode_ecmchar::cx#2 + (byte) mode_ecmchar::cy#2
  (byte~) mode_ecmchar::$26 ← (byte~) mode_ecmchar::$25 & (byte/signed byte/word/signed word/dword/signed dword) 15
  *((byte*) mode_ecmchar::col#2) ← (byte~) mode_ecmchar::$26
  (byte*) mode_ecmchar::col#1 ← ++ (byte*) mode_ecmchar::col#2
  (byte~) mode_ecmchar::$27 ← (byte) mode_ecmchar::cy#2 & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_ecmchar::$28 ← (byte~) mode_ecmchar::$27 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_ecmchar::$29 ← (byte) mode_ecmchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_ecmchar::$30 ← (byte~) mode_ecmchar::$28 | (byte~) mode_ecmchar::$29
  *((byte*) mode_ecmchar::ch#2) ← (byte~) mode_ecmchar::$30
  (byte*) mode_ecmchar::ch#1 ← ++ (byte*) mode_ecmchar::ch#2
  (byte) mode_ecmchar::cx#1 ← ++ (byte) mode_ecmchar::cx#2
  (boolean~) mode_ecmchar::$31 ← (byte) mode_ecmchar::cx#1 != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_ecmchar::$31) goto mode_ecmchar::@3
  to:mode_ecmchar::@9
mode_ecmchar::@9: scope:[mode_ecmchar]  from mode_ecmchar::@3
  (byte*) mode_ecmchar::ch#4 ← phi( mode_ecmchar::@3/(byte*) mode_ecmchar::ch#1 )
  (byte*) mode_ecmchar::col#4 ← phi( mode_ecmchar::@3/(byte*) mode_ecmchar::col#1 )
  (byte) mode_ecmchar::cy#3 ← phi( mode_ecmchar::@3/(byte) mode_ecmchar::cy#2 )
  (byte) mode_ecmchar::cy#1 ← ++ (byte) mode_ecmchar::cy#3
  (boolean~) mode_ecmchar::$32 ← (byte) mode_ecmchar::cy#1 != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_ecmchar::$32) goto mode_ecmchar::@2
  to:mode_ecmchar::@4
mode_ecmchar::@4: scope:[mode_ecmchar]  from mode_ecmchar::@7 mode_ecmchar::@9
  if(true) goto mode_ecmchar::@5
  to:mode_ecmchar::@return
mode_ecmchar::@5: scope:[mode_ecmchar]  from mode_ecmchar::@4
  (byte) keyboard_key_pressed::key#12 ← (byte) KEY_SPACE#0
  call keyboard_key_pressed param-assignment
  (byte) keyboard_key_pressed::return#14 ← (byte) keyboard_key_pressed::return#1
  to:mode_ecmchar::@16
mode_ecmchar::@16: scope:[mode_ecmchar]  from mode_ecmchar::@5
  (byte) keyboard_key_pressed::return#37 ← phi( mode_ecmchar::@5/(byte) keyboard_key_pressed::return#14 )
  (byte~) mode_ecmchar::$33 ← (byte) keyboard_key_pressed::return#37
  (boolean~) mode_ecmchar::$34 ← (byte~) mode_ecmchar::$33 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_ecmchar::$35 ← ! (boolean~) mode_ecmchar::$34
  if((boolean~) mode_ecmchar::$35) goto mode_ecmchar::@7
  to:mode_ecmchar::@return
mode_ecmchar::@7: scope:[mode_ecmchar]  from mode_ecmchar::@16
  to:mode_ecmchar::@4
mode_ecmchar::@return: scope:[mode_ecmchar]  from mode_ecmchar::@16 mode_ecmchar::@4
  return 
  to:@return
mode_mcchar: scope:[mode_mcchar]  from menu::@25
  (byte*) mode_mcchar::SCREEN#0 ← ((byte*)) (word/dword/signed dword) 32768
  (byte*) mode_mcchar::CHARSET#0 ← ((byte*)) (word/dword/signed dword) 36864
  (byte*) mode_mcchar::COLORS#0 ← ((byte*)) (word/dword/signed dword) 33792
  (dword~) mode_mcchar::$0 ← ((dword)) (byte*) mode_mcchar::CHARSET#0
  (dword~) mode_mcchar::$1 ← (dword~) mode_mcchar::$0 / (dword/signed dword) 65536
  (byte~) mode_mcchar::$2 ← ((byte)) (dword~) mode_mcchar::$1
  *((byte*) DTV_GRAPHICS_VIC_BANK#0) ← (byte~) mode_mcchar::$2
  (byte*~) mode_mcchar::$3 ← (byte*) mode_mcchar::COLORS#0 / (word/signed word/dword/signed dword) 1024
  (word~) mode_mcchar::$4 ← ((word)) (byte*~) mode_mcchar::$3
  (byte~) mode_mcchar::$5 ← < (word~) mode_mcchar::$4
  *((byte*) DTV_COLOR_BANK_LO#0) ← (byte~) mode_mcchar::$5
  (byte*~) mode_mcchar::$6 ← (byte*) mode_mcchar::COLORS#0 / (word/signed word/dword/signed dword) 1024
  (word~) mode_mcchar::$7 ← ((word)) (byte*~) mode_mcchar::$6
  (byte~) mode_mcchar::$8 ← > (word~) mode_mcchar::$7
  *((byte*) DTV_COLOR_BANK_HI#0) ← (byte~) mode_mcchar::$8
  *((byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (word~) mode_mcchar::$9 ← ((word)) (byte*) mode_mcchar::CHARSET#0
  (word/signed dword/dword~) mode_mcchar::$10 ← (word~) mode_mcchar::$9 / (word/signed word/dword/signed dword) 16384
  (byte~) mode_mcchar::$11 ← ((byte)) (word/signed dword/dword~) mode_mcchar::$10
  (byte/word/dword~) mode_mcchar::$12 ← (byte/signed byte/word/signed word/dword/signed dword) 3 ^ (byte~) mode_mcchar::$11
  *((byte*) CIA2_PORT_A#0) ← (byte/word/dword~) mode_mcchar::$12
  (byte~) mode_mcchar::$13 ← (byte) VIC_DEN#0 | (byte) VIC_RSEL#0
  (byte/word/dword~) mode_mcchar::$14 ← (byte~) mode_mcchar::$13 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL#0) ← (byte/word/dword~) mode_mcchar::$14
  (byte~) mode_mcchar::$15 ← (byte) VIC_CSEL#0 | (byte) VIC_MCM#0
  *((byte*) VIC_CONTROL2#0) ← (byte~) mode_mcchar::$15
  (word~) mode_mcchar::$16 ← ((word)) (byte*) mode_mcchar::SCREEN#0
  (word~) mode_mcchar::$17 ← (word~) mode_mcchar::$16 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_mcchar::$18 ← (word~) mode_mcchar::$17 / (byte/signed byte/word/signed word/dword/signed dword) 64
  (word~) mode_mcchar::$19 ← ((word)) (byte*) mode_mcchar::CHARSET#0
  (word~) mode_mcchar::$20 ← (word~) mode_mcchar::$19 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_mcchar::$21 ← (word~) mode_mcchar::$20 / (word/signed word/dword/signed dword) 1024
  (word/dword~) mode_mcchar::$22 ← (word/signed dword/dword~) mode_mcchar::$18 | (word/signed dword/dword~) mode_mcchar::$21
  (byte~) mode_mcchar::$23 ← ((byte)) (word/dword~) mode_mcchar::$22
  *((byte*) VIC_MEMORY#0) ← (byte~) mode_mcchar::$23
  (byte) mode_mcchar::i#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_mcchar::@1
mode_mcchar::@1: scope:[mode_mcchar]  from mode_mcchar mode_mcchar::@1
  (byte) mode_mcchar::i#2 ← phi( mode_mcchar/(byte) mode_mcchar::i#0 mode_mcchar::@1/(byte) mode_mcchar::i#1 )
  *((byte*) DTV_PALETTE#0 + (byte) mode_mcchar::i#2) ← *((byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) mode_mcchar::i#2)
  (byte) mode_mcchar::i#1 ← ++ (byte) mode_mcchar::i#2
  (boolean~) mode_mcchar::$24 ← (byte) mode_mcchar::i#1 != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_mcchar::$24) goto mode_mcchar::@1
  to:mode_mcchar::@8
mode_mcchar::@8: scope:[mode_mcchar]  from mode_mcchar::@1
  *((byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BGCOL1#0) ← (byte) BLACK#0
  *((byte*) BGCOL2#0) ← (byte) GREEN#0
  *((byte*) BGCOL3#0) ← (byte) BLUE#0
  (byte*) mode_mcchar::col#0 ← (byte*) mode_mcchar::COLORS#0
  (byte*) mode_mcchar::ch#0 ← (byte*) mode_mcchar::SCREEN#0
  (byte) mode_mcchar::cy#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_mcchar::@2
mode_mcchar::@2: scope:[mode_mcchar]  from mode_mcchar::@8 mode_mcchar::@9
  (byte*) mode_mcchar::ch#3 ← phi( mode_mcchar::@8/(byte*) mode_mcchar::ch#0 mode_mcchar::@9/(byte*) mode_mcchar::ch#4 )
  (byte*) mode_mcchar::col#3 ← phi( mode_mcchar::@8/(byte*) mode_mcchar::col#0 mode_mcchar::@9/(byte*) mode_mcchar::col#4 )
  (byte) mode_mcchar::cy#4 ← phi( mode_mcchar::@8/(byte) mode_mcchar::cy#0 mode_mcchar::@9/(byte) mode_mcchar::cy#1 )
  (byte) mode_mcchar::cx#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_mcchar::@3
mode_mcchar::@3: scope:[mode_mcchar]  from mode_mcchar::@2 mode_mcchar::@3
  (byte*) mode_mcchar::ch#2 ← phi( mode_mcchar::@2/(byte*) mode_mcchar::ch#3 mode_mcchar::@3/(byte*) mode_mcchar::ch#1 )
  (byte*) mode_mcchar::col#2 ← phi( mode_mcchar::@2/(byte*) mode_mcchar::col#3 mode_mcchar::@3/(byte*) mode_mcchar::col#1 )
  (byte) mode_mcchar::cy#2 ← phi( mode_mcchar::@2/(byte) mode_mcchar::cy#4 mode_mcchar::@3/(byte) mode_mcchar::cy#2 )
  (byte) mode_mcchar::cx#2 ← phi( mode_mcchar::@2/(byte) mode_mcchar::cx#0 mode_mcchar::@3/(byte) mode_mcchar::cx#1 )
  (byte~) mode_mcchar::$25 ← (byte) mode_mcchar::cx#2 + (byte) mode_mcchar::cy#2
  (byte~) mode_mcchar::$26 ← (byte~) mode_mcchar::$25 & (byte/signed byte/word/signed word/dword/signed dword) 15
  *((byte*) mode_mcchar::col#2) ← (byte~) mode_mcchar::$26
  (byte*) mode_mcchar::col#1 ← ++ (byte*) mode_mcchar::col#2
  (byte~) mode_mcchar::$27 ← (byte) mode_mcchar::cy#2 & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_mcchar::$28 ← (byte~) mode_mcchar::$27 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_mcchar::$29 ← (byte) mode_mcchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_mcchar::$30 ← (byte~) mode_mcchar::$28 | (byte~) mode_mcchar::$29
  *((byte*) mode_mcchar::ch#2) ← (byte~) mode_mcchar::$30
  (byte*) mode_mcchar::ch#1 ← ++ (byte*) mode_mcchar::ch#2
  (byte) mode_mcchar::cx#1 ← ++ (byte) mode_mcchar::cx#2
  (boolean~) mode_mcchar::$31 ← (byte) mode_mcchar::cx#1 != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_mcchar::$31) goto mode_mcchar::@3
  to:mode_mcchar::@9
mode_mcchar::@9: scope:[mode_mcchar]  from mode_mcchar::@3
  (byte*) mode_mcchar::ch#4 ← phi( mode_mcchar::@3/(byte*) mode_mcchar::ch#1 )
  (byte*) mode_mcchar::col#4 ← phi( mode_mcchar::@3/(byte*) mode_mcchar::col#1 )
  (byte) mode_mcchar::cy#3 ← phi( mode_mcchar::@3/(byte) mode_mcchar::cy#2 )
  (byte) mode_mcchar::cy#1 ← ++ (byte) mode_mcchar::cy#3
  (boolean~) mode_mcchar::$32 ← (byte) mode_mcchar::cy#1 != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_mcchar::$32) goto mode_mcchar::@2
  to:mode_mcchar::@4
mode_mcchar::@4: scope:[mode_mcchar]  from mode_mcchar::@7 mode_mcchar::@9
  if(true) goto mode_mcchar::@5
  to:mode_mcchar::@return
mode_mcchar::@5: scope:[mode_mcchar]  from mode_mcchar::@4
  (byte) keyboard_key_pressed::key#13 ← (byte) KEY_SPACE#0
  call keyboard_key_pressed param-assignment
  (byte) keyboard_key_pressed::return#15 ← (byte) keyboard_key_pressed::return#1
  to:mode_mcchar::@16
mode_mcchar::@16: scope:[mode_mcchar]  from mode_mcchar::@5
  (byte) keyboard_key_pressed::return#38 ← phi( mode_mcchar::@5/(byte) keyboard_key_pressed::return#15 )
  (byte~) mode_mcchar::$33 ← (byte) keyboard_key_pressed::return#38
  (boolean~) mode_mcchar::$34 ← (byte~) mode_mcchar::$33 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_mcchar::$35 ← ! (boolean~) mode_mcchar::$34
  if((boolean~) mode_mcchar::$35) goto mode_mcchar::@7
  to:mode_mcchar::@return
mode_mcchar::@7: scope:[mode_mcchar]  from mode_mcchar::@16
  to:mode_mcchar::@4
mode_mcchar::@return: scope:[mode_mcchar]  from mode_mcchar::@16 mode_mcchar::@4
  return 
  to:@return
mode_hicolstdchar: scope:[mode_hicolstdchar]  from menu::@27
  (byte*) mode_hicolstdchar::SCREEN#0 ← ((byte*)) (word/dword/signed dword) 32768
  (byte*) mode_hicolstdchar::CHARSET#0 ← ((byte*)) (word/dword/signed dword) 36864
  (byte*) mode_hicolstdchar::COLORS#0 ← ((byte*)) (word/dword/signed dword) 33792
  (dword~) mode_hicolstdchar::$0 ← ((dword)) (byte*) mode_hicolstdchar::CHARSET#0
  (dword~) mode_hicolstdchar::$1 ← (dword~) mode_hicolstdchar::$0 / (dword/signed dword) 65536
  (byte~) mode_hicolstdchar::$2 ← ((byte)) (dword~) mode_hicolstdchar::$1
  *((byte*) DTV_GRAPHICS_VIC_BANK#0) ← (byte~) mode_hicolstdchar::$2
  (byte*~) mode_hicolstdchar::$3 ← (byte*) mode_hicolstdchar::COLORS#0 / (word/signed word/dword/signed dword) 1024
  (word~) mode_hicolstdchar::$4 ← ((word)) (byte*~) mode_hicolstdchar::$3
  (byte~) mode_hicolstdchar::$5 ← < (word~) mode_hicolstdchar::$4
  *((byte*) DTV_COLOR_BANK_LO#0) ← (byte~) mode_hicolstdchar::$5
  (byte*~) mode_hicolstdchar::$6 ← (byte*) mode_hicolstdchar::COLORS#0 / (word/signed word/dword/signed dword) 1024
  (word~) mode_hicolstdchar::$7 ← ((word)) (byte*~) mode_hicolstdchar::$6
  (byte~) mode_hicolstdchar::$8 ← > (word~) mode_hicolstdchar::$7
  *((byte*) DTV_COLOR_BANK_HI#0) ← (byte~) mode_hicolstdchar::$8
  *((byte*) DTV_CONTROL#0) ← (byte) DTV_CONTROL_HIGHCOLOR_ON#0
  *((byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (word~) mode_hicolstdchar::$9 ← ((word)) (byte*) mode_hicolstdchar::CHARSET#0
  (word/signed dword/dword~) mode_hicolstdchar::$10 ← (word~) mode_hicolstdchar::$9 / (word/signed word/dword/signed dword) 16384
  (byte~) mode_hicolstdchar::$11 ← ((byte)) (word/signed dword/dword~) mode_hicolstdchar::$10
  (byte/word/dword~) mode_hicolstdchar::$12 ← (byte/signed byte/word/signed word/dword/signed dword) 3 ^ (byte~) mode_hicolstdchar::$11
  *((byte*) CIA2_PORT_A#0) ← (byte/word/dword~) mode_hicolstdchar::$12
  (byte~) mode_hicolstdchar::$13 ← (byte) VIC_DEN#0 | (byte) VIC_RSEL#0
  (byte/word/dword~) mode_hicolstdchar::$14 ← (byte~) mode_hicolstdchar::$13 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL#0) ← (byte/word/dword~) mode_hicolstdchar::$14
  *((byte*) VIC_CONTROL2#0) ← (byte) VIC_CSEL#0
  (word~) mode_hicolstdchar::$15 ← ((word)) (byte*) mode_hicolstdchar::SCREEN#0
  (word~) mode_hicolstdchar::$16 ← (word~) mode_hicolstdchar::$15 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_hicolstdchar::$17 ← (word~) mode_hicolstdchar::$16 / (byte/signed byte/word/signed word/dword/signed dword) 64
  (word~) mode_hicolstdchar::$18 ← ((word)) (byte*) mode_hicolstdchar::CHARSET#0
  (word~) mode_hicolstdchar::$19 ← (word~) mode_hicolstdchar::$18 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_hicolstdchar::$20 ← (word~) mode_hicolstdchar::$19 / (word/signed word/dword/signed dword) 1024
  (word/dword~) mode_hicolstdchar::$21 ← (word/signed dword/dword~) mode_hicolstdchar::$17 | (word/signed dword/dword~) mode_hicolstdchar::$20
  (byte~) mode_hicolstdchar::$22 ← ((byte)) (word/dword~) mode_hicolstdchar::$21
  *((byte*) VIC_MEMORY#0) ← (byte~) mode_hicolstdchar::$22
  (byte) mode_hicolstdchar::i#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_hicolstdchar::@1
mode_hicolstdchar::@1: scope:[mode_hicolstdchar]  from mode_hicolstdchar mode_hicolstdchar::@1
  (byte) mode_hicolstdchar::i#2 ← phi( mode_hicolstdchar/(byte) mode_hicolstdchar::i#0 mode_hicolstdchar::@1/(byte) mode_hicolstdchar::i#1 )
  *((byte*) DTV_PALETTE#0 + (byte) mode_hicolstdchar::i#2) ← (byte) mode_hicolstdchar::i#2
  (byte) mode_hicolstdchar::i#1 ← ++ (byte) mode_hicolstdchar::i#2
  (boolean~) mode_hicolstdchar::$23 ← (byte) mode_hicolstdchar::i#1 != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_hicolstdchar::$23) goto mode_hicolstdchar::@1
  to:mode_hicolstdchar::@8
mode_hicolstdchar::@8: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@1
  *((byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*) mode_hicolstdchar::col#0 ← (byte*) mode_hicolstdchar::COLORS#0
  (byte*) mode_hicolstdchar::ch#0 ← (byte*) mode_hicolstdchar::SCREEN#0
  (byte) mode_hicolstdchar::cy#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_hicolstdchar::@2
mode_hicolstdchar::@2: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@8 mode_hicolstdchar::@9
  (byte*) mode_hicolstdchar::ch#3 ← phi( mode_hicolstdchar::@8/(byte*) mode_hicolstdchar::ch#0 mode_hicolstdchar::@9/(byte*) mode_hicolstdchar::ch#4 )
  (byte*) mode_hicolstdchar::col#3 ← phi( mode_hicolstdchar::@8/(byte*) mode_hicolstdchar::col#0 mode_hicolstdchar::@9/(byte*) mode_hicolstdchar::col#4 )
  (byte) mode_hicolstdchar::cy#4 ← phi( mode_hicolstdchar::@8/(byte) mode_hicolstdchar::cy#0 mode_hicolstdchar::@9/(byte) mode_hicolstdchar::cy#1 )
  (byte) mode_hicolstdchar::cx#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_hicolstdchar::@3
mode_hicolstdchar::@3: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@2 mode_hicolstdchar::@3
  (byte*) mode_hicolstdchar::ch#2 ← phi( mode_hicolstdchar::@2/(byte*) mode_hicolstdchar::ch#3 mode_hicolstdchar::@3/(byte*) mode_hicolstdchar::ch#1 )
  (byte*) mode_hicolstdchar::col#2 ← phi( mode_hicolstdchar::@2/(byte*) mode_hicolstdchar::col#3 mode_hicolstdchar::@3/(byte*) mode_hicolstdchar::col#1 )
  (byte) mode_hicolstdchar::cx#2 ← phi( mode_hicolstdchar::@2/(byte) mode_hicolstdchar::cx#0 mode_hicolstdchar::@3/(byte) mode_hicolstdchar::cx#1 )
  (byte) mode_hicolstdchar::cy#2 ← phi( mode_hicolstdchar::@2/(byte) mode_hicolstdchar::cy#4 mode_hicolstdchar::@3/(byte) mode_hicolstdchar::cy#2 )
  (byte~) mode_hicolstdchar::$24 ← (byte) mode_hicolstdchar::cy#2 & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_hicolstdchar::$25 ← (byte~) mode_hicolstdchar::$24 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_hicolstdchar::$26 ← (byte) mode_hicolstdchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_hicolstdchar::$27 ← (byte~) mode_hicolstdchar::$25 | (byte~) mode_hicolstdchar::$26
  (byte) mode_hicolstdchar::v#0 ← (byte~) mode_hicolstdchar::$27
  *((byte*) mode_hicolstdchar::col#2) ← (byte) mode_hicolstdchar::v#0
  (byte*) mode_hicolstdchar::col#1 ← ++ (byte*) mode_hicolstdchar::col#2
  *((byte*) mode_hicolstdchar::ch#2) ← (byte) mode_hicolstdchar::v#0
  (byte*) mode_hicolstdchar::ch#1 ← ++ (byte*) mode_hicolstdchar::ch#2
  (byte) mode_hicolstdchar::cx#1 ← ++ (byte) mode_hicolstdchar::cx#2
  (boolean~) mode_hicolstdchar::$28 ← (byte) mode_hicolstdchar::cx#1 != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_hicolstdchar::$28) goto mode_hicolstdchar::@3
  to:mode_hicolstdchar::@9
mode_hicolstdchar::@9: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@3
  (byte*) mode_hicolstdchar::ch#4 ← phi( mode_hicolstdchar::@3/(byte*) mode_hicolstdchar::ch#1 )
  (byte*) mode_hicolstdchar::col#4 ← phi( mode_hicolstdchar::@3/(byte*) mode_hicolstdchar::col#1 )
  (byte) mode_hicolstdchar::cy#3 ← phi( mode_hicolstdchar::@3/(byte) mode_hicolstdchar::cy#2 )
  (byte) mode_hicolstdchar::cy#1 ← ++ (byte) mode_hicolstdchar::cy#3
  (boolean~) mode_hicolstdchar::$29 ← (byte) mode_hicolstdchar::cy#1 != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_hicolstdchar::$29) goto mode_hicolstdchar::@2
  to:mode_hicolstdchar::@4
mode_hicolstdchar::@4: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@7 mode_hicolstdchar::@9
  if(true) goto mode_hicolstdchar::@5
  to:mode_hicolstdchar::@return
mode_hicolstdchar::@5: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@4
  (byte) keyboard_key_pressed::key#14 ← (byte) KEY_SPACE#0
  call keyboard_key_pressed param-assignment
  (byte) keyboard_key_pressed::return#16 ← (byte) keyboard_key_pressed::return#1
  to:mode_hicolstdchar::@16
mode_hicolstdchar::@16: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@5
  (byte) keyboard_key_pressed::return#39 ← phi( mode_hicolstdchar::@5/(byte) keyboard_key_pressed::return#16 )
  (byte~) mode_hicolstdchar::$30 ← (byte) keyboard_key_pressed::return#39
  (boolean~) mode_hicolstdchar::$31 ← (byte~) mode_hicolstdchar::$30 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_hicolstdchar::$32 ← ! (boolean~) mode_hicolstdchar::$31
  if((boolean~) mode_hicolstdchar::$32) goto mode_hicolstdchar::@7
  to:mode_hicolstdchar::@return
mode_hicolstdchar::@7: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@16
  to:mode_hicolstdchar::@4
mode_hicolstdchar::@return: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@16 mode_hicolstdchar::@4
  return 
  to:@return
mode_hicolecmchar: scope:[mode_hicolecmchar]  from menu::@29
  (byte*) mode_hicolecmchar::SCREEN#0 ← ((byte*)) (word/dword/signed dword) 32768
  (byte*) mode_hicolecmchar::CHARSET#0 ← ((byte*)) (word/dword/signed dword) 36864
  (byte*) mode_hicolecmchar::COLORS#0 ← ((byte*)) (word/dword/signed dword) 33792
  (dword~) mode_hicolecmchar::$0 ← ((dword)) (byte*) mode_hicolecmchar::CHARSET#0
  (dword~) mode_hicolecmchar::$1 ← (dword~) mode_hicolecmchar::$0 / (dword/signed dword) 65536
  (byte~) mode_hicolecmchar::$2 ← ((byte)) (dword~) mode_hicolecmchar::$1
  *((byte*) DTV_GRAPHICS_VIC_BANK#0) ← (byte~) mode_hicolecmchar::$2
  (byte*~) mode_hicolecmchar::$3 ← (byte*) mode_hicolecmchar::COLORS#0 / (word/signed word/dword/signed dword) 1024
  (word~) mode_hicolecmchar::$4 ← ((word)) (byte*~) mode_hicolecmchar::$3
  (byte~) mode_hicolecmchar::$5 ← < (word~) mode_hicolecmchar::$4
  *((byte*) DTV_COLOR_BANK_LO#0) ← (byte~) mode_hicolecmchar::$5
  (byte*~) mode_hicolecmchar::$6 ← (byte*) mode_hicolecmchar::COLORS#0 / (word/signed word/dword/signed dword) 1024
  (word~) mode_hicolecmchar::$7 ← ((word)) (byte*~) mode_hicolecmchar::$6
  (byte~) mode_hicolecmchar::$8 ← > (word~) mode_hicolecmchar::$7
  *((byte*) DTV_COLOR_BANK_HI#0) ← (byte~) mode_hicolecmchar::$8
  *((byte*) DTV_CONTROL#0) ← (byte) DTV_CONTROL_HIGHCOLOR_ON#0
  *((byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (word~) mode_hicolecmchar::$9 ← ((word)) (byte*) mode_hicolecmchar::CHARSET#0
  (word/signed dword/dword~) mode_hicolecmchar::$10 ← (word~) mode_hicolecmchar::$9 / (word/signed word/dword/signed dword) 16384
  (byte~) mode_hicolecmchar::$11 ← ((byte)) (word/signed dword/dword~) mode_hicolecmchar::$10
  (byte/word/dword~) mode_hicolecmchar::$12 ← (byte/signed byte/word/signed word/dword/signed dword) 3 ^ (byte~) mode_hicolecmchar::$11
  *((byte*) CIA2_PORT_A#0) ← (byte/word/dword~) mode_hicolecmchar::$12
  (byte~) mode_hicolecmchar::$13 ← (byte) VIC_DEN#0 | (byte) VIC_RSEL#0
  (byte~) mode_hicolecmchar::$14 ← (byte~) mode_hicolecmchar::$13 | (byte) VIC_ECM#0
  (byte/word/dword~) mode_hicolecmchar::$15 ← (byte~) mode_hicolecmchar::$14 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL#0) ← (byte/word/dword~) mode_hicolecmchar::$15
  *((byte*) VIC_CONTROL2#0) ← (byte) VIC_CSEL#0
  (word~) mode_hicolecmchar::$16 ← ((word)) (byte*) mode_hicolecmchar::SCREEN#0
  (word~) mode_hicolecmchar::$17 ← (word~) mode_hicolecmchar::$16 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_hicolecmchar::$18 ← (word~) mode_hicolecmchar::$17 / (byte/signed byte/word/signed word/dword/signed dword) 64
  (word~) mode_hicolecmchar::$19 ← ((word)) (byte*) mode_hicolecmchar::CHARSET#0
  (word~) mode_hicolecmchar::$20 ← (word~) mode_hicolecmchar::$19 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_hicolecmchar::$21 ← (word~) mode_hicolecmchar::$20 / (word/signed word/dword/signed dword) 1024
  (word/dword~) mode_hicolecmchar::$22 ← (word/signed dword/dword~) mode_hicolecmchar::$18 | (word/signed dword/dword~) mode_hicolecmchar::$21
  (byte~) mode_hicolecmchar::$23 ← ((byte)) (word/dword~) mode_hicolecmchar::$22
  *((byte*) VIC_MEMORY#0) ← (byte~) mode_hicolecmchar::$23
  (byte) mode_hicolecmchar::i#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_hicolecmchar::@1
mode_hicolecmchar::@1: scope:[mode_hicolecmchar]  from mode_hicolecmchar mode_hicolecmchar::@1
  (byte) mode_hicolecmchar::i#2 ← phi( mode_hicolecmchar/(byte) mode_hicolecmchar::i#0 mode_hicolecmchar::@1/(byte) mode_hicolecmchar::i#1 )
  *((byte*) DTV_PALETTE#0 + (byte) mode_hicolecmchar::i#2) ← (byte) mode_hicolecmchar::i#2
  (byte) mode_hicolecmchar::i#1 ← ++ (byte) mode_hicolecmchar::i#2
  (boolean~) mode_hicolecmchar::$24 ← (byte) mode_hicolecmchar::i#1 != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_hicolecmchar::$24) goto mode_hicolecmchar::@1
  to:mode_hicolecmchar::@8
mode_hicolecmchar::@8: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@1
  *((byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 80
  *((byte*) BGCOL2#0) ← (byte/signed byte/word/signed word/dword/signed dword) 84
  *((byte*) BGCOL3#0) ← (byte/signed byte/word/signed word/dword/signed dword) 88
  *((byte*) BGCOL4#0) ← (byte/signed byte/word/signed word/dword/signed dword) 92
  (byte*) mode_hicolecmchar::col#0 ← (byte*) mode_hicolecmchar::COLORS#0
  (byte*) mode_hicolecmchar::ch#0 ← (byte*) mode_hicolecmchar::SCREEN#0
  (byte) mode_hicolecmchar::cy#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_hicolecmchar::@2
mode_hicolecmchar::@2: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@8 mode_hicolecmchar::@9
  (byte*) mode_hicolecmchar::ch#3 ← phi( mode_hicolecmchar::@8/(byte*) mode_hicolecmchar::ch#0 mode_hicolecmchar::@9/(byte*) mode_hicolecmchar::ch#4 )
  (byte*) mode_hicolecmchar::col#3 ← phi( mode_hicolecmchar::@8/(byte*) mode_hicolecmchar::col#0 mode_hicolecmchar::@9/(byte*) mode_hicolecmchar::col#4 )
  (byte) mode_hicolecmchar::cy#4 ← phi( mode_hicolecmchar::@8/(byte) mode_hicolecmchar::cy#0 mode_hicolecmchar::@9/(byte) mode_hicolecmchar::cy#1 )
  (byte) mode_hicolecmchar::cx#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_hicolecmchar::@3
mode_hicolecmchar::@3: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@2 mode_hicolecmchar::@3
  (byte*) mode_hicolecmchar::ch#2 ← phi( mode_hicolecmchar::@2/(byte*) mode_hicolecmchar::ch#3 mode_hicolecmchar::@3/(byte*) mode_hicolecmchar::ch#1 )
  (byte*) mode_hicolecmchar::col#2 ← phi( mode_hicolecmchar::@2/(byte*) mode_hicolecmchar::col#3 mode_hicolecmchar::@3/(byte*) mode_hicolecmchar::col#1 )
  (byte) mode_hicolecmchar::cx#2 ← phi( mode_hicolecmchar::@2/(byte) mode_hicolecmchar::cx#0 mode_hicolecmchar::@3/(byte) mode_hicolecmchar::cx#1 )
  (byte) mode_hicolecmchar::cy#2 ← phi( mode_hicolecmchar::@2/(byte) mode_hicolecmchar::cy#4 mode_hicolecmchar::@3/(byte) mode_hicolecmchar::cy#2 )
  (byte~) mode_hicolecmchar::$25 ← (byte) mode_hicolecmchar::cy#2 & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_hicolecmchar::$26 ← (byte~) mode_hicolecmchar::$25 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_hicolecmchar::$27 ← (byte) mode_hicolecmchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_hicolecmchar::$28 ← (byte~) mode_hicolecmchar::$26 | (byte~) mode_hicolecmchar::$27
  (byte) mode_hicolecmchar::v#0 ← (byte~) mode_hicolecmchar::$28
  *((byte*) mode_hicolecmchar::col#2) ← (byte) mode_hicolecmchar::v#0
  (byte*) mode_hicolecmchar::col#1 ← ++ (byte*) mode_hicolecmchar::col#2
  *((byte*) mode_hicolecmchar::ch#2) ← (byte) mode_hicolecmchar::v#0
  (byte*) mode_hicolecmchar::ch#1 ← ++ (byte*) mode_hicolecmchar::ch#2
  (byte) mode_hicolecmchar::cx#1 ← ++ (byte) mode_hicolecmchar::cx#2
  (boolean~) mode_hicolecmchar::$29 ← (byte) mode_hicolecmchar::cx#1 != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_hicolecmchar::$29) goto mode_hicolecmchar::@3
  to:mode_hicolecmchar::@9
mode_hicolecmchar::@9: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@3
  (byte*) mode_hicolecmchar::ch#4 ← phi( mode_hicolecmchar::@3/(byte*) mode_hicolecmchar::ch#1 )
  (byte*) mode_hicolecmchar::col#4 ← phi( mode_hicolecmchar::@3/(byte*) mode_hicolecmchar::col#1 )
  (byte) mode_hicolecmchar::cy#3 ← phi( mode_hicolecmchar::@3/(byte) mode_hicolecmchar::cy#2 )
  (byte) mode_hicolecmchar::cy#1 ← ++ (byte) mode_hicolecmchar::cy#3
  (boolean~) mode_hicolecmchar::$30 ← (byte) mode_hicolecmchar::cy#1 != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_hicolecmchar::$30) goto mode_hicolecmchar::@2
  to:mode_hicolecmchar::@4
mode_hicolecmchar::@4: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@7 mode_hicolecmchar::@9
  if(true) goto mode_hicolecmchar::@5
  to:mode_hicolecmchar::@return
mode_hicolecmchar::@5: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@4
  (byte) keyboard_key_pressed::key#15 ← (byte) KEY_SPACE#0
  call keyboard_key_pressed param-assignment
  (byte) keyboard_key_pressed::return#17 ← (byte) keyboard_key_pressed::return#1
  to:mode_hicolecmchar::@16
mode_hicolecmchar::@16: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@5
  (byte) keyboard_key_pressed::return#40 ← phi( mode_hicolecmchar::@5/(byte) keyboard_key_pressed::return#17 )
  (byte~) mode_hicolecmchar::$31 ← (byte) keyboard_key_pressed::return#40
  (boolean~) mode_hicolecmchar::$32 ← (byte~) mode_hicolecmchar::$31 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_hicolecmchar::$33 ← ! (boolean~) mode_hicolecmchar::$32
  if((boolean~) mode_hicolecmchar::$33) goto mode_hicolecmchar::@7
  to:mode_hicolecmchar::@return
mode_hicolecmchar::@7: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@16
  to:mode_hicolecmchar::@4
mode_hicolecmchar::@return: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@16 mode_hicolecmchar::@4
  return 
  to:@return
mode_hicolmcchar: scope:[mode_hicolmcchar]  from menu::@31
  (byte*) mode_hicolmcchar::SCREEN#0 ← ((byte*)) (word/dword/signed dword) 32768
  (byte*) mode_hicolmcchar::CHARSET#0 ← ((byte*)) (word/dword/signed dword) 36864
  (byte*) mode_hicolmcchar::COLORS#0 ← ((byte*)) (word/dword/signed dword) 33792
  (dword~) mode_hicolmcchar::$0 ← ((dword)) (byte*) mode_hicolmcchar::CHARSET#0
  (dword~) mode_hicolmcchar::$1 ← (dword~) mode_hicolmcchar::$0 / (dword/signed dword) 65536
  (byte~) mode_hicolmcchar::$2 ← ((byte)) (dword~) mode_hicolmcchar::$1
  *((byte*) DTV_GRAPHICS_VIC_BANK#0) ← (byte~) mode_hicolmcchar::$2
  (byte*~) mode_hicolmcchar::$3 ← (byte*) mode_hicolmcchar::COLORS#0 / (word/signed word/dword/signed dword) 1024
  (word~) mode_hicolmcchar::$4 ← ((word)) (byte*~) mode_hicolmcchar::$3
  (byte~) mode_hicolmcchar::$5 ← < (word~) mode_hicolmcchar::$4
  *((byte*) DTV_COLOR_BANK_LO#0) ← (byte~) mode_hicolmcchar::$5
  (byte*~) mode_hicolmcchar::$6 ← (byte*) mode_hicolmcchar::COLORS#0 / (word/signed word/dword/signed dword) 1024
  (word~) mode_hicolmcchar::$7 ← ((word)) (byte*~) mode_hicolmcchar::$6
  (byte~) mode_hicolmcchar::$8 ← > (word~) mode_hicolmcchar::$7
  *((byte*) DTV_COLOR_BANK_HI#0) ← (byte~) mode_hicolmcchar::$8
  *((byte*) DTV_CONTROL#0) ← (byte) DTV_CONTROL_HIGHCOLOR_ON#0
  *((byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (word~) mode_hicolmcchar::$9 ← ((word)) (byte*) mode_hicolmcchar::CHARSET#0
  (word/signed dword/dword~) mode_hicolmcchar::$10 ← (word~) mode_hicolmcchar::$9 / (word/signed word/dword/signed dword) 16384
  (byte~) mode_hicolmcchar::$11 ← ((byte)) (word/signed dword/dword~) mode_hicolmcchar::$10
  (byte/word/dword~) mode_hicolmcchar::$12 ← (byte/signed byte/word/signed word/dword/signed dword) 3 ^ (byte~) mode_hicolmcchar::$11
  *((byte*) CIA2_PORT_A#0) ← (byte/word/dword~) mode_hicolmcchar::$12
  (byte~) mode_hicolmcchar::$13 ← (byte) VIC_DEN#0 | (byte) VIC_RSEL#0
  (byte/word/dword~) mode_hicolmcchar::$14 ← (byte~) mode_hicolmcchar::$13 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL#0) ← (byte/word/dword~) mode_hicolmcchar::$14
  (byte~) mode_hicolmcchar::$15 ← (byte) VIC_CSEL#0 | (byte) VIC_MCM#0
  *((byte*) VIC_CONTROL2#0) ← (byte~) mode_hicolmcchar::$15
  (word~) mode_hicolmcchar::$16 ← ((word)) (byte*) mode_hicolmcchar::SCREEN#0
  (word~) mode_hicolmcchar::$17 ← (word~) mode_hicolmcchar::$16 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_hicolmcchar::$18 ← (word~) mode_hicolmcchar::$17 / (byte/signed byte/word/signed word/dword/signed dword) 64
  (word~) mode_hicolmcchar::$19 ← ((word)) (byte*) mode_hicolmcchar::CHARSET#0
  (word~) mode_hicolmcchar::$20 ← (word~) mode_hicolmcchar::$19 & (word/signed word/dword/signed dword) 16383
  (word/signed dword/dword~) mode_hicolmcchar::$21 ← (word~) mode_hicolmcchar::$20 / (word/signed word/dword/signed dword) 1024
  (word/dword~) mode_hicolmcchar::$22 ← (word/signed dword/dword~) mode_hicolmcchar::$18 | (word/signed dword/dword~) mode_hicolmcchar::$21
  (byte~) mode_hicolmcchar::$23 ← ((byte)) (word/dword~) mode_hicolmcchar::$22
  *((byte*) VIC_MEMORY#0) ← (byte~) mode_hicolmcchar::$23
  (byte) mode_hicolmcchar::i#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_hicolmcchar::@1
mode_hicolmcchar::@1: scope:[mode_hicolmcchar]  from mode_hicolmcchar mode_hicolmcchar::@1
  (byte) mode_hicolmcchar::i#2 ← phi( mode_hicolmcchar/(byte) mode_hicolmcchar::i#0 mode_hicolmcchar::@1/(byte) mode_hicolmcchar::i#1 )
  *((byte*) DTV_PALETTE#0 + (byte) mode_hicolmcchar::i#2) ← (byte) mode_hicolmcchar::i#2
  (byte) mode_hicolmcchar::i#1 ← ++ (byte) mode_hicolmcchar::i#2
  (boolean~) mode_hicolmcchar::$24 ← (byte) mode_hicolmcchar::i#1 != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_hicolmcchar::$24) goto mode_hicolmcchar::@1
  to:mode_hicolmcchar::@8
mode_hicolmcchar::@8: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@1
  *((byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 80
  *((byte*) BGCOL2#0) ← (byte/signed byte/word/signed word/dword/signed dword) 84
  *((byte*) BGCOL3#0) ← (byte/signed byte/word/signed word/dword/signed dword) 88
  (byte*) mode_hicolmcchar::col#0 ← (byte*) mode_hicolmcchar::COLORS#0
  (byte*) mode_hicolmcchar::ch#0 ← (byte*) mode_hicolmcchar::SCREEN#0
  (byte) mode_hicolmcchar::cy#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_hicolmcchar::@2
mode_hicolmcchar::@2: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@8 mode_hicolmcchar::@9
  (byte*) mode_hicolmcchar::ch#3 ← phi( mode_hicolmcchar::@8/(byte*) mode_hicolmcchar::ch#0 mode_hicolmcchar::@9/(byte*) mode_hicolmcchar::ch#4 )
  (byte*) mode_hicolmcchar::col#3 ← phi( mode_hicolmcchar::@8/(byte*) mode_hicolmcchar::col#0 mode_hicolmcchar::@9/(byte*) mode_hicolmcchar::col#4 )
  (byte) mode_hicolmcchar::cy#4 ← phi( mode_hicolmcchar::@8/(byte) mode_hicolmcchar::cy#0 mode_hicolmcchar::@9/(byte) mode_hicolmcchar::cy#1 )
  (byte) mode_hicolmcchar::cx#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_hicolmcchar::@3
mode_hicolmcchar::@3: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@2 mode_hicolmcchar::@3
  (byte*) mode_hicolmcchar::ch#2 ← phi( mode_hicolmcchar::@2/(byte*) mode_hicolmcchar::ch#3 mode_hicolmcchar::@3/(byte*) mode_hicolmcchar::ch#1 )
  (byte*) mode_hicolmcchar::col#2 ← phi( mode_hicolmcchar::@2/(byte*) mode_hicolmcchar::col#3 mode_hicolmcchar::@3/(byte*) mode_hicolmcchar::col#1 )
  (byte) mode_hicolmcchar::cx#2 ← phi( mode_hicolmcchar::@2/(byte) mode_hicolmcchar::cx#0 mode_hicolmcchar::@3/(byte) mode_hicolmcchar::cx#1 )
  (byte) mode_hicolmcchar::cy#2 ← phi( mode_hicolmcchar::@2/(byte) mode_hicolmcchar::cy#4 mode_hicolmcchar::@3/(byte) mode_hicolmcchar::cy#2 )
  (byte~) mode_hicolmcchar::$25 ← (byte) mode_hicolmcchar::cy#2 & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_hicolmcchar::$26 ← (byte~) mode_hicolmcchar::$25 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_hicolmcchar::$27 ← (byte) mode_hicolmcchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_hicolmcchar::$28 ← (byte~) mode_hicolmcchar::$26 | (byte~) mode_hicolmcchar::$27
  (byte) mode_hicolmcchar::v#0 ← (byte~) mode_hicolmcchar::$28
  *((byte*) mode_hicolmcchar::col#2) ← (byte) mode_hicolmcchar::v#0
  (byte*) mode_hicolmcchar::col#1 ← ++ (byte*) mode_hicolmcchar::col#2
  *((byte*) mode_hicolmcchar::ch#2) ← (byte) mode_hicolmcchar::v#0
  (byte*) mode_hicolmcchar::ch#1 ← ++ (byte*) mode_hicolmcchar::ch#2
  (byte) mode_hicolmcchar::cx#1 ← ++ (byte) mode_hicolmcchar::cx#2
  (boolean~) mode_hicolmcchar::$29 ← (byte) mode_hicolmcchar::cx#1 != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_hicolmcchar::$29) goto mode_hicolmcchar::@3
  to:mode_hicolmcchar::@9
mode_hicolmcchar::@9: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@3
  (byte*) mode_hicolmcchar::ch#4 ← phi( mode_hicolmcchar::@3/(byte*) mode_hicolmcchar::ch#1 )
  (byte*) mode_hicolmcchar::col#4 ← phi( mode_hicolmcchar::@3/(byte*) mode_hicolmcchar::col#1 )
  (byte) mode_hicolmcchar::cy#3 ← phi( mode_hicolmcchar::@3/(byte) mode_hicolmcchar::cy#2 )
  (byte) mode_hicolmcchar::cy#1 ← ++ (byte) mode_hicolmcchar::cy#3
  (boolean~) mode_hicolmcchar::$30 ← (byte) mode_hicolmcchar::cy#1 != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_hicolmcchar::$30) goto mode_hicolmcchar::@2
  to:mode_hicolmcchar::@4
mode_hicolmcchar::@4: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@7 mode_hicolmcchar::@9
  if(true) goto mode_hicolmcchar::@5
  to:mode_hicolmcchar::@return
mode_hicolmcchar::@5: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@4
  (byte) keyboard_key_pressed::key#16 ← (byte) KEY_SPACE#0
  call keyboard_key_pressed param-assignment
  (byte) keyboard_key_pressed::return#18 ← (byte) keyboard_key_pressed::return#1
  to:mode_hicolmcchar::@16
mode_hicolmcchar::@16: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@5
  (byte) keyboard_key_pressed::return#41 ← phi( mode_hicolmcchar::@5/(byte) keyboard_key_pressed::return#18 )
  (byte~) mode_hicolmcchar::$31 ← (byte) keyboard_key_pressed::return#41
  (boolean~) mode_hicolmcchar::$32 ← (byte~) mode_hicolmcchar::$31 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_hicolmcchar::$33 ← ! (boolean~) mode_hicolmcchar::$32
  if((boolean~) mode_hicolmcchar::$33) goto mode_hicolmcchar::@7
  to:mode_hicolmcchar::@return
mode_hicolmcchar::@7: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@16
  to:mode_hicolmcchar::@4
mode_hicolmcchar::@return: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@16 mode_hicolmcchar::@4
  return 
  to:@return
mode_twoplanebitmap: scope:[mode_twoplanebitmap]  from menu::@35
  (byte*) mode_twoplanebitmap::PLANEA#0 ← ((byte*)) (word/signed word/dword/signed dword) 16384
  (byte*) mode_twoplanebitmap::PLANEB#0 ← ((byte*)) (word/signed word/dword/signed dword) 24576
  (byte*) mode_twoplanebitmap::COLORS#0 ← ((byte*)) (word/dword/signed dword) 32768
  (byte~) mode_twoplanebitmap::$0 ← (byte) DTV_CONTROL_HIGHCOLOR_ON#0 | (byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0
  *((byte*) DTV_CONTROL#0) ← (byte~) mode_twoplanebitmap::$0
  (byte~) mode_twoplanebitmap::$1 ← (byte) VIC_ECM#0 | (byte) VIC_BMM#0
  (byte~) mode_twoplanebitmap::$2 ← (byte~) mode_twoplanebitmap::$1 | (byte) VIC_DEN#0
  (byte~) mode_twoplanebitmap::$3 ← (byte~) mode_twoplanebitmap::$2 | (byte) VIC_RSEL#0
  (byte/word/dword~) mode_twoplanebitmap::$4 ← (byte~) mode_twoplanebitmap::$3 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL#0) ← (byte/word/dword~) mode_twoplanebitmap::$4
  *((byte*) VIC_CONTROL2#0) ← (byte) VIC_CSEL#0
  (byte~) mode_twoplanebitmap::$5 ← < (byte*) mode_twoplanebitmap::PLANEA#0
  *((byte*) DTV_PLANEA_START_LO#0) ← (byte~) mode_twoplanebitmap::$5
  (byte~) mode_twoplanebitmap::$6 ← > (byte*) mode_twoplanebitmap::PLANEA#0
  *((byte*) DTV_PLANEA_START_MI#0) ← (byte~) mode_twoplanebitmap::$6
  *((byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1
  *((byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte~) mode_twoplanebitmap::$7 ← < (byte*) mode_twoplanebitmap::PLANEB#0
  *((byte*) DTV_PLANEB_START_LO#0) ← (byte~) mode_twoplanebitmap::$7
  (byte~) mode_twoplanebitmap::$8 ← > (byte*) mode_twoplanebitmap::PLANEB#0
  *((byte*) DTV_PLANEB_START_MI#0) ← (byte~) mode_twoplanebitmap::$8
  *((byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1
  *((byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*~) mode_twoplanebitmap::$9 ← (byte*) mode_twoplanebitmap::COLORS#0 / (word/signed word/dword/signed dword) 1024
  (byte~) mode_twoplanebitmap::$10 ← < (byte*~) mode_twoplanebitmap::$9
  *((byte*) DTV_COLOR_BANK_LO#0) ← (byte~) mode_twoplanebitmap::$10
  (byte*~) mode_twoplanebitmap::$11 ← (byte*) mode_twoplanebitmap::COLORS#0 / (word/signed word/dword/signed dword) 1024
  (byte~) mode_twoplanebitmap::$12 ← > (byte*~) mode_twoplanebitmap::$11
  *((byte*) DTV_COLOR_BANK_HI#0) ← (byte~) mode_twoplanebitmap::$12
  (byte) mode_twoplanebitmap::i#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_twoplanebitmap::@1
mode_twoplanebitmap::@1: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap mode_twoplanebitmap::@1
  (byte) mode_twoplanebitmap::i#2 ← phi( mode_twoplanebitmap/(byte) mode_twoplanebitmap::i#0 mode_twoplanebitmap::@1/(byte) mode_twoplanebitmap::i#1 )
  *((byte*) DTV_PALETTE#0 + (byte) mode_twoplanebitmap::i#2) ← (byte) mode_twoplanebitmap::i#2
  (byte) mode_twoplanebitmap::i#1 ← ++ (byte) mode_twoplanebitmap::i#2
  (boolean~) mode_twoplanebitmap::$13 ← (byte) mode_twoplanebitmap::i#1 != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_twoplanebitmap::$13) goto mode_twoplanebitmap::@1
  to:mode_twoplanebitmap::@14
mode_twoplanebitmap::@14: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@1
  *((byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 112
  *((byte*) BGCOL2#0) ← (byte/word/signed word/dword/signed dword) 212
  (byte*) mode_twoplanebitmap::col#0 ← (byte*) mode_twoplanebitmap::COLORS#0
  (byte) mode_twoplanebitmap::cy#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_twoplanebitmap::@2
mode_twoplanebitmap::@2: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@14 mode_twoplanebitmap::@15
  (byte*) mode_twoplanebitmap::col#3 ← phi( mode_twoplanebitmap::@14/(byte*) mode_twoplanebitmap::col#0 mode_twoplanebitmap::@15/(byte*) mode_twoplanebitmap::col#4 )
  (byte) mode_twoplanebitmap::cy#4 ← phi( mode_twoplanebitmap::@14/(byte) mode_twoplanebitmap::cy#0 mode_twoplanebitmap::@15/(byte) mode_twoplanebitmap::cy#1 )
  (byte) mode_twoplanebitmap::cx#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_twoplanebitmap::@3
mode_twoplanebitmap::@3: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@2 mode_twoplanebitmap::@3
  (byte*) mode_twoplanebitmap::col#2 ← phi( mode_twoplanebitmap::@2/(byte*) mode_twoplanebitmap::col#3 mode_twoplanebitmap::@3/(byte*) mode_twoplanebitmap::col#1 )
  (byte) mode_twoplanebitmap::cx#2 ← phi( mode_twoplanebitmap::@2/(byte) mode_twoplanebitmap::cx#0 mode_twoplanebitmap::@3/(byte) mode_twoplanebitmap::cx#1 )
  (byte) mode_twoplanebitmap::cy#2 ← phi( mode_twoplanebitmap::@2/(byte) mode_twoplanebitmap::cy#4 mode_twoplanebitmap::@3/(byte) mode_twoplanebitmap::cy#2 )
  (byte~) mode_twoplanebitmap::$14 ← (byte) mode_twoplanebitmap::cy#2 & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_twoplanebitmap::$15 ← (byte~) mode_twoplanebitmap::$14 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_twoplanebitmap::$16 ← (byte) mode_twoplanebitmap::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_twoplanebitmap::$17 ← (byte~) mode_twoplanebitmap::$15 | (byte~) mode_twoplanebitmap::$16
  *((byte*) mode_twoplanebitmap::col#2) ← (byte~) mode_twoplanebitmap::$17
  (byte*) mode_twoplanebitmap::col#1 ← ++ (byte*) mode_twoplanebitmap::col#2
  (byte) mode_twoplanebitmap::cx#1 ← ++ (byte) mode_twoplanebitmap::cx#2
  (boolean~) mode_twoplanebitmap::$18 ← (byte) mode_twoplanebitmap::cx#1 != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_twoplanebitmap::$18) goto mode_twoplanebitmap::@3
  to:mode_twoplanebitmap::@15
mode_twoplanebitmap::@15: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@3
  (byte*) mode_twoplanebitmap::col#4 ← phi( mode_twoplanebitmap::@3/(byte*) mode_twoplanebitmap::col#1 )
  (byte) mode_twoplanebitmap::cy#3 ← phi( mode_twoplanebitmap::@3/(byte) mode_twoplanebitmap::cy#2 )
  (byte) mode_twoplanebitmap::cy#1 ← ++ (byte) mode_twoplanebitmap::cy#3
  (boolean~) mode_twoplanebitmap::$19 ← (byte) mode_twoplanebitmap::cy#1 != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_twoplanebitmap::$19) goto mode_twoplanebitmap::@2
  to:mode_twoplanebitmap::@16
mode_twoplanebitmap::@16: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@15
  (byte*) mode_twoplanebitmap::gfxa#0 ← (byte*) mode_twoplanebitmap::PLANEA#0
  (byte) mode_twoplanebitmap::ay#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_twoplanebitmap::@4
mode_twoplanebitmap::@4: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@16 mode_twoplanebitmap::@19
  (byte*) mode_twoplanebitmap::gfxa#6 ← phi( mode_twoplanebitmap::@16/(byte*) mode_twoplanebitmap::gfxa#0 mode_twoplanebitmap::@19/(byte*) mode_twoplanebitmap::gfxa#8 )
  (byte) mode_twoplanebitmap::ay#4 ← phi( mode_twoplanebitmap::@16/(byte) mode_twoplanebitmap::ay#0 mode_twoplanebitmap::@19/(byte) mode_twoplanebitmap::ay#1 )
  (byte) mode_twoplanebitmap::ax#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_twoplanebitmap::@5
mode_twoplanebitmap::@5: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@4 mode_twoplanebitmap::@7
  (byte) mode_twoplanebitmap::ax#5 ← phi( mode_twoplanebitmap::@4/(byte) mode_twoplanebitmap::ax#0 mode_twoplanebitmap::@7/(byte) mode_twoplanebitmap::ax#1 )
  (byte*) mode_twoplanebitmap::gfxa#5 ← phi( mode_twoplanebitmap::@4/(byte*) mode_twoplanebitmap::gfxa#6 mode_twoplanebitmap::@7/(byte*) mode_twoplanebitmap::gfxa#7 )
  (byte) mode_twoplanebitmap::ay#2 ← phi( mode_twoplanebitmap::@4/(byte) mode_twoplanebitmap::ay#4 mode_twoplanebitmap::@7/(byte) mode_twoplanebitmap::ay#5 )
  (byte~) mode_twoplanebitmap::$20 ← (byte) mode_twoplanebitmap::ay#2 & (byte/signed byte/word/signed word/dword/signed dword) 4
  (boolean~) mode_twoplanebitmap::$21 ← (byte~) mode_twoplanebitmap::$20 == (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_twoplanebitmap::$22 ← ! (boolean~) mode_twoplanebitmap::$21
  if((boolean~) mode_twoplanebitmap::$22) goto mode_twoplanebitmap::@6
  to:mode_twoplanebitmap::@17
mode_twoplanebitmap::@6: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@5
  (byte) mode_twoplanebitmap::ay#7 ← phi( mode_twoplanebitmap::@5/(byte) mode_twoplanebitmap::ay#2 )
  (byte) mode_twoplanebitmap::ax#4 ← phi( mode_twoplanebitmap::@5/(byte) mode_twoplanebitmap::ax#5 )
  (byte*) mode_twoplanebitmap::gfxa#3 ← phi( mode_twoplanebitmap::@5/(byte*) mode_twoplanebitmap::gfxa#5 )
  *((byte*) mode_twoplanebitmap::gfxa#3) ← (byte/word/signed word/dword/signed dword) 255
  (byte*) mode_twoplanebitmap::gfxa#1 ← ++ (byte*) mode_twoplanebitmap::gfxa#3
  to:mode_twoplanebitmap::@7
mode_twoplanebitmap::@17: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@5
  (byte) mode_twoplanebitmap::ay#6 ← phi( mode_twoplanebitmap::@5/(byte) mode_twoplanebitmap::ay#2 )
  (byte) mode_twoplanebitmap::ax#3 ← phi( mode_twoplanebitmap::@5/(byte) mode_twoplanebitmap::ax#5 )
  (byte*) mode_twoplanebitmap::gfxa#4 ← phi( mode_twoplanebitmap::@5/(byte*) mode_twoplanebitmap::gfxa#5 )
  *((byte*) mode_twoplanebitmap::gfxa#4) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*) mode_twoplanebitmap::gfxa#2 ← ++ (byte*) mode_twoplanebitmap::gfxa#4
  to:mode_twoplanebitmap::@7
mode_twoplanebitmap::@7: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@17 mode_twoplanebitmap::@6
  (byte*) mode_twoplanebitmap::gfxa#7 ← phi( mode_twoplanebitmap::@17/(byte*) mode_twoplanebitmap::gfxa#2 mode_twoplanebitmap::@6/(byte*) mode_twoplanebitmap::gfxa#1 )
  (byte) mode_twoplanebitmap::ay#5 ← phi( mode_twoplanebitmap::@17/(byte) mode_twoplanebitmap::ay#6 mode_twoplanebitmap::@6/(byte) mode_twoplanebitmap::ay#7 )
  (byte) mode_twoplanebitmap::ax#2 ← phi( mode_twoplanebitmap::@17/(byte) mode_twoplanebitmap::ax#3 mode_twoplanebitmap::@6/(byte) mode_twoplanebitmap::ax#4 )
  (byte) mode_twoplanebitmap::ax#1 ← ++ (byte) mode_twoplanebitmap::ax#2
  (boolean~) mode_twoplanebitmap::$23 ← (byte) mode_twoplanebitmap::ax#1 != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_twoplanebitmap::$23) goto mode_twoplanebitmap::@5
  to:mode_twoplanebitmap::@19
mode_twoplanebitmap::@19: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@7
  (byte*) mode_twoplanebitmap::gfxa#8 ← phi( mode_twoplanebitmap::@7/(byte*) mode_twoplanebitmap::gfxa#7 )
  (byte) mode_twoplanebitmap::ay#3 ← phi( mode_twoplanebitmap::@7/(byte) mode_twoplanebitmap::ay#5 )
  (byte) mode_twoplanebitmap::ay#1 ← ++ (byte) mode_twoplanebitmap::ay#3
  (boolean~) mode_twoplanebitmap::$24 ← (byte) mode_twoplanebitmap::ay#1 != (byte/word/signed word/dword/signed dword) 200
  if((boolean~) mode_twoplanebitmap::$24) goto mode_twoplanebitmap::@4
  to:mode_twoplanebitmap::@20
mode_twoplanebitmap::@20: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@19
  (byte*) mode_twoplanebitmap::gfxb#0 ← (byte*) mode_twoplanebitmap::PLANEB#0
  (byte) mode_twoplanebitmap::by#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_twoplanebitmap::@8
mode_twoplanebitmap::@8: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@20 mode_twoplanebitmap::@21
  (byte) mode_twoplanebitmap::by#4 ← phi( mode_twoplanebitmap::@20/(byte) mode_twoplanebitmap::by#0 mode_twoplanebitmap::@21/(byte) mode_twoplanebitmap::by#1 )
  (byte*) mode_twoplanebitmap::gfxb#3 ← phi( mode_twoplanebitmap::@20/(byte*) mode_twoplanebitmap::gfxb#0 mode_twoplanebitmap::@21/(byte*) mode_twoplanebitmap::gfxb#4 )
  (byte) mode_twoplanebitmap::bx#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_twoplanebitmap::@9
mode_twoplanebitmap::@9: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@8 mode_twoplanebitmap::@9
  (byte) mode_twoplanebitmap::by#3 ← phi( mode_twoplanebitmap::@8/(byte) mode_twoplanebitmap::by#4 mode_twoplanebitmap::@9/(byte) mode_twoplanebitmap::by#3 )
  (byte) mode_twoplanebitmap::bx#2 ← phi( mode_twoplanebitmap::@8/(byte) mode_twoplanebitmap::bx#0 mode_twoplanebitmap::@9/(byte) mode_twoplanebitmap::bx#1 )
  (byte*) mode_twoplanebitmap::gfxb#2 ← phi( mode_twoplanebitmap::@8/(byte*) mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::@9/(byte*) mode_twoplanebitmap::gfxb#1 )
  *((byte*) mode_twoplanebitmap::gfxb#2) ← (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte*) mode_twoplanebitmap::gfxb#1 ← ++ (byte*) mode_twoplanebitmap::gfxb#2
  (byte) mode_twoplanebitmap::bx#1 ← ++ (byte) mode_twoplanebitmap::bx#2
  (boolean~) mode_twoplanebitmap::$25 ← (byte) mode_twoplanebitmap::bx#1 != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_twoplanebitmap::$25) goto mode_twoplanebitmap::@9
  to:mode_twoplanebitmap::@21
mode_twoplanebitmap::@21: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@9
  (byte*) mode_twoplanebitmap::gfxb#4 ← phi( mode_twoplanebitmap::@9/(byte*) mode_twoplanebitmap::gfxb#1 )
  (byte) mode_twoplanebitmap::by#2 ← phi( mode_twoplanebitmap::@9/(byte) mode_twoplanebitmap::by#3 )
  (byte) mode_twoplanebitmap::by#1 ← ++ (byte) mode_twoplanebitmap::by#2
  (boolean~) mode_twoplanebitmap::$26 ← (byte) mode_twoplanebitmap::by#1 != (byte/word/signed word/dword/signed dword) 200
  if((boolean~) mode_twoplanebitmap::$26) goto mode_twoplanebitmap::@8
  to:mode_twoplanebitmap::@10
mode_twoplanebitmap::@10: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@13 mode_twoplanebitmap::@21
  if(true) goto mode_twoplanebitmap::@11
  to:mode_twoplanebitmap::@return
mode_twoplanebitmap::@11: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@10
  (byte) keyboard_key_pressed::key#17 ← (byte) KEY_SPACE#0
  call keyboard_key_pressed param-assignment
  (byte) keyboard_key_pressed::return#19 ← (byte) keyboard_key_pressed::return#1
  to:mode_twoplanebitmap::@28
mode_twoplanebitmap::@28: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@11
  (byte) keyboard_key_pressed::return#42 ← phi( mode_twoplanebitmap::@11/(byte) keyboard_key_pressed::return#19 )
  (byte~) mode_twoplanebitmap::$27 ← (byte) keyboard_key_pressed::return#42
  (boolean~) mode_twoplanebitmap::$28 ← (byte~) mode_twoplanebitmap::$27 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_twoplanebitmap::$29 ← ! (boolean~) mode_twoplanebitmap::$28
  if((boolean~) mode_twoplanebitmap::$29) goto mode_twoplanebitmap::@13
  to:mode_twoplanebitmap::@return
mode_twoplanebitmap::@13: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@28
  to:mode_twoplanebitmap::@10
mode_twoplanebitmap::@return: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@10 mode_twoplanebitmap::@28
  return 
  to:@return
mode_sixsfred: scope:[mode_sixsfred]  from menu::@37
  (byte*) mode_sixsfred::PLANEA#0 ← ((byte*)) (word/signed word/dword/signed dword) 16384
  (byte*) mode_sixsfred::PLANEB#0 ← ((byte*)) (word/signed word/dword/signed dword) 24576
  (byte*) mode_sixsfred::COLORS#0 ← ((byte*)) (word/dword/signed dword) 32768
  (byte~) mode_sixsfred::$0 ← (byte) DTV_CONTROL_HIGHCOLOR_ON#0 | (byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0
  *((byte*) DTV_CONTROL#0) ← (byte~) mode_sixsfred::$0
  (byte~) mode_sixsfred::$1 ← (byte) VIC_ECM#0 | (byte) VIC_BMM#0
  (byte~) mode_sixsfred::$2 ← (byte~) mode_sixsfred::$1 | (byte) VIC_DEN#0
  (byte~) mode_sixsfred::$3 ← (byte~) mode_sixsfred::$2 | (byte) VIC_RSEL#0
  (byte/word/dword~) mode_sixsfred::$4 ← (byte~) mode_sixsfred::$3 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL#0) ← (byte/word/dword~) mode_sixsfred::$4
  (byte~) mode_sixsfred::$5 ← (byte) VIC_MCM#0 | (byte) VIC_CSEL#0
  *((byte*) VIC_CONTROL2#0) ← (byte~) mode_sixsfred::$5
  (byte~) mode_sixsfred::$6 ← < (byte*) mode_sixsfred::PLANEA#0
  *((byte*) DTV_PLANEA_START_LO#0) ← (byte~) mode_sixsfred::$6
  (byte~) mode_sixsfred::$7 ← > (byte*) mode_sixsfred::PLANEA#0
  *((byte*) DTV_PLANEA_START_MI#0) ← (byte~) mode_sixsfred::$7
  *((byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1
  *((byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte~) mode_sixsfred::$8 ← < (byte*) mode_sixsfred::PLANEB#0
  *((byte*) DTV_PLANEB_START_LO#0) ← (byte~) mode_sixsfred::$8
  (byte~) mode_sixsfred::$9 ← > (byte*) mode_sixsfred::PLANEB#0
  *((byte*) DTV_PLANEB_START_MI#0) ← (byte~) mode_sixsfred::$9
  *((byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1
  *((byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*~) mode_sixsfred::$10 ← (byte*) mode_sixsfred::COLORS#0 / (word/signed word/dword/signed dword) 1024
  (byte~) mode_sixsfred::$11 ← < (byte*~) mode_sixsfred::$10
  *((byte*) DTV_COLOR_BANK_LO#0) ← (byte~) mode_sixsfred::$11
  (byte*~) mode_sixsfred::$12 ← (byte*) mode_sixsfred::COLORS#0 / (word/signed word/dword/signed dword) 1024
  (byte~) mode_sixsfred::$13 ← > (byte*~) mode_sixsfred::$12
  *((byte*) DTV_COLOR_BANK_HI#0) ← (byte~) mode_sixsfred::$13
  (byte) mode_sixsfred::i#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred::@1
mode_sixsfred::@1: scope:[mode_sixsfred]  from mode_sixsfred mode_sixsfred::@1
  (byte) mode_sixsfred::i#2 ← phi( mode_sixsfred/(byte) mode_sixsfred::i#0 mode_sixsfred::@1/(byte) mode_sixsfred::i#1 )
  *((byte*) DTV_PALETTE#0 + (byte) mode_sixsfred::i#2) ← (byte) mode_sixsfred::i#2
  (byte) mode_sixsfred::i#1 ← ++ (byte) mode_sixsfred::i#2
  (boolean~) mode_sixsfred::$14 ← (byte) mode_sixsfred::i#1 != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_sixsfred::$14) goto mode_sixsfred::@1
  to:mode_sixsfred::@12
mode_sixsfred::@12: scope:[mode_sixsfred]  from mode_sixsfred::@1
  *((byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*) mode_sixsfred::col#0 ← (byte*) mode_sixsfred::COLORS#0
  (byte) mode_sixsfred::cy#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred::@2
mode_sixsfred::@2: scope:[mode_sixsfred]  from mode_sixsfred::@12 mode_sixsfred::@13
  (byte*) mode_sixsfred::col#3 ← phi( mode_sixsfred::@12/(byte*) mode_sixsfred::col#0 mode_sixsfred::@13/(byte*) mode_sixsfred::col#4 )
  (byte) mode_sixsfred::cy#4 ← phi( mode_sixsfred::@12/(byte) mode_sixsfred::cy#0 mode_sixsfred::@13/(byte) mode_sixsfred::cy#1 )
  (byte) mode_sixsfred::cx#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred::@3
mode_sixsfred::@3: scope:[mode_sixsfred]  from mode_sixsfred::@2 mode_sixsfred::@3
  (byte*) mode_sixsfred::col#2 ← phi( mode_sixsfred::@2/(byte*) mode_sixsfred::col#3 mode_sixsfred::@3/(byte*) mode_sixsfred::col#1 )
  (byte) mode_sixsfred::cy#2 ← phi( mode_sixsfred::@2/(byte) mode_sixsfred::cy#4 mode_sixsfred::@3/(byte) mode_sixsfred::cy#2 )
  (byte) mode_sixsfred::cx#2 ← phi( mode_sixsfred::@2/(byte) mode_sixsfred::cx#0 mode_sixsfred::@3/(byte) mode_sixsfred::cx#1 )
  (byte~) mode_sixsfred::$15 ← (byte) mode_sixsfred::cx#2 + (byte) mode_sixsfred::cy#2
  (byte~) mode_sixsfred::$16 ← (byte~) mode_sixsfred::$15 & (byte/signed byte/word/signed word/dword/signed dword) 15
  *((byte*) mode_sixsfred::col#2) ← (byte~) mode_sixsfred::$16
  (byte*) mode_sixsfred::col#1 ← ++ (byte*) mode_sixsfred::col#2
  (byte) mode_sixsfred::cx#1 ← ++ (byte) mode_sixsfred::cx#2
  (boolean~) mode_sixsfred::$17 ← (byte) mode_sixsfred::cx#1 != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_sixsfred::$17) goto mode_sixsfred::@3
  to:mode_sixsfred::@13
mode_sixsfred::@13: scope:[mode_sixsfred]  from mode_sixsfred::@3
  (byte*) mode_sixsfred::col#4 ← phi( mode_sixsfred::@3/(byte*) mode_sixsfred::col#1 )
  (byte) mode_sixsfred::cy#3 ← phi( mode_sixsfred::@3/(byte) mode_sixsfred::cy#2 )
  (byte) mode_sixsfred::cy#1 ← ++ (byte) mode_sixsfred::cy#3
  (boolean~) mode_sixsfred::$18 ← (byte) mode_sixsfred::cy#1 != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_sixsfred::$18) goto mode_sixsfred::@2
  to:mode_sixsfred::@14
mode_sixsfred::@14: scope:[mode_sixsfred]  from mode_sixsfred::@13
  (byte*) mode_sixsfred::gfxa#0 ← (byte*) mode_sixsfred::PLANEA#0
  (byte[]) mode_sixsfred::row_bitmask#0 ← { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 85, (byte/word/signed word/dword/signed dword) 170, (byte/word/signed word/dword/signed dword) 255 }
  (byte) mode_sixsfred::ay#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred::@4
mode_sixsfred::@4: scope:[mode_sixsfred]  from mode_sixsfred::@14 mode_sixsfred::@15
  (byte*) mode_sixsfred::gfxa#3 ← phi( mode_sixsfred::@14/(byte*) mode_sixsfred::gfxa#0 mode_sixsfred::@15/(byte*) mode_sixsfred::gfxa#4 )
  (byte) mode_sixsfred::ay#4 ← phi( mode_sixsfred::@14/(byte) mode_sixsfred::ay#0 mode_sixsfred::@15/(byte) mode_sixsfred::ay#1 )
  (byte) mode_sixsfred::ax#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred::@5
mode_sixsfred::@5: scope:[mode_sixsfred]  from mode_sixsfred::@4 mode_sixsfred::@5
  (byte) mode_sixsfred::ax#2 ← phi( mode_sixsfred::@4/(byte) mode_sixsfred::ax#0 mode_sixsfred::@5/(byte) mode_sixsfred::ax#1 )
  (byte*) mode_sixsfred::gfxa#2 ← phi( mode_sixsfred::@4/(byte*) mode_sixsfred::gfxa#3 mode_sixsfred::@5/(byte*) mode_sixsfred::gfxa#1 )
  (byte) mode_sixsfred::ay#2 ← phi( mode_sixsfred::@4/(byte) mode_sixsfred::ay#4 mode_sixsfred::@5/(byte) mode_sixsfred::ay#2 )
  (byte~) mode_sixsfred::$19 ← (byte) mode_sixsfred::ay#2 >> (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte~) mode_sixsfred::$20 ← (byte~) mode_sixsfred::$19 & (byte/signed byte/word/signed word/dword/signed dword) 3
  (byte) mode_sixsfred::row#0 ← (byte~) mode_sixsfred::$20
  *((byte*) mode_sixsfred::gfxa#2) ← *((byte[]) mode_sixsfred::row_bitmask#0 + (byte) mode_sixsfred::row#0)
  (byte*) mode_sixsfred::gfxa#1 ← ++ (byte*) mode_sixsfred::gfxa#2
  (byte) mode_sixsfred::ax#1 ← ++ (byte) mode_sixsfred::ax#2
  (boolean~) mode_sixsfred::$21 ← (byte) mode_sixsfred::ax#1 != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_sixsfred::$21) goto mode_sixsfred::@5
  to:mode_sixsfred::@15
mode_sixsfred::@15: scope:[mode_sixsfred]  from mode_sixsfred::@5
  (byte*) mode_sixsfred::gfxa#4 ← phi( mode_sixsfred::@5/(byte*) mode_sixsfred::gfxa#1 )
  (byte) mode_sixsfred::ay#3 ← phi( mode_sixsfred::@5/(byte) mode_sixsfred::ay#2 )
  (byte) mode_sixsfred::ay#1 ← ++ (byte) mode_sixsfred::ay#3
  (boolean~) mode_sixsfred::$22 ← (byte) mode_sixsfred::ay#1 != (byte/word/signed word/dword/signed dword) 200
  if((boolean~) mode_sixsfred::$22) goto mode_sixsfred::@4
  to:mode_sixsfred::@16
mode_sixsfred::@16: scope:[mode_sixsfred]  from mode_sixsfred::@15
  (byte*) mode_sixsfred::gfxb#0 ← (byte*) mode_sixsfred::PLANEB#0
  (byte) mode_sixsfred::by#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred::@6
mode_sixsfred::@6: scope:[mode_sixsfred]  from mode_sixsfred::@16 mode_sixsfred::@17
  (byte) mode_sixsfred::by#4 ← phi( mode_sixsfred::@16/(byte) mode_sixsfred::by#0 mode_sixsfred::@17/(byte) mode_sixsfred::by#1 )
  (byte*) mode_sixsfred::gfxb#3 ← phi( mode_sixsfred::@16/(byte*) mode_sixsfred::gfxb#0 mode_sixsfred::@17/(byte*) mode_sixsfred::gfxb#4 )
  (byte) mode_sixsfred::bx#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred::@7
mode_sixsfred::@7: scope:[mode_sixsfred]  from mode_sixsfred::@6 mode_sixsfred::@7
  (byte) mode_sixsfred::by#3 ← phi( mode_sixsfred::@6/(byte) mode_sixsfred::by#4 mode_sixsfred::@7/(byte) mode_sixsfred::by#3 )
  (byte) mode_sixsfred::bx#2 ← phi( mode_sixsfred::@6/(byte) mode_sixsfred::bx#0 mode_sixsfred::@7/(byte) mode_sixsfred::bx#1 )
  (byte*) mode_sixsfred::gfxb#2 ← phi( mode_sixsfred::@6/(byte*) mode_sixsfred::gfxb#3 mode_sixsfred::@7/(byte*) mode_sixsfred::gfxb#1 )
  *((byte*) mode_sixsfred::gfxb#2) ← (byte/signed byte/word/signed word/dword/signed dword) 27
  (byte*) mode_sixsfred::gfxb#1 ← ++ (byte*) mode_sixsfred::gfxb#2
  (byte) mode_sixsfred::bx#1 ← ++ (byte) mode_sixsfred::bx#2
  (boolean~) mode_sixsfred::$23 ← (byte) mode_sixsfred::bx#1 != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_sixsfred::$23) goto mode_sixsfred::@7
  to:mode_sixsfred::@17
mode_sixsfred::@17: scope:[mode_sixsfred]  from mode_sixsfred::@7
  (byte*) mode_sixsfred::gfxb#4 ← phi( mode_sixsfred::@7/(byte*) mode_sixsfred::gfxb#1 )
  (byte) mode_sixsfred::by#2 ← phi( mode_sixsfred::@7/(byte) mode_sixsfred::by#3 )
  (byte) mode_sixsfred::by#1 ← ++ (byte) mode_sixsfred::by#2
  (boolean~) mode_sixsfred::$24 ← (byte) mode_sixsfred::by#1 != (byte/word/signed word/dword/signed dword) 200
  if((boolean~) mode_sixsfred::$24) goto mode_sixsfred::@6
  to:mode_sixsfred::@8
mode_sixsfred::@8: scope:[mode_sixsfred]  from mode_sixsfred::@11 mode_sixsfred::@17
  if(true) goto mode_sixsfred::@9
  to:mode_sixsfred::@return
mode_sixsfred::@9: scope:[mode_sixsfred]  from mode_sixsfred::@8
  (byte) keyboard_key_pressed::key#18 ← (byte) KEY_SPACE#0
  call keyboard_key_pressed param-assignment
  (byte) keyboard_key_pressed::return#20 ← (byte) keyboard_key_pressed::return#1
  to:mode_sixsfred::@24
mode_sixsfred::@24: scope:[mode_sixsfred]  from mode_sixsfred::@9
  (byte) keyboard_key_pressed::return#43 ← phi( mode_sixsfred::@9/(byte) keyboard_key_pressed::return#20 )
  (byte~) mode_sixsfred::$25 ← (byte) keyboard_key_pressed::return#43
  (boolean~) mode_sixsfred::$26 ← (byte~) mode_sixsfred::$25 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_sixsfred::$27 ← ! (boolean~) mode_sixsfred::$26
  if((boolean~) mode_sixsfred::$27) goto mode_sixsfred::@11
  to:mode_sixsfred::@return
mode_sixsfred::@11: scope:[mode_sixsfred]  from mode_sixsfred::@24
  to:mode_sixsfred::@8
mode_sixsfred::@return: scope:[mode_sixsfred]  from mode_sixsfred::@24 mode_sixsfred::@8
  return 
  to:@return
mode_sixsfred2: scope:[mode_sixsfred2]  from menu::@33
  (byte*) mode_sixsfred2::PLANEA#0 ← ((byte*)) (word/signed word/dword/signed dword) 16384
  (byte*) mode_sixsfred2::PLANEB#0 ← ((byte*)) (word/signed word/dword/signed dword) 24576
  (byte*) mode_sixsfred2::COLORS#0 ← ((byte*)) (word/dword/signed dword) 32768
  *((byte*) DTV_CONTROL#0) ← (byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0
  (byte~) mode_sixsfred2::$0 ← (byte) VIC_ECM#0 | (byte) VIC_BMM#0
  (byte~) mode_sixsfred2::$1 ← (byte~) mode_sixsfred2::$0 | (byte) VIC_DEN#0
  (byte~) mode_sixsfred2::$2 ← (byte~) mode_sixsfred2::$1 | (byte) VIC_RSEL#0
  (byte/word/dword~) mode_sixsfred2::$3 ← (byte~) mode_sixsfred2::$2 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL#0) ← (byte/word/dword~) mode_sixsfred2::$3
  (byte~) mode_sixsfred2::$4 ← (byte) VIC_MCM#0 | (byte) VIC_CSEL#0
  *((byte*) VIC_CONTROL2#0) ← (byte~) mode_sixsfred2::$4
  (byte~) mode_sixsfred2::$5 ← < (byte*) mode_sixsfred2::PLANEA#0
  *((byte*) DTV_PLANEA_START_LO#0) ← (byte~) mode_sixsfred2::$5
  (byte~) mode_sixsfred2::$6 ← > (byte*) mode_sixsfred2::PLANEA#0
  *((byte*) DTV_PLANEA_START_MI#0) ← (byte~) mode_sixsfred2::$6
  *((byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1
  *((byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte~) mode_sixsfred2::$7 ← < (byte*) mode_sixsfred2::PLANEB#0
  *((byte*) DTV_PLANEB_START_LO#0) ← (byte~) mode_sixsfred2::$7
  (byte~) mode_sixsfred2::$8 ← > (byte*) mode_sixsfred2::PLANEB#0
  *((byte*) DTV_PLANEB_START_MI#0) ← (byte~) mode_sixsfred2::$8
  *((byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1
  *((byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*~) mode_sixsfred2::$9 ← (byte*) mode_sixsfred2::COLORS#0 / (word/signed word/dword/signed dword) 1024
  (byte~) mode_sixsfred2::$10 ← < (byte*~) mode_sixsfred2::$9
  *((byte*) DTV_COLOR_BANK_LO#0) ← (byte~) mode_sixsfred2::$10
  (byte*~) mode_sixsfred2::$11 ← (byte*) mode_sixsfred2::COLORS#0 / (word/signed word/dword/signed dword) 1024
  (byte~) mode_sixsfred2::$12 ← > (byte*~) mode_sixsfred2::$11
  *((byte*) DTV_COLOR_BANK_HI#0) ← (byte~) mode_sixsfred2::$12
  (byte) mode_sixsfred2::i#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred2::@1
mode_sixsfred2::@1: scope:[mode_sixsfred2]  from mode_sixsfred2 mode_sixsfred2::@1
  (byte) mode_sixsfred2::i#2 ← phi( mode_sixsfred2/(byte) mode_sixsfred2::i#0 mode_sixsfred2::@1/(byte) mode_sixsfred2::i#1 )
  *((byte*) DTV_PALETTE#0 + (byte) mode_sixsfred2::i#2) ← (byte) mode_sixsfred2::i#2
  (byte) mode_sixsfred2::i#1 ← ++ (byte) mode_sixsfred2::i#2
  (boolean~) mode_sixsfred2::$13 ← (byte) mode_sixsfred2::i#1 != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_sixsfred2::$13) goto mode_sixsfred2::@1
  to:mode_sixsfred2::@12
mode_sixsfred2::@12: scope:[mode_sixsfred2]  from mode_sixsfred2::@1
  *((byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte*) mode_sixsfred2::col#0 ← (byte*) mode_sixsfred2::COLORS#0
  (byte) mode_sixsfred2::cy#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred2::@2
mode_sixsfred2::@2: scope:[mode_sixsfred2]  from mode_sixsfred2::@12 mode_sixsfred2::@13
  (byte*) mode_sixsfred2::col#3 ← phi( mode_sixsfred2::@12/(byte*) mode_sixsfred2::col#0 mode_sixsfred2::@13/(byte*) mode_sixsfred2::col#4 )
  (byte) mode_sixsfred2::cy#4 ← phi( mode_sixsfred2::@12/(byte) mode_sixsfred2::cy#0 mode_sixsfred2::@13/(byte) mode_sixsfred2::cy#1 )
  (byte) mode_sixsfred2::cx#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred2::@3
mode_sixsfred2::@3: scope:[mode_sixsfred2]  from mode_sixsfred2::@2 mode_sixsfred2::@3
  (byte*) mode_sixsfred2::col#2 ← phi( mode_sixsfred2::@2/(byte*) mode_sixsfred2::col#3 mode_sixsfred2::@3/(byte*) mode_sixsfred2::col#1 )
  (byte) mode_sixsfred2::cy#2 ← phi( mode_sixsfred2::@2/(byte) mode_sixsfred2::cy#4 mode_sixsfred2::@3/(byte) mode_sixsfred2::cy#2 )
  (byte) mode_sixsfred2::cx#2 ← phi( mode_sixsfred2::@2/(byte) mode_sixsfred2::cx#0 mode_sixsfred2::@3/(byte) mode_sixsfred2::cx#1 )
  (byte~) mode_sixsfred2::$14 ← (byte) mode_sixsfred2::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 3
  (byte~) mode_sixsfred2::$15 ← (byte~) mode_sixsfred2::$14 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_sixsfred2::$16 ← (byte) mode_sixsfred2::cy#2 & (byte/signed byte/word/signed word/dword/signed dword) 3
  (byte~) mode_sixsfred2::$17 ← (byte~) mode_sixsfred2::$15 | (byte~) mode_sixsfred2::$16
  *((byte*) mode_sixsfred2::col#2) ← (byte~) mode_sixsfred2::$17
  (byte*) mode_sixsfred2::col#1 ← ++ (byte*) mode_sixsfred2::col#2
  (byte) mode_sixsfred2::cx#1 ← ++ (byte) mode_sixsfred2::cx#2
  (boolean~) mode_sixsfred2::$18 ← (byte) mode_sixsfred2::cx#1 != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_sixsfred2::$18) goto mode_sixsfred2::@3
  to:mode_sixsfred2::@13
mode_sixsfred2::@13: scope:[mode_sixsfred2]  from mode_sixsfred2::@3
  (byte*) mode_sixsfred2::col#4 ← phi( mode_sixsfred2::@3/(byte*) mode_sixsfred2::col#1 )
  (byte) mode_sixsfred2::cy#3 ← phi( mode_sixsfred2::@3/(byte) mode_sixsfred2::cy#2 )
  (byte) mode_sixsfred2::cy#1 ← ++ (byte) mode_sixsfred2::cy#3
  (boolean~) mode_sixsfred2::$19 ← (byte) mode_sixsfred2::cy#1 != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_sixsfred2::$19) goto mode_sixsfred2::@2
  to:mode_sixsfred2::@14
mode_sixsfred2::@14: scope:[mode_sixsfred2]  from mode_sixsfred2::@13
  (byte*) mode_sixsfred2::gfxa#0 ← (byte*) mode_sixsfred2::PLANEA#0
  (byte[]) mode_sixsfred2::row_bitmask#0 ← { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 85, (byte/word/signed word/dword/signed dword) 170, (byte/word/signed word/dword/signed dword) 255 }
  (byte) mode_sixsfred2::ay#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred2::@4
mode_sixsfred2::@4: scope:[mode_sixsfred2]  from mode_sixsfred2::@14 mode_sixsfred2::@15
  (byte*) mode_sixsfred2::gfxa#3 ← phi( mode_sixsfred2::@14/(byte*) mode_sixsfred2::gfxa#0 mode_sixsfred2::@15/(byte*) mode_sixsfred2::gfxa#4 )
  (byte) mode_sixsfred2::ay#4 ← phi( mode_sixsfred2::@14/(byte) mode_sixsfred2::ay#0 mode_sixsfred2::@15/(byte) mode_sixsfred2::ay#1 )
  (byte) mode_sixsfred2::ax#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred2::@5
mode_sixsfred2::@5: scope:[mode_sixsfred2]  from mode_sixsfred2::@4 mode_sixsfred2::@5
  (byte) mode_sixsfred2::ax#2 ← phi( mode_sixsfred2::@4/(byte) mode_sixsfred2::ax#0 mode_sixsfred2::@5/(byte) mode_sixsfred2::ax#1 )
  (byte*) mode_sixsfred2::gfxa#2 ← phi( mode_sixsfred2::@4/(byte*) mode_sixsfred2::gfxa#3 mode_sixsfred2::@5/(byte*) mode_sixsfred2::gfxa#1 )
  (byte) mode_sixsfred2::ay#2 ← phi( mode_sixsfred2::@4/(byte) mode_sixsfred2::ay#4 mode_sixsfred2::@5/(byte) mode_sixsfred2::ay#2 )
  (byte~) mode_sixsfred2::$20 ← (byte) mode_sixsfred2::ay#2 >> (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte~) mode_sixsfred2::$21 ← (byte~) mode_sixsfred2::$20 & (byte/signed byte/word/signed word/dword/signed dword) 3
  (byte) mode_sixsfred2::row#0 ← (byte~) mode_sixsfred2::$21
  *((byte*) mode_sixsfred2::gfxa#2) ← *((byte[]) mode_sixsfred2::row_bitmask#0 + (byte) mode_sixsfred2::row#0)
  (byte*) mode_sixsfred2::gfxa#1 ← ++ (byte*) mode_sixsfred2::gfxa#2
  (byte) mode_sixsfred2::ax#1 ← ++ (byte) mode_sixsfred2::ax#2
  (boolean~) mode_sixsfred2::$22 ← (byte) mode_sixsfred2::ax#1 != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_sixsfred2::$22) goto mode_sixsfred2::@5
  to:mode_sixsfred2::@15
mode_sixsfred2::@15: scope:[mode_sixsfred2]  from mode_sixsfred2::@5
  (byte*) mode_sixsfred2::gfxa#4 ← phi( mode_sixsfred2::@5/(byte*) mode_sixsfred2::gfxa#1 )
  (byte) mode_sixsfred2::ay#3 ← phi( mode_sixsfred2::@5/(byte) mode_sixsfred2::ay#2 )
  (byte) mode_sixsfred2::ay#1 ← ++ (byte) mode_sixsfred2::ay#3
  (boolean~) mode_sixsfred2::$23 ← (byte) mode_sixsfred2::ay#1 != (byte/word/signed word/dword/signed dword) 200
  if((boolean~) mode_sixsfred2::$23) goto mode_sixsfred2::@4
  to:mode_sixsfred2::@16
mode_sixsfred2::@16: scope:[mode_sixsfred2]  from mode_sixsfred2::@15
  (byte*) mode_sixsfred2::gfxb#0 ← (byte*) mode_sixsfred2::PLANEB#0
  (byte) mode_sixsfred2::by#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred2::@6
mode_sixsfred2::@6: scope:[mode_sixsfred2]  from mode_sixsfred2::@16 mode_sixsfred2::@17
  (byte) mode_sixsfred2::by#4 ← phi( mode_sixsfred2::@16/(byte) mode_sixsfred2::by#0 mode_sixsfred2::@17/(byte) mode_sixsfred2::by#1 )
  (byte*) mode_sixsfred2::gfxb#3 ← phi( mode_sixsfred2::@16/(byte*) mode_sixsfred2::gfxb#0 mode_sixsfred2::@17/(byte*) mode_sixsfred2::gfxb#4 )
  (byte) mode_sixsfred2::bx#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_sixsfred2::@7
mode_sixsfred2::@7: scope:[mode_sixsfred2]  from mode_sixsfred2::@6 mode_sixsfred2::@7
  (byte) mode_sixsfred2::by#3 ← phi( mode_sixsfred2::@6/(byte) mode_sixsfred2::by#4 mode_sixsfred2::@7/(byte) mode_sixsfred2::by#3 )
  (byte) mode_sixsfred2::bx#2 ← phi( mode_sixsfred2::@6/(byte) mode_sixsfred2::bx#0 mode_sixsfred2::@7/(byte) mode_sixsfred2::bx#1 )
  (byte*) mode_sixsfred2::gfxb#2 ← phi( mode_sixsfred2::@6/(byte*) mode_sixsfred2::gfxb#3 mode_sixsfred2::@7/(byte*) mode_sixsfred2::gfxb#1 )
  *((byte*) mode_sixsfred2::gfxb#2) ← (byte/signed byte/word/signed word/dword/signed dword) 27
  (byte*) mode_sixsfred2::gfxb#1 ← ++ (byte*) mode_sixsfred2::gfxb#2
  (byte) mode_sixsfred2::bx#1 ← ++ (byte) mode_sixsfred2::bx#2
  (boolean~) mode_sixsfred2::$24 ← (byte) mode_sixsfred2::bx#1 != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_sixsfred2::$24) goto mode_sixsfred2::@7
  to:mode_sixsfred2::@17
mode_sixsfred2::@17: scope:[mode_sixsfred2]  from mode_sixsfred2::@7
  (byte*) mode_sixsfred2::gfxb#4 ← phi( mode_sixsfred2::@7/(byte*) mode_sixsfred2::gfxb#1 )
  (byte) mode_sixsfred2::by#2 ← phi( mode_sixsfred2::@7/(byte) mode_sixsfred2::by#3 )
  (byte) mode_sixsfred2::by#1 ← ++ (byte) mode_sixsfred2::by#2
  (boolean~) mode_sixsfred2::$25 ← (byte) mode_sixsfred2::by#1 != (byte/word/signed word/dword/signed dword) 200
  if((boolean~) mode_sixsfred2::$25) goto mode_sixsfred2::@6
  to:mode_sixsfred2::@8
mode_sixsfred2::@8: scope:[mode_sixsfred2]  from mode_sixsfred2::@11 mode_sixsfred2::@17
  if(true) goto mode_sixsfred2::@9
  to:mode_sixsfred2::@return
mode_sixsfred2::@9: scope:[mode_sixsfred2]  from mode_sixsfred2::@8
  (byte) keyboard_key_pressed::key#19 ← (byte) KEY_SPACE#0
  call keyboard_key_pressed param-assignment
  (byte) keyboard_key_pressed::return#21 ← (byte) keyboard_key_pressed::return#1
  to:mode_sixsfred2::@24
mode_sixsfred2::@24: scope:[mode_sixsfred2]  from mode_sixsfred2::@9
  (byte) keyboard_key_pressed::return#44 ← phi( mode_sixsfred2::@9/(byte) keyboard_key_pressed::return#21 )
  (byte~) mode_sixsfred2::$26 ← (byte) keyboard_key_pressed::return#44
  (boolean~) mode_sixsfred2::$27 ← (byte~) mode_sixsfred2::$26 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_sixsfred2::$28 ← ! (boolean~) mode_sixsfred2::$27
  if((boolean~) mode_sixsfred2::$28) goto mode_sixsfred2::@11
  to:mode_sixsfred2::@return
mode_sixsfred2::@11: scope:[mode_sixsfred2]  from mode_sixsfred2::@24
  to:mode_sixsfred2::@8
mode_sixsfred2::@return: scope:[mode_sixsfred2]  from mode_sixsfred2::@24 mode_sixsfred2::@8
  return 
  to:@return
mode_8bpppixelcell: scope:[mode_8bpppixelcell]  from menu::@39
  (byte*) mode_8bpppixelcell::PLANEA#0 ← ((byte*)) (word/signed word/dword/signed dword) 15360
  (byte*) mode_8bpppixelcell::PLANEB#0 ← ((byte*)) (word/signed word/dword/signed dword) 16384
  (byte~) mode_8bpppixelcell::$0 ← (byte) DTV_CONTROL_HIGHCOLOR_ON#0 | (byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0
  (byte~) mode_8bpppixelcell::$1 ← (byte~) mode_8bpppixelcell::$0 | (byte) DTV_CONTROL_CHUNKY_ON#0
  *((byte*) DTV_CONTROL#0) ← (byte~) mode_8bpppixelcell::$1
  (byte~) mode_8bpppixelcell::$2 ← (byte) VIC_ECM#0 | (byte) VIC_DEN#0
  (byte~) mode_8bpppixelcell::$3 ← (byte~) mode_8bpppixelcell::$2 | (byte) VIC_RSEL#0
  (byte/word/dword~) mode_8bpppixelcell::$4 ← (byte~) mode_8bpppixelcell::$3 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL#0) ← (byte/word/dword~) mode_8bpppixelcell::$4
  (byte~) mode_8bpppixelcell::$5 ← (byte) VIC_MCM#0 | (byte) VIC_CSEL#0
  *((byte*) VIC_CONTROL2#0) ← (byte~) mode_8bpppixelcell::$5
  (byte~) mode_8bpppixelcell::$6 ← < (byte*) mode_8bpppixelcell::PLANEA#0
  *((byte*) DTV_PLANEA_START_LO#0) ← (byte~) mode_8bpppixelcell::$6
  (byte~) mode_8bpppixelcell::$7 ← > (byte*) mode_8bpppixelcell::PLANEA#0
  *((byte*) DTV_PLANEA_START_MI#0) ← (byte~) mode_8bpppixelcell::$7
  *((byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1
  *((byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte~) mode_8bpppixelcell::$8 ← < (byte*) mode_8bpppixelcell::PLANEB#0
  *((byte*) DTV_PLANEB_START_LO#0) ← (byte~) mode_8bpppixelcell::$8
  (byte~) mode_8bpppixelcell::$9 ← > (byte*) mode_8bpppixelcell::PLANEB#0
  *((byte*) DTV_PLANEB_START_MI#0) ← (byte~) mode_8bpppixelcell::$9
  *((byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) mode_8bpppixelcell::i#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_8bpppixelcell::@1
mode_8bpppixelcell::@1: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell mode_8bpppixelcell::@1
  (byte) mode_8bpppixelcell::i#2 ← phi( mode_8bpppixelcell/(byte) mode_8bpppixelcell::i#0 mode_8bpppixelcell::@1/(byte) mode_8bpppixelcell::i#1 )
  *((byte*) DTV_PALETTE#0 + (byte) mode_8bpppixelcell::i#2) ← (byte) mode_8bpppixelcell::i#2
  (byte) mode_8bpppixelcell::i#1 ← ++ (byte) mode_8bpppixelcell::i#2
  (boolean~) mode_8bpppixelcell::$10 ← (byte) mode_8bpppixelcell::i#1 != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_8bpppixelcell::$10) goto mode_8bpppixelcell::@1
  to:mode_8bpppixelcell::@12
mode_8bpppixelcell::@12: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@1
  (byte*) mode_8bpppixelcell::gfxa#0 ← (byte*) mode_8bpppixelcell::PLANEA#0
  (byte) mode_8bpppixelcell::ay#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_8bpppixelcell::@2
mode_8bpppixelcell::@2: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@12 mode_8bpppixelcell::@13
  (byte*) mode_8bpppixelcell::gfxa#3 ← phi( mode_8bpppixelcell::@12/(byte*) mode_8bpppixelcell::gfxa#0 mode_8bpppixelcell::@13/(byte*) mode_8bpppixelcell::gfxa#4 )
  (byte) mode_8bpppixelcell::ay#4 ← phi( mode_8bpppixelcell::@12/(byte) mode_8bpppixelcell::ay#0 mode_8bpppixelcell::@13/(byte) mode_8bpppixelcell::ay#1 )
  (byte) mode_8bpppixelcell::ax#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_8bpppixelcell::@3
mode_8bpppixelcell::@3: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@2 mode_8bpppixelcell::@3
  (byte*) mode_8bpppixelcell::gfxa#2 ← phi( mode_8bpppixelcell::@2/(byte*) mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::@3/(byte*) mode_8bpppixelcell::gfxa#1 )
  (byte) mode_8bpppixelcell::ax#2 ← phi( mode_8bpppixelcell::@2/(byte) mode_8bpppixelcell::ax#0 mode_8bpppixelcell::@3/(byte) mode_8bpppixelcell::ax#1 )
  (byte) mode_8bpppixelcell::ay#2 ← phi( mode_8bpppixelcell::@2/(byte) mode_8bpppixelcell::ay#4 mode_8bpppixelcell::@3/(byte) mode_8bpppixelcell::ay#2 )
  (byte~) mode_8bpppixelcell::$11 ← (byte) mode_8bpppixelcell::ay#2 & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_8bpppixelcell::$12 ← (byte~) mode_8bpppixelcell::$11 << (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte~) mode_8bpppixelcell::$13 ← (byte) mode_8bpppixelcell::ax#2 & (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte~) mode_8bpppixelcell::$14 ← (byte~) mode_8bpppixelcell::$12 | (byte~) mode_8bpppixelcell::$13
  *((byte*) mode_8bpppixelcell::gfxa#2) ← (byte~) mode_8bpppixelcell::$14
  (byte*) mode_8bpppixelcell::gfxa#1 ← ++ (byte*) mode_8bpppixelcell::gfxa#2
  (byte) mode_8bpppixelcell::ax#1 ← ++ (byte) mode_8bpppixelcell::ax#2
  (boolean~) mode_8bpppixelcell::$15 ← (byte) mode_8bpppixelcell::ax#1 != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) mode_8bpppixelcell::$15) goto mode_8bpppixelcell::@3
  to:mode_8bpppixelcell::@13
mode_8bpppixelcell::@13: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@3
  (byte*) mode_8bpppixelcell::gfxa#4 ← phi( mode_8bpppixelcell::@3/(byte*) mode_8bpppixelcell::gfxa#1 )
  (byte) mode_8bpppixelcell::ay#3 ← phi( mode_8bpppixelcell::@3/(byte) mode_8bpppixelcell::ay#2 )
  (byte) mode_8bpppixelcell::ay#1 ← ++ (byte) mode_8bpppixelcell::ay#3
  (boolean~) mode_8bpppixelcell::$16 ← (byte) mode_8bpppixelcell::ay#1 != (byte/signed byte/word/signed word/dword/signed dword) 25
  if((boolean~) mode_8bpppixelcell::$16) goto mode_8bpppixelcell::@2
  to:mode_8bpppixelcell::@14
mode_8bpppixelcell::@14: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@13
  *((byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 50
  (byte*) mode_8bpppixelcell::CHARGEN#0 ← ((byte*)) (word/dword/signed dword) 53248
  (byte*) mode_8bpppixelcell::gfxb#0 ← (byte*) mode_8bpppixelcell::PLANEB#0
  (byte*) mode_8bpppixelcell::chargen#0 ← (byte*) mode_8bpppixelcell::CHARGEN#0
  (byte) mode_8bpppixelcell::col#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) mode_8bpppixelcell::ch#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_8bpppixelcell::@4
mode_8bpppixelcell::@4: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@14 mode_8bpppixelcell::@17
  (byte) mode_8bpppixelcell::ch#8 ← phi( mode_8bpppixelcell::@14/(byte) mode_8bpppixelcell::ch#0 mode_8bpppixelcell::@17/(byte) mode_8bpppixelcell::ch#1 )
  (byte) mode_8bpppixelcell::col#7 ← phi( mode_8bpppixelcell::@14/(byte) mode_8bpppixelcell::col#0 mode_8bpppixelcell::@17/(byte) mode_8bpppixelcell::col#8 )
  (byte*) mode_8bpppixelcell::gfxb#7 ← phi( mode_8bpppixelcell::@14/(byte*) mode_8bpppixelcell::gfxb#0 mode_8bpppixelcell::@17/(byte*) mode_8bpppixelcell::gfxb#8 )
  (byte*) mode_8bpppixelcell::chargen#4 ← phi( mode_8bpppixelcell::@14/(byte*) mode_8bpppixelcell::chargen#0 mode_8bpppixelcell::@17/(byte*) mode_8bpppixelcell::chargen#5 )
  (byte) mode_8bpppixelcell::cr#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_8bpppixelcell::@5
mode_8bpppixelcell::@5: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@16 mode_8bpppixelcell::@4
  (byte) mode_8bpppixelcell::ch#7 ← phi( mode_8bpppixelcell::@16/(byte) mode_8bpppixelcell::ch#3 mode_8bpppixelcell::@4/(byte) mode_8bpppixelcell::ch#8 )
  (byte) mode_8bpppixelcell::cr#6 ← phi( mode_8bpppixelcell::@16/(byte) mode_8bpppixelcell::cr#1 mode_8bpppixelcell::@4/(byte) mode_8bpppixelcell::cr#0 )
  (byte) mode_8bpppixelcell::col#5 ← phi( mode_8bpppixelcell::@16/(byte) mode_8bpppixelcell::col#6 mode_8bpppixelcell::@4/(byte) mode_8bpppixelcell::col#7 )
  (byte*) mode_8bpppixelcell::gfxb#5 ← phi( mode_8bpppixelcell::@16/(byte*) mode_8bpppixelcell::gfxb#6 mode_8bpppixelcell::@4/(byte*) mode_8bpppixelcell::gfxb#7 )
  (byte*) mode_8bpppixelcell::chargen#2 ← phi( mode_8bpppixelcell::@16/(byte*) mode_8bpppixelcell::chargen#3 mode_8bpppixelcell::@4/(byte*) mode_8bpppixelcell::chargen#4 )
  (byte) mode_8bpppixelcell::bits#0 ← *((byte*) mode_8bpppixelcell::chargen#2)
  (byte*) mode_8bpppixelcell::chargen#1 ← ++ (byte*) mode_8bpppixelcell::chargen#2
  (byte) mode_8bpppixelcell::cp#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_8bpppixelcell::@6
mode_8bpppixelcell::@6: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@5 mode_8bpppixelcell::@7
  (byte) mode_8bpppixelcell::ch#6 ← phi( mode_8bpppixelcell::@5/(byte) mode_8bpppixelcell::ch#7 mode_8bpppixelcell::@7/(byte) mode_8bpppixelcell::ch#4 )
  (byte*) mode_8bpppixelcell::chargen#8 ← phi( mode_8bpppixelcell::@5/(byte*) mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::@7/(byte*) mode_8bpppixelcell::chargen#6 )
  (byte) mode_8bpppixelcell::cr#5 ← phi( mode_8bpppixelcell::@5/(byte) mode_8bpppixelcell::cr#6 mode_8bpppixelcell::@7/(byte) mode_8bpppixelcell::cr#3 )
  (byte) mode_8bpppixelcell::cp#4 ← phi( mode_8bpppixelcell::@5/(byte) mode_8bpppixelcell::cp#0 mode_8bpppixelcell::@7/(byte) mode_8bpppixelcell::cp#1 )
  (byte) mode_8bpppixelcell::col#4 ← phi( mode_8bpppixelcell::@5/(byte) mode_8bpppixelcell::col#5 mode_8bpppixelcell::@7/(byte) mode_8bpppixelcell::col#1 )
  (byte*) mode_8bpppixelcell::gfxb#4 ← phi( mode_8bpppixelcell::@5/(byte*) mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::@7/(byte*) mode_8bpppixelcell::gfxb#1 )
  (byte) mode_8bpppixelcell::bits#2 ← phi( mode_8bpppixelcell::@5/(byte) mode_8bpppixelcell::bits#0 mode_8bpppixelcell::@7/(byte) mode_8bpppixelcell::bits#1 )
  (byte) mode_8bpppixelcell::c#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte~) mode_8bpppixelcell::$17 ← (byte) mode_8bpppixelcell::bits#2 & (byte/word/signed word/dword/signed dword) 128
  (boolean~) mode_8bpppixelcell::$18 ← (byte~) mode_8bpppixelcell::$17 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_8bpppixelcell::$19 ← ! (boolean~) mode_8bpppixelcell::$18
  if((boolean~) mode_8bpppixelcell::$19) goto mode_8bpppixelcell::@7
  to:mode_8bpppixelcell::@15
mode_8bpppixelcell::@7: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@15 mode_8bpppixelcell::@6
  (byte) mode_8bpppixelcell::ch#4 ← phi( mode_8bpppixelcell::@15/(byte) mode_8bpppixelcell::ch#5 mode_8bpppixelcell::@6/(byte) mode_8bpppixelcell::ch#6 )
  (byte*) mode_8bpppixelcell::chargen#6 ← phi( mode_8bpppixelcell::@15/(byte*) mode_8bpppixelcell::chargen#7 mode_8bpppixelcell::@6/(byte*) mode_8bpppixelcell::chargen#8 )
  (byte) mode_8bpppixelcell::cr#3 ← phi( mode_8bpppixelcell::@15/(byte) mode_8bpppixelcell::cr#4 mode_8bpppixelcell::@6/(byte) mode_8bpppixelcell::cr#5 )
  (byte) mode_8bpppixelcell::cp#2 ← phi( mode_8bpppixelcell::@15/(byte) mode_8bpppixelcell::cp#3 mode_8bpppixelcell::@6/(byte) mode_8bpppixelcell::cp#4 )
  (byte) mode_8bpppixelcell::col#2 ← phi( mode_8bpppixelcell::@15/(byte) mode_8bpppixelcell::col#3 mode_8bpppixelcell::@6/(byte) mode_8bpppixelcell::col#4 )
  (byte) mode_8bpppixelcell::bits#3 ← phi( mode_8bpppixelcell::@15/(byte) mode_8bpppixelcell::bits#4 mode_8bpppixelcell::@6/(byte) mode_8bpppixelcell::bits#2 )
  (byte*) mode_8bpppixelcell::gfxb#2 ← phi( mode_8bpppixelcell::@15/(byte*) mode_8bpppixelcell::gfxb#3 mode_8bpppixelcell::@6/(byte*) mode_8bpppixelcell::gfxb#4 )
  (byte) mode_8bpppixelcell::c#2 ← phi( mode_8bpppixelcell::@15/(byte) mode_8bpppixelcell::c#1 mode_8bpppixelcell::@6/(byte) mode_8bpppixelcell::c#0 )
  *((byte*) mode_8bpppixelcell::gfxb#2) ← (byte) mode_8bpppixelcell::c#2
  (byte*) mode_8bpppixelcell::gfxb#1 ← ++ (byte*) mode_8bpppixelcell::gfxb#2
  (byte~) mode_8bpppixelcell::$20 ← (byte) mode_8bpppixelcell::bits#3 << (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte) mode_8bpppixelcell::bits#1 ← (byte~) mode_8bpppixelcell::$20
  (byte) mode_8bpppixelcell::col#1 ← ++ (byte) mode_8bpppixelcell::col#2
  (byte) mode_8bpppixelcell::cp#1 ← ++ (byte) mode_8bpppixelcell::cp#2
  (boolean~) mode_8bpppixelcell::$21 ← (byte) mode_8bpppixelcell::cp#1 != (byte/signed byte/word/signed word/dword/signed dword) 8
  if((boolean~) mode_8bpppixelcell::$21) goto mode_8bpppixelcell::@6
  to:mode_8bpppixelcell::@16
mode_8bpppixelcell::@15: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@6
  (byte) mode_8bpppixelcell::ch#5 ← phi( mode_8bpppixelcell::@6/(byte) mode_8bpppixelcell::ch#6 )
  (byte*) mode_8bpppixelcell::chargen#7 ← phi( mode_8bpppixelcell::@6/(byte*) mode_8bpppixelcell::chargen#8 )
  (byte) mode_8bpppixelcell::cr#4 ← phi( mode_8bpppixelcell::@6/(byte) mode_8bpppixelcell::cr#5 )
  (byte) mode_8bpppixelcell::cp#3 ← phi( mode_8bpppixelcell::@6/(byte) mode_8bpppixelcell::cp#4 )
  (byte) mode_8bpppixelcell::bits#4 ← phi( mode_8bpppixelcell::@6/(byte) mode_8bpppixelcell::bits#2 )
  (byte*) mode_8bpppixelcell::gfxb#3 ← phi( mode_8bpppixelcell::@6/(byte*) mode_8bpppixelcell::gfxb#4 )
  (byte) mode_8bpppixelcell::col#3 ← phi( mode_8bpppixelcell::@6/(byte) mode_8bpppixelcell::col#4 )
  (byte) mode_8bpppixelcell::c#1 ← (byte) mode_8bpppixelcell::col#3
  to:mode_8bpppixelcell::@7
mode_8bpppixelcell::@16: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@7
  (byte) mode_8bpppixelcell::col#6 ← phi( mode_8bpppixelcell::@7/(byte) mode_8bpppixelcell::col#1 )
  (byte*) mode_8bpppixelcell::gfxb#6 ← phi( mode_8bpppixelcell::@7/(byte*) mode_8bpppixelcell::gfxb#1 )
  (byte) mode_8bpppixelcell::ch#3 ← phi( mode_8bpppixelcell::@7/(byte) mode_8bpppixelcell::ch#4 )
  (byte*) mode_8bpppixelcell::chargen#3 ← phi( mode_8bpppixelcell::@7/(byte*) mode_8bpppixelcell::chargen#6 )
  (byte) mode_8bpppixelcell::cr#2 ← phi( mode_8bpppixelcell::@7/(byte) mode_8bpppixelcell::cr#3 )
  (byte) mode_8bpppixelcell::cr#1 ← ++ (byte) mode_8bpppixelcell::cr#2
  (boolean~) mode_8bpppixelcell::$22 ← (byte) mode_8bpppixelcell::cr#1 != (byte/signed byte/word/signed word/dword/signed dword) 8
  if((boolean~) mode_8bpppixelcell::$22) goto mode_8bpppixelcell::@5
  to:mode_8bpppixelcell::@17
mode_8bpppixelcell::@17: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@16
  (byte) mode_8bpppixelcell::col#8 ← phi( mode_8bpppixelcell::@16/(byte) mode_8bpppixelcell::col#6 )
  (byte*) mode_8bpppixelcell::gfxb#8 ← phi( mode_8bpppixelcell::@16/(byte*) mode_8bpppixelcell::gfxb#6 )
  (byte*) mode_8bpppixelcell::chargen#5 ← phi( mode_8bpppixelcell::@16/(byte*) mode_8bpppixelcell::chargen#3 )
  (byte) mode_8bpppixelcell::ch#2 ← phi( mode_8bpppixelcell::@16/(byte) mode_8bpppixelcell::ch#3 )
  (byte) mode_8bpppixelcell::ch#1 ← ++ (byte) mode_8bpppixelcell::ch#2
  (boolean~) mode_8bpppixelcell::$23 ← (byte) mode_8bpppixelcell::ch#1 != (byte/signed byte/word/signed word/dword/signed dword) 0
  if((boolean~) mode_8bpppixelcell::$23) goto mode_8bpppixelcell::@4
  to:mode_8bpppixelcell::@18
mode_8bpppixelcell::@18: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@17
  *((byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 55
  to:mode_8bpppixelcell::@8
mode_8bpppixelcell::@8: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@11 mode_8bpppixelcell::@18
  if(true) goto mode_8bpppixelcell::@9
  to:mode_8bpppixelcell::@return
mode_8bpppixelcell::@9: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@8
  (byte) keyboard_key_pressed::key#20 ← (byte) KEY_SPACE#0
  call keyboard_key_pressed param-assignment
  (byte) keyboard_key_pressed::return#22 ← (byte) keyboard_key_pressed::return#1
  to:mode_8bpppixelcell::@24
mode_8bpppixelcell::@24: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@9
  (byte) keyboard_key_pressed::return#45 ← phi( mode_8bpppixelcell::@9/(byte) keyboard_key_pressed::return#22 )
  (byte~) mode_8bpppixelcell::$24 ← (byte) keyboard_key_pressed::return#45
  (boolean~) mode_8bpppixelcell::$25 ← (byte~) mode_8bpppixelcell::$24 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_8bpppixelcell::$26 ← ! (boolean~) mode_8bpppixelcell::$25
  if((boolean~) mode_8bpppixelcell::$26) goto mode_8bpppixelcell::@11
  to:mode_8bpppixelcell::@return
mode_8bpppixelcell::@11: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@24
  to:mode_8bpppixelcell::@8
mode_8bpppixelcell::@return: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@24 mode_8bpppixelcell::@8
  return 
  to:@return
mode_8bppchunkybmm: scope:[mode_8bppchunkybmm]  from menu::@41
  (dword) mode_8bppchunkybmm::PLANEB#0 ← (dword/signed dword) 131072
  (byte~) mode_8bppchunkybmm::$0 ← (byte) DTV_CONTROL_HIGHCOLOR_ON#0 | (byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0
  (byte~) mode_8bppchunkybmm::$1 ← (byte~) mode_8bppchunkybmm::$0 | (byte) DTV_CONTROL_CHUNKY_ON#0
  (byte~) mode_8bppchunkybmm::$2 ← (byte~) mode_8bppchunkybmm::$1 | (byte) DTV_CONTROL_COLORRAM_OFF#0
  *((byte*) DTV_CONTROL#0) ← (byte~) mode_8bppchunkybmm::$2
  (byte~) mode_8bppchunkybmm::$3 ← (byte) VIC_ECM#0 | (byte) VIC_DEN#0
  (byte~) mode_8bppchunkybmm::$4 ← (byte~) mode_8bppchunkybmm::$3 | (byte) VIC_RSEL#0
  (byte/word/dword~) mode_8bppchunkybmm::$5 ← (byte~) mode_8bppchunkybmm::$4 | (byte/signed byte/word/signed word/dword/signed dword) 3
  *((byte*) VIC_CONTROL#0) ← (byte/word/dword~) mode_8bppchunkybmm::$5
  (byte~) mode_8bppchunkybmm::$6 ← (byte) VIC_MCM#0 | (byte) VIC_CSEL#0
  *((byte*) VIC_CONTROL2#0) ← (byte~) mode_8bppchunkybmm::$6
  (word~) mode_8bppchunkybmm::$7 ← < (dword) mode_8bppchunkybmm::PLANEB#0
  (byte~) mode_8bppchunkybmm::$8 ← < (word~) mode_8bppchunkybmm::$7
  *((byte*) DTV_PLANEB_START_LO#0) ← (byte~) mode_8bppchunkybmm::$8
  (word~) mode_8bppchunkybmm::$9 ← < (dword) mode_8bppchunkybmm::PLANEB#0
  (byte~) mode_8bppchunkybmm::$10 ← > (word~) mode_8bppchunkybmm::$9
  *((byte*) DTV_PLANEB_START_MI#0) ← (byte~) mode_8bppchunkybmm::$10
  (word~) mode_8bppchunkybmm::$11 ← > (dword) mode_8bppchunkybmm::PLANEB#0
  (byte~) mode_8bppchunkybmm::$12 ← < (word~) mode_8bppchunkybmm::$11
  *((byte*) DTV_PLANEB_START_HI#0) ← (byte~) mode_8bppchunkybmm::$12
  *((byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 8
  *((byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  *((byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) mode_8bppchunkybmm::i#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_8bppchunkybmm::@1
mode_8bppchunkybmm::@1: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm mode_8bppchunkybmm::@1
  (byte) mode_8bppchunkybmm::i#2 ← phi( mode_8bppchunkybmm/(byte) mode_8bppchunkybmm::i#0 mode_8bppchunkybmm::@1/(byte) mode_8bppchunkybmm::i#1 )
  *((byte*) DTV_PALETTE#0 + (byte) mode_8bppchunkybmm::i#2) ← (byte) mode_8bppchunkybmm::i#2
  (byte) mode_8bppchunkybmm::i#1 ← ++ (byte) mode_8bppchunkybmm::i#2
  (boolean~) mode_8bppchunkybmm::$13 ← (byte) mode_8bppchunkybmm::i#1 != (byte/signed byte/word/signed word/dword/signed dword) 16
  if((boolean~) mode_8bppchunkybmm::$13) goto mode_8bppchunkybmm::@1
  to:mode_8bppchunkybmm::@9
mode_8bppchunkybmm::@9: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@1
  (dword~) mode_8bppchunkybmm::$14 ← (dword) mode_8bppchunkybmm::PLANEB#0 / (word/signed word/dword/signed dword) 16384
  (byte~) mode_8bppchunkybmm::$15 ← ((byte)) (dword~) mode_8bppchunkybmm::$14
  (byte) mode_8bppchunkybmm::gfxbCpuBank#0 ← (byte~) mode_8bppchunkybmm::$15
  (byte) dtvSetCpuBankSegment1::cpuBankIdx#0 ← (byte) mode_8bppchunkybmm::gfxbCpuBank#0
  call dtvSetCpuBankSegment1 param-assignment
  to:mode_8bppchunkybmm::@18
mode_8bppchunkybmm::@18: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@9
  (byte) mode_8bppchunkybmm::gfxbCpuBank#3 ← phi( mode_8bppchunkybmm::@9/(byte) mode_8bppchunkybmm::gfxbCpuBank#0 )
  (byte) mode_8bppchunkybmm::gfxbCpuBank#1 ← ++ (byte) mode_8bppchunkybmm::gfxbCpuBank#3
  (byte*) mode_8bppchunkybmm::gfxb#0 ← ((byte*)) (word/signed word/dword/signed dword) 16384
  (byte) mode_8bppchunkybmm::y#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_8bppchunkybmm::@2
mode_8bppchunkybmm::@2: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@11 mode_8bppchunkybmm::@18
  (byte) mode_8bppchunkybmm::gfxbCpuBank#7 ← phi( mode_8bppchunkybmm::@11/(byte) mode_8bppchunkybmm::gfxbCpuBank#9 mode_8bppchunkybmm::@18/(byte) mode_8bppchunkybmm::gfxbCpuBank#1 )
  (byte) mode_8bppchunkybmm::y#6 ← phi( mode_8bppchunkybmm::@11/(byte) mode_8bppchunkybmm::y#1 mode_8bppchunkybmm::@18/(byte) mode_8bppchunkybmm::y#0 )
  (byte*) mode_8bppchunkybmm::gfxb#5 ← phi( mode_8bppchunkybmm::@11/(byte*) mode_8bppchunkybmm::gfxb#6 mode_8bppchunkybmm::@18/(byte*) mode_8bppchunkybmm::gfxb#0 )
  (word) mode_8bppchunkybmm::x#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:mode_8bppchunkybmm::@3
mode_8bppchunkybmm::@3: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@2 mode_8bppchunkybmm::@4
  (byte) mode_8bppchunkybmm::gfxbCpuBank#6 ← phi( mode_8bppchunkybmm::@2/(byte) mode_8bppchunkybmm::gfxbCpuBank#7 mode_8bppchunkybmm::@4/(byte) mode_8bppchunkybmm::gfxbCpuBank#8 )
  (byte) mode_8bppchunkybmm::y#5 ← phi( mode_8bppchunkybmm::@2/(byte) mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::@4/(byte) mode_8bppchunkybmm::y#2 )
  (word) mode_8bppchunkybmm::x#4 ← phi( mode_8bppchunkybmm::@2/(word) mode_8bppchunkybmm::x#0 mode_8bppchunkybmm::@4/(word) mode_8bppchunkybmm::x#1 )
  (byte*) mode_8bppchunkybmm::gfxb#3 ← phi( mode_8bppchunkybmm::@2/(byte*) mode_8bppchunkybmm::gfxb#5 mode_8bppchunkybmm::@4/(byte*) mode_8bppchunkybmm::gfxb#1 )
  (boolean~) mode_8bppchunkybmm::$17 ← (byte*) mode_8bppchunkybmm::gfxb#3 == (word/dword/signed dword) 32768
  (boolean~) mode_8bppchunkybmm::$18 ← ! (boolean~) mode_8bppchunkybmm::$17
  if((boolean~) mode_8bppchunkybmm::$18) goto mode_8bppchunkybmm::@4
  to:mode_8bppchunkybmm::@10
mode_8bppchunkybmm::@4: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@19 mode_8bppchunkybmm::@3
  (byte) mode_8bppchunkybmm::gfxbCpuBank#8 ← phi( mode_8bppchunkybmm::@19/(byte) mode_8bppchunkybmm::gfxbCpuBank#2 mode_8bppchunkybmm::@3/(byte) mode_8bppchunkybmm::gfxbCpuBank#6 )
  (byte*) mode_8bppchunkybmm::gfxb#4 ← phi( mode_8bppchunkybmm::@19/(byte*) mode_8bppchunkybmm::gfxb#2 mode_8bppchunkybmm::@3/(byte*) mode_8bppchunkybmm::gfxb#3 )
  (byte) mode_8bppchunkybmm::y#2 ← phi( mode_8bppchunkybmm::@19/(byte) mode_8bppchunkybmm::y#4 mode_8bppchunkybmm::@3/(byte) mode_8bppchunkybmm::y#5 )
  (word) mode_8bppchunkybmm::x#2 ← phi( mode_8bppchunkybmm::@19/(word) mode_8bppchunkybmm::x#3 mode_8bppchunkybmm::@3/(word) mode_8bppchunkybmm::x#4 )
  (word~) mode_8bppchunkybmm::$20 ← (word) mode_8bppchunkybmm::x#2 + (byte) mode_8bppchunkybmm::y#2
  (byte~) mode_8bppchunkybmm::$21 ← ((byte)) (word~) mode_8bppchunkybmm::$20
  (byte) mode_8bppchunkybmm::c#0 ← (byte~) mode_8bppchunkybmm::$21
  *((byte*) mode_8bppchunkybmm::gfxb#4) ← (byte) mode_8bppchunkybmm::c#0
  (byte*) mode_8bppchunkybmm::gfxb#1 ← ++ (byte*) mode_8bppchunkybmm::gfxb#4
  (word) mode_8bppchunkybmm::x#1 ← ++ (word) mode_8bppchunkybmm::x#2
  (boolean~) mode_8bppchunkybmm::$22 ← (word) mode_8bppchunkybmm::x#1 != (word/signed word/dword/signed dword) 320
  if((boolean~) mode_8bppchunkybmm::$22) goto mode_8bppchunkybmm::@3
  to:mode_8bppchunkybmm::@11
mode_8bppchunkybmm::@10: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@3
  (byte) mode_8bppchunkybmm::y#7 ← phi( mode_8bppchunkybmm::@3/(byte) mode_8bppchunkybmm::y#5 )
  (word) mode_8bppchunkybmm::x#5 ← phi( mode_8bppchunkybmm::@3/(word) mode_8bppchunkybmm::x#4 )
  (byte) mode_8bppchunkybmm::gfxbCpuBank#4 ← phi( mode_8bppchunkybmm::@3/(byte) mode_8bppchunkybmm::gfxbCpuBank#6 )
  (byte) dtvSetCpuBankSegment1::cpuBankIdx#1 ← (byte) mode_8bppchunkybmm::gfxbCpuBank#4
  call dtvSetCpuBankSegment1 param-assignment
  to:mode_8bppchunkybmm::@19
mode_8bppchunkybmm::@19: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@10
  (byte) mode_8bppchunkybmm::y#4 ← phi( mode_8bppchunkybmm::@10/(byte) mode_8bppchunkybmm::y#7 )
  (word) mode_8bppchunkybmm::x#3 ← phi( mode_8bppchunkybmm::@10/(word) mode_8bppchunkybmm::x#5 )
  (byte) mode_8bppchunkybmm::gfxbCpuBank#5 ← phi( mode_8bppchunkybmm::@10/(byte) mode_8bppchunkybmm::gfxbCpuBank#4 )
  (byte) mode_8bppchunkybmm::gfxbCpuBank#2 ← ++ (byte) mode_8bppchunkybmm::gfxbCpuBank#5
  (byte*) mode_8bppchunkybmm::gfxb#2 ← ((byte*)) (word/signed word/dword/signed dword) 16384
  to:mode_8bppchunkybmm::@4
mode_8bppchunkybmm::@11: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@4
  (byte) mode_8bppchunkybmm::gfxbCpuBank#9 ← phi( mode_8bppchunkybmm::@4/(byte) mode_8bppchunkybmm::gfxbCpuBank#8 )
  (byte*) mode_8bppchunkybmm::gfxb#6 ← phi( mode_8bppchunkybmm::@4/(byte*) mode_8bppchunkybmm::gfxb#1 )
  (byte) mode_8bppchunkybmm::y#3 ← phi( mode_8bppchunkybmm::@4/(byte) mode_8bppchunkybmm::y#2 )
  (byte) mode_8bppchunkybmm::y#1 ← ++ (byte) mode_8bppchunkybmm::y#3
  (boolean~) mode_8bppchunkybmm::$23 ← (byte) mode_8bppchunkybmm::y#1 != (byte/word/signed word/dword/signed dword) 200
  if((boolean~) mode_8bppchunkybmm::$23) goto mode_8bppchunkybmm::@2
  to:mode_8bppchunkybmm::@12
mode_8bppchunkybmm::@12: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@11
  (byte/signed byte/word/signed word/dword/signed dword~) mode_8bppchunkybmm::$24 ← (word/signed word/dword/signed dword) 16384 / (word/signed word/dword/signed dword) 16384
  (byte~) mode_8bppchunkybmm::$25 ← ((byte)) (byte/signed byte/word/signed word/dword/signed dword~) mode_8bppchunkybmm::$24
  (byte) dtvSetCpuBankSegment1::cpuBankIdx#2 ← (byte~) mode_8bppchunkybmm::$25
  call dtvSetCpuBankSegment1 param-assignment
  to:mode_8bppchunkybmm::@20
mode_8bppchunkybmm::@20: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@12
  to:mode_8bppchunkybmm::@5
mode_8bppchunkybmm::@5: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@20 mode_8bppchunkybmm::@8
  if(true) goto mode_8bppchunkybmm::@6
  to:mode_8bppchunkybmm::@return
mode_8bppchunkybmm::@6: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@5
  (byte) keyboard_key_pressed::key#21 ← (byte) KEY_SPACE#0
  call keyboard_key_pressed param-assignment
  (byte) keyboard_key_pressed::return#23 ← (byte) keyboard_key_pressed::return#1
  to:mode_8bppchunkybmm::@21
mode_8bppchunkybmm::@21: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@6
  (byte) keyboard_key_pressed::return#46 ← phi( mode_8bppchunkybmm::@6/(byte) keyboard_key_pressed::return#23 )
  (byte~) mode_8bppchunkybmm::$27 ← (byte) keyboard_key_pressed::return#46
  (boolean~) mode_8bppchunkybmm::$28 ← (byte~) mode_8bppchunkybmm::$27 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) mode_8bppchunkybmm::$29 ← ! (boolean~) mode_8bppchunkybmm::$28
  if((boolean~) mode_8bppchunkybmm::$29) goto mode_8bppchunkybmm::@8
  to:mode_8bppchunkybmm::@return
mode_8bppchunkybmm::@8: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@21
  to:mode_8bppchunkybmm::@5
mode_8bppchunkybmm::@return: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@21 mode_8bppchunkybmm::@5
  return 
  to:@return
@32: scope:[]  from @20
  (byte*) print_char_cursor#50 ← phi( @20/(byte*) print_char_cursor#68 )
  (byte*) print_line_cursor#48 ← phi( @20/(byte*) print_line_cursor#65 )
  (byte*) print_screen#32 ← phi( @20/(byte*) print_screen#48 )
  call main param-assignment
  to:@33
@33: scope:[]  from @32
  (byte*) print_char_cursor#30 ← phi( @32/(byte*) print_char_cursor#11 )
  (byte*) print_line_cursor#29 ← phi( @32/(byte*) print_line_cursor#10 )
  (byte*) print_screen#16 ← phi( @32/(byte*) print_screen#4 )
  (byte*) print_screen#7 ← (byte*) print_screen#16
  (byte*) print_line_cursor#15 ← (byte*) print_line_cursor#29
  (byte*) print_char_cursor#16 ← (byte*) print_char_cursor#30
  to:@end
@end: scope:[]  from @33

SYMBOL TABLE SSA
(string~) $0
(string~) $1
(string~) $10
(string~) $11
(string~) $12
(string~) $13
(string~) $14
(string~) $15
(string~) $16
(string~) $17
(string~) $18
(string~) $19
(string~) $2
(const string) $20 = (string) "C64DTV Graphics Modes            CCLHBME@"
(const string) $21 = (string) "                                 OHIIMCC@"
(const string) $22 = (string) "                                 LUNCMMM@"
(const string) $23 = (string) "----------------------------------------@"
(const string) $24 = (string) "1. Standard Char             (V) 0000000@"
(const string) $25 = (string) "2. Extended Color Char       (V) 0000001@"
(const string) $26 = (string) "3. Multicolor Char           (V) 0000010@"
(const string) $27 = (string) "4. Standard Bitmap           (V) 0000100@"
(const string) $28 = (string) "5. Multicolor Bitmap         (V) 0000110@"
(const string) $29 = (string) "6. High Color Standard Char  (H) 0001000@"
(string~) $3
(const string) $30 = (string) "7. High Extended Color Char  (H) 0001001@"
(const string) $31 = (string) "8. High Multicolor Char      (H) 0001010@"
(const string) $32 = (string) "9. High Multicolor Bitmap    (H) 0001110@"
(const string) $33 = (string) "a. Sixs Fred 2               (D) 0010111@"
(const string) $34 = (string) "b. Two Plane Bitmap          (D) 0011101@"
(const string) $35 = (string) "c. Sixs Fred (2 Plane MC BM) (D) 0011111@"
(const string) $36 = (string) "d. 8bpp Pixel Cell           (D) 0111011@"
(const string) $37 = (string) "e. Chunky 8bpp Bitmap        (D) 1111011@"
(const string) $38 = (string) "----------------------------------------@"
(const string) $39 = (string) "    (V) vicII (H) vicII+hicol (D) c64dtv@"
(string~) $4
(const string) $40 = (string) "@"
(string~) $5
(string~) $6
(string~) $7
(string~) $8
(string~) $9
(label) @1
(label) @15
(label) @20
(label) @32
(label) @33
(label) @begin
(label) @end
(byte*) BGCOL
(byte*) BGCOL#0
(byte*) BGCOL1
(byte*) BGCOL1#0
(byte*) BGCOL2
(byte*) BGCOL2#0
(byte*) BGCOL3
(byte*) BGCOL3#0
(byte*) BGCOL4
(byte*) BGCOL4#0
(byte) BLACK
(byte) BLACK#0
(byte) BLUE
(byte) BLUE#0
(byte*) BORDERCOL
(byte*) BORDERCOL#0
(byte*) CIA1_PORT_A
(byte*) CIA1_PORT_A#0
(byte*) CIA1_PORT_B
(byte*) CIA1_PORT_B#0
(byte*) CIA2_PORT_A
(byte*) CIA2_PORT_A#0
(byte*) CIA2_PORT_A_DDR
(byte*) CIA2_PORT_A_DDR#0
(byte*) COLS
(byte*) COLS#0
(dword) DTV_COLOR_BANK_DEFAULT
(dword) DTV_COLOR_BANK_DEFAULT#0
(byte*) DTV_COLOR_BANK_HI
(byte*) DTV_COLOR_BANK_HI#0
(byte*) DTV_COLOR_BANK_LO
(byte*) DTV_COLOR_BANK_LO#0
(byte*) DTV_CONTROL
(byte*) DTV_CONTROL#0
(byte) DTV_CONTROL_CHUNKY_ON
(byte) DTV_CONTROL_CHUNKY_ON#0
(byte) DTV_CONTROL_COLORRAM_OFF
(byte) DTV_CONTROL_COLORRAM_OFF#0
(byte) DTV_CONTROL_HIGHCOLOR_ON
(byte) DTV_CONTROL_HIGHCOLOR_ON#0
(byte) DTV_CONTROL_LINEAR_ADDRESSING_ON
(byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0
(byte*) DTV_FEATURE
(byte*) DTV_FEATURE#0
(byte) DTV_FEATURE_ENABLE
(byte) DTV_FEATURE_ENABLE#0
(byte*) DTV_GRAPHICS_VIC_BANK
(byte*) DTV_GRAPHICS_VIC_BANK#0
(byte*) DTV_PALETTE
(byte*) DTV_PALETTE#0
(byte[16]) DTV_PALETTE_DEFAULT
(byte[16]) DTV_PALETTE_DEFAULT#0
(byte*) DTV_PLANEA_MODULO_HI
(byte*) DTV_PLANEA_MODULO_HI#0
(byte*) DTV_PLANEA_MODULO_LO
(byte*) DTV_PLANEA_MODULO_LO#0
(byte*) DTV_PLANEA_START_HI
(byte*) DTV_PLANEA_START_HI#0
(byte*) DTV_PLANEA_START_LO
(byte*) DTV_PLANEA_START_LO#0
(byte*) DTV_PLANEA_START_MI
(byte*) DTV_PLANEA_START_MI#0
(byte*) DTV_PLANEA_STEP
(byte*) DTV_PLANEA_STEP#0
(byte*) DTV_PLANEB_MODULO_HI
(byte*) DTV_PLANEB_MODULO_HI#0
(byte*) DTV_PLANEB_MODULO_LO
(byte*) DTV_PLANEB_MODULO_LO#0
(byte*) DTV_PLANEB_START_HI
(byte*) DTV_PLANEB_START_HI#0
(byte*) DTV_PLANEB_START_LO
(byte*) DTV_PLANEB_START_LO#0
(byte*) DTV_PLANEB_START_MI
(byte*) DTV_PLANEB_START_MI#0
(byte*) DTV_PLANEB_STEP
(byte*) DTV_PLANEB_STEP#0
(byte) GREEN
(byte) GREEN#0
(byte) KEY_1
(byte) KEY_1#0
(byte) KEY_2
(byte) KEY_2#0
(byte) KEY_3
(byte) KEY_3#0
(byte) KEY_6
(byte) KEY_6#0
(byte) KEY_7
(byte) KEY_7#0
(byte) KEY_8
(byte) KEY_8#0
(byte) KEY_A
(byte) KEY_A#0
(byte) KEY_B
(byte) KEY_B#0
(byte) KEY_C
(byte) KEY_C#0
(byte) KEY_D
(byte) KEY_D#0
(byte) KEY_E
(byte) KEY_E#0
(byte) KEY_SPACE
(byte) KEY_SPACE#0
(byte) LIGHT_GREEN
(byte) LIGHT_GREEN#0
(byte[]) MENU_TEXT
(byte[]) MENU_TEXT#0
(byte*) PROCPORT
(byte*) PROCPORT#0
(byte) VIC_BMM
(byte) VIC_BMM#0
(byte*) VIC_CONTROL
(byte*) VIC_CONTROL#0
(byte*) VIC_CONTROL2
(byte*) VIC_CONTROL2#0
(byte) VIC_CSEL
(byte) VIC_CSEL#0
(byte) VIC_DEN
(byte) VIC_DEN#0
(byte) VIC_ECM
(byte) VIC_ECM#0
(byte) VIC_MCM
(byte) VIC_MCM#0
(byte*) VIC_MEMORY
(byte*) VIC_MEMORY#0
(byte) VIC_RSEL
(byte) VIC_RSEL#0
(void()) dtvSetCpuBankSegment1((byte) dtvSetCpuBankSegment1::cpuBankIdx)
(label) dtvSetCpuBankSegment1::@return
(byte*) dtvSetCpuBankSegment1::cpuBank
(byte*) dtvSetCpuBankSegment1::cpuBank#0
(byte) dtvSetCpuBankSegment1::cpuBankIdx
(byte) dtvSetCpuBankSegment1::cpuBankIdx#0
(byte) dtvSetCpuBankSegment1::cpuBankIdx#1
(byte) dtvSetCpuBankSegment1::cpuBankIdx#2
(byte) dtvSetCpuBankSegment1::cpuBankIdx#3
(byte()) keyboard_key_pressed((byte) keyboard_key_pressed::key)
(byte~) keyboard_key_pressed::$0
(byte~) keyboard_key_pressed::$1
(byte~) keyboard_key_pressed::$2
(byte~) keyboard_key_pressed::$3
(label) keyboard_key_pressed::@2
(label) keyboard_key_pressed::@return
(byte) keyboard_key_pressed::colidx
(byte) keyboard_key_pressed::colidx#0
(byte) keyboard_key_pressed::colidx#1
(byte) keyboard_key_pressed::key
(byte) keyboard_key_pressed::key#0
(byte) keyboard_key_pressed::key#1
(byte) keyboard_key_pressed::key#10
(byte) keyboard_key_pressed::key#11
(byte) keyboard_key_pressed::key#12
(byte) keyboard_key_pressed::key#13
(byte) keyboard_key_pressed::key#14
(byte) keyboard_key_pressed::key#15
(byte) keyboard_key_pressed::key#16
(byte) keyboard_key_pressed::key#17
(byte) keyboard_key_pressed::key#18
(byte) keyboard_key_pressed::key#19
(byte) keyboard_key_pressed::key#2
(byte) keyboard_key_pressed::key#20
(byte) keyboard_key_pressed::key#21
(byte) keyboard_key_pressed::key#22
(byte) keyboard_key_pressed::key#3
(byte) keyboard_key_pressed::key#4
(byte) keyboard_key_pressed::key#5
(byte) keyboard_key_pressed::key#6
(byte) keyboard_key_pressed::key#7
(byte) keyboard_key_pressed::key#8
(byte) keyboard_key_pressed::key#9
(byte) keyboard_key_pressed::return
(byte) keyboard_key_pressed::return#0
(byte) keyboard_key_pressed::return#1
(byte) keyboard_key_pressed::return#10
(byte) keyboard_key_pressed::return#11
(byte) keyboard_key_pressed::return#12
(byte) keyboard_key_pressed::return#13
(byte) keyboard_key_pressed::return#14
(byte) keyboard_key_pressed::return#15
(byte) keyboard_key_pressed::return#16
(byte) keyboard_key_pressed::return#17
(byte) keyboard_key_pressed::return#18
(byte) keyboard_key_pressed::return#19
(byte) keyboard_key_pressed::return#2
(byte) keyboard_key_pressed::return#20
(byte) keyboard_key_pressed::return#21
(byte) keyboard_key_pressed::return#22
(byte) keyboard_key_pressed::return#23
(byte) keyboard_key_pressed::return#24
(byte) keyboard_key_pressed::return#25
(byte) keyboard_key_pressed::return#26
(byte) keyboard_key_pressed::return#27
(byte) keyboard_key_pressed::return#28
(byte) keyboard_key_pressed::return#29
(byte) keyboard_key_pressed::return#3
(byte) keyboard_key_pressed::return#30
(byte) keyboard_key_pressed::return#31
(byte) keyboard_key_pressed::return#32
(byte) keyboard_key_pressed::return#33
(byte) keyboard_key_pressed::return#34
(byte) keyboard_key_pressed::return#35
(byte) keyboard_key_pressed::return#36
(byte) keyboard_key_pressed::return#37
(byte) keyboard_key_pressed::return#38
(byte) keyboard_key_pressed::return#39
(byte) keyboard_key_pressed::return#4
(byte) keyboard_key_pressed::return#40
(byte) keyboard_key_pressed::return#41
(byte) keyboard_key_pressed::return#42
(byte) keyboard_key_pressed::return#43
(byte) keyboard_key_pressed::return#44
(byte) keyboard_key_pressed::return#45
(byte) keyboard_key_pressed::return#46
(byte) keyboard_key_pressed::return#5
(byte) keyboard_key_pressed::return#6
(byte) keyboard_key_pressed::return#7
(byte) keyboard_key_pressed::return#8
(byte) keyboard_key_pressed::return#9
(byte) keyboard_key_pressed::rowidx
(byte) keyboard_key_pressed::rowidx#0
(byte[]) keyboard_matrix_col_bitmask
(byte[]) keyboard_matrix_col_bitmask#0
(byte()) keyboard_matrix_read((byte) keyboard_matrix_read::rowid)
(byte~) keyboard_matrix_read::$0
(label) keyboard_matrix_read::@return
(byte) keyboard_matrix_read::return
(byte) keyboard_matrix_read::return#0
(byte) keyboard_matrix_read::return#1
(byte) keyboard_matrix_read::return#2
(byte) keyboard_matrix_read::return#3
(byte) keyboard_matrix_read::return#4
(byte) keyboard_matrix_read::row_pressed_bits
(byte) keyboard_matrix_read::row_pressed_bits#0
(byte) keyboard_matrix_read::rowid
(byte) keyboard_matrix_read::rowid#0
(byte) keyboard_matrix_read::rowid#1
(byte[8]) keyboard_matrix_row_bitmask
(byte[8]) keyboard_matrix_row_bitmask#0
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@7
(label) main::@return
(void()) menu()
(dword~) menu::$0
(dword~) menu::$1
(word/signed dword/dword~) menu::$10
(byte~) menu::$11
(byte/word/dword~) menu::$12
(byte~) menu::$13
(byte/word/dword~) menu::$14
(word~) menu::$15
(word~) menu::$16
(word/signed dword/dword~) menu::$17
(word~) menu::$18
(word~) menu::$19
(byte~) menu::$2
(word/signed dword/dword~) menu::$20
(word/dword~) menu::$21
(byte~) menu::$22
(boolean~) menu::$23
(byte*~) menu::$24
(boolean~) menu::$25
(byte~) menu::$29
(dword~) menu::$3
(boolean~) menu::$30
(boolean~) menu::$31
(byte~) menu::$33
(boolean~) menu::$34
(boolean~) menu::$35
(byte~) menu::$37
(boolean~) menu::$38
(boolean~) menu::$39
(word~) menu::$4
(byte~) menu::$41
(boolean~) menu::$42
(boolean~) menu::$43
(byte~) menu::$45
(boolean~) menu::$46
(boolean~) menu::$47
(byte~) menu::$49
(byte~) menu::$5
(boolean~) menu::$50
(boolean~) menu::$51
(byte~) menu::$53
(boolean~) menu::$54
(boolean~) menu::$55
(byte~) menu::$57
(boolean~) menu::$58
(boolean~) menu::$59
(dword~) menu::$6
(byte~) menu::$61
(boolean~) menu::$62
(boolean~) menu::$63
(byte~) menu::$65
(boolean~) menu::$66
(boolean~) menu::$67
(byte~) menu::$69
(word~) menu::$7
(boolean~) menu::$70
(boolean~) menu::$71
(byte~) menu::$8
(word~) menu::$9
(label) menu::@1
(label) menu::@10
(label) menu::@11
(label) menu::@12
(label) menu::@13
(label) menu::@14
(label) menu::@15
(label) menu::@16
(label) menu::@17
(label) menu::@18
(label) menu::@2
(label) menu::@21
(label) menu::@23
(label) menu::@25
(label) menu::@27
(label) menu::@29
(label) menu::@3
(label) menu::@31
(label) menu::@33
(label) menu::@35
(label) menu::@37
(label) menu::@39
(label) menu::@4
(label) menu::@41
(label) menu::@44
(label) menu::@45
(label) menu::@46
(label) menu::@47
(label) menu::@48
(label) menu::@49
(label) menu::@50
(label) menu::@51
(label) menu::@52
(label) menu::@53
(label) menu::@54
(label) menu::@55
(label) menu::@56
(label) menu::@57
(label) menu::@58
(label) menu::@59
(label) menu::@6
(label) menu::@60
(label) menu::@61
(label) menu::@62
(label) menu::@63
(label) menu::@64
(label) menu::@65
(label) menu::@66
(label) menu::@67
(label) menu::@68
(label) menu::@7
(label) menu::@8
(label) menu::@9
(label) menu::@return
(byte*) menu::CHARSET
(byte*) menu::CHARSET#0
(byte*) menu::SCREEN
(byte*) menu::SCREEN#0
(byte*) menu::c
(byte*) menu::c#0
(byte*) menu::c#1
(byte*) menu::c#2
(byte) menu::i
(byte) menu::i#0
(byte) menu::i#1
(byte) menu::i#2
(void()) mode_8bppchunkybmm()
(byte~) mode_8bppchunkybmm::$0
(byte~) mode_8bppchunkybmm::$1
(byte~) mode_8bppchunkybmm::$10
(word~) mode_8bppchunkybmm::$11
(byte~) mode_8bppchunkybmm::$12
(boolean~) mode_8bppchunkybmm::$13
(dword~) mode_8bppchunkybmm::$14
(byte~) mode_8bppchunkybmm::$15
(boolean~) mode_8bppchunkybmm::$17
(boolean~) mode_8bppchunkybmm::$18
(byte~) mode_8bppchunkybmm::$2
(word~) mode_8bppchunkybmm::$20
(byte~) mode_8bppchunkybmm::$21
(boolean~) mode_8bppchunkybmm::$22
(boolean~) mode_8bppchunkybmm::$23
(byte/signed byte/word/signed word/dword/signed dword~) mode_8bppchunkybmm::$24
(byte~) mode_8bppchunkybmm::$25
(byte~) mode_8bppchunkybmm::$27
(boolean~) mode_8bppchunkybmm::$28
(boolean~) mode_8bppchunkybmm::$29
(byte~) mode_8bppchunkybmm::$3
(byte~) mode_8bppchunkybmm::$4
(byte/word/dword~) mode_8bppchunkybmm::$5
(byte~) mode_8bppchunkybmm::$6
(word~) mode_8bppchunkybmm::$7
(byte~) mode_8bppchunkybmm::$8
(word~) mode_8bppchunkybmm::$9
(label) mode_8bppchunkybmm::@1
(label) mode_8bppchunkybmm::@10
(label) mode_8bppchunkybmm::@11
(label) mode_8bppchunkybmm::@12
(label) mode_8bppchunkybmm::@18
(label) mode_8bppchunkybmm::@19
(label) mode_8bppchunkybmm::@2
(label) mode_8bppchunkybmm::@20
(label) mode_8bppchunkybmm::@21
(label) mode_8bppchunkybmm::@3
(label) mode_8bppchunkybmm::@4
(label) mode_8bppchunkybmm::@5
(label) mode_8bppchunkybmm::@6
(label) mode_8bppchunkybmm::@8
(label) mode_8bppchunkybmm::@9
(label) mode_8bppchunkybmm::@return
(dword) mode_8bppchunkybmm::PLANEB
(dword) mode_8bppchunkybmm::PLANEB#0
(byte) mode_8bppchunkybmm::c
(byte) mode_8bppchunkybmm::c#0
(byte*) mode_8bppchunkybmm::gfxb
(byte*) mode_8bppchunkybmm::gfxb#0
(byte*) mode_8bppchunkybmm::gfxb#1
(byte*) mode_8bppchunkybmm::gfxb#2
(byte*) mode_8bppchunkybmm::gfxb#3
(byte*) mode_8bppchunkybmm::gfxb#4
(byte*) mode_8bppchunkybmm::gfxb#5
(byte*) mode_8bppchunkybmm::gfxb#6
(byte) mode_8bppchunkybmm::gfxbCpuBank
(byte) mode_8bppchunkybmm::gfxbCpuBank#0
(byte) mode_8bppchunkybmm::gfxbCpuBank#1
(byte) mode_8bppchunkybmm::gfxbCpuBank#2
(byte) mode_8bppchunkybmm::gfxbCpuBank#3
(byte) mode_8bppchunkybmm::gfxbCpuBank#4
(byte) mode_8bppchunkybmm::gfxbCpuBank#5
(byte) mode_8bppchunkybmm::gfxbCpuBank#6
(byte) mode_8bppchunkybmm::gfxbCpuBank#7
(byte) mode_8bppchunkybmm::gfxbCpuBank#8
(byte) mode_8bppchunkybmm::gfxbCpuBank#9
(byte) mode_8bppchunkybmm::i
(byte) mode_8bppchunkybmm::i#0
(byte) mode_8bppchunkybmm::i#1
(byte) mode_8bppchunkybmm::i#2
(word) mode_8bppchunkybmm::x
(word) mode_8bppchunkybmm::x#0
(word) mode_8bppchunkybmm::x#1
(word) mode_8bppchunkybmm::x#2
(word) mode_8bppchunkybmm::x#3
(word) mode_8bppchunkybmm::x#4
(word) mode_8bppchunkybmm::x#5
(byte) mode_8bppchunkybmm::y
(byte) mode_8bppchunkybmm::y#0
(byte) mode_8bppchunkybmm::y#1
(byte) mode_8bppchunkybmm::y#2
(byte) mode_8bppchunkybmm::y#3
(byte) mode_8bppchunkybmm::y#4
(byte) mode_8bppchunkybmm::y#5
(byte) mode_8bppchunkybmm::y#6
(byte) mode_8bppchunkybmm::y#7
(void()) mode_8bpppixelcell()
(byte~) mode_8bpppixelcell::$0
(byte~) mode_8bpppixelcell::$1
(boolean~) mode_8bpppixelcell::$10
(byte~) mode_8bpppixelcell::$11
(byte~) mode_8bpppixelcell::$12
(byte~) mode_8bpppixelcell::$13
(byte~) mode_8bpppixelcell::$14
(boolean~) mode_8bpppixelcell::$15
(boolean~) mode_8bpppixelcell::$16
(byte~) mode_8bpppixelcell::$17
(boolean~) mode_8bpppixelcell::$18
(boolean~) mode_8bpppixelcell::$19
(byte~) mode_8bpppixelcell::$2
(byte~) mode_8bpppixelcell::$20
(boolean~) mode_8bpppixelcell::$21
(boolean~) mode_8bpppixelcell::$22
(boolean~) mode_8bpppixelcell::$23
(byte~) mode_8bpppixelcell::$24
(boolean~) mode_8bpppixelcell::$25
(boolean~) mode_8bpppixelcell::$26
(byte~) mode_8bpppixelcell::$3
(byte/word/dword~) mode_8bpppixelcell::$4
(byte~) mode_8bpppixelcell::$5
(byte~) mode_8bpppixelcell::$6
(byte~) mode_8bpppixelcell::$7
(byte~) mode_8bpppixelcell::$8
(byte~) mode_8bpppixelcell::$9
(label) mode_8bpppixelcell::@1
(label) mode_8bpppixelcell::@11
(label) mode_8bpppixelcell::@12
(label) mode_8bpppixelcell::@13
(label) mode_8bpppixelcell::@14
(label) mode_8bpppixelcell::@15
(label) mode_8bpppixelcell::@16
(label) mode_8bpppixelcell::@17
(label) mode_8bpppixelcell::@18
(label) mode_8bpppixelcell::@2
(label) mode_8bpppixelcell::@24
(label) mode_8bpppixelcell::@3
(label) mode_8bpppixelcell::@4
(label) mode_8bpppixelcell::@5
(label) mode_8bpppixelcell::@6
(label) mode_8bpppixelcell::@7
(label) mode_8bpppixelcell::@8
(label) mode_8bpppixelcell::@9
(label) mode_8bpppixelcell::@return
(byte*) mode_8bpppixelcell::CHARGEN
(byte*) mode_8bpppixelcell::CHARGEN#0
(byte*) mode_8bpppixelcell::PLANEA
(byte*) mode_8bpppixelcell::PLANEA#0
(byte*) mode_8bpppixelcell::PLANEB
(byte*) mode_8bpppixelcell::PLANEB#0
(byte) mode_8bpppixelcell::ax
(byte) mode_8bpppixelcell::ax#0
(byte) mode_8bpppixelcell::ax#1
(byte) mode_8bpppixelcell::ax#2
(byte) mode_8bpppixelcell::ay
(byte) mode_8bpppixelcell::ay#0
(byte) mode_8bpppixelcell::ay#1
(byte) mode_8bpppixelcell::ay#2
(byte) mode_8bpppixelcell::ay#3
(byte) mode_8bpppixelcell::ay#4
(byte) mode_8bpppixelcell::bits
(byte) mode_8bpppixelcell::bits#0
(byte) mode_8bpppixelcell::bits#1
(byte) mode_8bpppixelcell::bits#2
(byte) mode_8bpppixelcell::bits#3
(byte) mode_8bpppixelcell::bits#4
(byte) mode_8bpppixelcell::c
(byte) mode_8bpppixelcell::c#0
(byte) mode_8bpppixelcell::c#1
(byte) mode_8bpppixelcell::c#2
(byte) mode_8bpppixelcell::ch
(byte) mode_8bpppixelcell::ch#0
(byte) mode_8bpppixelcell::ch#1
(byte) mode_8bpppixelcell::ch#2
(byte) mode_8bpppixelcell::ch#3
(byte) mode_8bpppixelcell::ch#4
(byte) mode_8bpppixelcell::ch#5
(byte) mode_8bpppixelcell::ch#6
(byte) mode_8bpppixelcell::ch#7
(byte) mode_8bpppixelcell::ch#8
(byte*) mode_8bpppixelcell::chargen
(byte*) mode_8bpppixelcell::chargen#0
(byte*) mode_8bpppixelcell::chargen#1
(byte*) mode_8bpppixelcell::chargen#2
(byte*) mode_8bpppixelcell::chargen#3
(byte*) mode_8bpppixelcell::chargen#4
(byte*) mode_8bpppixelcell::chargen#5
(byte*) mode_8bpppixelcell::chargen#6
(byte*) mode_8bpppixelcell::chargen#7
(byte*) mode_8bpppixelcell::chargen#8
(byte) mode_8bpppixelcell::col
(byte) mode_8bpppixelcell::col#0
(byte) mode_8bpppixelcell::col#1
(byte) mode_8bpppixelcell::col#2
(byte) mode_8bpppixelcell::col#3
(byte) mode_8bpppixelcell::col#4
(byte) mode_8bpppixelcell::col#5
(byte) mode_8bpppixelcell::col#6
(byte) mode_8bpppixelcell::col#7
(byte) mode_8bpppixelcell::col#8
(byte) mode_8bpppixelcell::cp
(byte) mode_8bpppixelcell::cp#0
(byte) mode_8bpppixelcell::cp#1
(byte) mode_8bpppixelcell::cp#2
(byte) mode_8bpppixelcell::cp#3
(byte) mode_8bpppixelcell::cp#4
(byte) mode_8bpppixelcell::cr
(byte) mode_8bpppixelcell::cr#0
(byte) mode_8bpppixelcell::cr#1
(byte) mode_8bpppixelcell::cr#2
(byte) mode_8bpppixelcell::cr#3
(byte) mode_8bpppixelcell::cr#4
(byte) mode_8bpppixelcell::cr#5
(byte) mode_8bpppixelcell::cr#6
(byte*) mode_8bpppixelcell::gfxa
(byte*) mode_8bpppixelcell::gfxa#0
(byte*) mode_8bpppixelcell::gfxa#1
(byte*) mode_8bpppixelcell::gfxa#2
(byte*) mode_8bpppixelcell::gfxa#3
(byte*) mode_8bpppixelcell::gfxa#4
(byte*) mode_8bpppixelcell::gfxb
(byte*) mode_8bpppixelcell::gfxb#0
(byte*) mode_8bpppixelcell::gfxb#1
(byte*) mode_8bpppixelcell::gfxb#2
(byte*) mode_8bpppixelcell::gfxb#3
(byte*) mode_8bpppixelcell::gfxb#4
(byte*) mode_8bpppixelcell::gfxb#5
(byte*) mode_8bpppixelcell::gfxb#6
(byte*) mode_8bpppixelcell::gfxb#7
(byte*) mode_8bpppixelcell::gfxb#8
(byte) mode_8bpppixelcell::i
(byte) mode_8bpppixelcell::i#0
(byte) mode_8bpppixelcell::i#1
(byte) mode_8bpppixelcell::i#2
(void()) mode_ecmchar()
(dword~) mode_ecmchar::$0
(dword~) mode_ecmchar::$1
(word/signed dword/dword~) mode_ecmchar::$10
(byte~) mode_ecmchar::$11
(byte/word/dword~) mode_ecmchar::$12
(byte~) mode_ecmchar::$13
(byte~) mode_ecmchar::$14
(byte/word/dword~) mode_ecmchar::$15
(word~) mode_ecmchar::$16
(word~) mode_ecmchar::$17
(word/signed dword/dword~) mode_ecmchar::$18
(word~) mode_ecmchar::$19
(byte~) mode_ecmchar::$2
(word~) mode_ecmchar::$20
(word/signed dword/dword~) mode_ecmchar::$21
(word/dword~) mode_ecmchar::$22
(byte~) mode_ecmchar::$23
(boolean~) mode_ecmchar::$24
(byte~) mode_ecmchar::$25
(byte~) mode_ecmchar::$26
(byte~) mode_ecmchar::$27
(byte~) mode_ecmchar::$28
(byte~) mode_ecmchar::$29
(byte*~) mode_ecmchar::$3
(byte~) mode_ecmchar::$30
(boolean~) mode_ecmchar::$31
(boolean~) mode_ecmchar::$32
(byte~) mode_ecmchar::$33
(boolean~) mode_ecmchar::$34
(boolean~) mode_ecmchar::$35
(word~) mode_ecmchar::$4
(byte~) mode_ecmchar::$5
(byte*~) mode_ecmchar::$6
(word~) mode_ecmchar::$7
(byte~) mode_ecmchar::$8
(word~) mode_ecmchar::$9
(label) mode_ecmchar::@1
(label) mode_ecmchar::@16
(label) mode_ecmchar::@2
(label) mode_ecmchar::@3
(label) mode_ecmchar::@4
(label) mode_ecmchar::@5
(label) mode_ecmchar::@7
(label) mode_ecmchar::@8
(label) mode_ecmchar::@9
(label) mode_ecmchar::@return
(byte*) mode_ecmchar::ECMCHAR_CHARSET
(byte*) mode_ecmchar::ECMCHAR_CHARSET#0
(byte*) mode_ecmchar::ECMCHAR_COLORS
(byte*) mode_ecmchar::ECMCHAR_COLORS#0
(byte*) mode_ecmchar::ECMCHAR_SCREEN
(byte*) mode_ecmchar::ECMCHAR_SCREEN#0
(byte*) mode_ecmchar::ch
(byte*) mode_ecmchar::ch#0
(byte*) mode_ecmchar::ch#1
(byte*) mode_ecmchar::ch#2
(byte*) mode_ecmchar::ch#3
(byte*) mode_ecmchar::ch#4
(byte*) mode_ecmchar::col
(byte*) mode_ecmchar::col#0
(byte*) mode_ecmchar::col#1
(byte*) mode_ecmchar::col#2
(byte*) mode_ecmchar::col#3
(byte*) mode_ecmchar::col#4
(byte) mode_ecmchar::cx
(byte) mode_ecmchar::cx#0
(byte) mode_ecmchar::cx#1
(byte) mode_ecmchar::cx#2
(byte) mode_ecmchar::cy
(byte) mode_ecmchar::cy#0
(byte) mode_ecmchar::cy#1
(byte) mode_ecmchar::cy#2
(byte) mode_ecmchar::cy#3
(byte) mode_ecmchar::cy#4
(byte) mode_ecmchar::i
(byte) mode_ecmchar::i#0
(byte) mode_ecmchar::i#1
(byte) mode_ecmchar::i#2
(void()) mode_hicolecmchar()
(dword~) mode_hicolecmchar::$0
(dword~) mode_hicolecmchar::$1
(word/signed dword/dword~) mode_hicolecmchar::$10
(byte~) mode_hicolecmchar::$11
(byte/word/dword~) mode_hicolecmchar::$12
(byte~) mode_hicolecmchar::$13
(byte~) mode_hicolecmchar::$14
(byte/word/dword~) mode_hicolecmchar::$15
(word~) mode_hicolecmchar::$16
(word~) mode_hicolecmchar::$17
(word/signed dword/dword~) mode_hicolecmchar::$18
(word~) mode_hicolecmchar::$19
(byte~) mode_hicolecmchar::$2
(word~) mode_hicolecmchar::$20
(word/signed dword/dword~) mode_hicolecmchar::$21
(word/dword~) mode_hicolecmchar::$22
(byte~) mode_hicolecmchar::$23
(boolean~) mode_hicolecmchar::$24
(byte~) mode_hicolecmchar::$25
(byte~) mode_hicolecmchar::$26
(byte~) mode_hicolecmchar::$27
(byte~) mode_hicolecmchar::$28
(boolean~) mode_hicolecmchar::$29
(byte*~) mode_hicolecmchar::$3
(boolean~) mode_hicolecmchar::$30
(byte~) mode_hicolecmchar::$31
(boolean~) mode_hicolecmchar::$32
(boolean~) mode_hicolecmchar::$33
(word~) mode_hicolecmchar::$4
(byte~) mode_hicolecmchar::$5
(byte*~) mode_hicolecmchar::$6
(word~) mode_hicolecmchar::$7
(byte~) mode_hicolecmchar::$8
(word~) mode_hicolecmchar::$9
(label) mode_hicolecmchar::@1
(label) mode_hicolecmchar::@16
(label) mode_hicolecmchar::@2
(label) mode_hicolecmchar::@3
(label) mode_hicolecmchar::@4
(label) mode_hicolecmchar::@5
(label) mode_hicolecmchar::@7
(label) mode_hicolecmchar::@8
(label) mode_hicolecmchar::@9
(label) mode_hicolecmchar::@return
(byte*) mode_hicolecmchar::CHARSET
(byte*) mode_hicolecmchar::CHARSET#0
(byte*) mode_hicolecmchar::COLORS
(byte*) mode_hicolecmchar::COLORS#0
(byte*) mode_hicolecmchar::SCREEN
(byte*) mode_hicolecmchar::SCREEN#0
(byte*) mode_hicolecmchar::ch
(byte*) mode_hicolecmchar::ch#0
(byte*) mode_hicolecmchar::ch#1
(byte*) mode_hicolecmchar::ch#2
(byte*) mode_hicolecmchar::ch#3
(byte*) mode_hicolecmchar::ch#4
(byte*) mode_hicolecmchar::col
(byte*) mode_hicolecmchar::col#0
(byte*) mode_hicolecmchar::col#1
(byte*) mode_hicolecmchar::col#2
(byte*) mode_hicolecmchar::col#3
(byte*) mode_hicolecmchar::col#4
(byte) mode_hicolecmchar::cx
(byte) mode_hicolecmchar::cx#0
(byte) mode_hicolecmchar::cx#1
(byte) mode_hicolecmchar::cx#2
(byte) mode_hicolecmchar::cy
(byte) mode_hicolecmchar::cy#0
(byte) mode_hicolecmchar::cy#1
(byte) mode_hicolecmchar::cy#2
(byte) mode_hicolecmchar::cy#3
(byte) mode_hicolecmchar::cy#4
(byte) mode_hicolecmchar::i
(byte) mode_hicolecmchar::i#0
(byte) mode_hicolecmchar::i#1
(byte) mode_hicolecmchar::i#2
(byte) mode_hicolecmchar::v
(byte) mode_hicolecmchar::v#0
(void()) mode_hicolmcchar()
(dword~) mode_hicolmcchar::$0
(dword~) mode_hicolmcchar::$1
(word/signed dword/dword~) mode_hicolmcchar::$10
(byte~) mode_hicolmcchar::$11
(byte/word/dword~) mode_hicolmcchar::$12
(byte~) mode_hicolmcchar::$13
(byte/word/dword~) mode_hicolmcchar::$14
(byte~) mode_hicolmcchar::$15
(word~) mode_hicolmcchar::$16
(word~) mode_hicolmcchar::$17
(word/signed dword/dword~) mode_hicolmcchar::$18
(word~) mode_hicolmcchar::$19
(byte~) mode_hicolmcchar::$2
(word~) mode_hicolmcchar::$20
(word/signed dword/dword~) mode_hicolmcchar::$21
(word/dword~) mode_hicolmcchar::$22
(byte~) mode_hicolmcchar::$23
(boolean~) mode_hicolmcchar::$24
(byte~) mode_hicolmcchar::$25
(byte~) mode_hicolmcchar::$26
(byte~) mode_hicolmcchar::$27
(byte~) mode_hicolmcchar::$28
(boolean~) mode_hicolmcchar::$29
(byte*~) mode_hicolmcchar::$3
(boolean~) mode_hicolmcchar::$30
(byte~) mode_hicolmcchar::$31
(boolean~) mode_hicolmcchar::$32
(boolean~) mode_hicolmcchar::$33
(word~) mode_hicolmcchar::$4
(byte~) mode_hicolmcchar::$5
(byte*~) mode_hicolmcchar::$6
(word~) mode_hicolmcchar::$7
(byte~) mode_hicolmcchar::$8
(word~) mode_hicolmcchar::$9
(label) mode_hicolmcchar::@1
(label) mode_hicolmcchar::@16
(label) mode_hicolmcchar::@2
(label) mode_hicolmcchar::@3
(label) mode_hicolmcchar::@4
(label) mode_hicolmcchar::@5
(label) mode_hicolmcchar::@7
(label) mode_hicolmcchar::@8
(label) mode_hicolmcchar::@9
(label) mode_hicolmcchar::@return
(byte*) mode_hicolmcchar::CHARSET
(byte*) mode_hicolmcchar::CHARSET#0
(byte*) mode_hicolmcchar::COLORS
(byte*) mode_hicolmcchar::COLORS#0
(byte*) mode_hicolmcchar::SCREEN
(byte*) mode_hicolmcchar::SCREEN#0
(byte*) mode_hicolmcchar::ch
(byte*) mode_hicolmcchar::ch#0
(byte*) mode_hicolmcchar::ch#1
(byte*) mode_hicolmcchar::ch#2
(byte*) mode_hicolmcchar::ch#3
(byte*) mode_hicolmcchar::ch#4
(byte*) mode_hicolmcchar::col
(byte*) mode_hicolmcchar::col#0
(byte*) mode_hicolmcchar::col#1
(byte*) mode_hicolmcchar::col#2
(byte*) mode_hicolmcchar::col#3
(byte*) mode_hicolmcchar::col#4
(byte) mode_hicolmcchar::cx
(byte) mode_hicolmcchar::cx#0
(byte) mode_hicolmcchar::cx#1
(byte) mode_hicolmcchar::cx#2
(byte) mode_hicolmcchar::cy
(byte) mode_hicolmcchar::cy#0
(byte) mode_hicolmcchar::cy#1
(byte) mode_hicolmcchar::cy#2
(byte) mode_hicolmcchar::cy#3
(byte) mode_hicolmcchar::cy#4
(byte) mode_hicolmcchar::i
(byte) mode_hicolmcchar::i#0
(byte) mode_hicolmcchar::i#1
(byte) mode_hicolmcchar::i#2
(byte) mode_hicolmcchar::v
(byte) mode_hicolmcchar::v#0
(void()) mode_hicolstdchar()
(dword~) mode_hicolstdchar::$0
(dword~) mode_hicolstdchar::$1
(word/signed dword/dword~) mode_hicolstdchar::$10
(byte~) mode_hicolstdchar::$11
(byte/word/dword~) mode_hicolstdchar::$12
(byte~) mode_hicolstdchar::$13
(byte/word/dword~) mode_hicolstdchar::$14
(word~) mode_hicolstdchar::$15
(word~) mode_hicolstdchar::$16
(word/signed dword/dword~) mode_hicolstdchar::$17
(word~) mode_hicolstdchar::$18
(word~) mode_hicolstdchar::$19
(byte~) mode_hicolstdchar::$2
(word/signed dword/dword~) mode_hicolstdchar::$20
(word/dword~) mode_hicolstdchar::$21
(byte~) mode_hicolstdchar::$22
(boolean~) mode_hicolstdchar::$23
(byte~) mode_hicolstdchar::$24
(byte~) mode_hicolstdchar::$25
(byte~) mode_hicolstdchar::$26
(byte~) mode_hicolstdchar::$27
(boolean~) mode_hicolstdchar::$28
(boolean~) mode_hicolstdchar::$29
(byte*~) mode_hicolstdchar::$3
(byte~) mode_hicolstdchar::$30
(boolean~) mode_hicolstdchar::$31
(boolean~) mode_hicolstdchar::$32
(word~) mode_hicolstdchar::$4
(byte~) mode_hicolstdchar::$5
(byte*~) mode_hicolstdchar::$6
(word~) mode_hicolstdchar::$7
(byte~) mode_hicolstdchar::$8
(word~) mode_hicolstdchar::$9
(label) mode_hicolstdchar::@1
(label) mode_hicolstdchar::@16
(label) mode_hicolstdchar::@2
(label) mode_hicolstdchar::@3
(label) mode_hicolstdchar::@4
(label) mode_hicolstdchar::@5
(label) mode_hicolstdchar::@7
(label) mode_hicolstdchar::@8
(label) mode_hicolstdchar::@9
(label) mode_hicolstdchar::@return
(byte*) mode_hicolstdchar::CHARSET
(byte*) mode_hicolstdchar::CHARSET#0
(byte*) mode_hicolstdchar::COLORS
(byte*) mode_hicolstdchar::COLORS#0
(byte*) mode_hicolstdchar::SCREEN
(byte*) mode_hicolstdchar::SCREEN#0
(byte*) mode_hicolstdchar::ch
(byte*) mode_hicolstdchar::ch#0
(byte*) mode_hicolstdchar::ch#1
(byte*) mode_hicolstdchar::ch#2
(byte*) mode_hicolstdchar::ch#3
(byte*) mode_hicolstdchar::ch#4
(byte*) mode_hicolstdchar::col
(byte*) mode_hicolstdchar::col#0
(byte*) mode_hicolstdchar::col#1
(byte*) mode_hicolstdchar::col#2
(byte*) mode_hicolstdchar::col#3
(byte*) mode_hicolstdchar::col#4
(byte) mode_hicolstdchar::cx
(byte) mode_hicolstdchar::cx#0
(byte) mode_hicolstdchar::cx#1
(byte) mode_hicolstdchar::cx#2
(byte) mode_hicolstdchar::cy
(byte) mode_hicolstdchar::cy#0
(byte) mode_hicolstdchar::cy#1
(byte) mode_hicolstdchar::cy#2
(byte) mode_hicolstdchar::cy#3
(byte) mode_hicolstdchar::cy#4
(byte) mode_hicolstdchar::i
(byte) mode_hicolstdchar::i#0
(byte) mode_hicolstdchar::i#1
(byte) mode_hicolstdchar::i#2
(byte) mode_hicolstdchar::v
(byte) mode_hicolstdchar::v#0
(void()) mode_mcchar()
(dword~) mode_mcchar::$0
(dword~) mode_mcchar::$1
(word/signed dword/dword~) mode_mcchar::$10
(byte~) mode_mcchar::$11
(byte/word/dword~) mode_mcchar::$12
(byte~) mode_mcchar::$13
(byte/word/dword~) mode_mcchar::$14
(byte~) mode_mcchar::$15
(word~) mode_mcchar::$16
(word~) mode_mcchar::$17
(word/signed dword/dword~) mode_mcchar::$18
(word~) mode_mcchar::$19
(byte~) mode_mcchar::$2
(word~) mode_mcchar::$20
(word/signed dword/dword~) mode_mcchar::$21
(word/dword~) mode_mcchar::$22
(byte~) mode_mcchar::$23
(boolean~) mode_mcchar::$24
(byte~) mode_mcchar::$25
(byte~) mode_mcchar::$26
(byte~) mode_mcchar::$27
(byte~) mode_mcchar::$28
(byte~) mode_mcchar::$29
(byte*~) mode_mcchar::$3
(byte~) mode_mcchar::$30
(boolean~) mode_mcchar::$31
(boolean~) mode_mcchar::$32
(byte~) mode_mcchar::$33
(boolean~) mode_mcchar::$34
(boolean~) mode_mcchar::$35
(word~) mode_mcchar::$4
(byte~) mode_mcchar::$5
(byte*~) mode_mcchar::$6
(word~) mode_mcchar::$7
(byte~) mode_mcchar::$8
(word~) mode_mcchar::$9
(label) mode_mcchar::@1
(label) mode_mcchar::@16
(label) mode_mcchar::@2
(label) mode_mcchar::@3
(label) mode_mcchar::@4
(label) mode_mcchar::@5
(label) mode_mcchar::@7
(label) mode_mcchar::@8
(label) mode_mcchar::@9
(label) mode_mcchar::@return
(byte*) mode_mcchar::CHARSET
(byte*) mode_mcchar::CHARSET#0
(byte*) mode_mcchar::COLORS
(byte*) mode_mcchar::COLORS#0
(byte*) mode_mcchar::SCREEN
(byte*) mode_mcchar::SCREEN#0
(byte*) mode_mcchar::ch
(byte*) mode_mcchar::ch#0
(byte*) mode_mcchar::ch#1
(byte*) mode_mcchar::ch#2
(byte*) mode_mcchar::ch#3
(byte*) mode_mcchar::ch#4
(byte*) mode_mcchar::col
(byte*) mode_mcchar::col#0
(byte*) mode_mcchar::col#1
(byte*) mode_mcchar::col#2
(byte*) mode_mcchar::col#3
(byte*) mode_mcchar::col#4
(byte) mode_mcchar::cx
(byte) mode_mcchar::cx#0
(byte) mode_mcchar::cx#1
(byte) mode_mcchar::cx#2
(byte) mode_mcchar::cy
(byte) mode_mcchar::cy#0
(byte) mode_mcchar::cy#1
(byte) mode_mcchar::cy#2
(byte) mode_mcchar::cy#3
(byte) mode_mcchar::cy#4
(byte) mode_mcchar::i
(byte) mode_mcchar::i#0
(byte) mode_mcchar::i#1
(byte) mode_mcchar::i#2
(void()) mode_sixsfred()
(byte~) mode_sixsfred::$0
(byte~) mode_sixsfred::$1
(byte*~) mode_sixsfred::$10
(byte~) mode_sixsfred::$11
(byte*~) mode_sixsfred::$12
(byte~) mode_sixsfred::$13
(boolean~) mode_sixsfred::$14
(byte~) mode_sixsfred::$15
(byte~) mode_sixsfred::$16
(boolean~) mode_sixsfred::$17
(boolean~) mode_sixsfred::$18
(byte~) mode_sixsfred::$19
(byte~) mode_sixsfred::$2
(byte~) mode_sixsfred::$20
(boolean~) mode_sixsfred::$21
(boolean~) mode_sixsfred::$22
(boolean~) mode_sixsfred::$23
(boolean~) mode_sixsfred::$24
(byte~) mode_sixsfred::$25
(boolean~) mode_sixsfred::$26
(boolean~) mode_sixsfred::$27
(byte~) mode_sixsfred::$3
(byte/word/dword~) mode_sixsfred::$4
(byte~) mode_sixsfred::$5
(byte~) mode_sixsfred::$6
(byte~) mode_sixsfred::$7
(byte~) mode_sixsfred::$8
(byte~) mode_sixsfred::$9
(label) mode_sixsfred::@1
(label) mode_sixsfred::@11
(label) mode_sixsfred::@12
(label) mode_sixsfred::@13
(label) mode_sixsfred::@14
(label) mode_sixsfred::@15
(label) mode_sixsfred::@16
(label) mode_sixsfred::@17
(label) mode_sixsfred::@2
(label) mode_sixsfred::@24
(label) mode_sixsfred::@3
(label) mode_sixsfred::@4
(label) mode_sixsfred::@5
(label) mode_sixsfred::@6
(label) mode_sixsfred::@7
(label) mode_sixsfred::@8
(label) mode_sixsfred::@9
(label) mode_sixsfred::@return
(byte*) mode_sixsfred::COLORS
(byte*) mode_sixsfred::COLORS#0
(byte*) mode_sixsfred::PLANEA
(byte*) mode_sixsfred::PLANEA#0
(byte*) mode_sixsfred::PLANEB
(byte*) mode_sixsfred::PLANEB#0
(byte) mode_sixsfred::ax
(byte) mode_sixsfred::ax#0
(byte) mode_sixsfred::ax#1
(byte) mode_sixsfred::ax#2
(byte) mode_sixsfred::ay
(byte) mode_sixsfred::ay#0
(byte) mode_sixsfred::ay#1
(byte) mode_sixsfred::ay#2
(byte) mode_sixsfred::ay#3
(byte) mode_sixsfred::ay#4
(byte) mode_sixsfred::bx
(byte) mode_sixsfred::bx#0
(byte) mode_sixsfred::bx#1
(byte) mode_sixsfred::bx#2
(byte) mode_sixsfred::by
(byte) mode_sixsfred::by#0
(byte) mode_sixsfred::by#1
(byte) mode_sixsfred::by#2
(byte) mode_sixsfred::by#3
(byte) mode_sixsfred::by#4
(byte*) mode_sixsfred::col
(byte*) mode_sixsfred::col#0
(byte*) mode_sixsfred::col#1
(byte*) mode_sixsfred::col#2
(byte*) mode_sixsfred::col#3
(byte*) mode_sixsfred::col#4
(byte) mode_sixsfred::cx
(byte) mode_sixsfred::cx#0
(byte) mode_sixsfred::cx#1
(byte) mode_sixsfred::cx#2
(byte) mode_sixsfred::cy
(byte) mode_sixsfred::cy#0
(byte) mode_sixsfred::cy#1
(byte) mode_sixsfred::cy#2
(byte) mode_sixsfred::cy#3
(byte) mode_sixsfred::cy#4
(byte*) mode_sixsfred::gfxa
(byte*) mode_sixsfred::gfxa#0
(byte*) mode_sixsfred::gfxa#1
(byte*) mode_sixsfred::gfxa#2
(byte*) mode_sixsfred::gfxa#3
(byte*) mode_sixsfred::gfxa#4
(byte*) mode_sixsfred::gfxb
(byte*) mode_sixsfred::gfxb#0
(byte*) mode_sixsfred::gfxb#1
(byte*) mode_sixsfred::gfxb#2
(byte*) mode_sixsfred::gfxb#3
(byte*) mode_sixsfred::gfxb#4
(byte) mode_sixsfred::i
(byte) mode_sixsfred::i#0
(byte) mode_sixsfred::i#1
(byte) mode_sixsfred::i#2
(byte) mode_sixsfred::row
(byte) mode_sixsfred::row#0
(byte[]) mode_sixsfred::row_bitmask
(byte[]) mode_sixsfred::row_bitmask#0
(void()) mode_sixsfred2()
(byte~) mode_sixsfred2::$0
(byte~) mode_sixsfred2::$1
(byte~) mode_sixsfred2::$10
(byte*~) mode_sixsfred2::$11
(byte~) mode_sixsfred2::$12
(boolean~) mode_sixsfred2::$13
(byte~) mode_sixsfred2::$14
(byte~) mode_sixsfred2::$15
(byte~) mode_sixsfred2::$16
(byte~) mode_sixsfred2::$17
(boolean~) mode_sixsfred2::$18
(boolean~) mode_sixsfred2::$19
(byte~) mode_sixsfred2::$2
(byte~) mode_sixsfred2::$20
(byte~) mode_sixsfred2::$21
(boolean~) mode_sixsfred2::$22
(boolean~) mode_sixsfred2::$23
(boolean~) mode_sixsfred2::$24
(boolean~) mode_sixsfred2::$25
(byte~) mode_sixsfred2::$26
(boolean~) mode_sixsfred2::$27
(boolean~) mode_sixsfred2::$28
(byte/word/dword~) mode_sixsfred2::$3
(byte~) mode_sixsfred2::$4
(byte~) mode_sixsfred2::$5
(byte~) mode_sixsfred2::$6
(byte~) mode_sixsfred2::$7
(byte~) mode_sixsfred2::$8
(byte*~) mode_sixsfred2::$9
(label) mode_sixsfred2::@1
(label) mode_sixsfred2::@11
(label) mode_sixsfred2::@12
(label) mode_sixsfred2::@13
(label) mode_sixsfred2::@14
(label) mode_sixsfred2::@15
(label) mode_sixsfred2::@16
(label) mode_sixsfred2::@17
(label) mode_sixsfred2::@2
(label) mode_sixsfred2::@24
(label) mode_sixsfred2::@3
(label) mode_sixsfred2::@4
(label) mode_sixsfred2::@5
(label) mode_sixsfred2::@6
(label) mode_sixsfred2::@7
(label) mode_sixsfred2::@8
(label) mode_sixsfred2::@9
(label) mode_sixsfred2::@return
(byte*) mode_sixsfred2::COLORS
(byte*) mode_sixsfred2::COLORS#0
(byte*) mode_sixsfred2::PLANEA
(byte*) mode_sixsfred2::PLANEA#0
(byte*) mode_sixsfred2::PLANEB
(byte*) mode_sixsfred2::PLANEB#0
(byte) mode_sixsfred2::ax
(byte) mode_sixsfred2::ax#0
(byte) mode_sixsfred2::ax#1
(byte) mode_sixsfred2::ax#2
(byte) mode_sixsfred2::ay
(byte) mode_sixsfred2::ay#0
(byte) mode_sixsfred2::ay#1
(byte) mode_sixsfred2::ay#2
(byte) mode_sixsfred2::ay#3
(byte) mode_sixsfred2::ay#4
(byte) mode_sixsfred2::bx
(byte) mode_sixsfred2::bx#0
(byte) mode_sixsfred2::bx#1
(byte) mode_sixsfred2::bx#2
(byte) mode_sixsfred2::by
(byte) mode_sixsfred2::by#0
(byte) mode_sixsfred2::by#1
(byte) mode_sixsfred2::by#2
(byte) mode_sixsfred2::by#3
(byte) mode_sixsfred2::by#4
(byte*) mode_sixsfred2::col
(byte*) mode_sixsfred2::col#0
(byte*) mode_sixsfred2::col#1
(byte*) mode_sixsfred2::col#2
(byte*) mode_sixsfred2::col#3
(byte*) mode_sixsfred2::col#4
(byte) mode_sixsfred2::cx
(byte) mode_sixsfred2::cx#0
(byte) mode_sixsfred2::cx#1
(byte) mode_sixsfred2::cx#2
(byte) mode_sixsfred2::cy
(byte) mode_sixsfred2::cy#0
(byte) mode_sixsfred2::cy#1
(byte) mode_sixsfred2::cy#2
(byte) mode_sixsfred2::cy#3
(byte) mode_sixsfred2::cy#4
(byte*) mode_sixsfred2::gfxa
(byte*) mode_sixsfred2::gfxa#0
(byte*) mode_sixsfred2::gfxa#1
(byte*) mode_sixsfred2::gfxa#2
(byte*) mode_sixsfred2::gfxa#3
(byte*) mode_sixsfred2::gfxa#4
(byte*) mode_sixsfred2::gfxb
(byte*) mode_sixsfred2::gfxb#0
(byte*) mode_sixsfred2::gfxb#1
(byte*) mode_sixsfred2::gfxb#2
(byte*) mode_sixsfred2::gfxb#3
(byte*) mode_sixsfred2::gfxb#4
(byte) mode_sixsfred2::i
(byte) mode_sixsfred2::i#0
(byte) mode_sixsfred2::i#1
(byte) mode_sixsfred2::i#2
(byte) mode_sixsfred2::row
(byte) mode_sixsfred2::row#0
(byte[]) mode_sixsfred2::row_bitmask
(byte[]) mode_sixsfred2::row_bitmask#0
(void()) mode_stdchar()
(dword~) mode_stdchar::$0
(dword~) mode_stdchar::$1
(word/signed dword/dword~) mode_stdchar::$10
(byte~) mode_stdchar::$11
(byte/word/dword~) mode_stdchar::$12
(byte~) mode_stdchar::$13
(byte/word/dword~) mode_stdchar::$14
(word~) mode_stdchar::$15
(word~) mode_stdchar::$16
(word/signed dword/dword~) mode_stdchar::$17
(word~) mode_stdchar::$18
(word~) mode_stdchar::$19
(byte~) mode_stdchar::$2
(word/signed dword/dword~) mode_stdchar::$20
(word/dword~) mode_stdchar::$21
(byte~) mode_stdchar::$22
(boolean~) mode_stdchar::$23
(byte~) mode_stdchar::$24
(byte~) mode_stdchar::$25
(byte~) mode_stdchar::$26
(byte~) mode_stdchar::$27
(byte~) mode_stdchar::$28
(byte~) mode_stdchar::$29
(byte*~) mode_stdchar::$3
(boolean~) mode_stdchar::$30
(boolean~) mode_stdchar::$31
(byte~) mode_stdchar::$32
(boolean~) mode_stdchar::$33
(boolean~) mode_stdchar::$34
(word~) mode_stdchar::$4
(byte~) mode_stdchar::$5
(byte*~) mode_stdchar::$6
(word~) mode_stdchar::$7
(byte~) mode_stdchar::$8
(word~) mode_stdchar::$9
(label) mode_stdchar::@1
(label) mode_stdchar::@16
(label) mode_stdchar::@2
(label) mode_stdchar::@3
(label) mode_stdchar::@4
(label) mode_stdchar::@5
(label) mode_stdchar::@7
(label) mode_stdchar::@8
(label) mode_stdchar::@9
(label) mode_stdchar::@return
(byte*) mode_stdchar::CHARSET
(byte*) mode_stdchar::CHARSET#0
(byte*) mode_stdchar::COLORS
(byte*) mode_stdchar::COLORS#0
(byte*) mode_stdchar::SCREEN
(byte*) mode_stdchar::SCREEN#0
(byte*) mode_stdchar::ch
(byte*) mode_stdchar::ch#0
(byte*) mode_stdchar::ch#1
(byte*) mode_stdchar::ch#2
(byte*) mode_stdchar::ch#3
(byte*) mode_stdchar::ch#4
(byte*) mode_stdchar::col
(byte*) mode_stdchar::col#0
(byte*) mode_stdchar::col#1
(byte*) mode_stdchar::col#2
(byte*) mode_stdchar::col#3
(byte*) mode_stdchar::col#4
(byte) mode_stdchar::cx
(byte) mode_stdchar::cx#0
(byte) mode_stdchar::cx#1
(byte) mode_stdchar::cx#2
(byte) mode_stdchar::cy
(byte) mode_stdchar::cy#0
(byte) mode_stdchar::cy#1
(byte) mode_stdchar::cy#2
(byte) mode_stdchar::cy#3
(byte) mode_stdchar::cy#4
(byte) mode_stdchar::i
(byte) mode_stdchar::i#0
(byte) mode_stdchar::i#1
(byte) mode_stdchar::i#2
(void()) mode_twoplanebitmap()
(byte~) mode_twoplanebitmap::$0
(byte~) mode_twoplanebitmap::$1
(byte~) mode_twoplanebitmap::$10
(byte*~) mode_twoplanebitmap::$11
(byte~) mode_twoplanebitmap::$12
(boolean~) mode_twoplanebitmap::$13
(byte~) mode_twoplanebitmap::$14
(byte~) mode_twoplanebitmap::$15
(byte~) mode_twoplanebitmap::$16
(byte~) mode_twoplanebitmap::$17
(boolean~) mode_twoplanebitmap::$18
(boolean~) mode_twoplanebitmap::$19
(byte~) mode_twoplanebitmap::$2
(byte~) mode_twoplanebitmap::$20
(boolean~) mode_twoplanebitmap::$21
(boolean~) mode_twoplanebitmap::$22
(boolean~) mode_twoplanebitmap::$23
(boolean~) mode_twoplanebitmap::$24
(boolean~) mode_twoplanebitmap::$25
(boolean~) mode_twoplanebitmap::$26
(byte~) mode_twoplanebitmap::$27
(boolean~) mode_twoplanebitmap::$28
(boolean~) mode_twoplanebitmap::$29
(byte~) mode_twoplanebitmap::$3
(byte/word/dword~) mode_twoplanebitmap::$4
(byte~) mode_twoplanebitmap::$5
(byte~) mode_twoplanebitmap::$6
(byte~) mode_twoplanebitmap::$7
(byte~) mode_twoplanebitmap::$8
(byte*~) mode_twoplanebitmap::$9
(label) mode_twoplanebitmap::@1
(label) mode_twoplanebitmap::@10
(label) mode_twoplanebitmap::@11
(label) mode_twoplanebitmap::@13
(label) mode_twoplanebitmap::@14
(label) mode_twoplanebitmap::@15
(label) mode_twoplanebitmap::@16
(label) mode_twoplanebitmap::@17
(label) mode_twoplanebitmap::@19
(label) mode_twoplanebitmap::@2
(label) mode_twoplanebitmap::@20
(label) mode_twoplanebitmap::@21
(label) mode_twoplanebitmap::@28
(label) mode_twoplanebitmap::@3
(label) mode_twoplanebitmap::@4
(label) mode_twoplanebitmap::@5
(label) mode_twoplanebitmap::@6
(label) mode_twoplanebitmap::@7
(label) mode_twoplanebitmap::@8
(label) mode_twoplanebitmap::@9
(label) mode_twoplanebitmap::@return
(byte*) mode_twoplanebitmap::COLORS
(byte*) mode_twoplanebitmap::COLORS#0
(byte*) mode_twoplanebitmap::PLANEA
(byte*) mode_twoplanebitmap::PLANEA#0
(byte*) mode_twoplanebitmap::PLANEB
(byte*) mode_twoplanebitmap::PLANEB#0
(byte) mode_twoplanebitmap::ax
(byte) mode_twoplanebitmap::ax#0
(byte) mode_twoplanebitmap::ax#1
(byte) mode_twoplanebitmap::ax#2
(byte) mode_twoplanebitmap::ax#3
(byte) mode_twoplanebitmap::ax#4
(byte) mode_twoplanebitmap::ax#5
(byte) mode_twoplanebitmap::ay
(byte) mode_twoplanebitmap::ay#0
(byte) mode_twoplanebitmap::ay#1
(byte) mode_twoplanebitmap::ay#2
(byte) mode_twoplanebitmap::ay#3
(byte) mode_twoplanebitmap::ay#4
(byte) mode_twoplanebitmap::ay#5
(byte) mode_twoplanebitmap::ay#6
(byte) mode_twoplanebitmap::ay#7
(byte) mode_twoplanebitmap::bx
(byte) mode_twoplanebitmap::bx#0
(byte) mode_twoplanebitmap::bx#1
(byte) mode_twoplanebitmap::bx#2
(byte) mode_twoplanebitmap::by
(byte) mode_twoplanebitmap::by#0
(byte) mode_twoplanebitmap::by#1
(byte) mode_twoplanebitmap::by#2
(byte) mode_twoplanebitmap::by#3
(byte) mode_twoplanebitmap::by#4
(byte*) mode_twoplanebitmap::col
(byte*) mode_twoplanebitmap::col#0
(byte*) mode_twoplanebitmap::col#1
(byte*) mode_twoplanebitmap::col#2
(byte*) mode_twoplanebitmap::col#3
(byte*) mode_twoplanebitmap::col#4
(byte) mode_twoplanebitmap::cx
(byte) mode_twoplanebitmap::cx#0
(byte) mode_twoplanebitmap::cx#1
(byte) mode_twoplanebitmap::cx#2
(byte) mode_twoplanebitmap::cy
(byte) mode_twoplanebitmap::cy#0
(byte) mode_twoplanebitmap::cy#1
(byte) mode_twoplanebitmap::cy#2
(byte) mode_twoplanebitmap::cy#3
(byte) mode_twoplanebitmap::cy#4
(byte*) mode_twoplanebitmap::gfxa
(byte*) mode_twoplanebitmap::gfxa#0
(byte*) mode_twoplanebitmap::gfxa#1
(byte*) mode_twoplanebitmap::gfxa#2
(byte*) mode_twoplanebitmap::gfxa#3
(byte*) mode_twoplanebitmap::gfxa#4
(byte*) mode_twoplanebitmap::gfxa#5
(byte*) mode_twoplanebitmap::gfxa#6
(byte*) mode_twoplanebitmap::gfxa#7
(byte*) mode_twoplanebitmap::gfxa#8
(byte*) mode_twoplanebitmap::gfxb
(byte*) mode_twoplanebitmap::gfxb#0
(byte*) mode_twoplanebitmap::gfxb#1
(byte*) mode_twoplanebitmap::gfxb#2
(byte*) mode_twoplanebitmap::gfxb#3
(byte*) mode_twoplanebitmap::gfxb#4
(byte) mode_twoplanebitmap::i
(byte) mode_twoplanebitmap::i#0
(byte) mode_twoplanebitmap::i#1
(byte) mode_twoplanebitmap::i#2
(byte*) print_char_cursor
(byte*) print_char_cursor#0
(byte*) print_char_cursor#1
(byte*) print_char_cursor#10
(byte*) print_char_cursor#11
(byte*) print_char_cursor#12
(byte*) print_char_cursor#13
(byte*) print_char_cursor#14
(byte*) print_char_cursor#15
(byte*) print_char_cursor#16
(byte*) print_char_cursor#17
(byte*) print_char_cursor#18
(byte*) print_char_cursor#19
(byte*) print_char_cursor#2
(byte*) print_char_cursor#20
(byte*) print_char_cursor#21
(byte*) print_char_cursor#22
(byte*) print_char_cursor#23
(byte*) print_char_cursor#24
(byte*) print_char_cursor#25
(byte*) print_char_cursor#26
(byte*) print_char_cursor#27
(byte*) print_char_cursor#28
(byte*) print_char_cursor#29
(byte*) print_char_cursor#3
(byte*) print_char_cursor#30
(byte*) print_char_cursor#31
(byte*) print_char_cursor#32
(byte*) print_char_cursor#33
(byte*) print_char_cursor#34
(byte*) print_char_cursor#35
(byte*) print_char_cursor#36
(byte*) print_char_cursor#37
(byte*) print_char_cursor#38
(byte*) print_char_cursor#39
(byte*) print_char_cursor#4
(byte*) print_char_cursor#40
(byte*) print_char_cursor#41
(byte*) print_char_cursor#42
(byte*) print_char_cursor#43
(byte*) print_char_cursor#44
(byte*) print_char_cursor#45
(byte*) print_char_cursor#46
(byte*) print_char_cursor#47
(byte*) print_char_cursor#48
(byte*) print_char_cursor#49
(byte*) print_char_cursor#5
(byte*) print_char_cursor#50
(byte*) print_char_cursor#51
(byte*) print_char_cursor#52
(byte*) print_char_cursor#53
(byte*) print_char_cursor#54
(byte*) print_char_cursor#55
(byte*) print_char_cursor#56
(byte*) print_char_cursor#57
(byte*) print_char_cursor#58
(byte*) print_char_cursor#59
(byte*) print_char_cursor#6
(byte*) print_char_cursor#60
(byte*) print_char_cursor#61
(byte*) print_char_cursor#62
(byte*) print_char_cursor#63
(byte*) print_char_cursor#64
(byte*) print_char_cursor#65
(byte*) print_char_cursor#66
(byte*) print_char_cursor#67
(byte*) print_char_cursor#68
(byte*) print_char_cursor#69
(byte*) print_char_cursor#7
(byte*) print_char_cursor#70
(byte*) print_char_cursor#71
(byte*) print_char_cursor#72
(byte*) print_char_cursor#73
(byte*) print_char_cursor#74
(byte*) print_char_cursor#75
(byte*) print_char_cursor#76
(byte*) print_char_cursor#77
(byte*) print_char_cursor#78
(byte*) print_char_cursor#79
(byte*) print_char_cursor#8
(byte*) print_char_cursor#80
(byte*) print_char_cursor#81
(byte*) print_char_cursor#82
(byte*) print_char_cursor#83
(byte*) print_char_cursor#84
(byte*) print_char_cursor#85
(byte*) print_char_cursor#86
(byte*) print_char_cursor#87
(byte*) print_char_cursor#88
(byte*) print_char_cursor#89
(byte*) print_char_cursor#9
(byte*) print_char_cursor#90
(byte*) print_char_cursor#91
(byte*) print_char_cursor#92
(byte*) print_char_cursor#93
(byte*) print_char_cursor#94
(void()) print_cls()
(byte*~) print_cls::$0
(boolean~) print_cls::$1
(label) print_cls::@1
(label) print_cls::@2
(label) print_cls::@return
(byte*) print_cls::sc
(byte*) print_cls::sc#0
(byte*) print_cls::sc#1
(byte*) print_cls::sc#2
(byte*) print_line_cursor
(byte*) print_line_cursor#0
(byte*) print_line_cursor#1
(byte*) print_line_cursor#10
(byte*) print_line_cursor#11
(byte*) print_line_cursor#12
(byte*) print_line_cursor#13
(byte*) print_line_cursor#14
(byte*) print_line_cursor#15
(byte*) print_line_cursor#16
(byte*) print_line_cursor#17
(byte*) print_line_cursor#18
(byte*) print_line_cursor#19
(byte*) print_line_cursor#2
(byte*) print_line_cursor#20
(byte*) print_line_cursor#21
(byte*) print_line_cursor#22
(byte*) print_line_cursor#23
(byte*) print_line_cursor#24
(byte*) print_line_cursor#25
(byte*) print_line_cursor#26
(byte*) print_line_cursor#27
(byte*) print_line_cursor#28
(byte*) print_line_cursor#29
(byte*) print_line_cursor#3
(byte*) print_line_cursor#30
(byte*) print_line_cursor#31
(byte*) print_line_cursor#32
(byte*) print_line_cursor#33
(byte*) print_line_cursor#34
(byte*) print_line_cursor#35
(byte*) print_line_cursor#36
(byte*) print_line_cursor#37
(byte*) print_line_cursor#38
(byte*) print_line_cursor#39
(byte*) print_line_cursor#4
(byte*) print_line_cursor#40
(byte*) print_line_cursor#41
(byte*) print_line_cursor#42
(byte*) print_line_cursor#43
(byte*) print_line_cursor#44
(byte*) print_line_cursor#45
(byte*) print_line_cursor#46
(byte*) print_line_cursor#47
(byte*) print_line_cursor#48
(byte*) print_line_cursor#49
(byte*) print_line_cursor#5
(byte*) print_line_cursor#50
(byte*) print_line_cursor#51
(byte*) print_line_cursor#52
(byte*) print_line_cursor#53
(byte*) print_line_cursor#54
(byte*) print_line_cursor#55
(byte*) print_line_cursor#56
(byte*) print_line_cursor#57
(byte*) print_line_cursor#58
(byte*) print_line_cursor#59
(byte*) print_line_cursor#6
(byte*) print_line_cursor#60
(byte*) print_line_cursor#61
(byte*) print_line_cursor#62
(byte*) print_line_cursor#63
(byte*) print_line_cursor#64
(byte*) print_line_cursor#65
(byte*) print_line_cursor#66
(byte*) print_line_cursor#67
(byte*) print_line_cursor#68
(byte*) print_line_cursor#69
(byte*) print_line_cursor#7
(byte*) print_line_cursor#70
(byte*) print_line_cursor#71
(byte*) print_line_cursor#72
(byte*) print_line_cursor#73
(byte*) print_line_cursor#74
(byte*) print_line_cursor#75
(byte*) print_line_cursor#76
(byte*) print_line_cursor#77
(byte*) print_line_cursor#78
(byte*) print_line_cursor#79
(byte*) print_line_cursor#8
(byte*) print_line_cursor#80
(byte*) print_line_cursor#81
(byte*) print_line_cursor#82
(byte*) print_line_cursor#83
(byte*) print_line_cursor#84
(byte*) print_line_cursor#85
(byte*) print_line_cursor#86
(byte*) print_line_cursor#87
(byte*) print_line_cursor#88
(byte*) print_line_cursor#89
(byte*) print_line_cursor#9
(byte*) print_line_cursor#90
(byte*) print_line_cursor#91
(byte*) print_line_cursor#92
(byte*) print_line_cursor#93
(byte*) print_line_cursor#94
(void()) print_ln()
(byte*~) print_ln::$0
(boolean~) print_ln::$1
(label) print_ln::@1
(label) print_ln::@2
(label) print_ln::@return
(byte*) print_screen
(byte*) print_screen#0
(byte*) print_screen#1
(byte*) print_screen#10
(byte*) print_screen#11
(byte*) print_screen#12
(byte*) print_screen#13
(byte*) print_screen#14
(byte*) print_screen#15
(byte*) print_screen#16
(byte*) print_screen#17
(byte*) print_screen#18
(byte*) print_screen#19
(byte*) print_screen#2
(byte*) print_screen#20
(byte*) print_screen#21
(byte*) print_screen#22
(byte*) print_screen#23
(byte*) print_screen#24
(byte*) print_screen#25
(byte*) print_screen#26
(byte*) print_screen#27
(byte*) print_screen#28
(byte*) print_screen#29
(byte*) print_screen#3
(byte*) print_screen#30
(byte*) print_screen#31
(byte*) print_screen#32
(byte*) print_screen#33
(byte*) print_screen#34
(byte*) print_screen#35
(byte*) print_screen#36
(byte*) print_screen#37
(byte*) print_screen#38
(byte*) print_screen#39
(byte*) print_screen#4
(byte*) print_screen#40
(byte*) print_screen#41
(byte*) print_screen#42
(byte*) print_screen#43
(byte*) print_screen#44
(byte*) print_screen#45
(byte*) print_screen#46
(byte*) print_screen#47
(byte*) print_screen#48
(byte*) print_screen#49
(byte*) print_screen#5
(byte*) print_screen#50
(byte*) print_screen#51
(byte*) print_screen#52
(byte*) print_screen#53
(byte*) print_screen#54
(byte*) print_screen#55
(byte*) print_screen#56
(byte*) print_screen#57
(byte*) print_screen#58
(byte*) print_screen#59
(byte*) print_screen#6
(byte*) print_screen#60
(byte*) print_screen#61
(byte*) print_screen#62
(byte*) print_screen#63
(byte*) print_screen#64
(byte*) print_screen#65
(byte*) print_screen#66
(byte*) print_screen#67
(byte*) print_screen#68
(byte*) print_screen#69
(byte*) print_screen#7
(byte*) print_screen#70
(byte*) print_screen#71
(byte*) print_screen#72
(byte*) print_screen#73
(byte*) print_screen#74
(byte*) print_screen#75
(byte*) print_screen#8
(byte*) print_screen#9
(void()) print_set_screen((byte*) print_set_screen::screen)
(label) print_set_screen::@return
(byte*) print_set_screen::screen
(byte*) print_set_screen::screen#0
(byte*) print_set_screen::screen#1
(void()) print_str_lines((byte*) print_str_lines::str)
(boolean~) print_str_lines::$0
(boolean~) print_str_lines::$1
(boolean~) print_str_lines::$2
(boolean~) print_str_lines::$3
(label) print_str_lines::@1
(label) print_str_lines::@11
(label) print_str_lines::@2
(label) print_str_lines::@4
(label) print_str_lines::@5
(label) print_str_lines::@8
(label) print_str_lines::@9
(label) print_str_lines::@return
(byte) print_str_lines::ch
(byte) print_str_lines::ch#0
(byte) print_str_lines::ch#1
(byte) print_str_lines::ch#2
(byte*) print_str_lines::str
(byte*) print_str_lines::str#0
(byte*) print_str_lines::str#1
(byte*) print_str_lines::str#2
(byte*) print_str_lines::str#3
(byte*) print_str_lines::str#4
(byte*) print_str_lines::str#5
(byte*) print_str_lines::str#6
(byte*) print_str_lines::str#7
(byte*) print_str_lines::str#8
(byte*) print_str_lines::str#9

OPTIMIZING CONTROL FLOW GRAPH
Culled Empty Block (label) mode_stdchar::@7
Culled Empty Block (label) mode_ecmchar::@7
Culled Empty Block (label) mode_mcchar::@7
Culled Empty Block (label) mode_hicolstdchar::@7
Culled Empty Block (label) mode_hicolecmchar::@7
Culled Empty Block (label) mode_hicolmcchar::@7
Culled Empty Block (label) mode_twoplanebitmap::@13
Culled Empty Block (label) mode_sixsfred::@11
Culled Empty Block (label) mode_sixsfred2::@11
Culled Empty Block (label) mode_8bpppixelcell::@11
Culled Empty Block (label) mode_8bppchunkybmm::@20
Culled Empty Block (label) mode_8bppchunkybmm::@8
Succesful SSA optimization Pass2CullEmptyBlocks
Inversing boolean not (boolean~) print_str_lines::$2 ← (byte) print_str_lines::ch#0 == (byte) '@' from (boolean~) print_str_lines::$1 ← (byte) print_str_lines::ch#0 != (byte) '@'
Inversing boolean not (boolean~) menu::$31 ← (byte~) menu::$29 == (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) menu::$30 ← (byte~) menu::$29 != (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) menu::$35 ← (byte~) menu::$33 == (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) menu::$34 ← (byte~) menu::$33 != (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) menu::$39 ← (byte~) menu::$37 == (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) menu::$38 ← (byte~) menu::$37 != (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) menu::$43 ← (byte~) menu::$41 == (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) menu::$42 ← (byte~) menu::$41 != (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) menu::$47 ← (byte~) menu::$45 == (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) menu::$46 ← (byte~) menu::$45 != (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) menu::$51 ← (byte~) menu::$49 == (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) menu::$50 ← (byte~) menu::$49 != (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) menu::$55 ← (byte~) menu::$53 == (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) menu::$54 ← (byte~) menu::$53 != (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) menu::$59 ← (byte~) menu::$57 == (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) menu::$58 ← (byte~) menu::$57 != (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) menu::$63 ← (byte~) menu::$61 == (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) menu::$62 ← (byte~) menu::$61 != (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) menu::$67 ← (byte~) menu::$65 == (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) menu::$66 ← (byte~) menu::$65 != (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) menu::$71 ← (byte~) menu::$69 == (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) menu::$70 ← (byte~) menu::$69 != (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) mode_stdchar::$34 ← (byte~) mode_stdchar::$32 == (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) mode_stdchar::$33 ← (byte~) mode_stdchar::$32 != (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) mode_ecmchar::$35 ← (byte~) mode_ecmchar::$33 == (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) mode_ecmchar::$34 ← (byte~) mode_ecmchar::$33 != (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) mode_mcchar::$35 ← (byte~) mode_mcchar::$33 == (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) mode_mcchar::$34 ← (byte~) mode_mcchar::$33 != (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) mode_hicolstdchar::$32 ← (byte~) mode_hicolstdchar::$30 == (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) mode_hicolstdchar::$31 ← (byte~) mode_hicolstdchar::$30 != (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) mode_hicolecmchar::$33 ← (byte~) mode_hicolecmchar::$31 == (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) mode_hicolecmchar::$32 ← (byte~) mode_hicolecmchar::$31 != (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) mode_hicolmcchar::$33 ← (byte~) mode_hicolmcchar::$31 == (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) mode_hicolmcchar::$32 ← (byte~) mode_hicolmcchar::$31 != (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) mode_twoplanebitmap::$22 ← (byte~) mode_twoplanebitmap::$20 != (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) mode_twoplanebitmap::$21 ← (byte~) mode_twoplanebitmap::$20 == (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) mode_twoplanebitmap::$29 ← (byte~) mode_twoplanebitmap::$27 == (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) mode_twoplanebitmap::$28 ← (byte~) mode_twoplanebitmap::$27 != (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) mode_sixsfred::$27 ← (byte~) mode_sixsfred::$25 == (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) mode_sixsfred::$26 ← (byte~) mode_sixsfred::$25 != (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) mode_sixsfred2::$28 ← (byte~) mode_sixsfred2::$26 == (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) mode_sixsfred2::$27 ← (byte~) mode_sixsfred2::$26 != (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) mode_8bpppixelcell::$19 ← (byte~) mode_8bpppixelcell::$17 == (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) mode_8bpppixelcell::$18 ← (byte~) mode_8bpppixelcell::$17 != (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) mode_8bpppixelcell::$26 ← (byte~) mode_8bpppixelcell::$24 == (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) mode_8bpppixelcell::$25 ← (byte~) mode_8bpppixelcell::$24 != (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) mode_8bppchunkybmm::$18 ← (byte*) mode_8bppchunkybmm::gfxb#3 != (word/dword/signed dword) 32768 from (boolean~) mode_8bppchunkybmm::$17 ← (byte*) mode_8bppchunkybmm::gfxb#3 == (word/dword/signed dword) 32768
Inversing boolean not (boolean~) mode_8bppchunkybmm::$29 ← (byte~) mode_8bppchunkybmm::$27 == (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) mode_8bppchunkybmm::$28 ← (byte~) mode_8bppchunkybmm::$27 != (byte/signed byte/word/signed word/dword/signed dword) 0
Succesful SSA optimization Pass2UnaryNotSimplification
Not aliassing across scopes: dtvSetCpuBankSegment1::cpuBankIdx#3 dtvSetCpuBankSegment1::cpuBankIdx#1
Not aliassing across scopes: print_str_lines::str#4 print_str_lines::str#1
Not aliassing across scopes: print_char_cursor#51 print_char_cursor#13
Not aliassing across scopes: print_line_cursor#49 print_line_cursor#12
Not aliassing across scopes: print_line_cursor#16 print_line_cursor#4
Not aliassing across scopes: print_char_cursor#18 print_char_cursor#5
Not aliassing across scopes: print_line_cursor#32 print_line_cursor#30
Not aliassing across scopes: print_char_cursor#34 print_char_cursor#32
Not aliassing across scopes: print_screen#8 print_screen#5
Not aliassing across scopes: print_cls::sc#0 print_screen#8
Not aliassing across scopes: print_set_screen::screen#1 print_set_screen::screen#0
Not aliassing across scopes: print_screen#1 print_set_screen::screen#1
Not aliassing across scopes: keyboard_matrix_read::rowid#1 keyboard_matrix_read::rowid#0
Not aliassing across scopes: keyboard_key_pressed::key#22 keyboard_key_pressed::key#5
Not aliassing across scopes: keyboard_matrix_read::rowid#0 keyboard_key_pressed::rowidx#0
Not aliassing across scopes: keyboard_matrix_read::return#2 keyboard_matrix_read::return#1
Not aliassing across scopes: keyboard_key_pressed::$2 keyboard_matrix_read::return#4
Not aliassing across scopes: print_screen#33 print_screen#32
Not aliassing across scopes: print_line_cursor#51 print_line_cursor#48
Not aliassing across scopes: print_char_cursor#54 print_char_cursor#50
Not aliassing across scopes: print_screen#12 print_screen#6
Not aliassing across scopes: print_line_cursor#23 print_line_cursor#14
Not aliassing across scopes: print_char_cursor#24 print_char_cursor#15
Not aliassing across scopes: print_screen#75 print_screen#17
Not aliassing across scopes: print_line_cursor#94 print_line_cursor#33
Not aliassing across scopes: print_char_cursor#94 print_char_cursor#35
Not aliassing across scopes: menu::c#0 COLS#0
Not aliassing across scopes: print_set_screen::screen#0 menu::SCREEN#0
Not aliassing across scopes: print_screen#14 print_screen#2
Not aliassing across scopes: print_line_cursor#25 print_line_cursor#8
Not aliassing across scopes: print_char_cursor#26 print_char_cursor#9
Not aliassing across scopes: print_line_cursor#26 print_line_cursor#6
Not aliassing across scopes: print_char_cursor#27 print_char_cursor#7
Not aliassing across scopes: print_str_lines::str#1 MENU_TEXT#0
Not aliassing across scopes: print_char_cursor#28 print_char_cursor#3
Not aliassing across scopes: print_line_cursor#27 print_line_cursor#2
Not aliassing across scopes: keyboard_key_pressed::key#0 KEY_1#0
Not aliassing across scopes: keyboard_key_pressed::return#2 keyboard_key_pressed::return#1
Not aliassing across scopes: menu::$29 keyboard_key_pressed::return#25
Not aliassing across scopes: keyboard_key_pressed::key#1 KEY_2#0
Not aliassing across scopes: keyboard_key_pressed::return#3 keyboard_key_pressed::return#1
Not aliassing across scopes: menu::$33 keyboard_key_pressed::return#26
Not aliassing across scopes: keyboard_key_pressed::key#2 KEY_3#0
Not aliassing across scopes: keyboard_key_pressed::return#4 keyboard_key_pressed::return#1
Not aliassing across scopes: menu::$37 keyboard_key_pressed::return#27
Not aliassing across scopes: keyboard_key_pressed::key#3 KEY_6#0
Not aliassing across scopes: keyboard_key_pressed::return#5 keyboard_key_pressed::return#1
Not aliassing across scopes: menu::$41 keyboard_key_pressed::return#28
Not aliassing across scopes: keyboard_key_pressed::key#4 KEY_7#0
Not aliassing across scopes: keyboard_key_pressed::return#6 keyboard_key_pressed::return#1
Not aliassing across scopes: menu::$45 keyboard_key_pressed::return#29
Not aliassing across scopes: keyboard_key_pressed::key#5 KEY_8#0
Not aliassing across scopes: keyboard_key_pressed::return#7 keyboard_key_pressed::return#1
Not aliassing across scopes: menu::$49 keyboard_key_pressed::return#30
Not aliassing across scopes: keyboard_key_pressed::key#6 KEY_A#0
Not aliassing across scopes: keyboard_key_pressed::return#8 keyboard_key_pressed::return#1
Not aliassing across scopes: menu::$53 keyboard_key_pressed::return#31
Not aliassing across scopes: keyboard_key_pressed::key#7 KEY_B#0
Not aliassing across scopes: keyboard_key_pressed::return#9 keyboard_key_pressed::return#1
Not aliassing across scopes: menu::$57 keyboard_key_pressed::return#32
Not aliassing across scopes: keyboard_key_pressed::key#8 KEY_C#0
Not aliassing across scopes: keyboard_key_pressed::return#10 keyboard_key_pressed::return#1
Not aliassing across scopes: menu::$61 keyboard_key_pressed::return#33
Not aliassing across scopes: keyboard_key_pressed::key#9 KEY_D#0
Not aliassing across scopes: keyboard_key_pressed::return#11 keyboard_key_pressed::return#1
Not aliassing across scopes: menu::$65 keyboard_key_pressed::return#34
Not aliassing across scopes: keyboard_key_pressed::key#10 KEY_E#0
Not aliassing across scopes: keyboard_key_pressed::return#12 keyboard_key_pressed::return#1
Not aliassing across scopes: menu::$69 keyboard_key_pressed::return#35
Not aliassing across scopes: keyboard_key_pressed::key#11 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#13 keyboard_key_pressed::return#1
Not aliassing across scopes: mode_stdchar::$32 keyboard_key_pressed::return#36
Not aliassing across scopes: keyboard_key_pressed::key#12 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#14 keyboard_key_pressed::return#1
Not aliassing across scopes: mode_ecmchar::$33 keyboard_key_pressed::return#37
Not aliassing across scopes: keyboard_key_pressed::key#13 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#15 keyboard_key_pressed::return#1
Not aliassing across scopes: mode_mcchar::$33 keyboard_key_pressed::return#38
Not aliassing across scopes: keyboard_key_pressed::key#14 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#16 keyboard_key_pressed::return#1
Not aliassing across scopes: mode_hicolstdchar::$30 keyboard_key_pressed::return#39
Not aliassing across scopes: keyboard_key_pressed::key#15 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#17 keyboard_key_pressed::return#1
Not aliassing across scopes: mode_hicolecmchar::$31 keyboard_key_pressed::return#40
Not aliassing across scopes: keyboard_key_pressed::key#16 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#18 keyboard_key_pressed::return#1
Not aliassing across scopes: mode_hicolmcchar::$31 keyboard_key_pressed::return#41
Not aliassing across scopes: keyboard_key_pressed::key#17 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#19 keyboard_key_pressed::return#1
Not aliassing across scopes: mode_twoplanebitmap::$27 keyboard_key_pressed::return#42
Not aliassing across scopes: keyboard_key_pressed::key#18 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#20 keyboard_key_pressed::return#1
Not aliassing across scopes: mode_sixsfred::$25 keyboard_key_pressed::return#43
Not aliassing across scopes: keyboard_key_pressed::key#19 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#21 keyboard_key_pressed::return#1
Not aliassing across scopes: mode_sixsfred2::$26 keyboard_key_pressed::return#44
Not aliassing across scopes: keyboard_key_pressed::key#20 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#22 keyboard_key_pressed::return#1
Not aliassing across scopes: mode_8bpppixelcell::$24 keyboard_key_pressed::return#45
Not aliassing across scopes: dtvSetCpuBankSegment1::cpuBankIdx#0 mode_8bppchunkybmm::gfxbCpuBank#0
Not aliassing across scopes: dtvSetCpuBankSegment1::cpuBankIdx#1 mode_8bppchunkybmm::gfxbCpuBank#4
Not aliassing across scopes: keyboard_key_pressed::key#21 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#23 keyboard_key_pressed::return#1
Not aliassing across scopes: mode_8bppchunkybmm::$27 keyboard_key_pressed::return#46
Not aliassing across scopes: print_screen#16 print_screen#4
Not aliassing across scopes: print_line_cursor#29 print_line_cursor#10
Not aliassing across scopes: print_char_cursor#30 print_char_cursor#11
Alias (byte*) print_screen#0 = (byte*) print_line_cursor#0 (byte*) print_char_cursor#0 (byte*) print_screen#49 (byte*) print_line_cursor#68 (byte*) print_char_cursor#69 (byte*) print_screen#48 (byte*) print_line_cursor#65 (byte*) print_char_cursor#68 (byte*) print_screen#32 (byte*) print_line_cursor#48 (byte*) print_char_cursor#50 
Alias (byte*) print_str_lines::str#2 = (byte*) print_str_lines::str#6 
Alias (byte*) print_char_cursor#19 = (byte*) print_char_cursor#52 (byte*) print_char_cursor#33 (byte*) print_char_cursor#3 
Alias (byte*) print_line_cursor#17 = (byte*) print_line_cursor#81 (byte*) print_line_cursor#31 (byte*) print_line_cursor#2 
Alias (byte) print_str_lines::ch#0 = (byte) print_str_lines::ch#2 
Alias (byte*) print_char_cursor#17 = (byte*) print_char_cursor#31 
Alias (byte*) print_str_lines::str#0 = (byte*) print_str_lines::str#8 
Alias (byte*) print_line_cursor#66 = (byte*) print_line_cursor#67 
Alias (byte*) print_line_cursor#30 = (byte*) print_line_cursor#50 
Alias (byte*) print_char_cursor#32 = (byte*) print_char_cursor#53 
Alias (byte*) print_str_lines::str#5 = (byte*) print_str_lines::str#9 (byte*) print_str_lines::str#7 
Alias (byte*) print_line_cursor#1 = (byte*) print_line_cursor#16 
Alias (byte*) print_char_cursor#18 = (byte*) print_char_cursor#2 
Alias (byte*) print_line_cursor#19 = (byte*) print_line_cursor#3 (byte*~) print_ln::$0 (byte*) print_char_cursor#4 (byte*) print_line_cursor#20 (byte*) print_char_cursor#21 (byte*) print_line_cursor#4 (byte*) print_char_cursor#5 
Alias (byte*) print_line_cursor#21 = (byte*) print_screen#10 (byte*) print_screen#9 (byte*) print_line_cursor#5 (byte*) print_char_cursor#6 (byte*) print_char_cursor#22 (byte*) print_line_cursor#6 (byte*) print_char_cursor#7 
Alias (byte*) print_screen#1 = (byte*) print_line_cursor#7 (byte*) print_char_cursor#8 (byte*) print_screen#11 (byte*) print_line_cursor#22 (byte*) print_char_cursor#23 (byte*) print_screen#2 (byte*) print_line_cursor#8 (byte*) print_char_cursor#9 
Alias (byte) keyboard_matrix_read::return#0 = (byte) keyboard_matrix_read::row_pressed_bits#0 (byte~) keyboard_matrix_read::$0 (byte) keyboard_matrix_read::return#3 (byte) keyboard_matrix_read::return#1 
Alias (byte) keyboard_key_pressed::colidx#0 = (byte~) keyboard_key_pressed::$0 (byte) keyboard_key_pressed::colidx#1 
Alias (byte) keyboard_key_pressed::rowidx#0 = (byte~) keyboard_key_pressed::$1 
Alias (byte) keyboard_matrix_read::return#2 = (byte) keyboard_matrix_read::return#4 
Alias (byte) keyboard_key_pressed::return#0 = (byte~) keyboard_key_pressed::$3 (byte) keyboard_key_pressed::return#24 (byte) keyboard_key_pressed::return#1 
Alias (byte*) print_screen#13 = (byte*) print_screen#17 (byte*) print_screen#18 (byte*) print_screen#4 
Alias (byte*) print_line_cursor#10 = (byte*) print_line_cursor#33 (byte*) print_line_cursor#34 (byte*) print_line_cursor#24 
Alias (byte*) print_char_cursor#11 = (byte*) print_char_cursor#35 (byte*) print_char_cursor#36 (byte*) print_char_cursor#25 
Alias (byte*) print_screen#12 = (byte*) print_screen#3 
Alias (byte*) print_line_cursor#23 = (byte*) print_line_cursor#9 
Alias (byte*) print_char_cursor#10 = (byte*) print_char_cursor#24 
Alias (byte[]) MENU_TEXT#0 = (string~) $19 
Alias (byte*) print_screen#50 = (byte*) print_screen#63 
Alias (byte*) print_line_cursor#69 = (byte*) print_line_cursor#82 
Alias (byte*) print_char_cursor#70 = (byte*) print_char_cursor#82 
Alias (byte*) print_screen#19 = (byte*) print_screen#34 
Alias (byte*) print_line_cursor#35 = (byte*) print_line_cursor#52 
Alias (byte*) print_char_cursor#37 = (byte*) print_char_cursor#55 
Alias (byte*) print_screen#14 = (byte*) print_screen#5 (byte*) print_screen#51 (byte*) print_screen#36 
Alias (byte*) print_line_cursor#11 = (byte*) print_line_cursor#25 
Alias (byte*) print_char_cursor#12 = (byte*) print_char_cursor#26 
Alias (byte*) print_line_cursor#12 = (byte*) print_line_cursor#26 
Alias (byte*) print_char_cursor#13 = (byte*) print_char_cursor#27 
Alias (byte*) print_char_cursor#14 = (byte*) print_char_cursor#28 
Alias (byte*) print_line_cursor#13 = (byte*) print_line_cursor#27 
Alias (byte*) print_screen#20 = (byte*) print_screen#64 (byte*) print_screen#52 (byte*) print_screen#65 (byte*) print_screen#53 (byte*) print_screen#37 (byte*) print_screen#21 (byte*) print_screen#66 (byte*) print_screen#54 (byte*) print_screen#38 (byte*) print_screen#22 (byte*) print_screen#67 (byte*) print_screen#55 (byte*) print_screen#39 (byte*) print_screen#23 (byte*) print_screen#68 (byte*) print_screen#56 (byte*) print_screen#40 (byte*) print_screen#24 (byte*) print_screen#69 (byte*) print_screen#57 (byte*) print_screen#41 (byte*) print_screen#25 (byte*) print_screen#70 (byte*) print_screen#58 (byte*) print_screen#42 (byte*) print_screen#26 (byte*) print_screen#71 (byte*) print_screen#59 (byte*) print_screen#43 (byte*) print_screen#27 (byte*) print_screen#72 (byte*) print_screen#60 (byte*) print_screen#44 (byte*) print_screen#28 (byte*) print_screen#73 (byte*) print_screen#61 (byte*) print_screen#45 (byte*) print_screen#29 (byte*) print_screen#74 (byte*) print_screen#62 (byte*) print_screen#46 (byte*) print_screen#30 (byte*) print_screen#35 (byte*) print_screen#47 (byte*) print_screen#31 
Alias (byte*) print_line_cursor#36 = (byte*) print_line_cursor#83 (byte*) print_line_cursor#70 (byte*) print_line_cursor#84 (byte*) print_line_cursor#71 (byte*) print_line_cursor#54 (byte*) print_line_cursor#37 (byte*) print_line_cursor#85 (byte*) print_line_cursor#72 (byte*) print_line_cursor#55 (byte*) print_line_cursor#38 (byte*) print_line_cursor#86 (byte*) print_line_cursor#73 (byte*) print_line_cursor#56 (byte*) print_line_cursor#39 (byte*) print_line_cursor#87 (byte*) print_line_cursor#74 (byte*) print_line_cursor#57 (byte*) print_line_cursor#40 (byte*) print_line_cursor#88 (byte*) print_line_cursor#75 (byte*) print_line_cursor#58 (byte*) print_line_cursor#41 (byte*) print_line_cursor#89 (byte*) print_line_cursor#76 (byte*) print_line_cursor#59 (byte*) print_line_cursor#42 (byte*) print_line_cursor#90 (byte*) print_line_cursor#77 (byte*) print_line_cursor#60 (byte*) print_line_cursor#43 (byte*) print_line_cursor#91 (byte*) print_line_cursor#78 (byte*) print_line_cursor#61 (byte*) print_line_cursor#44 (byte*) print_line_cursor#92 (byte*) print_line_cursor#79 (byte*) print_line_cursor#62 (byte*) print_line_cursor#45 (byte*) print_line_cursor#93 (byte*) print_line_cursor#80 (byte*) print_line_cursor#63 (byte*) print_line_cursor#46 (byte*) print_line_cursor#53 (byte*) print_line_cursor#64 (byte*) print_line_cursor#47 
Alias (byte*) print_char_cursor#38 = (byte*) print_char_cursor#83 (byte*) print_char_cursor#71 (byte*) print_char_cursor#84 (byte*) print_char_cursor#72 (byte*) print_char_cursor#57 (byte*) print_char_cursor#39 (byte*) print_char_cursor#85 (byte*) print_char_cursor#73 (byte*) print_char_cursor#58 (byte*) print_char_cursor#40 (byte*) print_char_cursor#86 (byte*) print_char_cursor#74 (byte*) print_char_cursor#59 (byte*) print_char_cursor#41 (byte*) print_char_cursor#87 (byte*) print_char_cursor#75 (byte*) print_char_cursor#60 (byte*) print_char_cursor#42 (byte*) print_char_cursor#88 (byte*) print_char_cursor#76 (byte*) print_char_cursor#61 (byte*) print_char_cursor#43 (byte*) print_char_cursor#89 (byte*) print_char_cursor#77 (byte*) print_char_cursor#62 (byte*) print_char_cursor#44 (byte*) print_char_cursor#90 (byte*) print_char_cursor#78 (byte*) print_char_cursor#63 (byte*) print_char_cursor#45 (byte*) print_char_cursor#91 (byte*) print_char_cursor#79 (byte*) print_char_cursor#64 (byte*) print_char_cursor#46 (byte*) print_char_cursor#92 (byte*) print_char_cursor#80 (byte*) print_char_cursor#65 (byte*) print_char_cursor#47 (byte*) print_char_cursor#93 (byte*) print_char_cursor#81 (byte*) print_char_cursor#66 (byte*) print_char_cursor#48 (byte*) print_char_cursor#56 (byte*) print_char_cursor#67 (byte*) print_char_cursor#49 
Alias (byte) keyboard_key_pressed::return#2 = (byte) keyboard_key_pressed::return#25 
Alias (byte) keyboard_key_pressed::return#26 = (byte) keyboard_key_pressed::return#3 
Alias (byte*) print_screen#15 = (byte*) print_screen#6 
Alias (byte*) print_line_cursor#14 = (byte*) print_line_cursor#28 
Alias (byte*) print_char_cursor#15 = (byte*) print_char_cursor#29 
Alias (byte) keyboard_key_pressed::return#27 = (byte) keyboard_key_pressed::return#4 
Alias (byte) keyboard_key_pressed::return#28 = (byte) keyboard_key_pressed::return#5 
Alias (byte) keyboard_key_pressed::return#29 = (byte) keyboard_key_pressed::return#6 
Alias (byte) keyboard_key_pressed::return#30 = (byte) keyboard_key_pressed::return#7 
Alias (byte) keyboard_key_pressed::return#31 = (byte) keyboard_key_pressed::return#8 
Alias (byte) keyboard_key_pressed::return#32 = (byte) keyboard_key_pressed::return#9 
Alias (byte) keyboard_key_pressed::return#10 = (byte) keyboard_key_pressed::return#33 
Alias (byte) keyboard_key_pressed::return#11 = (byte) keyboard_key_pressed::return#34 
Alias (byte) keyboard_key_pressed::return#12 = (byte) keyboard_key_pressed::return#35 
Alias (byte*) mode_stdchar::COLORS#0 = (byte*) mode_stdchar::col#0 
Alias (byte*) mode_stdchar::SCREEN#0 = (byte*) mode_stdchar::ch#0 
Alias (byte) mode_stdchar::cy#2 = (byte) mode_stdchar::cy#3 
Alias (byte*) mode_stdchar::col#1 = (byte*) mode_stdchar::col#4 
Alias (byte*) mode_stdchar::ch#1 = (byte*) mode_stdchar::ch#4 
Alias (byte) keyboard_key_pressed::return#13 = (byte) keyboard_key_pressed::return#36 
Alias (byte*) mode_ecmchar::ECMCHAR_COLORS#0 = (byte*) mode_ecmchar::col#0 
Alias (byte*) mode_ecmchar::ECMCHAR_SCREEN#0 = (byte*) mode_ecmchar::ch#0 
Alias (byte) mode_ecmchar::cy#2 = (byte) mode_ecmchar::cy#3 
Alias (byte*) mode_ecmchar::col#1 = (byte*) mode_ecmchar::col#4 
Alias (byte*) mode_ecmchar::ch#1 = (byte*) mode_ecmchar::ch#4 
Alias (byte) keyboard_key_pressed::return#14 = (byte) keyboard_key_pressed::return#37 
Alias (byte*) mode_mcchar::COLORS#0 = (byte*) mode_mcchar::col#0 
Alias (byte*) mode_mcchar::SCREEN#0 = (byte*) mode_mcchar::ch#0 
Alias (byte) mode_mcchar::cy#2 = (byte) mode_mcchar::cy#3 
Alias (byte*) mode_mcchar::col#1 = (byte*) mode_mcchar::col#4 
Alias (byte*) mode_mcchar::ch#1 = (byte*) mode_mcchar::ch#4 
Alias (byte) keyboard_key_pressed::return#15 = (byte) keyboard_key_pressed::return#38 
Alias (byte*) mode_hicolstdchar::COLORS#0 = (byte*) mode_hicolstdchar::col#0 
Alias (byte*) mode_hicolstdchar::SCREEN#0 = (byte*) mode_hicolstdchar::ch#0 
Alias (byte) mode_hicolstdchar::v#0 = (byte~) mode_hicolstdchar::$27 
Alias (byte) mode_hicolstdchar::cy#2 = (byte) mode_hicolstdchar::cy#3 
Alias (byte*) mode_hicolstdchar::col#1 = (byte*) mode_hicolstdchar::col#4 
Alias (byte*) mode_hicolstdchar::ch#1 = (byte*) mode_hicolstdchar::ch#4 
Alias (byte) keyboard_key_pressed::return#16 = (byte) keyboard_key_pressed::return#39 
Alias (byte*) mode_hicolecmchar::COLORS#0 = (byte*) mode_hicolecmchar::col#0 
Alias (byte*) mode_hicolecmchar::SCREEN#0 = (byte*) mode_hicolecmchar::ch#0 
Alias (byte) mode_hicolecmchar::v#0 = (byte~) mode_hicolecmchar::$28 
Alias (byte) mode_hicolecmchar::cy#2 = (byte) mode_hicolecmchar::cy#3 
Alias (byte*) mode_hicolecmchar::col#1 = (byte*) mode_hicolecmchar::col#4 
Alias (byte*) mode_hicolecmchar::ch#1 = (byte*) mode_hicolecmchar::ch#4 
Alias (byte) keyboard_key_pressed::return#17 = (byte) keyboard_key_pressed::return#40 
Alias (byte*) mode_hicolmcchar::COLORS#0 = (byte*) mode_hicolmcchar::col#0 
Alias (byte*) mode_hicolmcchar::SCREEN#0 = (byte*) mode_hicolmcchar::ch#0 
Alias (byte) mode_hicolmcchar::v#0 = (byte~) mode_hicolmcchar::$28 
Alias (byte) mode_hicolmcchar::cy#2 = (byte) mode_hicolmcchar::cy#3 
Alias (byte*) mode_hicolmcchar::col#1 = (byte*) mode_hicolmcchar::col#4 
Alias (byte*) mode_hicolmcchar::ch#1 = (byte*) mode_hicolmcchar::ch#4 
Alias (byte) keyboard_key_pressed::return#18 = (byte) keyboard_key_pressed::return#41 
Alias (byte*) mode_twoplanebitmap::COLORS#0 = (byte*) mode_twoplanebitmap::col#0 
Alias (byte) mode_twoplanebitmap::cy#2 = (byte) mode_twoplanebitmap::cy#3 
Alias (byte*) mode_twoplanebitmap::col#1 = (byte*) mode_twoplanebitmap::col#4 
Alias (byte*) mode_twoplanebitmap::PLANEA#0 = (byte*) mode_twoplanebitmap::gfxa#0 
Alias (byte*) mode_twoplanebitmap::gfxa#3 = (byte*) mode_twoplanebitmap::gfxa#5 (byte*) mode_twoplanebitmap::gfxa#4 
Alias (byte) mode_twoplanebitmap::ax#3 = (byte) mode_twoplanebitmap::ax#4 (byte) mode_twoplanebitmap::ax#5 
Alias (byte) mode_twoplanebitmap::ay#2 = (byte) mode_twoplanebitmap::ay#7 (byte) mode_twoplanebitmap::ay#6 
Alias (byte) mode_twoplanebitmap::ay#3 = (byte) mode_twoplanebitmap::ay#5 
Alias (byte*) mode_twoplanebitmap::gfxa#7 = (byte*) mode_twoplanebitmap::gfxa#8 
Alias (byte*) mode_twoplanebitmap::PLANEB#0 = (byte*) mode_twoplanebitmap::gfxb#0 
Alias (byte) mode_twoplanebitmap::by#2 = (byte) mode_twoplanebitmap::by#3 
Alias (byte*) mode_twoplanebitmap::gfxb#1 = (byte*) mode_twoplanebitmap::gfxb#4 
Alias (byte) keyboard_key_pressed::return#19 = (byte) keyboard_key_pressed::return#42 
Alias (byte*) mode_sixsfred::COLORS#0 = (byte*) mode_sixsfred::col#0 
Alias (byte) mode_sixsfred::cy#2 = (byte) mode_sixsfred::cy#3 
Alias (byte*) mode_sixsfred::col#1 = (byte*) mode_sixsfred::col#4 
Alias (byte*) mode_sixsfred::PLANEA#0 = (byte*) mode_sixsfred::gfxa#0 
Alias (byte) mode_sixsfred::row#0 = (byte~) mode_sixsfred::$20 
Alias (byte) mode_sixsfred::ay#2 = (byte) mode_sixsfred::ay#3 
Alias (byte*) mode_sixsfred::gfxa#1 = (byte*) mode_sixsfred::gfxa#4 
Alias (byte*) mode_sixsfred::PLANEB#0 = (byte*) mode_sixsfred::gfxb#0 
Alias (byte) mode_sixsfred::by#2 = (byte) mode_sixsfred::by#3 
Alias (byte*) mode_sixsfred::gfxb#1 = (byte*) mode_sixsfred::gfxb#4 
Alias (byte) keyboard_key_pressed::return#20 = (byte) keyboard_key_pressed::return#43 
Alias (byte*) mode_sixsfred2::COLORS#0 = (byte*) mode_sixsfred2::col#0 
Alias (byte) mode_sixsfred2::cy#2 = (byte) mode_sixsfred2::cy#3 
Alias (byte*) mode_sixsfred2::col#1 = (byte*) mode_sixsfred2::col#4 
Alias (byte*) mode_sixsfred2::PLANEA#0 = (byte*) mode_sixsfred2::gfxa#0 
Alias (byte) mode_sixsfred2::row#0 = (byte~) mode_sixsfred2::$21 
Alias (byte) mode_sixsfred2::ay#2 = (byte) mode_sixsfred2::ay#3 
Alias (byte*) mode_sixsfred2::gfxa#1 = (byte*) mode_sixsfred2::gfxa#4 
Alias (byte*) mode_sixsfred2::PLANEB#0 = (byte*) mode_sixsfred2::gfxb#0 
Alias (byte) mode_sixsfred2::by#2 = (byte) mode_sixsfred2::by#3 
Alias (byte*) mode_sixsfred2::gfxb#1 = (byte*) mode_sixsfred2::gfxb#4 
Alias (byte) keyboard_key_pressed::return#21 = (byte) keyboard_key_pressed::return#44 
Alias (byte*) mode_8bpppixelcell::PLANEA#0 = (byte*) mode_8bpppixelcell::gfxa#0 
Alias (byte) mode_8bpppixelcell::ay#2 = (byte) mode_8bpppixelcell::ay#3 
Alias (byte*) mode_8bpppixelcell::gfxa#1 = (byte*) mode_8bpppixelcell::gfxa#4 
Alias (byte*) mode_8bpppixelcell::PLANEB#0 = (byte*) mode_8bpppixelcell::gfxb#0 
Alias (byte*) mode_8bpppixelcell::chargen#0 = (byte*) mode_8bpppixelcell::CHARGEN#0 
Alias (byte) mode_8bpppixelcell::bits#1 = (byte~) mode_8bpppixelcell::$20 
Alias (byte) mode_8bpppixelcell::col#3 = (byte) mode_8bpppixelcell::col#4 (byte) mode_8bpppixelcell::c#1 
Alias (byte*) mode_8bpppixelcell::gfxb#3 = (byte*) mode_8bpppixelcell::gfxb#4 
Alias (byte) mode_8bpppixelcell::bits#2 = (byte) mode_8bpppixelcell::bits#4 
Alias (byte) mode_8bpppixelcell::cp#3 = (byte) mode_8bpppixelcell::cp#4 
Alias (byte) mode_8bpppixelcell::cr#4 = (byte) mode_8bpppixelcell::cr#5 
Alias (byte*) mode_8bpppixelcell::chargen#7 = (byte*) mode_8bpppixelcell::chargen#8 
Alias (byte) mode_8bpppixelcell::ch#5 = (byte) mode_8bpppixelcell::ch#6 
Alias (byte) mode_8bpppixelcell::cr#2 = (byte) mode_8bpppixelcell::cr#3 
Alias (byte*) mode_8bpppixelcell::chargen#3 = (byte*) mode_8bpppixelcell::chargen#6 (byte*) mode_8bpppixelcell::chargen#5 
Alias (byte) mode_8bpppixelcell::ch#2 = (byte) mode_8bpppixelcell::ch#3 (byte) mode_8bpppixelcell::ch#4 
Alias (byte*) mode_8bpppixelcell::gfxb#1 = (byte*) mode_8bpppixelcell::gfxb#6 (byte*) mode_8bpppixelcell::gfxb#8 
Alias (byte) mode_8bpppixelcell::col#1 = (byte) mode_8bpppixelcell::col#6 (byte) mode_8bpppixelcell::col#8 
Alias (byte) keyboard_key_pressed::return#22 = (byte) keyboard_key_pressed::return#45 
Alias (byte) mode_8bppchunkybmm::gfxbCpuBank#0 = (byte~) mode_8bppchunkybmm::$15 (byte) mode_8bppchunkybmm::gfxbCpuBank#3 
Alias (byte) mode_8bppchunkybmm::c#0 = (byte~) mode_8bppchunkybmm::$21 
Alias (byte) mode_8bppchunkybmm::gfxbCpuBank#4 = (byte) mode_8bppchunkybmm::gfxbCpuBank#6 (byte) mode_8bppchunkybmm::gfxbCpuBank#5 
Alias (word) mode_8bppchunkybmm::x#3 = (word) mode_8bppchunkybmm::x#5 (word) mode_8bppchunkybmm::x#4 
Alias (byte) mode_8bppchunkybmm::y#4 = (byte) mode_8bppchunkybmm::y#7 (byte) mode_8bppchunkybmm::y#5 
Alias (byte) mode_8bppchunkybmm::y#2 = (byte) mode_8bppchunkybmm::y#3 
Alias (byte*) mode_8bppchunkybmm::gfxb#1 = (byte*) mode_8bppchunkybmm::gfxb#6 
Alias (byte) mode_8bppchunkybmm::gfxbCpuBank#8 = (byte) mode_8bppchunkybmm::gfxbCpuBank#9 
Alias (byte) dtvSetCpuBankSegment1::cpuBankIdx#2 = (byte~) mode_8bppchunkybmm::$25 
Alias (byte) keyboard_key_pressed::return#23 = (byte) keyboard_key_pressed::return#46 
Alias (byte*) print_screen#16 = (byte*) print_screen#7 
Alias (byte*) print_line_cursor#15 = (byte*) print_line_cursor#29 
Alias (byte*) print_char_cursor#16 = (byte*) print_char_cursor#30 
Succesful SSA optimization Pass2AliasElimination
Not aliassing across scopes: dtvSetCpuBankSegment1::cpuBankIdx#3 dtvSetCpuBankSegment1::cpuBankIdx#1
Not aliassing across scopes: print_str_lines::str#4 print_str_lines::str#1
Not aliassing across scopes: print_char_cursor#51 print_char_cursor#13
Not aliassing across scopes: print_line_cursor#49 print_line_cursor#12
Not aliassing across scopes: print_line_cursor#1 print_line_cursor#19
Not aliassing across scopes: print_char_cursor#18 print_line_cursor#19
Not aliassing across scopes: print_line_cursor#32 print_line_cursor#30
Not aliassing across scopes: print_char_cursor#34 print_char_cursor#32
Not aliassing across scopes: print_screen#8 print_screen#14
Not aliassing across scopes: print_cls::sc#0 print_screen#8
Not aliassing across scopes: print_set_screen::screen#1 print_set_screen::screen#0
Not aliassing across scopes: print_screen#1 print_set_screen::screen#1
Not aliassing across scopes: keyboard_matrix_read::rowid#1 keyboard_matrix_read::rowid#0
Not aliassing across scopes: keyboard_key_pressed::key#22 keyboard_key_pressed::key#5
Not aliassing across scopes: keyboard_matrix_read::rowid#0 keyboard_key_pressed::rowidx#0
Not aliassing across scopes: keyboard_matrix_read::return#2 keyboard_matrix_read::return#0
Not aliassing across scopes: keyboard_key_pressed::$2 keyboard_matrix_read::return#2
Not aliassing across scopes: print_screen#33 print_screen#0
Not aliassing across scopes: print_line_cursor#51 print_screen#0
Not aliassing across scopes: print_char_cursor#54 print_screen#0
Not aliassing across scopes: print_screen#12 print_screen#15
Not aliassing across scopes: print_line_cursor#23 print_line_cursor#14
Not aliassing across scopes: print_char_cursor#10 print_char_cursor#15
Not aliassing across scopes: print_screen#75 print_screen#13
Not aliassing across scopes: print_line_cursor#94 print_line_cursor#10
Not aliassing across scopes: print_char_cursor#94 print_char_cursor#11
Not aliassing across scopes: menu::c#0 COLS#0
Not aliassing across scopes: print_set_screen::screen#0 menu::SCREEN#0
Not aliassing across scopes: print_screen#14 print_screen#1
Not aliassing across scopes: print_line_cursor#11 print_screen#1
Not aliassing across scopes: print_char_cursor#12 print_screen#1
Not aliassing across scopes: print_line_cursor#12 print_line_cursor#21
Not aliassing across scopes: print_char_cursor#13 print_line_cursor#21
Not aliassing across scopes: print_str_lines::str#1 MENU_TEXT#0
Not aliassing across scopes: print_char_cursor#14 print_char_cursor#19
Not aliassing across scopes: print_line_cursor#13 print_line_cursor#17
Not aliassing identity: print_screen#20 print_screen#20
Not aliassing identity: print_line_cursor#36 print_line_cursor#36
Not aliassing identity: print_char_cursor#38 print_char_cursor#38
Not aliassing across scopes: keyboard_key_pressed::key#0 KEY_1#0
Not aliassing across scopes: keyboard_key_pressed::return#2 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$29 keyboard_key_pressed::return#2
Not aliassing across scopes: keyboard_key_pressed::key#1 KEY_2#0
Not aliassing across scopes: keyboard_key_pressed::return#26 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$33 keyboard_key_pressed::return#26
Not aliassing across scopes: keyboard_key_pressed::key#2 KEY_3#0
Not aliassing across scopes: keyboard_key_pressed::return#27 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$37 keyboard_key_pressed::return#27
Not aliassing across scopes: keyboard_key_pressed::key#3 KEY_6#0
Not aliassing across scopes: keyboard_key_pressed::return#28 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$41 keyboard_key_pressed::return#28
Not aliassing across scopes: keyboard_key_pressed::key#4 KEY_7#0
Not aliassing across scopes: keyboard_key_pressed::return#29 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$45 keyboard_key_pressed::return#29
Not aliassing across scopes: keyboard_key_pressed::key#5 KEY_8#0
Not aliassing across scopes: keyboard_key_pressed::return#30 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$49 keyboard_key_pressed::return#30
Not aliassing across scopes: keyboard_key_pressed::key#6 KEY_A#0
Not aliassing across scopes: keyboard_key_pressed::return#31 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$53 keyboard_key_pressed::return#31
Not aliassing across scopes: keyboard_key_pressed::key#7 KEY_B#0
Not aliassing across scopes: keyboard_key_pressed::return#32 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$57 keyboard_key_pressed::return#32
Not aliassing across scopes: keyboard_key_pressed::key#8 KEY_C#0
Not aliassing across scopes: keyboard_key_pressed::return#10 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$61 keyboard_key_pressed::return#10
Not aliassing across scopes: keyboard_key_pressed::key#9 KEY_D#0
Not aliassing across scopes: keyboard_key_pressed::return#11 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$65 keyboard_key_pressed::return#11
Not aliassing across scopes: keyboard_key_pressed::key#10 KEY_E#0
Not aliassing across scopes: keyboard_key_pressed::return#12 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$69 keyboard_key_pressed::return#12
Not aliassing across scopes: keyboard_key_pressed::key#11 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#13 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_stdchar::$32 keyboard_key_pressed::return#13
Not aliassing across scopes: keyboard_key_pressed::key#12 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#14 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_ecmchar::$33 keyboard_key_pressed::return#14
Not aliassing across scopes: keyboard_key_pressed::key#13 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#15 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_mcchar::$33 keyboard_key_pressed::return#15
Not aliassing across scopes: keyboard_key_pressed::key#14 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#16 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_hicolstdchar::$30 keyboard_key_pressed::return#16
Not aliassing across scopes: keyboard_key_pressed::key#15 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#17 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_hicolecmchar::$31 keyboard_key_pressed::return#17
Not aliassing across scopes: keyboard_key_pressed::key#16 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#18 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_hicolmcchar::$31 keyboard_key_pressed::return#18
Not aliassing across scopes: keyboard_key_pressed::key#17 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#19 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_twoplanebitmap::$27 keyboard_key_pressed::return#19
Not aliassing across scopes: keyboard_key_pressed::key#18 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#20 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_sixsfred::$25 keyboard_key_pressed::return#20
Not aliassing across scopes: keyboard_key_pressed::key#19 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#21 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_sixsfred2::$26 keyboard_key_pressed::return#21
Not aliassing across scopes: keyboard_key_pressed::key#20 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#22 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_8bpppixelcell::$24 keyboard_key_pressed::return#22
Not aliassing across scopes: dtvSetCpuBankSegment1::cpuBankIdx#0 mode_8bppchunkybmm::gfxbCpuBank#0
Not aliassing across scopes: dtvSetCpuBankSegment1::cpuBankIdx#1 mode_8bppchunkybmm::gfxbCpuBank#4
Not aliassing across scopes: keyboard_key_pressed::key#21 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#23 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_8bppchunkybmm::$27 keyboard_key_pressed::return#23
Not aliassing across scopes: print_screen#16 print_screen#13
Not aliassing across scopes: print_line_cursor#15 print_line_cursor#10
Not aliassing across scopes: print_char_cursor#16 print_char_cursor#11
Alias (byte) print_str_lines::ch#0 = (byte) print_str_lines::ch#1 
Alias (byte*) print_str_lines::str#0 = (byte*) print_str_lines::str#5 
Alias (byte*) print_line_cursor#30 = (byte*) print_line_cursor#66 
Alias (byte*) print_screen#15 = (byte*) print_screen#20 
Alias (byte*) print_line_cursor#14 = (byte*) print_line_cursor#36 
Alias (byte*) print_char_cursor#15 = (byte*) print_char_cursor#38 
Alias (byte) mode_twoplanebitmap::ax#2 = (byte) mode_twoplanebitmap::ax#3 
Alias (byte) mode_twoplanebitmap::ay#2 = (byte) mode_twoplanebitmap::ay#3 
Alias (byte*) mode_8bpppixelcell::gfxb#2 = (byte*) mode_8bpppixelcell::gfxb#3 
Alias (byte) mode_8bpppixelcell::bits#2 = (byte) mode_8bpppixelcell::bits#3 
Alias (byte) mode_8bpppixelcell::col#2 = (byte) mode_8bpppixelcell::col#3 
Alias (byte) mode_8bpppixelcell::cp#2 = (byte) mode_8bpppixelcell::cp#3 
Alias (byte) mode_8bpppixelcell::cr#2 = (byte) mode_8bpppixelcell::cr#4 
Alias (byte*) mode_8bpppixelcell::chargen#3 = (byte*) mode_8bpppixelcell::chargen#7 
Alias (byte) mode_8bpppixelcell::ch#2 = (byte) mode_8bpppixelcell::ch#5 
Alias (word) mode_8bppchunkybmm::x#2 = (word) mode_8bppchunkybmm::x#3 
Alias (byte) mode_8bppchunkybmm::y#2 = (byte) mode_8bppchunkybmm::y#4 
Succesful SSA optimization Pass2AliasElimination
Not aliassing across scopes: dtvSetCpuBankSegment1::cpuBankIdx#3 dtvSetCpuBankSegment1::cpuBankIdx#1
Not aliassing across scopes: print_str_lines::str#4 print_str_lines::str#1
Not aliassing across scopes: print_char_cursor#51 print_char_cursor#13
Not aliassing across scopes: print_line_cursor#49 print_line_cursor#12
Not aliassing across scopes: print_line_cursor#1 print_line_cursor#19
Not aliassing across scopes: print_char_cursor#18 print_line_cursor#19
Not aliassing across scopes: print_line_cursor#32 print_line_cursor#30
Not aliassing across scopes: print_char_cursor#34 print_char_cursor#32
Not aliassing across scopes: print_screen#8 print_screen#14
Not aliassing across scopes: print_cls::sc#0 print_screen#8
Not aliassing across scopes: print_set_screen::screen#1 print_set_screen::screen#0
Not aliassing across scopes: print_screen#1 print_set_screen::screen#1
Not aliassing across scopes: keyboard_matrix_read::rowid#1 keyboard_matrix_read::rowid#0
Not aliassing across scopes: keyboard_key_pressed::key#22 keyboard_key_pressed::key#5
Not aliassing across scopes: keyboard_matrix_read::rowid#0 keyboard_key_pressed::rowidx#0
Not aliassing across scopes: keyboard_matrix_read::return#2 keyboard_matrix_read::return#0
Not aliassing across scopes: keyboard_key_pressed::$2 keyboard_matrix_read::return#2
Not aliassing across scopes: print_screen#33 print_screen#0
Not aliassing across scopes: print_line_cursor#51 print_screen#0
Not aliassing across scopes: print_char_cursor#54 print_screen#0
Not aliassing across scopes: print_screen#12 print_screen#15
Not aliassing across scopes: print_line_cursor#23 print_line_cursor#14
Not aliassing across scopes: print_char_cursor#10 print_char_cursor#15
Not aliassing across scopes: print_screen#75 print_screen#13
Not aliassing across scopes: print_line_cursor#94 print_line_cursor#10
Not aliassing across scopes: print_char_cursor#94 print_char_cursor#11
Not aliassing across scopes: menu::c#0 COLS#0
Not aliassing across scopes: print_set_screen::screen#0 menu::SCREEN#0
Not aliassing across scopes: print_screen#14 print_screen#1
Not aliassing across scopes: print_line_cursor#11 print_screen#1
Not aliassing across scopes: print_char_cursor#12 print_screen#1
Not aliassing across scopes: print_line_cursor#12 print_line_cursor#21
Not aliassing across scopes: print_char_cursor#13 print_line_cursor#21
Not aliassing across scopes: print_str_lines::str#1 MENU_TEXT#0
Not aliassing across scopes: print_char_cursor#14 print_char_cursor#19
Not aliassing across scopes: print_line_cursor#13 print_line_cursor#17
Not aliassing identity: print_screen#15 print_screen#15
Not aliassing identity: print_line_cursor#14 print_line_cursor#14
Not aliassing identity: print_char_cursor#15 print_char_cursor#15
Not aliassing across scopes: keyboard_key_pressed::key#0 KEY_1#0
Not aliassing across scopes: keyboard_key_pressed::return#2 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$29 keyboard_key_pressed::return#2
Not aliassing across scopes: keyboard_key_pressed::key#1 KEY_2#0
Not aliassing across scopes: keyboard_key_pressed::return#26 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$33 keyboard_key_pressed::return#26
Not aliassing across scopes: keyboard_key_pressed::key#2 KEY_3#0
Not aliassing across scopes: keyboard_key_pressed::return#27 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$37 keyboard_key_pressed::return#27
Not aliassing across scopes: keyboard_key_pressed::key#3 KEY_6#0
Not aliassing across scopes: keyboard_key_pressed::return#28 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$41 keyboard_key_pressed::return#28
Not aliassing across scopes: keyboard_key_pressed::key#4 KEY_7#0
Not aliassing across scopes: keyboard_key_pressed::return#29 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$45 keyboard_key_pressed::return#29
Not aliassing across scopes: keyboard_key_pressed::key#5 KEY_8#0
Not aliassing across scopes: keyboard_key_pressed::return#30 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$49 keyboard_key_pressed::return#30
Not aliassing across scopes: keyboard_key_pressed::key#6 KEY_A#0
Not aliassing across scopes: keyboard_key_pressed::return#31 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$53 keyboard_key_pressed::return#31
Not aliassing across scopes: keyboard_key_pressed::key#7 KEY_B#0
Not aliassing across scopes: keyboard_key_pressed::return#32 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$57 keyboard_key_pressed::return#32
Not aliassing across scopes: keyboard_key_pressed::key#8 KEY_C#0
Not aliassing across scopes: keyboard_key_pressed::return#10 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$61 keyboard_key_pressed::return#10
Not aliassing across scopes: keyboard_key_pressed::key#9 KEY_D#0
Not aliassing across scopes: keyboard_key_pressed::return#11 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$65 keyboard_key_pressed::return#11
Not aliassing across scopes: keyboard_key_pressed::key#10 KEY_E#0
Not aliassing across scopes: keyboard_key_pressed::return#12 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$69 keyboard_key_pressed::return#12
Not aliassing across scopes: keyboard_key_pressed::key#11 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#13 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_stdchar::$32 keyboard_key_pressed::return#13
Not aliassing across scopes: keyboard_key_pressed::key#12 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#14 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_ecmchar::$33 keyboard_key_pressed::return#14
Not aliassing across scopes: keyboard_key_pressed::key#13 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#15 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_mcchar::$33 keyboard_key_pressed::return#15
Not aliassing across scopes: keyboard_key_pressed::key#14 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#16 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_hicolstdchar::$30 keyboard_key_pressed::return#16
Not aliassing across scopes: keyboard_key_pressed::key#15 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#17 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_hicolecmchar::$31 keyboard_key_pressed::return#17
Not aliassing across scopes: keyboard_key_pressed::key#16 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#18 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_hicolmcchar::$31 keyboard_key_pressed::return#18
Not aliassing across scopes: keyboard_key_pressed::key#17 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#19 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_twoplanebitmap::$27 keyboard_key_pressed::return#19
Not aliassing across scopes: keyboard_key_pressed::key#18 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#20 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_sixsfred::$25 keyboard_key_pressed::return#20
Not aliassing across scopes: keyboard_key_pressed::key#19 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#21 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_sixsfred2::$26 keyboard_key_pressed::return#21
Not aliassing across scopes: keyboard_key_pressed::key#20 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#22 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_8bpppixelcell::$24 keyboard_key_pressed::return#22
Not aliassing across scopes: dtvSetCpuBankSegment1::cpuBankIdx#0 mode_8bppchunkybmm::gfxbCpuBank#0
Not aliassing across scopes: dtvSetCpuBankSegment1::cpuBankIdx#1 mode_8bppchunkybmm::gfxbCpuBank#4
Not aliassing across scopes: keyboard_key_pressed::key#21 KEY_SPACE#0
Not aliassing across scopes: keyboard_key_pressed::return#23 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_8bppchunkybmm::$27 keyboard_key_pressed::return#23
Not aliassing across scopes: print_screen#16 print_screen#13
Not aliassing across scopes: print_line_cursor#15 print_line_cursor#10
Not aliassing across scopes: print_char_cursor#16 print_char_cursor#11
Self Phi Eliminated (byte*) print_line_cursor#30
Self Phi Eliminated (byte*) print_char_cursor#20
Self Phi Eliminated (byte*) print_line_cursor#21
Self Phi Eliminated (byte*) print_screen#50
Self Phi Eliminated (byte*) print_line_cursor#69
Self Phi Eliminated (byte*) print_char_cursor#70
Self Phi Eliminated (byte*) print_screen#19
Self Phi Eliminated (byte*) print_line_cursor#35
Self Phi Eliminated (byte*) print_char_cursor#37
Self Phi Eliminated (byte*) print_screen#15
Self Phi Eliminated (byte*) print_line_cursor#14
Self Phi Eliminated (byte*) print_char_cursor#15
Self Phi Eliminated (byte) mode_stdchar::cy#2
Self Phi Eliminated (byte) mode_ecmchar::cy#2
Self Phi Eliminated (byte) mode_mcchar::cy#2
Self Phi Eliminated (byte) mode_hicolstdchar::cy#2
Self Phi Eliminated (byte) mode_hicolecmchar::cy#2
Self Phi Eliminated (byte) mode_hicolmcchar::cy#2
Self Phi Eliminated (byte) mode_twoplanebitmap::cy#2
Self Phi Eliminated (byte) mode_twoplanebitmap::ay#2
Self Phi Eliminated (byte) mode_twoplanebitmap::by#2
Self Phi Eliminated (byte) mode_sixsfred::cy#2
Self Phi Eliminated (byte) mode_sixsfred::ay#2
Self Phi Eliminated (byte) mode_sixsfred::by#2
Self Phi Eliminated (byte) mode_sixsfred2::cy#2
Self Phi Eliminated (byte) mode_sixsfred2::ay#2
Self Phi Eliminated (byte) mode_sixsfred2::by#2
Self Phi Eliminated (byte) mode_8bpppixelcell::ay#2
Self Phi Eliminated (byte) mode_8bpppixelcell::cr#2
Self Phi Eliminated (byte*) mode_8bpppixelcell::chargen#3
Self Phi Eliminated (byte) mode_8bpppixelcell::ch#2
Self Phi Eliminated (byte) mode_8bppchunkybmm::y#2
Succesful SSA optimization Pass2SelfPhiElimination
Redundant Phi (byte*) print_str_lines::str#4 (byte*) print_str_lines::str#1
Redundant Phi (byte*) print_char_cursor#51 (byte*) print_char_cursor#13
Redundant Phi (byte*) print_line_cursor#49 (byte*) print_line_cursor#12
Redundant Phi (byte*) print_line_cursor#30 (byte*) print_line_cursor#17
Redundant Phi (byte*) print_line_cursor#1 (byte*) print_line_cursor#19
Redundant Phi (byte*) print_char_cursor#18 (byte*) print_line_cursor#19
Redundant Phi (byte*) print_line_cursor#32 (byte*) print_line_cursor#30
Redundant Phi (byte*) print_char_cursor#34 (byte*) print_char_cursor#32
Redundant Phi (byte*) print_char_cursor#20 (byte*) print_char_cursor#34
Redundant Phi (byte*) print_screen#8 (byte*) print_screen#14
Redundant Phi (byte*) print_line_cursor#21 (byte*) print_screen#8
Redundant Phi (byte*) print_set_screen::screen#1 (byte*) print_set_screen::screen#0
Redundant Phi (byte) keyboard_matrix_read::rowid#1 (byte) keyboard_matrix_read::rowid#0
Redundant Phi (byte*) print_screen#33 (byte*) print_screen#0
Redundant Phi (byte*) print_line_cursor#51 (byte*) print_screen#0
Redundant Phi (byte*) print_char_cursor#54 (byte*) print_screen#0
Redundant Phi (byte*) print_screen#12 (byte*) print_screen#15
Redundant Phi (byte*) print_line_cursor#23 (byte*) print_line_cursor#14
Redundant Phi (byte*) print_char_cursor#10 (byte*) print_char_cursor#15
Redundant Phi (byte*) print_screen#75 (byte*) print_screen#13
Redundant Phi (byte*) print_line_cursor#94 (byte*) print_line_cursor#10
Redundant Phi (byte*) print_char_cursor#94 (byte*) print_char_cursor#11
Redundant Phi (byte*) print_screen#50 (byte*) print_screen#75
Redundant Phi (byte*) print_line_cursor#69 (byte*) print_line_cursor#94
Redundant Phi (byte*) print_char_cursor#70 (byte*) print_char_cursor#94
Redundant Phi (byte*) print_screen#19 (byte*) print_screen#50
Redundant Phi (byte*) print_line_cursor#35 (byte*) print_line_cursor#69
Redundant Phi (byte*) print_char_cursor#37 (byte*) print_char_cursor#70
Redundant Phi (byte*) print_screen#14 (byte*) print_screen#1
Redundant Phi (byte*) print_line_cursor#11 (byte*) print_screen#1
Redundant Phi (byte*) print_char_cursor#12 (byte*) print_screen#1
Redundant Phi (byte*) print_line_cursor#12 (byte*) print_line_cursor#21
Redundant Phi (byte*) print_char_cursor#13 (byte*) print_line_cursor#21
Redundant Phi (byte*) print_char_cursor#14 (byte*) print_char_cursor#19
Redundant Phi (byte*) print_line_cursor#13 (byte*) print_line_cursor#17
Redundant Phi (byte*) print_screen#15 (byte*) print_screen#14
Redundant Phi (byte*) print_line_cursor#14 (byte*) print_line_cursor#13
Redundant Phi (byte*) print_char_cursor#15 (byte*) print_char_cursor#14
Redundant Phi (byte) mode_stdchar::cy#2 (byte) mode_stdchar::cy#4
Redundant Phi (byte) mode_ecmchar::cy#2 (byte) mode_ecmchar::cy#4
Redundant Phi (byte) mode_mcchar::cy#2 (byte) mode_mcchar::cy#4
Redundant Phi (byte) mode_hicolstdchar::cy#2 (byte) mode_hicolstdchar::cy#4
Redundant Phi (byte) mode_hicolecmchar::cy#2 (byte) mode_hicolecmchar::cy#4
Redundant Phi (byte) mode_hicolmcchar::cy#2 (byte) mode_hicolmcchar::cy#4
Redundant Phi (byte) mode_twoplanebitmap::cy#2 (byte) mode_twoplanebitmap::cy#4
Redundant Phi (byte) mode_twoplanebitmap::ay#2 (byte) mode_twoplanebitmap::ay#4
Redundant Phi (byte) mode_twoplanebitmap::by#2 (byte) mode_twoplanebitmap::by#4
Redundant Phi (byte) mode_sixsfred::cy#2 (byte) mode_sixsfred::cy#4
Redundant Phi (byte) mode_sixsfred::ay#2 (byte) mode_sixsfred::ay#4
Redundant Phi (byte) mode_sixsfred::by#2 (byte) mode_sixsfred::by#4
Redundant Phi (byte) mode_sixsfred2::cy#2 (byte) mode_sixsfred2::cy#4
Redundant Phi (byte) mode_sixsfred2::ay#2 (byte) mode_sixsfred2::ay#4
Redundant Phi (byte) mode_sixsfred2::by#2 (byte) mode_sixsfred2::by#4
Redundant Phi (byte) mode_8bpppixelcell::ay#2 (byte) mode_8bpppixelcell::ay#4
Redundant Phi (byte) mode_8bpppixelcell::cr#2 (byte) mode_8bpppixelcell::cr#6
Redundant Phi (byte*) mode_8bpppixelcell::chargen#3 (byte*) mode_8bpppixelcell::chargen#1
Redundant Phi (byte) mode_8bpppixelcell::ch#2 (byte) mode_8bpppixelcell::ch#7
Redundant Phi (byte) mode_8bppchunkybmm::y#2 (byte) mode_8bppchunkybmm::y#6
Redundant Phi (byte*) print_screen#16 (byte*) print_screen#13
Redundant Phi (byte*) print_line_cursor#15 (byte*) print_line_cursor#10
Redundant Phi (byte*) print_char_cursor#16 (byte*) print_char_cursor#11
Succesful SSA optimization Pass2RedundantPhiElimination
Simple Condition (boolean~) print_str_lines::$0 if(*((byte*) print_str_lines::str#2)!=(byte) '@') goto print_str_lines::@2
Simple Condition (boolean~) print_str_lines::$2 if((byte) print_str_lines::ch#0==(byte) '@') goto print_str_lines::@5
Simple Condition (boolean~) print_str_lines::$3 if((byte) print_str_lines::ch#0!=(byte) '@') goto print_str_lines::@4
Simple Condition (boolean~) print_ln::$1 if((byte*) print_line_cursor#19<(byte*) print_char_cursor#32) goto print_ln::@1
Simple Condition (boolean~) print_cls::$1 if((byte*) print_cls::sc#1!=(byte*~) print_cls::$0) goto print_cls::@1
Simple Condition (boolean~) menu::$23 if((byte) menu::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto menu::@1
Simple Condition (boolean~) menu::$25 if((byte*) menu::c#1!=(byte*~) menu::$24) goto menu::@2
Simple Condition (boolean~) menu::$31 if((byte~) menu::$29==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@6
Simple Condition (boolean~) menu::$35 if((byte~) menu::$33==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@7
Simple Condition (boolean~) menu::$39 if((byte~) menu::$37==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@8
Simple Condition (boolean~) menu::$43 if((byte~) menu::$41==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@9
Simple Condition (boolean~) menu::$47 if((byte~) menu::$45==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@10
Simple Condition (boolean~) menu::$51 if((byte~) menu::$49==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@11
Simple Condition (boolean~) menu::$55 if((byte~) menu::$53==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@12
Simple Condition (boolean~) menu::$59 if((byte~) menu::$57==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@13
Simple Condition (boolean~) menu::$63 if((byte~) menu::$61==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@14
Simple Condition (boolean~) menu::$67 if((byte~) menu::$65==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@15
Simple Condition (boolean~) menu::$71 if((byte~) menu::$69==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@16
Simple Condition (boolean~) mode_stdchar::$23 if((byte) mode_stdchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_stdchar::@1
Simple Condition (boolean~) mode_stdchar::$30 if((byte) mode_stdchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_stdchar::@3
Simple Condition (boolean~) mode_stdchar::$31 if((byte) mode_stdchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_stdchar::@2
Simple Condition (boolean~) mode_stdchar::$34 if((byte~) mode_stdchar::$32==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_stdchar::@4
Simple Condition (boolean~) mode_ecmchar::$24 if((byte) mode_ecmchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_ecmchar::@1
Simple Condition (boolean~) mode_ecmchar::$31 if((byte) mode_ecmchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_ecmchar::@3
Simple Condition (boolean~) mode_ecmchar::$32 if((byte) mode_ecmchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_ecmchar::@2
Simple Condition (boolean~) mode_ecmchar::$35 if((byte~) mode_ecmchar::$33==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_ecmchar::@4
Simple Condition (boolean~) mode_mcchar::$24 if((byte) mode_mcchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_mcchar::@1
Simple Condition (boolean~) mode_mcchar::$31 if((byte) mode_mcchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_mcchar::@3
Simple Condition (boolean~) mode_mcchar::$32 if((byte) mode_mcchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_mcchar::@2
Simple Condition (boolean~) mode_mcchar::$35 if((byte~) mode_mcchar::$33==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_mcchar::@4
Simple Condition (boolean~) mode_hicolstdchar::$23 if((byte) mode_hicolstdchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_hicolstdchar::@1
Simple Condition (boolean~) mode_hicolstdchar::$28 if((byte) mode_hicolstdchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_hicolstdchar::@3
Simple Condition (boolean~) mode_hicolstdchar::$29 if((byte) mode_hicolstdchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_hicolstdchar::@2
Simple Condition (boolean~) mode_hicolstdchar::$32 if((byte~) mode_hicolstdchar::$30==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_hicolstdchar::@4
Simple Condition (boolean~) mode_hicolecmchar::$24 if((byte) mode_hicolecmchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_hicolecmchar::@1
Simple Condition (boolean~) mode_hicolecmchar::$29 if((byte) mode_hicolecmchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_hicolecmchar::@3
Simple Condition (boolean~) mode_hicolecmchar::$30 if((byte) mode_hicolecmchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_hicolecmchar::@2
Simple Condition (boolean~) mode_hicolecmchar::$33 if((byte~) mode_hicolecmchar::$31==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_hicolecmchar::@4
Simple Condition (boolean~) mode_hicolmcchar::$24 if((byte) mode_hicolmcchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_hicolmcchar::@1
Simple Condition (boolean~) mode_hicolmcchar::$29 if((byte) mode_hicolmcchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_hicolmcchar::@3
Simple Condition (boolean~) mode_hicolmcchar::$30 if((byte) mode_hicolmcchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_hicolmcchar::@2
Simple Condition (boolean~) mode_hicolmcchar::$33 if((byte~) mode_hicolmcchar::$31==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_hicolmcchar::@4
Simple Condition (boolean~) mode_twoplanebitmap::$13 if((byte) mode_twoplanebitmap::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_twoplanebitmap::@1
Simple Condition (boolean~) mode_twoplanebitmap::$18 if((byte) mode_twoplanebitmap::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_twoplanebitmap::@3
Simple Condition (boolean~) mode_twoplanebitmap::$19 if((byte) mode_twoplanebitmap::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_twoplanebitmap::@2
Simple Condition (boolean~) mode_twoplanebitmap::$22 if((byte~) mode_twoplanebitmap::$20!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_twoplanebitmap::@6
Simple Condition (boolean~) mode_twoplanebitmap::$23 if((byte) mode_twoplanebitmap::ax#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_twoplanebitmap::@5
Simple Condition (boolean~) mode_twoplanebitmap::$24 if((byte) mode_twoplanebitmap::ay#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_twoplanebitmap::@4
Simple Condition (boolean~) mode_twoplanebitmap::$25 if((byte) mode_twoplanebitmap::bx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_twoplanebitmap::@9
Simple Condition (boolean~) mode_twoplanebitmap::$26 if((byte) mode_twoplanebitmap::by#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_twoplanebitmap::@8
Simple Condition (boolean~) mode_twoplanebitmap::$29 if((byte~) mode_twoplanebitmap::$27==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_twoplanebitmap::@10
Simple Condition (boolean~) mode_sixsfred::$14 if((byte) mode_sixsfred::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_sixsfred::@1
Simple Condition (boolean~) mode_sixsfred::$17 if((byte) mode_sixsfred::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred::@3
Simple Condition (boolean~) mode_sixsfred::$18 if((byte) mode_sixsfred::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_sixsfred::@2
Simple Condition (boolean~) mode_sixsfred::$21 if((byte) mode_sixsfred::ax#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred::@5
Simple Condition (boolean~) mode_sixsfred::$22 if((byte) mode_sixsfred::ay#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_sixsfred::@4
Simple Condition (boolean~) mode_sixsfred::$23 if((byte) mode_sixsfred::bx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred::@7
Simple Condition (boolean~) mode_sixsfred::$24 if((byte) mode_sixsfred::by#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_sixsfred::@6
Simple Condition (boolean~) mode_sixsfred::$27 if((byte~) mode_sixsfred::$25==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_sixsfred::@8
Simple Condition (boolean~) mode_sixsfred2::$13 if((byte) mode_sixsfred2::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_sixsfred2::@1
Simple Condition (boolean~) mode_sixsfred2::$18 if((byte) mode_sixsfred2::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred2::@3
Simple Condition (boolean~) mode_sixsfred2::$19 if((byte) mode_sixsfred2::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_sixsfred2::@2
Simple Condition (boolean~) mode_sixsfred2::$22 if((byte) mode_sixsfred2::ax#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred2::@5
Simple Condition (boolean~) mode_sixsfred2::$23 if((byte) mode_sixsfred2::ay#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_sixsfred2::@4
Simple Condition (boolean~) mode_sixsfred2::$24 if((byte) mode_sixsfred2::bx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred2::@7
Simple Condition (boolean~) mode_sixsfred2::$25 if((byte) mode_sixsfred2::by#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_sixsfred2::@6
Simple Condition (boolean~) mode_sixsfred2::$28 if((byte~) mode_sixsfred2::$26==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_sixsfred2::@8
Simple Condition (boolean~) mode_8bpppixelcell::$10 if((byte) mode_8bpppixelcell::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_8bpppixelcell::@1
Simple Condition (boolean~) mode_8bpppixelcell::$15 if((byte) mode_8bpppixelcell::ax#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_8bpppixelcell::@3
Simple Condition (boolean~) mode_8bpppixelcell::$16 if((byte) mode_8bpppixelcell::ay#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_8bpppixelcell::@2
Simple Condition (boolean~) mode_8bpppixelcell::$19 if((byte~) mode_8bpppixelcell::$17==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_8bpppixelcell::@7
Simple Condition (boolean~) mode_8bpppixelcell::$21 if((byte) mode_8bpppixelcell::cp#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto mode_8bpppixelcell::@6
Simple Condition (boolean~) mode_8bpppixelcell::$22 if((byte) mode_8bpppixelcell::cr#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto mode_8bpppixelcell::@5
Simple Condition (boolean~) mode_8bpppixelcell::$23 if((byte) mode_8bpppixelcell::ch#1!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_8bpppixelcell::@4
Simple Condition (boolean~) mode_8bpppixelcell::$26 if((byte~) mode_8bpppixelcell::$24==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_8bpppixelcell::@8
Simple Condition (boolean~) mode_8bppchunkybmm::$13 if((byte) mode_8bppchunkybmm::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_8bppchunkybmm::@1
Simple Condition (boolean~) mode_8bppchunkybmm::$18 if((byte*) mode_8bppchunkybmm::gfxb#3!=(word/dword/signed dword) 32768) goto mode_8bppchunkybmm::@4
Simple Condition (boolean~) mode_8bppchunkybmm::$22 if((word) mode_8bppchunkybmm::x#1!=(word/signed word/dword/signed dword) 320) goto mode_8bppchunkybmm::@3
Simple Condition (boolean~) mode_8bppchunkybmm::$23 if((byte) mode_8bppchunkybmm::y#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_8bppchunkybmm::@2
Simple Condition (boolean~) mode_8bppchunkybmm::$29 if((byte~) mode_8bppchunkybmm::$27==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_8bppchunkybmm::@5
Succesful SSA optimization Pass2ConditionalJumpSimplification
Constant (const byte*) PROCPORT#0 = ((byte*))1
Constant (const byte*) BORDERCOL#0 = ((byte*))53280
Constant (const byte*) BGCOL#0 = ((byte*))53281
Constant (const byte*) BGCOL1#0 = ((byte*))53281
Constant (const byte*) BGCOL2#0 = ((byte*))53282
Constant (const byte*) BGCOL3#0 = ((byte*))53283
Constant (const byte*) BGCOL4#0 = ((byte*))53284
Constant (const byte*) VIC_CONTROL#0 = ((byte*))53265
Constant (const byte) VIC_ECM#0 = 64
Constant (const byte) VIC_BMM#0 = 32
Constant (const byte) VIC_DEN#0 = 16
Constant (const byte) VIC_RSEL#0 = 8
Constant (const byte*) VIC_CONTROL2#0 = ((byte*))53270
Constant (const byte) VIC_MCM#0 = 16
Constant (const byte) VIC_CSEL#0 = 8
Constant (const byte*) VIC_MEMORY#0 = ((byte*))53272
Constant (const byte*) COLS#0 = ((byte*))55296
Constant (const byte*) CIA1_PORT_A#0 = ((byte*))56320
Constant (const byte*) CIA1_PORT_B#0 = ((byte*))56321
Constant (const byte*) CIA2_PORT_A#0 = ((byte*))56576
Constant (const byte*) CIA2_PORT_A_DDR#0 = ((byte*))56578
Constant (const byte) BLACK#0 = 0
Constant (const byte) GREEN#0 = 5
Constant (const byte) BLUE#0 = 6
Constant (const byte) LIGHT_GREEN#0 = 13
Constant (const byte*) DTV_FEATURE#0 = ((byte*))53311
Constant (const byte) DTV_FEATURE_ENABLE#0 = 1
Constant (const byte*) DTV_CONTROL#0 = ((byte*))53308
Constant (const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0 = 1
Constant (const byte) DTV_CONTROL_HIGHCOLOR_ON#0 = 4
Constant (const byte) DTV_CONTROL_COLORRAM_OFF#0 = 16
Constant (const byte) DTV_CONTROL_CHUNKY_ON#0 = 64
Constant (const byte*) DTV_PALETTE#0 = ((byte*))53760
Constant (const byte[16]) DTV_PALETTE_DEFAULT#0 = { 0, 15, 54, 190, 88, 219, 134, 255, 41, 38, 59, 5, 7, 223, 154, 10 }
Constant (const byte*) DTV_PLANEA_START_LO#0 = ((byte*))53306
Constant (const byte*) DTV_PLANEA_START_MI#0 = ((byte*))53307
Constant (const byte*) DTV_PLANEA_START_HI#0 = ((byte*))53317
Constant (const byte*) DTV_PLANEA_STEP#0 = ((byte*))53318
Constant (const byte*) DTV_PLANEA_MODULO_LO#0 = ((byte*))53304
Constant (const byte*) DTV_PLANEA_MODULO_HI#0 = ((byte*))53305
Constant (const byte*) DTV_PLANEB_START_LO#0 = ((byte*))53321
Constant (const byte*) DTV_PLANEB_START_MI#0 = ((byte*))53322
Constant (const byte*) DTV_PLANEB_START_HI#0 = ((byte*))53323
Constant (const byte*) DTV_PLANEB_STEP#0 = ((byte*))53324
Constant (const byte*) DTV_PLANEB_MODULO_LO#0 = ((byte*))53319
Constant (const byte*) DTV_PLANEB_MODULO_HI#0 = ((byte*))53320
Constant (const byte*) DTV_COLOR_BANK_LO#0 = ((byte*))53302
Constant (const byte*) DTV_COLOR_BANK_HI#0 = ((byte*))53303
Constant (const dword) DTV_COLOR_BANK_DEFAULT#0 = 120832
Constant (const byte*) DTV_GRAPHICS_VIC_BANK#0 = ((byte*))53309
Constant (const byte*) dtvSetCpuBankSegment1::cpuBank#0 = ((byte*))255
Constant (const byte*) print_screen#0 = ((byte*))1024
Constant (const byte) KEY_3#0 = 8
Constant (const byte) KEY_A#0 = 10
Constant (const byte) KEY_E#0 = 14
Constant (const byte) KEY_D#0 = 18
Constant (const byte) KEY_6#0 = 19
Constant (const byte) KEY_C#0 = 20
Constant (const byte) KEY_7#0 = 24
Constant (const byte) KEY_8#0 = 27
Constant (const byte) KEY_B#0 = 28
Constant (const byte) KEY_1#0 = 56
Constant (const byte) KEY_2#0 = 59
Constant (const byte) KEY_SPACE#0 = 60
Constant (const byte[8]) keyboard_matrix_row_bitmask#0 = { 254, 253, 251, 247, 239, 223, 191, 127 }
Constant (const byte[]) keyboard_matrix_col_bitmask#0 = { 1, 2, 4, 8, 16, 32, 64, 128 }
Constant (const string) $0 = "C64DTV Graphics Modes            CCLHBME@"+"                                 OHIIMCC@"
Constant (const byte*) menu::SCREEN#0 = ((byte*))32768
Constant (const byte*) menu::CHARSET#0 = ((byte*))38912
Constant (const byte) menu::i#0 = 0
Constant (const byte*) mode_stdchar::SCREEN#0 = ((byte*))32768
Constant (const byte*) mode_stdchar::CHARSET#0 = ((byte*))36864
Constant (const byte*) mode_stdchar::COLORS#0 = ((byte*))33792
Constant (const byte) mode_stdchar::i#0 = 0
Constant (const byte) mode_stdchar::cy#0 = 0
Constant (const byte) mode_stdchar::cx#0 = 0
Constant (const byte*) mode_ecmchar::ECMCHAR_SCREEN#0 = ((byte*))32768
Constant (const byte*) mode_ecmchar::ECMCHAR_CHARSET#0 = ((byte*))36864
Constant (const byte*) mode_ecmchar::ECMCHAR_COLORS#0 = ((byte*))33792
Constant (const byte) mode_ecmchar::i#0 = 0
Constant (const byte) mode_ecmchar::cy#0 = 0
Constant (const byte) mode_ecmchar::cx#0 = 0
Constant (const byte*) mode_mcchar::SCREEN#0 = ((byte*))32768
Constant (const byte*) mode_mcchar::CHARSET#0 = ((byte*))36864
Constant (const byte*) mode_mcchar::COLORS#0 = ((byte*))33792
Constant (const byte) mode_mcchar::i#0 = 0
Constant (const byte) mode_mcchar::cy#0 = 0
Constant (const byte) mode_mcchar::cx#0 = 0
Constant (const byte*) mode_hicolstdchar::SCREEN#0 = ((byte*))32768
Constant (const byte*) mode_hicolstdchar::CHARSET#0 = ((byte*))36864
Constant (const byte*) mode_hicolstdchar::COLORS#0 = ((byte*))33792
Constant (const byte) mode_hicolstdchar::i#0 = 0
Constant (const byte) mode_hicolstdchar::cy#0 = 0
Constant (const byte) mode_hicolstdchar::cx#0 = 0
Constant (const byte*) mode_hicolecmchar::SCREEN#0 = ((byte*))32768
Constant (const byte*) mode_hicolecmchar::CHARSET#0 = ((byte*))36864
Constant (const byte*) mode_hicolecmchar::COLORS#0 = ((byte*))33792
Constant (const byte) mode_hicolecmchar::i#0 = 0
Constant (const byte) mode_hicolecmchar::cy#0 = 0
Constant (const byte) mode_hicolecmchar::cx#0 = 0
Constant (const byte*) mode_hicolmcchar::SCREEN#0 = ((byte*))32768
Constant (const byte*) mode_hicolmcchar::CHARSET#0 = ((byte*))36864
Constant (const byte*) mode_hicolmcchar::COLORS#0 = ((byte*))33792
Constant (const byte) mode_hicolmcchar::i#0 = 0
Constant (const byte) mode_hicolmcchar::cy#0 = 0
Constant (const byte) mode_hicolmcchar::cx#0 = 0
Constant (const byte*) mode_twoplanebitmap::PLANEA#0 = ((byte*))16384
Constant (const byte*) mode_twoplanebitmap::PLANEB#0 = ((byte*))24576
Constant (const byte*) mode_twoplanebitmap::COLORS#0 = ((byte*))32768
Constant (const byte) mode_twoplanebitmap::i#0 = 0
Constant (const byte) mode_twoplanebitmap::cy#0 = 0
Constant (const byte) mode_twoplanebitmap::cx#0 = 0
Constant (const byte) mode_twoplanebitmap::ay#0 = 0
Constant (const byte) mode_twoplanebitmap::ax#0 = 0
Constant (const byte) mode_twoplanebitmap::by#0 = 0
Constant (const byte) mode_twoplanebitmap::bx#0 = 0
Constant (const byte*) mode_sixsfred::PLANEA#0 = ((byte*))16384
Constant (const byte*) mode_sixsfred::PLANEB#0 = ((byte*))24576
Constant (const byte*) mode_sixsfred::COLORS#0 = ((byte*))32768
Constant (const byte) mode_sixsfred::i#0 = 0
Constant (const byte) mode_sixsfred::cy#0 = 0
Constant (const byte) mode_sixsfred::cx#0 = 0
Constant (const byte[]) mode_sixsfred::row_bitmask#0 = { 0, 85, 170, 255 }
Constant (const byte) mode_sixsfred::ay#0 = 0
Constant (const byte) mode_sixsfred::ax#0 = 0
Constant (const byte) mode_sixsfred::by#0 = 0
Constant (const byte) mode_sixsfred::bx#0 = 0
Constant (const byte*) mode_sixsfred2::PLANEA#0 = ((byte*))16384
Constant (const byte*) mode_sixsfred2::PLANEB#0 = ((byte*))24576
Constant (const byte*) mode_sixsfred2::COLORS#0 = ((byte*))32768
Constant (const byte) mode_sixsfred2::i#0 = 0
Constant (const byte) mode_sixsfred2::cy#0 = 0
Constant (const byte) mode_sixsfred2::cx#0 = 0
Constant (const byte[]) mode_sixsfred2::row_bitmask#0 = { 0, 85, 170, 255 }
Constant (const byte) mode_sixsfred2::ay#0 = 0
Constant (const byte) mode_sixsfred2::ax#0 = 0
Constant (const byte) mode_sixsfred2::by#0 = 0
Constant (const byte) mode_sixsfred2::bx#0 = 0
Constant (const byte*) mode_8bpppixelcell::PLANEA#0 = ((byte*))15360
Constant (const byte*) mode_8bpppixelcell::PLANEB#0 = ((byte*))16384
Constant (const byte) mode_8bpppixelcell::i#0 = 0
Constant (const byte) mode_8bpppixelcell::ay#0 = 0
Constant (const byte) mode_8bpppixelcell::ax#0 = 0
Constant (const byte*) mode_8bpppixelcell::chargen#0 = ((byte*))53248
Constant (const byte) mode_8bpppixelcell::col#0 = 0
Constant (const byte) mode_8bpppixelcell::ch#0 = 0
Constant (const byte) mode_8bpppixelcell::cr#0 = 0
Constant (const byte) mode_8bpppixelcell::cp#0 = 0
Constant (const byte) mode_8bpppixelcell::c#0 = 0
Constant (const dword) mode_8bppchunkybmm::PLANEB#0 = 131072
Constant (const byte) mode_8bppchunkybmm::i#0 = 0
Constant (const byte*) mode_8bppchunkybmm::gfxb#0 = ((byte*))16384
Constant (const byte) mode_8bppchunkybmm::y#0 = 0
Constant (const word) mode_8bppchunkybmm::x#0 = 0
Constant (const byte*) mode_8bppchunkybmm::gfxb#2 = ((byte*))16384
Constant (const byte/signed byte/word/signed word/dword/signed dword) mode_8bppchunkybmm::$24 = 16384/16384
Succesful SSA optimization Pass2ConstantIdentification
Constant (const string) $1 = "C64DTV Graphics Modes            CCLHBME@"+"                                 OHIIMCC@"+"                                 LUNCMMM@"
Constant (const dword) menu::$0 = ((dword))menu::CHARSET#0
Constant (const dword) menu::$3 = DTV_COLOR_BANK_DEFAULT#0/1024
Constant (const dword) menu::$6 = DTV_COLOR_BANK_DEFAULT#0/1024
Constant (const word) menu::$9 = ((word))menu::CHARSET#0
Constant (const byte) menu::$13 = VIC_DEN#0|VIC_RSEL#0
Constant (const word) menu::$15 = ((word))menu::SCREEN#0
Constant (const word) menu::$18 = ((word))menu::CHARSET#0
Constant (const byte*) menu::c#0 = COLS#0
Constant (const byte*) menu::$24 = COLS#0+1000
Constant (const byte*) print_set_screen::screen#0 = menu::SCREEN#0
Constant (const byte) keyboard_key_pressed::key#0 = KEY_1#0
Constant (const byte) keyboard_key_pressed::key#1 = KEY_2#0
Constant (const byte) keyboard_key_pressed::key#2 = KEY_3#0
Constant (const byte) keyboard_key_pressed::key#3 = KEY_6#0
Constant (const byte) keyboard_key_pressed::key#4 = KEY_7#0
Constant (const byte) keyboard_key_pressed::key#5 = KEY_8#0
Constant (const byte) keyboard_key_pressed::key#6 = KEY_A#0
Constant (const byte) keyboard_key_pressed::key#7 = KEY_B#0
Constant (const byte) keyboard_key_pressed::key#8 = KEY_C#0
Constant (const byte) keyboard_key_pressed::key#9 = KEY_D#0
Constant (const byte) keyboard_key_pressed::key#10 = KEY_E#0
Constant (const dword) mode_stdchar::$0 = ((dword))mode_stdchar::CHARSET#0
Constant (const byte*) mode_stdchar::$3 = mode_stdchar::COLORS#0/1024
Constant (const byte*) mode_stdchar::$6 = mode_stdchar::COLORS#0/1024
Constant (const word) mode_stdchar::$9 = ((word))mode_stdchar::CHARSET#0
Constant (const byte) mode_stdchar::$13 = VIC_DEN#0|VIC_RSEL#0
Constant (const word) mode_stdchar::$15 = ((word))mode_stdchar::SCREEN#0
Constant (const word) mode_stdchar::$18 = ((word))mode_stdchar::CHARSET#0
Constant (const byte) keyboard_key_pressed::key#11 = KEY_SPACE#0
Constant (const dword) mode_ecmchar::$0 = ((dword))mode_ecmchar::ECMCHAR_CHARSET#0
Constant (const byte*) mode_ecmchar::$3 = mode_ecmchar::ECMCHAR_COLORS#0/1024
Constant (const byte*) mode_ecmchar::$6 = mode_ecmchar::ECMCHAR_COLORS#0/1024
Constant (const word) mode_ecmchar::$9 = ((word))mode_ecmchar::ECMCHAR_CHARSET#0
Constant (const byte) mode_ecmchar::$13 = VIC_DEN#0|VIC_RSEL#0
Constant (const word) mode_ecmchar::$16 = ((word))mode_ecmchar::ECMCHAR_SCREEN#0
Constant (const word) mode_ecmchar::$19 = ((word))mode_ecmchar::ECMCHAR_CHARSET#0
Constant (const byte) keyboard_key_pressed::key#12 = KEY_SPACE#0
Constant (const dword) mode_mcchar::$0 = ((dword))mode_mcchar::CHARSET#0
Constant (const byte*) mode_mcchar::$3 = mode_mcchar::COLORS#0/1024
Constant (const byte*) mode_mcchar::$6 = mode_mcchar::COLORS#0/1024
Constant (const word) mode_mcchar::$9 = ((word))mode_mcchar::CHARSET#0
Constant (const byte) mode_mcchar::$13 = VIC_DEN#0|VIC_RSEL#0
Constant (const byte) mode_mcchar::$15 = VIC_CSEL#0|VIC_MCM#0
Constant (const word) mode_mcchar::$16 = ((word))mode_mcchar::SCREEN#0
Constant (const word) mode_mcchar::$19 = ((word))mode_mcchar::CHARSET#0
Constant (const byte) keyboard_key_pressed::key#13 = KEY_SPACE#0
Constant (const dword) mode_hicolstdchar::$0 = ((dword))mode_hicolstdchar::CHARSET#0
Constant (const byte*) mode_hicolstdchar::$3 = mode_hicolstdchar::COLORS#0/1024
Constant (const byte*) mode_hicolstdchar::$6 = mode_hicolstdchar::COLORS#0/1024
Constant (const word) mode_hicolstdchar::$9 = ((word))mode_hicolstdchar::CHARSET#0
Constant (const byte) mode_hicolstdchar::$13 = VIC_DEN#0|VIC_RSEL#0
Constant (const word) mode_hicolstdchar::$15 = ((word))mode_hicolstdchar::SCREEN#0
Constant (const word) mode_hicolstdchar::$18 = ((word))mode_hicolstdchar::CHARSET#0
Constant (const byte) keyboard_key_pressed::key#14 = KEY_SPACE#0
Constant (const dword) mode_hicolecmchar::$0 = ((dword))mode_hicolecmchar::CHARSET#0
Constant (const byte*) mode_hicolecmchar::$3 = mode_hicolecmchar::COLORS#0/1024
Constant (const byte*) mode_hicolecmchar::$6 = mode_hicolecmchar::COLORS#0/1024
Constant (const word) mode_hicolecmchar::$9 = ((word))mode_hicolecmchar::CHARSET#0
Constant (const byte) mode_hicolecmchar::$13 = VIC_DEN#0|VIC_RSEL#0
Constant (const word) mode_hicolecmchar::$16 = ((word))mode_hicolecmchar::SCREEN#0
Constant (const word) mode_hicolecmchar::$19 = ((word))mode_hicolecmchar::CHARSET#0
Constant (const byte) keyboard_key_pressed::key#15 = KEY_SPACE#0
Constant (const dword) mode_hicolmcchar::$0 = ((dword))mode_hicolmcchar::CHARSET#0
Constant (const byte*) mode_hicolmcchar::$3 = mode_hicolmcchar::COLORS#0/1024
Constant (const byte*) mode_hicolmcchar::$6 = mode_hicolmcchar::COLORS#0/1024
Constant (const word) mode_hicolmcchar::$9 = ((word))mode_hicolmcchar::CHARSET#0
Constant (const byte) mode_hicolmcchar::$13 = VIC_DEN#0|VIC_RSEL#0
Constant (const byte) mode_hicolmcchar::$15 = VIC_CSEL#0|VIC_MCM#0
Constant (const word) mode_hicolmcchar::$16 = ((word))mode_hicolmcchar::SCREEN#0
Constant (const word) mode_hicolmcchar::$19 = ((word))mode_hicolmcchar::CHARSET#0
Constant (const byte) keyboard_key_pressed::key#16 = KEY_SPACE#0
Constant (const byte) mode_twoplanebitmap::$0 = DTV_CONTROL_HIGHCOLOR_ON#0|DTV_CONTROL_LINEAR_ADDRESSING_ON#0
Constant (const byte) mode_twoplanebitmap::$1 = VIC_ECM#0|VIC_BMM#0
Constant (const byte) mode_twoplanebitmap::$5 = <mode_twoplanebitmap::PLANEA#0
Constant (const byte) mode_twoplanebitmap::$6 = >mode_twoplanebitmap::PLANEA#0
Constant (const byte) mode_twoplanebitmap::$7 = <mode_twoplanebitmap::PLANEB#0
Constant (const byte) mode_twoplanebitmap::$8 = >mode_twoplanebitmap::PLANEB#0
Constant (const byte*) mode_twoplanebitmap::$9 = mode_twoplanebitmap::COLORS#0/1024
Constant (const byte*) mode_twoplanebitmap::$11 = mode_twoplanebitmap::COLORS#0/1024
Constant (const byte) keyboard_key_pressed::key#17 = KEY_SPACE#0
Constant (const byte) mode_sixsfred::$0 = DTV_CONTROL_HIGHCOLOR_ON#0|DTV_CONTROL_LINEAR_ADDRESSING_ON#0
Constant (const byte) mode_sixsfred::$1 = VIC_ECM#0|VIC_BMM#0
Constant (const byte) mode_sixsfred::$5 = VIC_MCM#0|VIC_CSEL#0
Constant (const byte) mode_sixsfred::$6 = <mode_sixsfred::PLANEA#0
Constant (const byte) mode_sixsfred::$7 = >mode_sixsfred::PLANEA#0
Constant (const byte) mode_sixsfred::$8 = <mode_sixsfred::PLANEB#0
Constant (const byte) mode_sixsfred::$9 = >mode_sixsfred::PLANEB#0
Constant (const byte*) mode_sixsfred::$10 = mode_sixsfred::COLORS#0/1024
Constant (const byte*) mode_sixsfred::$12 = mode_sixsfred::COLORS#0/1024
Constant (const byte) keyboard_key_pressed::key#18 = KEY_SPACE#0
Constant (const byte) mode_sixsfred2::$0 = VIC_ECM#0|VIC_BMM#0
Constant (const byte) mode_sixsfred2::$4 = VIC_MCM#0|VIC_CSEL#0
Constant (const byte) mode_sixsfred2::$5 = <mode_sixsfred2::PLANEA#0
Constant (const byte) mode_sixsfred2::$6 = >mode_sixsfred2::PLANEA#0
Constant (const byte) mode_sixsfred2::$7 = <mode_sixsfred2::PLANEB#0
Constant (const byte) mode_sixsfred2::$8 = >mode_sixsfred2::PLANEB#0
Constant (const byte*) mode_sixsfred2::$9 = mode_sixsfred2::COLORS#0/1024
Constant (const byte*) mode_sixsfred2::$11 = mode_sixsfred2::COLORS#0/1024
Constant (const byte) keyboard_key_pressed::key#19 = KEY_SPACE#0
Constant (const byte) mode_8bpppixelcell::$0 = DTV_CONTROL_HIGHCOLOR_ON#0|DTV_CONTROL_LINEAR_ADDRESSING_ON#0
Constant (const byte) mode_8bpppixelcell::$2 = VIC_ECM#0|VIC_DEN#0
Constant (const byte) mode_8bpppixelcell::$5 = VIC_MCM#0|VIC_CSEL#0
Constant (const byte) mode_8bpppixelcell::$6 = <mode_8bpppixelcell::PLANEA#0
Constant (const byte) mode_8bpppixelcell::$7 = >mode_8bpppixelcell::PLANEA#0
Constant (const byte) mode_8bpppixelcell::$8 = <mode_8bpppixelcell::PLANEB#0
Constant (const byte) mode_8bpppixelcell::$9 = >mode_8bpppixelcell::PLANEB#0
Constant (const byte) keyboard_key_pressed::key#20 = KEY_SPACE#0
Constant (const byte) mode_8bppchunkybmm::$0 = DTV_CONTROL_HIGHCOLOR_ON#0|DTV_CONTROL_LINEAR_ADDRESSING_ON#0
Constant (const byte) mode_8bppchunkybmm::$3 = VIC_ECM#0|VIC_DEN#0
Constant (const byte) mode_8bppchunkybmm::$6 = VIC_MCM#0|VIC_CSEL#0
Constant (const word) mode_8bppchunkybmm::$7 = <mode_8bppchunkybmm::PLANEB#0
Constant (const word) mode_8bppchunkybmm::$9 = <mode_8bppchunkybmm::PLANEB#0
Constant (const word) mode_8bppchunkybmm::$11 = >mode_8bppchunkybmm::PLANEB#0
Constant (const dword) mode_8bppchunkybmm::$14 = mode_8bppchunkybmm::PLANEB#0/16384
Constant (const byte) dtvSetCpuBankSegment1::cpuBankIdx#2 = ((byte))mode_8bppchunkybmm::$24
Constant (const byte) keyboard_key_pressed::key#21 = KEY_SPACE#0
Succesful SSA optimization Pass2ConstantIdentification
Constant (const byte*) print_screen#1 = print_set_screen::screen#0
Constant (const string) $2 = "C64DTV Graphics Modes            CCLHBME@"+"                                 OHIIMCC@"+"                                 LUNCMMM@"+"----------------------------------------@"
Constant (const dword) menu::$1 = menu::$0/65536
Constant (const word) menu::$4 = ((word))menu::$3
Constant (const word) menu::$7 = ((word))menu::$6
Constant (const word/signed dword/dword) menu::$10 = menu::$9/16384
Constant (const byte/word/dword) menu::$14 = menu::$13|3
Constant (const word) menu::$16 = menu::$15&16383
Constant (const word) menu::$19 = menu::$18&16383
Constant (const dword) mode_stdchar::$1 = mode_stdchar::$0/65536
Constant (const word) mode_stdchar::$4 = ((word))mode_stdchar::$3
Constant (const word) mode_stdchar::$7 = ((word))mode_stdchar::$6
Constant (const word/signed dword/dword) mode_stdchar::$10 = mode_stdchar::$9/16384
Constant (const byte/word/dword) mode_stdchar::$14 = mode_stdchar::$13|3
Constant (const word) mode_stdchar::$16 = mode_stdchar::$15&16383
Constant (const word) mode_stdchar::$19 = mode_stdchar::$18&16383
Constant (const dword) mode_ecmchar::$1 = mode_ecmchar::$0/65536
Constant (const word) mode_ecmchar::$4 = ((word))mode_ecmchar::$3
Constant (const word) mode_ecmchar::$7 = ((word))mode_ecmchar::$6
Constant (const word/signed dword/dword) mode_ecmchar::$10 = mode_ecmchar::$9/16384
Constant (const byte) mode_ecmchar::$14 = mode_ecmchar::$13|VIC_ECM#0
Constant (const word) mode_ecmchar::$17 = mode_ecmchar::$16&16383
Constant (const word) mode_ecmchar::$20 = mode_ecmchar::$19&16383
Constant (const dword) mode_mcchar::$1 = mode_mcchar::$0/65536
Constant (const word) mode_mcchar::$4 = ((word))mode_mcchar::$3
Constant (const word) mode_mcchar::$7 = ((word))mode_mcchar::$6
Constant (const word/signed dword/dword) mode_mcchar::$10 = mode_mcchar::$9/16384
Constant (const byte/word/dword) mode_mcchar::$14 = mode_mcchar::$13|3
Constant (const word) mode_mcchar::$17 = mode_mcchar::$16&16383
Constant (const word) mode_mcchar::$20 = mode_mcchar::$19&16383
Constant (const dword) mode_hicolstdchar::$1 = mode_hicolstdchar::$0/65536
Constant (const word) mode_hicolstdchar::$4 = ((word))mode_hicolstdchar::$3
Constant (const word) mode_hicolstdchar::$7 = ((word))mode_hicolstdchar::$6
Constant (const word/signed dword/dword) mode_hicolstdchar::$10 = mode_hicolstdchar::$9/16384
Constant (const byte/word/dword) mode_hicolstdchar::$14 = mode_hicolstdchar::$13|3
Constant (const word) mode_hicolstdchar::$16 = mode_hicolstdchar::$15&16383
Constant (const word) mode_hicolstdchar::$19 = mode_hicolstdchar::$18&16383
Constant (const dword) mode_hicolecmchar::$1 = mode_hicolecmchar::$0/65536
Constant (const word) mode_hicolecmchar::$4 = ((word))mode_hicolecmchar::$3
Constant (const word) mode_hicolecmchar::$7 = ((word))mode_hicolecmchar::$6
Constant (const word/signed dword/dword) mode_hicolecmchar::$10 = mode_hicolecmchar::$9/16384
Constant (const byte) mode_hicolecmchar::$14 = mode_hicolecmchar::$13|VIC_ECM#0
Constant (const word) mode_hicolecmchar::$17 = mode_hicolecmchar::$16&16383
Constant (const word) mode_hicolecmchar::$20 = mode_hicolecmchar::$19&16383
Constant (const dword) mode_hicolmcchar::$1 = mode_hicolmcchar::$0/65536
Constant (const word) mode_hicolmcchar::$4 = ((word))mode_hicolmcchar::$3
Constant (const word) mode_hicolmcchar::$7 = ((word))mode_hicolmcchar::$6
Constant (const word/signed dword/dword) mode_hicolmcchar::$10 = mode_hicolmcchar::$9/16384
Constant (const byte/word/dword) mode_hicolmcchar::$14 = mode_hicolmcchar::$13|3
Constant (const word) mode_hicolmcchar::$17 = mode_hicolmcchar::$16&16383
Constant (const word) mode_hicolmcchar::$20 = mode_hicolmcchar::$19&16383
Constant (const byte) mode_twoplanebitmap::$2 = mode_twoplanebitmap::$1|VIC_DEN#0
Constant (const byte) mode_twoplanebitmap::$10 = <mode_twoplanebitmap::$9
Constant (const byte) mode_twoplanebitmap::$12 = >mode_twoplanebitmap::$11
Constant (const byte) mode_sixsfred::$2 = mode_sixsfred::$1|VIC_DEN#0
Constant (const byte) mode_sixsfred::$11 = <mode_sixsfred::$10
Constant (const byte) mode_sixsfred::$13 = >mode_sixsfred::$12
Constant (const byte) mode_sixsfred2::$1 = mode_sixsfred2::$0|VIC_DEN#0
Constant (const byte) mode_sixsfred2::$10 = <mode_sixsfred2::$9
Constant (const byte) mode_sixsfred2::$12 = >mode_sixsfred2::$11
Constant (const byte) mode_8bpppixelcell::$1 = mode_8bpppixelcell::$0|DTV_CONTROL_CHUNKY_ON#0
Constant (const byte) mode_8bpppixelcell::$3 = mode_8bpppixelcell::$2|VIC_RSEL#0
Constant (const byte) mode_8bppchunkybmm::$1 = mode_8bppchunkybmm::$0|DTV_CONTROL_CHUNKY_ON#0
Constant (const byte) mode_8bppchunkybmm::$4 = mode_8bppchunkybmm::$3|VIC_RSEL#0
Constant (const byte) mode_8bppchunkybmm::$8 = <mode_8bppchunkybmm::$7
Constant (const byte) mode_8bppchunkybmm::$10 = >mode_8bppchunkybmm::$9
Constant (const byte) mode_8bppchunkybmm::$12 = <mode_8bppchunkybmm::$11
Constant (const byte) mode_8bppchunkybmm::gfxbCpuBank#0 = ((byte))mode_8bppchunkybmm::$14
Succesful SSA optimization Pass2ConstantIdentification
Constant (const byte*) print_cls::sc#0 = print_screen#1
Constant (const byte*) print_cls::$0 = print_screen#1+1000
Constant (const string) $3 = "C64DTV Graphics Modes            CCLHBME@"+"                                 OHIIMCC@"+"                                 LUNCMMM@"+"----------------------------------------@"+"1. Standard Char             (V) 0000000@"
Constant (const byte) menu::$2 = ((byte))menu::$1
Constant (const byte) menu::$5 = <menu::$4
Constant (const byte) menu::$8 = >menu::$7
Constant (const byte) menu::$11 = ((byte))menu::$10
Constant (const word/signed dword/dword) menu::$17 = menu::$16/64
Constant (const word/signed dword/dword) menu::$20 = menu::$19/1024
Constant (const byte) mode_stdchar::$2 = ((byte))mode_stdchar::$1
Constant (const byte) mode_stdchar::$5 = <mode_stdchar::$4
Constant (const byte) mode_stdchar::$8 = >mode_stdchar::$7
Constant (const byte) mode_stdchar::$11 = ((byte))mode_stdchar::$10
Constant (const word/signed dword/dword) mode_stdchar::$17 = mode_stdchar::$16/64
Constant (const word/signed dword/dword) mode_stdchar::$20 = mode_stdchar::$19/1024
Constant (const byte) mode_ecmchar::$2 = ((byte))mode_ecmchar::$1
Constant (const byte) mode_ecmchar::$5 = <mode_ecmchar::$4
Constant (const byte) mode_ecmchar::$8 = >mode_ecmchar::$7
Constant (const byte) mode_ecmchar::$11 = ((byte))mode_ecmchar::$10
Constant (const byte/word/dword) mode_ecmchar::$15 = mode_ecmchar::$14|3
Constant (const word/signed dword/dword) mode_ecmchar::$18 = mode_ecmchar::$17/64
Constant (const word/signed dword/dword) mode_ecmchar::$21 = mode_ecmchar::$20/1024
Constant (const byte) mode_mcchar::$2 = ((byte))mode_mcchar::$1
Constant (const byte) mode_mcchar::$5 = <mode_mcchar::$4
Constant (const byte) mode_mcchar::$8 = >mode_mcchar::$7
Constant (const byte) mode_mcchar::$11 = ((byte))mode_mcchar::$10
Constant (const word/signed dword/dword) mode_mcchar::$18 = mode_mcchar::$17/64
Constant (const word/signed dword/dword) mode_mcchar::$21 = mode_mcchar::$20/1024
Constant (const byte) mode_hicolstdchar::$2 = ((byte))mode_hicolstdchar::$1
Constant (const byte) mode_hicolstdchar::$5 = <mode_hicolstdchar::$4
Constant (const byte) mode_hicolstdchar::$8 = >mode_hicolstdchar::$7
Constant (const byte) mode_hicolstdchar::$11 = ((byte))mode_hicolstdchar::$10
Constant (const word/signed dword/dword) mode_hicolstdchar::$17 = mode_hicolstdchar::$16/64
Constant (const word/signed dword/dword) mode_hicolstdchar::$20 = mode_hicolstdchar::$19/1024
Constant (const byte) mode_hicolecmchar::$2 = ((byte))mode_hicolecmchar::$1
Constant (const byte) mode_hicolecmchar::$5 = <mode_hicolecmchar::$4
Constant (const byte) mode_hicolecmchar::$8 = >mode_hicolecmchar::$7
Constant (const byte) mode_hicolecmchar::$11 = ((byte))mode_hicolecmchar::$10
Constant (const byte/word/dword) mode_hicolecmchar::$15 = mode_hicolecmchar::$14|3
Constant (const word/signed dword/dword) mode_hicolecmchar::$18 = mode_hicolecmchar::$17/64
Constant (const word/signed dword/dword) mode_hicolecmchar::$21 = mode_hicolecmchar::$20/1024
Constant (const byte) mode_hicolmcchar::$2 = ((byte))mode_hicolmcchar::$1
Constant (const byte) mode_hicolmcchar::$5 = <mode_hicolmcchar::$4
Constant (const byte) mode_hicolmcchar::$8 = >mode_hicolmcchar::$7
Constant (const byte) mode_hicolmcchar::$11 = ((byte))mode_hicolmcchar::$10
Constant (const word/signed dword/dword) mode_hicolmcchar::$18 = mode_hicolmcchar::$17/64
Constant (const word/signed dword/dword) mode_hicolmcchar::$21 = mode_hicolmcchar::$20/1024
Constant (const byte) mode_twoplanebitmap::$3 = mode_twoplanebitmap::$2|VIC_RSEL#0
Constant (const byte) mode_sixsfred::$3 = mode_sixsfred::$2|VIC_RSEL#0
Constant (const byte) mode_sixsfred2::$2 = mode_sixsfred2::$1|VIC_RSEL#0
Constant (const byte/word/dword) mode_8bpppixelcell::$4 = mode_8bpppixelcell::$3|3
Constant (const byte) mode_8bppchunkybmm::$2 = mode_8bppchunkybmm::$1|DTV_CONTROL_COLORRAM_OFF#0
Constant (const byte/word/dword) mode_8bppchunkybmm::$5 = mode_8bppchunkybmm::$4|3
Constant (const byte) dtvSetCpuBankSegment1::cpuBankIdx#0 = mode_8bppchunkybmm::gfxbCpuBank#0
Constant (const byte) mode_8bppchunkybmm::gfxbCpuBank#1 = ++mode_8bppchunkybmm::gfxbCpuBank#0
Succesful SSA optimization Pass2ConstantIdentification
Constant (const string) $4 = "C64DTV Graphics Modes            CCLHBME@"+"                                 OHIIMCC@"+"                                 LUNCMMM@"+"----------------------------------------@"+"1. Standard Char             (V) 0000000@"+"2. Extended Color Char       (V) 0000001@"
Constant (const byte/word/dword) menu::$12 = 3^menu::$11
Constant (const word/dword) menu::$21 = menu::$17|menu::$20
Constant (const byte/word/dword) mode_stdchar::$12 = 3^mode_stdchar::$11
Constant (const word/dword) mode_stdchar::$21 = mode_stdchar::$17|mode_stdchar::$20
Constant (const byte/word/dword) mode_ecmchar::$12 = 3^mode_ecmchar::$11
Constant (const word/dword) mode_ecmchar::$22 = mode_ecmchar::$18|mode_ecmchar::$21
Constant (const byte/word/dword) mode_mcchar::$12 = 3^mode_mcchar::$11
Constant (const word/dword) mode_mcchar::$22 = mode_mcchar::$18|mode_mcchar::$21
Constant (const byte/word/dword) mode_hicolstdchar::$12 = 3^mode_hicolstdchar::$11
Constant (const word/dword) mode_hicolstdchar::$21 = mode_hicolstdchar::$17|mode_hicolstdchar::$20
Constant (const byte/word/dword) mode_hicolecmchar::$12 = 3^mode_hicolecmchar::$11
Constant (const word/dword) mode_hicolecmchar::$22 = mode_hicolecmchar::$18|mode_hicolecmchar::$21
Constant (const byte/word/dword) mode_hicolmcchar::$12 = 3^mode_hicolmcchar::$11
Constant (const word/dword) mode_hicolmcchar::$22 = mode_hicolmcchar::$18|mode_hicolmcchar::$21
Constant (const byte/word/dword) mode_twoplanebitmap::$4 = mode_twoplanebitmap::$3|3
Constant (const byte/word/dword) mode_sixsfred::$4 = mode_sixsfred::$3|3
Constant (const byte/word/dword) mode_sixsfred2::$3 = mode_sixsfred2::$2|3
Succesful SSA optimization Pass2ConstantIdentification
Constant (const string) $5 = "C64DTV Graphics Modes            CCLHBME@"+"                                 OHIIMCC@"+"                                 LUNCMMM@"+"----------------------------------------@"+"1. Standard Char             (V) 0000000@"+"2. Extended Color Char       (V) 0000001@"+"3. Multicolor Char           (V) 0000010@"
Constant (const byte) menu::$22 = ((byte))menu::$21
Constant (const byte) mode_stdchar::$22 = ((byte))mode_stdchar::$21
Constant (const byte) mode_ecmchar::$23 = ((byte))mode_ecmchar::$22
Constant (const byte) mode_mcchar::$23 = ((byte))mode_mcchar::$22
Constant (const byte) mode_hicolstdchar::$22 = ((byte))mode_hicolstdchar::$21
Constant (const byte) mode_hicolecmchar::$23 = ((byte))mode_hicolecmchar::$22
Constant (const byte) mode_hicolmcchar::$23 = ((byte))mode_hicolmcchar::$22
Succesful SSA optimization Pass2ConstantIdentification
Constant (const string) $6 = "C64DTV Graphics Modes            CCLHBME@"+"                                 OHIIMCC@"+"                                 LUNCMMM@"+"----------------------------------------@"+"1. Standard Char             (V) 0000000@"+"2. Extended Color Char       (V) 0000001@"+"3. Multicolor Char           (V) 0000010@"+"4. Standard Bitmap           (V) 0000100@"
Succesful SSA optimization Pass2ConstantIdentification
Constant (const string) $7 = "C64DTV Graphics Modes            CCLHBME@"+"                                 OHIIMCC@"+"                                 LUNCMMM@"+"----------------------------------------@"+"1. Standard Char             (V) 0000000@"+"2. Extended Color Char       (V) 0000001@"+"3. Multicolor Char           (V) 0000010@"+"4. Standard Bitmap           (V) 0000100@"+"5. Multicolor Bitmap         (V) 0000110@"
Succesful SSA optimization Pass2ConstantIdentification
Constant (const string) $8 = "C64DTV Graphics Modes            CCLHBME@"+"                                 OHIIMCC@"+"                                 LUNCMMM@"+"----------------------------------------@"+"1. Standard Char             (V) 0000000@"+"2. Extended Color Char       (V) 0000001@"+"3. Multicolor Char           (V) 0000010@"+"4. Standard Bitmap           (V) 0000100@"+"5. Multicolor Bitmap         (V) 0000110@"+"6. High Color Standard Char  (H) 0001000@"
Succesful SSA optimization Pass2ConstantIdentification
Constant (const string) $9 = "C64DTV Graphics Modes            CCLHBME@"+"                                 OHIIMCC@"+"                                 LUNCMMM@"+"----------------------------------------@"+"1. Standard Char             (V) 0000000@"+"2. Extended Color Char       (V) 0000001@"+"3. Multicolor Char           (V) 0000010@"+"4. Standard Bitmap           (V) 0000100@"+"5. Multicolor Bitmap         (V) 0000110@"+"6. High Color Standard Char  (H) 0001000@"+"7. High Extended Color Char  (H) 0001001@"
Succesful SSA optimization Pass2ConstantIdentification
Constant (const string) $10 = "C64DTV Graphics Modes            CCLHBME@"+"                                 OHIIMCC@"+"                                 LUNCMMM@"+"----------------------------------------@"+"1. Standard Char             (V) 0000000@"+"2. Extended Color Char       (V) 0000001@"+"3. Multicolor Char           (V) 0000010@"+"4. Standard Bitmap           (V) 0000100@"+"5. Multicolor Bitmap         (V) 0000110@"+"6. High Color Standard Char  (H) 0001000@"+"7. High Extended Color Char  (H) 0001001@"+"8. High Multicolor Char      (H) 0001010@"
Succesful SSA optimization Pass2ConstantIdentification
Constant (const string) $11 = "C64DTV Graphics Modes            CCLHBME@"+"                                 OHIIMCC@"+"                                 LUNCMMM@"+"----------------------------------------@"+"1. Standard Char             (V) 0000000@"+"2. Extended Color Char       (V) 0000001@"+"3. Multicolor Char           (V) 0000010@"+"4. Standard Bitmap           (V) 0000100@"+"5. Multicolor Bitmap         (V) 0000110@"+"6. High Color Standard Char  (H) 0001000@"+"7. High Extended Color Char  (H) 0001001@"+"8. High Multicolor Char      (H) 0001010@"+"9. High Multicolor Bitmap    (H) 0001110@"
Succesful SSA optimization Pass2ConstantIdentification
Constant (const string) $12 = "C64DTV Graphics Modes            CCLHBME@"+"                                 OHIIMCC@"+"                                 LUNCMMM@"+"----------------------------------------@"+"1. Standard Char             (V) 0000000@"+"2. Extended Color Char       (V) 0000001@"+"3. Multicolor Char           (V) 0000010@"+"4. Standard Bitmap           (V) 0000100@"+"5. Multicolor Bitmap         (V) 0000110@"+"6. High Color Standard Char  (H) 0001000@"+"7. High Extended Color Char  (H) 0001001@"+"8. High Multicolor Char      (H) 0001010@"+"9. High Multicolor Bitmap    (H) 0001110@"+"a. Sixs Fred 2               (D) 0010111@"
Succesful SSA optimization Pass2ConstantIdentification
Constant (const string) $13 = "C64DTV Graphics Modes            CCLHBME@"+"                                 OHIIMCC@"+"                                 LUNCMMM@"+"----------------------------------------@"+"1. Standard Char             (V) 0000000@"+"2. Extended Color Char       (V) 0000001@"+"3. Multicolor Char           (V) 0000010@"+"4. Standard Bitmap           (V) 0000100@"+"5. Multicolor Bitmap         (V) 0000110@"+"6. High Color Standard Char  (H) 0001000@"+"7. High Extended Color Char  (H) 0001001@"+"8. High Multicolor Char      (H) 0001010@"+"9. High Multicolor Bitmap    (H) 0001110@"+"a. Sixs Fred 2               (D) 0010111@"+"b. Two Plane Bitmap          (D) 0011101@"
Succesful SSA optimization Pass2ConstantIdentification
Constant (const string) $14 = "C64DTV Graphics Modes            CCLHBME@"+"                                 OHIIMCC@"+"                                 LUNCMMM@"+"----------------------------------------@"+"1. Standard Char             (V) 0000000@"+"2. Extended Color Char       (V) 0000001@"+"3. Multicolor Char           (V) 0000010@"+"4. Standard Bitmap           (V) 0000100@"+"5. Multicolor Bitmap         (V) 0000110@"+"6. High Color Standard Char  (H) 0001000@"+"7. High Extended Color Char  (H) 0001001@"+"8. High Multicolor Char      (H) 0001010@"+"9. High Multicolor Bitmap    (H) 0001110@"+"a. Sixs Fred 2               (D) 0010111@"+"b. Two Plane Bitmap          (D) 0011101@"+"c. Sixs Fred (2 Plane MC BM) (D) 0011111@"
Succesful SSA optimization Pass2ConstantIdentification
Constant (const string) $15 = "C64DTV Graphics Modes            CCLHBME@"+"                                 OHIIMCC@"+"                                 LUNCMMM@"+"----------------------------------------@"+"1. Standard Char             (V) 0000000@"+"2. Extended Color Char       (V) 0000001@"+"3. Multicolor Char           (V) 0000010@"+"4. Standard Bitmap           (V) 0000100@"+"5. Multicolor Bitmap         (V) 0000110@"+"6. High Color Standard Char  (H) 0001000@"+"7. High Extended Color Char  (H) 0001001@"+"8. High Multicolor Char      (H) 0001010@"+"9. High Multicolor Bitmap    (H) 0001110@"+"a. Sixs Fred 2               (D) 0010111@"+"b. Two Plane Bitmap          (D) 0011101@"+"c. Sixs Fred (2 Plane MC BM) (D) 0011111@"+"d. 8bpp Pixel Cell           (D) 0111011@"
Succesful SSA optimization Pass2ConstantIdentification
Constant (const string) $16 = "C64DTV Graphics Modes            CCLHBME@"+"                                 OHIIMCC@"+"                                 LUNCMMM@"+"----------------------------------------@"+"1. Standard Char             (V) 0000000@"+"2. Extended Color Char       (V) 0000001@"+"3. Multicolor Char           (V) 0000010@"+"4. Standard Bitmap           (V) 0000100@"+"5. Multicolor Bitmap         (V) 0000110@"+"6. High Color Standard Char  (H) 0001000@"+"7. High Extended Color Char  (H) 0001001@"+"8. High Multicolor Char      (H) 0001010@"+"9. High Multicolor Bitmap    (H) 0001110@"+"a. Sixs Fred 2               (D) 0010111@"+"b. Two Plane Bitmap          (D) 0011101@"+"c. Sixs Fred (2 Plane MC BM) (D) 0011111@"+"d. 8bpp Pixel Cell           (D) 0111011@"+"e. Chunky 8bpp Bitmap        (D) 1111011@"
Succesful SSA optimization Pass2ConstantIdentification
Constant (const string) $17 = "C64DTV Graphics Modes            CCLHBME@"+"                                 OHIIMCC@"+"                                 LUNCMMM@"+"----------------------------------------@"+"1. Standard Char             (V) 0000000@"+"2. Extended Color Char       (V) 0000001@"+"3. Multicolor Char           (V) 0000010@"+"4. Standard Bitmap           (V) 0000100@"+"5. Multicolor Bitmap         (V) 0000110@"+"6. High Color Standard Char  (H) 0001000@"+"7. High Extended Color Char  (H) 0001001@"+"8. High Multicolor Char      (H) 0001010@"+"9. High Multicolor Bitmap    (H) 0001110@"+"a. Sixs Fred 2               (D) 0010111@"+"b. Two Plane Bitmap          (D) 0011101@"+"c. Sixs Fred (2 Plane MC BM) (D) 0011111@"+"d. 8bpp Pixel Cell           (D) 0111011@"+"e. Chunky 8bpp Bitmap        (D) 1111011@"+"----------------------------------------@"
Succesful SSA optimization Pass2ConstantIdentification
Constant (const string) $18 = "C64DTV Graphics Modes            CCLHBME@"+"                                 OHIIMCC@"+"                                 LUNCMMM@"+"----------------------------------------@"+"1. Standard Char             (V) 0000000@"+"2. Extended Color Char       (V) 0000001@"+"3. Multicolor Char           (V) 0000010@"+"4. Standard Bitmap           (V) 0000100@"+"5. Multicolor Bitmap         (V) 0000110@"+"6. High Color Standard Char  (H) 0001000@"+"7. High Extended Color Char  (H) 0001001@"+"8. High Multicolor Char      (H) 0001010@"+"9. High Multicolor Bitmap    (H) 0001110@"+"a. Sixs Fred 2               (D) 0010111@"+"b. Two Plane Bitmap          (D) 0011101@"+"c. Sixs Fred (2 Plane MC BM) (D) 0011111@"+"d. 8bpp Pixel Cell           (D) 0111011@"+"e. Chunky 8bpp Bitmap        (D) 1111011@"+"----------------------------------------@"+"    (V) vicII (H) vicII+hicol (D) c64dtv@"
Succesful SSA optimization Pass2ConstantIdentification
Constant (const string) MENU_TEXT#0 = "C64DTV Graphics Modes            CCLHBME@"+"                                 OHIIMCC@"+"                                 LUNCMMM@"+"----------------------------------------@"+"1. Standard Char             (V) 0000000@"+"2. Extended Color Char       (V) 0000001@"+"3. Multicolor Char           (V) 0000010@"+"4. Standard Bitmap           (V) 0000100@"+"5. Multicolor Bitmap         (V) 0000110@"+"6. High Color Standard Char  (H) 0001000@"+"7. High Extended Color Char  (H) 0001001@"+"8. High Multicolor Char      (H) 0001010@"+"9. High Multicolor Bitmap    (H) 0001110@"+"a. Sixs Fred 2               (D) 0010111@"+"b. Two Plane Bitmap          (D) 0011101@"+"c. Sixs Fred (2 Plane MC BM) (D) 0011111@"+"d. 8bpp Pixel Cell           (D) 0111011@"+"e. Chunky 8bpp Bitmap        (D) 1111011@"+"----------------------------------------@"+"    (V) vicII (H) vicII+hicol (D) c64dtv@"+"@"
Succesful SSA optimization Pass2ConstantIdentification
Constant (const string) print_str_lines::str#1 = MENU_TEXT#0
Succesful SSA optimization Pass2ConstantIdentification
Multiple usages for variable. Not optimizing sub-constant (byte) mode_hicolstdchar::i#2
Multiple usages for variable. Not optimizing sub-constant (byte) mode_hicolecmchar::i#2
Multiple usages for variable. Not optimizing sub-constant (byte) mode_hicolmcchar::i#2
Multiple usages for variable. Not optimizing sub-constant (byte) mode_twoplanebitmap::i#2
Multiple usages for variable. Not optimizing sub-constant (byte) mode_sixsfred::i#2
Multiple usages for variable. Not optimizing sub-constant (byte) mode_sixsfred2::i#2
Multiple usages for variable. Not optimizing sub-constant (byte) mode_8bpppixelcell::i#2
Multiple usages for variable. Not optimizing sub-constant (byte) mode_8bppchunkybmm::i#2
Eliminating unused variable - keeping the phi block (byte*) print_screen#13
Eliminating unused variable - keeping the phi block (byte*) print_line_cursor#10
Eliminating unused variable - keeping the phi block (byte*) print_char_cursor#11
Eliminating unused constant (const string) $20
Eliminating unused constant (const string) $21
Eliminating unused constant (const string) $22
Eliminating unused constant (const string) $23
Eliminating unused constant (const string) $24
Eliminating unused constant (const string) $25
Eliminating unused constant (const string) $26
Eliminating unused constant (const string) $27
Eliminating unused constant (const string) $28
Eliminating unused constant (const string) $29
Eliminating unused constant (const string) $30
Eliminating unused constant (const string) $31
Eliminating unused constant (const string) $32
Eliminating unused constant (const string) $33
Eliminating unused constant (const string) $34
Eliminating unused constant (const string) $35
Eliminating unused constant (const string) $36
Eliminating unused constant (const string) $37
Eliminating unused constant (const string) $38
Eliminating unused constant (const string) $39
Eliminating unused constant (const string) $40
Eliminating unused constant (const string) $0
Eliminating unused constant (const string) $1
Eliminating unused constant (const string) $2
Eliminating unused constant (const string) $3
Eliminating unused constant (const string) $4
Eliminating unused constant (const string) $5
Eliminating unused constant (const string) $6
Eliminating unused constant (const string) $7
Eliminating unused constant (const string) $8
Eliminating unused constant (const string) $9
Eliminating unused constant (const string) $10
Eliminating unused constant (const string) $11
Eliminating unused constant (const string) $12
Eliminating unused constant (const string) $13
Eliminating unused constant (const string) $14
Eliminating unused constant (const string) $15
Eliminating unused constant (const string) $16
Eliminating unused constant (const string) $17
Eliminating unused constant (const string) $18
Succesful SSA optimization PassNEliminateUnusedVars
Eliminating unused constant (const byte*) print_screen#0
Succesful SSA optimization PassNEliminateUnusedVars
Culled Empty Block (label) @1
Culled Empty Block (label) print_str_lines::@2
Culled Empty Block (label) print_str_lines::@11
Culled Empty Block (label) print_ln::@2
Culled Empty Block (label) print_cls::@2
Culled Empty Block (label) @15
Culled Empty Block (label) main::@7
Culled Empty Block (label) @20
Culled Empty Block (label) menu::@17
Culled Empty Block (label) menu::@46
Culled Empty Block (label) menu::@49
Culled Empty Block (label) menu::@51
Culled Empty Block (label) menu::@53
Culled Empty Block (label) menu::@55
Culled Empty Block (label) menu::@57
Culled Empty Block (label) menu::@59
Culled Empty Block (label) menu::@61
Culled Empty Block (label) menu::@63
Culled Empty Block (label) menu::@65
Culled Empty Block (label) menu::@67
Culled Empty Block (label) menu::@16
Culled Empty Block (label) menu::@68
Culled Empty Block (label) mode_twoplanebitmap::@16
Culled Empty Block (label) mode_twoplanebitmap::@20
Culled Empty Block (label) mode_sixsfred::@14
Culled Empty Block (label) mode_sixsfred::@16
Culled Empty Block (label) mode_sixsfred2::@14
Culled Empty Block (label) mode_sixsfred2::@16
Culled Empty Block (label) mode_8bpppixelcell::@12
Not culling empty block because it shares successor with its predecessor. (label) mode_8bpppixelcell::@15
Culled Empty Block (label) mode_8bppchunkybmm::@18
Culled Empty Block (label) @33
Succesful SSA optimization Pass2CullEmptyBlocks
Not culling empty block because it shares successor with its predecessor. (label) mode_8bpppixelcell::@15
Not aliassing across scopes: dtvSetCpuBankSegment1::cpuBankIdx#3 dtvSetCpuBankSegment1::cpuBankIdx#1
Not aliassing across scopes: print_line_cursor#18 print_line_cursor#17
Not aliassing across scopes: keyboard_matrix_read::rowid#0 keyboard_key_pressed::rowidx#0
Not aliassing across scopes: keyboard_matrix_read::return#2 keyboard_matrix_read::return#0
Not aliassing across scopes: keyboard_key_pressed::$2 keyboard_matrix_read::return#2
Not aliassing across scopes: keyboard_key_pressed::return#2 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$29 keyboard_key_pressed::return#2
Not aliassing across scopes: keyboard_key_pressed::return#26 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$33 keyboard_key_pressed::return#26
Not aliassing across scopes: keyboard_key_pressed::return#27 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$37 keyboard_key_pressed::return#27
Not aliassing across scopes: keyboard_key_pressed::return#28 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$41 keyboard_key_pressed::return#28
Not aliassing across scopes: keyboard_key_pressed::return#29 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$45 keyboard_key_pressed::return#29
Not aliassing across scopes: keyboard_key_pressed::return#30 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$49 keyboard_key_pressed::return#30
Not aliassing across scopes: keyboard_key_pressed::return#31 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$53 keyboard_key_pressed::return#31
Not aliassing across scopes: keyboard_key_pressed::return#32 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$57 keyboard_key_pressed::return#32
Not aliassing across scopes: keyboard_key_pressed::return#10 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$61 keyboard_key_pressed::return#10
Not aliassing across scopes: keyboard_key_pressed::return#11 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$65 keyboard_key_pressed::return#11
Not aliassing across scopes: keyboard_key_pressed::return#12 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$69 keyboard_key_pressed::return#12
Not aliassing across scopes: keyboard_key_pressed::return#13 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_stdchar::$32 keyboard_key_pressed::return#13
Not aliassing across scopes: keyboard_key_pressed::return#14 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_ecmchar::$33 keyboard_key_pressed::return#14
Not aliassing across scopes: keyboard_key_pressed::return#15 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_mcchar::$33 keyboard_key_pressed::return#15
Not aliassing across scopes: keyboard_key_pressed::return#16 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_hicolstdchar::$30 keyboard_key_pressed::return#16
Not aliassing across scopes: keyboard_key_pressed::return#17 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_hicolecmchar::$31 keyboard_key_pressed::return#17
Not aliassing across scopes: keyboard_key_pressed::return#18 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_hicolmcchar::$31 keyboard_key_pressed::return#18
Not aliassing across scopes: keyboard_key_pressed::return#19 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_twoplanebitmap::$27 keyboard_key_pressed::return#19
Not aliassing across scopes: keyboard_key_pressed::return#20 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_sixsfred::$25 keyboard_key_pressed::return#20
Not aliassing across scopes: keyboard_key_pressed::return#21 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_sixsfred2::$26 keyboard_key_pressed::return#21
Not aliassing identity: mode_8bpppixelcell::ch#7 mode_8bpppixelcell::ch#7
Not aliassing across scopes: keyboard_key_pressed::return#22 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_8bpppixelcell::$24 keyboard_key_pressed::return#22
Not aliassing across scopes: dtvSetCpuBankSegment1::cpuBankIdx#1 mode_8bppchunkybmm::gfxbCpuBank#4
Not aliassing across scopes: keyboard_key_pressed::return#23 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_8bppchunkybmm::$27 keyboard_key_pressed::return#23
Self Phi Eliminated (byte) mode_8bpppixelcell::ch#7
Succesful SSA optimization Pass2SelfPhiElimination
Redundant Phi (byte) mode_8bpppixelcell::ch#7 (byte) mode_8bpppixelcell::ch#8
Succesful SSA optimization Pass2RedundantPhiElimination
Multiple usages for variable. Not optimizing sub-constant (byte) mode_hicolstdchar::i#2
Multiple usages for variable. Not optimizing sub-constant (byte) mode_hicolecmchar::i#2
Multiple usages for variable. Not optimizing sub-constant (byte) mode_hicolmcchar::i#2
Multiple usages for variable. Not optimizing sub-constant (byte) mode_twoplanebitmap::i#2
Multiple usages for variable. Not optimizing sub-constant (byte) mode_sixsfred::i#2
Multiple usages for variable. Not optimizing sub-constant (byte) mode_sixsfred2::i#2
Multiple usages for variable. Not optimizing sub-constant (byte) mode_8bpppixelcell::i#2
Multiple usages for variable. Not optimizing sub-constant (byte) mode_8bppchunkybmm::i#2
Not culling empty block because it shares successor with its predecessor. (label) mode_8bpppixelcell::@15
Not aliassing across scopes: dtvSetCpuBankSegment1::cpuBankIdx#3 dtvSetCpuBankSegment1::cpuBankIdx#1
Not aliassing across scopes: print_line_cursor#18 print_line_cursor#17
Not aliassing across scopes: keyboard_matrix_read::rowid#0 keyboard_key_pressed::rowidx#0
Not aliassing across scopes: keyboard_matrix_read::return#2 keyboard_matrix_read::return#0
Not aliassing across scopes: keyboard_key_pressed::$2 keyboard_matrix_read::return#2
Not aliassing across scopes: keyboard_key_pressed::return#2 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$29 keyboard_key_pressed::return#2
Not aliassing across scopes: keyboard_key_pressed::return#26 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$33 keyboard_key_pressed::return#26
Not aliassing across scopes: keyboard_key_pressed::return#27 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$37 keyboard_key_pressed::return#27
Not aliassing across scopes: keyboard_key_pressed::return#28 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$41 keyboard_key_pressed::return#28
Not aliassing across scopes: keyboard_key_pressed::return#29 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$45 keyboard_key_pressed::return#29
Not aliassing across scopes: keyboard_key_pressed::return#30 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$49 keyboard_key_pressed::return#30
Not aliassing across scopes: keyboard_key_pressed::return#31 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$53 keyboard_key_pressed::return#31
Not aliassing across scopes: keyboard_key_pressed::return#32 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$57 keyboard_key_pressed::return#32
Not aliassing across scopes: keyboard_key_pressed::return#10 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$61 keyboard_key_pressed::return#10
Not aliassing across scopes: keyboard_key_pressed::return#11 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$65 keyboard_key_pressed::return#11
Not aliassing across scopes: keyboard_key_pressed::return#12 keyboard_key_pressed::return#0
Not aliassing across scopes: menu::$69 keyboard_key_pressed::return#12
Not aliassing across scopes: keyboard_key_pressed::return#13 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_stdchar::$32 keyboard_key_pressed::return#13
Not aliassing across scopes: keyboard_key_pressed::return#14 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_ecmchar::$33 keyboard_key_pressed::return#14
Not aliassing across scopes: keyboard_key_pressed::return#15 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_mcchar::$33 keyboard_key_pressed::return#15
Not aliassing across scopes: keyboard_key_pressed::return#16 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_hicolstdchar::$30 keyboard_key_pressed::return#16
Not aliassing across scopes: keyboard_key_pressed::return#17 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_hicolecmchar::$31 keyboard_key_pressed::return#17
Not aliassing across scopes: keyboard_key_pressed::return#18 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_hicolmcchar::$31 keyboard_key_pressed::return#18
Not aliassing across scopes: keyboard_key_pressed::return#19 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_twoplanebitmap::$27 keyboard_key_pressed::return#19
Not aliassing across scopes: keyboard_key_pressed::return#20 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_sixsfred::$25 keyboard_key_pressed::return#20
Not aliassing across scopes: keyboard_key_pressed::return#21 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_sixsfred2::$26 keyboard_key_pressed::return#21
Not aliassing across scopes: keyboard_key_pressed::return#22 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_8bpppixelcell::$24 keyboard_key_pressed::return#22
Not aliassing across scopes: dtvSetCpuBankSegment1::cpuBankIdx#1 mode_8bppchunkybmm::gfxbCpuBank#4
Not aliassing across scopes: keyboard_key_pressed::return#23 keyboard_key_pressed::return#0
Not aliassing across scopes: mode_8bppchunkybmm::$27 keyboard_key_pressed::return#23
Multiple usages for variable. Not optimizing sub-constant (byte) mode_hicolstdchar::i#2
Multiple usages for variable. Not optimizing sub-constant (byte) mode_hicolecmchar::i#2
Multiple usages for variable. Not optimizing sub-constant (byte) mode_hicolmcchar::i#2
Multiple usages for variable. Not optimizing sub-constant (byte) mode_twoplanebitmap::i#2
Multiple usages for variable. Not optimizing sub-constant (byte) mode_sixsfred::i#2
Multiple usages for variable. Not optimizing sub-constant (byte) mode_sixsfred2::i#2
Multiple usages for variable. Not optimizing sub-constant (byte) mode_8bpppixelcell::i#2
Multiple usages for variable. Not optimizing sub-constant (byte) mode_8bppchunkybmm::i#2
OPTIMIZING CONTROL FLOW GRAPH
Inlining constant with var siblings (const byte) dtvSetCpuBankSegment1::cpuBankIdx#2
Inlining constant with var siblings (const byte) dtvSetCpuBankSegment1::cpuBankIdx#2
Inlining constant with var siblings (const byte) dtvSetCpuBankSegment1::cpuBankIdx#0
Inlining constant with var siblings (const byte) dtvSetCpuBankSegment1::cpuBankIdx#0
Inlining constant with different constant siblings (const byte) dtvSetCpuBankSegment1::cpuBankIdx#0
Inlining constant with var siblings (const string) print_str_lines::str#1
Inlining constant with var siblings (const string) print_str_lines::str#1
Inlining constant with var siblings (const string) print_str_lines::str#1
Inlining constant with var siblings (const byte*) print_cls::sc#0
Inlining constant with var siblings (const byte*) print_cls::sc#0
Inlining constant with var siblings (const byte) keyboard_key_pressed::key#0
Inlining constant with var siblings (const byte) keyboard_key_pressed::key#1
Inlining constant with var siblings (const byte) keyboard_key_pressed::key#2
Inlining constant with var siblings (const byte) keyboard_key_pressed::key#3
Inlining constant with var siblings (const byte) keyboard_key_pressed::key#4
Inlining constant with var siblings (const byte) keyboard_key_pressed::key#5
Inlining constant with var siblings (const byte) keyboard_key_pressed::key#6
Inlining constant with var siblings (const byte) keyboard_key_pressed::key#7
Inlining constant with var siblings (const byte) keyboard_key_pressed::key#8
Inlining constant with var siblings (const byte) keyboard_key_pressed::key#9
Inlining constant with var siblings (const byte) keyboard_key_pressed::key#10
Inlining constant with var siblings (const byte) keyboard_key_pressed::key#11
Inlining constant with var siblings (const byte) keyboard_key_pressed::key#12
Inlining constant with var siblings (const byte) keyboard_key_pressed::key#13
Inlining constant with var siblings (const byte) keyboard_key_pressed::key#14
Inlining constant with var siblings (const byte) keyboard_key_pressed::key#15
Inlining constant with var siblings (const byte) keyboard_key_pressed::key#16
Inlining constant with var siblings (const byte) keyboard_key_pressed::key#17
Inlining constant with var siblings (const byte) keyboard_key_pressed::key#18
Inlining constant with var siblings (const byte) keyboard_key_pressed::key#19
Inlining constant with var siblings (const byte) keyboard_key_pressed::key#20
Inlining constant with var siblings (const byte) keyboard_key_pressed::key#21
Inlining constant with var siblings (const byte) menu::i#0
Inlining constant with var siblings (const byte) menu::i#0
Inlining constant with var siblings (const byte*) menu::c#0
Inlining constant with var siblings (const byte*) menu::c#0
Inlining constant with var siblings (const byte) mode_stdchar::i#0
Inlining constant with var siblings (const byte) mode_stdchar::i#0
Inlining constant with var siblings (const byte) mode_stdchar::cy#0
Inlining constant with var siblings (const byte) mode_stdchar::cy#0
Inlining constant with var siblings (const byte) mode_stdchar::cx#0
Inlining constant with var siblings (const byte) mode_stdchar::cx#0
Inlining constant with var siblings (const byte) mode_ecmchar::i#0
Inlining constant with var siblings (const byte) mode_ecmchar::i#0
Inlining constant with var siblings (const byte) mode_ecmchar::cy#0
Inlining constant with var siblings (const byte) mode_ecmchar::cy#0
Inlining constant with var siblings (const byte) mode_ecmchar::cx#0
Inlining constant with var siblings (const byte) mode_ecmchar::cx#0
Inlining constant with var siblings (const byte) mode_mcchar::i#0
Inlining constant with var siblings (const byte) mode_mcchar::i#0
Inlining constant with var siblings (const byte) mode_mcchar::cy#0
Inlining constant with var siblings (const byte) mode_mcchar::cy#0
Inlining constant with var siblings (const byte) mode_mcchar::cx#0
Inlining constant with var siblings (const byte) mode_mcchar::cx#0
Inlining constant with var siblings (const byte) mode_hicolstdchar::i#0
Inlining constant with var siblings (const byte) mode_hicolstdchar::i#0
Inlining constant with var siblings (const byte) mode_hicolstdchar::cy#0
Inlining constant with var siblings (const byte) mode_hicolstdchar::cy#0
Inlining constant with var siblings (const byte) mode_hicolstdchar::cx#0
Inlining constant with var siblings (const byte) mode_hicolstdchar::cx#0
Inlining constant with var siblings (const byte) mode_hicolecmchar::i#0
Inlining constant with var siblings (const byte) mode_hicolecmchar::i#0
Inlining constant with var siblings (const byte) mode_hicolecmchar::cy#0
Inlining constant with var siblings (const byte) mode_hicolecmchar::cy#0
Inlining constant with var siblings (const byte) mode_hicolecmchar::cx#0
Inlining constant with var siblings (const byte) mode_hicolecmchar::cx#0
Inlining constant with var siblings (const byte) mode_hicolmcchar::i#0
Inlining constant with var siblings (const byte) mode_hicolmcchar::i#0
Inlining constant with var siblings (const byte) mode_hicolmcchar::cy#0
Inlining constant with var siblings (const byte) mode_hicolmcchar::cy#0
Inlining constant with var siblings (const byte) mode_hicolmcchar::cx#0
Inlining constant with var siblings (const byte) mode_hicolmcchar::cx#0
Inlining constant with var siblings (const byte) mode_twoplanebitmap::i#0
Inlining constant with var siblings (const byte) mode_twoplanebitmap::i#0
Inlining constant with var siblings (const byte) mode_twoplanebitmap::cy#0
Inlining constant with var siblings (const byte) mode_twoplanebitmap::cy#0
Inlining constant with var siblings (const byte) mode_twoplanebitmap::cx#0
Inlining constant with var siblings (const byte) mode_twoplanebitmap::cx#0
Inlining constant with var siblings (const byte) mode_twoplanebitmap::ay#0
Inlining constant with var siblings (const byte) mode_twoplanebitmap::ay#0
Inlining constant with var siblings (const byte) mode_twoplanebitmap::ax#0
Inlining constant with var siblings (const byte) mode_twoplanebitmap::ax#0
Inlining constant with var siblings (const byte) mode_twoplanebitmap::by#0
Inlining constant with var siblings (const byte) mode_twoplanebitmap::by#0
Inlining constant with var siblings (const byte) mode_twoplanebitmap::bx#0
Inlining constant with var siblings (const byte) mode_twoplanebitmap::bx#0
Inlining constant with var siblings (const byte) mode_sixsfred::i#0
Inlining constant with var siblings (const byte) mode_sixsfred::i#0
Inlining constant with var siblings (const byte) mode_sixsfred::cy#0
Inlining constant with var siblings (const byte) mode_sixsfred::cy#0
Inlining constant with var siblings (const byte) mode_sixsfred::cx#0
Inlining constant with var siblings (const byte) mode_sixsfred::cx#0
Inlining constant with var siblings (const byte) mode_sixsfred::ay#0
Inlining constant with var siblings (const byte) mode_sixsfred::ay#0
Inlining constant with var siblings (const byte) mode_sixsfred::ax#0
Inlining constant with var siblings (const byte) mode_sixsfred::ax#0
Inlining constant with var siblings (const byte) mode_sixsfred::by#0
Inlining constant with var siblings (const byte) mode_sixsfred::by#0
Inlining constant with var siblings (const byte) mode_sixsfred::bx#0
Inlining constant with var siblings (const byte) mode_sixsfred::bx#0
Inlining constant with var siblings (const byte) mode_sixsfred2::i#0
Inlining constant with var siblings (const byte) mode_sixsfred2::i#0
Inlining constant with var siblings (const byte) mode_sixsfred2::cy#0
Inlining constant with var siblings (const byte) mode_sixsfred2::cy#0
Inlining constant with var siblings (const byte) mode_sixsfred2::cx#0
Inlining constant with var siblings (const byte) mode_sixsfred2::cx#0
Inlining constant with var siblings (const byte) mode_sixsfred2::ay#0
Inlining constant with var siblings (const byte) mode_sixsfred2::ay#0
Inlining constant with var siblings (const byte) mode_sixsfred2::ax#0
Inlining constant with var siblings (const byte) mode_sixsfred2::ax#0
Inlining constant with var siblings (const byte) mode_sixsfred2::by#0
Inlining constant with var siblings (const byte) mode_sixsfred2::by#0
Inlining constant with var siblings (const byte) mode_sixsfred2::bx#0
Inlining constant with var siblings (const byte) mode_sixsfred2::bx#0
Inlining constant with var siblings (const byte) mode_8bpppixelcell::i#0
Inlining constant with var siblings (const byte) mode_8bpppixelcell::i#0
Inlining constant with var siblings (const byte) mode_8bpppixelcell::ay#0
Inlining constant with var siblings (const byte) mode_8bpppixelcell::ay#0
Inlining constant with var siblings (const byte) mode_8bpppixelcell::ax#0
Inlining constant with var siblings (const byte) mode_8bpppixelcell::ax#0
Inlining constant with var siblings (const byte*) mode_8bpppixelcell::chargen#0
Inlining constant with var siblings (const byte*) mode_8bpppixelcell::chargen#0
Inlining constant with var siblings (const byte*) mode_8bpppixelcell::chargen#0
Inlining constant with var siblings (const byte) mode_8bpppixelcell::col#0
Inlining constant with var siblings (const byte) mode_8bpppixelcell::col#0
Inlining constant with var siblings (const byte) mode_8bpppixelcell::col#0
Inlining constant with var siblings (const byte) mode_8bpppixelcell::col#0
Inlining constant with var siblings (const byte) mode_8bpppixelcell::ch#0
Inlining constant with var siblings (const byte) mode_8bpppixelcell::ch#0
Inlining constant with var siblings (const byte) mode_8bpppixelcell::cr#0
Inlining constant with var siblings (const byte) mode_8bpppixelcell::cr#0
Inlining constant with var siblings (const byte) mode_8bpppixelcell::cp#0
Inlining constant with var siblings (const byte) mode_8bpppixelcell::cp#0
Inlining constant with var siblings (const byte) mode_8bpppixelcell::c#0
Inlining constant with var siblings (const byte) mode_8bppchunkybmm::i#0
Inlining constant with var siblings (const byte) mode_8bppchunkybmm::i#0
Inlining constant with var siblings (const byte*) mode_8bppchunkybmm::gfxb#0
Inlining constant with var siblings (const byte*) mode_8bppchunkybmm::gfxb#0
Inlining constant with var siblings (const byte*) mode_8bppchunkybmm::gfxb#0
Inlining constant with var siblings (const byte*) mode_8bppchunkybmm::gfxb#0
Inlining constant with var siblings (const byte) mode_8bppchunkybmm::y#0
Inlining constant with var siblings (const byte) mode_8bppchunkybmm::y#0
Inlining constant with var siblings (const word) mode_8bppchunkybmm::x#0
Inlining constant with var siblings (const word) mode_8bppchunkybmm::x#0
Inlining constant with var siblings (const byte*) mode_8bppchunkybmm::gfxb#2
Inlining constant with var siblings (const byte*) mode_8bppchunkybmm::gfxb#2
Inlining constant with var siblings (const byte*) mode_8bppchunkybmm::gfxb#2
Inlining constant with var siblings (const byte*) mode_8bppchunkybmm::gfxb#2
Inlining constant with var siblings (const byte) mode_8bppchunkybmm::gfxbCpuBank#0
Inlining constant with var siblings (const byte) mode_8bppchunkybmm::gfxbCpuBank#0
Inlining constant with var siblings (const byte) mode_8bppchunkybmm::gfxbCpuBank#0
Inlining constant with var siblings (const byte) mode_8bppchunkybmm::gfxbCpuBank#0
Inlining constant with different constant siblings (const byte) mode_8bppchunkybmm::gfxbCpuBank#0
Inlining constant with var siblings (const byte) mode_8bppchunkybmm::gfxbCpuBank#1
Inlining constant with var siblings (const byte) mode_8bppchunkybmm::gfxbCpuBank#1
Inlining constant with var siblings (const byte) mode_8bppchunkybmm::gfxbCpuBank#1
Inlining constant with var siblings (const byte) mode_8bppchunkybmm::gfxbCpuBank#1
Inlining constant with different constant siblings (const byte) mode_8bppchunkybmm::gfxbCpuBank#1
Constant inlined mode_hicolecmchar::cx#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined menu::c#0 = (const byte*) COLS#0
Constant inlined mode_hicolecmchar::$0 = ((dword))(const byte*) mode_hicolecmchar::CHARSET#0
Constant inlined mode_hicolecmchar::$1 = ((dword))(const byte*) mode_hicolecmchar::CHARSET#0/(dword/signed dword) 65536
Constant inlined mode_hicolecmchar::$4 = ((word))(const byte*) mode_hicolecmchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolecmchar::$5 = <((word))(const byte*) mode_hicolecmchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolecmchar::$2 = ((byte))((dword))(const byte*) mode_hicolecmchar::CHARSET#0/(dword/signed dword) 65536
Constant inlined mode_hicolecmchar::$3 = (const byte*) mode_hicolecmchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolecmchar::$8 = >((word))(const byte*) mode_hicolecmchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolecmchar::$9 = ((word))(const byte*) mode_hicolecmchar::CHARSET#0
Constant inlined mode_hicolecmchar::$6 = (const byte*) mode_hicolecmchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolecmchar::$7 = ((word))(const byte*) mode_hicolecmchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_mcchar::$6 = (const byte*) mode_mcchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_twoplanebitmap::$5 = <(const byte*) mode_twoplanebitmap::PLANEA#0
Constant inlined mode_mcchar::$7 = ((word))(const byte*) mode_mcchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_twoplanebitmap::$6 = >(const byte*) mode_twoplanebitmap::PLANEA#0
Constant inlined mode_mcchar::$4 = ((word))(const byte*) mode_mcchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_twoplanebitmap::$7 = <(const byte*) mode_twoplanebitmap::PLANEB#0
Constant inlined mode_mcchar::$5 = <((word))(const byte*) mode_mcchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_twoplanebitmap::$8 = >(const byte*) mode_twoplanebitmap::PLANEB#0
Constant inlined mode_twoplanebitmap::$1 = (const byte) VIC_ECM#0|(const byte) VIC_BMM#0
Constant inlined mode_twoplanebitmap::$2 = (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0
Constant inlined mode_mcchar::$8 = >((word))(const byte*) mode_mcchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_twoplanebitmap::$3 = (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0
Constant inlined mode_mcchar::$9 = ((word))(const byte*) mode_mcchar::CHARSET#0
Constant inlined mode_twoplanebitmap::$4 = (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3
Constant inlined mode_twoplanebitmap::$0 = (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0
Constant inlined mode_mcchar::$2 = ((byte))((dword))(const byte*) mode_mcchar::CHARSET#0/(dword/signed dword) 65536
Constant inlined mode_mcchar::$3 = (const byte*) mode_mcchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_mcchar::$0 = ((dword))(const byte*) mode_mcchar::CHARSET#0
Constant inlined mode_mcchar::$1 = ((dword))(const byte*) mode_mcchar::CHARSET#0/(dword/signed dword) 65536
Constant inlined mode_hicolmcchar::$8 = >((word))(const byte*) mode_hicolmcchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolmcchar::$7 = ((word))(const byte*) mode_hicolmcchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_8bpppixelcell::chargen#0 = ((byte*))(word/dword/signed dword) 53248
Constant inlined mode_hicolmcchar::$6 = (const byte*) mode_hicolmcchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolmcchar::$5 = <((word))(const byte*) mode_hicolmcchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolmcchar::$9 = ((word))(const byte*) mode_hicolmcchar::CHARSET#0
Constant inlined mode_twoplanebitmap::$9 = (const byte*) mode_twoplanebitmap::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolecmchar::$15 = (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(const byte) VIC_ECM#0|(byte/signed byte/word/signed word/dword/signed dword) 3
Constant inlined mode_hicolecmchar::$16 = ((word))(const byte*) mode_hicolecmchar::SCREEN#0
Constant inlined menu::$9 = ((word))(const byte*) menu::CHARSET#0
Constant inlined mode_hicolecmchar::$13 = (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0
Constant inlined mode_8bpppixelcell::i#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_hicolecmchar::$14 = (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(const byte) VIC_ECM#0
Constant inlined menu::$7 = ((word))(const dword) DTV_COLOR_BANK_DEFAULT#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolecmchar::$11 = ((byte))((word))(const byte*) mode_hicolecmchar::CHARSET#0/(word/signed word/dword/signed dword) 16384
Constant inlined menu::$8 = >((word))(const dword) DTV_COLOR_BANK_DEFAULT#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolecmchar::$12 = (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_hicolecmchar::CHARSET#0/(word/signed word/dword/signed dword) 16384
Constant inlined menu::$5 = <((word))(const dword) DTV_COLOR_BANK_DEFAULT#0/(word/signed word/dword/signed dword) 1024
Constant inlined menu::$6 = (const dword) DTV_COLOR_BANK_DEFAULT#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolecmchar::$10 = ((word))(const byte*) mode_hicolecmchar::CHARSET#0/(word/signed word/dword/signed dword) 16384
Constant inlined mode_mcchar::$15 = (const byte) VIC_CSEL#0|(const byte) VIC_MCM#0
Constant inlined mode_hicolmcchar::$0 = ((dword))(const byte*) mode_hicolmcchar::CHARSET#0
Constant inlined mode_mcchar::$16 = ((word))(const byte*) mode_mcchar::SCREEN#0
Constant inlined mode_mcchar::$17 = ((word))(const byte*) mode_mcchar::SCREEN#0&(word/signed word/dword/signed dword) 16383
Constant inlined mode_mcchar::$18 = ((word))(const byte*) mode_mcchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64
Constant inlined mode_mcchar::$19 = ((word))(const byte*) mode_mcchar::CHARSET#0
Constant inlined mode_hicolecmchar::$19 = ((word))(const byte*) mode_hicolecmchar::CHARSET#0
Constant inlined mode_hicolmcchar::$4 = ((word))(const byte*) mode_hicolmcchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolmcchar::$3 = (const byte*) mode_hicolmcchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolecmchar::$17 = ((word))(const byte*) mode_hicolecmchar::SCREEN#0&(word/signed word/dword/signed dword) 16383
Constant inlined mode_hicolmcchar::$2 = ((byte))((dword))(const byte*) mode_hicolmcchar::CHARSET#0/(dword/signed dword) 65536
Constant inlined mode_hicolecmchar::$18 = ((word))(const byte*) mode_hicolecmchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64
Constant inlined mode_hicolmcchar::$1 = ((dword))(const byte*) mode_hicolmcchar::CHARSET#0/(dword/signed dword) 65536
Constant inlined mode_mcchar::$20 = ((word))(const byte*) mode_mcchar::CHARSET#0&(word/signed word/dword/signed dword) 16383
Constant inlined mode_mcchar::$21 = ((word))(const byte*) mode_mcchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024
Constant inlined mode_mcchar::$22 = ((word))(const byte*) mode_mcchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_mcchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolstdchar::$6 = (const byte*) mode_hicolstdchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_mcchar::$23 = ((byte))((word))(const byte*) mode_mcchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_mcchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolstdchar::$7 = ((word))(const byte*) mode_hicolstdchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolstdchar::$8 = >((word))(const byte*) mode_hicolstdchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolstdchar::$9 = ((word))(const byte*) mode_hicolstdchar::CHARSET#0
Constant inlined menu::$3 = (const dword) DTV_COLOR_BANK_DEFAULT#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolstdchar::$2 = ((byte))((dword))(const byte*) mode_hicolstdchar::CHARSET#0/(dword/signed dword) 65536
Constant inlined menu::$4 = ((word))(const dword) DTV_COLOR_BANK_DEFAULT#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolstdchar::$3 = (const byte*) mode_hicolstdchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined menu::$1 = ((dword))(const byte*) menu::CHARSET#0/(dword/signed dword) 65536
Constant inlined mode_hicolstdchar::$4 = ((word))(const byte*) mode_hicolstdchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined menu::$2 = ((byte))((dword))(const byte*) menu::CHARSET#0/(dword/signed dword) 65536
Constant inlined mode_hicolstdchar::$5 = <((word))(const byte*) mode_hicolstdchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined menu::$0 = ((dword))(const byte*) menu::CHARSET#0
Constant inlined mode_hicolstdchar::$0 = ((dword))(const byte*) mode_hicolstdchar::CHARSET#0
Constant inlined mode_hicolstdchar::$1 = ((dword))(const byte*) mode_hicolstdchar::CHARSET#0/(dword/signed dword) 65536
Constant inlined mode_hicolecmchar::$22 = ((word))(const byte*) mode_hicolecmchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_hicolecmchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolecmchar::$23 = ((byte))((word))(const byte*) mode_hicolecmchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_hicolecmchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolecmchar::$20 = ((word))(const byte*) mode_hicolecmchar::CHARSET#0&(word/signed word/dword/signed dword) 16383
Constant inlined mode_hicolecmchar::$21 = ((word))(const byte*) mode_hicolecmchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024
Constant inlined mode_stdchar::$1 = ((dword))(const byte*) mode_stdchar::CHARSET#0/(dword/signed dword) 65536
Constant inlined mode_stdchar::$2 = ((byte))((dword))(const byte*) mode_stdchar::CHARSET#0/(dword/signed dword) 65536
Constant inlined mode_stdchar::$0 = ((dword))(const byte*) mode_stdchar::CHARSET#0
Constant inlined mode_stdchar::$5 = <((word))(const byte*) mode_stdchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined print_cls::sc#0 = (const byte*) menu::SCREEN#0
Constant inlined mode_stdchar::$6 = (const byte*) mode_stdchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_stdchar::$3 = (const byte*) mode_stdchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_stdchar::$4 = ((word))(const byte*) mode_stdchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_stdchar::$9 = ((word))(const byte*) mode_stdchar::CHARSET#0
Constant inlined mode_stdchar::$7 = ((word))(const byte*) mode_stdchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_stdchar::$8 = >((word))(const byte*) mode_stdchar::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_twoplanebitmap::$12 = >(const byte*) mode_twoplanebitmap::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_twoplanebitmap::$11 = (const byte*) mode_twoplanebitmap::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_twoplanebitmap::$10 = <(const byte*) mode_twoplanebitmap::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_sixsfred2::cx#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined print_screen#1 = (const byte*) menu::SCREEN#0
Constant inlined mode_twoplanebitmap::bx#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_sixsfred2::bx#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_sixsfred::ax#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_sixsfred2::cy#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_twoplanebitmap::cy#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_8bppchunkybmm::gfxb#2 = ((byte*))(word/signed word/dword/signed dword) 16384
Constant inlined mode_hicolmcchar::i#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_8bppchunkybmm::gfxbCpuBank#1 = ++((byte))(const dword) mode_8bppchunkybmm::PLANEB#0/(word/signed word/dword/signed dword) 16384
Constant inlined mode_8bppchunkybmm::gfxb#0 = ((byte*))(word/signed word/dword/signed dword) 16384
Constant inlined mode_8bppchunkybmm::gfxbCpuBank#0 = ((byte))(const dword) mode_8bppchunkybmm::PLANEB#0/(word/signed word/dword/signed dword) 16384
Constant inlined menu::$16 = ((word))(const byte*) menu::SCREEN#0&(word/signed word/dword/signed dword) 16383
Constant inlined menu::$17 = ((word))(const byte*) menu::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64
Constant inlined menu::$14 = (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3
Constant inlined menu::$15 = ((word))(const byte*) menu::SCREEN#0
Constant inlined menu::$18 = ((word))(const byte*) menu::CHARSET#0
Constant inlined mode_8bpppixelcell::ch#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined menu::$19 = ((word))(const byte*) menu::CHARSET#0&(word/signed word/dword/signed dword) 16383
Constant inlined mode_8bpppixelcell::c#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_hicolstdchar::i#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_sixsfred2::by#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined menu::$12 = (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) menu::CHARSET#0/(word/signed word/dword/signed dword) 16384
Constant inlined keyboard_key_pressed::key#20 = (const byte) KEY_SPACE#0
Constant inlined menu::$13 = (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0
Constant inlined keyboard_key_pressed::key#21 = (const byte) KEY_SPACE#0
Constant inlined menu::$10 = ((word))(const byte*) menu::CHARSET#0/(word/signed word/dword/signed dword) 16384
Constant inlined mode_8bpppixelcell::cp#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined menu::$11 = ((byte))((word))(const byte*) menu::CHARSET#0/(word/signed word/dword/signed dword) 16384
Constant inlined mode_sixsfred::ay#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_8bpppixelcell::$4 = (const byte) VIC_ECM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3
Constant inlined mode_8bpppixelcell::col#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_8bpppixelcell::$5 = (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0
Constant inlined mode_8bpppixelcell::$2 = (const byte) VIC_ECM#0|(const byte) VIC_DEN#0
Constant inlined mode_8bpppixelcell::$3 = (const byte) VIC_ECM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0
Constant inlined mode_8bpppixelcell::$8 = <(const byte*) mode_8bpppixelcell::PLANEB#0
Constant inlined mode_8bpppixelcell::$9 = >(const byte*) mode_8bpppixelcell::PLANEB#0
Constant inlined mode_8bpppixelcell::$6 = <(const byte*) mode_8bpppixelcell::PLANEA#0
Constant inlined mode_8bpppixelcell::$7 = >(const byte*) mode_8bpppixelcell::PLANEA#0
Constant inlined mode_sixsfred::$10 = (const byte*) mode_sixsfred::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_sixsfred::$11 = <(const byte*) mode_sixsfred::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_8bpppixelcell::$0 = (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0
Constant inlined mode_sixsfred::$12 = (const byte*) mode_sixsfred::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_8bpppixelcell::$1 = (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0|(const byte) DTV_CONTROL_CHUNKY_ON#0
Constant inlined mode_sixsfred::$13 = >(const byte*) mode_sixsfred::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined menu::$20 = ((word))(const byte*) menu::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024
Constant inlined mode_twoplanebitmap::cx#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined menu::$24 = (const byte*) COLS#0+(word/signed word/dword/signed dword) 1000
Constant inlined menu::$21 = ((word))(const byte*) menu::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) menu::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024
Constant inlined menu::$22 = ((byte))((word))(const byte*) menu::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) menu::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024
Constant inlined mode_8bppchunkybmm::$11 = >(const dword) mode_8bppchunkybmm::PLANEB#0
Constant inlined mode_8bppchunkybmm::$12 = <>(const dword) mode_8bppchunkybmm::PLANEB#0
Constant inlined dtvSetCpuBankSegment1::cpuBankIdx#0 = ((byte))(const dword) mode_8bppchunkybmm::PLANEB#0/(word/signed word/dword/signed dword) 16384
Constant inlined mode_8bppchunkybmm::$14 = (const dword) mode_8bppchunkybmm::PLANEB#0/(word/signed word/dword/signed dword) 16384
Constant inlined dtvSetCpuBankSegment1::cpuBankIdx#2 = ((byte))(word/signed word/dword/signed dword) 16384/(word/signed word/dword/signed dword) 16384
Constant inlined mode_twoplanebitmap::ay#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_8bppchunkybmm::$10 = ><(const dword) mode_8bppchunkybmm::PLANEB#0
Constant inlined mode_mcchar::i#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_sixsfred::bx#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_mcchar::cx#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_8bppchunkybmm::$2 = (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0|(const byte) DTV_CONTROL_CHUNKY_ON#0|(const byte) DTV_CONTROL_COLORRAM_OFF#0
Constant inlined mode_8bppchunkybmm::$3 = (const byte) VIC_ECM#0|(const byte) VIC_DEN#0
Constant inlined mode_8bppchunkybmm::$0 = (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0
Constant inlined mode_8bppchunkybmm::$1 = (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0|(const byte) DTV_CONTROL_CHUNKY_ON#0
Constant inlined mode_hicolecmchar::i#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_ecmchar::i#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined keyboard_key_pressed::key#0 = (const byte) KEY_1#0
Constant inlined keyboard_key_pressed::key#13 = (const byte) KEY_SPACE#0
Constant inlined keyboard_key_pressed::key#1 = (const byte) KEY_2#0
Constant inlined keyboard_key_pressed::key#14 = (const byte) KEY_SPACE#0
Constant inlined keyboard_key_pressed::key#15 = (const byte) KEY_SPACE#0
Constant inlined keyboard_key_pressed::key#16 = (const byte) KEY_SPACE#0
Constant inlined mode_hicolmcchar::cy#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined keyboard_key_pressed::key#4 = (const byte) KEY_7#0
Constant inlined keyboard_key_pressed::key#17 = (const byte) KEY_SPACE#0
Constant inlined keyboard_key_pressed::key#5 = (const byte) KEY_8#0
Constant inlined keyboard_key_pressed::key#18 = (const byte) KEY_SPACE#0
Constant inlined keyboard_key_pressed::key#2 = (const byte) KEY_3#0
Constant inlined keyboard_key_pressed::key#19 = (const byte) KEY_SPACE#0
Constant inlined keyboard_key_pressed::key#3 = (const byte) KEY_6#0
Constant inlined mode_sixsfred::cy#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined keyboard_key_pressed::key#8 = (const byte) KEY_C#0
Constant inlined keyboard_key_pressed::key#9 = (const byte) KEY_D#0
Constant inlined mode_8bppchunkybmm::$8 = <<(const dword) mode_8bppchunkybmm::PLANEB#0
Constant inlined keyboard_key_pressed::key#6 = (const byte) KEY_A#0
Constant inlined mode_8bppchunkybmm::$9 = <(const dword) mode_8bppchunkybmm::PLANEB#0
Constant inlined keyboard_key_pressed::key#7 = (const byte) KEY_B#0
Constant inlined mode_8bppchunkybmm::$6 = (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0
Constant inlined mode_ecmchar::cx#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_8bppchunkybmm::$7 = <(const dword) mode_8bppchunkybmm::PLANEB#0
Constant inlined mode_8bppchunkybmm::$4 = (const byte) VIC_ECM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0
Constant inlined mode_8bppchunkybmm::$5 = (const byte) VIC_ECM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3
Constant inlined print_str_lines::str#1 = (const string) MENU_TEXT#0
Constant inlined mode_twoplanebitmap::ax#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_sixsfred2::ax#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined keyboard_key_pressed::key#10 = (const byte) KEY_E#0
Constant inlined keyboard_key_pressed::key#11 = (const byte) KEY_SPACE#0
Constant inlined keyboard_key_pressed::key#12 = (const byte) KEY_SPACE#0
Constant inlined mode_stdchar::$12 = (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_stdchar::CHARSET#0/(word/signed word/dword/signed dword) 16384
Constant inlined mode_sixsfred2::$2 = (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0
Constant inlined mode_sixsfred::by#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_stdchar::$13 = (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0
Constant inlined mode_sixsfred2::$3 = (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3
Constant inlined mode_stdchar::$14 = (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3
Constant inlined mode_sixsfred2::$4 = (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0
Constant inlined mode_stdchar::$15 = ((word))(const byte*) mode_stdchar::SCREEN#0
Constant inlined mode_sixsfred2::$5 = <(const byte*) mode_sixsfred2::PLANEA#0
Constant inlined print_cls::$0 = (const byte*) menu::SCREEN#0+(word/signed word/dword/signed dword) 1000
Constant inlined mode_stdchar::$16 = ((word))(const byte*) mode_stdchar::SCREEN#0&(word/signed word/dword/signed dword) 16383
Constant inlined mode_sixsfred2::$6 = >(const byte*) mode_sixsfred2::PLANEA#0
Constant inlined mode_stdchar::$17 = ((word))(const byte*) mode_stdchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64
Constant inlined mode_sixsfred2::$7 = <(const byte*) mode_sixsfred2::PLANEB#0
Constant inlined mode_stdchar::$18 = ((word))(const byte*) mode_stdchar::CHARSET#0
Constant inlined mode_sixsfred2::$8 = >(const byte*) mode_sixsfred2::PLANEB#0
Constant inlined mode_stdchar::$19 = ((word))(const byte*) mode_stdchar::CHARSET#0&(word/signed word/dword/signed dword) 16383
Constant inlined mode_sixsfred2::$9 = (const byte*) mode_sixsfred2::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_sixsfred2::$11 = (const byte*) mode_sixsfred2::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_sixsfred2::$12 = >(const byte*) mode_sixsfred2::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_mcchar::cy#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_sixsfred2::$10 = <(const byte*) mode_sixsfred2::COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_stdchar::$10 = ((word))(const byte*) mode_stdchar::CHARSET#0/(word/signed word/dword/signed dword) 16384
Constant inlined mode_sixsfred2::$0 = (const byte) VIC_ECM#0|(const byte) VIC_BMM#0
Constant inlined mode_stdchar::$11 = ((byte))((word))(const byte*) mode_stdchar::CHARSET#0/(word/signed word/dword/signed dword) 16384
Constant inlined mode_sixsfred2::$1 = (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0
Constant inlined mode_twoplanebitmap::by#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_8bpppixelcell::cr#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_8bppchunkybmm::$24 = (word/signed word/dword/signed dword) 16384/(word/signed word/dword/signed dword) 16384
Constant inlined mode_ecmchar::cy#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_8bpppixelcell::ax#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_hicolstdchar::$13 = (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0
Constant inlined mode_hicolstdchar::$14 = (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3
Constant inlined mode_hicolstdchar::cy#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_hicolstdchar::$15 = ((word))(const byte*) mode_hicolstdchar::SCREEN#0
Constant inlined mode_hicolstdchar::$16 = ((word))(const byte*) mode_hicolstdchar::SCREEN#0&(word/signed word/dword/signed dword) 16383
Constant inlined mode_hicolstdchar::$17 = ((word))(const byte*) mode_hicolstdchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64
Constant inlined mode_stdchar::$20 = ((word))(const byte*) mode_stdchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolstdchar::$18 = ((word))(const byte*) mode_hicolstdchar::CHARSET#0
Constant inlined mode_stdchar::$21 = ((word))(const byte*) mode_stdchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_stdchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolstdchar::$19 = ((word))(const byte*) mode_hicolstdchar::CHARSET#0&(word/signed word/dword/signed dword) 16383
Constant inlined mode_stdchar::$22 = ((byte))((word))(const byte*) mode_stdchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_stdchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolmcchar::$12 = (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_hicolmcchar::CHARSET#0/(word/signed word/dword/signed dword) 16384
Constant inlined mode_hicolstdchar::$10 = ((word))(const byte*) mode_hicolstdchar::CHARSET#0/(word/signed word/dword/signed dword) 16384
Constant inlined mode_hicolmcchar::$13 = (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0
Constant inlined mode_hicolstdchar::$11 = ((byte))((word))(const byte*) mode_hicolstdchar::CHARSET#0/(word/signed word/dword/signed dword) 16384
Constant inlined mode_hicolmcchar::$10 = ((word))(const byte*) mode_hicolmcchar::CHARSET#0/(word/signed word/dword/signed dword) 16384
Constant inlined mode_hicolstdchar::$12 = (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_hicolstdchar::CHARSET#0/(word/signed word/dword/signed dword) 16384
Constant inlined mode_hicolmcchar::$11 = ((byte))((word))(const byte*) mode_hicolmcchar::CHARSET#0/(word/signed word/dword/signed dword) 16384
Constant inlined mode_hicolmcchar::$16 = ((word))(const byte*) mode_hicolmcchar::SCREEN#0
Constant inlined mode_hicolmcchar::$17 = ((word))(const byte*) mode_hicolmcchar::SCREEN#0&(word/signed word/dword/signed dword) 16383
Constant inlined mode_hicolmcchar::$14 = (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3
Constant inlined mode_hicolmcchar::$15 = (const byte) VIC_CSEL#0|(const byte) VIC_MCM#0
Constant inlined mode_sixsfred2::ay#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_hicolmcchar::$18 = ((word))(const byte*) mode_hicolmcchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64
Constant inlined mode_hicolmcchar::$19 = ((word))(const byte*) mode_hicolmcchar::CHARSET#0
Constant inlined menu::i#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_stdchar::i#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_hicolmcchar::$20 = ((word))(const byte*) mode_hicolmcchar::CHARSET#0&(word/signed word/dword/signed dword) 16383
Constant inlined mode_hicolstdchar::$20 = ((word))(const byte*) mode_hicolstdchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolmcchar::$23 = ((byte))((word))(const byte*) mode_hicolmcchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_hicolmcchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolstdchar::$21 = ((word))(const byte*) mode_hicolstdchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_hicolstdchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolstdchar::$22 = ((byte))((word))(const byte*) mode_hicolstdchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_hicolstdchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolmcchar::$21 = ((word))(const byte*) mode_hicolmcchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolmcchar::$22 = ((word))(const byte*) mode_hicolmcchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_hicolmcchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024
Constant inlined mode_sixsfred2::i#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_8bppchunkybmm::y#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_8bpppixelcell::ay#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_sixsfred::i#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_hicolstdchar::cx#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_mcchar::$10 = ((word))(const byte*) mode_mcchar::CHARSET#0/(word/signed word/dword/signed dword) 16384
Constant inlined mode_8bppchunkybmm::i#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_mcchar::$11 = ((byte))((word))(const byte*) mode_mcchar::CHARSET#0/(word/signed word/dword/signed dword) 16384
Constant inlined mode_mcchar::$12 = (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_mcchar::CHARSET#0/(word/signed word/dword/signed dword) 16384
Constant inlined mode_mcchar::$13 = (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0
Constant inlined mode_mcchar::$14 = (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3
Constant inlined mode_hicolecmchar::cy#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_sixsfred::$1 = (const byte) VIC_ECM#0|(const byte) VIC_BMM#0
Constant inlined mode_sixsfred::$0 = (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0
Constant inlined mode_sixsfred::$3 = (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0
Constant inlined mode_sixsfred::$2 = (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0
Constant inlined mode_sixsfred::$5 = (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0
Constant inlined mode_sixsfred::$4 = (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3
Constant inlined mode_sixsfred::$7 = >(const byte*) mode_sixsfred::PLANEA#0
Constant inlined mode_ecmchar::$23 = ((byte))((word))(const byte*) mode_ecmchar::ECMCHAR_SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024
Constant inlined mode_sixsfred::$6 = <(const byte*) mode_sixsfred::PLANEA#0
Constant inlined mode_stdchar::cx#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_ecmchar::$22 = ((word))(const byte*) mode_ecmchar::ECMCHAR_SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024
Constant inlined mode_sixsfred::$9 = >(const byte*) mode_sixsfred::PLANEB#0
Constant inlined mode_ecmchar::$21 = ((word))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024
Constant inlined mode_sixsfred::$8 = <(const byte*) mode_sixsfred::PLANEB#0
Constant inlined mode_ecmchar::$20 = ((word))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0&(word/signed word/dword/signed dword) 16383
Constant inlined mode_ecmchar::$2 = ((byte))((dword))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0/(dword/signed dword) 65536
Constant inlined mode_ecmchar::$1 = ((dword))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0/(dword/signed dword) 65536
Constant inlined mode_ecmchar::$0 = ((dword))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0
Constant inlined mode_ecmchar::$19 = ((word))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0
Constant inlined mode_ecmchar::$18 = ((word))(const byte*) mode_ecmchar::ECMCHAR_SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64
Constant inlined mode_ecmchar::$17 = ((word))(const byte*) mode_ecmchar::ECMCHAR_SCREEN#0&(word/signed word/dword/signed dword) 16383
Constant inlined print_set_screen::screen#0 = (const byte*) menu::SCREEN#0
Constant inlined mode_ecmchar::$16 = ((word))(const byte*) mode_ecmchar::ECMCHAR_SCREEN#0
Constant inlined mode_ecmchar::$9 = ((word))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0
Constant inlined mode_ecmchar::$8 = >((word))(const byte*) mode_ecmchar::ECMCHAR_COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_ecmchar::$7 = ((word))(const byte*) mode_ecmchar::ECMCHAR_COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_twoplanebitmap::i#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_ecmchar::$6 = (const byte*) mode_ecmchar::ECMCHAR_COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_ecmchar::$5 = <((word))(const byte*) mode_ecmchar::ECMCHAR_COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_ecmchar::$4 = ((word))(const byte*) mode_ecmchar::ECMCHAR_COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_ecmchar::$3 = (const byte*) mode_ecmchar::ECMCHAR_COLORS#0/(word/signed word/dword/signed dword) 1024
Constant inlined mode_hicolmcchar::cx#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_8bppchunkybmm::x#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_sixsfred::cx#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined mode_ecmchar::$15 = (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(const byte) VIC_ECM#0|(byte/signed byte/word/signed word/dword/signed dword) 3
Constant inlined mode_ecmchar::$14 = (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(const byte) VIC_ECM#0
Constant inlined mode_ecmchar::$13 = (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0
Constant inlined mode_ecmchar::$12 = (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0/(word/signed word/dword/signed dword) 16384
Constant inlined mode_ecmchar::$11 = ((byte))((word))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0/(word/signed word/dword/signed dword) 16384
Constant inlined mode_ecmchar::$10 = ((word))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0/(word/signed word/dword/signed dword) 16384
Constant inlined mode_stdchar::cy#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Succesful SSA optimization Pass2ConstantInlining
Block Sequence Planned @begin @32 @end main main::@1 main::@return main::@2 menu menu::@1 menu::@2 menu::@18 menu::@44 menu::@45 menu::@3 menu::@return menu::@4 menu::@47 menu::@21 menu::@6 menu::@48 menu::@23 menu::@7 menu::@50 menu::@25 menu::@8 menu::@52 menu::@27 menu::@9 menu::@54 menu::@29 menu::@10 menu::@56 menu::@31 menu::@11 menu::@58 menu::@33 menu::@12 menu::@60 menu::@35 menu::@13 menu::@62 menu::@37 menu::@14 menu::@64 menu::@39 menu::@15 menu::@66 menu::@41 mode_8bppchunkybmm mode_8bppchunkybmm::@1 mode_8bppchunkybmm::@9 mode_8bppchunkybmm::@2 mode_8bppchunkybmm::@3 mode_8bppchunkybmm::@10 mode_8bppchunkybmm::@19 mode_8bppchunkybmm::@4 mode_8bppchunkybmm::@11 mode_8bppchunkybmm::@12 mode_8bppchunkybmm::@5 mode_8bppchunkybmm::@return mode_8bppchunkybmm::@6 mode_8bppchunkybmm::@21 keyboard_key_pressed keyboard_key_pressed::@2 keyboard_key_pressed::@return keyboard_matrix_read keyboard_matrix_read::@return dtvSetCpuBankSegment1 dtvSetCpuBankSegment1::@return mode_8bpppixelcell mode_8bpppixelcell::@1 mode_8bpppixelcell::@2 mode_8bpppixelcell::@3 mode_8bpppixelcell::@13 mode_8bpppixelcell::@14 mode_8bpppixelcell::@4 mode_8bpppixelcell::@5 mode_8bpppixelcell::@6 mode_8bpppixelcell::@15 mode_8bpppixelcell::@7 mode_8bpppixelcell::@16 mode_8bpppixelcell::@17 mode_8bpppixelcell::@18 mode_8bpppixelcell::@8 mode_8bpppixelcell::@return mode_8bpppixelcell::@9 mode_8bpppixelcell::@24 mode_sixsfred mode_sixsfred::@1 mode_sixsfred::@12 mode_sixsfred::@2 mode_sixsfred::@3 mode_sixsfred::@13 mode_sixsfred::@4 mode_sixsfred::@5 mode_sixsfred::@15 mode_sixsfred::@6 mode_sixsfred::@7 mode_sixsfred::@17 mode_sixsfred::@8 mode_sixsfred::@return mode_sixsfred::@9 mode_sixsfred::@24 mode_twoplanebitmap mode_twoplanebitmap::@1 mode_twoplanebitmap::@14 mode_twoplanebitmap::@2 mode_twoplanebitmap::@3 mode_twoplanebitmap::@15 mode_twoplanebitmap::@4 mode_twoplanebitmap::@5 mode_twoplanebitmap::@17 mode_twoplanebitmap::@7 mode_twoplanebitmap::@19 mode_twoplanebitmap::@8 mode_twoplanebitmap::@9 mode_twoplanebitmap::@21 mode_twoplanebitmap::@10 mode_twoplanebitmap::@return mode_twoplanebitmap::@11 mode_twoplanebitmap::@28 mode_twoplanebitmap::@6 mode_sixsfred2 mode_sixsfred2::@1 mode_sixsfred2::@12 mode_sixsfred2::@2 mode_sixsfred2::@3 mode_sixsfred2::@13 mode_sixsfred2::@4 mode_sixsfred2::@5 mode_sixsfred2::@15 mode_sixsfred2::@6 mode_sixsfred2::@7 mode_sixsfred2::@17 mode_sixsfred2::@8 mode_sixsfred2::@return mode_sixsfred2::@9 mode_sixsfred2::@24 mode_hicolmcchar mode_hicolmcchar::@1 mode_hicolmcchar::@8 mode_hicolmcchar::@2 mode_hicolmcchar::@3 mode_hicolmcchar::@9 mode_hicolmcchar::@4 mode_hicolmcchar::@return mode_hicolmcchar::@5 mode_hicolmcchar::@16 mode_hicolecmchar mode_hicolecmchar::@1 mode_hicolecmchar::@8 mode_hicolecmchar::@2 mode_hicolecmchar::@3 mode_hicolecmchar::@9 mode_hicolecmchar::@4 mode_hicolecmchar::@return mode_hicolecmchar::@5 mode_hicolecmchar::@16 mode_hicolstdchar mode_hicolstdchar::@1 mode_hicolstdchar::@8 mode_hicolstdchar::@2 mode_hicolstdchar::@3 mode_hicolstdchar::@9 mode_hicolstdchar::@4 mode_hicolstdchar::@return mode_hicolstdchar::@5 mode_hicolstdchar::@16 mode_mcchar mode_mcchar::@1 mode_mcchar::@8 mode_mcchar::@2 mode_mcchar::@3 mode_mcchar::@9 mode_mcchar::@4 mode_mcchar::@return mode_mcchar::@5 mode_mcchar::@16 mode_ecmchar mode_ecmchar::@1 mode_ecmchar::@8 mode_ecmchar::@2 mode_ecmchar::@3 mode_ecmchar::@9 mode_ecmchar::@4 mode_ecmchar::@return mode_ecmchar::@5 mode_ecmchar::@16 mode_stdchar mode_stdchar::@1 mode_stdchar::@8 mode_stdchar::@2 mode_stdchar::@3 mode_stdchar::@9 mode_stdchar::@4 mode_stdchar::@return mode_stdchar::@5 mode_stdchar::@16 print_str_lines print_str_lines::@1 print_str_lines::@return print_str_lines::@4 print_str_lines::@8 print_str_lines::@5 print_str_lines::@9 print_ln print_ln::@1 print_ln::@return print_cls print_cls::@1 print_cls::@return print_set_screen print_set_screen::@return 
Added new block during phi lifting menu::@69(between menu::@1 and menu::@1)
Added new block during phi lifting menu::@70(between menu::@2 and menu::@2)
Added new block during phi lifting mode_8bppchunkybmm::@22(between mode_8bppchunkybmm::@1 and mode_8bppchunkybmm::@1)
Added new block during phi lifting mode_8bppchunkybmm::@23(between mode_8bppchunkybmm::@11 and mode_8bppchunkybmm::@2)
Added new block during phi lifting mode_8bppchunkybmm::@24(between mode_8bppchunkybmm::@4 and mode_8bppchunkybmm::@3)
Added new block during phi lifting mode_8bppchunkybmm::@25(between mode_8bppchunkybmm::@3 and mode_8bppchunkybmm::@4)
Added new block during phi lifting mode_8bpppixelcell::@25(between mode_8bpppixelcell::@1 and mode_8bpppixelcell::@1)
Added new block during phi lifting mode_8bpppixelcell::@26(between mode_8bpppixelcell::@13 and mode_8bpppixelcell::@2)
Added new block during phi lifting mode_8bpppixelcell::@27(between mode_8bpppixelcell::@3 and mode_8bpppixelcell::@3)
Added new block during phi lifting mode_8bpppixelcell::@28(between mode_8bpppixelcell::@17 and mode_8bpppixelcell::@4)
Added new block during phi lifting mode_8bpppixelcell::@29(between mode_8bpppixelcell::@16 and mode_8bpppixelcell::@5)
Added new block during phi lifting mode_8bpppixelcell::@30(between mode_8bpppixelcell::@7 and mode_8bpppixelcell::@6)
Added new block during phi lifting mode_sixsfred::@25(between mode_sixsfred::@1 and mode_sixsfred::@1)
Added new block during phi lifting mode_sixsfred::@26(between mode_sixsfred::@13 and mode_sixsfred::@2)
Added new block during phi lifting mode_sixsfred::@27(between mode_sixsfred::@3 and mode_sixsfred::@3)
Added new block during phi lifting mode_sixsfred::@28(between mode_sixsfred::@15 and mode_sixsfred::@4)
Added new block during phi lifting mode_sixsfred::@29(between mode_sixsfred::@5 and mode_sixsfred::@5)
Added new block during phi lifting mode_sixsfred::@30(between mode_sixsfred::@17 and mode_sixsfred::@6)
Added new block during phi lifting mode_sixsfred::@31(between mode_sixsfred::@7 and mode_sixsfred::@7)
Added new block during phi lifting mode_twoplanebitmap::@29(between mode_twoplanebitmap::@1 and mode_twoplanebitmap::@1)
Added new block during phi lifting mode_twoplanebitmap::@30(between mode_twoplanebitmap::@15 and mode_twoplanebitmap::@2)
Added new block during phi lifting mode_twoplanebitmap::@31(between mode_twoplanebitmap::@3 and mode_twoplanebitmap::@3)
Added new block during phi lifting mode_twoplanebitmap::@32(between mode_twoplanebitmap::@19 and mode_twoplanebitmap::@4)
Added new block during phi lifting mode_twoplanebitmap::@33(between mode_twoplanebitmap::@7 and mode_twoplanebitmap::@5)
Added new block during phi lifting mode_twoplanebitmap::@34(between mode_twoplanebitmap::@21 and mode_twoplanebitmap::@8)
Added new block during phi lifting mode_twoplanebitmap::@35(between mode_twoplanebitmap::@9 and mode_twoplanebitmap::@9)
Added new block during phi lifting mode_sixsfred2::@25(between mode_sixsfred2::@1 and mode_sixsfred2::@1)
Added new block during phi lifting mode_sixsfred2::@26(between mode_sixsfred2::@13 and mode_sixsfred2::@2)
Added new block during phi lifting mode_sixsfred2::@27(between mode_sixsfred2::@3 and mode_sixsfred2::@3)
Added new block during phi lifting mode_sixsfred2::@28(between mode_sixsfred2::@15 and mode_sixsfred2::@4)
Added new block during phi lifting mode_sixsfred2::@29(between mode_sixsfred2::@5 and mode_sixsfred2::@5)
Added new block during phi lifting mode_sixsfred2::@30(between mode_sixsfred2::@17 and mode_sixsfred2::@6)
Added new block during phi lifting mode_sixsfred2::@31(between mode_sixsfred2::@7 and mode_sixsfred2::@7)
Added new block during phi lifting mode_hicolmcchar::@17(between mode_hicolmcchar::@1 and mode_hicolmcchar::@1)
Added new block during phi lifting mode_hicolmcchar::@18(between mode_hicolmcchar::@9 and mode_hicolmcchar::@2)
Added new block during phi lifting mode_hicolmcchar::@19(between mode_hicolmcchar::@3 and mode_hicolmcchar::@3)
Added new block during phi lifting mode_hicolecmchar::@17(between mode_hicolecmchar::@1 and mode_hicolecmchar::@1)
Added new block during phi lifting mode_hicolecmchar::@18(between mode_hicolecmchar::@9 and mode_hicolecmchar::@2)
Added new block during phi lifting mode_hicolecmchar::@19(between mode_hicolecmchar::@3 and mode_hicolecmchar::@3)
Added new block during phi lifting mode_hicolstdchar::@17(between mode_hicolstdchar::@1 and mode_hicolstdchar::@1)
Added new block during phi lifting mode_hicolstdchar::@18(between mode_hicolstdchar::@9 and mode_hicolstdchar::@2)
Added new block during phi lifting mode_hicolstdchar::@19(between mode_hicolstdchar::@3 and mode_hicolstdchar::@3)
Added new block during phi lifting mode_mcchar::@17(between mode_mcchar::@1 and mode_mcchar::@1)
Added new block during phi lifting mode_mcchar::@18(between mode_mcchar::@9 and mode_mcchar::@2)
Added new block during phi lifting mode_mcchar::@19(between mode_mcchar::@3 and mode_mcchar::@3)
Added new block during phi lifting mode_ecmchar::@17(between mode_ecmchar::@1 and mode_ecmchar::@1)
Added new block during phi lifting mode_ecmchar::@18(between mode_ecmchar::@9 and mode_ecmchar::@2)
Added new block during phi lifting mode_ecmchar::@19(between mode_ecmchar::@3 and mode_ecmchar::@3)
Added new block during phi lifting mode_stdchar::@17(between mode_stdchar::@1 and mode_stdchar::@1)
Added new block during phi lifting mode_stdchar::@18(between mode_stdchar::@9 and mode_stdchar::@2)
Added new block during phi lifting mode_stdchar::@19(between mode_stdchar::@3 and mode_stdchar::@3)
Added new block during phi lifting print_str_lines::@12(between print_str_lines::@1 and print_str_lines::@4)
Added new block during phi lifting print_str_lines::@13(between print_str_lines::@5 and print_str_lines::@4)
Added new block during phi lifting print_str_lines::@14(between print_str_lines::@4 and print_str_lines::@5)
Added new block during phi lifting print_ln::@3(between print_ln::@1 and print_ln::@1)
Added new block during phi lifting print_cls::@3(between print_cls::@1 and print_cls::@1)
Block Sequence Planned @begin @32 @end main main::@1 main::@return main::@2 menu menu::@1 menu::@2 menu::@18 menu::@44 menu::@45 menu::@3 menu::@return menu::@4 menu::@47 menu::@21 menu::@6 menu::@48 menu::@23 menu::@7 menu::@50 menu::@25 menu::@8 menu::@52 menu::@27 menu::@9 menu::@54 menu::@29 menu::@10 menu::@56 menu::@31 menu::@11 menu::@58 menu::@33 menu::@12 menu::@60 menu::@35 menu::@13 menu::@62 menu::@37 menu::@14 menu::@64 menu::@39 menu::@15 menu::@66 menu::@41 menu::@70 menu::@69 mode_8bppchunkybmm mode_8bppchunkybmm::@1 mode_8bppchunkybmm::@9 mode_8bppchunkybmm::@2 mode_8bppchunkybmm::@3 mode_8bppchunkybmm::@10 mode_8bppchunkybmm::@19 mode_8bppchunkybmm::@4 mode_8bppchunkybmm::@11 mode_8bppchunkybmm::@12 mode_8bppchunkybmm::@5 mode_8bppchunkybmm::@return mode_8bppchunkybmm::@6 mode_8bppchunkybmm::@21 mode_8bppchunkybmm::@23 mode_8bppchunkybmm::@24 mode_8bppchunkybmm::@25 mode_8bppchunkybmm::@22 keyboard_key_pressed keyboard_key_pressed::@2 keyboard_key_pressed::@return keyboard_matrix_read keyboard_matrix_read::@return dtvSetCpuBankSegment1 dtvSetCpuBankSegment1::@return mode_8bpppixelcell mode_8bpppixelcell::@1 mode_8bpppixelcell::@2 mode_8bpppixelcell::@3 mode_8bpppixelcell::@13 mode_8bpppixelcell::@14 mode_8bpppixelcell::@4 mode_8bpppixelcell::@5 mode_8bpppixelcell::@6 mode_8bpppixelcell::@15 mode_8bpppixelcell::@7 mode_8bpppixelcell::@16 mode_8bpppixelcell::@17 mode_8bpppixelcell::@18 mode_8bpppixelcell::@8 mode_8bpppixelcell::@return mode_8bpppixelcell::@9 mode_8bpppixelcell::@24 mode_8bpppixelcell::@28 mode_8bpppixelcell::@29 mode_8bpppixelcell::@30 mode_8bpppixelcell::@26 mode_8bpppixelcell::@27 mode_8bpppixelcell::@25 mode_sixsfred mode_sixsfred::@1 mode_sixsfred::@12 mode_sixsfred::@2 mode_sixsfred::@3 mode_sixsfred::@13 mode_sixsfred::@4 mode_sixsfred::@5 mode_sixsfred::@15 mode_sixsfred::@6 mode_sixsfred::@7 mode_sixsfred::@17 mode_sixsfred::@8 mode_sixsfred::@return mode_sixsfred::@9 mode_sixsfred::@24 mode_sixsfred::@30 mode_sixsfred::@31 mode_sixsfred::@28 mode_sixsfred::@29 mode_sixsfred::@26 mode_sixsfred::@27 mode_sixsfred::@25 mode_twoplanebitmap mode_twoplanebitmap::@1 mode_twoplanebitmap::@14 mode_twoplanebitmap::@2 mode_twoplanebitmap::@3 mode_twoplanebitmap::@15 mode_twoplanebitmap::@4 mode_twoplanebitmap::@5 mode_twoplanebitmap::@17 mode_twoplanebitmap::@7 mode_twoplanebitmap::@19 mode_twoplanebitmap::@8 mode_twoplanebitmap::@9 mode_twoplanebitmap::@21 mode_twoplanebitmap::@10 mode_twoplanebitmap::@return mode_twoplanebitmap::@11 mode_twoplanebitmap::@28 mode_twoplanebitmap::@34 mode_twoplanebitmap::@35 mode_twoplanebitmap::@32 mode_twoplanebitmap::@33 mode_twoplanebitmap::@6 mode_twoplanebitmap::@30 mode_twoplanebitmap::@31 mode_twoplanebitmap::@29 mode_sixsfred2 mode_sixsfred2::@1 mode_sixsfred2::@12 mode_sixsfred2::@2 mode_sixsfred2::@3 mode_sixsfred2::@13 mode_sixsfred2::@4 mode_sixsfred2::@5 mode_sixsfred2::@15 mode_sixsfred2::@6 mode_sixsfred2::@7 mode_sixsfred2::@17 mode_sixsfred2::@8 mode_sixsfred2::@return mode_sixsfred2::@9 mode_sixsfred2::@24 mode_sixsfred2::@30 mode_sixsfred2::@31 mode_sixsfred2::@28 mode_sixsfred2::@29 mode_sixsfred2::@26 mode_sixsfred2::@27 mode_sixsfred2::@25 mode_hicolmcchar mode_hicolmcchar::@1 mode_hicolmcchar::@8 mode_hicolmcchar::@2 mode_hicolmcchar::@3 mode_hicolmcchar::@9 mode_hicolmcchar::@4 mode_hicolmcchar::@return mode_hicolmcchar::@5 mode_hicolmcchar::@16 mode_hicolmcchar::@18 mode_hicolmcchar::@19 mode_hicolmcchar::@17 mode_hicolecmchar mode_hicolecmchar::@1 mode_hicolecmchar::@8 mode_hicolecmchar::@2 mode_hicolecmchar::@3 mode_hicolecmchar::@9 mode_hicolecmchar::@4 mode_hicolecmchar::@return mode_hicolecmchar::@5 mode_hicolecmchar::@16 mode_hicolecmchar::@18 mode_hicolecmchar::@19 mode_hicolecmchar::@17 mode_hicolstdchar mode_hicolstdchar::@1 mode_hicolstdchar::@8 mode_hicolstdchar::@2 mode_hicolstdchar::@3 mode_hicolstdchar::@9 mode_hicolstdchar::@4 mode_hicolstdchar::@return mode_hicolstdchar::@5 mode_hicolstdchar::@16 mode_hicolstdchar::@18 mode_hicolstdchar::@19 mode_hicolstdchar::@17 mode_mcchar mode_mcchar::@1 mode_mcchar::@8 mode_mcchar::@2 mode_mcchar::@3 mode_mcchar::@9 mode_mcchar::@4 mode_mcchar::@return mode_mcchar::@5 mode_mcchar::@16 mode_mcchar::@18 mode_mcchar::@19 mode_mcchar::@17 mode_ecmchar mode_ecmchar::@1 mode_ecmchar::@8 mode_ecmchar::@2 mode_ecmchar::@3 mode_ecmchar::@9 mode_ecmchar::@4 mode_ecmchar::@return mode_ecmchar::@5 mode_ecmchar::@16 mode_ecmchar::@18 mode_ecmchar::@19 mode_ecmchar::@17 mode_stdchar mode_stdchar::@1 mode_stdchar::@8 mode_stdchar::@2 mode_stdchar::@3 mode_stdchar::@9 mode_stdchar::@4 mode_stdchar::@return mode_stdchar::@5 mode_stdchar::@16 mode_stdchar::@18 mode_stdchar::@19 mode_stdchar::@17 print_str_lines print_str_lines::@1 print_str_lines::@return print_str_lines::@12 print_str_lines::@4 print_str_lines::@8 print_str_lines::@5 print_str_lines::@9 print_str_lines::@13 print_str_lines::@14 print_ln print_ln::@1 print_ln::@return print_ln::@3 print_cls print_cls::@1 print_cls::@return print_cls::@3 print_set_screen print_set_screen::@return 
Adding NOP phi() at start of @begin
Adding NOP phi() at start of @32
Adding NOP phi() at start of @end
Adding NOP phi() at start of main::@2
Adding NOP phi() at start of menu::@44
Adding NOP phi() at start of menu::@45
Adding NOP phi() at start of menu::@4
Adding NOP phi() at start of menu::@21
Adding NOP phi() at start of menu::@6
Adding NOP phi() at start of menu::@23
Adding NOP phi() at start of menu::@7
Adding NOP phi() at start of menu::@25
Adding NOP phi() at start of menu::@8
Adding NOP phi() at start of menu::@27
Adding NOP phi() at start of menu::@9
Adding NOP phi() at start of menu::@29
Adding NOP phi() at start of menu::@10
Adding NOP phi() at start of menu::@31
Adding NOP phi() at start of menu::@11
Adding NOP phi() at start of menu::@33
Adding NOP phi() at start of menu::@12
Adding NOP phi() at start of menu::@35
Adding NOP phi() at start of menu::@13
Adding NOP phi() at start of menu::@37
Adding NOP phi() at start of menu::@14
Adding NOP phi() at start of menu::@39
Adding NOP phi() at start of menu::@15
Adding NOP phi() at start of menu::@41
Adding NOP phi() at start of mode_8bppchunkybmm::@9
Adding NOP phi() at start of mode_8bppchunkybmm::@12
Adding NOP phi() at start of mode_8bppchunkybmm::@6
Adding NOP phi() at start of mode_8bpppixelcell::@9
Adding NOP phi() at start of mode_sixsfred::@9
Adding NOP phi() at start of mode_twoplanebitmap::@11
Adding NOP phi() at start of mode_sixsfred2::@9
Adding NOP phi() at start of mode_hicolmcchar::@5
Adding NOP phi() at start of mode_hicolecmchar::@5
Adding NOP phi() at start of mode_hicolstdchar::@5
Adding NOP phi() at start of mode_mcchar::@5
Adding NOP phi() at start of mode_ecmchar::@5
Adding NOP phi() at start of mode_stdchar::@5
Adding NOP phi() at start of print_str_lines
Adding NOP phi() at start of print_str_lines::@9
Adding NOP phi() at start of print_cls
Adding NOP phi() at start of print_set_screen
CALL GRAPH
Calls in [] to main:2 
Calls in [main] to menu:9 
Calls in [menu] to print_set_screen:29 print_cls:31 print_str_lines:33 keyboard_key_pressed:37 mode_stdchar:42 keyboard_key_pressed:44 mode_ecmchar:49 keyboard_key_pressed:51 mode_mcchar:56 keyboard_key_pressed:58 mode_hicolstdchar:63 keyboard_key_pressed:65 mode_hicolecmchar:70 keyboard_key_pressed:72 mode_hicolmcchar:77 keyboard_key_pressed:79 mode_sixsfred2:84 keyboard_key_pressed:86 mode_twoplanebitmap:91 keyboard_key_pressed:93 mode_sixsfred:98 keyboard_key_pressed:100 mode_8bpppixelcell:105 keyboard_key_pressed:107 mode_8bppchunkybmm:112 
Calls in [mode_8bppchunkybmm] to dtvSetCpuBankSegment1:130 dtvSetCpuBankSegment1:138 dtvSetCpuBankSegment1:151 keyboard_key_pressed:155 
Calls in [keyboard_key_pressed] to keyboard_matrix_read:172 
Calls in [mode_8bpppixelcell] to keyboard_key_pressed:247 
Calls in [mode_sixsfred] to keyboard_key_pressed:324 
Calls in [mode_twoplanebitmap] to keyboard_key_pressed:403 
Calls in [mode_sixsfred2] to keyboard_key_pressed:481 
Calls in [mode_hicolmcchar] to keyboard_key_pressed:534 
Calls in [mode_hicolecmchar] to keyboard_key_pressed:582 
Calls in [mode_hicolstdchar] to keyboard_key_pressed:627 
Calls in [mode_mcchar] to keyboard_key_pressed:676 
Calls in [mode_ecmchar] to keyboard_key_pressed:726 
Calls in [mode_stdchar] to keyboard_key_pressed:773 
Calls in [print_str_lines] to print_ln:800 

Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Created 121 initial phi equivalence classes
Coalesced [113] menu::c#3 ← menu::c#1
Coalesced [114] menu::i#3 ← menu::i#1
Coalesced [132] mode_8bppchunkybmm::gfxb#8 ← mode_8bppchunkybmm::gfxb#5
Coalesced [133] mode_8bppchunkybmm::gfxbCpuBank#11 ← mode_8bppchunkybmm::gfxbCpuBank#7
Coalesced [137] dtvSetCpuBankSegment1::cpuBankIdx#4 ← dtvSetCpuBankSegment1::cpuBankIdx#1
Coalesced [140] mode_8bppchunkybmm::gfxbCpuBank#13 ← mode_8bppchunkybmm::gfxbCpuBank#2
Coalesced [159] mode_8bppchunkybmm::gfxb#7 ← mode_8bppchunkybmm::gfxb#1
Coalesced [160] mode_8bppchunkybmm::y#8 ← mode_8bppchunkybmm::y#1
Coalesced [161] mode_8bppchunkybmm::gfxbCpuBank#10 ← mode_8bppchunkybmm::gfxbCpuBank#8
Coalesced (already) [162] mode_8bppchunkybmm::gfxb#9 ← mode_8bppchunkybmm::gfxb#1
Coalesced [163] mode_8bppchunkybmm::x#6 ← mode_8bppchunkybmm::x#1
Coalesced (already) [164] mode_8bppchunkybmm::gfxbCpuBank#12 ← mode_8bppchunkybmm::gfxbCpuBank#8
Coalesced [165] mode_8bppchunkybmm::gfxb#10 ← mode_8bppchunkybmm::gfxb#3
Coalesced (already) [166] mode_8bppchunkybmm::gfxbCpuBank#14 ← mode_8bppchunkybmm::gfxbCpuBank#4
Coalesced [167] mode_8bppchunkybmm::i#3 ← mode_8bppchunkybmm::i#1
Coalesced [205] mode_8bpppixelcell::gfxa#6 ← mode_8bpppixelcell::gfxa#3
Coalesced [219] mode_8bpppixelcell::chargen#11 ← mode_8bpppixelcell::chargen#4
Coalesced [220] mode_8bpppixelcell::gfxb#11 ← mode_8bpppixelcell::gfxb#7
Coalesced [221] mode_8bpppixelcell::col#11 ← mode_8bpppixelcell::col#7
Coalesced [225] mode_8bpppixelcell::bits#5 ← mode_8bpppixelcell::bits#0
Coalesced [226] mode_8bpppixelcell::gfxb#12 ← mode_8bpppixelcell::gfxb#5
Coalesced [227] mode_8bpppixelcell::col#12 ← mode_8bpppixelcell::col#5
Not coalescing [231] mode_8bpppixelcell::c#3 ← mode_8bpppixelcell::col#2
Coalesced [251] mode_8bpppixelcell::chargen#9 ← mode_8bpppixelcell::chargen#1
Coalesced [252] mode_8bpppixelcell::gfxb#9 ← mode_8bpppixelcell::gfxb#1
Coalesced [253] mode_8bpppixelcell::col#9 ← mode_8bpppixelcell::col#1
Coalesced [254] mode_8bpppixelcell::ch#9 ← mode_8bpppixelcell::ch#1
Coalesced (already) [255] mode_8bpppixelcell::chargen#10 ← mode_8bpppixelcell::chargen#1
Coalesced (already) [256] mode_8bpppixelcell::gfxb#10 ← mode_8bpppixelcell::gfxb#1
Coalesced (already) [257] mode_8bpppixelcell::col#10 ← mode_8bpppixelcell::col#1
Coalesced [258] mode_8bpppixelcell::cr#7 ← mode_8bpppixelcell::cr#1
Coalesced [259] mode_8bpppixelcell::bits#6 ← mode_8bpppixelcell::bits#1
Coalesced (already) [260] mode_8bpppixelcell::gfxb#13 ← mode_8bpppixelcell::gfxb#1
Coalesced (already) [261] mode_8bpppixelcell::col#13 ← mode_8bpppixelcell::col#1
Coalesced [262] mode_8bpppixelcell::cp#5 ← mode_8bpppixelcell::cp#1
Coalesced [263] mode_8bpppixelcell::ay#5 ← mode_8bpppixelcell::ay#1
Coalesced [264] mode_8bpppixelcell::gfxa#5 ← mode_8bpppixelcell::gfxa#1
Coalesced [265] mode_8bpppixelcell::ax#3 ← mode_8bpppixelcell::ax#1
Coalesced (already) [266] mode_8bpppixelcell::gfxa#7 ← mode_8bpppixelcell::gfxa#1
Coalesced [267] mode_8bpppixelcell::i#3 ← mode_8bpppixelcell::i#1
Coalesced [291] mode_sixsfred::col#6 ← mode_sixsfred::col#3
Coalesced [302] mode_sixsfred::gfxa#6 ← mode_sixsfred::gfxa#3
Coalesced [313] mode_sixsfred::gfxb#6 ← mode_sixsfred::gfxb#3
Coalesced [328] mode_sixsfred::gfxb#5 ← mode_sixsfred::gfxb#1
Coalesced [329] mode_sixsfred::by#5 ← mode_sixsfred::by#1
Coalesced (already) [330] mode_sixsfred::gfxb#7 ← mode_sixsfred::gfxb#1
Coalesced [331] mode_sixsfred::bx#3 ← mode_sixsfred::bx#1
Coalesced [332] mode_sixsfred::ay#5 ← mode_sixsfred::ay#1
Coalesced [333] mode_sixsfred::gfxa#5 ← mode_sixsfred::gfxa#1
Coalesced (already) [334] mode_sixsfred::gfxa#7 ← mode_sixsfred::gfxa#1
Coalesced [335] mode_sixsfred::ax#3 ← mode_sixsfred::ax#1
Coalesced [336] mode_sixsfred::cy#5 ← mode_sixsfred::cy#1
Coalesced [337] mode_sixsfred::col#5 ← mode_sixsfred::col#1
Coalesced [338] mode_sixsfred::cx#3 ← mode_sixsfred::cx#1
Coalesced (already) [339] mode_sixsfred::col#7 ← mode_sixsfred::col#1
Coalesced [340] mode_sixsfred::i#3 ← mode_sixsfred::i#1
Coalesced [366] mode_twoplanebitmap::col#6 ← mode_twoplanebitmap::col#3
Coalesced [379] mode_twoplanebitmap::gfxa#10 ← mode_twoplanebitmap::gfxa#6
Coalesced [385] mode_twoplanebitmap::gfxa#12 ← mode_twoplanebitmap::gfxa#2
Coalesced [392] mode_twoplanebitmap::gfxb#6 ← mode_twoplanebitmap::gfxb#3
Coalesced [407] mode_twoplanebitmap::gfxb#5 ← mode_twoplanebitmap::gfxb#1
Coalesced [408] mode_twoplanebitmap::by#5 ← mode_twoplanebitmap::by#1
Coalesced (already) [409] mode_twoplanebitmap::gfxb#7 ← mode_twoplanebitmap::gfxb#1
Coalesced [410] mode_twoplanebitmap::bx#3 ← mode_twoplanebitmap::bx#1
Coalesced [411] mode_twoplanebitmap::ay#8 ← mode_twoplanebitmap::ay#1
Coalesced [412] mode_twoplanebitmap::gfxa#9 ← mode_twoplanebitmap::gfxa#7
Coalesced (already) [413] mode_twoplanebitmap::gfxa#11 ← mode_twoplanebitmap::gfxa#7
Coalesced [414] mode_twoplanebitmap::ax#6 ← mode_twoplanebitmap::ax#1
Coalesced [417] mode_twoplanebitmap::gfxa#13 ← mode_twoplanebitmap::gfxa#1
Coalesced [418] mode_twoplanebitmap::cy#5 ← mode_twoplanebitmap::cy#1
Coalesced [419] mode_twoplanebitmap::col#5 ← mode_twoplanebitmap::col#1
Coalesced [420] mode_twoplanebitmap::cx#3 ← mode_twoplanebitmap::cx#1
Coalesced (already) [421] mode_twoplanebitmap::col#7 ← mode_twoplanebitmap::col#1
Coalesced [422] mode_twoplanebitmap::i#3 ← mode_twoplanebitmap::i#1
Coalesced [446] mode_sixsfred2::col#6 ← mode_sixsfred2::col#3
Coalesced [459] mode_sixsfred2::gfxa#6 ← mode_sixsfred2::gfxa#3
Coalesced [470] mode_sixsfred2::gfxb#6 ← mode_sixsfred2::gfxb#3
Coalesced [485] mode_sixsfred2::gfxb#5 ← mode_sixsfred2::gfxb#1
Coalesced [486] mode_sixsfred2::by#5 ← mode_sixsfred2::by#1
Coalesced (already) [487] mode_sixsfred2::gfxb#7 ← mode_sixsfred2::gfxb#1
Coalesced [488] mode_sixsfred2::bx#3 ← mode_sixsfred2::bx#1
Coalesced [489] mode_sixsfred2::ay#5 ← mode_sixsfred2::ay#1
Coalesced [490] mode_sixsfred2::gfxa#5 ← mode_sixsfred2::gfxa#1
Coalesced (already) [491] mode_sixsfred2::gfxa#7 ← mode_sixsfred2::gfxa#1
Coalesced [492] mode_sixsfred2::ax#3 ← mode_sixsfred2::ax#1
Coalesced [493] mode_sixsfred2::cy#5 ← mode_sixsfred2::cy#1
Coalesced [494] mode_sixsfred2::col#5 ← mode_sixsfred2::col#1
Coalesced [495] mode_sixsfred2::cx#3 ← mode_sixsfred2::cx#1
Coalesced (already) [496] mode_sixsfred2::col#7 ← mode_sixsfred2::col#1
Coalesced [497] mode_sixsfred2::i#3 ← mode_sixsfred2::i#1
Coalesced [516] mode_hicolmcchar::col#6 ← mode_hicolmcchar::col#3
Coalesced [517] mode_hicolmcchar::ch#6 ← mode_hicolmcchar::ch#3
Coalesced [538] mode_hicolmcchar::cy#5 ← mode_hicolmcchar::cy#1
Coalesced [539] mode_hicolmcchar::col#5 ← mode_hicolmcchar::col#1
Coalesced [540] mode_hicolmcchar::ch#5 ← mode_hicolmcchar::ch#1
Coalesced [541] mode_hicolmcchar::cx#3 ← mode_hicolmcchar::cx#1
Coalesced (already) [542] mode_hicolmcchar::col#7 ← mode_hicolmcchar::col#1
Coalesced (already) [543] mode_hicolmcchar::ch#7 ← mode_hicolmcchar::ch#1
Coalesced [544] mode_hicolmcchar::i#3 ← mode_hicolmcchar::i#1
Coalesced [564] mode_hicolecmchar::col#6 ← mode_hicolecmchar::col#3
Coalesced [565] mode_hicolecmchar::ch#6 ← mode_hicolecmchar::ch#3
Coalesced [586] mode_hicolecmchar::cy#5 ← mode_hicolecmchar::cy#1
Coalesced [587] mode_hicolecmchar::col#5 ← mode_hicolecmchar::col#1
Coalesced [588] mode_hicolecmchar::ch#5 ← mode_hicolecmchar::ch#1
Coalesced [589] mode_hicolecmchar::cx#3 ← mode_hicolecmchar::cx#1
Coalesced (already) [590] mode_hicolecmchar::col#7 ← mode_hicolecmchar::col#1
Coalesced (already) [591] mode_hicolecmchar::ch#7 ← mode_hicolecmchar::ch#1
Coalesced [592] mode_hicolecmchar::i#3 ← mode_hicolecmchar::i#1
Coalesced [609] mode_hicolstdchar::col#6 ← mode_hicolstdchar::col#3
Coalesced [610] mode_hicolstdchar::ch#6 ← mode_hicolstdchar::ch#3
Coalesced [631] mode_hicolstdchar::cy#5 ← mode_hicolstdchar::cy#1
Coalesced [632] mode_hicolstdchar::col#5 ← mode_hicolstdchar::col#1
Coalesced [633] mode_hicolstdchar::ch#5 ← mode_hicolstdchar::ch#1
Coalesced [634] mode_hicolstdchar::cx#3 ← mode_hicolstdchar::cx#1
Coalesced (already) [635] mode_hicolstdchar::col#7 ← mode_hicolstdchar::col#1
Coalesced (already) [636] mode_hicolstdchar::ch#7 ← mode_hicolstdchar::ch#1
Coalesced [637] mode_hicolstdchar::i#3 ← mode_hicolstdchar::i#1
Coalesced [656] mode_mcchar::col#6 ← mode_mcchar::col#3
Coalesced [657] mode_mcchar::ch#6 ← mode_mcchar::ch#3
Coalesced [680] mode_mcchar::cy#5 ← mode_mcchar::cy#1
Coalesced [681] mode_mcchar::col#5 ← mode_mcchar::col#1
Coalesced [682] mode_mcchar::ch#5 ← mode_mcchar::ch#1
Coalesced [683] mode_mcchar::cx#3 ← mode_mcchar::cx#1
Coalesced (already) [684] mode_mcchar::col#7 ← mode_mcchar::col#1
Coalesced (already) [685] mode_mcchar::ch#7 ← mode_mcchar::ch#1
Coalesced [686] mode_mcchar::i#3 ← mode_mcchar::i#1
Coalesced [706] mode_ecmchar::col#6 ← mode_ecmchar::col#3
Coalesced [707] mode_ecmchar::ch#6 ← mode_ecmchar::ch#3
Coalesced [730] mode_ecmchar::cy#5 ← mode_ecmchar::cy#1
Coalesced [731] mode_ecmchar::col#5 ← mode_ecmchar::col#1
Coalesced [732] mode_ecmchar::ch#5 ← mode_ecmchar::ch#1
Coalesced [733] mode_ecmchar::cx#3 ← mode_ecmchar::cx#1
Coalesced (already) [734] mode_ecmchar::col#7 ← mode_ecmchar::col#1
Coalesced (already) [735] mode_ecmchar::ch#7 ← mode_ecmchar::ch#1
Coalesced [736] mode_ecmchar::i#3 ← mode_ecmchar::i#1
Coalesced [753] mode_stdchar::col#6 ← mode_stdchar::col#3
Coalesced [754] mode_stdchar::ch#6 ← mode_stdchar::ch#3
Coalesced [777] mode_stdchar::cy#5 ← mode_stdchar::cy#1
Coalesced [778] mode_stdchar::col#5 ← mode_stdchar::col#1
Coalesced [779] mode_stdchar::ch#5 ← mode_stdchar::ch#1
Coalesced [780] mode_stdchar::cx#3 ← mode_stdchar::cx#1
Coalesced (already) [781] mode_stdchar::col#7 ← mode_stdchar::col#1
Coalesced (already) [782] mode_stdchar::ch#7 ← mode_stdchar::ch#1
Coalesced [783] mode_stdchar::i#3 ← mode_stdchar::i#1
Coalesced [788] print_str_lines::str#11 ← print_str_lines::str#2
Coalesced [789] print_char_cursor#96 ← print_char_cursor#19
Coalesced [796] print_char_cursor#99 ← print_char_cursor#1
Coalesced [801] print_str_lines::str#10 ← print_str_lines::str#0
Not coalescing [802] print_char_cursor#95 ← print_line_cursor#19
Coalesced [803] print_line_cursor#95 ← print_line_cursor#19
Coalesced (already) [804] print_str_lines::str#12 ← print_str_lines::str#0
Coalesced [805] print_char_cursor#97 ← print_char_cursor#32
Coalesced (already) [806] print_char_cursor#98 ← print_char_cursor#17
Coalesced [807] print_line_cursor#96 ← print_line_cursor#17
Coalesced (already) [812] print_line_cursor#97 ← print_line_cursor#19
Coalesced [819] print_cls::sc#3 ← print_cls::sc#1
Coalesced down to 85 phi equivalence classes
Culled Empty Block (label) menu::@70
Culled Empty Block (label) menu::@69
Culled Empty Block (label) mode_8bppchunkybmm::@23
Culled Empty Block (label) mode_8bppchunkybmm::@24
Culled Empty Block (label) mode_8bppchunkybmm::@25
Culled Empty Block (label) mode_8bppchunkybmm::@22
Culled Empty Block (label) mode_8bpppixelcell::@28
Culled Empty Block (label) mode_8bpppixelcell::@29
Culled Empty Block (label) mode_8bpppixelcell::@30
Culled Empty Block (label) mode_8bpppixelcell::@26
Culled Empty Block (label) mode_8bpppixelcell::@27
Culled Empty Block (label) mode_8bpppixelcell::@25
Culled Empty Block (label) mode_sixsfred::@30
Culled Empty Block (label) mode_sixsfred::@31
Culled Empty Block (label) mode_sixsfred::@28
Culled Empty Block (label) mode_sixsfred::@29
Culled Empty Block (label) mode_sixsfred::@26
Culled Empty Block (label) mode_sixsfred::@27
Culled Empty Block (label) mode_sixsfred::@25
Culled Empty Block (label) mode_twoplanebitmap::@34
Culled Empty Block (label) mode_twoplanebitmap::@35
Culled Empty Block (label) mode_twoplanebitmap::@32
Culled Empty Block (label) mode_twoplanebitmap::@33
Culled Empty Block (label) mode_twoplanebitmap::@30
Culled Empty Block (label) mode_twoplanebitmap::@31
Culled Empty Block (label) mode_twoplanebitmap::@29
Culled Empty Block (label) mode_sixsfred2::@30
Culled Empty Block (label) mode_sixsfred2::@31
Culled Empty Block (label) mode_sixsfred2::@28
Culled Empty Block (label) mode_sixsfred2::@29
Culled Empty Block (label) mode_sixsfred2::@26
Culled Empty Block (label) mode_sixsfred2::@27
Culled Empty Block (label) mode_sixsfred2::@25
Culled Empty Block (label) mode_hicolmcchar::@18
Culled Empty Block (label) mode_hicolmcchar::@19
Culled Empty Block (label) mode_hicolmcchar::@17
Culled Empty Block (label) mode_hicolecmchar::@18
Culled Empty Block (label) mode_hicolecmchar::@19
Culled Empty Block (label) mode_hicolecmchar::@17
Culled Empty Block (label) mode_hicolstdchar::@18
Culled Empty Block (label) mode_hicolstdchar::@19
Culled Empty Block (label) mode_hicolstdchar::@17
Culled Empty Block (label) mode_mcchar::@18
Culled Empty Block (label) mode_mcchar::@19
Culled Empty Block (label) mode_mcchar::@17
Culled Empty Block (label) mode_ecmchar::@18
Culled Empty Block (label) mode_ecmchar::@19
Culled Empty Block (label) mode_ecmchar::@17
Culled Empty Block (label) mode_stdchar::@18
Culled Empty Block (label) mode_stdchar::@19
Culled Empty Block (label) mode_stdchar::@17
Culled Empty Block (label) print_str_lines::@12
Culled Empty Block (label) print_str_lines::@13
Culled Empty Block (label) print_str_lines::@14
Culled Empty Block (label) print_ln::@3
Culled Empty Block (label) print_cls::@3
Block Sequence Planned @begin @32 @end main main::@1 main::@return main::@2 menu menu::@1 menu::@2 menu::@18 menu::@44 menu::@45 menu::@3 menu::@return menu::@4 menu::@47 menu::@21 menu::@6 menu::@48 menu::@23 menu::@7 menu::@50 menu::@25 menu::@8 menu::@52 menu::@27 menu::@9 menu::@54 menu::@29 menu::@10 menu::@56 menu::@31 menu::@11 menu::@58 menu::@33 menu::@12 menu::@60 menu::@35 menu::@13 menu::@62 menu::@37 menu::@14 menu::@64 menu::@39 menu::@15 menu::@66 menu::@41 mode_8bppchunkybmm mode_8bppchunkybmm::@1 mode_8bppchunkybmm::@9 mode_8bppchunkybmm::@2 mode_8bppchunkybmm::@3 mode_8bppchunkybmm::@10 mode_8bppchunkybmm::@19 mode_8bppchunkybmm::@4 mode_8bppchunkybmm::@11 mode_8bppchunkybmm::@12 mode_8bppchunkybmm::@5 mode_8bppchunkybmm::@return mode_8bppchunkybmm::@6 mode_8bppchunkybmm::@21 keyboard_key_pressed keyboard_key_pressed::@2 keyboard_key_pressed::@return keyboard_matrix_read keyboard_matrix_read::@return dtvSetCpuBankSegment1 dtvSetCpuBankSegment1::@return mode_8bpppixelcell mode_8bpppixelcell::@1 mode_8bpppixelcell::@2 mode_8bpppixelcell::@3 mode_8bpppixelcell::@13 mode_8bpppixelcell::@14 mode_8bpppixelcell::@4 mode_8bpppixelcell::@5 mode_8bpppixelcell::@6 mode_8bpppixelcell::@15 mode_8bpppixelcell::@7 mode_8bpppixelcell::@16 mode_8bpppixelcell::@17 mode_8bpppixelcell::@18 mode_8bpppixelcell::@8 mode_8bpppixelcell::@return mode_8bpppixelcell::@9 mode_8bpppixelcell::@24 mode_sixsfred mode_sixsfred::@1 mode_sixsfred::@12 mode_sixsfred::@2 mode_sixsfred::@3 mode_sixsfred::@13 mode_sixsfred::@4 mode_sixsfred::@5 mode_sixsfred::@15 mode_sixsfred::@6 mode_sixsfred::@7 mode_sixsfred::@17 mode_sixsfred::@8 mode_sixsfred::@return mode_sixsfred::@9 mode_sixsfred::@24 mode_twoplanebitmap mode_twoplanebitmap::@1 mode_twoplanebitmap::@14 mode_twoplanebitmap::@2 mode_twoplanebitmap::@3 mode_twoplanebitmap::@15 mode_twoplanebitmap::@4 mode_twoplanebitmap::@5 mode_twoplanebitmap::@17 mode_twoplanebitmap::@7 mode_twoplanebitmap::@19 mode_twoplanebitmap::@8 mode_twoplanebitmap::@9 mode_twoplanebitmap::@21 mode_twoplanebitmap::@10 mode_twoplanebitmap::@return mode_twoplanebitmap::@11 mode_twoplanebitmap::@28 mode_twoplanebitmap::@6 mode_sixsfred2 mode_sixsfred2::@1 mode_sixsfred2::@12 mode_sixsfred2::@2 mode_sixsfred2::@3 mode_sixsfred2::@13 mode_sixsfred2::@4 mode_sixsfred2::@5 mode_sixsfred2::@15 mode_sixsfred2::@6 mode_sixsfred2::@7 mode_sixsfred2::@17 mode_sixsfred2::@8 mode_sixsfred2::@return mode_sixsfred2::@9 mode_sixsfred2::@24 mode_hicolmcchar mode_hicolmcchar::@1 mode_hicolmcchar::@8 mode_hicolmcchar::@2 mode_hicolmcchar::@3 mode_hicolmcchar::@9 mode_hicolmcchar::@4 mode_hicolmcchar::@return mode_hicolmcchar::@5 mode_hicolmcchar::@16 mode_hicolecmchar mode_hicolecmchar::@1 mode_hicolecmchar::@8 mode_hicolecmchar::@2 mode_hicolecmchar::@3 mode_hicolecmchar::@9 mode_hicolecmchar::@4 mode_hicolecmchar::@return mode_hicolecmchar::@5 mode_hicolecmchar::@16 mode_hicolstdchar mode_hicolstdchar::@1 mode_hicolstdchar::@8 mode_hicolstdchar::@2 mode_hicolstdchar::@3 mode_hicolstdchar::@9 mode_hicolstdchar::@4 mode_hicolstdchar::@return mode_hicolstdchar::@5 mode_hicolstdchar::@16 mode_mcchar mode_mcchar::@1 mode_mcchar::@8 mode_mcchar::@2 mode_mcchar::@3 mode_mcchar::@9 mode_mcchar::@4 mode_mcchar::@return mode_mcchar::@5 mode_mcchar::@16 mode_ecmchar mode_ecmchar::@1 mode_ecmchar::@8 mode_ecmchar::@2 mode_ecmchar::@3 mode_ecmchar::@9 mode_ecmchar::@4 mode_ecmchar::@return mode_ecmchar::@5 mode_ecmchar::@16 mode_stdchar mode_stdchar::@1 mode_stdchar::@8 mode_stdchar::@2 mode_stdchar::@3 mode_stdchar::@9 mode_stdchar::@4 mode_stdchar::@return mode_stdchar::@5 mode_stdchar::@16 print_str_lines print_str_lines::@1 print_str_lines::@return print_str_lines::@4 print_str_lines::@8 print_str_lines::@5 print_str_lines::@9 print_ln print_ln::@1 print_ln::@return print_cls print_cls::@1 print_cls::@return print_set_screen print_set_screen::@return 
Adding NOP phi() at start of @begin
Adding NOP phi() at start of @32
Adding NOP phi() at start of @end
Adding NOP phi() at start of main::@2
Adding NOP phi() at start of menu::@44
Adding NOP phi() at start of menu::@45
Adding NOP phi() at start of menu::@4
Adding NOP phi() at start of menu::@21
Adding NOP phi() at start of menu::@6
Adding NOP phi() at start of menu::@23
Adding NOP phi() at start of menu::@7
Adding NOP phi() at start of menu::@25
Adding NOP phi() at start of menu::@8
Adding NOP phi() at start of menu::@27
Adding NOP phi() at start of menu::@9
Adding NOP phi() at start of menu::@29
Adding NOP phi() at start of menu::@10
Adding NOP phi() at start of menu::@31
Adding NOP phi() at start of menu::@11
Adding NOP phi() at start of menu::@33
Adding NOP phi() at start of menu::@12
Adding NOP phi() at start of menu::@35
Adding NOP phi() at start of menu::@13
Adding NOP phi() at start of menu::@37
Adding NOP phi() at start of menu::@14
Adding NOP phi() at start of menu::@39
Adding NOP phi() at start of menu::@15
Adding NOP phi() at start of menu::@41
Adding NOP phi() at start of mode_8bppchunkybmm::@9
Adding NOP phi() at start of mode_8bppchunkybmm::@12
Adding NOP phi() at start of mode_8bppchunkybmm::@6
Adding NOP phi() at start of mode_8bpppixelcell::@9
Adding NOP phi() at start of mode_sixsfred::@9
Adding NOP phi() at start of mode_twoplanebitmap::@11
Adding NOP phi() at start of mode_sixsfred2::@9
Adding NOP phi() at start of mode_hicolmcchar::@5
Adding NOP phi() at start of mode_hicolecmchar::@5
Adding NOP phi() at start of mode_hicolstdchar::@5
Adding NOP phi() at start of mode_mcchar::@5
Adding NOP phi() at start of mode_ecmchar::@5
Adding NOP phi() at start of mode_stdchar::@5
Adding NOP phi() at start of print_str_lines
Adding NOP phi() at start of print_str_lines::@9
Adding NOP phi() at start of print_ln
Adding NOP phi() at start of print_cls
Adding NOP phi() at start of print_set_screen
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...

FINAL CONTROL FLOW GRAPH
@begin: scope:[]  from
  [0] phi() [ ] ( )
  to:@32
@32: scope:[]  from @begin
  [1] phi() [ ] ( )
  [2] call main param-assignment [ ] ( )
  to:@end
@end: scope:[]  from @32
  [3] phi() [ ] ( )
main: scope:[main]  from @32
  asm { sei  }
  [5] *((const byte*) DTV_FEATURE#0) ← (const byte) DTV_FEATURE_ENABLE#0 [ ] ( main:2 [ ] )
  to:main::@1
main::@1: scope:[main]  from main main::@2
  [6] if(true) goto main::@2 [ ] ( main:2 [ ] )
  to:main::@return
main::@return: scope:[main]  from main::@1
  [7] return  [ ] ( main:2 [ ] )
  to:@return
main::@2: scope:[main]  from main::@1
  [8] phi() [ ] ( main:2 [ ] )
  [9] call menu param-assignment [ ] ( main:2 [ ] )
  to:main::@1
menu: scope:[menu]  from main::@2
  [10] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) menu::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9 [ ] )
  [11] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const dword) DTV_COLOR_BANK_DEFAULT#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9 [ ] )
  [12] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const dword) DTV_COLOR_BANK_DEFAULT#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9 [ ] )
  [13] *((const byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9 [ ] )
  [14] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9 [ ] )
  [15] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) menu::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9 [ ] )
  [16] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9 [ ] )
  [17] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9 [ ] )
  [18] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) menu::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) menu::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9 [ ] )
  to:menu::@1
menu::@1: scope:[menu]  from menu menu::@1
  [19] (byte) menu::i#2 ← phi( menu/(byte/signed byte/word/signed word/dword/signed dword) 0 menu::@1/(byte) menu::i#1 ) [ menu::i#2 ] ( main:2::menu:9 [ menu::i#2 ] )
  [20] *((const byte*) DTV_PALETTE#0 + (byte) menu::i#2) ← *((const byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) menu::i#2) [ menu::i#2 ] ( main:2::menu:9 [ menu::i#2 ] )
  [21] (byte) menu::i#1 ← ++ (byte) menu::i#2 [ menu::i#1 ] ( main:2::menu:9 [ menu::i#1 ] )
  [22] if((byte) menu::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto menu::@1 [ menu::i#1 ] ( main:2::menu:9 [ menu::i#1 ] )
  to:menu::@2
menu::@2: scope:[menu]  from menu::@1 menu::@2
  [23] (byte*) menu::c#2 ← phi( menu::@1/(const byte*) COLS#0 menu::@2/(byte*) menu::c#1 ) [ menu::c#2 ] ( main:2::menu:9 [ menu::c#2 ] )
  [24] *((byte*) menu::c#2) ← (const byte) LIGHT_GREEN#0 [ menu::c#2 ] ( main:2::menu:9 [ menu::c#2 ] )
  [25] (byte*) menu::c#1 ← ++ (byte*) menu::c#2 [ menu::c#1 ] ( main:2::menu:9 [ menu::c#1 ] )
  [26] if((byte*) menu::c#1!=(const byte*) COLS#0+(word/signed word/dword/signed dword) 1000) goto menu::@2 [ menu::c#1 ] ( main:2::menu:9 [ menu::c#1 ] )
  to:menu::@18
menu::@18: scope:[menu]  from menu::@2
  [27] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9 [ ] )
  [28] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9 [ ] )
  [29] call print_set_screen param-assignment [ ] ( main:2::menu:9 [ ] )
  to:menu::@44
menu::@44: scope:[menu]  from menu::@18
  [30] phi() [ ] ( main:2::menu:9 [ ] )
  [31] call print_cls param-assignment [ ] ( main:2::menu:9 [ ] )
  to:menu::@45
menu::@45: scope:[menu]  from menu::@44
  [32] phi() [ ] ( main:2::menu:9 [ ] )
  [33] call print_str_lines param-assignment [ ] ( main:2::menu:9 [ ] )
  to:menu::@3
menu::@3: scope:[menu]  from menu::@45 menu::@66
  [34] if(true) goto menu::@4 [ ] ( main:2::menu:9 [ ] )
  to:menu::@return
menu::@return: scope:[menu]  from menu::@21 menu::@23 menu::@25 menu::@27 menu::@29 menu::@3 menu::@31 menu::@33 menu::@35 menu::@37 menu::@39 menu::@41
  [35] return  [ ] ( main:2::menu:9 [ ] )
  to:@return
menu::@4: scope:[menu]  from menu::@3
  [36] phi() [ ] ( main:2::menu:9 [ ] )
  [37] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  [38] (byte) keyboard_key_pressed::return#2 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#2 ] ( main:2::menu:9 [ keyboard_key_pressed::return#2 ] )
  to:menu::@47
menu::@47: scope:[menu]  from menu::@4
  [39] (byte~) menu::$29 ← (byte) keyboard_key_pressed::return#2 [ menu::$29 ] ( main:2::menu:9 [ menu::$29 ] )
  [40] if((byte~) menu::$29==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@6 [ ] ( main:2::menu:9 [ ] )
  to:menu::@21
menu::@21: scope:[menu]  from menu::@47
  [41] phi() [ ] ( main:2::menu:9 [ ] )
  [42] call mode_stdchar param-assignment [ ] ( main:2::menu:9 [ ] )
  to:menu::@return
menu::@6: scope:[menu]  from menu::@47
  [43] phi() [ ] ( main:2::menu:9 [ ] )
  [44] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  [45] (byte) keyboard_key_pressed::return#26 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#26 ] ( main:2::menu:9 [ keyboard_key_pressed::return#26 ] )
  to:menu::@48
menu::@48: scope:[menu]  from menu::@6
  [46] (byte~) menu::$33 ← (byte) keyboard_key_pressed::return#26 [ menu::$33 ] ( main:2::menu:9 [ menu::$33 ] )
  [47] if((byte~) menu::$33==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@7 [ ] ( main:2::menu:9 [ ] )
  to:menu::@23
menu::@23: scope:[menu]  from menu::@48
  [48] phi() [ ] ( main:2::menu:9 [ ] )
  [49] call mode_ecmchar param-assignment [ ] ( main:2::menu:9 [ ] )
  to:menu::@return
menu::@7: scope:[menu]  from menu::@48
  [50] phi() [ ] ( main:2::menu:9 [ ] )
  [51] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  [52] (byte) keyboard_key_pressed::return#27 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#27 ] ( main:2::menu:9 [ keyboard_key_pressed::return#27 ] )
  to:menu::@50
menu::@50: scope:[menu]  from menu::@7
  [53] (byte~) menu::$37 ← (byte) keyboard_key_pressed::return#27 [ menu::$37 ] ( main:2::menu:9 [ menu::$37 ] )
  [54] if((byte~) menu::$37==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@8 [ ] ( main:2::menu:9 [ ] )
  to:menu::@25
menu::@25: scope:[menu]  from menu::@50
  [55] phi() [ ] ( main:2::menu:9 [ ] )
  [56] call mode_mcchar param-assignment [ ] ( main:2::menu:9 [ ] )
  to:menu::@return
menu::@8: scope:[menu]  from menu::@50
  [57] phi() [ ] ( main:2::menu:9 [ ] )
  [58] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  [59] (byte) keyboard_key_pressed::return#28 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#28 ] ( main:2::menu:9 [ keyboard_key_pressed::return#28 ] )
  to:menu::@52
menu::@52: scope:[menu]  from menu::@8
  [60] (byte~) menu::$41 ← (byte) keyboard_key_pressed::return#28 [ menu::$41 ] ( main:2::menu:9 [ menu::$41 ] )
  [61] if((byte~) menu::$41==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@9 [ ] ( main:2::menu:9 [ ] )
  to:menu::@27
menu::@27: scope:[menu]  from menu::@52
  [62] phi() [ ] ( main:2::menu:9 [ ] )
  [63] call mode_hicolstdchar param-assignment [ ] ( main:2::menu:9 [ ] )
  to:menu::@return
menu::@9: scope:[menu]  from menu::@52
  [64] phi() [ ] ( main:2::menu:9 [ ] )
  [65] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  [66] (byte) keyboard_key_pressed::return#29 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#29 ] ( main:2::menu:9 [ keyboard_key_pressed::return#29 ] )
  to:menu::@54
menu::@54: scope:[menu]  from menu::@9
  [67] (byte~) menu::$45 ← (byte) keyboard_key_pressed::return#29 [ menu::$45 ] ( main:2::menu:9 [ menu::$45 ] )
  [68] if((byte~) menu::$45==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@10 [ ] ( main:2::menu:9 [ ] )
  to:menu::@29
menu::@29: scope:[menu]  from menu::@54
  [69] phi() [ ] ( main:2::menu:9 [ ] )
  [70] call mode_hicolecmchar param-assignment [ ] ( main:2::menu:9 [ ] )
  to:menu::@return
menu::@10: scope:[menu]  from menu::@54
  [71] phi() [ ] ( main:2::menu:9 [ ] )
  [72] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  [73] (byte) keyboard_key_pressed::return#30 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#30 ] ( main:2::menu:9 [ keyboard_key_pressed::return#30 ] )
  to:menu::@56
menu::@56: scope:[menu]  from menu::@10
  [74] (byte~) menu::$49 ← (byte) keyboard_key_pressed::return#30 [ menu::$49 ] ( main:2::menu:9 [ menu::$49 ] )
  [75] if((byte~) menu::$49==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@11 [ ] ( main:2::menu:9 [ ] )
  to:menu::@31
menu::@31: scope:[menu]  from menu::@56
  [76] phi() [ ] ( main:2::menu:9 [ ] )
  [77] call mode_hicolmcchar param-assignment [ ] ( main:2::menu:9 [ ] )
  to:menu::@return
menu::@11: scope:[menu]  from menu::@56
  [78] phi() [ ] ( main:2::menu:9 [ ] )
  [79] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  [80] (byte) keyboard_key_pressed::return#31 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#31 ] ( main:2::menu:9 [ keyboard_key_pressed::return#31 ] )
  to:menu::@58
menu::@58: scope:[menu]  from menu::@11
  [81] (byte~) menu::$53 ← (byte) keyboard_key_pressed::return#31 [ menu::$53 ] ( main:2::menu:9 [ menu::$53 ] )
  [82] if((byte~) menu::$53==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@12 [ ] ( main:2::menu:9 [ ] )
  to:menu::@33
menu::@33: scope:[menu]  from menu::@58
  [83] phi() [ ] ( main:2::menu:9 [ ] )
  [84] call mode_sixsfred2 param-assignment [ ] ( main:2::menu:9 [ ] )
  to:menu::@return
menu::@12: scope:[menu]  from menu::@58
  [85] phi() [ ] ( main:2::menu:9 [ ] )
  [86] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  [87] (byte) keyboard_key_pressed::return#32 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#32 ] ( main:2::menu:9 [ keyboard_key_pressed::return#32 ] )
  to:menu::@60
menu::@60: scope:[menu]  from menu::@12
  [88] (byte~) menu::$57 ← (byte) keyboard_key_pressed::return#32 [ menu::$57 ] ( main:2::menu:9 [ menu::$57 ] )
  [89] if((byte~) menu::$57==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@13 [ ] ( main:2::menu:9 [ ] )
  to:menu::@35
menu::@35: scope:[menu]  from menu::@60
  [90] phi() [ ] ( main:2::menu:9 [ ] )
  [91] call mode_twoplanebitmap param-assignment [ ] ( main:2::menu:9 [ ] )
  to:menu::@return
menu::@13: scope:[menu]  from menu::@60
  [92] phi() [ ] ( main:2::menu:9 [ ] )
  [93] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  [94] (byte) keyboard_key_pressed::return#10 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#10 ] ( main:2::menu:9 [ keyboard_key_pressed::return#10 ] )
  to:menu::@62
menu::@62: scope:[menu]  from menu::@13
  [95] (byte~) menu::$61 ← (byte) keyboard_key_pressed::return#10 [ menu::$61 ] ( main:2::menu:9 [ menu::$61 ] )
  [96] if((byte~) menu::$61==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@14 [ ] ( main:2::menu:9 [ ] )
  to:menu::@37
menu::@37: scope:[menu]  from menu::@62
  [97] phi() [ ] ( main:2::menu:9 [ ] )
  [98] call mode_sixsfred param-assignment [ ] ( main:2::menu:9 [ ] )
  to:menu::@return
menu::@14: scope:[menu]  from menu::@62
  [99] phi() [ ] ( main:2::menu:9 [ ] )
  [100] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  [101] (byte) keyboard_key_pressed::return#11 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#11 ] ( main:2::menu:9 [ keyboard_key_pressed::return#11 ] )
  to:menu::@64
menu::@64: scope:[menu]  from menu::@14
  [102] (byte~) menu::$65 ← (byte) keyboard_key_pressed::return#11 [ menu::$65 ] ( main:2::menu:9 [ menu::$65 ] )
  [103] if((byte~) menu::$65==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@15 [ ] ( main:2::menu:9 [ ] )
  to:menu::@39
menu::@39: scope:[menu]  from menu::@64
  [104] phi() [ ] ( main:2::menu:9 [ ] )
  [105] call mode_8bpppixelcell param-assignment [ ] ( main:2::menu:9 [ ] )
  to:menu::@return
menu::@15: scope:[menu]  from menu::@64
  [106] phi() [ ] ( main:2::menu:9 [ ] )
  [107] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  [108] (byte) keyboard_key_pressed::return#12 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#12 ] ( main:2::menu:9 [ keyboard_key_pressed::return#12 ] )
  to:menu::@66
menu::@66: scope:[menu]  from menu::@15
  [109] (byte~) menu::$69 ← (byte) keyboard_key_pressed::return#12 [ menu::$69 ] ( main:2::menu:9 [ menu::$69 ] )
  [110] if((byte~) menu::$69==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@3 [ ] ( main:2::menu:9 [ ] )
  to:menu::@41
menu::@41: scope:[menu]  from menu::@66
  [111] phi() [ ] ( main:2::menu:9 [ ] )
  [112] call mode_8bppchunkybmm param-assignment [ ] ( main:2::menu:9 [ ] )
  to:menu::@return
mode_8bppchunkybmm: scope:[mode_8bppchunkybmm]  from menu::@41
  [113] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0|(const byte) DTV_CONTROL_CHUNKY_ON#0|(const byte) DTV_CONTROL_COLORRAM_OFF#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
  [114] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
  [115] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
  [116] *((const byte*) DTV_PLANEB_START_LO#0) ← <<(const dword) mode_8bppchunkybmm::PLANEB#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
  [117] *((const byte*) DTV_PLANEB_START_MI#0) ← ><(const dword) mode_8bppchunkybmm::PLANEB#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
  [118] *((const byte*) DTV_PLANEB_START_HI#0) ← <>(const dword) mode_8bppchunkybmm::PLANEB#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
  [119] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 8 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
  [120] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
  [121] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
  [122] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
  to:mode_8bppchunkybmm::@1
mode_8bppchunkybmm::@1: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm mode_8bppchunkybmm::@1
  [123] (byte) mode_8bppchunkybmm::i#2 ← phi( mode_8bppchunkybmm/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_8bppchunkybmm::@1/(byte) mode_8bppchunkybmm::i#1 ) [ mode_8bppchunkybmm::i#2 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::i#2 ] )
  [124] *((const byte*) DTV_PALETTE#0 + (byte) mode_8bppchunkybmm::i#2) ← (byte) mode_8bppchunkybmm::i#2 [ mode_8bppchunkybmm::i#2 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::i#2 ] )
  [125] (byte) mode_8bppchunkybmm::i#1 ← ++ (byte) mode_8bppchunkybmm::i#2 [ mode_8bppchunkybmm::i#1 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::i#1 ] )
  [126] if((byte) mode_8bppchunkybmm::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_8bppchunkybmm::@1 [ mode_8bppchunkybmm::i#1 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::i#1 ] )
  to:mode_8bppchunkybmm::@9
mode_8bppchunkybmm::@9: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@1
  [127] phi() [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
  [128] call dtvSetCpuBankSegment1 param-assignment [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
  to:mode_8bppchunkybmm::@2
mode_8bppchunkybmm::@2: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@11 mode_8bppchunkybmm::@9
  [129] (byte) mode_8bppchunkybmm::gfxbCpuBank#7 ← phi( mode_8bppchunkybmm::@11/(byte) mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::@9/++((byte))(const dword) mode_8bppchunkybmm::PLANEB#0/(word/signed word/dword/signed dword) 16384 ) [ mode_8bppchunkybmm::gfxb#5 mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#7 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::gfxb#5 mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#7 ] )
  [129] (byte) mode_8bppchunkybmm::y#6 ← phi( mode_8bppchunkybmm::@11/(byte) mode_8bppchunkybmm::y#1 mode_8bppchunkybmm::@9/(byte/signed byte/word/signed word/dword/signed dword) 0 ) [ mode_8bppchunkybmm::gfxb#5 mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#7 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::gfxb#5 mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#7 ] )
  [129] (byte*) mode_8bppchunkybmm::gfxb#5 ← phi( mode_8bppchunkybmm::@11/(byte*) mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::@9/((byte*))(word/signed word/dword/signed dword) 16384 ) [ mode_8bppchunkybmm::gfxb#5 mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#7 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::gfxb#5 mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#7 ] )
  to:mode_8bppchunkybmm::@3
mode_8bppchunkybmm::@3: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@2 mode_8bppchunkybmm::@4
  [130] (byte) mode_8bppchunkybmm::gfxbCpuBank#4 ← phi( mode_8bppchunkybmm::@2/(byte) mode_8bppchunkybmm::gfxbCpuBank#7 mode_8bppchunkybmm::@4/(byte) mode_8bppchunkybmm::gfxbCpuBank#8 ) [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] )
  [130] (word) mode_8bppchunkybmm::x#2 ← phi( mode_8bppchunkybmm::@2/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_8bppchunkybmm::@4/(word) mode_8bppchunkybmm::x#1 ) [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] )
  [130] (byte*) mode_8bppchunkybmm::gfxb#3 ← phi( mode_8bppchunkybmm::@2/(byte*) mode_8bppchunkybmm::gfxb#5 mode_8bppchunkybmm::@4/(byte*) mode_8bppchunkybmm::gfxb#1 ) [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] )
  [131] if((byte*) mode_8bppchunkybmm::gfxb#3!=(word/dword/signed dword) 32768) goto mode_8bppchunkybmm::@4 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] )
  to:mode_8bppchunkybmm::@10
mode_8bppchunkybmm::@10: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@3
  [132] (byte) dtvSetCpuBankSegment1::cpuBankIdx#1 ← (byte) mode_8bppchunkybmm::gfxbCpuBank#4 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 dtvSetCpuBankSegment1::cpuBankIdx#1 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 dtvSetCpuBankSegment1::cpuBankIdx#1 ] )
  [133] call dtvSetCpuBankSegment1 param-assignment [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] )
  to:mode_8bppchunkybmm::@19
mode_8bppchunkybmm::@19: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@10
  [134] (byte) mode_8bppchunkybmm::gfxbCpuBank#2 ← ++ (byte) mode_8bppchunkybmm::gfxbCpuBank#4 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#2 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#2 ] )
  to:mode_8bppchunkybmm::@4
mode_8bppchunkybmm::@4: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@19 mode_8bppchunkybmm::@3
  [135] (byte) mode_8bppchunkybmm::gfxbCpuBank#8 ← phi( mode_8bppchunkybmm::@19/(byte) mode_8bppchunkybmm::gfxbCpuBank#2 mode_8bppchunkybmm::@3/(byte) mode_8bppchunkybmm::gfxbCpuBank#4 ) [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 ] )
  [135] (byte*) mode_8bppchunkybmm::gfxb#4 ← phi( mode_8bppchunkybmm::@19/((byte*))(word/signed word/dword/signed dword) 16384 mode_8bppchunkybmm::@3/(byte*) mode_8bppchunkybmm::gfxb#3 ) [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 ] )
  [136] (word~) mode_8bppchunkybmm::$20 ← (word) mode_8bppchunkybmm::x#2 + (byte) mode_8bppchunkybmm::y#6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::$20 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::$20 ] )
  [137] (byte) mode_8bppchunkybmm::c#0 ← ((byte)) (word~) mode_8bppchunkybmm::$20 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::c#0 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::c#0 ] )
  [138] *((byte*) mode_8bppchunkybmm::gfxb#4) ← (byte) mode_8bppchunkybmm::c#0 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 ] )
  [139] (byte*) mode_8bppchunkybmm::gfxb#1 ← ++ (byte*) mode_8bppchunkybmm::gfxb#4 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 ] )
  [140] (word) mode_8bppchunkybmm::x#1 ← ++ (word) mode_8bppchunkybmm::x#2 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#1 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#1 ] )
  [141] if((word) mode_8bppchunkybmm::x#1!=(word/signed word/dword/signed dword) 320) goto mode_8bppchunkybmm::@3 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#1 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#1 ] )
  to:mode_8bppchunkybmm::@11
mode_8bppchunkybmm::@11: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@4
  [142] (byte) mode_8bppchunkybmm::y#1 ← ++ (byte) mode_8bppchunkybmm::y#6 [ mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::y#1 mode_8bppchunkybmm::gfxbCpuBank#8 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::y#1 mode_8bppchunkybmm::gfxbCpuBank#8 ] )
  [143] if((byte) mode_8bppchunkybmm::y#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_8bppchunkybmm::@2 [ mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::y#1 mode_8bppchunkybmm::gfxbCpuBank#8 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::y#1 mode_8bppchunkybmm::gfxbCpuBank#8 ] )
  to:mode_8bppchunkybmm::@12
mode_8bppchunkybmm::@12: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@11
  [144] phi() [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
  [145] call dtvSetCpuBankSegment1 param-assignment [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
  to:mode_8bppchunkybmm::@5
mode_8bppchunkybmm::@5: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@12 mode_8bppchunkybmm::@21
  [146] if(true) goto mode_8bppchunkybmm::@6 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
  to:mode_8bppchunkybmm::@return
mode_8bppchunkybmm::@return: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@21 mode_8bppchunkybmm::@5
  [147] return  [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
  to:@return
mode_8bppchunkybmm::@6: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@5
  [148] phi() [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
  [149] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ keyboard_key_pressed::return#0 ] )
  [150] (byte) keyboard_key_pressed::return#23 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#23 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ keyboard_key_pressed::return#23 ] )
  to:mode_8bppchunkybmm::@21
mode_8bppchunkybmm::@21: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@6
  [151] (byte~) mode_8bppchunkybmm::$27 ← (byte) keyboard_key_pressed::return#23 [ mode_8bppchunkybmm::$27 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::$27 ] )
  [152] if((byte~) mode_8bppchunkybmm::$27==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_8bppchunkybmm::@5 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
  to:mode_8bppchunkybmm::@return
keyboard_key_pressed: scope:[keyboard_key_pressed]  from menu::@10 menu::@11 menu::@12 menu::@13 menu::@14 menu::@15 menu::@4 menu::@6 menu::@7 menu::@8 menu::@9 mode_8bppchunkybmm::@6 mode_8bpppixelcell::@9 mode_ecmchar::@5 mode_hicolecmchar::@5 mode_hicolmcchar::@5 mode_hicolstdchar::@5 mode_mcchar::@5 mode_sixsfred2::@9 mode_sixsfred::@9 mode_stdchar::@5 mode_twoplanebitmap::@11
  [153] (byte) keyboard_key_pressed::key#22 ← phi( menu::@10/(const byte) KEY_8#0 menu::@11/(const byte) KEY_A#0 menu::@12/(const byte) KEY_B#0 menu::@13/(const byte) KEY_C#0 menu::@14/(const byte) KEY_D#0 menu::@15/(const byte) KEY_E#0 menu::@4/(const byte) KEY_1#0 menu::@6/(const byte) KEY_2#0 menu::@7/(const byte) KEY_3#0 menu::@8/(const byte) KEY_6#0 menu::@9/(const byte) KEY_7#0 mode_8bppchunkybmm::@6/(const byte) KEY_SPACE#0 mode_8bpppixelcell::@9/(const byte) KEY_SPACE#0 mode_ecmchar::@5/(const byte) KEY_SPACE#0 mode_hicolecmchar::@5/(const byte) KEY_SPACE#0 mode_hicolmcchar::@5/(const byte) KEY_SPACE#0 mode_hicolstdchar::@5/(const byte) KEY_SPACE#0 mode_mcchar::@5/(const byte) KEY_SPACE#0 mode_sixsfred2::@9/(const byte) KEY_SPACE#0 mode_sixsfred::@9/(const byte) KEY_SPACE#0 mode_stdchar::@5/(const byte) KEY_SPACE#0 mode_twoplanebitmap::@11/(const byte) KEY_SPACE#0 ) [ keyboard_key_pressed::key#22 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::key#22 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::key#22 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::key#22 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::key#22 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::key#22 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::key#22 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::key#22 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::key#22 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::key#22 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::key#22 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::key#22 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::key#22 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::key#22 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::key#22 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::key#22 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::key#22 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::key#22 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::key#22 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::key#22 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::key#22 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::key#22 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::key#22 ] )
  [154] (byte) keyboard_key_pressed::colidx#0 ← (byte) keyboard_key_pressed::key#22 & (byte/signed byte/word/signed word/dword/signed dword) 7 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] )
  [155] (byte) keyboard_key_pressed::rowidx#0 ← (byte) keyboard_key_pressed::key#22 >> (byte/signed byte/word/signed word/dword/signed dword) 3 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] )
  [156] (byte) keyboard_matrix_read::rowid#0 ← (byte) keyboard_key_pressed::rowidx#0 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] )
  [157] call keyboard_matrix_read param-assignment [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] )
  [158] (byte) keyboard_matrix_read::return#2 ← (byte) keyboard_matrix_read::return#0 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] )
  to:keyboard_key_pressed::@2
keyboard_key_pressed::@2: scope:[keyboard_key_pressed]  from keyboard_key_pressed
  [159] (byte~) keyboard_key_pressed::$2 ← (byte) keyboard_matrix_read::return#2 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] )
  [160] (byte) keyboard_key_pressed::return#0 ← (byte~) keyboard_key_pressed::$2 & *((const byte[]) keyboard_matrix_col_bitmask#0 + (byte) keyboard_key_pressed::colidx#0) [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::return#0 ] )
  to:keyboard_key_pressed::@return
keyboard_key_pressed::@return: scope:[keyboard_key_pressed]  from keyboard_key_pressed::@2
  [161] return  [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::return#0 ] )
  to:@return
keyboard_matrix_read: scope:[keyboard_matrix_read]  from keyboard_key_pressed
  [162] *((const byte*) CIA1_PORT_A#0) ← *((const byte[8]) keyboard_matrix_row_bitmask#0 + (byte) keyboard_matrix_read::rowid#0) [ ] ( main:2::menu:9::keyboard_key_pressed:37::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:44::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:51::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:58::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:65::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:72::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:79::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:86::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:93::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:100::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:107::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] )
  [163] (byte) keyboard_matrix_read::return#0 ← ~ *((const byte*) CIA1_PORT_B#0) [ keyboard_matrix_read::return#0 ] ( main:2::menu:9::keyboard_key_pressed:37::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:44::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:51::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:58::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:65::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:72::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:79::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:86::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:93::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:100::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:107::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] )
  to:keyboard_matrix_read::@return
keyboard_matrix_read::@return: scope:[keyboard_matrix_read]  from keyboard_matrix_read
  [164] return  [ keyboard_matrix_read::return#0 ] ( main:2::menu:9::keyboard_key_pressed:37::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:44::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:51::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:58::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:65::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:72::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:79::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:86::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:93::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:100::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:107::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] )
  to:@return
dtvSetCpuBankSegment1: scope:[dtvSetCpuBankSegment1]  from mode_8bppchunkybmm::@10 mode_8bppchunkybmm::@12 mode_8bppchunkybmm::@9
  [165] (byte) dtvSetCpuBankSegment1::cpuBankIdx#3 ← phi( mode_8bppchunkybmm::@10/(byte) dtvSetCpuBankSegment1::cpuBankIdx#1 mode_8bppchunkybmm::@12/((byte))(word/signed word/dword/signed dword) 16384/(word/signed word/dword/signed dword) 16384 mode_8bppchunkybmm::@9/((byte))(const dword) mode_8bppchunkybmm::PLANEB#0/(word/signed word/dword/signed dword) 16384 ) [ dtvSetCpuBankSegment1::cpuBankIdx#3 ] ( main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:128 [ dtvSetCpuBankSegment1::cpuBankIdx#3 ] main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:133 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 dtvSetCpuBankSegment1::cpuBankIdx#3 ] main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:145 [ dtvSetCpuBankSegment1::cpuBankIdx#3 ] )
  [166] *((const byte*) dtvSetCpuBankSegment1::cpuBank#0) ← (byte) dtvSetCpuBankSegment1::cpuBankIdx#3 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:128 [ ] main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:133 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:145 [ ] )
  asm { .byte$32,$dd lda$ff .byte$32,$00  }
  to:dtvSetCpuBankSegment1::@return
dtvSetCpuBankSegment1::@return: scope:[dtvSetCpuBankSegment1]  from dtvSetCpuBankSegment1
  [168] return  [ ] ( main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:128 [ ] main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:133 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:145 [ ] )
  to:@return
mode_8bpppixelcell: scope:[mode_8bpppixelcell]  from menu::@39
  [169] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0|(const byte) DTV_CONTROL_CHUNKY_ON#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] )
  [170] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] )
  [171] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] )
  [172] *((const byte*) DTV_PLANEA_START_LO#0) ← <(const byte*) mode_8bpppixelcell::PLANEA#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] )
  [173] *((const byte*) DTV_PLANEA_START_MI#0) ← >(const byte*) mode_8bpppixelcell::PLANEA#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] )
  [174] *((const byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] )
  [175] *((const byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] )
  [176] *((const byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] )
  [177] *((const byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] )
  [178] *((const byte*) DTV_PLANEB_START_LO#0) ← <(const byte*) mode_8bpppixelcell::PLANEB#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] )
  [179] *((const byte*) DTV_PLANEB_START_MI#0) ← >(const byte*) mode_8bpppixelcell::PLANEB#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] )
  [180] *((const byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] )
  [181] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] )
  [182] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] )
  [183] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] )
  [184] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] )
  to:mode_8bpppixelcell::@1
mode_8bpppixelcell::@1: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell mode_8bpppixelcell::@1
  [185] (byte) mode_8bpppixelcell::i#2 ← phi( mode_8bpppixelcell/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_8bpppixelcell::@1/(byte) mode_8bpppixelcell::i#1 ) [ mode_8bpppixelcell::i#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::i#2 ] )
  [186] *((const byte*) DTV_PALETTE#0 + (byte) mode_8bpppixelcell::i#2) ← (byte) mode_8bpppixelcell::i#2 [ mode_8bpppixelcell::i#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::i#2 ] )
  [187] (byte) mode_8bpppixelcell::i#1 ← ++ (byte) mode_8bpppixelcell::i#2 [ mode_8bpppixelcell::i#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::i#1 ] )
  [188] if((byte) mode_8bpppixelcell::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_8bpppixelcell::@1 [ mode_8bpppixelcell::i#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::i#1 ] )
  to:mode_8bpppixelcell::@2
mode_8bpppixelcell::@2: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@1 mode_8bpppixelcell::@13
  [189] (byte*) mode_8bpppixelcell::gfxa#3 ← phi( mode_8bpppixelcell::@1/(const byte*) mode_8bpppixelcell::PLANEA#0 mode_8bpppixelcell::@13/(byte*) mode_8bpppixelcell::gfxa#1 ) [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#3 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#3 ] )
  [189] (byte) mode_8bpppixelcell::ay#4 ← phi( mode_8bpppixelcell::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_8bpppixelcell::@13/(byte) mode_8bpppixelcell::ay#1 ) [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#3 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#3 ] )
  to:mode_8bpppixelcell::@3
mode_8bpppixelcell::@3: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@2 mode_8bpppixelcell::@3
  [190] (byte*) mode_8bpppixelcell::gfxa#2 ← phi( mode_8bpppixelcell::@2/(byte*) mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::@3/(byte*) mode_8bpppixelcell::gfxa#1 ) [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 ] )
  [190] (byte) mode_8bpppixelcell::ax#2 ← phi( mode_8bpppixelcell::@2/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_8bpppixelcell::@3/(byte) mode_8bpppixelcell::ax#1 ) [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 ] )
  [191] (byte~) mode_8bpppixelcell::$11 ← (byte) mode_8bpppixelcell::ay#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$11 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$11 ] )
  [192] (byte~) mode_8bpppixelcell::$12 ← (byte~) mode_8bpppixelcell::$11 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$12 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$12 ] )
  [193] (byte~) mode_8bpppixelcell::$13 ← (byte) mode_8bpppixelcell::ax#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$12 mode_8bpppixelcell::$13 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$12 mode_8bpppixelcell::$13 ] )
  [194] (byte~) mode_8bpppixelcell::$14 ← (byte~) mode_8bpppixelcell::$12 | (byte~) mode_8bpppixelcell::$13 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$14 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$14 ] )
  [195] *((byte*) mode_8bpppixelcell::gfxa#2) ← (byte~) mode_8bpppixelcell::$14 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 ] )
  [196] (byte*) mode_8bpppixelcell::gfxa#1 ← ++ (byte*) mode_8bpppixelcell::gfxa#2 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::ax#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::ax#2 ] )
  [197] (byte) mode_8bpppixelcell::ax#1 ← ++ (byte) mode_8bpppixelcell::ax#2 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::ax#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::ax#1 ] )
  [198] if((byte) mode_8bpppixelcell::ax#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_8bpppixelcell::@3 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::ax#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::ax#1 ] )
  to:mode_8bpppixelcell::@13
mode_8bpppixelcell::@13: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@3
  [199] (byte) mode_8bpppixelcell::ay#1 ← ++ (byte) mode_8bpppixelcell::ay#4 [ mode_8bpppixelcell::ay#1 mode_8bpppixelcell::gfxa#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#1 mode_8bpppixelcell::gfxa#1 ] )
  [200] if((byte) mode_8bpppixelcell::ay#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_8bpppixelcell::@2 [ mode_8bpppixelcell::ay#1 mode_8bpppixelcell::gfxa#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#1 mode_8bpppixelcell::gfxa#1 ] )
  to:mode_8bpppixelcell::@14
mode_8bpppixelcell::@14: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@13
  [201] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 50 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] )
  to:mode_8bpppixelcell::@4
mode_8bpppixelcell::@4: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@14 mode_8bpppixelcell::@17
  [202] (byte) mode_8bpppixelcell::ch#8 ← phi( mode_8bpppixelcell::@14/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_8bpppixelcell::@17/(byte) mode_8bpppixelcell::ch#1 ) [ mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::gfxb#7 mode_8bpppixelcell::col#7 mode_8bpppixelcell::ch#8 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::gfxb#7 mode_8bpppixelcell::col#7 mode_8bpppixelcell::ch#8 ] )
  [202] (byte) mode_8bpppixelcell::col#7 ← phi( mode_8bpppixelcell::@14/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_8bpppixelcell::@17/(byte) mode_8bpppixelcell::col#1 ) [ mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::gfxb#7 mode_8bpppixelcell::col#7 mode_8bpppixelcell::ch#8 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::gfxb#7 mode_8bpppixelcell::col#7 mode_8bpppixelcell::ch#8 ] )
  [202] (byte*) mode_8bpppixelcell::gfxb#7 ← phi( mode_8bpppixelcell::@14/(const byte*) mode_8bpppixelcell::PLANEB#0 mode_8bpppixelcell::@17/(byte*) mode_8bpppixelcell::gfxb#1 ) [ mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::gfxb#7 mode_8bpppixelcell::col#7 mode_8bpppixelcell::ch#8 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::gfxb#7 mode_8bpppixelcell::col#7 mode_8bpppixelcell::ch#8 ] )
  [202] (byte*) mode_8bpppixelcell::chargen#4 ← phi( mode_8bpppixelcell::@14/((byte*))(word/dword/signed dword) 53248 mode_8bpppixelcell::@17/(byte*) mode_8bpppixelcell::chargen#1 ) [ mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::gfxb#7 mode_8bpppixelcell::col#7 mode_8bpppixelcell::ch#8 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::gfxb#7 mode_8bpppixelcell::col#7 mode_8bpppixelcell::ch#8 ] )
  to:mode_8bpppixelcell::@5
mode_8bpppixelcell::@5: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@16 mode_8bpppixelcell::@4
  [203] (byte) mode_8bpppixelcell::cr#6 ← phi( mode_8bpppixelcell::@16/(byte) mode_8bpppixelcell::cr#1 mode_8bpppixelcell::@4/(byte/signed byte/word/signed word/dword/signed dword) 0 ) [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 ] )
  [203] (byte) mode_8bpppixelcell::col#5 ← phi( mode_8bpppixelcell::@16/(byte) mode_8bpppixelcell::col#1 mode_8bpppixelcell::@4/(byte) mode_8bpppixelcell::col#7 ) [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 ] )
  [203] (byte*) mode_8bpppixelcell::gfxb#5 ← phi( mode_8bpppixelcell::@16/(byte*) mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::@4/(byte*) mode_8bpppixelcell::gfxb#7 ) [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 ] )
  [203] (byte*) mode_8bpppixelcell::chargen#2 ← phi( mode_8bpppixelcell::@16/(byte*) mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::@4/(byte*) mode_8bpppixelcell::chargen#4 ) [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 ] )
  [204] (byte) mode_8bpppixelcell::bits#0 ← *((byte*) mode_8bpppixelcell::chargen#2) [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#0 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#0 ] )
  [205] (byte*) mode_8bpppixelcell::chargen#1 ← ++ (byte*) mode_8bpppixelcell::chargen#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#0 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#0 ] )
  to:mode_8bpppixelcell::@6
mode_8bpppixelcell::@6: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@5 mode_8bpppixelcell::@7
  [206] (byte) mode_8bpppixelcell::cp#2 ← phi( mode_8bpppixelcell::@5/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_8bpppixelcell::@7/(byte) mode_8bpppixelcell::cp#1 ) [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] )
  [206] (byte) mode_8bpppixelcell::col#2 ← phi( mode_8bpppixelcell::@5/(byte) mode_8bpppixelcell::col#5 mode_8bpppixelcell::@7/(byte) mode_8bpppixelcell::col#1 ) [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] )
  [206] (byte*) mode_8bpppixelcell::gfxb#2 ← phi( mode_8bpppixelcell::@5/(byte*) mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::@7/(byte*) mode_8bpppixelcell::gfxb#1 ) [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] )
  [206] (byte) mode_8bpppixelcell::bits#2 ← phi( mode_8bpppixelcell::@5/(byte) mode_8bpppixelcell::bits#0 mode_8bpppixelcell::@7/(byte) mode_8bpppixelcell::bits#1 ) [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] )
  [207] (byte~) mode_8bpppixelcell::$17 ← (byte) mode_8bpppixelcell::bits#2 & (byte/word/signed word/dword/signed dword) 128 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::$17 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::$17 ] )
  [208] if((byte~) mode_8bpppixelcell::$17==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_8bpppixelcell::@7 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] )
  to:mode_8bpppixelcell::@15
mode_8bpppixelcell::@15: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@6
  [209] (byte~) mode_8bpppixelcell::c#3 ← (byte) mode_8bpppixelcell::col#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::c#3 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::c#3 ] )
  to:mode_8bpppixelcell::@7
mode_8bpppixelcell::@7: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@15 mode_8bpppixelcell::@6
  [210] (byte) mode_8bpppixelcell::c#2 ← phi( mode_8bpppixelcell::@15/(byte~) mode_8bpppixelcell::c#3 mode_8bpppixelcell::@6/(byte/signed byte/word/signed word/dword/signed dword) 0 ) [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::c#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::c#2 ] )
  [211] *((byte*) mode_8bpppixelcell::gfxb#2) ← (byte) mode_8bpppixelcell::c#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] )
  [212] (byte*) mode_8bpppixelcell::gfxb#1 ← ++ (byte*) mode_8bpppixelcell::gfxb#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] )
  [213] (byte) mode_8bpppixelcell::bits#1 ← (byte) mode_8bpppixelcell::bits#2 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::bits#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::bits#1 ] )
  [214] (byte) mode_8bpppixelcell::col#1 ← ++ (byte) mode_8bpppixelcell::col#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::bits#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::bits#1 ] )
  [215] (byte) mode_8bpppixelcell::cp#1 ← ++ (byte) mode_8bpppixelcell::cp#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#1 mode_8bpppixelcell::cp#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#1 mode_8bpppixelcell::cp#1 ] )
  [216] if((byte) mode_8bpppixelcell::cp#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto mode_8bpppixelcell::@6 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#1 mode_8bpppixelcell::cp#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#1 mode_8bpppixelcell::cp#1 ] )
  to:mode_8bpppixelcell::@16
mode_8bpppixelcell::@16: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@7
  [217] (byte) mode_8bpppixelcell::cr#1 ← ++ (byte) mode_8bpppixelcell::cr#6 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#1 ] )
  [218] if((byte) mode_8bpppixelcell::cr#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto mode_8bpppixelcell::@5 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#1 ] )
  to:mode_8bpppixelcell::@17
mode_8bpppixelcell::@17: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@16
  [219] (byte) mode_8bpppixelcell::ch#1 ← ++ (byte) mode_8bpppixelcell::ch#8 [ mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::ch#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::ch#1 ] )
  [220] if((byte) mode_8bpppixelcell::ch#1!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_8bpppixelcell::@4 [ mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::ch#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::ch#1 ] )
  to:mode_8bpppixelcell::@18
mode_8bpppixelcell::@18: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@17
  [221] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 55 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] )
  to:mode_8bpppixelcell::@8
mode_8bpppixelcell::@8: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@18 mode_8bpppixelcell::@24
  [222] if(true) goto mode_8bpppixelcell::@9 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] )
  to:mode_8bpppixelcell::@return
mode_8bpppixelcell::@return: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@24 mode_8bpppixelcell::@8
  [223] return  [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] )
  to:@return
mode_8bpppixelcell::@9: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@8
  [224] phi() [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] )
  [225] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ keyboard_key_pressed::return#0 ] )
  [226] (byte) keyboard_key_pressed::return#22 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#22 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ keyboard_key_pressed::return#22 ] )
  to:mode_8bpppixelcell::@24
mode_8bpppixelcell::@24: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@9
  [227] (byte~) mode_8bpppixelcell::$24 ← (byte) keyboard_key_pressed::return#22 [ mode_8bpppixelcell::$24 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::$24 ] )
  [228] if((byte~) mode_8bpppixelcell::$24==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_8bpppixelcell::@8 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] )
  to:mode_8bpppixelcell::@return
mode_sixsfred: scope:[mode_sixsfred]  from menu::@37
  [229] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] )
  [230] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] )
  [231] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] )
  [232] *((const byte*) DTV_PLANEA_START_LO#0) ← <(const byte*) mode_sixsfred::PLANEA#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] )
  [233] *((const byte*) DTV_PLANEA_START_MI#0) ← >(const byte*) mode_sixsfred::PLANEA#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] )
  [234] *((const byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] )
  [235] *((const byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] )
  [236] *((const byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] )
  [237] *((const byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] )
  [238] *((const byte*) DTV_PLANEB_START_LO#0) ← <(const byte*) mode_sixsfred::PLANEB#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] )
  [239] *((const byte*) DTV_PLANEB_START_MI#0) ← >(const byte*) mode_sixsfred::PLANEB#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] )
  [240] *((const byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] )
  [241] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] )
  [242] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] )
  [243] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] )
  [244] *((const byte*) DTV_COLOR_BANK_LO#0) ← <(const byte*) mode_sixsfred::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] )
  [245] *((const byte*) DTV_COLOR_BANK_HI#0) ← >(const byte*) mode_sixsfred::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] )
  to:mode_sixsfred::@1
mode_sixsfred::@1: scope:[mode_sixsfred]  from mode_sixsfred mode_sixsfred::@1
  [246] (byte) mode_sixsfred::i#2 ← phi( mode_sixsfred/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_sixsfred::@1/(byte) mode_sixsfred::i#1 ) [ mode_sixsfred::i#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::i#2 ] )
  [247] *((const byte*) DTV_PALETTE#0 + (byte) mode_sixsfred::i#2) ← (byte) mode_sixsfred::i#2 [ mode_sixsfred::i#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::i#2 ] )
  [248] (byte) mode_sixsfred::i#1 ← ++ (byte) mode_sixsfred::i#2 [ mode_sixsfred::i#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::i#1 ] )
  [249] if((byte) mode_sixsfred::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_sixsfred::@1 [ mode_sixsfred::i#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::i#1 ] )
  to:mode_sixsfred::@12
mode_sixsfred::@12: scope:[mode_sixsfred]  from mode_sixsfred::@1
  [250] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] )
  to:mode_sixsfred::@2
mode_sixsfred::@2: scope:[mode_sixsfred]  from mode_sixsfred::@12 mode_sixsfred::@13
  [251] (byte*) mode_sixsfred::col#3 ← phi( mode_sixsfred::@12/(const byte*) mode_sixsfred::COLORS#0 mode_sixsfred::@13/(byte*) mode_sixsfred::col#1 ) [ mode_sixsfred::cy#4 mode_sixsfred::col#3 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::col#3 ] )
  [251] (byte) mode_sixsfred::cy#4 ← phi( mode_sixsfred::@12/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_sixsfred::@13/(byte) mode_sixsfred::cy#1 ) [ mode_sixsfred::cy#4 mode_sixsfred::col#3 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::col#3 ] )
  to:mode_sixsfred::@3
mode_sixsfred::@3: scope:[mode_sixsfred]  from mode_sixsfred::@2 mode_sixsfred::@3
  [252] (byte*) mode_sixsfred::col#2 ← phi( mode_sixsfred::@2/(byte*) mode_sixsfred::col#3 mode_sixsfred::@3/(byte*) mode_sixsfred::col#1 ) [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 ] )
  [252] (byte) mode_sixsfred::cx#2 ← phi( mode_sixsfred::@2/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_sixsfred::@3/(byte) mode_sixsfred::cx#1 ) [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 ] )
  [253] (byte~) mode_sixsfred::$15 ← (byte) mode_sixsfred::cx#2 + (byte) mode_sixsfred::cy#4 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 mode_sixsfred::$15 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 mode_sixsfred::$15 ] )
  [254] (byte~) mode_sixsfred::$16 ← (byte~) mode_sixsfred::$15 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 mode_sixsfred::$16 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 mode_sixsfred::$16 ] )
  [255] *((byte*) mode_sixsfred::col#2) ← (byte~) mode_sixsfred::$16 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 ] )
  [256] (byte*) mode_sixsfred::col#1 ← ++ (byte*) mode_sixsfred::col#2 [ mode_sixsfred::cy#4 mode_sixsfred::col#1 mode_sixsfred::cx#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::col#1 mode_sixsfred::cx#2 ] )
  [257] (byte) mode_sixsfred::cx#1 ← ++ (byte) mode_sixsfred::cx#2 [ mode_sixsfred::cy#4 mode_sixsfred::col#1 mode_sixsfred::cx#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::col#1 mode_sixsfred::cx#1 ] )
  [258] if((byte) mode_sixsfred::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred::@3 [ mode_sixsfred::cy#4 mode_sixsfred::col#1 mode_sixsfred::cx#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::col#1 mode_sixsfred::cx#1 ] )
  to:mode_sixsfred::@13
mode_sixsfred::@13: scope:[mode_sixsfred]  from mode_sixsfred::@3
  [259] (byte) mode_sixsfred::cy#1 ← ++ (byte) mode_sixsfred::cy#4 [ mode_sixsfred::cy#1 mode_sixsfred::col#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#1 mode_sixsfred::col#1 ] )
  [260] if((byte) mode_sixsfred::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_sixsfred::@2 [ mode_sixsfred::cy#1 mode_sixsfred::col#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#1 mode_sixsfred::col#1 ] )
  to:mode_sixsfred::@4
mode_sixsfred::@4: scope:[mode_sixsfred]  from mode_sixsfred::@13 mode_sixsfred::@15
  [261] (byte*) mode_sixsfred::gfxa#3 ← phi( mode_sixsfred::@13/(const byte*) mode_sixsfred::PLANEA#0 mode_sixsfred::@15/(byte*) mode_sixsfred::gfxa#1 ) [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#3 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#3 ] )
  [261] (byte) mode_sixsfred::ay#4 ← phi( mode_sixsfred::@13/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_sixsfred::@15/(byte) mode_sixsfred::ay#1 ) [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#3 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#3 ] )
  to:mode_sixsfred::@5
mode_sixsfred::@5: scope:[mode_sixsfred]  from mode_sixsfred::@4 mode_sixsfred::@5
  [262] (byte) mode_sixsfred::ax#2 ← phi( mode_sixsfred::@4/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_sixsfred::@5/(byte) mode_sixsfred::ax#1 ) [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 ] )
  [262] (byte*) mode_sixsfred::gfxa#2 ← phi( mode_sixsfred::@4/(byte*) mode_sixsfred::gfxa#3 mode_sixsfred::@5/(byte*) mode_sixsfred::gfxa#1 ) [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 ] )
  [263] (byte~) mode_sixsfred::$19 ← (byte) mode_sixsfred::ay#4 >> (byte/signed byte/word/signed word/dword/signed dword) 1 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 mode_sixsfred::$19 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 mode_sixsfred::$19 ] )
  [264] (byte) mode_sixsfred::row#0 ← (byte~) mode_sixsfred::$19 & (byte/signed byte/word/signed word/dword/signed dword) 3 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 mode_sixsfred::row#0 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 mode_sixsfred::row#0 ] )
  [265] *((byte*) mode_sixsfred::gfxa#2) ← *((const byte[]) mode_sixsfred::row_bitmask#0 + (byte) mode_sixsfred::row#0) [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 ] )
  [266] (byte*) mode_sixsfred::gfxa#1 ← ++ (byte*) mode_sixsfred::gfxa#2 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#1 mode_sixsfred::ax#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#1 mode_sixsfred::ax#2 ] )
  [267] (byte) mode_sixsfred::ax#1 ← ++ (byte) mode_sixsfred::ax#2 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#1 mode_sixsfred::ax#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#1 mode_sixsfred::ax#1 ] )
  [268] if((byte) mode_sixsfred::ax#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred::@5 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#1 mode_sixsfred::ax#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#1 mode_sixsfred::ax#1 ] )
  to:mode_sixsfred::@15
mode_sixsfred::@15: scope:[mode_sixsfred]  from mode_sixsfred::@5
  [269] (byte) mode_sixsfred::ay#1 ← ++ (byte) mode_sixsfred::ay#4 [ mode_sixsfred::ay#1 mode_sixsfred::gfxa#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#1 mode_sixsfred::gfxa#1 ] )
  [270] if((byte) mode_sixsfred::ay#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_sixsfred::@4 [ mode_sixsfred::ay#1 mode_sixsfred::gfxa#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#1 mode_sixsfred::gfxa#1 ] )
  to:mode_sixsfred::@6
mode_sixsfred::@6: scope:[mode_sixsfred]  from mode_sixsfred::@15 mode_sixsfred::@17
  [271] (byte) mode_sixsfred::by#4 ← phi( mode_sixsfred::@15/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_sixsfred::@17/(byte) mode_sixsfred::by#1 ) [ mode_sixsfred::gfxb#3 mode_sixsfred::by#4 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::gfxb#3 mode_sixsfred::by#4 ] )
  [271] (byte*) mode_sixsfred::gfxb#3 ← phi( mode_sixsfred::@15/(const byte*) mode_sixsfred::PLANEB#0 mode_sixsfred::@17/(byte*) mode_sixsfred::gfxb#1 ) [ mode_sixsfred::gfxb#3 mode_sixsfred::by#4 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::gfxb#3 mode_sixsfred::by#4 ] )
  to:mode_sixsfred::@7
mode_sixsfred::@7: scope:[mode_sixsfred]  from mode_sixsfred::@6 mode_sixsfred::@7
  [272] (byte) mode_sixsfred::bx#2 ← phi( mode_sixsfred::@6/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_sixsfred::@7/(byte) mode_sixsfred::bx#1 ) [ mode_sixsfred::by#4 mode_sixsfred::gfxb#2 mode_sixsfred::bx#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#2 mode_sixsfred::bx#2 ] )
  [272] (byte*) mode_sixsfred::gfxb#2 ← phi( mode_sixsfred::@6/(byte*) mode_sixsfred::gfxb#3 mode_sixsfred::@7/(byte*) mode_sixsfred::gfxb#1 ) [ mode_sixsfred::by#4 mode_sixsfred::gfxb#2 mode_sixsfred::bx#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#2 mode_sixsfred::bx#2 ] )
  [273] *((byte*) mode_sixsfred::gfxb#2) ← (byte/signed byte/word/signed word/dword/signed dword) 27 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#2 mode_sixsfred::bx#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#2 mode_sixsfred::bx#2 ] )
  [274] (byte*) mode_sixsfred::gfxb#1 ← ++ (byte*) mode_sixsfred::gfxb#2 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#1 mode_sixsfred::bx#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#1 mode_sixsfred::bx#2 ] )
  [275] (byte) mode_sixsfred::bx#1 ← ++ (byte) mode_sixsfred::bx#2 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#1 mode_sixsfred::bx#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#1 mode_sixsfred::bx#1 ] )
  [276] if((byte) mode_sixsfred::bx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred::@7 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#1 mode_sixsfred::bx#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#1 mode_sixsfred::bx#1 ] )
  to:mode_sixsfred::@17
mode_sixsfred::@17: scope:[mode_sixsfred]  from mode_sixsfred::@7
  [277] (byte) mode_sixsfred::by#1 ← ++ (byte) mode_sixsfred::by#4 [ mode_sixsfred::gfxb#1 mode_sixsfred::by#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::gfxb#1 mode_sixsfred::by#1 ] )
  [278] if((byte) mode_sixsfred::by#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_sixsfred::@6 [ mode_sixsfred::gfxb#1 mode_sixsfred::by#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::gfxb#1 mode_sixsfred::by#1 ] )
  to:mode_sixsfred::@8
mode_sixsfred::@8: scope:[mode_sixsfred]  from mode_sixsfred::@17 mode_sixsfred::@24
  [279] if(true) goto mode_sixsfred::@9 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] )
  to:mode_sixsfred::@return
mode_sixsfred::@return: scope:[mode_sixsfred]  from mode_sixsfred::@24 mode_sixsfred::@8
  [280] return  [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] )
  to:@return
mode_sixsfred::@9: scope:[mode_sixsfred]  from mode_sixsfred::@8
  [281] phi() [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] )
  [282] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_sixsfred:98 [ keyboard_key_pressed::return#0 ] )
  [283] (byte) keyboard_key_pressed::return#20 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#20 ] ( main:2::menu:9::mode_sixsfred:98 [ keyboard_key_pressed::return#20 ] )
  to:mode_sixsfred::@24
mode_sixsfred::@24: scope:[mode_sixsfred]  from mode_sixsfred::@9
  [284] (byte~) mode_sixsfred::$25 ← (byte) keyboard_key_pressed::return#20 [ mode_sixsfred::$25 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::$25 ] )
  [285] if((byte~) mode_sixsfred::$25==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_sixsfred::@8 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] )
  to:mode_sixsfred::@return
mode_twoplanebitmap: scope:[mode_twoplanebitmap]  from menu::@35
  [286] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
  [287] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
  [288] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
  [289] *((const byte*) DTV_PLANEA_START_LO#0) ← <(const byte*) mode_twoplanebitmap::PLANEA#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
  [290] *((const byte*) DTV_PLANEA_START_MI#0) ← >(const byte*) mode_twoplanebitmap::PLANEA#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
  [291] *((const byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
  [292] *((const byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
  [293] *((const byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
  [294] *((const byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
  [295] *((const byte*) DTV_PLANEB_START_LO#0) ← <(const byte*) mode_twoplanebitmap::PLANEB#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
  [296] *((const byte*) DTV_PLANEB_START_MI#0) ← >(const byte*) mode_twoplanebitmap::PLANEB#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
  [297] *((const byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
  [298] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
  [299] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
  [300] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
  [301] *((const byte*) DTV_COLOR_BANK_LO#0) ← <(const byte*) mode_twoplanebitmap::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
  [302] *((const byte*) DTV_COLOR_BANK_HI#0) ← >(const byte*) mode_twoplanebitmap::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
  to:mode_twoplanebitmap::@1
mode_twoplanebitmap::@1: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap mode_twoplanebitmap::@1
  [303] (byte) mode_twoplanebitmap::i#2 ← phi( mode_twoplanebitmap/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_twoplanebitmap::@1/(byte) mode_twoplanebitmap::i#1 ) [ mode_twoplanebitmap::i#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::i#2 ] )
  [304] *((const byte*) DTV_PALETTE#0 + (byte) mode_twoplanebitmap::i#2) ← (byte) mode_twoplanebitmap::i#2 [ mode_twoplanebitmap::i#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::i#2 ] )
  [305] (byte) mode_twoplanebitmap::i#1 ← ++ (byte) mode_twoplanebitmap::i#2 [ mode_twoplanebitmap::i#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::i#1 ] )
  [306] if((byte) mode_twoplanebitmap::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_twoplanebitmap::@1 [ mode_twoplanebitmap::i#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::i#1 ] )
  to:mode_twoplanebitmap::@14
mode_twoplanebitmap::@14: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@1
  [307] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
  [308] *((const byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 112 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
  [309] *((const byte*) BGCOL2#0) ← (byte/word/signed word/dword/signed dword) 212 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
  to:mode_twoplanebitmap::@2
mode_twoplanebitmap::@2: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@14 mode_twoplanebitmap::@15
  [310] (byte*) mode_twoplanebitmap::col#3 ← phi( mode_twoplanebitmap::@14/(const byte*) mode_twoplanebitmap::COLORS#0 mode_twoplanebitmap::@15/(byte*) mode_twoplanebitmap::col#1 ) [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#3 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#3 ] )
  [310] (byte) mode_twoplanebitmap::cy#4 ← phi( mode_twoplanebitmap::@14/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_twoplanebitmap::@15/(byte) mode_twoplanebitmap::cy#1 ) [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#3 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#3 ] )
  to:mode_twoplanebitmap::@3
mode_twoplanebitmap::@3: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@2 mode_twoplanebitmap::@3
  [311] (byte*) mode_twoplanebitmap::col#2 ← phi( mode_twoplanebitmap::@2/(byte*) mode_twoplanebitmap::col#3 mode_twoplanebitmap::@3/(byte*) mode_twoplanebitmap::col#1 ) [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 ] )
  [311] (byte) mode_twoplanebitmap::cx#2 ← phi( mode_twoplanebitmap::@2/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_twoplanebitmap::@3/(byte) mode_twoplanebitmap::cx#1 ) [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 ] )
  [312] (byte~) mode_twoplanebitmap::$14 ← (byte) mode_twoplanebitmap::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$14 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$14 ] )
  [313] (byte~) mode_twoplanebitmap::$15 ← (byte~) mode_twoplanebitmap::$14 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$15 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$15 ] )
  [314] (byte~) mode_twoplanebitmap::$16 ← (byte) mode_twoplanebitmap::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$15 mode_twoplanebitmap::$16 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$15 mode_twoplanebitmap::$16 ] )
  [315] (byte~) mode_twoplanebitmap::$17 ← (byte~) mode_twoplanebitmap::$15 | (byte~) mode_twoplanebitmap::$16 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$17 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$17 ] )
  [316] *((byte*) mode_twoplanebitmap::col#2) ← (byte~) mode_twoplanebitmap::$17 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 ] )
  [317] (byte*) mode_twoplanebitmap::col#1 ← ++ (byte*) mode_twoplanebitmap::col#2 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#1 mode_twoplanebitmap::cx#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#1 mode_twoplanebitmap::cx#2 ] )
  [318] (byte) mode_twoplanebitmap::cx#1 ← ++ (byte) mode_twoplanebitmap::cx#2 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#1 mode_twoplanebitmap::cx#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#1 mode_twoplanebitmap::cx#1 ] )
  [319] if((byte) mode_twoplanebitmap::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_twoplanebitmap::@3 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#1 mode_twoplanebitmap::cx#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#1 mode_twoplanebitmap::cx#1 ] )
  to:mode_twoplanebitmap::@15
mode_twoplanebitmap::@15: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@3
  [320] (byte) mode_twoplanebitmap::cy#1 ← ++ (byte) mode_twoplanebitmap::cy#4 [ mode_twoplanebitmap::cy#1 mode_twoplanebitmap::col#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#1 mode_twoplanebitmap::col#1 ] )
  [321] if((byte) mode_twoplanebitmap::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_twoplanebitmap::@2 [ mode_twoplanebitmap::cy#1 mode_twoplanebitmap::col#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#1 mode_twoplanebitmap::col#1 ] )
  to:mode_twoplanebitmap::@4
mode_twoplanebitmap::@4: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@15 mode_twoplanebitmap::@19
  [322] (byte*) mode_twoplanebitmap::gfxa#6 ← phi( mode_twoplanebitmap::@15/(const byte*) mode_twoplanebitmap::PLANEA#0 mode_twoplanebitmap::@19/(byte*) mode_twoplanebitmap::gfxa#7 ) [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#6 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#6 ] )
  [322] (byte) mode_twoplanebitmap::ay#4 ← phi( mode_twoplanebitmap::@15/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_twoplanebitmap::@19/(byte) mode_twoplanebitmap::ay#1 ) [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#6 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#6 ] )
  to:mode_twoplanebitmap::@5
mode_twoplanebitmap::@5: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@4 mode_twoplanebitmap::@7
  [323] (byte) mode_twoplanebitmap::ax#2 ← phi( mode_twoplanebitmap::@4/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_twoplanebitmap::@7/(byte) mode_twoplanebitmap::ax#1 ) [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] )
  [323] (byte*) mode_twoplanebitmap::gfxa#3 ← phi( mode_twoplanebitmap::@4/(byte*) mode_twoplanebitmap::gfxa#6 mode_twoplanebitmap::@7/(byte*) mode_twoplanebitmap::gfxa#7 ) [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] )
  [324] (byte~) mode_twoplanebitmap::$20 ← (byte) mode_twoplanebitmap::ay#4 & (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::$20 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::$20 ] )
  [325] if((byte~) mode_twoplanebitmap::$20!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_twoplanebitmap::@6 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] )
  to:mode_twoplanebitmap::@17
mode_twoplanebitmap::@17: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@5
  [326] *((byte*) mode_twoplanebitmap::gfxa#3) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] )
  [327] (byte*) mode_twoplanebitmap::gfxa#2 ← ++ (byte*) mode_twoplanebitmap::gfxa#3 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::gfxa#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::gfxa#2 ] )
  to:mode_twoplanebitmap::@7
mode_twoplanebitmap::@7: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@17 mode_twoplanebitmap::@6
  [328] (byte*) mode_twoplanebitmap::gfxa#7 ← phi( mode_twoplanebitmap::@17/(byte*) mode_twoplanebitmap::gfxa#2 mode_twoplanebitmap::@6/(byte*) mode_twoplanebitmap::gfxa#1 ) [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::ax#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::ax#2 ] )
  [329] (byte) mode_twoplanebitmap::ax#1 ← ++ (byte) mode_twoplanebitmap::ax#2 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::ax#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::ax#1 ] )
  [330] if((byte) mode_twoplanebitmap::ax#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_twoplanebitmap::@5 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::ax#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::ax#1 ] )
  to:mode_twoplanebitmap::@19
mode_twoplanebitmap::@19: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@7
  [331] (byte) mode_twoplanebitmap::ay#1 ← ++ (byte) mode_twoplanebitmap::ay#4 [ mode_twoplanebitmap::ay#1 mode_twoplanebitmap::gfxa#7 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#1 mode_twoplanebitmap::gfxa#7 ] )
  [332] if((byte) mode_twoplanebitmap::ay#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_twoplanebitmap::@4 [ mode_twoplanebitmap::ay#1 mode_twoplanebitmap::gfxa#7 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#1 mode_twoplanebitmap::gfxa#7 ] )
  to:mode_twoplanebitmap::@8
mode_twoplanebitmap::@8: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@19 mode_twoplanebitmap::@21
  [333] (byte) mode_twoplanebitmap::by#4 ← phi( mode_twoplanebitmap::@19/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_twoplanebitmap::@21/(byte) mode_twoplanebitmap::by#1 ) [ mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::by#4 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::by#4 ] )
  [333] (byte*) mode_twoplanebitmap::gfxb#3 ← phi( mode_twoplanebitmap::@19/(const byte*) mode_twoplanebitmap::PLANEB#0 mode_twoplanebitmap::@21/(byte*) mode_twoplanebitmap::gfxb#1 ) [ mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::by#4 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::by#4 ] )
  to:mode_twoplanebitmap::@9
mode_twoplanebitmap::@9: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@8 mode_twoplanebitmap::@9
  [334] (byte) mode_twoplanebitmap::bx#2 ← phi( mode_twoplanebitmap::@8/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_twoplanebitmap::@9/(byte) mode_twoplanebitmap::bx#1 ) [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::bx#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::bx#2 ] )
  [334] (byte*) mode_twoplanebitmap::gfxb#2 ← phi( mode_twoplanebitmap::@8/(byte*) mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::@9/(byte*) mode_twoplanebitmap::gfxb#1 ) [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::bx#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::bx#2 ] )
  [335] *((byte*) mode_twoplanebitmap::gfxb#2) ← (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::bx#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::bx#2 ] )
  [336] (byte*) mode_twoplanebitmap::gfxb#1 ← ++ (byte*) mode_twoplanebitmap::gfxb#2 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::bx#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::bx#2 ] )
  [337] (byte) mode_twoplanebitmap::bx#1 ← ++ (byte) mode_twoplanebitmap::bx#2 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::bx#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::bx#1 ] )
  [338] if((byte) mode_twoplanebitmap::bx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_twoplanebitmap::@9 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::bx#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::bx#1 ] )
  to:mode_twoplanebitmap::@21
mode_twoplanebitmap::@21: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@9
  [339] (byte) mode_twoplanebitmap::by#1 ← ++ (byte) mode_twoplanebitmap::by#4 [ mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::by#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::by#1 ] )
  [340] if((byte) mode_twoplanebitmap::by#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_twoplanebitmap::@8 [ mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::by#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::by#1 ] )
  to:mode_twoplanebitmap::@10
mode_twoplanebitmap::@10: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@21 mode_twoplanebitmap::@28
  [341] if(true) goto mode_twoplanebitmap::@11 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
  to:mode_twoplanebitmap::@return
mode_twoplanebitmap::@return: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@10 mode_twoplanebitmap::@28
  [342] return  [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
  to:@return
mode_twoplanebitmap::@11: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@10
  [343] phi() [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
  [344] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ keyboard_key_pressed::return#0 ] )
  [345] (byte) keyboard_key_pressed::return#19 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#19 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ keyboard_key_pressed::return#19 ] )
  to:mode_twoplanebitmap::@28
mode_twoplanebitmap::@28: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@11
  [346] (byte~) mode_twoplanebitmap::$27 ← (byte) keyboard_key_pressed::return#19 [ mode_twoplanebitmap::$27 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::$27 ] )
  [347] if((byte~) mode_twoplanebitmap::$27==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_twoplanebitmap::@10 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
  to:mode_twoplanebitmap::@return
mode_twoplanebitmap::@6: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@5
  [348] *((byte*) mode_twoplanebitmap::gfxa#3) ← (byte/word/signed word/dword/signed dword) 255 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] )
  [349] (byte*) mode_twoplanebitmap::gfxa#1 ← ++ (byte*) mode_twoplanebitmap::gfxa#3 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::gfxa#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::gfxa#1 ] )
  to:mode_twoplanebitmap::@7
mode_sixsfred2: scope:[mode_sixsfred2]  from menu::@33
  [350] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] )
  [351] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] )
  [352] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] )
  [353] *((const byte*) DTV_PLANEA_START_LO#0) ← <(const byte*) mode_sixsfred2::PLANEA#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] )
  [354] *((const byte*) DTV_PLANEA_START_MI#0) ← >(const byte*) mode_sixsfred2::PLANEA#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] )
  [355] *((const byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] )
  [356] *((const byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] )
  [357] *((const byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] )
  [358] *((const byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] )
  [359] *((const byte*) DTV_PLANEB_START_LO#0) ← <(const byte*) mode_sixsfred2::PLANEB#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] )
  [360] *((const byte*) DTV_PLANEB_START_MI#0) ← >(const byte*) mode_sixsfred2::PLANEB#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] )
  [361] *((const byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] )
  [362] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] )
  [363] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] )
  [364] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] )
  [365] *((const byte*) DTV_COLOR_BANK_LO#0) ← <(const byte*) mode_sixsfred2::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] )
  [366] *((const byte*) DTV_COLOR_BANK_HI#0) ← >(const byte*) mode_sixsfred2::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] )
  to:mode_sixsfred2::@1
mode_sixsfred2::@1: scope:[mode_sixsfred2]  from mode_sixsfred2 mode_sixsfred2::@1
  [367] (byte) mode_sixsfred2::i#2 ← phi( mode_sixsfred2/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_sixsfred2::@1/(byte) mode_sixsfred2::i#1 ) [ mode_sixsfred2::i#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::i#2 ] )
  [368] *((const byte*) DTV_PALETTE#0 + (byte) mode_sixsfred2::i#2) ← (byte) mode_sixsfred2::i#2 [ mode_sixsfred2::i#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::i#2 ] )
  [369] (byte) mode_sixsfred2::i#1 ← ++ (byte) mode_sixsfred2::i#2 [ mode_sixsfred2::i#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::i#1 ] )
  [370] if((byte) mode_sixsfred2::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_sixsfred2::@1 [ mode_sixsfred2::i#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::i#1 ] )
  to:mode_sixsfred2::@12
mode_sixsfred2::@12: scope:[mode_sixsfred2]  from mode_sixsfred2::@1
  [371] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] )
  to:mode_sixsfred2::@2
mode_sixsfred2::@2: scope:[mode_sixsfred2]  from mode_sixsfred2::@12 mode_sixsfred2::@13
  [372] (byte*) mode_sixsfred2::col#3 ← phi( mode_sixsfred2::@12/(const byte*) mode_sixsfred2::COLORS#0 mode_sixsfred2::@13/(byte*) mode_sixsfred2::col#1 ) [ mode_sixsfred2::cy#4 mode_sixsfred2::col#3 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#3 ] )
  [372] (byte) mode_sixsfred2::cy#4 ← phi( mode_sixsfred2::@12/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_sixsfred2::@13/(byte) mode_sixsfred2::cy#1 ) [ mode_sixsfred2::cy#4 mode_sixsfred2::col#3 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#3 ] )
  to:mode_sixsfred2::@3
mode_sixsfred2::@3: scope:[mode_sixsfred2]  from mode_sixsfred2::@2 mode_sixsfred2::@3
  [373] (byte*) mode_sixsfred2::col#2 ← phi( mode_sixsfred2::@2/(byte*) mode_sixsfred2::col#3 mode_sixsfred2::@3/(byte*) mode_sixsfred2::col#1 ) [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 ] )
  [373] (byte) mode_sixsfred2::cx#2 ← phi( mode_sixsfred2::@2/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_sixsfred2::@3/(byte) mode_sixsfred2::cx#1 ) [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 ] )
  [374] (byte~) mode_sixsfred2::$14 ← (byte) mode_sixsfred2::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 3 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$14 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$14 ] )
  [375] (byte~) mode_sixsfred2::$15 ← (byte~) mode_sixsfred2::$14 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$15 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$15 ] )
  [376] (byte~) mode_sixsfred2::$16 ← (byte) mode_sixsfred2::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 3 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$15 mode_sixsfred2::$16 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$15 mode_sixsfred2::$16 ] )
  [377] (byte~) mode_sixsfred2::$17 ← (byte~) mode_sixsfred2::$15 | (byte~) mode_sixsfred2::$16 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$17 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$17 ] )
  [378] *((byte*) mode_sixsfred2::col#2) ← (byte~) mode_sixsfred2::$17 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 ] )
  [379] (byte*) mode_sixsfred2::col#1 ← ++ (byte*) mode_sixsfred2::col#2 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#1 mode_sixsfred2::cx#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#1 mode_sixsfred2::cx#2 ] )
  [380] (byte) mode_sixsfred2::cx#1 ← ++ (byte) mode_sixsfred2::cx#2 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#1 mode_sixsfred2::cx#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#1 mode_sixsfred2::cx#1 ] )
  [381] if((byte) mode_sixsfred2::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred2::@3 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#1 mode_sixsfred2::cx#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#1 mode_sixsfred2::cx#1 ] )
  to:mode_sixsfred2::@13
mode_sixsfred2::@13: scope:[mode_sixsfred2]  from mode_sixsfred2::@3
  [382] (byte) mode_sixsfred2::cy#1 ← ++ (byte) mode_sixsfred2::cy#4 [ mode_sixsfred2::cy#1 mode_sixsfred2::col#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#1 mode_sixsfred2::col#1 ] )
  [383] if((byte) mode_sixsfred2::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_sixsfred2::@2 [ mode_sixsfred2::cy#1 mode_sixsfred2::col#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#1 mode_sixsfred2::col#1 ] )
  to:mode_sixsfred2::@4
mode_sixsfred2::@4: scope:[mode_sixsfred2]  from mode_sixsfred2::@13 mode_sixsfred2::@15
  [384] (byte*) mode_sixsfred2::gfxa#3 ← phi( mode_sixsfred2::@13/(const byte*) mode_sixsfred2::PLANEA#0 mode_sixsfred2::@15/(byte*) mode_sixsfred2::gfxa#1 ) [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#3 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#3 ] )
  [384] (byte) mode_sixsfred2::ay#4 ← phi( mode_sixsfred2::@13/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_sixsfred2::@15/(byte) mode_sixsfred2::ay#1 ) [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#3 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#3 ] )
  to:mode_sixsfred2::@5
mode_sixsfred2::@5: scope:[mode_sixsfred2]  from mode_sixsfred2::@4 mode_sixsfred2::@5
  [385] (byte) mode_sixsfred2::ax#2 ← phi( mode_sixsfred2::@4/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_sixsfred2::@5/(byte) mode_sixsfred2::ax#1 ) [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 ] )
  [385] (byte*) mode_sixsfred2::gfxa#2 ← phi( mode_sixsfred2::@4/(byte*) mode_sixsfred2::gfxa#3 mode_sixsfred2::@5/(byte*) mode_sixsfred2::gfxa#1 ) [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 ] )
  [386] (byte~) mode_sixsfred2::$20 ← (byte) mode_sixsfred2::ay#4 >> (byte/signed byte/word/signed word/dword/signed dword) 1 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 mode_sixsfred2::$20 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 mode_sixsfred2::$20 ] )
  [387] (byte) mode_sixsfred2::row#0 ← (byte~) mode_sixsfred2::$20 & (byte/signed byte/word/signed word/dword/signed dword) 3 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 mode_sixsfred2::row#0 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 mode_sixsfred2::row#0 ] )
  [388] *((byte*) mode_sixsfred2::gfxa#2) ← *((const byte[]) mode_sixsfred2::row_bitmask#0 + (byte) mode_sixsfred2::row#0) [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 ] )
  [389] (byte*) mode_sixsfred2::gfxa#1 ← ++ (byte*) mode_sixsfred2::gfxa#2 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#1 mode_sixsfred2::ax#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#1 mode_sixsfred2::ax#2 ] )
  [390] (byte) mode_sixsfred2::ax#1 ← ++ (byte) mode_sixsfred2::ax#2 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#1 mode_sixsfred2::ax#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#1 mode_sixsfred2::ax#1 ] )
  [391] if((byte) mode_sixsfred2::ax#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred2::@5 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#1 mode_sixsfred2::ax#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#1 mode_sixsfred2::ax#1 ] )
  to:mode_sixsfred2::@15
mode_sixsfred2::@15: scope:[mode_sixsfred2]  from mode_sixsfred2::@5
  [392] (byte) mode_sixsfred2::ay#1 ← ++ (byte) mode_sixsfred2::ay#4 [ mode_sixsfred2::ay#1 mode_sixsfred2::gfxa#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#1 mode_sixsfred2::gfxa#1 ] )
  [393] if((byte) mode_sixsfred2::ay#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_sixsfred2::@4 [ mode_sixsfred2::ay#1 mode_sixsfred2::gfxa#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#1 mode_sixsfred2::gfxa#1 ] )
  to:mode_sixsfred2::@6
mode_sixsfred2::@6: scope:[mode_sixsfred2]  from mode_sixsfred2::@15 mode_sixsfred2::@17
  [394] (byte) mode_sixsfred2::by#4 ← phi( mode_sixsfred2::@15/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_sixsfred2::@17/(byte) mode_sixsfred2::by#1 ) [ mode_sixsfred2::gfxb#3 mode_sixsfred2::by#4 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::gfxb#3 mode_sixsfred2::by#4 ] )
  [394] (byte*) mode_sixsfred2::gfxb#3 ← phi( mode_sixsfred2::@15/(const byte*) mode_sixsfred2::PLANEB#0 mode_sixsfred2::@17/(byte*) mode_sixsfred2::gfxb#1 ) [ mode_sixsfred2::gfxb#3 mode_sixsfred2::by#4 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::gfxb#3 mode_sixsfred2::by#4 ] )
  to:mode_sixsfred2::@7
mode_sixsfred2::@7: scope:[mode_sixsfred2]  from mode_sixsfred2::@6 mode_sixsfred2::@7
  [395] (byte) mode_sixsfred2::bx#2 ← phi( mode_sixsfred2::@6/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_sixsfred2::@7/(byte) mode_sixsfred2::bx#1 ) [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#2 mode_sixsfred2::bx#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#2 mode_sixsfred2::bx#2 ] )
  [395] (byte*) mode_sixsfred2::gfxb#2 ← phi( mode_sixsfred2::@6/(byte*) mode_sixsfred2::gfxb#3 mode_sixsfred2::@7/(byte*) mode_sixsfred2::gfxb#1 ) [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#2 mode_sixsfred2::bx#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#2 mode_sixsfred2::bx#2 ] )
  [396] *((byte*) mode_sixsfred2::gfxb#2) ← (byte/signed byte/word/signed word/dword/signed dword) 27 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#2 mode_sixsfred2::bx#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#2 mode_sixsfred2::bx#2 ] )
  [397] (byte*) mode_sixsfred2::gfxb#1 ← ++ (byte*) mode_sixsfred2::gfxb#2 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#1 mode_sixsfred2::bx#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#1 mode_sixsfred2::bx#2 ] )
  [398] (byte) mode_sixsfred2::bx#1 ← ++ (byte) mode_sixsfred2::bx#2 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#1 mode_sixsfred2::bx#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#1 mode_sixsfred2::bx#1 ] )
  [399] if((byte) mode_sixsfred2::bx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred2::@7 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#1 mode_sixsfred2::bx#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#1 mode_sixsfred2::bx#1 ] )
  to:mode_sixsfred2::@17
mode_sixsfred2::@17: scope:[mode_sixsfred2]  from mode_sixsfred2::@7
  [400] (byte) mode_sixsfred2::by#1 ← ++ (byte) mode_sixsfred2::by#4 [ mode_sixsfred2::gfxb#1 mode_sixsfred2::by#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::gfxb#1 mode_sixsfred2::by#1 ] )
  [401] if((byte) mode_sixsfred2::by#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_sixsfred2::@6 [ mode_sixsfred2::gfxb#1 mode_sixsfred2::by#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::gfxb#1 mode_sixsfred2::by#1 ] )
  to:mode_sixsfred2::@8
mode_sixsfred2::@8: scope:[mode_sixsfred2]  from mode_sixsfred2::@17 mode_sixsfred2::@24
  [402] if(true) goto mode_sixsfred2::@9 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] )
  to:mode_sixsfred2::@return
mode_sixsfred2::@return: scope:[mode_sixsfred2]  from mode_sixsfred2::@24 mode_sixsfred2::@8
  [403] return  [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] )
  to:@return
mode_sixsfred2::@9: scope:[mode_sixsfred2]  from mode_sixsfred2::@8
  [404] phi() [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] )
  [405] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_sixsfred2:84 [ keyboard_key_pressed::return#0 ] )
  [406] (byte) keyboard_key_pressed::return#21 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#21 ] ( main:2::menu:9::mode_sixsfred2:84 [ keyboard_key_pressed::return#21 ] )
  to:mode_sixsfred2::@24
mode_sixsfred2::@24: scope:[mode_sixsfred2]  from mode_sixsfred2::@9
  [407] (byte~) mode_sixsfred2::$26 ← (byte) keyboard_key_pressed::return#21 [ mode_sixsfred2::$26 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::$26 ] )
  [408] if((byte~) mode_sixsfred2::$26==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_sixsfred2::@8 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] )
  to:mode_sixsfred2::@return
mode_hicolmcchar: scope:[mode_hicolmcchar]  from menu::@31
  [409] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_hicolmcchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] )
  [410] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_hicolmcchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] )
  [411] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_hicolmcchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] )
  [412] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] )
  [413] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] )
  [414] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_hicolmcchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] )
  [415] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] )
  [416] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0|(const byte) VIC_MCM#0 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] )
  [417] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_hicolmcchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_hicolmcchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] )
  to:mode_hicolmcchar::@1
mode_hicolmcchar::@1: scope:[mode_hicolmcchar]  from mode_hicolmcchar mode_hicolmcchar::@1
  [418] (byte) mode_hicolmcchar::i#2 ← phi( mode_hicolmcchar/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_hicolmcchar::@1/(byte) mode_hicolmcchar::i#1 ) [ mode_hicolmcchar::i#2 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::i#2 ] )
  [419] *((const byte*) DTV_PALETTE#0 + (byte) mode_hicolmcchar::i#2) ← (byte) mode_hicolmcchar::i#2 [ mode_hicolmcchar::i#2 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::i#2 ] )
  [420] (byte) mode_hicolmcchar::i#1 ← ++ (byte) mode_hicolmcchar::i#2 [ mode_hicolmcchar::i#1 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::i#1 ] )
  [421] if((byte) mode_hicolmcchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_hicolmcchar::@1 [ mode_hicolmcchar::i#1 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::i#1 ] )
  to:mode_hicolmcchar::@8
mode_hicolmcchar::@8: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@1
  [422] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] )
  [423] *((const byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 80 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] )
  [424] *((const byte*) BGCOL2#0) ← (byte/signed byte/word/signed word/dword/signed dword) 84 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] )
  [425] *((const byte*) BGCOL3#0) ← (byte/signed byte/word/signed word/dword/signed dword) 88 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] )
  to:mode_hicolmcchar::@2
mode_hicolmcchar::@2: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@8 mode_hicolmcchar::@9
  [426] (byte*) mode_hicolmcchar::ch#3 ← phi( mode_hicolmcchar::@8/(const byte*) mode_hicolmcchar::SCREEN#0 mode_hicolmcchar::@9/(byte*) mode_hicolmcchar::ch#1 ) [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#3 mode_hicolmcchar::ch#3 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#3 mode_hicolmcchar::ch#3 ] )
  [426] (byte*) mode_hicolmcchar::col#3 ← phi( mode_hicolmcchar::@8/(const byte*) mode_hicolmcchar::COLORS#0 mode_hicolmcchar::@9/(byte*) mode_hicolmcchar::col#1 ) [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#3 mode_hicolmcchar::ch#3 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#3 mode_hicolmcchar::ch#3 ] )
  [426] (byte) mode_hicolmcchar::cy#4 ← phi( mode_hicolmcchar::@8/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_hicolmcchar::@9/(byte) mode_hicolmcchar::cy#1 ) [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#3 mode_hicolmcchar::ch#3 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#3 mode_hicolmcchar::ch#3 ] )
  to:mode_hicolmcchar::@3
mode_hicolmcchar::@3: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@2 mode_hicolmcchar::@3
  [427] (byte*) mode_hicolmcchar::ch#2 ← phi( mode_hicolmcchar::@2/(byte*) mode_hicolmcchar::ch#3 mode_hicolmcchar::@3/(byte*) mode_hicolmcchar::ch#1 ) [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 ] )
  [427] (byte*) mode_hicolmcchar::col#2 ← phi( mode_hicolmcchar::@2/(byte*) mode_hicolmcchar::col#3 mode_hicolmcchar::@3/(byte*) mode_hicolmcchar::col#1 ) [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 ] )
  [427] (byte) mode_hicolmcchar::cx#2 ← phi( mode_hicolmcchar::@2/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_hicolmcchar::@3/(byte) mode_hicolmcchar::cx#1 ) [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 ] )
  [428] (byte~) mode_hicolmcchar::$25 ← (byte) mode_hicolmcchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$25 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$25 ] )
  [429] (byte~) mode_hicolmcchar::$26 ← (byte~) mode_hicolmcchar::$25 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$26 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$26 ] )
  [430] (byte~) mode_hicolmcchar::$27 ← (byte) mode_hicolmcchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$26 mode_hicolmcchar::$27 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$26 mode_hicolmcchar::$27 ] )
  [431] (byte) mode_hicolmcchar::v#0 ← (byte~) mode_hicolmcchar::$26 | (byte~) mode_hicolmcchar::$27 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] )
  [432] *((byte*) mode_hicolmcchar::col#2) ← (byte) mode_hicolmcchar::v#0 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] )
  [433] (byte*) mode_hicolmcchar::col#1 ← ++ (byte*) mode_hicolmcchar::col#2 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::cx#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::cx#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] )
  [434] *((byte*) mode_hicolmcchar::ch#2) ← (byte) mode_hicolmcchar::v#0 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::cx#2 mode_hicolmcchar::ch#2 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::cx#2 mode_hicolmcchar::ch#2 ] )
  [435] (byte*) mode_hicolmcchar::ch#1 ← ++ (byte*) mode_hicolmcchar::ch#2 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 mode_hicolmcchar::cx#2 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 mode_hicolmcchar::cx#2 ] )
  [436] (byte) mode_hicolmcchar::cx#1 ← ++ (byte) mode_hicolmcchar::cx#2 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 mode_hicolmcchar::cx#1 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 mode_hicolmcchar::cx#1 ] )
  [437] if((byte) mode_hicolmcchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_hicolmcchar::@3 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 mode_hicolmcchar::cx#1 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 mode_hicolmcchar::cx#1 ] )
  to:mode_hicolmcchar::@9
mode_hicolmcchar::@9: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@3
  [438] (byte) mode_hicolmcchar::cy#1 ← ++ (byte) mode_hicolmcchar::cy#4 [ mode_hicolmcchar::cy#1 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#1 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 ] )
  [439] if((byte) mode_hicolmcchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_hicolmcchar::@2 [ mode_hicolmcchar::cy#1 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#1 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 ] )
  to:mode_hicolmcchar::@4
mode_hicolmcchar::@4: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@16 mode_hicolmcchar::@9
  [440] if(true) goto mode_hicolmcchar::@5 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] )
  to:mode_hicolmcchar::@return
mode_hicolmcchar::@return: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@16 mode_hicolmcchar::@4
  [441] return  [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] )
  to:@return
mode_hicolmcchar::@5: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@4
  [442] phi() [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] )
  [443] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_hicolmcchar:77 [ keyboard_key_pressed::return#0 ] )
  [444] (byte) keyboard_key_pressed::return#18 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#18 ] ( main:2::menu:9::mode_hicolmcchar:77 [ keyboard_key_pressed::return#18 ] )
  to:mode_hicolmcchar::@16
mode_hicolmcchar::@16: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@5
  [445] (byte~) mode_hicolmcchar::$31 ← (byte) keyboard_key_pressed::return#18 [ mode_hicolmcchar::$31 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::$31 ] )
  [446] if((byte~) mode_hicolmcchar::$31==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_hicolmcchar::@4 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] )
  to:mode_hicolmcchar::@return
mode_hicolecmchar: scope:[mode_hicolecmchar]  from menu::@29
  [447] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_hicolecmchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] )
  [448] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_hicolecmchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] )
  [449] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_hicolecmchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] )
  [450] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] )
  [451] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] )
  [452] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_hicolecmchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] )
  [453] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(const byte) VIC_ECM#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] )
  [454] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] )
  [455] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_hicolecmchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_hicolecmchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] )
  to:mode_hicolecmchar::@1
mode_hicolecmchar::@1: scope:[mode_hicolecmchar]  from mode_hicolecmchar mode_hicolecmchar::@1
  [456] (byte) mode_hicolecmchar::i#2 ← phi( mode_hicolecmchar/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_hicolecmchar::@1/(byte) mode_hicolecmchar::i#1 ) [ mode_hicolecmchar::i#2 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::i#2 ] )
  [457] *((const byte*) DTV_PALETTE#0 + (byte) mode_hicolecmchar::i#2) ← (byte) mode_hicolecmchar::i#2 [ mode_hicolecmchar::i#2 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::i#2 ] )
  [458] (byte) mode_hicolecmchar::i#1 ← ++ (byte) mode_hicolecmchar::i#2 [ mode_hicolecmchar::i#1 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::i#1 ] )
  [459] if((byte) mode_hicolecmchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_hicolecmchar::@1 [ mode_hicolecmchar::i#1 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::i#1 ] )
  to:mode_hicolecmchar::@8
mode_hicolecmchar::@8: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@1
  [460] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] )
  [461] *((const byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 80 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] )
  [462] *((const byte*) BGCOL2#0) ← (byte/signed byte/word/signed word/dword/signed dword) 84 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] )
  [463] *((const byte*) BGCOL3#0) ← (byte/signed byte/word/signed word/dword/signed dword) 88 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] )
  [464] *((const byte*) BGCOL4#0) ← (byte/signed byte/word/signed word/dword/signed dword) 92 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] )
  to:mode_hicolecmchar::@2
mode_hicolecmchar::@2: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@8 mode_hicolecmchar::@9
  [465] (byte*) mode_hicolecmchar::ch#3 ← phi( mode_hicolecmchar::@8/(const byte*) mode_hicolecmchar::SCREEN#0 mode_hicolecmchar::@9/(byte*) mode_hicolecmchar::ch#1 ) [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#3 mode_hicolecmchar::ch#3 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#3 mode_hicolecmchar::ch#3 ] )
  [465] (byte*) mode_hicolecmchar::col#3 ← phi( mode_hicolecmchar::@8/(const byte*) mode_hicolecmchar::COLORS#0 mode_hicolecmchar::@9/(byte*) mode_hicolecmchar::col#1 ) [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#3 mode_hicolecmchar::ch#3 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#3 mode_hicolecmchar::ch#3 ] )
  [465] (byte) mode_hicolecmchar::cy#4 ← phi( mode_hicolecmchar::@8/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_hicolecmchar::@9/(byte) mode_hicolecmchar::cy#1 ) [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#3 mode_hicolecmchar::ch#3 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#3 mode_hicolecmchar::ch#3 ] )
  to:mode_hicolecmchar::@3
mode_hicolecmchar::@3: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@2 mode_hicolecmchar::@3
  [466] (byte*) mode_hicolecmchar::ch#2 ← phi( mode_hicolecmchar::@2/(byte*) mode_hicolecmchar::ch#3 mode_hicolecmchar::@3/(byte*) mode_hicolecmchar::ch#1 ) [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 ] )
  [466] (byte*) mode_hicolecmchar::col#2 ← phi( mode_hicolecmchar::@2/(byte*) mode_hicolecmchar::col#3 mode_hicolecmchar::@3/(byte*) mode_hicolecmchar::col#1 ) [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 ] )
  [466] (byte) mode_hicolecmchar::cx#2 ← phi( mode_hicolecmchar::@2/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_hicolecmchar::@3/(byte) mode_hicolecmchar::cx#1 ) [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 ] )
  [467] (byte~) mode_hicolecmchar::$25 ← (byte) mode_hicolecmchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$25 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$25 ] )
  [468] (byte~) mode_hicolecmchar::$26 ← (byte~) mode_hicolecmchar::$25 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$26 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$26 ] )
  [469] (byte~) mode_hicolecmchar::$27 ← (byte) mode_hicolecmchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$26 mode_hicolecmchar::$27 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$26 mode_hicolecmchar::$27 ] )
  [470] (byte) mode_hicolecmchar::v#0 ← (byte~) mode_hicolecmchar::$26 | (byte~) mode_hicolecmchar::$27 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] )
  [471] *((byte*) mode_hicolecmchar::col#2) ← (byte) mode_hicolecmchar::v#0 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] )
  [472] (byte*) mode_hicolecmchar::col#1 ← ++ (byte*) mode_hicolecmchar::col#2 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::cx#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::cx#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] )
  [473] *((byte*) mode_hicolecmchar::ch#2) ← (byte) mode_hicolecmchar::v#0 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::cx#2 mode_hicolecmchar::ch#2 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::cx#2 mode_hicolecmchar::ch#2 ] )
  [474] (byte*) mode_hicolecmchar::ch#1 ← ++ (byte*) mode_hicolecmchar::ch#2 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 mode_hicolecmchar::cx#2 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 mode_hicolecmchar::cx#2 ] )
  [475] (byte) mode_hicolecmchar::cx#1 ← ++ (byte) mode_hicolecmchar::cx#2 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 mode_hicolecmchar::cx#1 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 mode_hicolecmchar::cx#1 ] )
  [476] if((byte) mode_hicolecmchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_hicolecmchar::@3 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 mode_hicolecmchar::cx#1 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 mode_hicolecmchar::cx#1 ] )
  to:mode_hicolecmchar::@9
mode_hicolecmchar::@9: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@3
  [477] (byte) mode_hicolecmchar::cy#1 ← ++ (byte) mode_hicolecmchar::cy#4 [ mode_hicolecmchar::cy#1 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#1 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 ] )
  [478] if((byte) mode_hicolecmchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_hicolecmchar::@2 [ mode_hicolecmchar::cy#1 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#1 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 ] )
  to:mode_hicolecmchar::@4
mode_hicolecmchar::@4: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@16 mode_hicolecmchar::@9
  [479] if(true) goto mode_hicolecmchar::@5 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] )
  to:mode_hicolecmchar::@return
mode_hicolecmchar::@return: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@16 mode_hicolecmchar::@4
  [480] return  [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] )
  to:@return
mode_hicolecmchar::@5: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@4
  [481] phi() [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] )
  [482] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_hicolecmchar:70 [ keyboard_key_pressed::return#0 ] )
  [483] (byte) keyboard_key_pressed::return#17 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#17 ] ( main:2::menu:9::mode_hicolecmchar:70 [ keyboard_key_pressed::return#17 ] )
  to:mode_hicolecmchar::@16
mode_hicolecmchar::@16: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@5
  [484] (byte~) mode_hicolecmchar::$31 ← (byte) keyboard_key_pressed::return#17 [ mode_hicolecmchar::$31 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::$31 ] )
  [485] if((byte~) mode_hicolecmchar::$31==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_hicolecmchar::@4 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] )
  to:mode_hicolecmchar::@return
mode_hicolstdchar: scope:[mode_hicolstdchar]  from menu::@27
  [486] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_hicolstdchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] )
  [487] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_hicolstdchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] )
  [488] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_hicolstdchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] )
  [489] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] )
  [490] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] )
  [491] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_hicolstdchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] )
  [492] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] )
  [493] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] )
  [494] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_hicolstdchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_hicolstdchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] )
  to:mode_hicolstdchar::@1
mode_hicolstdchar::@1: scope:[mode_hicolstdchar]  from mode_hicolstdchar mode_hicolstdchar::@1
  [495] (byte) mode_hicolstdchar::i#2 ← phi( mode_hicolstdchar/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_hicolstdchar::@1/(byte) mode_hicolstdchar::i#1 ) [ mode_hicolstdchar::i#2 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::i#2 ] )
  [496] *((const byte*) DTV_PALETTE#0 + (byte) mode_hicolstdchar::i#2) ← (byte) mode_hicolstdchar::i#2 [ mode_hicolstdchar::i#2 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::i#2 ] )
  [497] (byte) mode_hicolstdchar::i#1 ← ++ (byte) mode_hicolstdchar::i#2 [ mode_hicolstdchar::i#1 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::i#1 ] )
  [498] if((byte) mode_hicolstdchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_hicolstdchar::@1 [ mode_hicolstdchar::i#1 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::i#1 ] )
  to:mode_hicolstdchar::@8
mode_hicolstdchar::@8: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@1
  [499] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] )
  [500] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] )
  to:mode_hicolstdchar::@2
mode_hicolstdchar::@2: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@8 mode_hicolstdchar::@9
  [501] (byte*) mode_hicolstdchar::ch#3 ← phi( mode_hicolstdchar::@8/(const byte*) mode_hicolstdchar::SCREEN#0 mode_hicolstdchar::@9/(byte*) mode_hicolstdchar::ch#1 ) [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#3 mode_hicolstdchar::ch#3 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#3 mode_hicolstdchar::ch#3 ] )
  [501] (byte*) mode_hicolstdchar::col#3 ← phi( mode_hicolstdchar::@8/(const byte*) mode_hicolstdchar::COLORS#0 mode_hicolstdchar::@9/(byte*) mode_hicolstdchar::col#1 ) [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#3 mode_hicolstdchar::ch#3 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#3 mode_hicolstdchar::ch#3 ] )
  [501] (byte) mode_hicolstdchar::cy#4 ← phi( mode_hicolstdchar::@8/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_hicolstdchar::@9/(byte) mode_hicolstdchar::cy#1 ) [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#3 mode_hicolstdchar::ch#3 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#3 mode_hicolstdchar::ch#3 ] )
  to:mode_hicolstdchar::@3
mode_hicolstdchar::@3: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@2 mode_hicolstdchar::@3
  [502] (byte*) mode_hicolstdchar::ch#2 ← phi( mode_hicolstdchar::@2/(byte*) mode_hicolstdchar::ch#3 mode_hicolstdchar::@3/(byte*) mode_hicolstdchar::ch#1 ) [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 ] )
  [502] (byte*) mode_hicolstdchar::col#2 ← phi( mode_hicolstdchar::@2/(byte*) mode_hicolstdchar::col#3 mode_hicolstdchar::@3/(byte*) mode_hicolstdchar::col#1 ) [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 ] )
  [502] (byte) mode_hicolstdchar::cx#2 ← phi( mode_hicolstdchar::@2/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_hicolstdchar::@3/(byte) mode_hicolstdchar::cx#1 ) [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 ] )
  [503] (byte~) mode_hicolstdchar::$24 ← (byte) mode_hicolstdchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$24 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$24 ] )
  [504] (byte~) mode_hicolstdchar::$25 ← (byte~) mode_hicolstdchar::$24 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$25 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$25 ] )
  [505] (byte~) mode_hicolstdchar::$26 ← (byte) mode_hicolstdchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$25 mode_hicolstdchar::$26 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$25 mode_hicolstdchar::$26 ] )
  [506] (byte) mode_hicolstdchar::v#0 ← (byte~) mode_hicolstdchar::$25 | (byte~) mode_hicolstdchar::$26 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] )
  [507] *((byte*) mode_hicolstdchar::col#2) ← (byte) mode_hicolstdchar::v#0 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] )
  [508] (byte*) mode_hicolstdchar::col#1 ← ++ (byte*) mode_hicolstdchar::col#2 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::cx#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::cx#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] )
  [509] *((byte*) mode_hicolstdchar::ch#2) ← (byte) mode_hicolstdchar::v#0 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::cx#2 mode_hicolstdchar::ch#2 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::cx#2 mode_hicolstdchar::ch#2 ] )
  [510] (byte*) mode_hicolstdchar::ch#1 ← ++ (byte*) mode_hicolstdchar::ch#2 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 mode_hicolstdchar::cx#2 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 mode_hicolstdchar::cx#2 ] )
  [511] (byte) mode_hicolstdchar::cx#1 ← ++ (byte) mode_hicolstdchar::cx#2 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 mode_hicolstdchar::cx#1 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 mode_hicolstdchar::cx#1 ] )
  [512] if((byte) mode_hicolstdchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_hicolstdchar::@3 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 mode_hicolstdchar::cx#1 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 mode_hicolstdchar::cx#1 ] )
  to:mode_hicolstdchar::@9
mode_hicolstdchar::@9: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@3
  [513] (byte) mode_hicolstdchar::cy#1 ← ++ (byte) mode_hicolstdchar::cy#4 [ mode_hicolstdchar::cy#1 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#1 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 ] )
  [514] if((byte) mode_hicolstdchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_hicolstdchar::@2 [ mode_hicolstdchar::cy#1 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#1 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 ] )
  to:mode_hicolstdchar::@4
mode_hicolstdchar::@4: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@16 mode_hicolstdchar::@9
  [515] if(true) goto mode_hicolstdchar::@5 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] )
  to:mode_hicolstdchar::@return
mode_hicolstdchar::@return: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@16 mode_hicolstdchar::@4
  [516] return  [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] )
  to:@return
mode_hicolstdchar::@5: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@4
  [517] phi() [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] )
  [518] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_hicolstdchar:63 [ keyboard_key_pressed::return#0 ] )
  [519] (byte) keyboard_key_pressed::return#16 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#16 ] ( main:2::menu:9::mode_hicolstdchar:63 [ keyboard_key_pressed::return#16 ] )
  to:mode_hicolstdchar::@16
mode_hicolstdchar::@16: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@5
  [520] (byte~) mode_hicolstdchar::$30 ← (byte) keyboard_key_pressed::return#16 [ mode_hicolstdchar::$30 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::$30 ] )
  [521] if((byte~) mode_hicolstdchar::$30==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_hicolstdchar::@4 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] )
  to:mode_hicolstdchar::@return
mode_mcchar: scope:[mode_mcchar]  from menu::@25
  [522] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_mcchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] )
  [523] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_mcchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] )
  [524] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_mcchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] )
  [525] *((const byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] )
  [526] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] )
  [527] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_mcchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] )
  [528] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] )
  [529] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0|(const byte) VIC_MCM#0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] )
  [530] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_mcchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_mcchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] )
  to:mode_mcchar::@1
mode_mcchar::@1: scope:[mode_mcchar]  from mode_mcchar mode_mcchar::@1
  [531] (byte) mode_mcchar::i#2 ← phi( mode_mcchar/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_mcchar::@1/(byte) mode_mcchar::i#1 ) [ mode_mcchar::i#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::i#2 ] )
  [532] *((const byte*) DTV_PALETTE#0 + (byte) mode_mcchar::i#2) ← *((const byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) mode_mcchar::i#2) [ mode_mcchar::i#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::i#2 ] )
  [533] (byte) mode_mcchar::i#1 ← ++ (byte) mode_mcchar::i#2 [ mode_mcchar::i#1 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::i#1 ] )
  [534] if((byte) mode_mcchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_mcchar::@1 [ mode_mcchar::i#1 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::i#1 ] )
  to:mode_mcchar::@8
mode_mcchar::@8: scope:[mode_mcchar]  from mode_mcchar::@1
  [535] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] )
  [536] *((const byte*) BGCOL1#0) ← (const byte) BLACK#0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] )
  [537] *((const byte*) BGCOL2#0) ← (const byte) GREEN#0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] )
  [538] *((const byte*) BGCOL3#0) ← (const byte) BLUE#0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] )
  to:mode_mcchar::@2
mode_mcchar::@2: scope:[mode_mcchar]  from mode_mcchar::@8 mode_mcchar::@9
  [539] (byte*) mode_mcchar::ch#3 ← phi( mode_mcchar::@8/(const byte*) mode_mcchar::SCREEN#0 mode_mcchar::@9/(byte*) mode_mcchar::ch#1 ) [ mode_mcchar::cy#4 mode_mcchar::col#3 mode_mcchar::ch#3 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#3 mode_mcchar::ch#3 ] )
  [539] (byte*) mode_mcchar::col#3 ← phi( mode_mcchar::@8/(const byte*) mode_mcchar::COLORS#0 mode_mcchar::@9/(byte*) mode_mcchar::col#1 ) [ mode_mcchar::cy#4 mode_mcchar::col#3 mode_mcchar::ch#3 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#3 mode_mcchar::ch#3 ] )
  [539] (byte) mode_mcchar::cy#4 ← phi( mode_mcchar::@8/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_mcchar::@9/(byte) mode_mcchar::cy#1 ) [ mode_mcchar::cy#4 mode_mcchar::col#3 mode_mcchar::ch#3 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#3 mode_mcchar::ch#3 ] )
  to:mode_mcchar::@3
mode_mcchar::@3: scope:[mode_mcchar]  from mode_mcchar::@2 mode_mcchar::@3
  [540] (byte*) mode_mcchar::ch#2 ← phi( mode_mcchar::@2/(byte*) mode_mcchar::ch#3 mode_mcchar::@3/(byte*) mode_mcchar::ch#1 ) [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 ] )
  [540] (byte*) mode_mcchar::col#2 ← phi( mode_mcchar::@2/(byte*) mode_mcchar::col#3 mode_mcchar::@3/(byte*) mode_mcchar::col#1 ) [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 ] )
  [540] (byte) mode_mcchar::cx#2 ← phi( mode_mcchar::@2/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_mcchar::@3/(byte) mode_mcchar::cx#1 ) [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 ] )
  [541] (byte~) mode_mcchar::$25 ← (byte) mode_mcchar::cx#2 + (byte) mode_mcchar::cy#4 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 mode_mcchar::$25 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 mode_mcchar::$25 ] )
  [542] (byte~) mode_mcchar::$26 ← (byte~) mode_mcchar::$25 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 mode_mcchar::$26 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 mode_mcchar::$26 ] )
  [543] *((byte*) mode_mcchar::col#2) ← (byte~) mode_mcchar::$26 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 ] )
  [544] (byte*) mode_mcchar::col#1 ← ++ (byte*) mode_mcchar::col#2 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 ] )
  [545] (byte~) mode_mcchar::$27 ← (byte) mode_mcchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$27 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$27 ] )
  [546] (byte~) mode_mcchar::$28 ← (byte~) mode_mcchar::$27 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$28 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$28 ] )
  [547] (byte~) mode_mcchar::$29 ← (byte) mode_mcchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$28 mode_mcchar::$29 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$28 mode_mcchar::$29 ] )
  [548] (byte~) mode_mcchar::$30 ← (byte~) mode_mcchar::$28 | (byte~) mode_mcchar::$29 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$30 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$30 ] )
  [549] *((byte*) mode_mcchar::ch#2) ← (byte~) mode_mcchar::$30 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 ] )
  [550] (byte*) mode_mcchar::ch#1 ← ++ (byte*) mode_mcchar::ch#2 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::ch#1 mode_mcchar::cx#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::ch#1 mode_mcchar::cx#2 ] )
  [551] (byte) mode_mcchar::cx#1 ← ++ (byte) mode_mcchar::cx#2 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::ch#1 mode_mcchar::cx#1 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::ch#1 mode_mcchar::cx#1 ] )
  [552] if((byte) mode_mcchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_mcchar::@3 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::ch#1 mode_mcchar::cx#1 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::ch#1 mode_mcchar::cx#1 ] )
  to:mode_mcchar::@9
mode_mcchar::@9: scope:[mode_mcchar]  from mode_mcchar::@3
  [553] (byte) mode_mcchar::cy#1 ← ++ (byte) mode_mcchar::cy#4 [ mode_mcchar::cy#1 mode_mcchar::col#1 mode_mcchar::ch#1 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#1 mode_mcchar::col#1 mode_mcchar::ch#1 ] )
  [554] if((byte) mode_mcchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_mcchar::@2 [ mode_mcchar::cy#1 mode_mcchar::col#1 mode_mcchar::ch#1 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#1 mode_mcchar::col#1 mode_mcchar::ch#1 ] )
  to:mode_mcchar::@4
mode_mcchar::@4: scope:[mode_mcchar]  from mode_mcchar::@16 mode_mcchar::@9
  [555] if(true) goto mode_mcchar::@5 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] )
  to:mode_mcchar::@return
mode_mcchar::@return: scope:[mode_mcchar]  from mode_mcchar::@16 mode_mcchar::@4
  [556] return  [ ] ( main:2::menu:9::mode_mcchar:56 [ ] )
  to:@return
mode_mcchar::@5: scope:[mode_mcchar]  from mode_mcchar::@4
  [557] phi() [ ] ( main:2::menu:9::mode_mcchar:56 [ ] )
  [558] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_mcchar:56 [ keyboard_key_pressed::return#0 ] )
  [559] (byte) keyboard_key_pressed::return#15 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#15 ] ( main:2::menu:9::mode_mcchar:56 [ keyboard_key_pressed::return#15 ] )
  to:mode_mcchar::@16
mode_mcchar::@16: scope:[mode_mcchar]  from mode_mcchar::@5
  [560] (byte~) mode_mcchar::$33 ← (byte) keyboard_key_pressed::return#15 [ mode_mcchar::$33 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::$33 ] )
  [561] if((byte~) mode_mcchar::$33==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_mcchar::@4 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] )
  to:mode_mcchar::@return
mode_ecmchar: scope:[mode_ecmchar]  from menu::@23
  [562] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] )
  [563] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_ecmchar::ECMCHAR_COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] )
  [564] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_ecmchar::ECMCHAR_COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] )
  [565] *((const byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] )
  [566] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] )
  [567] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] )
  [568] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(const byte) VIC_ECM#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] )
  [569] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] )
  [570] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_ecmchar::ECMCHAR_SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] )
  to:mode_ecmchar::@1
mode_ecmchar::@1: scope:[mode_ecmchar]  from mode_ecmchar mode_ecmchar::@1
  [571] (byte) mode_ecmchar::i#2 ← phi( mode_ecmchar/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_ecmchar::@1/(byte) mode_ecmchar::i#1 ) [ mode_ecmchar::i#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::i#2 ] )
  [572] *((const byte*) DTV_PALETTE#0 + (byte) mode_ecmchar::i#2) ← *((const byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) mode_ecmchar::i#2) [ mode_ecmchar::i#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::i#2 ] )
  [573] (byte) mode_ecmchar::i#1 ← ++ (byte) mode_ecmchar::i#2 [ mode_ecmchar::i#1 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::i#1 ] )
  [574] if((byte) mode_ecmchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_ecmchar::@1 [ mode_ecmchar::i#1 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::i#1 ] )
  to:mode_ecmchar::@8
mode_ecmchar::@8: scope:[mode_ecmchar]  from mode_ecmchar::@1
  [575] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] )
  [576] *((const byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] )
  [577] *((const byte*) BGCOL2#0) ← (byte/signed byte/word/signed word/dword/signed dword) 2 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] )
  [578] *((const byte*) BGCOL3#0) ← (byte/signed byte/word/signed word/dword/signed dword) 5 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] )
  [579] *((const byte*) BGCOL4#0) ← (byte/signed byte/word/signed word/dword/signed dword) 6 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] )
  to:mode_ecmchar::@2
mode_ecmchar::@2: scope:[mode_ecmchar]  from mode_ecmchar::@8 mode_ecmchar::@9
  [580] (byte*) mode_ecmchar::ch#3 ← phi( mode_ecmchar::@8/(const byte*) mode_ecmchar::ECMCHAR_SCREEN#0 mode_ecmchar::@9/(byte*) mode_ecmchar::ch#1 ) [ mode_ecmchar::cy#4 mode_ecmchar::col#3 mode_ecmchar::ch#3 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#3 mode_ecmchar::ch#3 ] )
  [580] (byte*) mode_ecmchar::col#3 ← phi( mode_ecmchar::@8/(const byte*) mode_ecmchar::ECMCHAR_COLORS#0 mode_ecmchar::@9/(byte*) mode_ecmchar::col#1 ) [ mode_ecmchar::cy#4 mode_ecmchar::col#3 mode_ecmchar::ch#3 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#3 mode_ecmchar::ch#3 ] )
  [580] (byte) mode_ecmchar::cy#4 ← phi( mode_ecmchar::@8/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_ecmchar::@9/(byte) mode_ecmchar::cy#1 ) [ mode_ecmchar::cy#4 mode_ecmchar::col#3 mode_ecmchar::ch#3 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#3 mode_ecmchar::ch#3 ] )
  to:mode_ecmchar::@3
mode_ecmchar::@3: scope:[mode_ecmchar]  from mode_ecmchar::@2 mode_ecmchar::@3
  [581] (byte*) mode_ecmchar::ch#2 ← phi( mode_ecmchar::@2/(byte*) mode_ecmchar::ch#3 mode_ecmchar::@3/(byte*) mode_ecmchar::ch#1 ) [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 ] )
  [581] (byte*) mode_ecmchar::col#2 ← phi( mode_ecmchar::@2/(byte*) mode_ecmchar::col#3 mode_ecmchar::@3/(byte*) mode_ecmchar::col#1 ) [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 ] )
  [581] (byte) mode_ecmchar::cx#2 ← phi( mode_ecmchar::@2/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_ecmchar::@3/(byte) mode_ecmchar::cx#1 ) [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 ] )
  [582] (byte~) mode_ecmchar::$25 ← (byte) mode_ecmchar::cx#2 + (byte) mode_ecmchar::cy#4 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 mode_ecmchar::$25 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 mode_ecmchar::$25 ] )
  [583] (byte~) mode_ecmchar::$26 ← (byte~) mode_ecmchar::$25 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 mode_ecmchar::$26 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 mode_ecmchar::$26 ] )
  [584] *((byte*) mode_ecmchar::col#2) ← (byte~) mode_ecmchar::$26 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 ] )
  [585] (byte*) mode_ecmchar::col#1 ← ++ (byte*) mode_ecmchar::col#2 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 ] )
  [586] (byte~) mode_ecmchar::$27 ← (byte) mode_ecmchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$27 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$27 ] )
  [587] (byte~) mode_ecmchar::$28 ← (byte~) mode_ecmchar::$27 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$28 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$28 ] )
  [588] (byte~) mode_ecmchar::$29 ← (byte) mode_ecmchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$28 mode_ecmchar::$29 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$28 mode_ecmchar::$29 ] )
  [589] (byte~) mode_ecmchar::$30 ← (byte~) mode_ecmchar::$28 | (byte~) mode_ecmchar::$29 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$30 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$30 ] )
  [590] *((byte*) mode_ecmchar::ch#2) ← (byte~) mode_ecmchar::$30 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 ] )
  [591] (byte*) mode_ecmchar::ch#1 ← ++ (byte*) mode_ecmchar::ch#2 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::ch#1 mode_ecmchar::cx#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::ch#1 mode_ecmchar::cx#2 ] )
  [592] (byte) mode_ecmchar::cx#1 ← ++ (byte) mode_ecmchar::cx#2 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::ch#1 mode_ecmchar::cx#1 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::ch#1 mode_ecmchar::cx#1 ] )
  [593] if((byte) mode_ecmchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_ecmchar::@3 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::ch#1 mode_ecmchar::cx#1 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::ch#1 mode_ecmchar::cx#1 ] )
  to:mode_ecmchar::@9
mode_ecmchar::@9: scope:[mode_ecmchar]  from mode_ecmchar::@3
  [594] (byte) mode_ecmchar::cy#1 ← ++ (byte) mode_ecmchar::cy#4 [ mode_ecmchar::cy#1 mode_ecmchar::col#1 mode_ecmchar::ch#1 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#1 mode_ecmchar::col#1 mode_ecmchar::ch#1 ] )
  [595] if((byte) mode_ecmchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_ecmchar::@2 [ mode_ecmchar::cy#1 mode_ecmchar::col#1 mode_ecmchar::ch#1 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#1 mode_ecmchar::col#1 mode_ecmchar::ch#1 ] )
  to:mode_ecmchar::@4
mode_ecmchar::@4: scope:[mode_ecmchar]  from mode_ecmchar::@16 mode_ecmchar::@9
  [596] if(true) goto mode_ecmchar::@5 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] )
  to:mode_ecmchar::@return
mode_ecmchar::@return: scope:[mode_ecmchar]  from mode_ecmchar::@16 mode_ecmchar::@4
  [597] return  [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] )
  to:@return
mode_ecmchar::@5: scope:[mode_ecmchar]  from mode_ecmchar::@4
  [598] phi() [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] )
  [599] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_ecmchar:49 [ keyboard_key_pressed::return#0 ] )
  [600] (byte) keyboard_key_pressed::return#14 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#14 ] ( main:2::menu:9::mode_ecmchar:49 [ keyboard_key_pressed::return#14 ] )
  to:mode_ecmchar::@16
mode_ecmchar::@16: scope:[mode_ecmchar]  from mode_ecmchar::@5
  [601] (byte~) mode_ecmchar::$33 ← (byte) keyboard_key_pressed::return#14 [ mode_ecmchar::$33 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::$33 ] )
  [602] if((byte~) mode_ecmchar::$33==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_ecmchar::@4 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] )
  to:mode_ecmchar::@return
mode_stdchar: scope:[mode_stdchar]  from menu::@21
  [603] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_stdchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] )
  [604] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_stdchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] )
  [605] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_stdchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] )
  [606] *((const byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] )
  [607] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] )
  [608] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_stdchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] )
  [609] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] )
  [610] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] )
  [611] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_stdchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_stdchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] )
  to:mode_stdchar::@1
mode_stdchar::@1: scope:[mode_stdchar]  from mode_stdchar mode_stdchar::@1
  [612] (byte) mode_stdchar::i#2 ← phi( mode_stdchar/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_stdchar::@1/(byte) mode_stdchar::i#1 ) [ mode_stdchar::i#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::i#2 ] )
  [613] *((const byte*) DTV_PALETTE#0 + (byte) mode_stdchar::i#2) ← *((const byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) mode_stdchar::i#2) [ mode_stdchar::i#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::i#2 ] )
  [614] (byte) mode_stdchar::i#1 ← ++ (byte) mode_stdchar::i#2 [ mode_stdchar::i#1 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::i#1 ] )
  [615] if((byte) mode_stdchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_stdchar::@1 [ mode_stdchar::i#1 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::i#1 ] )
  to:mode_stdchar::@8
mode_stdchar::@8: scope:[mode_stdchar]  from mode_stdchar::@1
  [616] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] )
  [617] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] )
  to:mode_stdchar::@2
mode_stdchar::@2: scope:[mode_stdchar]  from mode_stdchar::@8 mode_stdchar::@9
  [618] (byte*) mode_stdchar::ch#3 ← phi( mode_stdchar::@8/(const byte*) mode_stdchar::SCREEN#0 mode_stdchar::@9/(byte*) mode_stdchar::ch#1 ) [ mode_stdchar::cy#4 mode_stdchar::col#3 mode_stdchar::ch#3 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#3 mode_stdchar::ch#3 ] )
  [618] (byte*) mode_stdchar::col#3 ← phi( mode_stdchar::@8/(const byte*) mode_stdchar::COLORS#0 mode_stdchar::@9/(byte*) mode_stdchar::col#1 ) [ mode_stdchar::cy#4 mode_stdchar::col#3 mode_stdchar::ch#3 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#3 mode_stdchar::ch#3 ] )
  [618] (byte) mode_stdchar::cy#4 ← phi( mode_stdchar::@8/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_stdchar::@9/(byte) mode_stdchar::cy#1 ) [ mode_stdchar::cy#4 mode_stdchar::col#3 mode_stdchar::ch#3 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#3 mode_stdchar::ch#3 ] )
  to:mode_stdchar::@3
mode_stdchar::@3: scope:[mode_stdchar]  from mode_stdchar::@2 mode_stdchar::@3
  [619] (byte*) mode_stdchar::ch#2 ← phi( mode_stdchar::@2/(byte*) mode_stdchar::ch#3 mode_stdchar::@3/(byte*) mode_stdchar::ch#1 ) [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 ] )
  [619] (byte*) mode_stdchar::col#2 ← phi( mode_stdchar::@2/(byte*) mode_stdchar::col#3 mode_stdchar::@3/(byte*) mode_stdchar::col#1 ) [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 ] )
  [619] (byte) mode_stdchar::cx#2 ← phi( mode_stdchar::@2/(byte/signed byte/word/signed word/dword/signed dword) 0 mode_stdchar::@3/(byte) mode_stdchar::cx#1 ) [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 ] )
  [620] (byte~) mode_stdchar::$24 ← (byte) mode_stdchar::cx#2 + (byte) mode_stdchar::cy#4 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 mode_stdchar::$24 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 mode_stdchar::$24 ] )
  [621] (byte~) mode_stdchar::$25 ← (byte~) mode_stdchar::$24 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 mode_stdchar::$25 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 mode_stdchar::$25 ] )
  [622] *((byte*) mode_stdchar::col#2) ← (byte~) mode_stdchar::$25 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 ] )
  [623] (byte*) mode_stdchar::col#1 ← ++ (byte*) mode_stdchar::col#2 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 ] )
  [624] (byte~) mode_stdchar::$26 ← (byte) mode_stdchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$26 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$26 ] )
  [625] (byte~) mode_stdchar::$27 ← (byte~) mode_stdchar::$26 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$27 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$27 ] )
  [626] (byte~) mode_stdchar::$28 ← (byte) mode_stdchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$27 mode_stdchar::$28 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$27 mode_stdchar::$28 ] )
  [627] (byte~) mode_stdchar::$29 ← (byte~) mode_stdchar::$27 | (byte~) mode_stdchar::$28 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$29 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$29 ] )
  [628] *((byte*) mode_stdchar::ch#2) ← (byte~) mode_stdchar::$29 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 ] )
  [629] (byte*) mode_stdchar::ch#1 ← ++ (byte*) mode_stdchar::ch#2 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::ch#1 mode_stdchar::cx#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::ch#1 mode_stdchar::cx#2 ] )
  [630] (byte) mode_stdchar::cx#1 ← ++ (byte) mode_stdchar::cx#2 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::ch#1 mode_stdchar::cx#1 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::ch#1 mode_stdchar::cx#1 ] )
  [631] if((byte) mode_stdchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_stdchar::@3 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::ch#1 mode_stdchar::cx#1 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::ch#1 mode_stdchar::cx#1 ] )
  to:mode_stdchar::@9
mode_stdchar::@9: scope:[mode_stdchar]  from mode_stdchar::@3
  [632] (byte) mode_stdchar::cy#1 ← ++ (byte) mode_stdchar::cy#4 [ mode_stdchar::cy#1 mode_stdchar::col#1 mode_stdchar::ch#1 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#1 mode_stdchar::col#1 mode_stdchar::ch#1 ] )
  [633] if((byte) mode_stdchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_stdchar::@2 [ mode_stdchar::cy#1 mode_stdchar::col#1 mode_stdchar::ch#1 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#1 mode_stdchar::col#1 mode_stdchar::ch#1 ] )
  to:mode_stdchar::@4
mode_stdchar::@4: scope:[mode_stdchar]  from mode_stdchar::@16 mode_stdchar::@9
  [634] if(true) goto mode_stdchar::@5 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] )
  to:mode_stdchar::@return
mode_stdchar::@return: scope:[mode_stdchar]  from mode_stdchar::@16 mode_stdchar::@4
  [635] return  [ ] ( main:2::menu:9::mode_stdchar:42 [ ] )
  to:@return
mode_stdchar::@5: scope:[mode_stdchar]  from mode_stdchar::@4
  [636] phi() [ ] ( main:2::menu:9::mode_stdchar:42 [ ] )
  [637] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_stdchar:42 [ keyboard_key_pressed::return#0 ] )
  [638] (byte) keyboard_key_pressed::return#13 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#13 ] ( main:2::menu:9::mode_stdchar:42 [ keyboard_key_pressed::return#13 ] )
  to:mode_stdchar::@16
mode_stdchar::@16: scope:[mode_stdchar]  from mode_stdchar::@5
  [639] (byte~) mode_stdchar::$32 ← (byte) keyboard_key_pressed::return#13 [ mode_stdchar::$32 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::$32 ] )
  [640] if((byte~) mode_stdchar::$32==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_stdchar::@4 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] )
  to:mode_stdchar::@return
print_str_lines: scope:[print_str_lines]  from menu::@45
  [641] phi() [ ] ( main:2::menu:9::print_str_lines:33 [ ] )
  to:print_str_lines::@1
print_str_lines::@1: scope:[print_str_lines]  from print_str_lines print_str_lines::@9
  [642] (byte*) print_line_cursor#17 ← phi( print_str_lines/(const byte*) menu::SCREEN#0 print_str_lines::@9/(byte*) print_line_cursor#19 ) [ print_str_lines::str#2 print_char_cursor#19 print_line_cursor#17 ] ( main:2::menu:9::print_str_lines:33 [ print_str_lines::str#2 print_char_cursor#19 print_line_cursor#17 ] )
  [642] (byte*) print_char_cursor#19 ← phi( print_str_lines/(const byte*) menu::SCREEN#0 print_str_lines::@9/(byte*~) print_char_cursor#95 ) [ print_str_lines::str#2 print_char_cursor#19 print_line_cursor#17 ] ( main:2::menu:9::print_str_lines:33 [ print_str_lines::str#2 print_char_cursor#19 print_line_cursor#17 ] )
  [642] (byte*) print_str_lines::str#2 ← phi( print_str_lines/(const string) MENU_TEXT#0 print_str_lines::@9/(byte*) print_str_lines::str#0 ) [ print_str_lines::str#2 print_char_cursor#19 print_line_cursor#17 ] ( main:2::menu:9::print_str_lines:33 [ print_str_lines::str#2 print_char_cursor#19 print_line_cursor#17 ] )
  [643] if(*((byte*) print_str_lines::str#2)!=(byte) '@') goto print_str_lines::@4 [ print_str_lines::str#2 print_char_cursor#19 print_line_cursor#17 ] ( main:2::menu:9::print_str_lines:33 [ print_str_lines::str#2 print_char_cursor#19 print_line_cursor#17 ] )
  to:print_str_lines::@return
print_str_lines::@return: scope:[print_str_lines]  from print_str_lines::@1
  [644] return  [ ] ( main:2::menu:9::print_str_lines:33 [ ] )
  to:@return
print_str_lines::@4: scope:[print_str_lines]  from print_str_lines::@1 print_str_lines::@5
  [645] (byte*) print_char_cursor#17 ← phi( print_str_lines::@1/(byte*) print_char_cursor#19 print_str_lines::@5/(byte*) print_char_cursor#32 ) [ print_line_cursor#17 print_str_lines::str#3 print_char_cursor#17 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#3 print_char_cursor#17 ] )
  [645] (byte*) print_str_lines::str#3 ← phi( print_str_lines::@1/(byte*) print_str_lines::str#2 print_str_lines::@5/(byte*) print_str_lines::str#0 ) [ print_line_cursor#17 print_str_lines::str#3 print_char_cursor#17 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#3 print_char_cursor#17 ] )
  [646] (byte) print_str_lines::ch#0 ← *((byte*) print_str_lines::str#3) [ print_line_cursor#17 print_str_lines::str#3 print_char_cursor#17 print_str_lines::ch#0 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#3 print_char_cursor#17 print_str_lines::ch#0 ] )
  [647] (byte*) print_str_lines::str#0 ← ++ (byte*) print_str_lines::str#3 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] )
  [648] if((byte) print_str_lines::ch#0==(byte) '@') goto print_str_lines::@5 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] )
  to:print_str_lines::@8
print_str_lines::@8: scope:[print_str_lines]  from print_str_lines::@4
  [649] *((byte*) print_char_cursor#17) ← (byte) print_str_lines::ch#0 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] )
  [650] (byte*) print_char_cursor#1 ← ++ (byte*) print_char_cursor#17 [ print_line_cursor#17 print_str_lines::str#0 print_str_lines::ch#0 print_char_cursor#1 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#0 print_str_lines::ch#0 print_char_cursor#1 ] )
  to:print_str_lines::@5
print_str_lines::@5: scope:[print_str_lines]  from print_str_lines::@4 print_str_lines::@8
  [651] (byte*) print_char_cursor#32 ← phi( print_str_lines::@4/(byte*) print_char_cursor#17 print_str_lines::@8/(byte*) print_char_cursor#1 ) [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#32 print_str_lines::ch#0 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#32 print_str_lines::ch#0 ] )
  [652] if((byte) print_str_lines::ch#0!=(byte) '@') goto print_str_lines::@4 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#32 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#32 ] )
  to:print_str_lines::@9
print_str_lines::@9: scope:[print_str_lines]  from print_str_lines::@5
  [653] phi() [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#32 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#32 ] )
  [654] call print_ln param-assignment [ print_str_lines::str#0 print_line_cursor#19 ] ( main:2::menu:9::print_str_lines:33 [ print_str_lines::str#0 print_line_cursor#19 ] )
  [655] (byte*~) print_char_cursor#95 ← (byte*) print_line_cursor#19 [ print_str_lines::str#0 print_char_cursor#95 print_line_cursor#19 ] ( main:2::menu:9::print_str_lines:33 [ print_str_lines::str#0 print_char_cursor#95 print_line_cursor#19 ] )
  to:print_str_lines::@1
print_ln: scope:[print_ln]  from print_str_lines::@9
  [656] phi() [ print_line_cursor#17 print_char_cursor#32 ] ( main:2::menu:9::print_str_lines:33::print_ln:654 [ print_str_lines::str#0 print_line_cursor#17 print_char_cursor#32 ] )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  [657] (byte*) print_line_cursor#18 ← phi( print_ln/(byte*) print_line_cursor#17 print_ln::@1/(byte*) print_line_cursor#19 ) [ print_char_cursor#32 print_line_cursor#18 ] ( main:2::menu:9::print_str_lines:33::print_ln:654 [ print_str_lines::str#0 print_char_cursor#32 print_line_cursor#18 ] )
  [658] (byte*) print_line_cursor#19 ← (byte*) print_line_cursor#18 + (byte/signed byte/word/signed word/dword/signed dword) 40 [ print_line_cursor#19 print_char_cursor#32 ] ( main:2::menu:9::print_str_lines:33::print_ln:654 [ print_str_lines::str#0 print_line_cursor#19 print_char_cursor#32 ] )
  [659] if((byte*) print_line_cursor#19<(byte*) print_char_cursor#32) goto print_ln::@1 [ print_line_cursor#19 print_char_cursor#32 ] ( main:2::menu:9::print_str_lines:33::print_ln:654 [ print_str_lines::str#0 print_line_cursor#19 print_char_cursor#32 ] )
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@1
  [660] return  [ print_line_cursor#19 ] ( main:2::menu:9::print_str_lines:33::print_ln:654 [ print_str_lines::str#0 print_line_cursor#19 ] )
  to:@return
print_cls: scope:[print_cls]  from menu::@44
  [661] phi() [ ] ( main:2::menu:9::print_cls:31 [ ] )
  to:print_cls::@1
print_cls::@1: scope:[print_cls]  from print_cls print_cls::@1
  [662] (byte*) print_cls::sc#2 ← phi( print_cls/(const byte*) menu::SCREEN#0 print_cls::@1/(byte*) print_cls::sc#1 ) [ print_cls::sc#2 ] ( main:2::menu:9::print_cls:31 [ print_cls::sc#2 ] )
  [663] *((byte*) print_cls::sc#2) ← (byte) ' ' [ print_cls::sc#2 ] ( main:2::menu:9::print_cls:31 [ print_cls::sc#2 ] )
  [664] (byte*) print_cls::sc#1 ← ++ (byte*) print_cls::sc#2 [ print_cls::sc#1 ] ( main:2::menu:9::print_cls:31 [ print_cls::sc#1 ] )
  [665] if((byte*) print_cls::sc#1!=(const byte*) menu::SCREEN#0+(word/signed word/dword/signed dword) 1000) goto print_cls::@1 [ print_cls::sc#1 ] ( main:2::menu:9::print_cls:31 [ print_cls::sc#1 ] )
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls::@1
  [666] return  [ ] ( main:2::menu:9::print_cls:31 [ ] )
  to:@return
print_set_screen: scope:[print_set_screen]  from menu::@18
  [667] phi() [ ] ( main:2::menu:9::print_set_screen:29 [ ] )
  to:print_set_screen::@return
print_set_screen::@return: scope:[print_set_screen]  from print_set_screen
  [668] return  [ ] ( main:2::menu:9::print_set_screen:29 [ ] )
  to:@return

DOMINATORS
@begin dominated by  @begin 
@32 dominated by  @32 @begin 
@end dominated by  @end @32 @begin 
main dominated by  @32 @begin main 
main::@1 dominated by  @32 @begin main::@1 main 
main::@return dominated by  @32 @begin main::@1 main::@return main 
main::@2 dominated by  @32 @begin main::@1 main::@2 main 
menu dominated by  @32 @begin main::@1 main::@2 menu main 
menu::@1 dominated by  @32 @begin menu::@1 main::@1 main::@2 menu main 
menu::@2 dominated by  @32 @begin menu::@1 menu::@2 main::@1 main::@2 menu main 
menu::@18 dominated by  @32 @begin menu::@1 menu::@2 main::@1 main::@2 menu main menu::@18 
menu::@44 dominated by  @32 @begin menu::@1 menu::@2 main::@1 main::@2 menu::@44 menu main menu::@18 
menu::@45 dominated by  @32 @begin menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu main menu::@18 
menu::@3 dominated by  @32 @begin menu::@3 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu main menu::@18 
menu::@return dominated by  @32 @begin menu::@return menu::@3 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu main menu::@18 
menu::@4 dominated by  @32 @begin menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu main menu::@18 
menu::@47 dominated by  @32 @begin menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@47 menu main menu::@18 
menu::@21 dominated by  @32 @begin menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@47 menu main menu::@21 menu::@18 
menu::@6 dominated by  @32 @begin menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@47 menu main menu::@18 
menu::@48 dominated by  @32 @begin menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@18 
menu::@23 dominated by  @32 @begin menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@23 menu::@18 
menu::@7 dominated by  @32 @begin menu::@7 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@18 
menu::@50 dominated by  @32 @begin menu::@7 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@18 
menu::@25 dominated by  @32 @begin menu::@7 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@25 menu::@18 
menu::@8 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@18 
menu::@52 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@18 
menu::@27 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@27 menu::@18 
menu::@9 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@18 
menu::@54 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu menu::@54 main menu::@18 
menu::@29 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu menu::@54 main menu::@29 menu::@18 
menu::@10 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu menu::@54 main menu::@18 menu::@10 
menu::@56 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu menu::@56 menu::@54 main menu::@18 menu::@10 
menu::@31 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu menu::@56 menu::@54 menu::@31 main menu::@18 menu::@10 
menu::@11 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu menu::@56 menu::@54 main menu::@18 menu::@11 menu::@10 
menu::@58 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu menu::@56 menu::@54 menu::@58 main menu::@18 menu::@11 menu::@10 
menu::@33 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu menu::@56 menu::@54 menu::@58 main menu::@33 menu::@18 menu::@11 menu::@10 
menu::@12 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu menu::@56 menu::@54 menu::@58 main menu::@18 menu::@12 menu::@11 menu::@10 
menu::@60 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu menu::@56 menu::@54 menu::@58 main menu::@18 menu::@12 menu::@11 menu::@10 
menu::@35 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu menu::@56 menu::@54 menu::@58 main menu::@35 menu::@18 menu::@12 menu::@11 menu::@10 
menu::@13 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu menu::@56 menu::@54 menu::@58 main menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 
menu::@62 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 
menu::@37 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@37 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 
menu::@14 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@14 
menu::@64 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@14 
menu::@39 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@39 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@14 
menu::@15 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@15 menu::@14 
menu::@66 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@66 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@15 menu::@14 
menu::@41 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@66 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@41 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@15 menu::@14 
mode_8bppchunkybmm dominated by  mode_8bppchunkybmm @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@66 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@41 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@15 menu::@14 
mode_8bppchunkybmm::@1 dominated by  mode_8bppchunkybmm mode_8bppchunkybmm::@1 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@66 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@41 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@15 menu::@14 
mode_8bppchunkybmm::@9 dominated by  mode_8bppchunkybmm mode_8bppchunkybmm::@9 mode_8bppchunkybmm::@1 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@66 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@41 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@15 menu::@14 
mode_8bppchunkybmm::@2 dominated by  mode_8bppchunkybmm mode_8bppchunkybmm::@9 mode_8bppchunkybmm::@2 mode_8bppchunkybmm::@1 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@66 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@41 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@15 menu::@14 
mode_8bppchunkybmm::@3 dominated by  mode_8bppchunkybmm mode_8bppchunkybmm::@9 mode_8bppchunkybmm::@2 mode_8bppchunkybmm::@3 mode_8bppchunkybmm::@1 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@66 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@41 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@15 menu::@14 
mode_8bppchunkybmm::@10 dominated by  mode_8bppchunkybmm mode_8bppchunkybmm::@10 mode_8bppchunkybmm::@9 mode_8bppchunkybmm::@2 mode_8bppchunkybmm::@3 mode_8bppchunkybmm::@1 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@66 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@41 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@15 menu::@14 
mode_8bppchunkybmm::@19 dominated by  mode_8bppchunkybmm mode_8bppchunkybmm::@19 mode_8bppchunkybmm::@10 mode_8bppchunkybmm::@9 mode_8bppchunkybmm::@2 mode_8bppchunkybmm::@3 mode_8bppchunkybmm::@1 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@66 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@41 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@15 menu::@14 
mode_8bppchunkybmm::@4 dominated by  mode_8bppchunkybmm mode_8bppchunkybmm::@9 mode_8bppchunkybmm::@4 mode_8bppchunkybmm::@2 mode_8bppchunkybmm::@3 mode_8bppchunkybmm::@1 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@66 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@41 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@15 menu::@14 
mode_8bppchunkybmm::@11 dominated by  mode_8bppchunkybmm mode_8bppchunkybmm::@11 mode_8bppchunkybmm::@9 mode_8bppchunkybmm::@4 mode_8bppchunkybmm::@2 mode_8bppchunkybmm::@3 mode_8bppchunkybmm::@1 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@66 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@41 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@15 menu::@14 
mode_8bppchunkybmm::@12 dominated by  mode_8bppchunkybmm mode_8bppchunkybmm::@11 mode_8bppchunkybmm::@12 mode_8bppchunkybmm::@9 mode_8bppchunkybmm::@4 mode_8bppchunkybmm::@2 mode_8bppchunkybmm::@3 mode_8bppchunkybmm::@1 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@66 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@41 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@15 menu::@14 
mode_8bppchunkybmm::@5 dominated by  mode_8bppchunkybmm mode_8bppchunkybmm::@11 mode_8bppchunkybmm::@12 mode_8bppchunkybmm::@9 mode_8bppchunkybmm::@4 mode_8bppchunkybmm::@5 mode_8bppchunkybmm::@2 mode_8bppchunkybmm::@3 mode_8bppchunkybmm::@1 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@66 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@41 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@15 menu::@14 
mode_8bppchunkybmm::@return dominated by  mode_8bppchunkybmm mode_8bppchunkybmm::@11 mode_8bppchunkybmm::@12 mode_8bppchunkybmm::@9 mode_8bppchunkybmm::@4 mode_8bppchunkybmm::@5 mode_8bppchunkybmm::@2 mode_8bppchunkybmm::@3 mode_8bppchunkybmm::@1 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@66 mode_8bppchunkybmm::@return menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@41 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@15 menu::@14 
mode_8bppchunkybmm::@6 dominated by  mode_8bppchunkybmm mode_8bppchunkybmm::@11 mode_8bppchunkybmm::@12 mode_8bppchunkybmm::@9 mode_8bppchunkybmm::@6 mode_8bppchunkybmm::@4 mode_8bppchunkybmm::@5 mode_8bppchunkybmm::@2 mode_8bppchunkybmm::@3 mode_8bppchunkybmm::@1 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@66 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@41 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@15 menu::@14 
mode_8bppchunkybmm::@21 dominated by  mode_8bppchunkybmm mode_8bppchunkybmm::@21 mode_8bppchunkybmm::@11 mode_8bppchunkybmm::@12 mode_8bppchunkybmm::@9 mode_8bppchunkybmm::@6 mode_8bppchunkybmm::@4 mode_8bppchunkybmm::@5 mode_8bppchunkybmm::@2 mode_8bppchunkybmm::@3 mode_8bppchunkybmm::@1 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@66 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@41 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@15 menu::@14 
keyboard_key_pressed dominated by  @32 @begin menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu keyboard_key_pressed main menu::@18 
keyboard_key_pressed::@2 dominated by  keyboard_key_pressed::@2 @32 @begin menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu keyboard_key_pressed main menu::@18 
keyboard_key_pressed::@return dominated by  keyboard_key_pressed::@return keyboard_key_pressed::@2 @32 @begin menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu keyboard_key_pressed main menu::@18 
keyboard_matrix_read dominated by  @32 @begin menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu keyboard_key_pressed main keyboard_matrix_read menu::@18 
keyboard_matrix_read::@return dominated by  @32 @begin menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu keyboard_key_pressed main keyboard_matrix_read keyboard_matrix_read::@return menu::@18 
dtvSetCpuBankSegment1 dominated by  mode_8bppchunkybmm mode_8bppchunkybmm::@9 mode_8bppchunkybmm::@1 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@66 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 dtvSetCpuBankSegment1 main menu::@41 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@15 menu::@14 
dtvSetCpuBankSegment1::@return dominated by  mode_8bppchunkybmm dtvSetCpuBankSegment1::@return mode_8bppchunkybmm::@9 mode_8bppchunkybmm::@1 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@66 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 dtvSetCpuBankSegment1 main menu::@41 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@15 menu::@14 
mode_8bpppixelcell dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@39 mode_8bpppixelcell menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@14 
mode_8bpppixelcell::@1 dominated by  mode_8bpppixelcell::@1 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@39 mode_8bpppixelcell menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@14 
mode_8bpppixelcell::@2 dominated by  mode_8bpppixelcell::@1 mode_8bpppixelcell::@2 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@39 mode_8bpppixelcell menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@14 
mode_8bpppixelcell::@3 dominated by  mode_8bpppixelcell::@1 mode_8bpppixelcell::@2 mode_8bpppixelcell::@3 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@39 mode_8bpppixelcell menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@14 
mode_8bpppixelcell::@13 dominated by  mode_8bpppixelcell::@1 mode_8bpppixelcell::@2 mode_8bpppixelcell::@3 mode_8bpppixelcell::@13 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@39 mode_8bpppixelcell menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@14 
mode_8bpppixelcell::@14 dominated by  mode_8bpppixelcell::@1 mode_8bpppixelcell::@2 mode_8bpppixelcell::@3 mode_8bpppixelcell::@13 mode_8bpppixelcell::@14 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@39 mode_8bpppixelcell menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@14 
mode_8bpppixelcell::@4 dominated by  mode_8bpppixelcell::@1 mode_8bpppixelcell::@4 mode_8bpppixelcell::@2 mode_8bpppixelcell::@3 mode_8bpppixelcell::@13 mode_8bpppixelcell::@14 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@39 mode_8bpppixelcell menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@14 
mode_8bpppixelcell::@5 dominated by  mode_8bpppixelcell::@1 mode_8bpppixelcell::@4 mode_8bpppixelcell::@5 mode_8bpppixelcell::@2 mode_8bpppixelcell::@3 mode_8bpppixelcell::@13 mode_8bpppixelcell::@14 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@39 mode_8bpppixelcell menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@14 
mode_8bpppixelcell::@6 dominated by  mode_8bpppixelcell::@6 mode_8bpppixelcell::@1 mode_8bpppixelcell::@4 mode_8bpppixelcell::@5 mode_8bpppixelcell::@2 mode_8bpppixelcell::@3 mode_8bpppixelcell::@13 mode_8bpppixelcell::@14 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@39 mode_8bpppixelcell menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@14 
mode_8bpppixelcell::@15 dominated by  mode_8bpppixelcell::@6 mode_8bpppixelcell::@1 mode_8bpppixelcell::@4 mode_8bpppixelcell::@5 mode_8bpppixelcell::@2 mode_8bpppixelcell::@3 mode_8bpppixelcell::@15 mode_8bpppixelcell::@13 mode_8bpppixelcell::@14 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@39 mode_8bpppixelcell menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@14 
mode_8bpppixelcell::@7 dominated by  mode_8bpppixelcell::@6 mode_8bpppixelcell::@7 mode_8bpppixelcell::@1 mode_8bpppixelcell::@4 mode_8bpppixelcell::@5 mode_8bpppixelcell::@2 mode_8bpppixelcell::@3 mode_8bpppixelcell::@13 mode_8bpppixelcell::@14 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@39 mode_8bpppixelcell menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@14 
mode_8bpppixelcell::@16 dominated by  mode_8bpppixelcell::@6 mode_8bpppixelcell::@7 mode_8bpppixelcell::@1 mode_8bpppixelcell::@4 mode_8bpppixelcell::@5 mode_8bpppixelcell::@2 mode_8bpppixelcell::@3 mode_8bpppixelcell::@16 mode_8bpppixelcell::@13 mode_8bpppixelcell::@14 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@39 mode_8bpppixelcell menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@14 
mode_8bpppixelcell::@17 dominated by  mode_8bpppixelcell::@6 mode_8bpppixelcell::@7 mode_8bpppixelcell::@1 mode_8bpppixelcell::@4 mode_8bpppixelcell::@5 mode_8bpppixelcell::@2 mode_8bpppixelcell::@3 mode_8bpppixelcell::@17 mode_8bpppixelcell::@16 mode_8bpppixelcell::@13 mode_8bpppixelcell::@14 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@39 mode_8bpppixelcell menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@14 
mode_8bpppixelcell::@18 dominated by  mode_8bpppixelcell::@6 mode_8bpppixelcell::@7 mode_8bpppixelcell::@1 mode_8bpppixelcell::@4 mode_8bpppixelcell::@5 mode_8bpppixelcell::@2 mode_8bpppixelcell::@3 mode_8bpppixelcell::@17 mode_8bpppixelcell::@18 mode_8bpppixelcell::@16 mode_8bpppixelcell::@13 mode_8bpppixelcell::@14 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@39 mode_8bpppixelcell menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@14 
mode_8bpppixelcell::@8 dominated by  mode_8bpppixelcell::@8 mode_8bpppixelcell::@6 mode_8bpppixelcell::@7 mode_8bpppixelcell::@1 mode_8bpppixelcell::@4 mode_8bpppixelcell::@5 mode_8bpppixelcell::@2 mode_8bpppixelcell::@3 mode_8bpppixelcell::@17 mode_8bpppixelcell::@18 mode_8bpppixelcell::@16 mode_8bpppixelcell::@13 mode_8bpppixelcell::@14 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@39 mode_8bpppixelcell menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@14 
mode_8bpppixelcell::@return dominated by  mode_8bpppixelcell::@8 mode_8bpppixelcell::@6 mode_8bpppixelcell::@7 mode_8bpppixelcell::@1 mode_8bpppixelcell::@4 mode_8bpppixelcell::@5 mode_8bpppixelcell::@2 mode_8bpppixelcell::@3 mode_8bpppixelcell::@17 mode_8bpppixelcell::@18 mode_8bpppixelcell::@16 mode_8bpppixelcell::@13 mode_8bpppixelcell::@14 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 mode_8bpppixelcell::@return menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@39 mode_8bpppixelcell menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@14 
mode_8bpppixelcell::@9 dominated by  mode_8bpppixelcell::@8 mode_8bpppixelcell::@9 mode_8bpppixelcell::@6 mode_8bpppixelcell::@7 mode_8bpppixelcell::@1 mode_8bpppixelcell::@4 mode_8bpppixelcell::@5 mode_8bpppixelcell::@2 mode_8bpppixelcell::@3 mode_8bpppixelcell::@17 mode_8bpppixelcell::@18 mode_8bpppixelcell::@16 mode_8bpppixelcell::@13 mode_8bpppixelcell::@14 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@39 mode_8bpppixelcell menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@14 
mode_8bpppixelcell::@24 dominated by  mode_8bpppixelcell::@8 mode_8bpppixelcell::@9 mode_8bpppixelcell::@6 mode_8bpppixelcell::@7 mode_8bpppixelcell::@1 mode_8bpppixelcell::@4 mode_8bpppixelcell::@5 mode_8bpppixelcell::@2 mode_8bpppixelcell::@3 mode_8bpppixelcell::@24 mode_8bpppixelcell::@17 mode_8bpppixelcell::@18 mode_8bpppixelcell::@16 mode_8bpppixelcell::@13 mode_8bpppixelcell::@14 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@64 menu::@62 menu menu::@56 menu::@54 menu::@58 main menu::@39 mode_8bpppixelcell menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 menu::@14 
mode_sixsfred dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@62 menu menu::@56 menu::@54 menu::@58 main mode_sixsfred menu::@37 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 
mode_sixsfred::@1 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@62 mode_sixsfred::@1 menu menu::@56 menu::@54 menu::@58 main mode_sixsfred menu::@37 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 
mode_sixsfred::@12 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@62 mode_sixsfred::@1 menu menu::@56 menu::@54 menu::@58 main mode_sixsfred::@12 mode_sixsfred menu::@37 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 
mode_sixsfred::@2 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@62 mode_sixsfred::@1 mode_sixsfred::@2 menu menu::@56 menu::@54 menu::@58 main mode_sixsfred::@12 mode_sixsfred menu::@37 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 
mode_sixsfred::@3 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@62 mode_sixsfred::@1 mode_sixsfred::@3 mode_sixsfred::@2 menu menu::@56 menu::@54 menu::@58 main mode_sixsfred::@12 mode_sixsfred menu::@37 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 
mode_sixsfred::@13 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@62 mode_sixsfred::@1 mode_sixsfred::@3 mode_sixsfred::@2 menu menu::@56 menu::@54 menu::@58 main mode_sixsfred::@12 mode_sixsfred::@13 mode_sixsfred menu::@37 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 
mode_sixsfred::@4 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@62 mode_sixsfred::@1 mode_sixsfred::@3 mode_sixsfred::@2 menu mode_sixsfred::@4 menu::@56 menu::@54 menu::@58 main mode_sixsfred::@12 mode_sixsfred::@13 mode_sixsfred menu::@37 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 
mode_sixsfred::@5 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@62 mode_sixsfred::@1 mode_sixsfred::@3 mode_sixsfred::@2 menu mode_sixsfred::@5 mode_sixsfred::@4 menu::@56 menu::@54 menu::@58 main mode_sixsfred::@12 mode_sixsfred::@13 mode_sixsfred menu::@37 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 
mode_sixsfred::@15 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@62 mode_sixsfred::@1 mode_sixsfred::@3 mode_sixsfred::@2 menu mode_sixsfred::@5 mode_sixsfred::@4 menu::@56 menu::@54 menu::@58 main mode_sixsfred::@12 mode_sixsfred::@13 mode_sixsfred::@15 mode_sixsfred menu::@37 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 
mode_sixsfred::@6 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@62 mode_sixsfred::@1 mode_sixsfred::@3 mode_sixsfred::@2 menu mode_sixsfred::@5 mode_sixsfred::@4 mode_sixsfred::@6 menu::@56 menu::@54 menu::@58 main mode_sixsfred::@12 mode_sixsfred::@13 mode_sixsfred::@15 mode_sixsfred menu::@37 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 
mode_sixsfred::@7 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@62 mode_sixsfred::@1 mode_sixsfred::@3 mode_sixsfred::@2 menu mode_sixsfred::@5 mode_sixsfred::@4 mode_sixsfred::@7 mode_sixsfred::@6 menu::@56 menu::@54 menu::@58 main mode_sixsfred::@12 mode_sixsfred::@13 mode_sixsfred::@15 mode_sixsfred menu::@37 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 
mode_sixsfred::@17 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@62 mode_sixsfred::@1 mode_sixsfred::@3 mode_sixsfred::@2 menu mode_sixsfred::@5 mode_sixsfred::@4 mode_sixsfred::@7 mode_sixsfred::@6 menu::@56 menu::@54 menu::@58 main mode_sixsfred::@12 mode_sixsfred::@13 mode_sixsfred::@15 mode_sixsfred::@17 mode_sixsfred menu::@37 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 
mode_sixsfred::@8 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@62 mode_sixsfred::@1 mode_sixsfred::@3 mode_sixsfred::@2 menu mode_sixsfred::@5 mode_sixsfred::@4 mode_sixsfred::@7 mode_sixsfred::@6 mode_sixsfred::@8 menu::@56 menu::@54 menu::@58 main mode_sixsfred::@12 mode_sixsfred::@13 mode_sixsfred::@15 mode_sixsfred::@17 mode_sixsfred menu::@37 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 
mode_sixsfred::@return dominated by  mode_sixsfred::@return @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@62 mode_sixsfred::@1 mode_sixsfred::@3 mode_sixsfred::@2 menu mode_sixsfred::@5 mode_sixsfred::@4 mode_sixsfred::@7 mode_sixsfred::@6 mode_sixsfred::@8 menu::@56 menu::@54 menu::@58 main mode_sixsfred::@12 mode_sixsfred::@13 mode_sixsfred::@15 mode_sixsfred::@17 mode_sixsfred menu::@37 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 
mode_sixsfred::@9 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@62 mode_sixsfred::@1 mode_sixsfred::@3 mode_sixsfred::@2 menu mode_sixsfred::@5 mode_sixsfred::@4 mode_sixsfred::@7 mode_sixsfred::@6 mode_sixsfred::@9 mode_sixsfred::@8 menu::@56 menu::@54 menu::@58 main mode_sixsfred::@12 mode_sixsfred::@13 mode_sixsfred::@15 mode_sixsfred::@17 mode_sixsfred menu::@37 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 
mode_sixsfred::@24 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu::@62 mode_sixsfred::@1 mode_sixsfred::@3 mode_sixsfred::@2 menu mode_sixsfred::@5 mode_sixsfred::@4 mode_sixsfred::@7 mode_sixsfred::@6 mode_sixsfred::@9 mode_sixsfred::@8 menu::@56 menu::@54 menu::@58 main mode_sixsfred::@12 mode_sixsfred::@13 mode_sixsfred::@15 mode_sixsfred::@17 mode_sixsfred::@24 mode_sixsfred menu::@37 menu::@18 menu::@13 menu::@12 menu::@11 menu::@10 
mode_twoplanebitmap dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu menu::@56 menu::@54 menu::@58 main mode_twoplanebitmap menu::@35 menu::@18 menu::@12 menu::@11 menu::@10 
mode_twoplanebitmap::@1 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu menu::@56 menu::@54 menu::@58 mode_twoplanebitmap::@1 main mode_twoplanebitmap menu::@35 menu::@18 menu::@12 menu::@11 menu::@10 
mode_twoplanebitmap::@14 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 mode_twoplanebitmap::@14 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu menu::@56 menu::@54 menu::@58 mode_twoplanebitmap::@1 main mode_twoplanebitmap menu::@35 menu::@18 menu::@12 menu::@11 menu::@10 
mode_twoplanebitmap::@2 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 mode_twoplanebitmap::@14 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu menu::@56 menu::@54 menu::@58 mode_twoplanebitmap::@1 mode_twoplanebitmap::@2 main mode_twoplanebitmap menu::@35 menu::@18 menu::@12 menu::@11 menu::@10 
mode_twoplanebitmap::@3 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 mode_twoplanebitmap::@14 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu menu::@56 menu::@54 menu::@58 mode_twoplanebitmap::@1 mode_twoplanebitmap::@2 mode_twoplanebitmap::@3 main mode_twoplanebitmap menu::@35 menu::@18 menu::@12 menu::@11 menu::@10 
mode_twoplanebitmap::@15 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 mode_twoplanebitmap::@15 mode_twoplanebitmap::@14 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu menu::@56 menu::@54 menu::@58 mode_twoplanebitmap::@1 mode_twoplanebitmap::@2 mode_twoplanebitmap::@3 main mode_twoplanebitmap menu::@35 menu::@18 menu::@12 menu::@11 menu::@10 
mode_twoplanebitmap::@4 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 mode_twoplanebitmap::@15 mode_twoplanebitmap::@14 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu menu::@56 menu::@54 menu::@58 mode_twoplanebitmap::@1 mode_twoplanebitmap::@2 mode_twoplanebitmap::@3 mode_twoplanebitmap::@4 main mode_twoplanebitmap menu::@35 menu::@18 menu::@12 menu::@11 menu::@10 
mode_twoplanebitmap::@5 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 mode_twoplanebitmap::@15 mode_twoplanebitmap::@14 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu menu::@56 menu::@54 menu::@58 mode_twoplanebitmap::@1 mode_twoplanebitmap::@2 mode_twoplanebitmap::@3 mode_twoplanebitmap::@4 main mode_twoplanebitmap mode_twoplanebitmap::@5 menu::@35 menu::@18 menu::@12 menu::@11 menu::@10 
mode_twoplanebitmap::@17 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 mode_twoplanebitmap::@17 mode_twoplanebitmap::@15 mode_twoplanebitmap::@14 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu menu::@56 menu::@54 menu::@58 mode_twoplanebitmap::@1 mode_twoplanebitmap::@2 mode_twoplanebitmap::@3 mode_twoplanebitmap::@4 main mode_twoplanebitmap mode_twoplanebitmap::@5 menu::@35 menu::@18 menu::@12 menu::@11 menu::@10 
mode_twoplanebitmap::@7 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 mode_twoplanebitmap::@15 mode_twoplanebitmap::@14 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu menu::@56 menu::@54 menu::@58 mode_twoplanebitmap::@1 mode_twoplanebitmap::@2 mode_twoplanebitmap::@3 mode_twoplanebitmap::@4 main mode_twoplanebitmap mode_twoplanebitmap::@5 mode_twoplanebitmap::@7 menu::@35 menu::@18 menu::@12 menu::@11 menu::@10 
mode_twoplanebitmap::@19 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 mode_twoplanebitmap::@19 mode_twoplanebitmap::@15 mode_twoplanebitmap::@14 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu menu::@56 menu::@54 menu::@58 mode_twoplanebitmap::@1 mode_twoplanebitmap::@2 mode_twoplanebitmap::@3 mode_twoplanebitmap::@4 main mode_twoplanebitmap mode_twoplanebitmap::@5 mode_twoplanebitmap::@7 menu::@35 menu::@18 menu::@12 menu::@11 menu::@10 
mode_twoplanebitmap::@8 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 mode_twoplanebitmap::@19 mode_twoplanebitmap::@15 mode_twoplanebitmap::@14 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu menu::@56 menu::@54 menu::@58 mode_twoplanebitmap::@1 mode_twoplanebitmap::@2 mode_twoplanebitmap::@3 mode_twoplanebitmap::@4 main mode_twoplanebitmap mode_twoplanebitmap::@5 mode_twoplanebitmap::@7 mode_twoplanebitmap::@8 menu::@35 menu::@18 menu::@12 menu::@11 menu::@10 
mode_twoplanebitmap::@9 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 mode_twoplanebitmap::@19 mode_twoplanebitmap::@15 mode_twoplanebitmap::@14 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu menu::@56 menu::@54 menu::@58 mode_twoplanebitmap::@1 mode_twoplanebitmap::@2 mode_twoplanebitmap::@3 mode_twoplanebitmap::@4 main mode_twoplanebitmap mode_twoplanebitmap::@9 mode_twoplanebitmap::@5 mode_twoplanebitmap::@7 mode_twoplanebitmap::@8 menu::@35 menu::@18 menu::@12 menu::@11 menu::@10 
mode_twoplanebitmap::@21 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 mode_twoplanebitmap::@21 menu::@52 menu::@50 mode_twoplanebitmap::@19 mode_twoplanebitmap::@15 mode_twoplanebitmap::@14 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu menu::@56 menu::@54 menu::@58 mode_twoplanebitmap::@1 mode_twoplanebitmap::@2 mode_twoplanebitmap::@3 mode_twoplanebitmap::@4 main mode_twoplanebitmap mode_twoplanebitmap::@9 mode_twoplanebitmap::@5 mode_twoplanebitmap::@7 mode_twoplanebitmap::@8 menu::@35 menu::@18 menu::@12 menu::@11 menu::@10 
mode_twoplanebitmap::@10 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 mode_twoplanebitmap::@21 menu::@52 menu::@50 mode_twoplanebitmap::@19 mode_twoplanebitmap::@15 mode_twoplanebitmap::@14 menu::@45 menu::@44 mode_twoplanebitmap::@10 menu::@48 menu::@47 menu::@60 menu menu::@56 menu::@54 menu::@58 mode_twoplanebitmap::@1 mode_twoplanebitmap::@2 mode_twoplanebitmap::@3 mode_twoplanebitmap::@4 main mode_twoplanebitmap mode_twoplanebitmap::@9 mode_twoplanebitmap::@5 mode_twoplanebitmap::@7 mode_twoplanebitmap::@8 menu::@35 menu::@18 menu::@12 menu::@11 menu::@10 
mode_twoplanebitmap::@return dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 mode_twoplanebitmap::@return main::@1 main::@2 mode_twoplanebitmap::@21 menu::@52 menu::@50 mode_twoplanebitmap::@19 mode_twoplanebitmap::@15 mode_twoplanebitmap::@14 menu::@45 menu::@44 mode_twoplanebitmap::@10 menu::@48 menu::@47 menu::@60 menu menu::@56 menu::@54 menu::@58 mode_twoplanebitmap::@1 mode_twoplanebitmap::@2 mode_twoplanebitmap::@3 mode_twoplanebitmap::@4 main mode_twoplanebitmap mode_twoplanebitmap::@9 mode_twoplanebitmap::@5 mode_twoplanebitmap::@7 mode_twoplanebitmap::@8 menu::@35 menu::@18 menu::@12 menu::@11 menu::@10 
mode_twoplanebitmap::@11 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 mode_twoplanebitmap::@21 menu::@52 menu::@50 mode_twoplanebitmap::@19 mode_twoplanebitmap::@15 mode_twoplanebitmap::@14 menu::@45 menu::@44 mode_twoplanebitmap::@11 mode_twoplanebitmap::@10 menu::@48 menu::@47 menu::@60 menu menu::@56 menu::@54 menu::@58 mode_twoplanebitmap::@1 mode_twoplanebitmap::@2 mode_twoplanebitmap::@3 mode_twoplanebitmap::@4 main mode_twoplanebitmap mode_twoplanebitmap::@9 mode_twoplanebitmap::@5 mode_twoplanebitmap::@7 mode_twoplanebitmap::@8 menu::@35 menu::@18 menu::@12 menu::@11 menu::@10 
mode_twoplanebitmap::@28 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 mode_twoplanebitmap::@28 mode_twoplanebitmap::@21 menu::@52 menu::@50 mode_twoplanebitmap::@19 mode_twoplanebitmap::@15 mode_twoplanebitmap::@14 menu::@45 menu::@44 mode_twoplanebitmap::@11 mode_twoplanebitmap::@10 menu::@48 menu::@47 menu::@60 menu menu::@56 menu::@54 menu::@58 mode_twoplanebitmap::@1 mode_twoplanebitmap::@2 mode_twoplanebitmap::@3 mode_twoplanebitmap::@4 main mode_twoplanebitmap mode_twoplanebitmap::@9 mode_twoplanebitmap::@5 mode_twoplanebitmap::@7 mode_twoplanebitmap::@8 menu::@35 menu::@18 menu::@12 menu::@11 menu::@10 
mode_twoplanebitmap::@6 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 mode_twoplanebitmap::@15 mode_twoplanebitmap::@14 menu::@45 menu::@44 menu::@48 menu::@47 menu::@60 menu menu::@56 menu::@54 menu::@58 mode_twoplanebitmap::@1 mode_twoplanebitmap::@2 mode_twoplanebitmap::@3 mode_twoplanebitmap::@4 main mode_twoplanebitmap mode_twoplanebitmap::@5 mode_twoplanebitmap::@6 menu::@35 menu::@18 menu::@12 menu::@11 menu::@10 
mode_sixsfred2 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 mode_sixsfred2 menu menu::@56 menu::@54 menu::@58 main menu::@33 menu::@18 menu::@11 menu::@10 
mode_sixsfred2::@1 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 mode_sixsfred2::@1 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 mode_sixsfred2 menu menu::@56 menu::@54 menu::@58 main menu::@33 menu::@18 menu::@11 menu::@10 
mode_sixsfred2::@12 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 mode_sixsfred2::@1 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 mode_sixsfred2 menu menu::@56 menu::@54 menu::@58 main mode_sixsfred2::@12 menu::@33 menu::@18 menu::@11 menu::@10 
mode_sixsfred2::@2 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 mode_sixsfred2::@1 menu::@3 mode_sixsfred2::@2 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 mode_sixsfred2 menu menu::@56 menu::@54 menu::@58 main mode_sixsfred2::@12 menu::@33 menu::@18 menu::@11 menu::@10 
mode_sixsfred2::@3 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 mode_sixsfred2::@1 menu::@3 mode_sixsfred2::@2 menu::@4 mode_sixsfred2::@3 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 mode_sixsfred2 menu menu::@56 menu::@54 menu::@58 main mode_sixsfred2::@12 menu::@33 menu::@18 menu::@11 menu::@10 
mode_sixsfred2::@13 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 mode_sixsfred2::@1 menu::@3 mode_sixsfred2::@2 menu::@4 mode_sixsfred2::@3 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 mode_sixsfred2 menu menu::@56 menu::@54 menu::@58 main mode_sixsfred2::@12 mode_sixsfred2::@13 menu::@33 menu::@18 menu::@11 menu::@10 
mode_sixsfred2::@4 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 mode_sixsfred2::@1 menu::@3 mode_sixsfred2::@2 menu::@4 mode_sixsfred2::@3 menu::@1 mode_sixsfred2::@4 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 mode_sixsfred2 menu menu::@56 menu::@54 menu::@58 main mode_sixsfred2::@12 mode_sixsfred2::@13 menu::@33 menu::@18 menu::@11 menu::@10 
mode_sixsfred2::@5 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 mode_sixsfred2::@1 menu::@3 mode_sixsfred2::@2 menu::@4 mode_sixsfred2::@3 menu::@1 mode_sixsfred2::@4 menu::@2 mode_sixsfred2::@5 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 mode_sixsfred2 menu menu::@56 menu::@54 menu::@58 main mode_sixsfred2::@12 mode_sixsfred2::@13 menu::@33 menu::@18 menu::@11 menu::@10 
mode_sixsfred2::@15 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 mode_sixsfred2::@1 menu::@3 mode_sixsfred2::@2 menu::@4 mode_sixsfred2::@3 menu::@1 mode_sixsfred2::@4 menu::@2 mode_sixsfred2::@5 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 mode_sixsfred2 menu menu::@56 menu::@54 menu::@58 main mode_sixsfred2::@12 mode_sixsfred2::@15 mode_sixsfred2::@13 menu::@33 menu::@18 menu::@11 menu::@10 
mode_sixsfred2::@6 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 mode_sixsfred2::@1 menu::@3 mode_sixsfred2::@2 menu::@4 mode_sixsfred2::@3 menu::@1 mode_sixsfred2::@4 menu::@2 mode_sixsfred2::@5 menu::@9 mode_sixsfred2::@6 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 mode_sixsfred2 menu menu::@56 menu::@54 menu::@58 main mode_sixsfred2::@12 mode_sixsfred2::@15 mode_sixsfred2::@13 menu::@33 menu::@18 menu::@11 menu::@10 
mode_sixsfred2::@7 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 mode_sixsfred2::@1 menu::@3 mode_sixsfred2::@2 menu::@4 mode_sixsfred2::@3 menu::@1 mode_sixsfred2::@4 menu::@2 mode_sixsfred2::@5 menu::@9 mode_sixsfred2::@6 mode_sixsfred2::@7 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 mode_sixsfred2 menu menu::@56 menu::@54 menu::@58 main mode_sixsfred2::@12 mode_sixsfred2::@15 mode_sixsfred2::@13 menu::@33 menu::@18 menu::@11 menu::@10 
mode_sixsfred2::@17 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 mode_sixsfred2::@1 menu::@3 mode_sixsfred2::@2 menu::@4 mode_sixsfred2::@3 menu::@1 mode_sixsfred2::@4 menu::@2 mode_sixsfred2::@5 menu::@9 mode_sixsfred2::@6 mode_sixsfred2::@7 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 mode_sixsfred2 menu menu::@56 menu::@54 menu::@58 main mode_sixsfred2::@12 mode_sixsfred2::@15 mode_sixsfred2::@13 mode_sixsfred2::@17 menu::@33 menu::@18 menu::@11 menu::@10 
mode_sixsfred2::@8 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 mode_sixsfred2::@1 menu::@3 mode_sixsfred2::@2 menu::@4 mode_sixsfred2::@3 menu::@1 mode_sixsfred2::@4 menu::@2 mode_sixsfred2::@5 menu::@9 mode_sixsfred2::@6 mode_sixsfred2::@7 mode_sixsfred2::@8 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 mode_sixsfred2 menu menu::@56 menu::@54 menu::@58 main mode_sixsfred2::@12 mode_sixsfred2::@15 mode_sixsfred2::@13 mode_sixsfred2::@17 menu::@33 menu::@18 menu::@11 menu::@10 
mode_sixsfred2::@return dominated by  @32 @begin menu::@7 menu::@8 menu::@6 mode_sixsfred2::@1 menu::@3 mode_sixsfred2::@2 menu::@4 mode_sixsfred2::@3 menu::@1 mode_sixsfred2::@4 menu::@2 mode_sixsfred2::@5 menu::@9 mode_sixsfred2::@6 mode_sixsfred2::@7 mode_sixsfred2::@8 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 mode_sixsfred2 menu menu::@56 menu::@54 menu::@58 main mode_sixsfred2::@12 mode_sixsfred2::@15 mode_sixsfred2::@13 mode_sixsfred2::@17 menu::@33 mode_sixsfred2::@return menu::@18 menu::@11 menu::@10 
mode_sixsfred2::@9 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 mode_sixsfred2::@1 menu::@3 mode_sixsfred2::@2 menu::@4 mode_sixsfred2::@3 menu::@1 mode_sixsfred2::@4 menu::@2 mode_sixsfred2::@5 menu::@9 mode_sixsfred2::@6 mode_sixsfred2::@7 mode_sixsfred2::@8 mode_sixsfred2::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 mode_sixsfred2 menu menu::@56 menu::@54 menu::@58 main mode_sixsfred2::@12 mode_sixsfred2::@15 mode_sixsfred2::@13 mode_sixsfred2::@17 menu::@33 menu::@18 menu::@11 menu::@10 
mode_sixsfred2::@24 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 mode_sixsfred2::@1 menu::@3 mode_sixsfred2::@2 menu::@4 mode_sixsfred2::@3 menu::@1 mode_sixsfred2::@4 menu::@2 mode_sixsfred2::@5 menu::@9 mode_sixsfred2::@6 mode_sixsfred2::@7 mode_sixsfred2::@8 mode_sixsfred2::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 mode_sixsfred2 menu menu::@56 menu::@54 menu::@58 main mode_sixsfred2::@24 mode_sixsfred2::@12 mode_sixsfred2::@15 mode_sixsfred2::@13 mode_sixsfred2::@17 menu::@33 menu::@18 menu::@11 menu::@10 
mode_hicolmcchar dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu menu::@56 menu::@54 menu::@31 main mode_hicolmcchar menu::@18 menu::@10 
mode_hicolmcchar::@1 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu menu::@56 menu::@54 menu::@31 main mode_hicolmcchar mode_hicolmcchar::@1 menu::@18 menu::@10 
mode_hicolmcchar::@8 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu menu::@56 menu::@54 menu::@31 main mode_hicolmcchar mode_hicolmcchar::@1 mode_hicolmcchar::@8 menu::@18 menu::@10 
mode_hicolmcchar::@2 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu menu::@56 menu::@54 menu::@31 main mode_hicolmcchar mode_hicolmcchar::@2 mode_hicolmcchar::@1 mode_hicolmcchar::@8 menu::@18 menu::@10 
mode_hicolmcchar::@3 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu menu::@56 menu::@54 menu::@31 main mode_hicolmcchar mode_hicolmcchar::@3 mode_hicolmcchar::@2 mode_hicolmcchar::@1 mode_hicolmcchar::@8 menu::@18 menu::@10 
mode_hicolmcchar::@9 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu menu::@56 menu::@54 menu::@31 main mode_hicolmcchar mode_hicolmcchar::@3 mode_hicolmcchar::@2 mode_hicolmcchar::@1 mode_hicolmcchar::@8 mode_hicolmcchar::@9 menu::@18 menu::@10 
mode_hicolmcchar::@4 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu menu::@56 menu::@54 menu::@31 main mode_hicolmcchar mode_hicolmcchar::@4 mode_hicolmcchar::@3 mode_hicolmcchar::@2 mode_hicolmcchar::@1 mode_hicolmcchar::@8 mode_hicolmcchar::@9 menu::@18 menu::@10 
mode_hicolmcchar::@return dominated by  mode_hicolmcchar::@return @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu menu::@56 menu::@54 menu::@31 main mode_hicolmcchar mode_hicolmcchar::@4 mode_hicolmcchar::@3 mode_hicolmcchar::@2 mode_hicolmcchar::@1 mode_hicolmcchar::@8 mode_hicolmcchar::@9 menu::@18 menu::@10 
mode_hicolmcchar::@5 dominated by  @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu menu::@56 menu::@54 menu::@31 main mode_hicolmcchar mode_hicolmcchar::@4 mode_hicolmcchar::@3 mode_hicolmcchar::@2 mode_hicolmcchar::@1 mode_hicolmcchar::@8 mode_hicolmcchar::@5 mode_hicolmcchar::@9 menu::@18 menu::@10 
mode_hicolmcchar::@16 dominated by  mode_hicolmcchar::@16 @32 @begin menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu menu::@56 menu::@54 menu::@31 main mode_hicolmcchar mode_hicolmcchar::@4 mode_hicolmcchar::@3 mode_hicolmcchar::@2 mode_hicolmcchar::@1 mode_hicolmcchar::@8 mode_hicolmcchar::@5 mode_hicolmcchar::@9 menu::@18 menu::@10 
mode_hicolecmchar dominated by  @32 @begin mode_hicolecmchar menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu menu::@54 main menu::@29 menu::@18 
mode_hicolecmchar::@1 dominated by  @32 @begin mode_hicolecmchar menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu mode_hicolecmchar::@1 menu::@54 main menu::@29 menu::@18 
mode_hicolecmchar::@8 dominated by  @32 @begin mode_hicolecmchar menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu mode_hicolecmchar::@1 mode_hicolecmchar::@8 menu::@54 main menu::@29 menu::@18 
mode_hicolecmchar::@2 dominated by  @32 @begin mode_hicolecmchar menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu mode_hicolecmchar::@1 mode_hicolecmchar::@2 mode_hicolecmchar::@8 menu::@54 main menu::@29 menu::@18 
mode_hicolecmchar::@3 dominated by  @32 @begin mode_hicolecmchar menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu mode_hicolecmchar::@1 mode_hicolecmchar::@2 mode_hicolecmchar::@3 mode_hicolecmchar::@8 menu::@54 main menu::@29 menu::@18 
mode_hicolecmchar::@9 dominated by  @32 @begin mode_hicolecmchar menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu mode_hicolecmchar::@1 mode_hicolecmchar::@2 mode_hicolecmchar::@3 mode_hicolecmchar::@8 mode_hicolecmchar::@9 menu::@54 main menu::@29 menu::@18 
mode_hicolecmchar::@4 dominated by  @32 @begin mode_hicolecmchar menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu mode_hicolecmchar::@1 mode_hicolecmchar::@4 mode_hicolecmchar::@2 mode_hicolecmchar::@3 mode_hicolecmchar::@8 mode_hicolecmchar::@9 menu::@54 main menu::@29 menu::@18 
mode_hicolecmchar::@return dominated by  @32 @begin mode_hicolecmchar menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu mode_hicolecmchar::@1 mode_hicolecmchar::@4 mode_hicolecmchar::@2 mode_hicolecmchar::@3 mode_hicolecmchar::@8 mode_hicolecmchar::@9 menu::@54 main menu::@29 mode_hicolecmchar::@return menu::@18 
mode_hicolecmchar::@5 dominated by  @32 @begin mode_hicolecmchar menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu mode_hicolecmchar::@1 mode_hicolecmchar::@4 mode_hicolecmchar::@5 mode_hicolecmchar::@2 mode_hicolecmchar::@3 mode_hicolecmchar::@8 mode_hicolecmchar::@9 menu::@54 main menu::@29 menu::@18 
mode_hicolecmchar::@16 dominated by  @32 @begin mode_hicolecmchar menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 menu::@9 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 mode_hicolecmchar::@16 menu mode_hicolecmchar::@1 mode_hicolecmchar::@4 mode_hicolecmchar::@5 mode_hicolecmchar::@2 mode_hicolecmchar::@3 mode_hicolecmchar::@8 mode_hicolecmchar::@9 menu::@54 main menu::@29 menu::@18 
mode_hicolstdchar dominated by  @32 @begin mode_hicolstdchar menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@27 menu::@18 
mode_hicolstdchar::@1 dominated by  @32 @begin mode_hicolstdchar menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@27 menu::@18 mode_hicolstdchar::@1 
mode_hicolstdchar::@8 dominated by  @32 @begin mode_hicolstdchar menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@27 mode_hicolstdchar::@8 menu::@18 mode_hicolstdchar::@1 
mode_hicolstdchar::@2 dominated by  @32 @begin mode_hicolstdchar menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@27 mode_hicolstdchar::@8 menu::@18 mode_hicolstdchar::@2 mode_hicolstdchar::@1 
mode_hicolstdchar::@3 dominated by  @32 @begin mode_hicolstdchar menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@27 mode_hicolstdchar::@8 menu::@18 mode_hicolstdchar::@2 mode_hicolstdchar::@3 mode_hicolstdchar::@1 
mode_hicolstdchar::@9 dominated by  @32 @begin mode_hicolstdchar menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@27 mode_hicolstdchar::@8 menu::@18 mode_hicolstdchar::@9 mode_hicolstdchar::@2 mode_hicolstdchar::@3 mode_hicolstdchar::@1 
mode_hicolstdchar::@4 dominated by  @32 @begin mode_hicolstdchar menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@27 mode_hicolstdchar::@8 menu::@18 mode_hicolstdchar::@9 mode_hicolstdchar::@2 mode_hicolstdchar::@3 mode_hicolstdchar::@4 mode_hicolstdchar::@1 
mode_hicolstdchar::@return dominated by  @32 @begin mode_hicolstdchar menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 mode_hicolstdchar::@return menu main menu::@27 mode_hicolstdchar::@8 menu::@18 mode_hicolstdchar::@9 mode_hicolstdchar::@2 mode_hicolstdchar::@3 mode_hicolstdchar::@4 mode_hicolstdchar::@1 
mode_hicolstdchar::@5 dominated by  @32 @begin mode_hicolstdchar menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@27 mode_hicolstdchar::@8 menu::@18 mode_hicolstdchar::@9 mode_hicolstdchar::@2 mode_hicolstdchar::@3 mode_hicolstdchar::@4 mode_hicolstdchar::@5 mode_hicolstdchar::@1 
mode_hicolstdchar::@16 dominated by  mode_hicolstdchar::@16 @32 @begin mode_hicolstdchar menu::@7 menu::@8 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@52 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@27 mode_hicolstdchar::@8 menu::@18 mode_hicolstdchar::@9 mode_hicolstdchar::@2 mode_hicolstdchar::@3 mode_hicolstdchar::@4 mode_hicolstdchar::@5 mode_hicolstdchar::@1 
mode_mcchar dominated by  @32 @begin mode_mcchar menu::@7 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@25 menu::@18 
mode_mcchar::@1 dominated by  @32 @begin mode_mcchar::@1 mode_mcchar menu::@7 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@25 menu::@18 
mode_mcchar::@8 dominated by  @32 @begin mode_mcchar::@8 mode_mcchar::@1 mode_mcchar menu::@7 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@25 menu::@18 
mode_mcchar::@2 dominated by  @32 @begin mode_mcchar::@8 mode_mcchar::@2 mode_mcchar::@1 mode_mcchar menu::@7 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@25 menu::@18 
mode_mcchar::@3 dominated by  @32 @begin mode_mcchar::@8 mode_mcchar::@2 mode_mcchar::@3 mode_mcchar::@1 mode_mcchar menu::@7 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@25 menu::@18 
mode_mcchar::@9 dominated by  @32 @begin mode_mcchar::@8 mode_mcchar::@9 mode_mcchar::@2 mode_mcchar::@3 mode_mcchar::@1 mode_mcchar menu::@7 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@25 menu::@18 
mode_mcchar::@4 dominated by  @32 @begin mode_mcchar::@8 mode_mcchar::@9 mode_mcchar::@2 mode_mcchar::@3 mode_mcchar::@1 mode_mcchar::@4 mode_mcchar menu::@7 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@25 menu::@18 
mode_mcchar::@return dominated by  mode_mcchar::@return @32 @begin mode_mcchar::@8 mode_mcchar::@9 mode_mcchar::@2 mode_mcchar::@3 mode_mcchar::@1 mode_mcchar::@4 mode_mcchar menu::@7 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@25 menu::@18 
mode_mcchar::@5 dominated by  @32 @begin mode_mcchar::@8 mode_mcchar::@9 mode_mcchar::@2 mode_mcchar::@3 mode_mcchar::@1 mode_mcchar::@4 mode_mcchar::@5 mode_mcchar menu::@7 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@50 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@25 menu::@18 
mode_mcchar::@16 dominated by  @32 @begin mode_mcchar::@8 mode_mcchar::@9 mode_mcchar::@2 mode_mcchar::@3 mode_mcchar::@1 mode_mcchar::@4 mode_mcchar::@5 mode_mcchar menu::@7 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@50 mode_mcchar::@16 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@25 menu::@18 
mode_ecmchar dominated by  @32 @begin mode_ecmchar menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@23 menu::@18 
mode_ecmchar::@1 dominated by  @32 @begin mode_ecmchar::@1 mode_ecmchar menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@23 menu::@18 
mode_ecmchar::@8 dominated by  mode_ecmchar::@8 @32 @begin mode_ecmchar::@1 mode_ecmchar menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@23 menu::@18 
mode_ecmchar::@2 dominated by  mode_ecmchar::@8 @32 @begin mode_ecmchar::@2 mode_ecmchar::@1 mode_ecmchar menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@23 menu::@18 
mode_ecmchar::@3 dominated by  mode_ecmchar::@8 @32 @begin mode_ecmchar::@3 mode_ecmchar::@2 mode_ecmchar::@1 mode_ecmchar menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@23 menu::@18 
mode_ecmchar::@9 dominated by  mode_ecmchar::@9 mode_ecmchar::@8 @32 @begin mode_ecmchar::@3 mode_ecmchar::@2 mode_ecmchar::@1 mode_ecmchar menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@23 menu::@18 
mode_ecmchar::@4 dominated by  mode_ecmchar::@9 mode_ecmchar::@8 @32 @begin mode_ecmchar::@4 mode_ecmchar::@3 mode_ecmchar::@2 mode_ecmchar::@1 mode_ecmchar menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@23 menu::@18 
mode_ecmchar::@return dominated by  mode_ecmchar::@9 mode_ecmchar::@8 mode_ecmchar::@return @32 @begin mode_ecmchar::@4 mode_ecmchar::@3 mode_ecmchar::@2 mode_ecmchar::@1 mode_ecmchar menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@23 menu::@18 
mode_ecmchar::@5 dominated by  mode_ecmchar::@9 mode_ecmchar::@8 @32 @begin mode_ecmchar::@5 mode_ecmchar::@4 mode_ecmchar::@3 mode_ecmchar::@2 mode_ecmchar::@1 mode_ecmchar menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@23 menu::@18 
mode_ecmchar::@16 dominated by  mode_ecmchar::@9 mode_ecmchar::@8 @32 @begin mode_ecmchar::@5 mode_ecmchar::@4 mode_ecmchar::@3 mode_ecmchar::@2 mode_ecmchar::@1 mode_ecmchar mode_ecmchar::@16 menu::@6 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@48 menu::@47 menu main menu::@23 menu::@18 
mode_stdchar dominated by  mode_stdchar @32 @begin menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@47 menu main menu::@21 menu::@18 
mode_stdchar::@1 dominated by  mode_stdchar @32 @begin mode_stdchar::@1 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@47 menu main menu::@21 menu::@18 
mode_stdchar::@8 dominated by  mode_stdchar @32 @begin mode_stdchar::@1 mode_stdchar::@8 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@47 menu main menu::@21 menu::@18 
mode_stdchar::@2 dominated by  mode_stdchar @32 @begin mode_stdchar::@1 mode_stdchar::@2 mode_stdchar::@8 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@47 menu main menu::@21 menu::@18 
mode_stdchar::@3 dominated by  mode_stdchar @32 @begin mode_stdchar::@1 mode_stdchar::@2 mode_stdchar::@3 mode_stdchar::@8 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@47 menu main menu::@21 menu::@18 
mode_stdchar::@9 dominated by  mode_stdchar @32 @begin mode_stdchar::@1 mode_stdchar::@2 mode_stdchar::@3 mode_stdchar::@9 mode_stdchar::@8 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@47 menu main menu::@21 menu::@18 
mode_stdchar::@4 dominated by  mode_stdchar @32 @begin mode_stdchar::@1 mode_stdchar::@2 mode_stdchar::@3 mode_stdchar::@4 mode_stdchar::@9 mode_stdchar::@8 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@47 menu main menu::@21 menu::@18 
mode_stdchar::@return dominated by  mode_stdchar @32 @begin mode_stdchar::@1 mode_stdchar::@2 mode_stdchar::@3 mode_stdchar::@4 mode_stdchar::@9 mode_stdchar::@8 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@47 menu main menu::@21 mode_stdchar::@return menu::@18 
mode_stdchar::@5 dominated by  mode_stdchar @32 @begin mode_stdchar::@1 mode_stdchar::@2 mode_stdchar::@5 mode_stdchar::@3 mode_stdchar::@4 mode_stdchar::@9 mode_stdchar::@8 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@47 menu main menu::@21 menu::@18 
mode_stdchar::@16 dominated by  mode_stdchar mode_stdchar::@16 @32 @begin mode_stdchar::@1 mode_stdchar::@2 mode_stdchar::@5 mode_stdchar::@3 mode_stdchar::@4 mode_stdchar::@9 mode_stdchar::@8 menu::@3 menu::@4 menu::@1 menu::@2 main::@1 main::@2 menu::@45 menu::@44 menu::@47 menu main menu::@21 menu::@18 
print_str_lines dominated by  @32 @begin menu::@1 menu::@2 main::@1 main::@2 print_str_lines menu::@45 menu::@44 menu main menu::@18 
print_str_lines::@1 dominated by  @32 @begin menu::@1 menu::@2 print_str_lines::@1 main::@1 main::@2 print_str_lines menu::@45 menu::@44 menu main menu::@18 
print_str_lines::@return dominated by  @32 @begin print_str_lines::@return menu::@1 menu::@2 print_str_lines::@1 main::@1 main::@2 print_str_lines menu::@45 menu::@44 menu main menu::@18 
print_str_lines::@4 dominated by  @32 @begin menu::@1 menu::@2 print_str_lines::@1 print_str_lines::@4 main::@1 main::@2 print_str_lines menu::@45 menu::@44 menu main menu::@18 
print_str_lines::@8 dominated by  @32 @begin menu::@1 menu::@2 print_str_lines::@1 print_str_lines::@4 print_str_lines::@8 main::@1 main::@2 print_str_lines menu::@45 menu::@44 menu main menu::@18 
print_str_lines::@5 dominated by  @32 @begin menu::@1 menu::@2 print_str_lines::@1 print_str_lines::@4 print_str_lines::@5 main::@1 main::@2 print_str_lines menu::@45 menu::@44 menu main menu::@18 
print_str_lines::@9 dominated by  @32 @begin print_str_lines::@9 menu::@1 menu::@2 print_str_lines::@1 print_str_lines::@4 print_str_lines::@5 main::@1 main::@2 print_str_lines menu::@45 menu::@44 menu main menu::@18 
print_ln dominated by  print_ln @32 @begin print_str_lines::@9 menu::@1 menu::@2 print_str_lines::@1 print_str_lines::@4 print_str_lines::@5 main::@1 main::@2 print_str_lines menu::@45 menu::@44 menu main menu::@18 
print_ln::@1 dominated by  print_ln print_ln::@1 @32 @begin print_str_lines::@9 menu::@1 menu::@2 print_str_lines::@1 print_str_lines::@4 print_str_lines::@5 main::@1 main::@2 print_str_lines menu::@45 menu::@44 menu main menu::@18 
print_ln::@return dominated by  print_ln::@return print_ln print_ln::@1 @32 @begin print_str_lines::@9 menu::@1 menu::@2 print_str_lines::@1 print_str_lines::@4 print_str_lines::@5 main::@1 main::@2 print_str_lines menu::@45 menu::@44 menu main menu::@18 
print_cls dominated by  print_cls @32 @begin menu::@1 menu::@2 main::@1 main::@2 menu::@44 menu main menu::@18 
print_cls::@1 dominated by  print_cls @32 @begin menu::@1 menu::@2 print_cls::@1 main::@1 main::@2 menu::@44 menu main menu::@18 
print_cls::@return dominated by  print_cls @32 @begin menu::@1 menu::@2 print_cls::@1 main::@1 main::@2 menu::@44 menu main print_cls::@return menu::@18 
print_set_screen dominated by  @32 @begin menu::@1 menu::@2 main::@1 main::@2 print_set_screen menu main menu::@18 
print_set_screen::@return dominated by  @32 @begin menu::@1 menu::@2 main::@1 main::@2 print_set_screen menu main menu::@18 print_set_screen::@return 

NATURAL LOOPS
Found back edge: Loop head: main::@1 tails: main::@2 blocks: null
Found back edge: Loop head: menu::@1 tails: menu::@1 blocks: null
Found back edge: Loop head: menu::@2 tails: menu::@2 blocks: null
Found back edge: Loop head: menu::@3 tails: menu::@66 blocks: null
Found back edge: Loop head: mode_8bppchunkybmm::@1 tails: mode_8bppchunkybmm::@1 blocks: null
Found back edge: Loop head: mode_8bppchunkybmm::@3 tails: mode_8bppchunkybmm::@4 blocks: null
Found back edge: Loop head: mode_8bppchunkybmm::@2 tails: mode_8bppchunkybmm::@11 blocks: null
Found back edge: Loop head: mode_8bppchunkybmm::@5 tails: mode_8bppchunkybmm::@21 blocks: null
Found back edge: Loop head: mode_8bpppixelcell::@1 tails: mode_8bpppixelcell::@1 blocks: null
Found back edge: Loop head: mode_8bpppixelcell::@3 tails: mode_8bpppixelcell::@3 blocks: null
Found back edge: Loop head: mode_8bpppixelcell::@2 tails: mode_8bpppixelcell::@13 blocks: null
Found back edge: Loop head: mode_8bpppixelcell::@6 tails: mode_8bpppixelcell::@7 blocks: null
Found back edge: Loop head: mode_8bpppixelcell::@5 tails: mode_8bpppixelcell::@16 blocks: null
Found back edge: Loop head: mode_8bpppixelcell::@4 tails: mode_8bpppixelcell::@17 blocks: null
Found back edge: Loop head: mode_8bpppixelcell::@8 tails: mode_8bpppixelcell::@24 blocks: null
Found back edge: Loop head: mode_sixsfred::@1 tails: mode_sixsfred::@1 blocks: null
Found back edge: Loop head: mode_sixsfred::@3 tails: mode_sixsfred::@3 blocks: null
Found back edge: Loop head: mode_sixsfred::@2 tails: mode_sixsfred::@13 blocks: null
Found back edge: Loop head: mode_sixsfred::@5 tails: mode_sixsfred::@5 blocks: null
Found back edge: Loop head: mode_sixsfred::@4 tails: mode_sixsfred::@15 blocks: null
Found back edge: Loop head: mode_sixsfred::@7 tails: mode_sixsfred::@7 blocks: null
Found back edge: Loop head: mode_sixsfred::@6 tails: mode_sixsfred::@17 blocks: null
Found back edge: Loop head: mode_sixsfred::@8 tails: mode_sixsfred::@24 blocks: null
Found back edge: Loop head: mode_twoplanebitmap::@1 tails: mode_twoplanebitmap::@1 blocks: null
Found back edge: Loop head: mode_twoplanebitmap::@3 tails: mode_twoplanebitmap::@3 blocks: null
Found back edge: Loop head: mode_twoplanebitmap::@2 tails: mode_twoplanebitmap::@15 blocks: null
Found back edge: Loop head: mode_twoplanebitmap::@5 tails: mode_twoplanebitmap::@7 blocks: null
Found back edge: Loop head: mode_twoplanebitmap::@4 tails: mode_twoplanebitmap::@19 blocks: null
Found back edge: Loop head: mode_twoplanebitmap::@9 tails: mode_twoplanebitmap::@9 blocks: null
Found back edge: Loop head: mode_twoplanebitmap::@8 tails: mode_twoplanebitmap::@21 blocks: null
Found back edge: Loop head: mode_twoplanebitmap::@10 tails: mode_twoplanebitmap::@28 blocks: null
Found back edge: Loop head: mode_sixsfred2::@1 tails: mode_sixsfred2::@1 blocks: null
Found back edge: Loop head: mode_sixsfred2::@3 tails: mode_sixsfred2::@3 blocks: null
Found back edge: Loop head: mode_sixsfred2::@2 tails: mode_sixsfred2::@13 blocks: null
Found back edge: Loop head: mode_sixsfred2::@5 tails: mode_sixsfred2::@5 blocks: null
Found back edge: Loop head: mode_sixsfred2::@4 tails: mode_sixsfred2::@15 blocks: null
Found back edge: Loop head: mode_sixsfred2::@7 tails: mode_sixsfred2::@7 blocks: null
Found back edge: Loop head: mode_sixsfred2::@6 tails: mode_sixsfred2::@17 blocks: null
Found back edge: Loop head: mode_sixsfred2::@8 tails: mode_sixsfred2::@24 blocks: null
Found back edge: Loop head: mode_hicolmcchar::@1 tails: mode_hicolmcchar::@1 blocks: null
Found back edge: Loop head: mode_hicolmcchar::@3 tails: mode_hicolmcchar::@3 blocks: null
Found back edge: Loop head: mode_hicolmcchar::@2 tails: mode_hicolmcchar::@9 blocks: null
Found back edge: Loop head: mode_hicolmcchar::@4 tails: mode_hicolmcchar::@16 blocks: null
Found back edge: Loop head: mode_hicolecmchar::@1 tails: mode_hicolecmchar::@1 blocks: null
Found back edge: Loop head: mode_hicolecmchar::@3 tails: mode_hicolecmchar::@3 blocks: null
Found back edge: Loop head: mode_hicolecmchar::@2 tails: mode_hicolecmchar::@9 blocks: null
Found back edge: Loop head: mode_hicolecmchar::@4 tails: mode_hicolecmchar::@16 blocks: null
Found back edge: Loop head: mode_hicolstdchar::@1 tails: mode_hicolstdchar::@1 blocks: null
Found back edge: Loop head: mode_hicolstdchar::@3 tails: mode_hicolstdchar::@3 blocks: null
Found back edge: Loop head: mode_hicolstdchar::@2 tails: mode_hicolstdchar::@9 blocks: null
Found back edge: Loop head: mode_hicolstdchar::@4 tails: mode_hicolstdchar::@16 blocks: null
Found back edge: Loop head: mode_mcchar::@1 tails: mode_mcchar::@1 blocks: null
Found back edge: Loop head: mode_mcchar::@3 tails: mode_mcchar::@3 blocks: null
Found back edge: Loop head: mode_mcchar::@2 tails: mode_mcchar::@9 blocks: null
Found back edge: Loop head: mode_mcchar::@4 tails: mode_mcchar::@16 blocks: null
Found back edge: Loop head: mode_ecmchar::@1 tails: mode_ecmchar::@1 blocks: null
Found back edge: Loop head: mode_ecmchar::@3 tails: mode_ecmchar::@3 blocks: null
Found back edge: Loop head: mode_ecmchar::@2 tails: mode_ecmchar::@9 blocks: null
Found back edge: Loop head: mode_ecmchar::@4 tails: mode_ecmchar::@16 blocks: null
Found back edge: Loop head: mode_stdchar::@1 tails: mode_stdchar::@1 blocks: null
Found back edge: Loop head: mode_stdchar::@3 tails: mode_stdchar::@3 blocks: null
Found back edge: Loop head: mode_stdchar::@2 tails: mode_stdchar::@9 blocks: null
Found back edge: Loop head: mode_stdchar::@4 tails: mode_stdchar::@16 blocks: null
Found back edge: Loop head: print_str_lines::@4 tails: print_str_lines::@5 blocks: null
Found back edge: Loop head: print_str_lines::@1 tails: print_str_lines::@9 blocks: null
Found back edge: Loop head: print_ln::@1 tails: print_ln::@1 blocks: null
Found back edge: Loop head: print_cls::@1 tails: print_cls::@1 blocks: null
Populated: Loop head: main::@1 tails: main::@2 blocks: main::@2 main::@1 
Populated: Loop head: menu::@1 tails: menu::@1 blocks: menu::@1 
Populated: Loop head: menu::@2 tails: menu::@2 blocks: menu::@2 
Populated: Loop head: menu::@3 tails: menu::@66 blocks: menu::@66 menu::@15 menu::@64 menu::@14 menu::@62 menu::@13 menu::@60 menu::@12 menu::@58 menu::@11 menu::@56 menu::@10 menu::@54 menu::@9 menu::@52 menu::@8 menu::@50 menu::@7 menu::@48 menu::@6 menu::@47 menu::@4 menu::@3 
Populated: Loop head: mode_8bppchunkybmm::@1 tails: mode_8bppchunkybmm::@1 blocks: mode_8bppchunkybmm::@1 
Populated: Loop head: mode_8bppchunkybmm::@3 tails: mode_8bppchunkybmm::@4 blocks: mode_8bppchunkybmm::@4 mode_8bppchunkybmm::@19 mode_8bppchunkybmm::@3 mode_8bppchunkybmm::@10 
Populated: Loop head: mode_8bppchunkybmm::@2 tails: mode_8bppchunkybmm::@11 blocks: mode_8bppchunkybmm::@11 mode_8bppchunkybmm::@4 mode_8bppchunkybmm::@19 mode_8bppchunkybmm::@3 mode_8bppchunkybmm::@10 mode_8bppchunkybmm::@2 
Populated: Loop head: mode_8bppchunkybmm::@5 tails: mode_8bppchunkybmm::@21 blocks: mode_8bppchunkybmm::@21 mode_8bppchunkybmm::@6 mode_8bppchunkybmm::@5 
Populated: Loop head: mode_8bpppixelcell::@1 tails: mode_8bpppixelcell::@1 blocks: mode_8bpppixelcell::@1 
Populated: Loop head: mode_8bpppixelcell::@3 tails: mode_8bpppixelcell::@3 blocks: mode_8bpppixelcell::@3 
Populated: Loop head: mode_8bpppixelcell::@2 tails: mode_8bpppixelcell::@13 blocks: mode_8bpppixelcell::@13 mode_8bpppixelcell::@3 mode_8bpppixelcell::@2 
Populated: Loop head: mode_8bpppixelcell::@6 tails: mode_8bpppixelcell::@7 blocks: mode_8bpppixelcell::@7 mode_8bpppixelcell::@15 mode_8bpppixelcell::@6 
Populated: Loop head: mode_8bpppixelcell::@5 tails: mode_8bpppixelcell::@16 blocks: mode_8bpppixelcell::@16 mode_8bpppixelcell::@7 mode_8bpppixelcell::@15 mode_8bpppixelcell::@6 mode_8bpppixelcell::@5 
Populated: Loop head: mode_8bpppixelcell::@4 tails: mode_8bpppixelcell::@17 blocks: mode_8bpppixelcell::@17 mode_8bpppixelcell::@16 mode_8bpppixelcell::@7 mode_8bpppixelcell::@15 mode_8bpppixelcell::@6 mode_8bpppixelcell::@5 mode_8bpppixelcell::@4 
Populated: Loop head: mode_8bpppixelcell::@8 tails: mode_8bpppixelcell::@24 blocks: mode_8bpppixelcell::@24 mode_8bpppixelcell::@9 mode_8bpppixelcell::@8 
Populated: Loop head: mode_sixsfred::@1 tails: mode_sixsfred::@1 blocks: mode_sixsfred::@1 
Populated: Loop head: mode_sixsfred::@3 tails: mode_sixsfred::@3 blocks: mode_sixsfred::@3 
Populated: Loop head: mode_sixsfred::@2 tails: mode_sixsfred::@13 blocks: mode_sixsfred::@13 mode_sixsfred::@3 mode_sixsfred::@2 
Populated: Loop head: mode_sixsfred::@5 tails: mode_sixsfred::@5 blocks: mode_sixsfred::@5 
Populated: Loop head: mode_sixsfred::@4 tails: mode_sixsfred::@15 blocks: mode_sixsfred::@15 mode_sixsfred::@5 mode_sixsfred::@4 
Populated: Loop head: mode_sixsfred::@7 tails: mode_sixsfred::@7 blocks: mode_sixsfred::@7 
Populated: Loop head: mode_sixsfred::@6 tails: mode_sixsfred::@17 blocks: mode_sixsfred::@17 mode_sixsfred::@7 mode_sixsfred::@6 
Populated: Loop head: mode_sixsfred::@8 tails: mode_sixsfred::@24 blocks: mode_sixsfred::@24 mode_sixsfred::@9 mode_sixsfred::@8 
Populated: Loop head: mode_twoplanebitmap::@1 tails: mode_twoplanebitmap::@1 blocks: mode_twoplanebitmap::@1 
Populated: Loop head: mode_twoplanebitmap::@3 tails: mode_twoplanebitmap::@3 blocks: mode_twoplanebitmap::@3 
Populated: Loop head: mode_twoplanebitmap::@2 tails: mode_twoplanebitmap::@15 blocks: mode_twoplanebitmap::@15 mode_twoplanebitmap::@3 mode_twoplanebitmap::@2 
Populated: Loop head: mode_twoplanebitmap::@5 tails: mode_twoplanebitmap::@7 blocks: mode_twoplanebitmap::@7 mode_twoplanebitmap::@17 mode_twoplanebitmap::@6 mode_twoplanebitmap::@5 
Populated: Loop head: mode_twoplanebitmap::@4 tails: mode_twoplanebitmap::@19 blocks: mode_twoplanebitmap::@19 mode_twoplanebitmap::@7 mode_twoplanebitmap::@17 mode_twoplanebitmap::@6 mode_twoplanebitmap::@5 mode_twoplanebitmap::@4 
Populated: Loop head: mode_twoplanebitmap::@9 tails: mode_twoplanebitmap::@9 blocks: mode_twoplanebitmap::@9 
Populated: Loop head: mode_twoplanebitmap::@8 tails: mode_twoplanebitmap::@21 blocks: mode_twoplanebitmap::@21 mode_twoplanebitmap::@9 mode_twoplanebitmap::@8 
Populated: Loop head: mode_twoplanebitmap::@10 tails: mode_twoplanebitmap::@28 blocks: mode_twoplanebitmap::@28 mode_twoplanebitmap::@11 mode_twoplanebitmap::@10 
Populated: Loop head: mode_sixsfred2::@1 tails: mode_sixsfred2::@1 blocks: mode_sixsfred2::@1 
Populated: Loop head: mode_sixsfred2::@3 tails: mode_sixsfred2::@3 blocks: mode_sixsfred2::@3 
Populated: Loop head: mode_sixsfred2::@2 tails: mode_sixsfred2::@13 blocks: mode_sixsfred2::@13 mode_sixsfred2::@3 mode_sixsfred2::@2 
Populated: Loop head: mode_sixsfred2::@5 tails: mode_sixsfred2::@5 blocks: mode_sixsfred2::@5 
Populated: Loop head: mode_sixsfred2::@4 tails: mode_sixsfred2::@15 blocks: mode_sixsfred2::@15 mode_sixsfred2::@5 mode_sixsfred2::@4 
Populated: Loop head: mode_sixsfred2::@7 tails: mode_sixsfred2::@7 blocks: mode_sixsfred2::@7 
Populated: Loop head: mode_sixsfred2::@6 tails: mode_sixsfred2::@17 blocks: mode_sixsfred2::@17 mode_sixsfred2::@7 mode_sixsfred2::@6 
Populated: Loop head: mode_sixsfred2::@8 tails: mode_sixsfred2::@24 blocks: mode_sixsfred2::@24 mode_sixsfred2::@9 mode_sixsfred2::@8 
Populated: Loop head: mode_hicolmcchar::@1 tails: mode_hicolmcchar::@1 blocks: mode_hicolmcchar::@1 
Populated: Loop head: mode_hicolmcchar::@3 tails: mode_hicolmcchar::@3 blocks: mode_hicolmcchar::@3 
Populated: Loop head: mode_hicolmcchar::@2 tails: mode_hicolmcchar::@9 blocks: mode_hicolmcchar::@9 mode_hicolmcchar::@3 mode_hicolmcchar::@2 
Populated: Loop head: mode_hicolmcchar::@4 tails: mode_hicolmcchar::@16 blocks: mode_hicolmcchar::@16 mode_hicolmcchar::@5 mode_hicolmcchar::@4 
Populated: Loop head: mode_hicolecmchar::@1 tails: mode_hicolecmchar::@1 blocks: mode_hicolecmchar::@1 
Populated: Loop head: mode_hicolecmchar::@3 tails: mode_hicolecmchar::@3 blocks: mode_hicolecmchar::@3 
Populated: Loop head: mode_hicolecmchar::@2 tails: mode_hicolecmchar::@9 blocks: mode_hicolecmchar::@9 mode_hicolecmchar::@3 mode_hicolecmchar::@2 
Populated: Loop head: mode_hicolecmchar::@4 tails: mode_hicolecmchar::@16 blocks: mode_hicolecmchar::@16 mode_hicolecmchar::@5 mode_hicolecmchar::@4 
Populated: Loop head: mode_hicolstdchar::@1 tails: mode_hicolstdchar::@1 blocks: mode_hicolstdchar::@1 
Populated: Loop head: mode_hicolstdchar::@3 tails: mode_hicolstdchar::@3 blocks: mode_hicolstdchar::@3 
Populated: Loop head: mode_hicolstdchar::@2 tails: mode_hicolstdchar::@9 blocks: mode_hicolstdchar::@9 mode_hicolstdchar::@3 mode_hicolstdchar::@2 
Populated: Loop head: mode_hicolstdchar::@4 tails: mode_hicolstdchar::@16 blocks: mode_hicolstdchar::@16 mode_hicolstdchar::@5 mode_hicolstdchar::@4 
Populated: Loop head: mode_mcchar::@1 tails: mode_mcchar::@1 blocks: mode_mcchar::@1 
Populated: Loop head: mode_mcchar::@3 tails: mode_mcchar::@3 blocks: mode_mcchar::@3 
Populated: Loop head: mode_mcchar::@2 tails: mode_mcchar::@9 blocks: mode_mcchar::@9 mode_mcchar::@3 mode_mcchar::@2 
Populated: Loop head: mode_mcchar::@4 tails: mode_mcchar::@16 blocks: mode_mcchar::@16 mode_mcchar::@5 mode_mcchar::@4 
Populated: Loop head: mode_ecmchar::@1 tails: mode_ecmchar::@1 blocks: mode_ecmchar::@1 
Populated: Loop head: mode_ecmchar::@3 tails: mode_ecmchar::@3 blocks: mode_ecmchar::@3 
Populated: Loop head: mode_ecmchar::@2 tails: mode_ecmchar::@9 blocks: mode_ecmchar::@9 mode_ecmchar::@3 mode_ecmchar::@2 
Populated: Loop head: mode_ecmchar::@4 tails: mode_ecmchar::@16 blocks: mode_ecmchar::@16 mode_ecmchar::@5 mode_ecmchar::@4 
Populated: Loop head: mode_stdchar::@1 tails: mode_stdchar::@1 blocks: mode_stdchar::@1 
Populated: Loop head: mode_stdchar::@3 tails: mode_stdchar::@3 blocks: mode_stdchar::@3 
Populated: Loop head: mode_stdchar::@2 tails: mode_stdchar::@9 blocks: mode_stdchar::@9 mode_stdchar::@3 mode_stdchar::@2 
Populated: Loop head: mode_stdchar::@4 tails: mode_stdchar::@16 blocks: mode_stdchar::@16 mode_stdchar::@5 mode_stdchar::@4 
Populated: Loop head: print_str_lines::@4 tails: print_str_lines::@5 blocks: print_str_lines::@5 print_str_lines::@4 print_str_lines::@8 
Populated: Loop head: print_str_lines::@1 tails: print_str_lines::@9 blocks: print_str_lines::@9 print_str_lines::@5 print_str_lines::@4 print_str_lines::@8 print_str_lines::@1 
Populated: Loop head: print_ln::@1 tails: print_ln::@1 blocks: print_ln::@1 
Populated: Loop head: print_cls::@1 tails: print_cls::@1 blocks: print_cls::@1 
Loop head: main::@1 tails: main::@2 blocks: main::@2 main::@1 
Loop head: menu::@1 tails: menu::@1 blocks: menu::@1 
Loop head: menu::@2 tails: menu::@2 blocks: menu::@2 
Loop head: menu::@3 tails: menu::@66 blocks: menu::@66 menu::@15 menu::@64 menu::@14 menu::@62 menu::@13 menu::@60 menu::@12 menu::@58 menu::@11 menu::@56 menu::@10 menu::@54 menu::@9 menu::@52 menu::@8 menu::@50 menu::@7 menu::@48 menu::@6 menu::@47 menu::@4 menu::@3 
Loop head: mode_8bppchunkybmm::@1 tails: mode_8bppchunkybmm::@1 blocks: mode_8bppchunkybmm::@1 
Loop head: mode_8bppchunkybmm::@3 tails: mode_8bppchunkybmm::@4 blocks: mode_8bppchunkybmm::@4 mode_8bppchunkybmm::@19 mode_8bppchunkybmm::@3 mode_8bppchunkybmm::@10 
Loop head: mode_8bppchunkybmm::@2 tails: mode_8bppchunkybmm::@11 blocks: mode_8bppchunkybmm::@11 mode_8bppchunkybmm::@4 mode_8bppchunkybmm::@19 mode_8bppchunkybmm::@3 mode_8bppchunkybmm::@10 mode_8bppchunkybmm::@2 
Loop head: mode_8bppchunkybmm::@5 tails: mode_8bppchunkybmm::@21 blocks: mode_8bppchunkybmm::@21 mode_8bppchunkybmm::@6 mode_8bppchunkybmm::@5 
Loop head: mode_8bpppixelcell::@1 tails: mode_8bpppixelcell::@1 blocks: mode_8bpppixelcell::@1 
Loop head: mode_8bpppixelcell::@3 tails: mode_8bpppixelcell::@3 blocks: mode_8bpppixelcell::@3 
Loop head: mode_8bpppixelcell::@2 tails: mode_8bpppixelcell::@13 blocks: mode_8bpppixelcell::@13 mode_8bpppixelcell::@3 mode_8bpppixelcell::@2 
Loop head: mode_8bpppixelcell::@6 tails: mode_8bpppixelcell::@7 blocks: mode_8bpppixelcell::@7 mode_8bpppixelcell::@15 mode_8bpppixelcell::@6 
Loop head: mode_8bpppixelcell::@5 tails: mode_8bpppixelcell::@16 blocks: mode_8bpppixelcell::@16 mode_8bpppixelcell::@7 mode_8bpppixelcell::@15 mode_8bpppixelcell::@6 mode_8bpppixelcell::@5 
Loop head: mode_8bpppixelcell::@4 tails: mode_8bpppixelcell::@17 blocks: mode_8bpppixelcell::@17 mode_8bpppixelcell::@16 mode_8bpppixelcell::@7 mode_8bpppixelcell::@15 mode_8bpppixelcell::@6 mode_8bpppixelcell::@5 mode_8bpppixelcell::@4 
Loop head: mode_8bpppixelcell::@8 tails: mode_8bpppixelcell::@24 blocks: mode_8bpppixelcell::@24 mode_8bpppixelcell::@9 mode_8bpppixelcell::@8 
Loop head: mode_sixsfred::@1 tails: mode_sixsfred::@1 blocks: mode_sixsfred::@1 
Loop head: mode_sixsfred::@3 tails: mode_sixsfred::@3 blocks: mode_sixsfred::@3 
Loop head: mode_sixsfred::@2 tails: mode_sixsfred::@13 blocks: mode_sixsfred::@13 mode_sixsfred::@3 mode_sixsfred::@2 
Loop head: mode_sixsfred::@5 tails: mode_sixsfred::@5 blocks: mode_sixsfred::@5 
Loop head: mode_sixsfred::@4 tails: mode_sixsfred::@15 blocks: mode_sixsfred::@15 mode_sixsfred::@5 mode_sixsfred::@4 
Loop head: mode_sixsfred::@7 tails: mode_sixsfred::@7 blocks: mode_sixsfred::@7 
Loop head: mode_sixsfred::@6 tails: mode_sixsfred::@17 blocks: mode_sixsfred::@17 mode_sixsfred::@7 mode_sixsfred::@6 
Loop head: mode_sixsfred::@8 tails: mode_sixsfred::@24 blocks: mode_sixsfred::@24 mode_sixsfred::@9 mode_sixsfred::@8 
Loop head: mode_twoplanebitmap::@1 tails: mode_twoplanebitmap::@1 blocks: mode_twoplanebitmap::@1 
Loop head: mode_twoplanebitmap::@3 tails: mode_twoplanebitmap::@3 blocks: mode_twoplanebitmap::@3 
Loop head: mode_twoplanebitmap::@2 tails: mode_twoplanebitmap::@15 blocks: mode_twoplanebitmap::@15 mode_twoplanebitmap::@3 mode_twoplanebitmap::@2 
Loop head: mode_twoplanebitmap::@5 tails: mode_twoplanebitmap::@7 blocks: mode_twoplanebitmap::@7 mode_twoplanebitmap::@17 mode_twoplanebitmap::@6 mode_twoplanebitmap::@5 
Loop head: mode_twoplanebitmap::@4 tails: mode_twoplanebitmap::@19 blocks: mode_twoplanebitmap::@19 mode_twoplanebitmap::@7 mode_twoplanebitmap::@17 mode_twoplanebitmap::@6 mode_twoplanebitmap::@5 mode_twoplanebitmap::@4 
Loop head: mode_twoplanebitmap::@9 tails: mode_twoplanebitmap::@9 blocks: mode_twoplanebitmap::@9 
Loop head: mode_twoplanebitmap::@8 tails: mode_twoplanebitmap::@21 blocks: mode_twoplanebitmap::@21 mode_twoplanebitmap::@9 mode_twoplanebitmap::@8 
Loop head: mode_twoplanebitmap::@10 tails: mode_twoplanebitmap::@28 blocks: mode_twoplanebitmap::@28 mode_twoplanebitmap::@11 mode_twoplanebitmap::@10 
Loop head: mode_sixsfred2::@1 tails: mode_sixsfred2::@1 blocks: mode_sixsfred2::@1 
Loop head: mode_sixsfred2::@3 tails: mode_sixsfred2::@3 blocks: mode_sixsfred2::@3 
Loop head: mode_sixsfred2::@2 tails: mode_sixsfred2::@13 blocks: mode_sixsfred2::@13 mode_sixsfred2::@3 mode_sixsfred2::@2 
Loop head: mode_sixsfred2::@5 tails: mode_sixsfred2::@5 blocks: mode_sixsfred2::@5 
Loop head: mode_sixsfred2::@4 tails: mode_sixsfred2::@15 blocks: mode_sixsfred2::@15 mode_sixsfred2::@5 mode_sixsfred2::@4 
Loop head: mode_sixsfred2::@7 tails: mode_sixsfred2::@7 blocks: mode_sixsfred2::@7 
Loop head: mode_sixsfred2::@6 tails: mode_sixsfred2::@17 blocks: mode_sixsfred2::@17 mode_sixsfred2::@7 mode_sixsfred2::@6 
Loop head: mode_sixsfred2::@8 tails: mode_sixsfred2::@24 blocks: mode_sixsfred2::@24 mode_sixsfred2::@9 mode_sixsfred2::@8 
Loop head: mode_hicolmcchar::@1 tails: mode_hicolmcchar::@1 blocks: mode_hicolmcchar::@1 
Loop head: mode_hicolmcchar::@3 tails: mode_hicolmcchar::@3 blocks: mode_hicolmcchar::@3 
Loop head: mode_hicolmcchar::@2 tails: mode_hicolmcchar::@9 blocks: mode_hicolmcchar::@9 mode_hicolmcchar::@3 mode_hicolmcchar::@2 
Loop head: mode_hicolmcchar::@4 tails: mode_hicolmcchar::@16 blocks: mode_hicolmcchar::@16 mode_hicolmcchar::@5 mode_hicolmcchar::@4 
Loop head: mode_hicolecmchar::@1 tails: mode_hicolecmchar::@1 blocks: mode_hicolecmchar::@1 
Loop head: mode_hicolecmchar::@3 tails: mode_hicolecmchar::@3 blocks: mode_hicolecmchar::@3 
Loop head: mode_hicolecmchar::@2 tails: mode_hicolecmchar::@9 blocks: mode_hicolecmchar::@9 mode_hicolecmchar::@3 mode_hicolecmchar::@2 
Loop head: mode_hicolecmchar::@4 tails: mode_hicolecmchar::@16 blocks: mode_hicolecmchar::@16 mode_hicolecmchar::@5 mode_hicolecmchar::@4 
Loop head: mode_hicolstdchar::@1 tails: mode_hicolstdchar::@1 blocks: mode_hicolstdchar::@1 
Loop head: mode_hicolstdchar::@3 tails: mode_hicolstdchar::@3 blocks: mode_hicolstdchar::@3 
Loop head: mode_hicolstdchar::@2 tails: mode_hicolstdchar::@9 blocks: mode_hicolstdchar::@9 mode_hicolstdchar::@3 mode_hicolstdchar::@2 
Loop head: mode_hicolstdchar::@4 tails: mode_hicolstdchar::@16 blocks: mode_hicolstdchar::@16 mode_hicolstdchar::@5 mode_hicolstdchar::@4 
Loop head: mode_mcchar::@1 tails: mode_mcchar::@1 blocks: mode_mcchar::@1 
Loop head: mode_mcchar::@3 tails: mode_mcchar::@3 blocks: mode_mcchar::@3 
Loop head: mode_mcchar::@2 tails: mode_mcchar::@9 blocks: mode_mcchar::@9 mode_mcchar::@3 mode_mcchar::@2 
Loop head: mode_mcchar::@4 tails: mode_mcchar::@16 blocks: mode_mcchar::@16 mode_mcchar::@5 mode_mcchar::@4 
Loop head: mode_ecmchar::@1 tails: mode_ecmchar::@1 blocks: mode_ecmchar::@1 
Loop head: mode_ecmchar::@3 tails: mode_ecmchar::@3 blocks: mode_ecmchar::@3 
Loop head: mode_ecmchar::@2 tails: mode_ecmchar::@9 blocks: mode_ecmchar::@9 mode_ecmchar::@3 mode_ecmchar::@2 
Loop head: mode_ecmchar::@4 tails: mode_ecmchar::@16 blocks: mode_ecmchar::@16 mode_ecmchar::@5 mode_ecmchar::@4 
Loop head: mode_stdchar::@1 tails: mode_stdchar::@1 blocks: mode_stdchar::@1 
Loop head: mode_stdchar::@3 tails: mode_stdchar::@3 blocks: mode_stdchar::@3 
Loop head: mode_stdchar::@2 tails: mode_stdchar::@9 blocks: mode_stdchar::@9 mode_stdchar::@3 mode_stdchar::@2 
Loop head: mode_stdchar::@4 tails: mode_stdchar::@16 blocks: mode_stdchar::@16 mode_stdchar::@5 mode_stdchar::@4 
Loop head: print_str_lines::@4 tails: print_str_lines::@5 blocks: print_str_lines::@5 print_str_lines::@4 print_str_lines::@8 
Loop head: print_str_lines::@1 tails: print_str_lines::@9 blocks: print_str_lines::@9 print_str_lines::@5 print_str_lines::@4 print_str_lines::@8 print_str_lines::@1 
Loop head: print_ln::@1 tails: print_ln::@1 blocks: print_ln::@1 
Loop head: print_cls::@1 tails: print_cls::@1 blocks: print_cls::@1 

NATURAL LOOPS WITH DEPTH
Found 0 loops in scope []
Found 1 loops in scope [main]
  Loop head: main::@1 tails: main::@2 blocks: main::@2 main::@1 
Found 3 loops in scope [menu]
  Loop head: menu::@1 tails: menu::@1 blocks: menu::@1 
  Loop head: menu::@2 tails: menu::@2 blocks: menu::@2 
  Loop head: menu::@3 tails: menu::@66 blocks: menu::@66 menu::@15 menu::@64 menu::@14 menu::@62 menu::@13 menu::@60 menu::@12 menu::@58 menu::@11 menu::@56 menu::@10 menu::@54 menu::@9 menu::@52 menu::@8 menu::@50 menu::@7 menu::@48 menu::@6 menu::@47 menu::@4 menu::@3 
Found 0 loops in scope [print_set_screen]
Found 1 loops in scope [print_cls]
  Loop head: print_cls::@1 tails: print_cls::@1 blocks: print_cls::@1 
Found 2 loops in scope [print_str_lines]
  Loop head: print_str_lines::@4 tails: print_str_lines::@5 blocks: print_str_lines::@5 print_str_lines::@4 print_str_lines::@8 
  Loop head: print_str_lines::@1 tails: print_str_lines::@9 blocks: print_str_lines::@9 print_str_lines::@5 print_str_lines::@4 print_str_lines::@8 print_str_lines::@1 
null depth in calling loop Loop head: mode_8bppchunkybmm::@5 tails: mode_8bppchunkybmm::@21 blocks: mode_8bppchunkybmm::@21 mode_8bppchunkybmm::@6 mode_8bppchunkybmm::@5  in scope keyboard_key_pressed
null depth in calling loop Loop head: mode_8bpppixelcell::@8 tails: mode_8bpppixelcell::@24 blocks: mode_8bpppixelcell::@24 mode_8bpppixelcell::@9 mode_8bpppixelcell::@8  in scope keyboard_key_pressed
null depth in calling loop Loop head: mode_sixsfred::@8 tails: mode_sixsfred::@24 blocks: mode_sixsfred::@24 mode_sixsfred::@9 mode_sixsfred::@8  in scope keyboard_key_pressed
null depth in calling loop Loop head: mode_twoplanebitmap::@10 tails: mode_twoplanebitmap::@28 blocks: mode_twoplanebitmap::@28 mode_twoplanebitmap::@11 mode_twoplanebitmap::@10  in scope keyboard_key_pressed
null depth in calling loop Loop head: mode_sixsfred2::@8 tails: mode_sixsfred2::@24 blocks: mode_sixsfred2::@24 mode_sixsfred2::@9 mode_sixsfred2::@8  in scope keyboard_key_pressed
null depth in calling loop Loop head: mode_hicolmcchar::@4 tails: mode_hicolmcchar::@16 blocks: mode_hicolmcchar::@16 mode_hicolmcchar::@5 mode_hicolmcchar::@4  in scope keyboard_key_pressed
null depth in calling loop Loop head: mode_hicolecmchar::@4 tails: mode_hicolecmchar::@16 blocks: mode_hicolecmchar::@16 mode_hicolecmchar::@5 mode_hicolecmchar::@4  in scope keyboard_key_pressed
null depth in calling loop Loop head: mode_hicolstdchar::@4 tails: mode_hicolstdchar::@16 blocks: mode_hicolstdchar::@16 mode_hicolstdchar::@5 mode_hicolstdchar::@4  in scope keyboard_key_pressed
null depth in calling loop Loop head: mode_mcchar::@4 tails: mode_mcchar::@16 blocks: mode_mcchar::@16 mode_mcchar::@5 mode_mcchar::@4  in scope keyboard_key_pressed
null depth in calling loop Loop head: mode_ecmchar::@4 tails: mode_ecmchar::@16 blocks: mode_ecmchar::@16 mode_ecmchar::@5 mode_ecmchar::@4  in scope keyboard_key_pressed
null depth in calling loop Loop head: mode_stdchar::@4 tails: mode_stdchar::@16 blocks: mode_stdchar::@16 mode_stdchar::@5 mode_stdchar::@4  in scope keyboard_key_pressed
Found 0 loops in scope [keyboard_key_pressed]
Found 4 loops in scope [mode_stdchar]
  Loop head: mode_stdchar::@1 tails: mode_stdchar::@1 blocks: mode_stdchar::@1 
  Loop head: mode_stdchar::@3 tails: mode_stdchar::@3 blocks: mode_stdchar::@3 
  Loop head: mode_stdchar::@2 tails: mode_stdchar::@9 blocks: mode_stdchar::@9 mode_stdchar::@3 mode_stdchar::@2 
  Loop head: mode_stdchar::@4 tails: mode_stdchar::@16 blocks: mode_stdchar::@16 mode_stdchar::@5 mode_stdchar::@4 
Found 4 loops in scope [mode_ecmchar]
  Loop head: mode_ecmchar::@1 tails: mode_ecmchar::@1 blocks: mode_ecmchar::@1 
  Loop head: mode_ecmchar::@3 tails: mode_ecmchar::@3 blocks: mode_ecmchar::@3 
  Loop head: mode_ecmchar::@2 tails: mode_ecmchar::@9 blocks: mode_ecmchar::@9 mode_ecmchar::@3 mode_ecmchar::@2 
  Loop head: mode_ecmchar::@4 tails: mode_ecmchar::@16 blocks: mode_ecmchar::@16 mode_ecmchar::@5 mode_ecmchar::@4 
Found 4 loops in scope [mode_mcchar]
  Loop head: mode_mcchar::@1 tails: mode_mcchar::@1 blocks: mode_mcchar::@1 
  Loop head: mode_mcchar::@3 tails: mode_mcchar::@3 blocks: mode_mcchar::@3 
  Loop head: mode_mcchar::@2 tails: mode_mcchar::@9 blocks: mode_mcchar::@9 mode_mcchar::@3 mode_mcchar::@2 
  Loop head: mode_mcchar::@4 tails: mode_mcchar::@16 blocks: mode_mcchar::@16 mode_mcchar::@5 mode_mcchar::@4 
Found 4 loops in scope [mode_hicolstdchar]
  Loop head: mode_hicolstdchar::@1 tails: mode_hicolstdchar::@1 blocks: mode_hicolstdchar::@1 
  Loop head: mode_hicolstdchar::@3 tails: mode_hicolstdchar::@3 blocks: mode_hicolstdchar::@3 
  Loop head: mode_hicolstdchar::@2 tails: mode_hicolstdchar::@9 blocks: mode_hicolstdchar::@9 mode_hicolstdchar::@3 mode_hicolstdchar::@2 
  Loop head: mode_hicolstdchar::@4 tails: mode_hicolstdchar::@16 blocks: mode_hicolstdchar::@16 mode_hicolstdchar::@5 mode_hicolstdchar::@4 
Found 4 loops in scope [mode_hicolecmchar]
  Loop head: mode_hicolecmchar::@1 tails: mode_hicolecmchar::@1 blocks: mode_hicolecmchar::@1 
  Loop head: mode_hicolecmchar::@3 tails: mode_hicolecmchar::@3 blocks: mode_hicolecmchar::@3 
  Loop head: mode_hicolecmchar::@2 tails: mode_hicolecmchar::@9 blocks: mode_hicolecmchar::@9 mode_hicolecmchar::@3 mode_hicolecmchar::@2 
  Loop head: mode_hicolecmchar::@4 tails: mode_hicolecmchar::@16 blocks: mode_hicolecmchar::@16 mode_hicolecmchar::@5 mode_hicolecmchar::@4 
Found 4 loops in scope [mode_hicolmcchar]
  Loop head: mode_hicolmcchar::@1 tails: mode_hicolmcchar::@1 blocks: mode_hicolmcchar::@1 
  Loop head: mode_hicolmcchar::@3 tails: mode_hicolmcchar::@3 blocks: mode_hicolmcchar::@3 
  Loop head: mode_hicolmcchar::@2 tails: mode_hicolmcchar::@9 blocks: mode_hicolmcchar::@9 mode_hicolmcchar::@3 mode_hicolmcchar::@2 
  Loop head: mode_hicolmcchar::@4 tails: mode_hicolmcchar::@16 blocks: mode_hicolmcchar::@16 mode_hicolmcchar::@5 mode_hicolmcchar::@4 
Found 8 loops in scope [mode_sixsfred2]
  Loop head: mode_sixsfred2::@1 tails: mode_sixsfred2::@1 blocks: mode_sixsfred2::@1 
  Loop head: mode_sixsfred2::@3 tails: mode_sixsfred2::@3 blocks: mode_sixsfred2::@3 
  Loop head: mode_sixsfred2::@2 tails: mode_sixsfred2::@13 blocks: mode_sixsfred2::@13 mode_sixsfred2::@3 mode_sixsfred2::@2 
  Loop head: mode_sixsfred2::@5 tails: mode_sixsfred2::@5 blocks: mode_sixsfred2::@5 
  Loop head: mode_sixsfred2::@4 tails: mode_sixsfred2::@15 blocks: mode_sixsfred2::@15 mode_sixsfred2::@5 mode_sixsfred2::@4 
  Loop head: mode_sixsfred2::@7 tails: mode_sixsfred2::@7 blocks: mode_sixsfred2::@7 
  Loop head: mode_sixsfred2::@6 tails: mode_sixsfred2::@17 blocks: mode_sixsfred2::@17 mode_sixsfred2::@7 mode_sixsfred2::@6 
  Loop head: mode_sixsfred2::@8 tails: mode_sixsfred2::@24 blocks: mode_sixsfred2::@24 mode_sixsfred2::@9 mode_sixsfred2::@8 
Found 8 loops in scope [mode_twoplanebitmap]
  Loop head: mode_twoplanebitmap::@1 tails: mode_twoplanebitmap::@1 blocks: mode_twoplanebitmap::@1 
  Loop head: mode_twoplanebitmap::@3 tails: mode_twoplanebitmap::@3 blocks: mode_twoplanebitmap::@3 
  Loop head: mode_twoplanebitmap::@2 tails: mode_twoplanebitmap::@15 blocks: mode_twoplanebitmap::@15 mode_twoplanebitmap::@3 mode_twoplanebitmap::@2 
  Loop head: mode_twoplanebitmap::@5 tails: mode_twoplanebitmap::@7 blocks: mode_twoplanebitmap::@7 mode_twoplanebitmap::@17 mode_twoplanebitmap::@6 mode_twoplanebitmap::@5 
  Loop head: mode_twoplanebitmap::@4 tails: mode_twoplanebitmap::@19 blocks: mode_twoplanebitmap::@19 mode_twoplanebitmap::@7 mode_twoplanebitmap::@17 mode_twoplanebitmap::@6 mode_twoplanebitmap::@5 mode_twoplanebitmap::@4 
  Loop head: mode_twoplanebitmap::@9 tails: mode_twoplanebitmap::@9 blocks: mode_twoplanebitmap::@9 
  Loop head: mode_twoplanebitmap::@8 tails: mode_twoplanebitmap::@21 blocks: mode_twoplanebitmap::@21 mode_twoplanebitmap::@9 mode_twoplanebitmap::@8 
  Loop head: mode_twoplanebitmap::@10 tails: mode_twoplanebitmap::@28 blocks: mode_twoplanebitmap::@28 mode_twoplanebitmap::@11 mode_twoplanebitmap::@10 
Found 8 loops in scope [mode_sixsfred]
  Loop head: mode_sixsfred::@1 tails: mode_sixsfred::@1 blocks: mode_sixsfred::@1 
  Loop head: mode_sixsfred::@3 tails: mode_sixsfred::@3 blocks: mode_sixsfred::@3 
  Loop head: mode_sixsfred::@2 tails: mode_sixsfred::@13 blocks: mode_sixsfred::@13 mode_sixsfred::@3 mode_sixsfred::@2 
  Loop head: mode_sixsfred::@5 tails: mode_sixsfred::@5 blocks: mode_sixsfred::@5 
  Loop head: mode_sixsfred::@4 tails: mode_sixsfred::@15 blocks: mode_sixsfred::@15 mode_sixsfred::@5 mode_sixsfred::@4 
  Loop head: mode_sixsfred::@7 tails: mode_sixsfred::@7 blocks: mode_sixsfred::@7 
  Loop head: mode_sixsfred::@6 tails: mode_sixsfred::@17 blocks: mode_sixsfred::@17 mode_sixsfred::@7 mode_sixsfred::@6 
  Loop head: mode_sixsfred::@8 tails: mode_sixsfred::@24 blocks: mode_sixsfred::@24 mode_sixsfred::@9 mode_sixsfred::@8 
Found 7 loops in scope [mode_8bpppixelcell]
  Loop head: mode_8bpppixelcell::@1 tails: mode_8bpppixelcell::@1 blocks: mode_8bpppixelcell::@1 
  Loop head: mode_8bpppixelcell::@3 tails: mode_8bpppixelcell::@3 blocks: mode_8bpppixelcell::@3 
  Loop head: mode_8bpppixelcell::@2 tails: mode_8bpppixelcell::@13 blocks: mode_8bpppixelcell::@13 mode_8bpppixelcell::@3 mode_8bpppixelcell::@2 
  Loop head: mode_8bpppixelcell::@6 tails: mode_8bpppixelcell::@7 blocks: mode_8bpppixelcell::@7 mode_8bpppixelcell::@15 mode_8bpppixelcell::@6 
  Loop head: mode_8bpppixelcell::@5 tails: mode_8bpppixelcell::@16 blocks: mode_8bpppixelcell::@16 mode_8bpppixelcell::@7 mode_8bpppixelcell::@15 mode_8bpppixelcell::@6 mode_8bpppixelcell::@5 
  Loop head: mode_8bpppixelcell::@4 tails: mode_8bpppixelcell::@17 blocks: mode_8bpppixelcell::@17 mode_8bpppixelcell::@16 mode_8bpppixelcell::@7 mode_8bpppixelcell::@15 mode_8bpppixelcell::@6 mode_8bpppixelcell::@5 mode_8bpppixelcell::@4 
  Loop head: mode_8bpppixelcell::@8 tails: mode_8bpppixelcell::@24 blocks: mode_8bpppixelcell::@24 mode_8bpppixelcell::@9 mode_8bpppixelcell::@8 
Found 4 loops in scope [mode_8bppchunkybmm]
  Loop head: mode_8bppchunkybmm::@1 tails: mode_8bppchunkybmm::@1 blocks: mode_8bppchunkybmm::@1 
  Loop head: mode_8bppchunkybmm::@3 tails: mode_8bppchunkybmm::@4 blocks: mode_8bppchunkybmm::@4 mode_8bppchunkybmm::@19 mode_8bppchunkybmm::@3 mode_8bppchunkybmm::@10 
  Loop head: mode_8bppchunkybmm::@2 tails: mode_8bppchunkybmm::@11 blocks: mode_8bppchunkybmm::@11 mode_8bppchunkybmm::@4 mode_8bppchunkybmm::@19 mode_8bppchunkybmm::@3 mode_8bppchunkybmm::@10 mode_8bppchunkybmm::@2 
  Loop head: mode_8bppchunkybmm::@5 tails: mode_8bppchunkybmm::@21 blocks: mode_8bppchunkybmm::@21 mode_8bppchunkybmm::@6 mode_8bppchunkybmm::@5 
Found 1 loops in scope [print_ln]
  Loop head: print_ln::@1 tails: print_ln::@1 blocks: print_ln::@1 
Found 0 loops in scope [keyboard_matrix_read]
Found 0 loops in scope [dtvSetCpuBankSegment1]
Loop head: main::@1 tails: main::@2 blocks: main::@2 main::@1  depth: 1
Loop head: menu::@1 tails: menu::@1 blocks: menu::@1  depth: 2
Loop head: menu::@2 tails: menu::@2 blocks: menu::@2  depth: 2
Loop head: menu::@3 tails: menu::@66 blocks: menu::@66 menu::@15 menu::@64 menu::@14 menu::@62 menu::@13 menu::@60 menu::@12 menu::@58 menu::@11 menu::@56 menu::@10 menu::@54 menu::@9 menu::@52 menu::@8 menu::@50 menu::@7 menu::@48 menu::@6 menu::@47 menu::@4 menu::@3  depth: 2
Loop head: mode_8bppchunkybmm::@1 tails: mode_8bppchunkybmm::@1 blocks: mode_8bppchunkybmm::@1  depth: 2
Loop head: mode_8bppchunkybmm::@3 tails: mode_8bppchunkybmm::@4 blocks: mode_8bppchunkybmm::@4 mode_8bppchunkybmm::@19 mode_8bppchunkybmm::@3 mode_8bppchunkybmm::@10  depth: 3
Loop head: mode_8bppchunkybmm::@2 tails: mode_8bppchunkybmm::@11 blocks: mode_8bppchunkybmm::@11 mode_8bppchunkybmm::@4 mode_8bppchunkybmm::@19 mode_8bppchunkybmm::@3 mode_8bppchunkybmm::@10 mode_8bppchunkybmm::@2  depth: 2
Loop head: mode_8bppchunkybmm::@5 tails: mode_8bppchunkybmm::@21 blocks: mode_8bppchunkybmm::@21 mode_8bppchunkybmm::@6 mode_8bppchunkybmm::@5  depth: 2
Loop head: mode_8bpppixelcell::@1 tails: mode_8bpppixelcell::@1 blocks: mode_8bpppixelcell::@1  depth: 2
Loop head: mode_8bpppixelcell::@3 tails: mode_8bpppixelcell::@3 blocks: mode_8bpppixelcell::@3  depth: 3
Loop head: mode_8bpppixelcell::@2 tails: mode_8bpppixelcell::@13 blocks: mode_8bpppixelcell::@13 mode_8bpppixelcell::@3 mode_8bpppixelcell::@2  depth: 2
Loop head: mode_8bpppixelcell::@6 tails: mode_8bpppixelcell::@7 blocks: mode_8bpppixelcell::@7 mode_8bpppixelcell::@15 mode_8bpppixelcell::@6  depth: 4
Loop head: mode_8bpppixelcell::@5 tails: mode_8bpppixelcell::@16 blocks: mode_8bpppixelcell::@16 mode_8bpppixelcell::@7 mode_8bpppixelcell::@15 mode_8bpppixelcell::@6 mode_8bpppixelcell::@5  depth: 3
Loop head: mode_8bpppixelcell::@4 tails: mode_8bpppixelcell::@17 blocks: mode_8bpppixelcell::@17 mode_8bpppixelcell::@16 mode_8bpppixelcell::@7 mode_8bpppixelcell::@15 mode_8bpppixelcell::@6 mode_8bpppixelcell::@5 mode_8bpppixelcell::@4  depth: 2
Loop head: mode_8bpppixelcell::@8 tails: mode_8bpppixelcell::@24 blocks: mode_8bpppixelcell::@24 mode_8bpppixelcell::@9 mode_8bpppixelcell::@8  depth: 2
Loop head: mode_sixsfred::@1 tails: mode_sixsfred::@1 blocks: mode_sixsfred::@1  depth: 2
Loop head: mode_sixsfred::@3 tails: mode_sixsfred::@3 blocks: mode_sixsfred::@3  depth: 3
Loop head: mode_sixsfred::@2 tails: mode_sixsfred::@13 blocks: mode_sixsfred::@13 mode_sixsfred::@3 mode_sixsfred::@2  depth: 2
Loop head: mode_sixsfred::@5 tails: mode_sixsfred::@5 blocks: mode_sixsfred::@5  depth: 3
Loop head: mode_sixsfred::@4 tails: mode_sixsfred::@15 blocks: mode_sixsfred::@15 mode_sixsfred::@5 mode_sixsfred::@4  depth: 2
Loop head: mode_sixsfred::@7 tails: mode_sixsfred::@7 blocks: mode_sixsfred::@7  depth: 3
Loop head: mode_sixsfred::@6 tails: mode_sixsfred::@17 blocks: mode_sixsfred::@17 mode_sixsfred::@7 mode_sixsfred::@6  depth: 2
Loop head: mode_sixsfred::@8 tails: mode_sixsfred::@24 blocks: mode_sixsfred::@24 mode_sixsfred::@9 mode_sixsfred::@8  depth: 2
Loop head: mode_twoplanebitmap::@1 tails: mode_twoplanebitmap::@1 blocks: mode_twoplanebitmap::@1  depth: 2
Loop head: mode_twoplanebitmap::@3 tails: mode_twoplanebitmap::@3 blocks: mode_twoplanebitmap::@3  depth: 3
Loop head: mode_twoplanebitmap::@2 tails: mode_twoplanebitmap::@15 blocks: mode_twoplanebitmap::@15 mode_twoplanebitmap::@3 mode_twoplanebitmap::@2  depth: 2
Loop head: mode_twoplanebitmap::@5 tails: mode_twoplanebitmap::@7 blocks: mode_twoplanebitmap::@7 mode_twoplanebitmap::@17 mode_twoplanebitmap::@6 mode_twoplanebitmap::@5  depth: 3
Loop head: mode_twoplanebitmap::@4 tails: mode_twoplanebitmap::@19 blocks: mode_twoplanebitmap::@19 mode_twoplanebitmap::@7 mode_twoplanebitmap::@17 mode_twoplanebitmap::@6 mode_twoplanebitmap::@5 mode_twoplanebitmap::@4  depth: 2
Loop head: mode_twoplanebitmap::@9 tails: mode_twoplanebitmap::@9 blocks: mode_twoplanebitmap::@9  depth: 3
Loop head: mode_twoplanebitmap::@8 tails: mode_twoplanebitmap::@21 blocks: mode_twoplanebitmap::@21 mode_twoplanebitmap::@9 mode_twoplanebitmap::@8  depth: 2
Loop head: mode_twoplanebitmap::@10 tails: mode_twoplanebitmap::@28 blocks: mode_twoplanebitmap::@28 mode_twoplanebitmap::@11 mode_twoplanebitmap::@10  depth: 2
Loop head: mode_sixsfred2::@1 tails: mode_sixsfred2::@1 blocks: mode_sixsfred2::@1  depth: 2
Loop head: mode_sixsfred2::@3 tails: mode_sixsfred2::@3 blocks: mode_sixsfred2::@3  depth: 3
Loop head: mode_sixsfred2::@2 tails: mode_sixsfred2::@13 blocks: mode_sixsfred2::@13 mode_sixsfred2::@3 mode_sixsfred2::@2  depth: 2
Loop head: mode_sixsfred2::@5 tails: mode_sixsfred2::@5 blocks: mode_sixsfred2::@5  depth: 3
Loop head: mode_sixsfred2::@4 tails: mode_sixsfred2::@15 blocks: mode_sixsfred2::@15 mode_sixsfred2::@5 mode_sixsfred2::@4  depth: 2
Loop head: mode_sixsfred2::@7 tails: mode_sixsfred2::@7 blocks: mode_sixsfred2::@7  depth: 3
Loop head: mode_sixsfred2::@6 tails: mode_sixsfred2::@17 blocks: mode_sixsfred2::@17 mode_sixsfred2::@7 mode_sixsfred2::@6  depth: 2
Loop head: mode_sixsfred2::@8 tails: mode_sixsfred2::@24 blocks: mode_sixsfred2::@24 mode_sixsfred2::@9 mode_sixsfred2::@8  depth: 2
Loop head: mode_hicolmcchar::@1 tails: mode_hicolmcchar::@1 blocks: mode_hicolmcchar::@1  depth: 2
Loop head: mode_hicolmcchar::@3 tails: mode_hicolmcchar::@3 blocks: mode_hicolmcchar::@3  depth: 3
Loop head: mode_hicolmcchar::@2 tails: mode_hicolmcchar::@9 blocks: mode_hicolmcchar::@9 mode_hicolmcchar::@3 mode_hicolmcchar::@2  depth: 2
Loop head: mode_hicolmcchar::@4 tails: mode_hicolmcchar::@16 blocks: mode_hicolmcchar::@16 mode_hicolmcchar::@5 mode_hicolmcchar::@4  depth: 2
Loop head: mode_hicolecmchar::@1 tails: mode_hicolecmchar::@1 blocks: mode_hicolecmchar::@1  depth: 2
Loop head: mode_hicolecmchar::@3 tails: mode_hicolecmchar::@3 blocks: mode_hicolecmchar::@3  depth: 3
Loop head: mode_hicolecmchar::@2 tails: mode_hicolecmchar::@9 blocks: mode_hicolecmchar::@9 mode_hicolecmchar::@3 mode_hicolecmchar::@2  depth: 2
Loop head: mode_hicolecmchar::@4 tails: mode_hicolecmchar::@16 blocks: mode_hicolecmchar::@16 mode_hicolecmchar::@5 mode_hicolecmchar::@4  depth: 2
Loop head: mode_hicolstdchar::@1 tails: mode_hicolstdchar::@1 blocks: mode_hicolstdchar::@1  depth: 2
Loop head: mode_hicolstdchar::@3 tails: mode_hicolstdchar::@3 blocks: mode_hicolstdchar::@3  depth: 3
Loop head: mode_hicolstdchar::@2 tails: mode_hicolstdchar::@9 blocks: mode_hicolstdchar::@9 mode_hicolstdchar::@3 mode_hicolstdchar::@2  depth: 2
Loop head: mode_hicolstdchar::@4 tails: mode_hicolstdchar::@16 blocks: mode_hicolstdchar::@16 mode_hicolstdchar::@5 mode_hicolstdchar::@4  depth: 2
Loop head: mode_mcchar::@1 tails: mode_mcchar::@1 blocks: mode_mcchar::@1  depth: 2
Loop head: mode_mcchar::@3 tails: mode_mcchar::@3 blocks: mode_mcchar::@3  depth: 3
Loop head: mode_mcchar::@2 tails: mode_mcchar::@9 blocks: mode_mcchar::@9 mode_mcchar::@3 mode_mcchar::@2  depth: 2
Loop head: mode_mcchar::@4 tails: mode_mcchar::@16 blocks: mode_mcchar::@16 mode_mcchar::@5 mode_mcchar::@4  depth: 2
Loop head: mode_ecmchar::@1 tails: mode_ecmchar::@1 blocks: mode_ecmchar::@1  depth: 2
Loop head: mode_ecmchar::@3 tails: mode_ecmchar::@3 blocks: mode_ecmchar::@3  depth: 3
Loop head: mode_ecmchar::@2 tails: mode_ecmchar::@9 blocks: mode_ecmchar::@9 mode_ecmchar::@3 mode_ecmchar::@2  depth: 2
Loop head: mode_ecmchar::@4 tails: mode_ecmchar::@16 blocks: mode_ecmchar::@16 mode_ecmchar::@5 mode_ecmchar::@4  depth: 2
Loop head: mode_stdchar::@1 tails: mode_stdchar::@1 blocks: mode_stdchar::@1  depth: 2
Loop head: mode_stdchar::@3 tails: mode_stdchar::@3 blocks: mode_stdchar::@3  depth: 3
Loop head: mode_stdchar::@2 tails: mode_stdchar::@9 blocks: mode_stdchar::@9 mode_stdchar::@3 mode_stdchar::@2  depth: 2
Loop head: mode_stdchar::@4 tails: mode_stdchar::@16 blocks: mode_stdchar::@16 mode_stdchar::@5 mode_stdchar::@4  depth: 2
Loop head: print_str_lines::@4 tails: print_str_lines::@5 blocks: print_str_lines::@5 print_str_lines::@4 print_str_lines::@8  depth: 3
Loop head: print_str_lines::@1 tails: print_str_lines::@9 blocks: print_str_lines::@9 print_str_lines::@5 print_str_lines::@4 print_str_lines::@8 print_str_lines::@1  depth: 2
Loop head: print_ln::@1 tails: print_ln::@1 blocks: print_ln::@1  depth: 3
Loop head: print_cls::@1 tails: print_cls::@1 blocks: print_cls::@1  depth: 2


VARIABLE REGISTER WEIGHTS
(byte*) BGCOL
(byte*) BGCOL1
(byte*) BGCOL2
(byte*) BGCOL3
(byte*) BGCOL4
(byte) BLACK
(byte) BLUE
(byte*) BORDERCOL
(byte*) CIA1_PORT_A
(byte*) CIA1_PORT_B
(byte*) CIA2_PORT_A
(byte*) CIA2_PORT_A_DDR
(byte*) COLS
(dword) DTV_COLOR_BANK_DEFAULT
(byte*) DTV_COLOR_BANK_HI
(byte*) DTV_COLOR_BANK_LO
(byte*) DTV_CONTROL
(byte) DTV_CONTROL_CHUNKY_ON
(byte) DTV_CONTROL_COLORRAM_OFF
(byte) DTV_CONTROL_HIGHCOLOR_ON
(byte) DTV_CONTROL_LINEAR_ADDRESSING_ON
(byte*) DTV_FEATURE
(byte) DTV_FEATURE_ENABLE
(byte*) DTV_GRAPHICS_VIC_BANK
(byte*) DTV_PALETTE
(byte[16]) DTV_PALETTE_DEFAULT
(byte*) DTV_PLANEA_MODULO_HI
(byte*) DTV_PLANEA_MODULO_LO
(byte*) DTV_PLANEA_START_HI
(byte*) DTV_PLANEA_START_LO
(byte*) DTV_PLANEA_START_MI
(byte*) DTV_PLANEA_STEP
(byte*) DTV_PLANEB_MODULO_HI
(byte*) DTV_PLANEB_MODULO_LO
(byte*) DTV_PLANEB_START_HI
(byte*) DTV_PLANEB_START_LO
(byte*) DTV_PLANEB_START_MI
(byte*) DTV_PLANEB_STEP
(byte) GREEN
(byte) KEY_1
(byte) KEY_2
(byte) KEY_3
(byte) KEY_6
(byte) KEY_7
(byte) KEY_8
(byte) KEY_A
(byte) KEY_B
(byte) KEY_C
(byte) KEY_D
(byte) KEY_E
(byte) KEY_SPACE
(byte) LIGHT_GREEN
(byte[]) MENU_TEXT
(byte*) PROCPORT
(byte) VIC_BMM
(byte*) VIC_CONTROL
(byte*) VIC_CONTROL2
(byte) VIC_CSEL
(byte) VIC_DEN
(byte) VIC_ECM
(byte) VIC_MCM
(byte*) VIC_MEMORY
(byte) VIC_RSEL
(void()) dtvSetCpuBankSegment1((byte) dtvSetCpuBankSegment1::cpuBankIdx)
(byte*) dtvSetCpuBankSegment1::cpuBank
(byte) dtvSetCpuBankSegment1::cpuBankIdx
(byte) dtvSetCpuBankSegment1::cpuBankIdx#1 2002.0
(byte) dtvSetCpuBankSegment1::cpuBankIdx#3 1003.0
(byte()) keyboard_key_pressed((byte) keyboard_key_pressed::key)
(byte~) keyboard_key_pressed::$2 4.0
(byte) keyboard_key_pressed::colidx
(byte) keyboard_key_pressed::colidx#0 0.6666666666666666
(byte) keyboard_key_pressed::key
(byte) keyboard_key_pressed::key#22 2.0
(byte) keyboard_key_pressed::return
(byte) keyboard_key_pressed::return#0 92.66666666666666
(byte) keyboard_key_pressed::return#10 202.0
(byte) keyboard_key_pressed::return#11 202.0
(byte) keyboard_key_pressed::return#12 202.0
(byte) keyboard_key_pressed::return#13 202.0
(byte) keyboard_key_pressed::return#14 202.0
(byte) keyboard_key_pressed::return#15 202.0
(byte) keyboard_key_pressed::return#16 202.0
(byte) keyboard_key_pressed::return#17 202.0
(byte) keyboard_key_pressed::return#18 202.0
(byte) keyboard_key_pressed::return#19 202.0
(byte) keyboard_key_pressed::return#2 202.0
(byte) keyboard_key_pressed::return#20 202.0
(byte) keyboard_key_pressed::return#21 202.0
(byte) keyboard_key_pressed::return#22 202.0
(byte) keyboard_key_pressed::return#23 202.0
(byte) keyboard_key_pressed::return#26 202.0
(byte) keyboard_key_pressed::return#27 202.0
(byte) keyboard_key_pressed::return#28 202.0
(byte) keyboard_key_pressed::return#29 202.0
(byte) keyboard_key_pressed::return#30 202.0
(byte) keyboard_key_pressed::return#31 202.0
(byte) keyboard_key_pressed::return#32 202.0
(byte) keyboard_key_pressed::rowidx
(byte) keyboard_key_pressed::rowidx#0 4.0
(byte[]) keyboard_matrix_col_bitmask
(byte()) keyboard_matrix_read((byte) keyboard_matrix_read::rowid)
(byte) keyboard_matrix_read::return
(byte) keyboard_matrix_read::return#0 1.3333333333333333
(byte) keyboard_matrix_read::return#2 4.0
(byte) keyboard_matrix_read::row_pressed_bits
(byte) keyboard_matrix_read::rowid
(byte) keyboard_matrix_read::rowid#0 4.0
(byte[8]) keyboard_matrix_row_bitmask
(void()) main()
(void()) menu()
(byte~) menu::$29 202.0
(byte~) menu::$33 202.0
(byte~) menu::$37 202.0
(byte~) menu::$41 202.0
(byte~) menu::$45 202.0
(byte~) menu::$49 202.0
(byte~) menu::$53 202.0
(byte~) menu::$57 202.0
(byte~) menu::$61 202.0
(byte~) menu::$65 202.0
(byte~) menu::$69 202.0
(byte*) menu::CHARSET
(byte*) menu::SCREEN
(byte*) menu::c
(byte*) menu::c#1 151.5
(byte*) menu::c#2 151.5
(byte) menu::i
(byte) menu::i#1 151.5
(byte) menu::i#2 202.0
(void()) mode_8bppchunkybmm()
(word~) mode_8bppchunkybmm::$20 2002.0
(byte~) mode_8bppchunkybmm::$27 202.0
(dword) mode_8bppchunkybmm::PLANEB
(byte) mode_8bppchunkybmm::c
(byte) mode_8bppchunkybmm::c#0 2002.0
(byte*) mode_8bppchunkybmm::gfxb
(byte*) mode_8bppchunkybmm::gfxb#1 420.59999999999997
(byte*) mode_8bppchunkybmm::gfxb#3 1552.0
(byte*) mode_8bppchunkybmm::gfxb#4 750.75
(byte*) mode_8bppchunkybmm::gfxb#5 202.0
(byte) mode_8bppchunkybmm::gfxbCpuBank
(byte) mode_8bppchunkybmm::gfxbCpuBank#2 2002.0
(byte) mode_8bppchunkybmm::gfxbCpuBank#4 1026.25
(byte) mode_8bppchunkybmm::gfxbCpuBank#7 202.0
(byte) mode_8bppchunkybmm::gfxbCpuBank#8 344.8888888888889
(byte) mode_8bppchunkybmm::i
(byte) mode_8bppchunkybmm::i#1 151.5
(byte) mode_8bppchunkybmm::i#2 202.0
(word) mode_8bppchunkybmm::x
(word) mode_8bppchunkybmm::x#1 1501.5
(word) mode_8bppchunkybmm::x#2 300.29999999999995
(byte) mode_8bppchunkybmm::y
(byte) mode_8bppchunkybmm::y#1 151.5
(byte) mode_8bppchunkybmm::y#6 92.53846153846155
(void()) mode_8bpppixelcell()
(byte~) mode_8bpppixelcell::$11 2002.0
(byte~) mode_8bpppixelcell::$12 1001.0
(byte~) mode_8bpppixelcell::$13 2002.0
(byte~) mode_8bpppixelcell::$14 2002.0
(byte~) mode_8bpppixelcell::$17 20002.0
(byte~) mode_8bpppixelcell::$24 202.0
(byte*) mode_8bpppixelcell::CHARGEN
(byte*) mode_8bpppixelcell::PLANEA
(byte*) mode_8bpppixelcell::PLANEB
(byte) mode_8bpppixelcell::ax
(byte) mode_8bpppixelcell::ax#1 1501.5
(byte) mode_8bpppixelcell::ax#2 429.0
(byte) mode_8bpppixelcell::ay
(byte) mode_8bpppixelcell::ay#1 151.5
(byte) mode_8bpppixelcell::ay#4 120.29999999999998
(byte) mode_8bpppixelcell::bits
(byte) mode_8bpppixelcell::bits#0 1001.0
(byte) mode_8bpppixelcell::bits#1 5000.5
(byte) mode_8bpppixelcell::bits#2 4429.142857142857
(byte) mode_8bpppixelcell::c
(byte) mode_8bpppixelcell::c#2 20002.0
(byte~) mode_8bpppixelcell::c#3 20002.0
(byte) mode_8bpppixelcell::ch
(byte) mode_8bpppixelcell::ch#1 151.5
(byte) mode_8bpppixelcell::ch#8 11.882352941176471
(byte*) mode_8bpppixelcell::chargen
(byte*) mode_8bpppixelcell::chargen#1 131.4375
(byte*) mode_8bpppixelcell::chargen#2 1552.0
(byte*) mode_8bpppixelcell::chargen#4 202.0
(byte) mode_8bpppixelcell::col
(byte) mode_8bpppixelcell::col#1 3014.857142857143
(byte) mode_8bpppixelcell::col#2 3875.5
(byte) mode_8bpppixelcell::col#5 701.0
(byte) mode_8bpppixelcell::col#7 202.0
(byte) mode_8bpppixelcell::cp
(byte) mode_8bpppixelcell::cp#1 15001.5
(byte) mode_8bpppixelcell::cp#2 2222.4444444444443
(byte) mode_8bpppixelcell::cr
(byte) mode_8bpppixelcell::cr#1 1501.5
(byte) mode_8bpppixelcell::cr#6 143.0
(byte*) mode_8bpppixelcell::gfxa
(byte*) mode_8bpppixelcell::gfxa#1 420.59999999999997
(byte*) mode_8bpppixelcell::gfxa#2 517.3333333333334
(byte*) mode_8bpppixelcell::gfxa#3 202.0
(byte*) mode_8bpppixelcell::gfxb
(byte*) mode_8bpppixelcell::gfxb#1 2344.8888888888887
(byte*) mode_8bpppixelcell::gfxb#2 5167.333333333333
(byte*) mode_8bpppixelcell::gfxb#5 701.0
(byte*) mode_8bpppixelcell::gfxb#7 202.0
(byte) mode_8bpppixelcell::i
(byte) mode_8bpppixelcell::i#1 151.5
(byte) mode_8bpppixelcell::i#2 202.0
(void()) mode_ecmchar()
(byte~) mode_ecmchar::$25 2002.0
(byte~) mode_ecmchar::$26 2002.0
(byte~) mode_ecmchar::$27 2002.0
(byte~) mode_ecmchar::$28 1001.0
(byte~) mode_ecmchar::$29 2002.0
(byte~) mode_ecmchar::$30 2002.0
(byte~) mode_ecmchar::$33 202.0
(byte*) mode_ecmchar::ECMCHAR_CHARSET
(byte*) mode_ecmchar::ECMCHAR_COLORS
(byte*) mode_ecmchar::ECMCHAR_SCREEN
(byte*) mode_ecmchar::ch
(byte*) mode_ecmchar::ch#1 420.59999999999997
(byte*) mode_ecmchar::ch#2 310.4
(byte*) mode_ecmchar::ch#3 202.0
(byte*) mode_ecmchar::col
(byte*) mode_ecmchar::col#1 191.1818181818182
(byte*) mode_ecmchar::col#2 776.0
(byte*) mode_ecmchar::col#3 202.0
(byte) mode_ecmchar::cx
(byte) mode_ecmchar::cx#1 1501.5
(byte) mode_ecmchar::cx#2 364.0
(byte) mode_ecmchar::cy
(byte) mode_ecmchar::cy#1 151.5
(byte) mode_ecmchar::cy#4 157.42857142857144
(byte) mode_ecmchar::i
(byte) mode_ecmchar::i#1 151.5
(byte) mode_ecmchar::i#2 202.0
(void()) mode_hicolecmchar()
(byte~) mode_hicolecmchar::$25 2002.0
(byte~) mode_hicolecmchar::$26 1001.0
(byte~) mode_hicolecmchar::$27 2002.0
(byte~) mode_hicolecmchar::$31 202.0
(byte*) mode_hicolecmchar::CHARSET
(byte*) mode_hicolecmchar::COLORS
(byte*) mode_hicolecmchar::SCREEN
(byte*) mode_hicolecmchar::ch
(byte*) mode_hicolecmchar::ch#1 420.59999999999997
(byte*) mode_hicolecmchar::ch#2 388.0
(byte*) mode_hicolecmchar::ch#3 202.0
(byte*) mode_hicolecmchar::col
(byte*) mode_hicolecmchar::col#1 300.42857142857144
(byte*) mode_hicolecmchar::col#2 517.3333333333334
(byte*) mode_hicolecmchar::col#3 202.0
(byte) mode_hicolecmchar::cx
(byte) mode_hicolecmchar::cx#1 1501.5
(byte) mode_hicolecmchar::cx#2 333.6666666666667
(byte) mode_hicolecmchar::cy
(byte) mode_hicolecmchar::cy#1 151.5
(byte) mode_hicolecmchar::cy#4 100.25000000000001
(byte) mode_hicolecmchar::i
(byte) mode_hicolecmchar::i#1 151.5
(byte) mode_hicolecmchar::i#2 202.0
(byte) mode_hicolecmchar::v
(byte) mode_hicolecmchar::v#0 1001.0
(void()) mode_hicolmcchar()
(byte~) mode_hicolmcchar::$25 2002.0
(byte~) mode_hicolmcchar::$26 1001.0
(byte~) mode_hicolmcchar::$27 2002.0
(byte~) mode_hicolmcchar::$31 202.0
(byte*) mode_hicolmcchar::CHARSET
(byte*) mode_hicolmcchar::COLORS
(byte*) mode_hicolmcchar::SCREEN
(byte*) mode_hicolmcchar::ch
(byte*) mode_hicolmcchar::ch#1 420.59999999999997
(byte*) mode_hicolmcchar::ch#2 388.0
(byte*) mode_hicolmcchar::ch#3 202.0
(byte*) mode_hicolmcchar::col
(byte*) mode_hicolmcchar::col#1 300.42857142857144
(byte*) mode_hicolmcchar::col#2 517.3333333333334
(byte*) mode_hicolmcchar::col#3 202.0
(byte) mode_hicolmcchar::cx
(byte) mode_hicolmcchar::cx#1 1501.5
(byte) mode_hicolmcchar::cx#2 333.6666666666667
(byte) mode_hicolmcchar::cy
(byte) mode_hicolmcchar::cy#1 151.5
(byte) mode_hicolmcchar::cy#4 100.25000000000001
(byte) mode_hicolmcchar::i
(byte) mode_hicolmcchar::i#1 151.5
(byte) mode_hicolmcchar::i#2 202.0
(byte) mode_hicolmcchar::v
(byte) mode_hicolmcchar::v#0 1001.0
(void()) mode_hicolstdchar()
(byte~) mode_hicolstdchar::$24 2002.0
(byte~) mode_hicolstdchar::$25 1001.0
(byte~) mode_hicolstdchar::$26 2002.0
(byte~) mode_hicolstdchar::$30 202.0
(byte*) mode_hicolstdchar::CHARSET
(byte*) mode_hicolstdchar::COLORS
(byte*) mode_hicolstdchar::SCREEN
(byte*) mode_hicolstdchar::ch
(byte*) mode_hicolstdchar::ch#1 420.59999999999997
(byte*) mode_hicolstdchar::ch#2 388.0
(byte*) mode_hicolstdchar::ch#3 202.0
(byte*) mode_hicolstdchar::col
(byte*) mode_hicolstdchar::col#1 300.42857142857144
(byte*) mode_hicolstdchar::col#2 517.3333333333334
(byte*) mode_hicolstdchar::col#3 202.0
(byte) mode_hicolstdchar::cx
(byte) mode_hicolstdchar::cx#1 1501.5
(byte) mode_hicolstdchar::cx#2 333.6666666666667
(byte) mode_hicolstdchar::cy
(byte) mode_hicolstdchar::cy#1 151.5
(byte) mode_hicolstdchar::cy#4 100.25000000000001
(byte) mode_hicolstdchar::i
(byte) mode_hicolstdchar::i#1 151.5
(byte) mode_hicolstdchar::i#2 202.0
(byte) mode_hicolstdchar::v
(byte) mode_hicolstdchar::v#0 1001.0
(void()) mode_mcchar()
(byte~) mode_mcchar::$25 2002.0
(byte~) mode_mcchar::$26 2002.0
(byte~) mode_mcchar::$27 2002.0
(byte~) mode_mcchar::$28 1001.0
(byte~) mode_mcchar::$29 2002.0
(byte~) mode_mcchar::$30 2002.0
(byte~) mode_mcchar::$33 202.0
(byte*) mode_mcchar::CHARSET
(byte*) mode_mcchar::COLORS
(byte*) mode_mcchar::SCREEN
(byte*) mode_mcchar::ch
(byte*) mode_mcchar::ch#1 420.59999999999997
(byte*) mode_mcchar::ch#2 310.4
(byte*) mode_mcchar::ch#3 202.0
(byte*) mode_mcchar::col
(byte*) mode_mcchar::col#1 191.1818181818182
(byte*) mode_mcchar::col#2 776.0
(byte*) mode_mcchar::col#3 202.0
(byte) mode_mcchar::cx
(byte) mode_mcchar::cx#1 1501.5
(byte) mode_mcchar::cx#2 364.0
(byte) mode_mcchar::cy
(byte) mode_mcchar::cy#1 151.5
(byte) mode_mcchar::cy#4 157.42857142857144
(byte) mode_mcchar::i
(byte) mode_mcchar::i#1 151.5
(byte) mode_mcchar::i#2 202.0
(void()) mode_sixsfred()
(byte~) mode_sixsfred::$15 2002.0
(byte~) mode_sixsfred::$16 2002.0
(byte~) mode_sixsfred::$19 2002.0
(byte~) mode_sixsfred::$25 202.0
(byte*) mode_sixsfred::COLORS
(byte*) mode_sixsfred::PLANEA
(byte*) mode_sixsfred::PLANEB
(byte) mode_sixsfred::ax
(byte) mode_sixsfred::ax#1 1501.5
(byte) mode_sixsfred::ax#2 400.4
(byte) mode_sixsfred::ay
(byte) mode_sixsfred::ay#1 151.5
(byte) mode_sixsfred::ay#4 150.375
(byte) mode_sixsfred::bx
(byte) mode_sixsfred::bx#1 1501.5
(byte) mode_sixsfred::bx#2 667.3333333333334
(byte) mode_sixsfred::by
(byte) mode_sixsfred::by#1 151.5
(byte) mode_sixsfred::by#4 33.666666666666664
(byte*) mode_sixsfred::col
(byte*) mode_sixsfred::col#1 420.59999999999997
(byte*) mode_sixsfred::col#2 776.0
(byte*) mode_sixsfred::col#3 202.0
(byte) mode_sixsfred::cx
(byte) mode_sixsfred::cx#1 1501.5
(byte) mode_sixsfred::cx#2 600.5999999999999
(byte) mode_sixsfred::cy
(byte) mode_sixsfred::cy#1 151.5
(byte) mode_sixsfred::cy#4 150.375
(byte*) mode_sixsfred::gfxa
(byte*) mode_sixsfred::gfxa#1 420.59999999999997
(byte*) mode_sixsfred::gfxa#2 776.0
(byte*) mode_sixsfred::gfxa#3 202.0
(byte*) mode_sixsfred::gfxb
(byte*) mode_sixsfred::gfxb#1 420.59999999999997
(byte*) mode_sixsfred::gfxb#2 1552.0
(byte*) mode_sixsfred::gfxb#3 202.0
(byte) mode_sixsfred::i
(byte) mode_sixsfred::i#1 151.5
(byte) mode_sixsfred::i#2 202.0
(byte) mode_sixsfred::row
(byte) mode_sixsfred::row#0 2002.0
(byte[]) mode_sixsfred::row_bitmask
(void()) mode_sixsfred2()
(byte~) mode_sixsfred2::$14 2002.0
(byte~) mode_sixsfred2::$15 1001.0
(byte~) mode_sixsfred2::$16 2002.0
(byte~) mode_sixsfred2::$17 2002.0
(byte~) mode_sixsfred2::$20 2002.0
(byte~) mode_sixsfred2::$26 202.0
(byte*) mode_sixsfred2::COLORS
(byte*) mode_sixsfred2::PLANEA
(byte*) mode_sixsfred2::PLANEB
(byte) mode_sixsfred2::ax
(byte) mode_sixsfred2::ax#1 1501.5
(byte) mode_sixsfred2::ax#2 400.4
(byte) mode_sixsfred2::ay
(byte) mode_sixsfred2::ay#1 151.5
(byte) mode_sixsfred2::ay#4 150.375
(byte) mode_sixsfred2::bx
(byte) mode_sixsfred2::bx#1 1501.5
(byte) mode_sixsfred2::bx#2 667.3333333333334
(byte) mode_sixsfred2::by
(byte) mode_sixsfred2::by#1 151.5
(byte) mode_sixsfred2::by#4 33.666666666666664
(byte*) mode_sixsfred2::col
(byte*) mode_sixsfred2::col#1 420.59999999999997
(byte*) mode_sixsfred2::col#2 517.3333333333334
(byte*) mode_sixsfred2::col#3 202.0
(byte) mode_sixsfred2::cx
(byte) mode_sixsfred2::cx#1 1501.5
(byte) mode_sixsfred2::cx#2 429.0
(byte) mode_sixsfred2::cy
(byte) mode_sixsfred2::cy#1 151.5
(byte) mode_sixsfred2::cy#4 120.29999999999998
(byte*) mode_sixsfred2::gfxa
(byte*) mode_sixsfred2::gfxa#1 420.59999999999997
(byte*) mode_sixsfred2::gfxa#2 776.0
(byte*) mode_sixsfred2::gfxa#3 202.0
(byte*) mode_sixsfred2::gfxb
(byte*) mode_sixsfred2::gfxb#1 420.59999999999997
(byte*) mode_sixsfred2::gfxb#2 1552.0
(byte*) mode_sixsfred2::gfxb#3 202.0
(byte) mode_sixsfred2::i
(byte) mode_sixsfred2::i#1 151.5
(byte) mode_sixsfred2::i#2 202.0
(byte) mode_sixsfred2::row
(byte) mode_sixsfred2::row#0 2002.0
(byte[]) mode_sixsfred2::row_bitmask
(void()) mode_stdchar()
(byte~) mode_stdchar::$24 2002.0
(byte~) mode_stdchar::$25 2002.0
(byte~) mode_stdchar::$26 2002.0
(byte~) mode_stdchar::$27 1001.0
(byte~) mode_stdchar::$28 2002.0
(byte~) mode_stdchar::$29 2002.0
(byte~) mode_stdchar::$32 202.0
(byte*) mode_stdchar::CHARSET
(byte*) mode_stdchar::COLORS
(byte*) mode_stdchar::SCREEN
(byte*) mode_stdchar::ch
(byte*) mode_stdchar::ch#1 420.59999999999997
(byte*) mode_stdchar::ch#2 310.4
(byte*) mode_stdchar::ch#3 202.0
(byte*) mode_stdchar::col
(byte*) mode_stdchar::col#1 191.1818181818182
(byte*) mode_stdchar::col#2 776.0
(byte*) mode_stdchar::col#3 202.0
(byte) mode_stdchar::cx
(byte) mode_stdchar::cx#1 1501.5
(byte) mode_stdchar::cx#2 364.0
(byte) mode_stdchar::cy
(byte) mode_stdchar::cy#1 151.5
(byte) mode_stdchar::cy#4 157.42857142857144
(byte) mode_stdchar::i
(byte) mode_stdchar::i#1 151.5
(byte) mode_stdchar::i#2 202.0
(void()) mode_twoplanebitmap()
(byte~) mode_twoplanebitmap::$14 2002.0
(byte~) mode_twoplanebitmap::$15 1001.0
(byte~) mode_twoplanebitmap::$16 2002.0
(byte~) mode_twoplanebitmap::$17 2002.0
(byte~) mode_twoplanebitmap::$20 2002.0
(byte~) mode_twoplanebitmap::$27 202.0
(byte*) mode_twoplanebitmap::COLORS
(byte*) mode_twoplanebitmap::PLANEA
(byte*) mode_twoplanebitmap::PLANEB
(byte) mode_twoplanebitmap::ax
(byte) mode_twoplanebitmap::ax#1 1501.5
(byte) mode_twoplanebitmap::ax#2 250.25
(byte) mode_twoplanebitmap::ay
(byte) mode_twoplanebitmap::ay#1 151.5
(byte) mode_twoplanebitmap::ay#4 109.36363636363637
(byte) mode_twoplanebitmap::bx
(byte) mode_twoplanebitmap::bx#1 1501.5
(byte) mode_twoplanebitmap::bx#2 667.3333333333334
(byte) mode_twoplanebitmap::by
(byte) mode_twoplanebitmap::by#1 151.5
(byte) mode_twoplanebitmap::by#4 33.666666666666664
(byte*) mode_twoplanebitmap::col
(byte*) mode_twoplanebitmap::col#1 420.59999999999997
(byte*) mode_twoplanebitmap::col#2 517.3333333333334
(byte*) mode_twoplanebitmap::col#3 202.0
(byte) mode_twoplanebitmap::cx
(byte) mode_twoplanebitmap::cx#1 1501.5
(byte) mode_twoplanebitmap::cx#2 429.0
(byte) mode_twoplanebitmap::cy
(byte) mode_twoplanebitmap::cy#1 151.5
(byte) mode_twoplanebitmap::cy#4 120.29999999999998
(byte*) mode_twoplanebitmap::gfxa
(byte*) mode_twoplanebitmap::gfxa#1 2002.0
(byte*) mode_twoplanebitmap::gfxa#2 2002.0
(byte*) mode_twoplanebitmap::gfxa#3 1021.2
(byte*) mode_twoplanebitmap::gfxa#6 202.0
(byte*) mode_twoplanebitmap::gfxa#7 620.8
(byte*) mode_twoplanebitmap::gfxb
(byte*) mode_twoplanebitmap::gfxb#1 420.59999999999997
(byte*) mode_twoplanebitmap::gfxb#2 1552.0
(byte*) mode_twoplanebitmap::gfxb#3 202.0
(byte) mode_twoplanebitmap::i
(byte) mode_twoplanebitmap::i#1 151.5
(byte) mode_twoplanebitmap::i#2 202.0
(byte*) print_char_cursor
(byte*) print_char_cursor#1 2002.0
(byte*) print_char_cursor#17 821.0
(byte*) print_char_cursor#19 101.0
(byte*) print_char_cursor#32 572.0
(byte*~) print_char_cursor#95 202.0
(void()) print_cls()
(byte*) print_cls::sc
(byte*) print_cls::sc#1 151.5
(byte*) print_cls::sc#2 151.5
(byte*) print_line_cursor
(byte*) print_line_cursor#17 8.583333333333332
(byte*) print_line_cursor#18 2004.0
(byte*) print_line_cursor#19 641.0
(void()) print_ln()
(byte*) print_screen
(void()) print_set_screen((byte*) print_set_screen::screen)
(byte*) print_set_screen::screen
(void()) print_str_lines((byte*) print_str_lines::str)
(byte) print_str_lines::ch
(byte) print_str_lines::ch#0 667.3333333333334
(byte*) print_str_lines::str
(byte*) print_str_lines::str#0 233.66666666666669
(byte*) print_str_lines::str#2 151.5
(byte*) print_str_lines::str#3 1552.0

Initial phi equivalence classes
[ menu::i#2 menu::i#1 ]
[ menu::c#2 menu::c#1 ]
[ mode_8bppchunkybmm::i#2 mode_8bppchunkybmm::i#1 ]
[ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 ]
[ mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 ]
[ mode_8bppchunkybmm::gfxbCpuBank#4 mode_8bppchunkybmm::gfxbCpuBank#7 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::gfxbCpuBank#2 ]
[ mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::gfxb#5 mode_8bppchunkybmm::gfxb#1 ]
[ keyboard_key_pressed::key#22 ]
[ dtvSetCpuBankSegment1::cpuBankIdx#3 dtvSetCpuBankSegment1::cpuBankIdx#1 ]
[ mode_8bpppixelcell::i#2 mode_8bpppixelcell::i#1 ]
[ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 ]
[ mode_8bpppixelcell::ax#2 mode_8bpppixelcell::ax#1 ]
[ mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 ]
[ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 ]
[ mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 ]
[ mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cr#1 ]
[ mode_8bpppixelcell::bits#2 mode_8bpppixelcell::bits#0 mode_8bpppixelcell::bits#1 ]
[ mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::gfxb#7 mode_8bpppixelcell::gfxb#1 ]
[ mode_8bpppixelcell::col#2 mode_8bpppixelcell::col#5 mode_8bpppixelcell::col#7 mode_8bpppixelcell::col#1 ]
[ mode_8bpppixelcell::cp#2 mode_8bpppixelcell::cp#1 ]
[ mode_8bpppixelcell::c#2 mode_8bpppixelcell::c#3 ]
[ mode_sixsfred::i#2 mode_sixsfred::i#1 ]
[ mode_sixsfred::cy#4 mode_sixsfred::cy#1 ]
[ mode_sixsfred::cx#2 mode_sixsfred::cx#1 ]
[ mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 ]
[ mode_sixsfred::ay#4 mode_sixsfred::ay#1 ]
[ mode_sixsfred::gfxa#2 mode_sixsfred::gfxa#3 mode_sixsfred::gfxa#1 ]
[ mode_sixsfred::ax#2 mode_sixsfred::ax#1 ]
[ mode_sixsfred::by#4 mode_sixsfred::by#1 ]
[ mode_sixsfred::gfxb#2 mode_sixsfred::gfxb#3 mode_sixsfred::gfxb#1 ]
[ mode_sixsfred::bx#2 mode_sixsfred::bx#1 ]
[ mode_twoplanebitmap::i#2 mode_twoplanebitmap::i#1 ]
[ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cy#1 ]
[ mode_twoplanebitmap::cx#2 mode_twoplanebitmap::cx#1 ]
[ mode_twoplanebitmap::col#2 mode_twoplanebitmap::col#3 mode_twoplanebitmap::col#1 ]
[ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ay#1 ]
[ mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::gfxa#6 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::gfxa#2 mode_twoplanebitmap::gfxa#1 ]
[ mode_twoplanebitmap::ax#2 mode_twoplanebitmap::ax#1 ]
[ mode_twoplanebitmap::by#4 mode_twoplanebitmap::by#1 ]
[ mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::gfxb#1 ]
[ mode_twoplanebitmap::bx#2 mode_twoplanebitmap::bx#1 ]
[ mode_sixsfred2::i#2 mode_sixsfred2::i#1 ]
[ mode_sixsfred2::cy#4 mode_sixsfred2::cy#1 ]
[ mode_sixsfred2::cx#2 mode_sixsfred2::cx#1 ]
[ mode_sixsfred2::col#2 mode_sixsfred2::col#3 mode_sixsfred2::col#1 ]
[ mode_sixsfred2::ay#4 mode_sixsfred2::ay#1 ]
[ mode_sixsfred2::gfxa#2 mode_sixsfred2::gfxa#3 mode_sixsfred2::gfxa#1 ]
[ mode_sixsfred2::ax#2 mode_sixsfred2::ax#1 ]
[ mode_sixsfred2::by#4 mode_sixsfred2::by#1 ]
[ mode_sixsfred2::gfxb#2 mode_sixsfred2::gfxb#3 mode_sixsfred2::gfxb#1 ]
[ mode_sixsfred2::bx#2 mode_sixsfred2::bx#1 ]
[ mode_hicolmcchar::i#2 mode_hicolmcchar::i#1 ]
[ mode_hicolmcchar::cy#4 mode_hicolmcchar::cy#1 ]
[ mode_hicolmcchar::cx#2 mode_hicolmcchar::cx#1 ]
[ mode_hicolmcchar::col#2 mode_hicolmcchar::col#3 mode_hicolmcchar::col#1 ]
[ mode_hicolmcchar::ch#2 mode_hicolmcchar::ch#3 mode_hicolmcchar::ch#1 ]
[ mode_hicolecmchar::i#2 mode_hicolecmchar::i#1 ]
[ mode_hicolecmchar::cy#4 mode_hicolecmchar::cy#1 ]
[ mode_hicolecmchar::cx#2 mode_hicolecmchar::cx#1 ]
[ mode_hicolecmchar::col#2 mode_hicolecmchar::col#3 mode_hicolecmchar::col#1 ]
[ mode_hicolecmchar::ch#2 mode_hicolecmchar::ch#3 mode_hicolecmchar::ch#1 ]
[ mode_hicolstdchar::i#2 mode_hicolstdchar::i#1 ]
[ mode_hicolstdchar::cy#4 mode_hicolstdchar::cy#1 ]
[ mode_hicolstdchar::cx#2 mode_hicolstdchar::cx#1 ]
[ mode_hicolstdchar::col#2 mode_hicolstdchar::col#3 mode_hicolstdchar::col#1 ]
[ mode_hicolstdchar::ch#2 mode_hicolstdchar::ch#3 mode_hicolstdchar::ch#1 ]
[ mode_mcchar::i#2 mode_mcchar::i#1 ]
[ mode_mcchar::cy#4 mode_mcchar::cy#1 ]
[ mode_mcchar::cx#2 mode_mcchar::cx#1 ]
[ mode_mcchar::col#2 mode_mcchar::col#3 mode_mcchar::col#1 ]
[ mode_mcchar::ch#2 mode_mcchar::ch#3 mode_mcchar::ch#1 ]
[ mode_ecmchar::i#2 mode_ecmchar::i#1 ]
[ mode_ecmchar::cy#4 mode_ecmchar::cy#1 ]
[ mode_ecmchar::cx#2 mode_ecmchar::cx#1 ]
[ mode_ecmchar::col#2 mode_ecmchar::col#3 mode_ecmchar::col#1 ]
[ mode_ecmchar::ch#2 mode_ecmchar::ch#3 mode_ecmchar::ch#1 ]
[ mode_stdchar::i#2 mode_stdchar::i#1 ]
[ mode_stdchar::cy#4 mode_stdchar::cy#1 ]
[ mode_stdchar::cx#2 mode_stdchar::cx#1 ]
[ mode_stdchar::col#2 mode_stdchar::col#3 mode_stdchar::col#1 ]
[ mode_stdchar::ch#2 mode_stdchar::ch#3 mode_stdchar::ch#1 ]
[ print_str_lines::str#3 print_str_lines::str#2 print_str_lines::str#0 ]
[ print_char_cursor#17 print_char_cursor#19 print_char_cursor#95 print_char_cursor#32 print_char_cursor#1 ]
[ print_line_cursor#18 print_line_cursor#17 print_line_cursor#19 ]
[ print_cls::sc#2 print_cls::sc#1 ]
Added variable keyboard_key_pressed::return#2 to zero page equivalence class [ keyboard_key_pressed::return#2 ]
Added variable menu::$29 to zero page equivalence class [ menu::$29 ]
Added variable keyboard_key_pressed::return#26 to zero page equivalence class [ keyboard_key_pressed::return#26 ]
Added variable menu::$33 to zero page equivalence class [ menu::$33 ]
Added variable keyboard_key_pressed::return#27 to zero page equivalence class [ keyboard_key_pressed::return#27 ]
Added variable menu::$37 to zero page equivalence class [ menu::$37 ]
Added variable keyboard_key_pressed::return#28 to zero page equivalence class [ keyboard_key_pressed::return#28 ]
Added variable menu::$41 to zero page equivalence class [ menu::$41 ]
Added variable keyboard_key_pressed::return#29 to zero page equivalence class [ keyboard_key_pressed::return#29 ]
Added variable menu::$45 to zero page equivalence class [ menu::$45 ]
Added variable keyboard_key_pressed::return#30 to zero page equivalence class [ keyboard_key_pressed::return#30 ]
Added variable menu::$49 to zero page equivalence class [ menu::$49 ]
Added variable keyboard_key_pressed::return#31 to zero page equivalence class [ keyboard_key_pressed::return#31 ]
Added variable menu::$53 to zero page equivalence class [ menu::$53 ]
Added variable keyboard_key_pressed::return#32 to zero page equivalence class [ keyboard_key_pressed::return#32 ]
Added variable menu::$57 to zero page equivalence class [ menu::$57 ]
Added variable keyboard_key_pressed::return#10 to zero page equivalence class [ keyboard_key_pressed::return#10 ]
Added variable menu::$61 to zero page equivalence class [ menu::$61 ]
Added variable keyboard_key_pressed::return#11 to zero page equivalence class [ keyboard_key_pressed::return#11 ]
Added variable menu::$65 to zero page equivalence class [ menu::$65 ]
Added variable keyboard_key_pressed::return#12 to zero page equivalence class [ keyboard_key_pressed::return#12 ]
Added variable menu::$69 to zero page equivalence class [ menu::$69 ]
Added variable mode_8bppchunkybmm::$20 to zero page equivalence class [ mode_8bppchunkybmm::$20 ]
Added variable mode_8bppchunkybmm::c#0 to zero page equivalence class [ mode_8bppchunkybmm::c#0 ]
Added variable keyboard_key_pressed::return#23 to zero page equivalence class [ keyboard_key_pressed::return#23 ]
Added variable mode_8bppchunkybmm::$27 to zero page equivalence class [ mode_8bppchunkybmm::$27 ]
Added variable keyboard_key_pressed::colidx#0 to zero page equivalence class [ keyboard_key_pressed::colidx#0 ]
Added variable keyboard_key_pressed::rowidx#0 to zero page equivalence class [ keyboard_key_pressed::rowidx#0 ]
Added variable keyboard_matrix_read::rowid#0 to zero page equivalence class [ keyboard_matrix_read::rowid#0 ]
Added variable keyboard_matrix_read::return#2 to zero page equivalence class [ keyboard_matrix_read::return#2 ]
Added variable keyboard_key_pressed::$2 to zero page equivalence class [ keyboard_key_pressed::$2 ]
Added variable keyboard_key_pressed::return#0 to zero page equivalence class [ keyboard_key_pressed::return#0 ]
Added variable keyboard_matrix_read::return#0 to zero page equivalence class [ keyboard_matrix_read::return#0 ]
Added variable mode_8bpppixelcell::$11 to zero page equivalence class [ mode_8bpppixelcell::$11 ]
Added variable mode_8bpppixelcell::$12 to zero page equivalence class [ mode_8bpppixelcell::$12 ]
Added variable mode_8bpppixelcell::$13 to zero page equivalence class [ mode_8bpppixelcell::$13 ]
Added variable mode_8bpppixelcell::$14 to zero page equivalence class [ mode_8bpppixelcell::$14 ]
Added variable mode_8bpppixelcell::$17 to zero page equivalence class [ mode_8bpppixelcell::$17 ]
Added variable keyboard_key_pressed::return#22 to zero page equivalence class [ keyboard_key_pressed::return#22 ]
Added variable mode_8bpppixelcell::$24 to zero page equivalence class [ mode_8bpppixelcell::$24 ]
Added variable mode_sixsfred::$15 to zero page equivalence class [ mode_sixsfred::$15 ]
Added variable mode_sixsfred::$16 to zero page equivalence class [ mode_sixsfred::$16 ]
Added variable mode_sixsfred::$19 to zero page equivalence class [ mode_sixsfred::$19 ]
Added variable mode_sixsfred::row#0 to zero page equivalence class [ mode_sixsfred::row#0 ]
Added variable keyboard_key_pressed::return#20 to zero page equivalence class [ keyboard_key_pressed::return#20 ]
Added variable mode_sixsfred::$25 to zero page equivalence class [ mode_sixsfred::$25 ]
Added variable mode_twoplanebitmap::$14 to zero page equivalence class [ mode_twoplanebitmap::$14 ]
Added variable mode_twoplanebitmap::$15 to zero page equivalence class [ mode_twoplanebitmap::$15 ]
Added variable mode_twoplanebitmap::$16 to zero page equivalence class [ mode_twoplanebitmap::$16 ]
Added variable mode_twoplanebitmap::$17 to zero page equivalence class [ mode_twoplanebitmap::$17 ]
Added variable mode_twoplanebitmap::$20 to zero page equivalence class [ mode_twoplanebitmap::$20 ]
Added variable keyboard_key_pressed::return#19 to zero page equivalence class [ keyboard_key_pressed::return#19 ]
Added variable mode_twoplanebitmap::$27 to zero page equivalence class [ mode_twoplanebitmap::$27 ]
Added variable mode_sixsfred2::$14 to zero page equivalence class [ mode_sixsfred2::$14 ]
Added variable mode_sixsfred2::$15 to zero page equivalence class [ mode_sixsfred2::$15 ]
Added variable mode_sixsfred2::$16 to zero page equivalence class [ mode_sixsfred2::$16 ]
Added variable mode_sixsfred2::$17 to zero page equivalence class [ mode_sixsfred2::$17 ]
Added variable mode_sixsfred2::$20 to zero page equivalence class [ mode_sixsfred2::$20 ]
Added variable mode_sixsfred2::row#0 to zero page equivalence class [ mode_sixsfred2::row#0 ]
Added variable keyboard_key_pressed::return#21 to zero page equivalence class [ keyboard_key_pressed::return#21 ]
Added variable mode_sixsfred2::$26 to zero page equivalence class [ mode_sixsfred2::$26 ]
Added variable mode_hicolmcchar::$25 to zero page equivalence class [ mode_hicolmcchar::$25 ]
Added variable mode_hicolmcchar::$26 to zero page equivalence class [ mode_hicolmcchar::$26 ]
Added variable mode_hicolmcchar::$27 to zero page equivalence class [ mode_hicolmcchar::$27 ]
Added variable mode_hicolmcchar::v#0 to zero page equivalence class [ mode_hicolmcchar::v#0 ]
Added variable keyboard_key_pressed::return#18 to zero page equivalence class [ keyboard_key_pressed::return#18 ]
Added variable mode_hicolmcchar::$31 to zero page equivalence class [ mode_hicolmcchar::$31 ]
Added variable mode_hicolecmchar::$25 to zero page equivalence class [ mode_hicolecmchar::$25 ]
Added variable mode_hicolecmchar::$26 to zero page equivalence class [ mode_hicolecmchar::$26 ]
Added variable mode_hicolecmchar::$27 to zero page equivalence class [ mode_hicolecmchar::$27 ]
Added variable mode_hicolecmchar::v#0 to zero page equivalence class [ mode_hicolecmchar::v#0 ]
Added variable keyboard_key_pressed::return#17 to zero page equivalence class [ keyboard_key_pressed::return#17 ]
Added variable mode_hicolecmchar::$31 to zero page equivalence class [ mode_hicolecmchar::$31 ]
Added variable mode_hicolstdchar::$24 to zero page equivalence class [ mode_hicolstdchar::$24 ]
Added variable mode_hicolstdchar::$25 to zero page equivalence class [ mode_hicolstdchar::$25 ]
Added variable mode_hicolstdchar::$26 to zero page equivalence class [ mode_hicolstdchar::$26 ]
Added variable mode_hicolstdchar::v#0 to zero page equivalence class [ mode_hicolstdchar::v#0 ]
Added variable keyboard_key_pressed::return#16 to zero page equivalence class [ keyboard_key_pressed::return#16 ]
Added variable mode_hicolstdchar::$30 to zero page equivalence class [ mode_hicolstdchar::$30 ]
Added variable mode_mcchar::$25 to zero page equivalence class [ mode_mcchar::$25 ]
Added variable mode_mcchar::$26 to zero page equivalence class [ mode_mcchar::$26 ]
Added variable mode_mcchar::$27 to zero page equivalence class [ mode_mcchar::$27 ]
Added variable mode_mcchar::$28 to zero page equivalence class [ mode_mcchar::$28 ]
Added variable mode_mcchar::$29 to zero page equivalence class [ mode_mcchar::$29 ]
Added variable mode_mcchar::$30 to zero page equivalence class [ mode_mcchar::$30 ]
Added variable keyboard_key_pressed::return#15 to zero page equivalence class [ keyboard_key_pressed::return#15 ]
Added variable mode_mcchar::$33 to zero page equivalence class [ mode_mcchar::$33 ]
Added variable mode_ecmchar::$25 to zero page equivalence class [ mode_ecmchar::$25 ]
Added variable mode_ecmchar::$26 to zero page equivalence class [ mode_ecmchar::$26 ]
Added variable mode_ecmchar::$27 to zero page equivalence class [ mode_ecmchar::$27 ]
Added variable mode_ecmchar::$28 to zero page equivalence class [ mode_ecmchar::$28 ]
Added variable mode_ecmchar::$29 to zero page equivalence class [ mode_ecmchar::$29 ]
Added variable mode_ecmchar::$30 to zero page equivalence class [ mode_ecmchar::$30 ]
Added variable keyboard_key_pressed::return#14 to zero page equivalence class [ keyboard_key_pressed::return#14 ]
Added variable mode_ecmchar::$33 to zero page equivalence class [ mode_ecmchar::$33 ]
Added variable mode_stdchar::$24 to zero page equivalence class [ mode_stdchar::$24 ]
Added variable mode_stdchar::$25 to zero page equivalence class [ mode_stdchar::$25 ]
Added variable mode_stdchar::$26 to zero page equivalence class [ mode_stdchar::$26 ]
Added variable mode_stdchar::$27 to zero page equivalence class [ mode_stdchar::$27 ]
Added variable mode_stdchar::$28 to zero page equivalence class [ mode_stdchar::$28 ]
Added variable mode_stdchar::$29 to zero page equivalence class [ mode_stdchar::$29 ]
Added variable keyboard_key_pressed::return#13 to zero page equivalence class [ keyboard_key_pressed::return#13 ]
Added variable mode_stdchar::$32 to zero page equivalence class [ mode_stdchar::$32 ]
Added variable print_str_lines::ch#0 to zero page equivalence class [ print_str_lines::ch#0 ]
Complete equivalence classes
[ menu::i#2 menu::i#1 ]
[ menu::c#2 menu::c#1 ]
[ mode_8bppchunkybmm::i#2 mode_8bppchunkybmm::i#1 ]
[ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 ]
[ mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 ]
[ mode_8bppchunkybmm::gfxbCpuBank#4 mode_8bppchunkybmm::gfxbCpuBank#7 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::gfxbCpuBank#2 ]
[ mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::gfxb#5 mode_8bppchunkybmm::gfxb#1 ]
[ keyboard_key_pressed::key#22 ]
[ dtvSetCpuBankSegment1::cpuBankIdx#3 dtvSetCpuBankSegment1::cpuBankIdx#1 ]
[ mode_8bpppixelcell::i#2 mode_8bpppixelcell::i#1 ]
[ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 ]
[ mode_8bpppixelcell::ax#2 mode_8bpppixelcell::ax#1 ]
[ mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 ]
[ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 ]
[ mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 ]
[ mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cr#1 ]
[ mode_8bpppixelcell::bits#2 mode_8bpppixelcell::bits#0 mode_8bpppixelcell::bits#1 ]
[ mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::gfxb#7 mode_8bpppixelcell::gfxb#1 ]
[ mode_8bpppixelcell::col#2 mode_8bpppixelcell::col#5 mode_8bpppixelcell::col#7 mode_8bpppixelcell::col#1 ]
[ mode_8bpppixelcell::cp#2 mode_8bpppixelcell::cp#1 ]
[ mode_8bpppixelcell::c#2 mode_8bpppixelcell::c#3 ]
[ mode_sixsfred::i#2 mode_sixsfred::i#1 ]
[ mode_sixsfred::cy#4 mode_sixsfred::cy#1 ]
[ mode_sixsfred::cx#2 mode_sixsfred::cx#1 ]
[ mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 ]
[ mode_sixsfred::ay#4 mode_sixsfred::ay#1 ]
[ mode_sixsfred::gfxa#2 mode_sixsfred::gfxa#3 mode_sixsfred::gfxa#1 ]
[ mode_sixsfred::ax#2 mode_sixsfred::ax#1 ]
[ mode_sixsfred::by#4 mode_sixsfred::by#1 ]
[ mode_sixsfred::gfxb#2 mode_sixsfred::gfxb#3 mode_sixsfred::gfxb#1 ]
[ mode_sixsfred::bx#2 mode_sixsfred::bx#1 ]
[ mode_twoplanebitmap::i#2 mode_twoplanebitmap::i#1 ]
[ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cy#1 ]
[ mode_twoplanebitmap::cx#2 mode_twoplanebitmap::cx#1 ]
[ mode_twoplanebitmap::col#2 mode_twoplanebitmap::col#3 mode_twoplanebitmap::col#1 ]
[ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ay#1 ]
[ mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::gfxa#6 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::gfxa#2 mode_twoplanebitmap::gfxa#1 ]
[ mode_twoplanebitmap::ax#2 mode_twoplanebitmap::ax#1 ]
[ mode_twoplanebitmap::by#4 mode_twoplanebitmap::by#1 ]
[ mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::gfxb#1 ]
[ mode_twoplanebitmap::bx#2 mode_twoplanebitmap::bx#1 ]
[ mode_sixsfred2::i#2 mode_sixsfred2::i#1 ]
[ mode_sixsfred2::cy#4 mode_sixsfred2::cy#1 ]
[ mode_sixsfred2::cx#2 mode_sixsfred2::cx#1 ]
[ mode_sixsfred2::col#2 mode_sixsfred2::col#3 mode_sixsfred2::col#1 ]
[ mode_sixsfred2::ay#4 mode_sixsfred2::ay#1 ]
[ mode_sixsfred2::gfxa#2 mode_sixsfred2::gfxa#3 mode_sixsfred2::gfxa#1 ]
[ mode_sixsfred2::ax#2 mode_sixsfred2::ax#1 ]
[ mode_sixsfred2::by#4 mode_sixsfred2::by#1 ]
[ mode_sixsfred2::gfxb#2 mode_sixsfred2::gfxb#3 mode_sixsfred2::gfxb#1 ]
[ mode_sixsfred2::bx#2 mode_sixsfred2::bx#1 ]
[ mode_hicolmcchar::i#2 mode_hicolmcchar::i#1 ]
[ mode_hicolmcchar::cy#4 mode_hicolmcchar::cy#1 ]
[ mode_hicolmcchar::cx#2 mode_hicolmcchar::cx#1 ]
[ mode_hicolmcchar::col#2 mode_hicolmcchar::col#3 mode_hicolmcchar::col#1 ]
[ mode_hicolmcchar::ch#2 mode_hicolmcchar::ch#3 mode_hicolmcchar::ch#1 ]
[ mode_hicolecmchar::i#2 mode_hicolecmchar::i#1 ]
[ mode_hicolecmchar::cy#4 mode_hicolecmchar::cy#1 ]
[ mode_hicolecmchar::cx#2 mode_hicolecmchar::cx#1 ]
[ mode_hicolecmchar::col#2 mode_hicolecmchar::col#3 mode_hicolecmchar::col#1 ]
[ mode_hicolecmchar::ch#2 mode_hicolecmchar::ch#3 mode_hicolecmchar::ch#1 ]
[ mode_hicolstdchar::i#2 mode_hicolstdchar::i#1 ]
[ mode_hicolstdchar::cy#4 mode_hicolstdchar::cy#1 ]
[ mode_hicolstdchar::cx#2 mode_hicolstdchar::cx#1 ]
[ mode_hicolstdchar::col#2 mode_hicolstdchar::col#3 mode_hicolstdchar::col#1 ]
[ mode_hicolstdchar::ch#2 mode_hicolstdchar::ch#3 mode_hicolstdchar::ch#1 ]
[ mode_mcchar::i#2 mode_mcchar::i#1 ]
[ mode_mcchar::cy#4 mode_mcchar::cy#1 ]
[ mode_mcchar::cx#2 mode_mcchar::cx#1 ]
[ mode_mcchar::col#2 mode_mcchar::col#3 mode_mcchar::col#1 ]
[ mode_mcchar::ch#2 mode_mcchar::ch#3 mode_mcchar::ch#1 ]
[ mode_ecmchar::i#2 mode_ecmchar::i#1 ]
[ mode_ecmchar::cy#4 mode_ecmchar::cy#1 ]
[ mode_ecmchar::cx#2 mode_ecmchar::cx#1 ]
[ mode_ecmchar::col#2 mode_ecmchar::col#3 mode_ecmchar::col#1 ]
[ mode_ecmchar::ch#2 mode_ecmchar::ch#3 mode_ecmchar::ch#1 ]
[ mode_stdchar::i#2 mode_stdchar::i#1 ]
[ mode_stdchar::cy#4 mode_stdchar::cy#1 ]
[ mode_stdchar::cx#2 mode_stdchar::cx#1 ]
[ mode_stdchar::col#2 mode_stdchar::col#3 mode_stdchar::col#1 ]
[ mode_stdchar::ch#2 mode_stdchar::ch#3 mode_stdchar::ch#1 ]
[ print_str_lines::str#3 print_str_lines::str#2 print_str_lines::str#0 ]
[ print_char_cursor#17 print_char_cursor#19 print_char_cursor#95 print_char_cursor#32 print_char_cursor#1 ]
[ print_line_cursor#18 print_line_cursor#17 print_line_cursor#19 ]
[ print_cls::sc#2 print_cls::sc#1 ]
[ keyboard_key_pressed::return#2 ]
[ menu::$29 ]
[ keyboard_key_pressed::return#26 ]
[ menu::$33 ]
[ keyboard_key_pressed::return#27 ]
[ menu::$37 ]
[ keyboard_key_pressed::return#28 ]
[ menu::$41 ]
[ keyboard_key_pressed::return#29 ]
[ menu::$45 ]
[ keyboard_key_pressed::return#30 ]
[ menu::$49 ]
[ keyboard_key_pressed::return#31 ]
[ menu::$53 ]
[ keyboard_key_pressed::return#32 ]
[ menu::$57 ]
[ keyboard_key_pressed::return#10 ]
[ menu::$61 ]
[ keyboard_key_pressed::return#11 ]
[ menu::$65 ]
[ keyboard_key_pressed::return#12 ]
[ menu::$69 ]
[ mode_8bppchunkybmm::$20 ]
[ mode_8bppchunkybmm::c#0 ]
[ keyboard_key_pressed::return#23 ]
[ mode_8bppchunkybmm::$27 ]
[ keyboard_key_pressed::colidx#0 ]
[ keyboard_key_pressed::rowidx#0 ]
[ keyboard_matrix_read::rowid#0 ]
[ keyboard_matrix_read::return#2 ]
[ keyboard_key_pressed::$2 ]
[ keyboard_key_pressed::return#0 ]
[ keyboard_matrix_read::return#0 ]
[ mode_8bpppixelcell::$11 ]
[ mode_8bpppixelcell::$12 ]
[ mode_8bpppixelcell::$13 ]
[ mode_8bpppixelcell::$14 ]
[ mode_8bpppixelcell::$17 ]
[ keyboard_key_pressed::return#22 ]
[ mode_8bpppixelcell::$24 ]
[ mode_sixsfred::$15 ]
[ mode_sixsfred::$16 ]
[ mode_sixsfred::$19 ]
[ mode_sixsfred::row#0 ]
[ keyboard_key_pressed::return#20 ]
[ mode_sixsfred::$25 ]
[ mode_twoplanebitmap::$14 ]
[ mode_twoplanebitmap::$15 ]
[ mode_twoplanebitmap::$16 ]
[ mode_twoplanebitmap::$17 ]
[ mode_twoplanebitmap::$20 ]
[ keyboard_key_pressed::return#19 ]
[ mode_twoplanebitmap::$27 ]
[ mode_sixsfred2::$14 ]
[ mode_sixsfred2::$15 ]
[ mode_sixsfred2::$16 ]
[ mode_sixsfred2::$17 ]
[ mode_sixsfred2::$20 ]
[ mode_sixsfred2::row#0 ]
[ keyboard_key_pressed::return#21 ]
[ mode_sixsfred2::$26 ]
[ mode_hicolmcchar::$25 ]
[ mode_hicolmcchar::$26 ]
[ mode_hicolmcchar::$27 ]
[ mode_hicolmcchar::v#0 ]
[ keyboard_key_pressed::return#18 ]
[ mode_hicolmcchar::$31 ]
[ mode_hicolecmchar::$25 ]
[ mode_hicolecmchar::$26 ]
[ mode_hicolecmchar::$27 ]
[ mode_hicolecmchar::v#0 ]
[ keyboard_key_pressed::return#17 ]
[ mode_hicolecmchar::$31 ]
[ mode_hicolstdchar::$24 ]
[ mode_hicolstdchar::$25 ]
[ mode_hicolstdchar::$26 ]
[ mode_hicolstdchar::v#0 ]
[ keyboard_key_pressed::return#16 ]
[ mode_hicolstdchar::$30 ]
[ mode_mcchar::$25 ]
[ mode_mcchar::$26 ]
[ mode_mcchar::$27 ]
[ mode_mcchar::$28 ]
[ mode_mcchar::$29 ]
[ mode_mcchar::$30 ]
[ keyboard_key_pressed::return#15 ]
[ mode_mcchar::$33 ]
[ mode_ecmchar::$25 ]
[ mode_ecmchar::$26 ]
[ mode_ecmchar::$27 ]
[ mode_ecmchar::$28 ]
[ mode_ecmchar::$29 ]
[ mode_ecmchar::$30 ]
[ keyboard_key_pressed::return#14 ]
[ mode_ecmchar::$33 ]
[ mode_stdchar::$24 ]
[ mode_stdchar::$25 ]
[ mode_stdchar::$26 ]
[ mode_stdchar::$27 ]
[ mode_stdchar::$28 ]
[ mode_stdchar::$29 ]
[ keyboard_key_pressed::return#13 ]
[ mode_stdchar::$32 ]
[ print_str_lines::ch#0 ]
Allocated zp ZP_BYTE:2 [ menu::i#2 menu::i#1 ]
Allocated zp ZP_WORD:3 [ menu::c#2 menu::c#1 ]
Allocated zp ZP_BYTE:5 [ mode_8bppchunkybmm::i#2 mode_8bppchunkybmm::i#1 ]
Allocated zp ZP_BYTE:6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 ]
Allocated zp ZP_WORD:7 [ mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 ]
Allocated zp ZP_BYTE:9 [ mode_8bppchunkybmm::gfxbCpuBank#4 mode_8bppchunkybmm::gfxbCpuBank#7 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::gfxbCpuBank#2 ]
Allocated zp ZP_WORD:10 [ mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::gfxb#5 mode_8bppchunkybmm::gfxb#1 ]
Allocated zp ZP_BYTE:12 [ keyboard_key_pressed::key#22 ]
Allocated zp ZP_BYTE:13 [ dtvSetCpuBankSegment1::cpuBankIdx#3 dtvSetCpuBankSegment1::cpuBankIdx#1 ]
Allocated zp ZP_BYTE:14 [ mode_8bpppixelcell::i#2 mode_8bpppixelcell::i#1 ]
Allocated zp ZP_BYTE:15 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 ]
Allocated zp ZP_BYTE:16 [ mode_8bpppixelcell::ax#2 mode_8bpppixelcell::ax#1 ]
Allocated zp ZP_WORD:17 [ mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 ]
Allocated zp ZP_BYTE:19 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 ]
Allocated zp ZP_WORD:20 [ mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 ]
Allocated zp ZP_BYTE:22 [ mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cr#1 ]
Allocated zp ZP_BYTE:23 [ mode_8bpppixelcell::bits#2 mode_8bpppixelcell::bits#0 mode_8bpppixelcell::bits#1 ]
Allocated zp ZP_WORD:24 [ mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::gfxb#7 mode_8bpppixelcell::gfxb#1 ]
Allocated zp ZP_BYTE:26 [ mode_8bpppixelcell::col#2 mode_8bpppixelcell::col#5 mode_8bpppixelcell::col#7 mode_8bpppixelcell::col#1 ]
Allocated zp ZP_BYTE:27 [ mode_8bpppixelcell::cp#2 mode_8bpppixelcell::cp#1 ]
Allocated zp ZP_BYTE:28 [ mode_8bpppixelcell::c#2 mode_8bpppixelcell::c#3 ]
Allocated zp ZP_BYTE:29 [ mode_sixsfred::i#2 mode_sixsfred::i#1 ]
Allocated zp ZP_BYTE:30 [ mode_sixsfred::cy#4 mode_sixsfred::cy#1 ]
Allocated zp ZP_BYTE:31 [ mode_sixsfred::cx#2 mode_sixsfred::cx#1 ]
Allocated zp ZP_WORD:32 [ mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 ]
Allocated zp ZP_BYTE:34 [ mode_sixsfred::ay#4 mode_sixsfred::ay#1 ]
Allocated zp ZP_WORD:35 [ mode_sixsfred::gfxa#2 mode_sixsfred::gfxa#3 mode_sixsfred::gfxa#1 ]
Allocated zp ZP_BYTE:37 [ mode_sixsfred::ax#2 mode_sixsfred::ax#1 ]
Allocated zp ZP_BYTE:38 [ mode_sixsfred::by#4 mode_sixsfred::by#1 ]
Allocated zp ZP_WORD:39 [ mode_sixsfred::gfxb#2 mode_sixsfred::gfxb#3 mode_sixsfred::gfxb#1 ]
Allocated zp ZP_BYTE:41 [ mode_sixsfred::bx#2 mode_sixsfred::bx#1 ]
Allocated zp ZP_BYTE:42 [ mode_twoplanebitmap::i#2 mode_twoplanebitmap::i#1 ]
Allocated zp ZP_BYTE:43 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cy#1 ]
Allocated zp ZP_BYTE:44 [ mode_twoplanebitmap::cx#2 mode_twoplanebitmap::cx#1 ]
Allocated zp ZP_WORD:45 [ mode_twoplanebitmap::col#2 mode_twoplanebitmap::col#3 mode_twoplanebitmap::col#1 ]
Allocated zp ZP_BYTE:47 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ay#1 ]
Allocated zp ZP_WORD:48 [ mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::gfxa#6 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::gfxa#2 mode_twoplanebitmap::gfxa#1 ]
Allocated zp ZP_BYTE:50 [ mode_twoplanebitmap::ax#2 mode_twoplanebitmap::ax#1 ]
Allocated zp ZP_BYTE:51 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::by#1 ]
Allocated zp ZP_WORD:52 [ mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::gfxb#1 ]
Allocated zp ZP_BYTE:54 [ mode_twoplanebitmap::bx#2 mode_twoplanebitmap::bx#1 ]
Allocated zp ZP_BYTE:55 [ mode_sixsfred2::i#2 mode_sixsfred2::i#1 ]
Allocated zp ZP_BYTE:56 [ mode_sixsfred2::cy#4 mode_sixsfred2::cy#1 ]
Allocated zp ZP_BYTE:57 [ mode_sixsfred2::cx#2 mode_sixsfred2::cx#1 ]
Allocated zp ZP_WORD:58 [ mode_sixsfred2::col#2 mode_sixsfred2::col#3 mode_sixsfred2::col#1 ]
Allocated zp ZP_BYTE:60 [ mode_sixsfred2::ay#4 mode_sixsfred2::ay#1 ]
Allocated zp ZP_WORD:61 [ mode_sixsfred2::gfxa#2 mode_sixsfred2::gfxa#3 mode_sixsfred2::gfxa#1 ]
Allocated zp ZP_BYTE:63 [ mode_sixsfred2::ax#2 mode_sixsfred2::ax#1 ]
Allocated zp ZP_BYTE:64 [ mode_sixsfred2::by#4 mode_sixsfred2::by#1 ]
Allocated zp ZP_WORD:65 [ mode_sixsfred2::gfxb#2 mode_sixsfred2::gfxb#3 mode_sixsfred2::gfxb#1 ]
Allocated zp ZP_BYTE:67 [ mode_sixsfred2::bx#2 mode_sixsfred2::bx#1 ]
Allocated zp ZP_BYTE:68 [ mode_hicolmcchar::i#2 mode_hicolmcchar::i#1 ]
Allocated zp ZP_BYTE:69 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cy#1 ]
Allocated zp ZP_BYTE:70 [ mode_hicolmcchar::cx#2 mode_hicolmcchar::cx#1 ]
Allocated zp ZP_WORD:71 [ mode_hicolmcchar::col#2 mode_hicolmcchar::col#3 mode_hicolmcchar::col#1 ]
Allocated zp ZP_WORD:73 [ mode_hicolmcchar::ch#2 mode_hicolmcchar::ch#3 mode_hicolmcchar::ch#1 ]
Allocated zp ZP_BYTE:75 [ mode_hicolecmchar::i#2 mode_hicolecmchar::i#1 ]
Allocated zp ZP_BYTE:76 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cy#1 ]
Allocated zp ZP_BYTE:77 [ mode_hicolecmchar::cx#2 mode_hicolecmchar::cx#1 ]
Allocated zp ZP_WORD:78 [ mode_hicolecmchar::col#2 mode_hicolecmchar::col#3 mode_hicolecmchar::col#1 ]
Allocated zp ZP_WORD:80 [ mode_hicolecmchar::ch#2 mode_hicolecmchar::ch#3 mode_hicolecmchar::ch#1 ]
Allocated zp ZP_BYTE:82 [ mode_hicolstdchar::i#2 mode_hicolstdchar::i#1 ]
Allocated zp ZP_BYTE:83 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cy#1 ]
Allocated zp ZP_BYTE:84 [ mode_hicolstdchar::cx#2 mode_hicolstdchar::cx#1 ]
Allocated zp ZP_WORD:85 [ mode_hicolstdchar::col#2 mode_hicolstdchar::col#3 mode_hicolstdchar::col#1 ]
Allocated zp ZP_WORD:87 [ mode_hicolstdchar::ch#2 mode_hicolstdchar::ch#3 mode_hicolstdchar::ch#1 ]
Allocated zp ZP_BYTE:89 [ mode_mcchar::i#2 mode_mcchar::i#1 ]
Allocated zp ZP_BYTE:90 [ mode_mcchar::cy#4 mode_mcchar::cy#1 ]
Allocated zp ZP_BYTE:91 [ mode_mcchar::cx#2 mode_mcchar::cx#1 ]
Allocated zp ZP_WORD:92 [ mode_mcchar::col#2 mode_mcchar::col#3 mode_mcchar::col#1 ]
Allocated zp ZP_WORD:94 [ mode_mcchar::ch#2 mode_mcchar::ch#3 mode_mcchar::ch#1 ]
Allocated zp ZP_BYTE:96 [ mode_ecmchar::i#2 mode_ecmchar::i#1 ]
Allocated zp ZP_BYTE:97 [ mode_ecmchar::cy#4 mode_ecmchar::cy#1 ]
Allocated zp ZP_BYTE:98 [ mode_ecmchar::cx#2 mode_ecmchar::cx#1 ]
Allocated zp ZP_WORD:99 [ mode_ecmchar::col#2 mode_ecmchar::col#3 mode_ecmchar::col#1 ]
Allocated zp ZP_WORD:101 [ mode_ecmchar::ch#2 mode_ecmchar::ch#3 mode_ecmchar::ch#1 ]
Allocated zp ZP_BYTE:103 [ mode_stdchar::i#2 mode_stdchar::i#1 ]
Allocated zp ZP_BYTE:104 [ mode_stdchar::cy#4 mode_stdchar::cy#1 ]
Allocated zp ZP_BYTE:105 [ mode_stdchar::cx#2 mode_stdchar::cx#1 ]
Allocated zp ZP_WORD:106 [ mode_stdchar::col#2 mode_stdchar::col#3 mode_stdchar::col#1 ]
Allocated zp ZP_WORD:108 [ mode_stdchar::ch#2 mode_stdchar::ch#3 mode_stdchar::ch#1 ]
Allocated zp ZP_WORD:110 [ print_str_lines::str#3 print_str_lines::str#2 print_str_lines::str#0 ]
Allocated zp ZP_WORD:112 [ print_char_cursor#17 print_char_cursor#19 print_char_cursor#95 print_char_cursor#32 print_char_cursor#1 ]
Allocated zp ZP_WORD:114 [ print_line_cursor#18 print_line_cursor#17 print_line_cursor#19 ]
Allocated zp ZP_WORD:116 [ print_cls::sc#2 print_cls::sc#1 ]
Allocated zp ZP_BYTE:118 [ keyboard_key_pressed::return#2 ]
Allocated zp ZP_BYTE:119 [ menu::$29 ]
Allocated zp ZP_BYTE:120 [ keyboard_key_pressed::return#26 ]
Allocated zp ZP_BYTE:121 [ menu::$33 ]
Allocated zp ZP_BYTE:122 [ keyboard_key_pressed::return#27 ]
Allocated zp ZP_BYTE:123 [ menu::$37 ]
Allocated zp ZP_BYTE:124 [ keyboard_key_pressed::return#28 ]
Allocated zp ZP_BYTE:125 [ menu::$41 ]
Allocated zp ZP_BYTE:126 [ keyboard_key_pressed::return#29 ]
Allocated zp ZP_BYTE:127 [ menu::$45 ]
Allocated zp ZP_BYTE:128 [ keyboard_key_pressed::return#30 ]
Allocated zp ZP_BYTE:129 [ menu::$49 ]
Allocated zp ZP_BYTE:130 [ keyboard_key_pressed::return#31 ]
Allocated zp ZP_BYTE:131 [ menu::$53 ]
Allocated zp ZP_BYTE:132 [ keyboard_key_pressed::return#32 ]
Allocated zp ZP_BYTE:133 [ menu::$57 ]
Allocated zp ZP_BYTE:134 [ keyboard_key_pressed::return#10 ]
Allocated zp ZP_BYTE:135 [ menu::$61 ]
Allocated zp ZP_BYTE:136 [ keyboard_key_pressed::return#11 ]
Allocated zp ZP_BYTE:137 [ menu::$65 ]
Allocated zp ZP_BYTE:138 [ keyboard_key_pressed::return#12 ]
Allocated zp ZP_BYTE:139 [ menu::$69 ]
Allocated zp ZP_WORD:140 [ mode_8bppchunkybmm::$20 ]
Allocated zp ZP_BYTE:142 [ mode_8bppchunkybmm::c#0 ]
Allocated zp ZP_BYTE:143 [ keyboard_key_pressed::return#23 ]
Allocated zp ZP_BYTE:144 [ mode_8bppchunkybmm::$27 ]
Allocated zp ZP_BYTE:145 [ keyboard_key_pressed::colidx#0 ]
Allocated zp ZP_BYTE:146 [ keyboard_key_pressed::rowidx#0 ]
Allocated zp ZP_BYTE:147 [ keyboard_matrix_read::rowid#0 ]
Allocated zp ZP_BYTE:148 [ keyboard_matrix_read::return#2 ]
Allocated zp ZP_BYTE:149 [ keyboard_key_pressed::$2 ]
Allocated zp ZP_BYTE:150 [ keyboard_key_pressed::return#0 ]
Allocated zp ZP_BYTE:151 [ keyboard_matrix_read::return#0 ]
Allocated zp ZP_BYTE:152 [ mode_8bpppixelcell::$11 ]
Allocated zp ZP_BYTE:153 [ mode_8bpppixelcell::$12 ]
Allocated zp ZP_BYTE:154 [ mode_8bpppixelcell::$13 ]
Allocated zp ZP_BYTE:155 [ mode_8bpppixelcell::$14 ]
Allocated zp ZP_BYTE:156 [ mode_8bpppixelcell::$17 ]
Allocated zp ZP_BYTE:157 [ keyboard_key_pressed::return#22 ]
Allocated zp ZP_BYTE:158 [ mode_8bpppixelcell::$24 ]
Allocated zp ZP_BYTE:159 [ mode_sixsfred::$15 ]
Allocated zp ZP_BYTE:160 [ mode_sixsfred::$16 ]
Allocated zp ZP_BYTE:161 [ mode_sixsfred::$19 ]
Allocated zp ZP_BYTE:162 [ mode_sixsfred::row#0 ]
Allocated zp ZP_BYTE:163 [ keyboard_key_pressed::return#20 ]
Allocated zp ZP_BYTE:164 [ mode_sixsfred::$25 ]
Allocated zp ZP_BYTE:165 [ mode_twoplanebitmap::$14 ]
Allocated zp ZP_BYTE:166 [ mode_twoplanebitmap::$15 ]
Allocated zp ZP_BYTE:167 [ mode_twoplanebitmap::$16 ]
Allocated zp ZP_BYTE:168 [ mode_twoplanebitmap::$17 ]
Allocated zp ZP_BYTE:169 [ mode_twoplanebitmap::$20 ]
Allocated zp ZP_BYTE:170 [ keyboard_key_pressed::return#19 ]
Allocated zp ZP_BYTE:171 [ mode_twoplanebitmap::$27 ]
Allocated zp ZP_BYTE:172 [ mode_sixsfred2::$14 ]
Allocated zp ZP_BYTE:173 [ mode_sixsfred2::$15 ]
Allocated zp ZP_BYTE:174 [ mode_sixsfred2::$16 ]
Allocated zp ZP_BYTE:175 [ mode_sixsfred2::$17 ]
Allocated zp ZP_BYTE:176 [ mode_sixsfred2::$20 ]
Allocated zp ZP_BYTE:177 [ mode_sixsfred2::row#0 ]
Allocated zp ZP_BYTE:178 [ keyboard_key_pressed::return#21 ]
Allocated zp ZP_BYTE:179 [ mode_sixsfred2::$26 ]
Allocated zp ZP_BYTE:180 [ mode_hicolmcchar::$25 ]
Allocated zp ZP_BYTE:181 [ mode_hicolmcchar::$26 ]
Allocated zp ZP_BYTE:182 [ mode_hicolmcchar::$27 ]
Allocated zp ZP_BYTE:183 [ mode_hicolmcchar::v#0 ]
Allocated zp ZP_BYTE:184 [ keyboard_key_pressed::return#18 ]
Allocated zp ZP_BYTE:185 [ mode_hicolmcchar::$31 ]
Allocated zp ZP_BYTE:186 [ mode_hicolecmchar::$25 ]
Allocated zp ZP_BYTE:187 [ mode_hicolecmchar::$26 ]
Allocated zp ZP_BYTE:188 [ mode_hicolecmchar::$27 ]
Allocated zp ZP_BYTE:189 [ mode_hicolecmchar::v#0 ]
Allocated zp ZP_BYTE:190 [ keyboard_key_pressed::return#17 ]
Allocated zp ZP_BYTE:191 [ mode_hicolecmchar::$31 ]
Allocated zp ZP_BYTE:192 [ mode_hicolstdchar::$24 ]
Allocated zp ZP_BYTE:193 [ mode_hicolstdchar::$25 ]
Allocated zp ZP_BYTE:194 [ mode_hicolstdchar::$26 ]
Allocated zp ZP_BYTE:195 [ mode_hicolstdchar::v#0 ]
Allocated zp ZP_BYTE:196 [ keyboard_key_pressed::return#16 ]
Allocated zp ZP_BYTE:197 [ mode_hicolstdchar::$30 ]
Allocated zp ZP_BYTE:198 [ mode_mcchar::$25 ]
Allocated zp ZP_BYTE:199 [ mode_mcchar::$26 ]
Allocated zp ZP_BYTE:200 [ mode_mcchar::$27 ]
Allocated zp ZP_BYTE:201 [ mode_mcchar::$28 ]
Allocated zp ZP_BYTE:202 [ mode_mcchar::$29 ]
Allocated zp ZP_BYTE:203 [ mode_mcchar::$30 ]
Allocated zp ZP_BYTE:204 [ keyboard_key_pressed::return#15 ]
Allocated zp ZP_BYTE:205 [ mode_mcchar::$33 ]
Allocated zp ZP_BYTE:206 [ mode_ecmchar::$25 ]
Allocated zp ZP_BYTE:207 [ mode_ecmchar::$26 ]
Allocated zp ZP_BYTE:208 [ mode_ecmchar::$27 ]
Allocated zp ZP_BYTE:209 [ mode_ecmchar::$28 ]
Allocated zp ZP_BYTE:210 [ mode_ecmchar::$29 ]
Allocated zp ZP_BYTE:211 [ mode_ecmchar::$30 ]
Allocated zp ZP_BYTE:212 [ keyboard_key_pressed::return#14 ]
Allocated zp ZP_BYTE:213 [ mode_ecmchar::$33 ]
Allocated zp ZP_BYTE:214 [ mode_stdchar::$24 ]
Allocated zp ZP_BYTE:215 [ mode_stdchar::$25 ]
Allocated zp ZP_BYTE:216 [ mode_stdchar::$26 ]
Allocated zp ZP_BYTE:217 [ mode_stdchar::$27 ]
Allocated zp ZP_BYTE:218 [ mode_stdchar::$28 ]
Allocated zp ZP_BYTE:219 [ mode_stdchar::$29 ]
Allocated zp ZP_BYTE:220 [ keyboard_key_pressed::return#13 ]
Allocated zp ZP_BYTE:221 [ mode_stdchar::$32 ]
Allocated zp ZP_BYTE:222 [ print_str_lines::ch#0 ]

INITIAL ASM
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .label PROCPORT = 1
  .label BORDERCOL = $d020
  .label BGCOL = $d021
  .label BGCOL1 = $d021
  .label BGCOL2 = $d022
  .label BGCOL3 = $d023
  .label BGCOL4 = $d024
  .label VIC_CONTROL = $d011
  .const VIC_ECM = $40
  .const VIC_BMM = $20
  .const VIC_DEN = $10
  .const VIC_RSEL = 8
  .label VIC_CONTROL2 = $d016
  .const VIC_MCM = $10
  .const VIC_CSEL = 8
  .label VIC_MEMORY = $d018
  .label COLS = $d800
  .label CIA1_PORT_A = $dc00
  .label CIA1_PORT_B = $dc01
  .label CIA2_PORT_A = $dd00
  .label CIA2_PORT_A_DDR = $dd02
  .const BLACK = 0
  .const GREEN = 5
  .const BLUE = 6
  .const LIGHT_GREEN = $d
  .label DTV_FEATURE = $d03f
  .const DTV_FEATURE_ENABLE = 1
  .label DTV_CONTROL = $d03c
  .const DTV_CONTROL_LINEAR_ADDRESSING_ON = 1
  .const DTV_CONTROL_HIGHCOLOR_ON = 4
  .const DTV_CONTROL_COLORRAM_OFF = $10
  .const DTV_CONTROL_CHUNKY_ON = $40
  .label DTV_PALETTE = $d200
  .label DTV_PLANEA_START_LO = $d03a
  .label DTV_PLANEA_START_MI = $d03b
  .label DTV_PLANEA_START_HI = $d045
  .label DTV_PLANEA_STEP = $d046
  .label DTV_PLANEA_MODULO_LO = $d038
  .label DTV_PLANEA_MODULO_HI = $d039
  .label DTV_PLANEB_START_LO = $d049
  .label DTV_PLANEB_START_MI = $d04a
  .label DTV_PLANEB_START_HI = $d04b
  .label DTV_PLANEB_STEP = $d04c
  .label DTV_PLANEB_MODULO_LO = $d047
  .label DTV_PLANEB_MODULO_HI = $d048
  .label DTV_COLOR_BANK_LO = $d036
  .label DTV_COLOR_BANK_HI = $d037
  .const DTV_COLOR_BANK_DEFAULT = $1d800
  .label DTV_GRAPHICS_VIC_BANK = $d03d
  .const KEY_3 = 8
  .const KEY_A = $a
  .const KEY_E = $e
  .const KEY_D = $12
  .const KEY_6 = $13
  .const KEY_C = $14
  .const KEY_7 = $18
  .const KEY_8 = $1b
  .const KEY_B = $1c
  .const KEY_1 = $38
  .const KEY_2 = $3b
  .const KEY_SPACE = $3c
  .label print_char_cursor = $70
  .label print_line_cursor = $72
//SEG2 @begin
bbegin:
//SEG3 [1] phi from @begin to @32 [phi:@begin->@32]
b32_from_bbegin:
  jmp b32
//SEG4 @32
b32:
//SEG5 [2] call main param-assignment [ ] ( )
  jsr main
//SEG6 [3] phi from @32 to @end [phi:@32->@end]
bend_from_b32:
  jmp bend
//SEG7 @end
bend:
//SEG8 main
main: {
  //SEG9 asm { sei  }
    sei
  //SEG10 [5] *((const byte*) DTV_FEATURE#0) ← (const byte) DTV_FEATURE_ENABLE#0 [ ] ( main:2 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_FEATURE_ENABLE
    sta DTV_FEATURE
    jmp b1
  //SEG11 main::@1
  b1:
  //SEG12 [6] if(true) goto main::@2 [ ] ( main:2 [ ] ) -- true_then_la1 
    jmp b2_from_b1
    jmp breturn
  //SEG13 main::@return
  breturn:
  //SEG14 [7] return  [ ] ( main:2 [ ] )
    rts
  //SEG15 [8] phi from main::@1 to main::@2 [phi:main::@1->main::@2]
  b2_from_b1:
    jmp b2
  //SEG16 main::@2
  b2:
  //SEG17 [9] call menu param-assignment [ ] ( main:2 [ ] )
    jsr menu
    jmp b1
}
//SEG18 menu
menu: {
    .label SCREEN = $8000
    .label CHARSET = $9800
    .label _29 = $77
    .label _33 = $79
    .label _37 = $7b
    .label _41 = $7d
    .label _45 = $7f
    .label _49 = $81
    .label _53 = $83
    .label _57 = $85
    .label _61 = $87
    .label _65 = $89
    .label _69 = $8b
    .label i = 2
    .label c = 3
  //SEG19 [10] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) menu::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #($ffffffff&CHARSET)/$10000
    sta DTV_GRAPHICS_VIC_BANK
  //SEG20 [11] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const dword) DTV_COLOR_BANK_DEFAULT#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_COLOR_BANK_DEFAULT/$400
    sta DTV_COLOR_BANK_LO
  //SEG21 [12] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const dword) DTV_COLOR_BANK_DEFAULT#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_COLOR_BANK_HI
  //SEG22 [13] *((const byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_CONTROL
  //SEG23 [14] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3
    sta CIA2_PORT_A_DDR
  //SEG24 [15] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) menu::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3^CHARSET/$4000
    sta CIA2_PORT_A
  //SEG25 [16] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG26 [17] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_CSEL
    sta VIC_CONTROL2
  //SEG27 [18] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) menu::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) menu::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #(SCREEN&$3fff)/$40|(CHARSET&$3fff)/$400
    sta VIC_MEMORY
  //SEG28 [19] phi from menu to menu::@1 [phi:menu->menu::@1]
  b1_from_menu:
  //SEG29 [19] phi (byte) menu::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:menu->menu::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta i
    jmp b1
  //SEG30 [19] phi from menu::@1 to menu::@1 [phi:menu::@1->menu::@1]
  b1_from_b1:
  //SEG31 [19] phi (byte) menu::i#2 = (byte) menu::i#1 [phi:menu::@1->menu::@1#0] -- register_copy 
    jmp b1
  //SEG32 menu::@1
  b1:
  //SEG33 [20] *((const byte*) DTV_PALETTE#0 + (byte) menu::i#2) ← *((const byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) menu::i#2) [ menu::i#2 ] ( main:2::menu:9 [ menu::i#2 ] ) -- pbuc1_derefidx_vbuz1=pbuc2_derefidx_vbuz1 
    ldy i
    lda DTV_PALETTE_DEFAULT,y
    sta DTV_PALETTE,y
  //SEG34 [21] (byte) menu::i#1 ← ++ (byte) menu::i#2 [ menu::i#1 ] ( main:2::menu:9 [ menu::i#1 ] ) -- vbuz1=_inc_vbuz1 
    inc i
  //SEG35 [22] if((byte) menu::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto menu::@1 [ menu::i#1 ] ( main:2::menu:9 [ menu::i#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda i
    cmp #$10
    bne b1_from_b1
  //SEG36 [23] phi from menu::@1 to menu::@2 [phi:menu::@1->menu::@2]
  b2_from_b1:
  //SEG37 [23] phi (byte*) menu::c#2 = (const byte*) COLS#0 [phi:menu::@1->menu::@2#0] -- pbuz1=pbuc1 
    lda #<COLS
    sta c
    lda #>COLS
    sta c+1
    jmp b2
  //SEG38 [23] phi from menu::@2 to menu::@2 [phi:menu::@2->menu::@2]
  b2_from_b2:
  //SEG39 [23] phi (byte*) menu::c#2 = (byte*) menu::c#1 [phi:menu::@2->menu::@2#0] -- register_copy 
    jmp b2
  //SEG40 menu::@2
  b2:
  //SEG41 [24] *((byte*) menu::c#2) ← (const byte) LIGHT_GREEN#0 [ menu::c#2 ] ( main:2::menu:9 [ menu::c#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #LIGHT_GREEN
    ldy #0
    sta (c),y
  //SEG42 [25] (byte*) menu::c#1 ← ++ (byte*) menu::c#2 [ menu::c#1 ] ( main:2::menu:9 [ menu::c#1 ] ) -- pbuz1=_inc_pbuz1 
    inc c
    bne !+
    inc c+1
  !:
  //SEG43 [26] if((byte*) menu::c#1!=(const byte*) COLS#0+(word/signed word/dword/signed dword) 1000) goto menu::@2 [ menu::c#1 ] ( main:2::menu:9 [ menu::c#1 ] ) -- pbuz1_neq_pbuc1_then_la1 
    lda c+1
    cmp #>COLS+$3e8
    bne b2_from_b2
    lda c
    cmp #<COLS+$3e8
    bne b2_from_b2
    jmp b18
  //SEG44 menu::@18
  b18:
  //SEG45 [27] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BGCOL
  //SEG46 [28] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG47 [29] call print_set_screen param-assignment [ ] ( main:2::menu:9 [ ] )
  //SEG48 [667] phi from menu::@18 to print_set_screen [phi:menu::@18->print_set_screen]
  print_set_screen_from_b18:
    jsr print_set_screen
  //SEG49 [30] phi from menu::@18 to menu::@44 [phi:menu::@18->menu::@44]
  b44_from_b18:
    jmp b44
  //SEG50 menu::@44
  b44:
  //SEG51 [31] call print_cls param-assignment [ ] ( main:2::menu:9 [ ] )
  //SEG52 [661] phi from menu::@44 to print_cls [phi:menu::@44->print_cls]
  print_cls_from_b44:
    jsr print_cls
  //SEG53 [32] phi from menu::@44 to menu::@45 [phi:menu::@44->menu::@45]
  b45_from_b44:
    jmp b45
  //SEG54 menu::@45
  b45:
  //SEG55 [33] call print_str_lines param-assignment [ ] ( main:2::menu:9 [ ] )
  //SEG56 [641] phi from menu::@45 to print_str_lines [phi:menu::@45->print_str_lines]
  print_str_lines_from_b45:
    jsr print_str_lines
    jmp b3
  //SEG57 menu::@3
  b3:
  //SEG58 [34] if(true) goto menu::@4 [ ] ( main:2::menu:9 [ ] ) -- true_then_la1 
    jmp b4_from_b3
    jmp breturn
  //SEG59 menu::@return
  breturn:
  //SEG60 [35] return  [ ] ( main:2::menu:9 [ ] )
    rts
  //SEG61 [36] phi from menu::@3 to menu::@4 [phi:menu::@3->menu::@4]
  b4_from_b3:
    jmp b4
  //SEG62 menu::@4
  b4:
  //SEG63 [37] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG64 [153] phi from menu::@4 to keyboard_key_pressed [phi:menu::@4->keyboard_key_pressed]
  keyboard_key_pressed_from_b4:
  //SEG65 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_1#0 [phi:menu::@4->keyboard_key_pressed#0] -- vbuz1=vbuc1 
    lda #KEY_1
    sta keyboard_key_pressed.key
    jsr keyboard_key_pressed
  //SEG66 [38] (byte) keyboard_key_pressed::return#2 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#2 ] ( main:2::menu:9 [ keyboard_key_pressed::return#2 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return
    sta keyboard_key_pressed.return_2
    jmp b47
  //SEG67 menu::@47
  b47:
  //SEG68 [39] (byte~) menu::$29 ← (byte) keyboard_key_pressed::return#2 [ menu::$29 ] ( main:2::menu:9 [ menu::$29 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return_2
    sta _29
  //SEG69 [40] if((byte~) menu::$29==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@6 [ ] ( main:2::menu:9 [ ] ) -- vbuz1_eq_0_then_la1 
    lda _29
    beq b6_from_b47
  //SEG70 [41] phi from menu::@47 to menu::@21 [phi:menu::@47->menu::@21]
  b21_from_b47:
    jmp b21
  //SEG71 menu::@21
  b21:
  //SEG72 [42] call mode_stdchar param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_stdchar
    jmp breturn
  //SEG73 [43] phi from menu::@47 to menu::@6 [phi:menu::@47->menu::@6]
  b6_from_b47:
    jmp b6
  //SEG74 menu::@6
  b6:
  //SEG75 [44] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG76 [153] phi from menu::@6 to keyboard_key_pressed [phi:menu::@6->keyboard_key_pressed]
  keyboard_key_pressed_from_b6:
  //SEG77 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_2#0 [phi:menu::@6->keyboard_key_pressed#0] -- vbuz1=vbuc1 
    lda #KEY_2
    sta keyboard_key_pressed.key
    jsr keyboard_key_pressed
  //SEG78 [45] (byte) keyboard_key_pressed::return#26 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#26 ] ( main:2::menu:9 [ keyboard_key_pressed::return#26 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return
    sta keyboard_key_pressed.return_26
    jmp b48
  //SEG79 menu::@48
  b48:
  //SEG80 [46] (byte~) menu::$33 ← (byte) keyboard_key_pressed::return#26 [ menu::$33 ] ( main:2::menu:9 [ menu::$33 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return_26
    sta _33
  //SEG81 [47] if((byte~) menu::$33==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@7 [ ] ( main:2::menu:9 [ ] ) -- vbuz1_eq_0_then_la1 
    lda _33
    beq b7_from_b48
  //SEG82 [48] phi from menu::@48 to menu::@23 [phi:menu::@48->menu::@23]
  b23_from_b48:
    jmp b23
  //SEG83 menu::@23
  b23:
  //SEG84 [49] call mode_ecmchar param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_ecmchar
    jmp breturn
  //SEG85 [50] phi from menu::@48 to menu::@7 [phi:menu::@48->menu::@7]
  b7_from_b48:
    jmp b7
  //SEG86 menu::@7
  b7:
  //SEG87 [51] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG88 [153] phi from menu::@7 to keyboard_key_pressed [phi:menu::@7->keyboard_key_pressed]
  keyboard_key_pressed_from_b7:
  //SEG89 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_3#0 [phi:menu::@7->keyboard_key_pressed#0] -- vbuz1=vbuc1 
    lda #KEY_3
    sta keyboard_key_pressed.key
    jsr keyboard_key_pressed
  //SEG90 [52] (byte) keyboard_key_pressed::return#27 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#27 ] ( main:2::menu:9 [ keyboard_key_pressed::return#27 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return
    sta keyboard_key_pressed.return_27
    jmp b50
  //SEG91 menu::@50
  b50:
  //SEG92 [53] (byte~) menu::$37 ← (byte) keyboard_key_pressed::return#27 [ menu::$37 ] ( main:2::menu:9 [ menu::$37 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return_27
    sta _37
  //SEG93 [54] if((byte~) menu::$37==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@8 [ ] ( main:2::menu:9 [ ] ) -- vbuz1_eq_0_then_la1 
    lda _37
    beq b8_from_b50
  //SEG94 [55] phi from menu::@50 to menu::@25 [phi:menu::@50->menu::@25]
  b25_from_b50:
    jmp b25
  //SEG95 menu::@25
  b25:
  //SEG96 [56] call mode_mcchar param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_mcchar
    jmp breturn
  //SEG97 [57] phi from menu::@50 to menu::@8 [phi:menu::@50->menu::@8]
  b8_from_b50:
    jmp b8
  //SEG98 menu::@8
  b8:
  //SEG99 [58] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG100 [153] phi from menu::@8 to keyboard_key_pressed [phi:menu::@8->keyboard_key_pressed]
  keyboard_key_pressed_from_b8:
  //SEG101 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_6#0 [phi:menu::@8->keyboard_key_pressed#0] -- vbuz1=vbuc1 
    lda #KEY_6
    sta keyboard_key_pressed.key
    jsr keyboard_key_pressed
  //SEG102 [59] (byte) keyboard_key_pressed::return#28 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#28 ] ( main:2::menu:9 [ keyboard_key_pressed::return#28 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return
    sta keyboard_key_pressed.return_28
    jmp b52
  //SEG103 menu::@52
  b52:
  //SEG104 [60] (byte~) menu::$41 ← (byte) keyboard_key_pressed::return#28 [ menu::$41 ] ( main:2::menu:9 [ menu::$41 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return_28
    sta _41
  //SEG105 [61] if((byte~) menu::$41==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@9 [ ] ( main:2::menu:9 [ ] ) -- vbuz1_eq_0_then_la1 
    lda _41
    beq b9_from_b52
  //SEG106 [62] phi from menu::@52 to menu::@27 [phi:menu::@52->menu::@27]
  b27_from_b52:
    jmp b27
  //SEG107 menu::@27
  b27:
  //SEG108 [63] call mode_hicolstdchar param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_hicolstdchar
    jmp breturn
  //SEG109 [64] phi from menu::@52 to menu::@9 [phi:menu::@52->menu::@9]
  b9_from_b52:
    jmp b9
  //SEG110 menu::@9
  b9:
  //SEG111 [65] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG112 [153] phi from menu::@9 to keyboard_key_pressed [phi:menu::@9->keyboard_key_pressed]
  keyboard_key_pressed_from_b9:
  //SEG113 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_7#0 [phi:menu::@9->keyboard_key_pressed#0] -- vbuz1=vbuc1 
    lda #KEY_7
    sta keyboard_key_pressed.key
    jsr keyboard_key_pressed
  //SEG114 [66] (byte) keyboard_key_pressed::return#29 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#29 ] ( main:2::menu:9 [ keyboard_key_pressed::return#29 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return
    sta keyboard_key_pressed.return_29
    jmp b54
  //SEG115 menu::@54
  b54:
  //SEG116 [67] (byte~) menu::$45 ← (byte) keyboard_key_pressed::return#29 [ menu::$45 ] ( main:2::menu:9 [ menu::$45 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return_29
    sta _45
  //SEG117 [68] if((byte~) menu::$45==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@10 [ ] ( main:2::menu:9 [ ] ) -- vbuz1_eq_0_then_la1 
    lda _45
    beq b10_from_b54
  //SEG118 [69] phi from menu::@54 to menu::@29 [phi:menu::@54->menu::@29]
  b29_from_b54:
    jmp b29
  //SEG119 menu::@29
  b29:
  //SEG120 [70] call mode_hicolecmchar param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_hicolecmchar
    jmp breturn
  //SEG121 [71] phi from menu::@54 to menu::@10 [phi:menu::@54->menu::@10]
  b10_from_b54:
    jmp b10
  //SEG122 menu::@10
  b10:
  //SEG123 [72] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG124 [153] phi from menu::@10 to keyboard_key_pressed [phi:menu::@10->keyboard_key_pressed]
  keyboard_key_pressed_from_b10:
  //SEG125 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_8#0 [phi:menu::@10->keyboard_key_pressed#0] -- vbuz1=vbuc1 
    lda #KEY_8
    sta keyboard_key_pressed.key
    jsr keyboard_key_pressed
  //SEG126 [73] (byte) keyboard_key_pressed::return#30 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#30 ] ( main:2::menu:9 [ keyboard_key_pressed::return#30 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return
    sta keyboard_key_pressed.return_30
    jmp b56
  //SEG127 menu::@56
  b56:
  //SEG128 [74] (byte~) menu::$49 ← (byte) keyboard_key_pressed::return#30 [ menu::$49 ] ( main:2::menu:9 [ menu::$49 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return_30
    sta _49
  //SEG129 [75] if((byte~) menu::$49==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@11 [ ] ( main:2::menu:9 [ ] ) -- vbuz1_eq_0_then_la1 
    lda _49
    beq b11_from_b56
  //SEG130 [76] phi from menu::@56 to menu::@31 [phi:menu::@56->menu::@31]
  b31_from_b56:
    jmp b31
  //SEG131 menu::@31
  b31:
  //SEG132 [77] call mode_hicolmcchar param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_hicolmcchar
    jmp breturn
  //SEG133 [78] phi from menu::@56 to menu::@11 [phi:menu::@56->menu::@11]
  b11_from_b56:
    jmp b11
  //SEG134 menu::@11
  b11:
  //SEG135 [79] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG136 [153] phi from menu::@11 to keyboard_key_pressed [phi:menu::@11->keyboard_key_pressed]
  keyboard_key_pressed_from_b11:
  //SEG137 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_A#0 [phi:menu::@11->keyboard_key_pressed#0] -- vbuz1=vbuc1 
    lda #KEY_A
    sta keyboard_key_pressed.key
    jsr keyboard_key_pressed
  //SEG138 [80] (byte) keyboard_key_pressed::return#31 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#31 ] ( main:2::menu:9 [ keyboard_key_pressed::return#31 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return
    sta keyboard_key_pressed.return_31
    jmp b58
  //SEG139 menu::@58
  b58:
  //SEG140 [81] (byte~) menu::$53 ← (byte) keyboard_key_pressed::return#31 [ menu::$53 ] ( main:2::menu:9 [ menu::$53 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return_31
    sta _53
  //SEG141 [82] if((byte~) menu::$53==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@12 [ ] ( main:2::menu:9 [ ] ) -- vbuz1_eq_0_then_la1 
    lda _53
    beq b12_from_b58
  //SEG142 [83] phi from menu::@58 to menu::@33 [phi:menu::@58->menu::@33]
  b33_from_b58:
    jmp b33
  //SEG143 menu::@33
  b33:
  //SEG144 [84] call mode_sixsfred2 param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_sixsfred2
    jmp breturn
  //SEG145 [85] phi from menu::@58 to menu::@12 [phi:menu::@58->menu::@12]
  b12_from_b58:
    jmp b12
  //SEG146 menu::@12
  b12:
  //SEG147 [86] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG148 [153] phi from menu::@12 to keyboard_key_pressed [phi:menu::@12->keyboard_key_pressed]
  keyboard_key_pressed_from_b12:
  //SEG149 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_B#0 [phi:menu::@12->keyboard_key_pressed#0] -- vbuz1=vbuc1 
    lda #KEY_B
    sta keyboard_key_pressed.key
    jsr keyboard_key_pressed
  //SEG150 [87] (byte) keyboard_key_pressed::return#32 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#32 ] ( main:2::menu:9 [ keyboard_key_pressed::return#32 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return
    sta keyboard_key_pressed.return_32
    jmp b60
  //SEG151 menu::@60
  b60:
  //SEG152 [88] (byte~) menu::$57 ← (byte) keyboard_key_pressed::return#32 [ menu::$57 ] ( main:2::menu:9 [ menu::$57 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return_32
    sta _57
  //SEG153 [89] if((byte~) menu::$57==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@13 [ ] ( main:2::menu:9 [ ] ) -- vbuz1_eq_0_then_la1 
    lda _57
    beq b13_from_b60
  //SEG154 [90] phi from menu::@60 to menu::@35 [phi:menu::@60->menu::@35]
  b35_from_b60:
    jmp b35
  //SEG155 menu::@35
  b35:
  //SEG156 [91] call mode_twoplanebitmap param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_twoplanebitmap
    jmp breturn
  //SEG157 [92] phi from menu::@60 to menu::@13 [phi:menu::@60->menu::@13]
  b13_from_b60:
    jmp b13
  //SEG158 menu::@13
  b13:
  //SEG159 [93] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG160 [153] phi from menu::@13 to keyboard_key_pressed [phi:menu::@13->keyboard_key_pressed]
  keyboard_key_pressed_from_b13:
  //SEG161 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_C#0 [phi:menu::@13->keyboard_key_pressed#0] -- vbuz1=vbuc1 
    lda #KEY_C
    sta keyboard_key_pressed.key
    jsr keyboard_key_pressed
  //SEG162 [94] (byte) keyboard_key_pressed::return#10 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#10 ] ( main:2::menu:9 [ keyboard_key_pressed::return#10 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return
    sta keyboard_key_pressed.return_10
    jmp b62
  //SEG163 menu::@62
  b62:
  //SEG164 [95] (byte~) menu::$61 ← (byte) keyboard_key_pressed::return#10 [ menu::$61 ] ( main:2::menu:9 [ menu::$61 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return_10
    sta _61
  //SEG165 [96] if((byte~) menu::$61==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@14 [ ] ( main:2::menu:9 [ ] ) -- vbuz1_eq_0_then_la1 
    lda _61
    beq b14_from_b62
  //SEG166 [97] phi from menu::@62 to menu::@37 [phi:menu::@62->menu::@37]
  b37_from_b62:
    jmp b37
  //SEG167 menu::@37
  b37:
  //SEG168 [98] call mode_sixsfred param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_sixsfred
    jmp breturn
  //SEG169 [99] phi from menu::@62 to menu::@14 [phi:menu::@62->menu::@14]
  b14_from_b62:
    jmp b14
  //SEG170 menu::@14
  b14:
  //SEG171 [100] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG172 [153] phi from menu::@14 to keyboard_key_pressed [phi:menu::@14->keyboard_key_pressed]
  keyboard_key_pressed_from_b14:
  //SEG173 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_D#0 [phi:menu::@14->keyboard_key_pressed#0] -- vbuz1=vbuc1 
    lda #KEY_D
    sta keyboard_key_pressed.key
    jsr keyboard_key_pressed
  //SEG174 [101] (byte) keyboard_key_pressed::return#11 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#11 ] ( main:2::menu:9 [ keyboard_key_pressed::return#11 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return
    sta keyboard_key_pressed.return_11
    jmp b64
  //SEG175 menu::@64
  b64:
  //SEG176 [102] (byte~) menu::$65 ← (byte) keyboard_key_pressed::return#11 [ menu::$65 ] ( main:2::menu:9 [ menu::$65 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return_11
    sta _65
  //SEG177 [103] if((byte~) menu::$65==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@15 [ ] ( main:2::menu:9 [ ] ) -- vbuz1_eq_0_then_la1 
    lda _65
    beq b15_from_b64
  //SEG178 [104] phi from menu::@64 to menu::@39 [phi:menu::@64->menu::@39]
  b39_from_b64:
    jmp b39
  //SEG179 menu::@39
  b39:
  //SEG180 [105] call mode_8bpppixelcell param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_8bpppixelcell
    jmp breturn
  //SEG181 [106] phi from menu::@64 to menu::@15 [phi:menu::@64->menu::@15]
  b15_from_b64:
    jmp b15
  //SEG182 menu::@15
  b15:
  //SEG183 [107] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG184 [153] phi from menu::@15 to keyboard_key_pressed [phi:menu::@15->keyboard_key_pressed]
  keyboard_key_pressed_from_b15:
  //SEG185 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_E#0 [phi:menu::@15->keyboard_key_pressed#0] -- vbuz1=vbuc1 
    lda #KEY_E
    sta keyboard_key_pressed.key
    jsr keyboard_key_pressed
  //SEG186 [108] (byte) keyboard_key_pressed::return#12 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#12 ] ( main:2::menu:9 [ keyboard_key_pressed::return#12 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return
    sta keyboard_key_pressed.return_12
    jmp b66
  //SEG187 menu::@66
  b66:
  //SEG188 [109] (byte~) menu::$69 ← (byte) keyboard_key_pressed::return#12 [ menu::$69 ] ( main:2::menu:9 [ menu::$69 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return_12
    sta _69
  //SEG189 [110] if((byte~) menu::$69==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@3 [ ] ( main:2::menu:9 [ ] ) -- vbuz1_eq_0_then_la1 
    lda _69
    beq b3
  //SEG190 [111] phi from menu::@66 to menu::@41 [phi:menu::@66->menu::@41]
  b41_from_b66:
    jmp b41
  //SEG191 menu::@41
  b41:
  //SEG192 [112] call mode_8bppchunkybmm param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_8bppchunkybmm
    jmp breturn
}
//SEG193 mode_8bppchunkybmm
mode_8bppchunkybmm: {
    .const PLANEB = $20000
    .label _20 = $8c
    .label _27 = $90
    .label i = 5
    .label c = $8e
    .label gfxb = $a
    .label x = 7
    .label gfxbCpuBank = 9
    .label y = 6
  //SEG194 [113] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0|(const byte) DTV_CONTROL_CHUNKY_ON#0|(const byte) DTV_CONTROL_COLORRAM_OFF#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_CONTROL_HIGHCOLOR_ON|DTV_CONTROL_LINEAR_ADDRESSING_ON|DTV_CONTROL_CHUNKY_ON|DTV_CONTROL_COLORRAM_OFF
    sta DTV_CONTROL
  //SEG195 [114] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_ECM|VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG196 [115] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_MCM|VIC_CSEL
    sta VIC_CONTROL2
  //SEG197 [116] *((const byte*) DTV_PLANEB_START_LO#0) ← <<(const dword) mode_8bppchunkybmm::PLANEB#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #PLANEB&$ffff
    sta DTV_PLANEB_START_LO
  //SEG198 [117] *((const byte*) DTV_PLANEB_START_MI#0) ← ><(const dword) mode_8bppchunkybmm::PLANEB#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_START_MI
  //SEG199 [118] *((const byte*) DTV_PLANEB_START_HI#0) ← <>(const dword) mode_8bppchunkybmm::PLANEB#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #PLANEB>>$10
    sta DTV_PLANEB_START_HI
  //SEG200 [119] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 8 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #8
    sta DTV_PLANEB_STEP
  //SEG201 [120] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_MODULO_LO
  //SEG202 [121] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_MODULO_HI
  //SEG203 [122] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG204 [123] phi from mode_8bppchunkybmm to mode_8bppchunkybmm::@1 [phi:mode_8bppchunkybmm->mode_8bppchunkybmm::@1]
  b1_from_mode_8bppchunkybmm:
  //SEG205 [123] phi (byte) mode_8bppchunkybmm::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bppchunkybmm->mode_8bppchunkybmm::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta i
    jmp b1
  //SEG206 [123] phi from mode_8bppchunkybmm::@1 to mode_8bppchunkybmm::@1 [phi:mode_8bppchunkybmm::@1->mode_8bppchunkybmm::@1]
  b1_from_b1:
  //SEG207 [123] phi (byte) mode_8bppchunkybmm::i#2 = (byte) mode_8bppchunkybmm::i#1 [phi:mode_8bppchunkybmm::@1->mode_8bppchunkybmm::@1#0] -- register_copy 
    jmp b1
  //SEG208 mode_8bppchunkybmm::@1
  b1:
  //SEG209 [124] *((const byte*) DTV_PALETTE#0 + (byte) mode_8bppchunkybmm::i#2) ← (byte) mode_8bppchunkybmm::i#2 [ mode_8bppchunkybmm::i#2 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::i#2 ] ) -- pbuc1_derefidx_vbuz1=vbuz1 
    ldy i
    tya
    sta DTV_PALETTE,y
  //SEG210 [125] (byte) mode_8bppchunkybmm::i#1 ← ++ (byte) mode_8bppchunkybmm::i#2 [ mode_8bppchunkybmm::i#1 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::i#1 ] ) -- vbuz1=_inc_vbuz1 
    inc i
  //SEG211 [126] if((byte) mode_8bppchunkybmm::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_8bppchunkybmm::@1 [ mode_8bppchunkybmm::i#1 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::i#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda i
    cmp #$10
    bne b1_from_b1
  //SEG212 [127] phi from mode_8bppchunkybmm::@1 to mode_8bppchunkybmm::@9 [phi:mode_8bppchunkybmm::@1->mode_8bppchunkybmm::@9]
  b9_from_b1:
    jmp b9
  //SEG213 mode_8bppchunkybmm::@9
  b9:
  //SEG214 [128] call dtvSetCpuBankSegment1 param-assignment [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
  //SEG215 [165] phi from mode_8bppchunkybmm::@9 to dtvSetCpuBankSegment1 [phi:mode_8bppchunkybmm::@9->dtvSetCpuBankSegment1]
  dtvSetCpuBankSegment1_from_b9:
  //SEG216 [165] phi (byte) dtvSetCpuBankSegment1::cpuBankIdx#3 = ((byte))(const dword) mode_8bppchunkybmm::PLANEB#0/(word/signed word/dword/signed dword) 16384 [phi:mode_8bppchunkybmm::@9->dtvSetCpuBankSegment1#0] -- vbuz1=vbuc1 
    lda #PLANEB/$4000
    sta dtvSetCpuBankSegment1.cpuBankIdx
    jsr dtvSetCpuBankSegment1
  //SEG217 [129] phi from mode_8bppchunkybmm::@9 to mode_8bppchunkybmm::@2 [phi:mode_8bppchunkybmm::@9->mode_8bppchunkybmm::@2]
  b2_from_b9:
  //SEG218 [129] phi (byte) mode_8bppchunkybmm::gfxbCpuBank#7 = ++((byte))(const dword) mode_8bppchunkybmm::PLANEB#0/(word/signed word/dword/signed dword) 16384 [phi:mode_8bppchunkybmm::@9->mode_8bppchunkybmm::@2#0] -- vbuz1=vbuc1 
    lda #PLANEB/$4000+1
    sta gfxbCpuBank
  //SEG219 [129] phi (byte) mode_8bppchunkybmm::y#6 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bppchunkybmm::@9->mode_8bppchunkybmm::@2#1] -- vbuz1=vbuc1 
    lda #0
    sta y
  //SEG220 [129] phi (byte*) mode_8bppchunkybmm::gfxb#5 = ((byte*))(word/signed word/dword/signed dword) 16384 [phi:mode_8bppchunkybmm::@9->mode_8bppchunkybmm::@2#2] -- pbuz1=pbuc1 
    lda #<$4000
    sta gfxb
    lda #>$4000
    sta gfxb+1
    jmp b2
  //SEG221 [129] phi from mode_8bppchunkybmm::@11 to mode_8bppchunkybmm::@2 [phi:mode_8bppchunkybmm::@11->mode_8bppchunkybmm::@2]
  b2_from_b11:
  //SEG222 [129] phi (byte) mode_8bppchunkybmm::gfxbCpuBank#7 = (byte) mode_8bppchunkybmm::gfxbCpuBank#8 [phi:mode_8bppchunkybmm::@11->mode_8bppchunkybmm::@2#0] -- register_copy 
  //SEG223 [129] phi (byte) mode_8bppchunkybmm::y#6 = (byte) mode_8bppchunkybmm::y#1 [phi:mode_8bppchunkybmm::@11->mode_8bppchunkybmm::@2#1] -- register_copy 
  //SEG224 [129] phi (byte*) mode_8bppchunkybmm::gfxb#5 = (byte*) mode_8bppchunkybmm::gfxb#1 [phi:mode_8bppchunkybmm::@11->mode_8bppchunkybmm::@2#2] -- register_copy 
    jmp b2
  //SEG225 mode_8bppchunkybmm::@2
  b2:
  //SEG226 [130] phi from mode_8bppchunkybmm::@2 to mode_8bppchunkybmm::@3 [phi:mode_8bppchunkybmm::@2->mode_8bppchunkybmm::@3]
  b3_from_b2:
  //SEG227 [130] phi (byte) mode_8bppchunkybmm::gfxbCpuBank#4 = (byte) mode_8bppchunkybmm::gfxbCpuBank#7 [phi:mode_8bppchunkybmm::@2->mode_8bppchunkybmm::@3#0] -- register_copy 
  //SEG228 [130] phi (word) mode_8bppchunkybmm::x#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bppchunkybmm::@2->mode_8bppchunkybmm::@3#1] -- vwuz1=vbuc1 
    lda #<0
    sta x
    lda #>0
    sta x+1
  //SEG229 [130] phi (byte*) mode_8bppchunkybmm::gfxb#3 = (byte*) mode_8bppchunkybmm::gfxb#5 [phi:mode_8bppchunkybmm::@2->mode_8bppchunkybmm::@3#2] -- register_copy 
    jmp b3
  //SEG230 [130] phi from mode_8bppchunkybmm::@4 to mode_8bppchunkybmm::@3 [phi:mode_8bppchunkybmm::@4->mode_8bppchunkybmm::@3]
  b3_from_b4:
  //SEG231 [130] phi (byte) mode_8bppchunkybmm::gfxbCpuBank#4 = (byte) mode_8bppchunkybmm::gfxbCpuBank#8 [phi:mode_8bppchunkybmm::@4->mode_8bppchunkybmm::@3#0] -- register_copy 
  //SEG232 [130] phi (word) mode_8bppchunkybmm::x#2 = (word) mode_8bppchunkybmm::x#1 [phi:mode_8bppchunkybmm::@4->mode_8bppchunkybmm::@3#1] -- register_copy 
  //SEG233 [130] phi (byte*) mode_8bppchunkybmm::gfxb#3 = (byte*) mode_8bppchunkybmm::gfxb#1 [phi:mode_8bppchunkybmm::@4->mode_8bppchunkybmm::@3#2] -- register_copy 
    jmp b3
  //SEG234 mode_8bppchunkybmm::@3
  b3:
  //SEG235 [131] if((byte*) mode_8bppchunkybmm::gfxb#3!=(word/dword/signed dword) 32768) goto mode_8bppchunkybmm::@4 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] ) -- pbuz1_neq_vwuc1_then_la1 
    lda gfxb+1
    cmp #>$8000
    bne b4_from_b3
    lda gfxb
    cmp #<$8000
    bne b4_from_b3
    jmp b10
  //SEG236 mode_8bppchunkybmm::@10
  b10:
  //SEG237 [132] (byte) dtvSetCpuBankSegment1::cpuBankIdx#1 ← (byte) mode_8bppchunkybmm::gfxbCpuBank#4 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 dtvSetCpuBankSegment1::cpuBankIdx#1 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 dtvSetCpuBankSegment1::cpuBankIdx#1 ] ) -- vbuz1=vbuz2 
    lda gfxbCpuBank
    sta dtvSetCpuBankSegment1.cpuBankIdx
  //SEG238 [133] call dtvSetCpuBankSegment1 param-assignment [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] )
  //SEG239 [165] phi from mode_8bppchunkybmm::@10 to dtvSetCpuBankSegment1 [phi:mode_8bppchunkybmm::@10->dtvSetCpuBankSegment1]
  dtvSetCpuBankSegment1_from_b10:
  //SEG240 [165] phi (byte) dtvSetCpuBankSegment1::cpuBankIdx#3 = (byte) dtvSetCpuBankSegment1::cpuBankIdx#1 [phi:mode_8bppchunkybmm::@10->dtvSetCpuBankSegment1#0] -- register_copy 
    jsr dtvSetCpuBankSegment1
    jmp b19
  //SEG241 mode_8bppchunkybmm::@19
  b19:
  //SEG242 [134] (byte) mode_8bppchunkybmm::gfxbCpuBank#2 ← ++ (byte) mode_8bppchunkybmm::gfxbCpuBank#4 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#2 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#2 ] ) -- vbuz1=_inc_vbuz1 
    inc gfxbCpuBank
  //SEG243 [135] phi from mode_8bppchunkybmm::@19 to mode_8bppchunkybmm::@4 [phi:mode_8bppchunkybmm::@19->mode_8bppchunkybmm::@4]
  b4_from_b19:
  //SEG244 [135] phi (byte) mode_8bppchunkybmm::gfxbCpuBank#8 = (byte) mode_8bppchunkybmm::gfxbCpuBank#2 [phi:mode_8bppchunkybmm::@19->mode_8bppchunkybmm::@4#0] -- register_copy 
  //SEG245 [135] phi (byte*) mode_8bppchunkybmm::gfxb#4 = ((byte*))(word/signed word/dword/signed dword) 16384 [phi:mode_8bppchunkybmm::@19->mode_8bppchunkybmm::@4#1] -- pbuz1=pbuc1 
    lda #<$4000
    sta gfxb
    lda #>$4000
    sta gfxb+1
    jmp b4
  //SEG246 [135] phi from mode_8bppchunkybmm::@3 to mode_8bppchunkybmm::@4 [phi:mode_8bppchunkybmm::@3->mode_8bppchunkybmm::@4]
  b4_from_b3:
  //SEG247 [135] phi (byte) mode_8bppchunkybmm::gfxbCpuBank#8 = (byte) mode_8bppchunkybmm::gfxbCpuBank#4 [phi:mode_8bppchunkybmm::@3->mode_8bppchunkybmm::@4#0] -- register_copy 
  //SEG248 [135] phi (byte*) mode_8bppchunkybmm::gfxb#4 = (byte*) mode_8bppchunkybmm::gfxb#3 [phi:mode_8bppchunkybmm::@3->mode_8bppchunkybmm::@4#1] -- register_copy 
    jmp b4
  //SEG249 mode_8bppchunkybmm::@4
  b4:
  //SEG250 [136] (word~) mode_8bppchunkybmm::$20 ← (word) mode_8bppchunkybmm::x#2 + (byte) mode_8bppchunkybmm::y#6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::$20 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::$20 ] ) -- vwuz1=vwuz2_plus_vbuz3 
    lda y
    clc
    adc x
    sta _20
    lda #0
    adc x+1
    sta _20+1
  //SEG251 [137] (byte) mode_8bppchunkybmm::c#0 ← ((byte)) (word~) mode_8bppchunkybmm::$20 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::c#0 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::c#0 ] ) -- vbuz1=_byte_vwuz2 
    lda _20
    sta c
  //SEG252 [138] *((byte*) mode_8bppchunkybmm::gfxb#4) ← (byte) mode_8bppchunkybmm::c#0 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 ] ) -- _deref_pbuz1=vbuz2 
    lda c
    ldy #0
    sta (gfxb),y
  //SEG253 [139] (byte*) mode_8bppchunkybmm::gfxb#1 ← ++ (byte*) mode_8bppchunkybmm::gfxb#4 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxb
    bne !+
    inc gfxb+1
  !:
  //SEG254 [140] (word) mode_8bppchunkybmm::x#1 ← ++ (word) mode_8bppchunkybmm::x#2 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#1 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#1 ] ) -- vwuz1=_inc_vwuz1 
    inc x
    bne !+
    inc x+1
  !:
  //SEG255 [141] if((word) mode_8bppchunkybmm::x#1!=(word/signed word/dword/signed dword) 320) goto mode_8bppchunkybmm::@3 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#1 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#1 ] ) -- vwuz1_neq_vwuc1_then_la1 
    lda x+1
    cmp #>$140
    bne b3_from_b4
    lda x
    cmp #<$140
    bne b3_from_b4
    jmp b11
  //SEG256 mode_8bppchunkybmm::@11
  b11:
  //SEG257 [142] (byte) mode_8bppchunkybmm::y#1 ← ++ (byte) mode_8bppchunkybmm::y#6 [ mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::y#1 mode_8bppchunkybmm::gfxbCpuBank#8 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::y#1 mode_8bppchunkybmm::gfxbCpuBank#8 ] ) -- vbuz1=_inc_vbuz1 
    inc y
  //SEG258 [143] if((byte) mode_8bppchunkybmm::y#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_8bppchunkybmm::@2 [ mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::y#1 mode_8bppchunkybmm::gfxbCpuBank#8 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::y#1 mode_8bppchunkybmm::gfxbCpuBank#8 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda y
    cmp #$c8
    bne b2_from_b11
  //SEG259 [144] phi from mode_8bppchunkybmm::@11 to mode_8bppchunkybmm::@12 [phi:mode_8bppchunkybmm::@11->mode_8bppchunkybmm::@12]
  b12_from_b11:
    jmp b12
  //SEG260 mode_8bppchunkybmm::@12
  b12:
  //SEG261 [145] call dtvSetCpuBankSegment1 param-assignment [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
  //SEG262 [165] phi from mode_8bppchunkybmm::@12 to dtvSetCpuBankSegment1 [phi:mode_8bppchunkybmm::@12->dtvSetCpuBankSegment1]
  dtvSetCpuBankSegment1_from_b12:
  //SEG263 [165] phi (byte) dtvSetCpuBankSegment1::cpuBankIdx#3 = ((byte))(word/signed word/dword/signed dword) 16384/(word/signed word/dword/signed dword) 16384 [phi:mode_8bppchunkybmm::@12->dtvSetCpuBankSegment1#0] -- vbuz1=vbuc1 
    lda #$4000/$4000
    sta dtvSetCpuBankSegment1.cpuBankIdx
    jsr dtvSetCpuBankSegment1
    jmp b5
  //SEG264 mode_8bppchunkybmm::@5
  b5:
  //SEG265 [146] if(true) goto mode_8bppchunkybmm::@6 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- true_then_la1 
    jmp b6_from_b5
    jmp breturn
  //SEG266 mode_8bppchunkybmm::@return
  breturn:
  //SEG267 [147] return  [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
    rts
  //SEG268 [148] phi from mode_8bppchunkybmm::@5 to mode_8bppchunkybmm::@6 [phi:mode_8bppchunkybmm::@5->mode_8bppchunkybmm::@6]
  b6_from_b5:
    jmp b6
  //SEG269 mode_8bppchunkybmm::@6
  b6:
  //SEG270 [149] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ keyboard_key_pressed::return#0 ] )
  //SEG271 [153] phi from mode_8bppchunkybmm::@6 to keyboard_key_pressed [phi:mode_8bppchunkybmm::@6->keyboard_key_pressed]
  keyboard_key_pressed_from_b6:
  //SEG272 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_8bppchunkybmm::@6->keyboard_key_pressed#0] -- vbuz1=vbuc1 
    lda #KEY_SPACE
    sta keyboard_key_pressed.key
    jsr keyboard_key_pressed
  //SEG273 [150] (byte) keyboard_key_pressed::return#23 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#23 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ keyboard_key_pressed::return#23 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return
    sta keyboard_key_pressed.return_23
    jmp b21
  //SEG274 mode_8bppchunkybmm::@21
  b21:
  //SEG275 [151] (byte~) mode_8bppchunkybmm::$27 ← (byte) keyboard_key_pressed::return#23 [ mode_8bppchunkybmm::$27 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::$27 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return_23
    sta _27
  //SEG276 [152] if((byte~) mode_8bppchunkybmm::$27==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_8bppchunkybmm::@5 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- vbuz1_eq_0_then_la1 
    lda _27
    beq b5
    jmp breturn
}
//SEG277 keyboard_key_pressed
keyboard_key_pressed: {
    .label _2 = $95
    .label colidx = $91
    .label rowidx = $92
    .label return = $96
    .label return_2 = $76
    .label return_10 = $86
    .label return_11 = $88
    .label return_12 = $8a
    .label return_13 = $dc
    .label return_14 = $d4
    .label return_15 = $cc
    .label return_16 = $c4
    .label return_17 = $be
    .label return_18 = $b8
    .label return_19 = $aa
    .label return_20 = $a3
    .label return_21 = $b2
    .label return_22 = $9d
    .label return_23 = $8f
    .label key = $c
    .label return_26 = $78
    .label return_27 = $7a
    .label return_28 = $7c
    .label return_29 = $7e
    .label return_30 = $80
    .label return_31 = $82
    .label return_32 = $84
  //SEG278 [154] (byte) keyboard_key_pressed::colidx#0 ← (byte) keyboard_key_pressed::key#22 & (byte/signed byte/word/signed word/dword/signed dword) 7 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #7
    and key
    sta colidx
  //SEG279 [155] (byte) keyboard_key_pressed::rowidx#0 ← (byte) keyboard_key_pressed::key#22 >> (byte/signed byte/word/signed word/dword/signed dword) 3 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] ) -- vbuz1=vbuz2_ror_3 
    lda key
    lsr
    lsr
    lsr
    sta rowidx
  //SEG280 [156] (byte) keyboard_matrix_read::rowid#0 ← (byte) keyboard_key_pressed::rowidx#0 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] ) -- vbuz1=vbuz2 
    lda rowidx
    sta keyboard_matrix_read.rowid
  //SEG281 [157] call keyboard_matrix_read param-assignment [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] )
    jsr keyboard_matrix_read
  //SEG282 [158] (byte) keyboard_matrix_read::return#2 ← (byte) keyboard_matrix_read::return#0 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] ) -- vbuz1=vbuz2 
    lda keyboard_matrix_read.return
    sta keyboard_matrix_read.return_2
    jmp b2
  //SEG283 keyboard_key_pressed::@2
  b2:
  //SEG284 [159] (byte~) keyboard_key_pressed::$2 ← (byte) keyboard_matrix_read::return#2 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] ) -- vbuz1=vbuz2 
    lda keyboard_matrix_read.return_2
    sta _2
  //SEG285 [160] (byte) keyboard_key_pressed::return#0 ← (byte~) keyboard_key_pressed::$2 & *((const byte[]) keyboard_matrix_col_bitmask#0 + (byte) keyboard_key_pressed::colidx#0) [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::return#0 ] ) -- vbuz1=vbuz2_band_pbuc1_derefidx_vbuz3 
    lda _2
    ldy colidx
    and keyboard_matrix_col_bitmask,y
    sta return
    jmp breturn
  //SEG286 keyboard_key_pressed::@return
  breturn:
  //SEG287 [161] return  [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::return#0 ] )
    rts
}
//SEG288 keyboard_matrix_read
keyboard_matrix_read: {
    .label return = $97
    .label rowid = $93
    .label return_2 = $94
  //SEG289 [162] *((const byte*) CIA1_PORT_A#0) ← *((const byte[8]) keyboard_matrix_row_bitmask#0 + (byte) keyboard_matrix_read::rowid#0) [ ] ( main:2::menu:9::keyboard_key_pressed:37::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:44::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:51::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:58::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:65::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:72::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:79::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:86::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:93::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:100::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:107::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] ) -- _deref_pbuc1=pbuc2_derefidx_vbuz1 
    ldy rowid
    lda keyboard_matrix_row_bitmask,y
    sta CIA1_PORT_A
  //SEG290 [163] (byte) keyboard_matrix_read::return#0 ← ~ *((const byte*) CIA1_PORT_B#0) [ keyboard_matrix_read::return#0 ] ( main:2::menu:9::keyboard_key_pressed:37::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:44::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:51::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:58::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:65::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:72::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:79::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:86::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:93::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:100::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:107::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] ) -- vbuz1=_bnot__deref_pbuc1 
    lda CIA1_PORT_B
    eor #$ff
    sta return
    jmp breturn
  //SEG291 keyboard_matrix_read::@return
  breturn:
  //SEG292 [164] return  [ keyboard_matrix_read::return#0 ] ( main:2::menu:9::keyboard_key_pressed:37::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:44::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:51::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:58::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:65::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:72::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:79::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:86::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:93::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:100::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:107::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] )
    rts
}
//SEG293 dtvSetCpuBankSegment1
dtvSetCpuBankSegment1: {
    .label cpuBank = $ff
    .label cpuBankIdx = $d
  //SEG294 [166] *((const byte*) dtvSetCpuBankSegment1::cpuBank#0) ← (byte) dtvSetCpuBankSegment1::cpuBankIdx#3 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:128 [ ] main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:133 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:145 [ ] ) -- _deref_pbuc1=vbuz1 
    lda cpuBankIdx
    sta cpuBank
  //SEG295 asm { .byte$32,$dd lda$ff .byte$32,$00  }
    .byte $32, $dd
    lda $ff
    .byte $32, $00
    jmp breturn
  //SEG296 dtvSetCpuBankSegment1::@return
  breturn:
  //SEG297 [168] return  [ ] ( main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:128 [ ] main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:133 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:145 [ ] )
    rts
}
//SEG298 mode_8bpppixelcell
mode_8bpppixelcell: {
    .label PLANEA = $3c00
    .label PLANEB = $4000
    .label _11 = $98
    .label _12 = $99
    .label _13 = $9a
    .label _14 = $9b
    .label _17 = $9c
    .label _24 = $9e
    .label i = $e
    .label gfxa = $11
    .label ax = $10
    .label ay = $f
    .label bits = $17
    .label chargen = $14
    .label gfxb = $18
    .label col = $1a
    .label cp = $1b
    .label cr = $16
    .label ch = $13
    .label c = $1c
  //SEG299 [169] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0|(const byte) DTV_CONTROL_CHUNKY_ON#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_CONTROL_HIGHCOLOR_ON|DTV_CONTROL_LINEAR_ADDRESSING_ON|DTV_CONTROL_CHUNKY_ON
    sta DTV_CONTROL
  //SEG300 [170] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_ECM|VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG301 [171] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_MCM|VIC_CSEL
    sta VIC_CONTROL2
  //SEG302 [172] *((const byte*) DTV_PLANEA_START_LO#0) ← <(const byte*) mode_8bpppixelcell::PLANEA#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<PLANEA
    sta DTV_PLANEA_START_LO
  //SEG303 [173] *((const byte*) DTV_PLANEA_START_MI#0) ← >(const byte*) mode_8bpppixelcell::PLANEA#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>PLANEA
    sta DTV_PLANEA_START_MI
  //SEG304 [174] *((const byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_START_HI
  //SEG305 [175] *((const byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #1
    sta DTV_PLANEA_STEP
  //SEG306 [176] *((const byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_MODULO_LO
  //SEG307 [177] *((const byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_MODULO_HI
  //SEG308 [178] *((const byte*) DTV_PLANEB_START_LO#0) ← <(const byte*) mode_8bpppixelcell::PLANEB#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<PLANEB
    sta DTV_PLANEB_START_LO
  //SEG309 [179] *((const byte*) DTV_PLANEB_START_MI#0) ← >(const byte*) mode_8bpppixelcell::PLANEB#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>PLANEB
    sta DTV_PLANEB_START_MI
  //SEG310 [180] *((const byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_START_HI
  //SEG311 [181] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_STEP
  //SEG312 [182] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_MODULO_LO
  //SEG313 [183] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_MODULO_HI
  //SEG314 [184] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG315 [185] phi from mode_8bpppixelcell to mode_8bpppixelcell::@1 [phi:mode_8bpppixelcell->mode_8bpppixelcell::@1]
  b1_from_mode_8bpppixelcell:
  //SEG316 [185] phi (byte) mode_8bpppixelcell::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bpppixelcell->mode_8bpppixelcell::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta i
    jmp b1
  //SEG317 [185] phi from mode_8bpppixelcell::@1 to mode_8bpppixelcell::@1 [phi:mode_8bpppixelcell::@1->mode_8bpppixelcell::@1]
  b1_from_b1:
  //SEG318 [185] phi (byte) mode_8bpppixelcell::i#2 = (byte) mode_8bpppixelcell::i#1 [phi:mode_8bpppixelcell::@1->mode_8bpppixelcell::@1#0] -- register_copy 
    jmp b1
  //SEG319 mode_8bpppixelcell::@1
  b1:
  //SEG320 [186] *((const byte*) DTV_PALETTE#0 + (byte) mode_8bpppixelcell::i#2) ← (byte) mode_8bpppixelcell::i#2 [ mode_8bpppixelcell::i#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::i#2 ] ) -- pbuc1_derefidx_vbuz1=vbuz1 
    ldy i
    tya
    sta DTV_PALETTE,y
  //SEG321 [187] (byte) mode_8bpppixelcell::i#1 ← ++ (byte) mode_8bpppixelcell::i#2 [ mode_8bpppixelcell::i#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::i#1 ] ) -- vbuz1=_inc_vbuz1 
    inc i
  //SEG322 [188] if((byte) mode_8bpppixelcell::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_8bpppixelcell::@1 [ mode_8bpppixelcell::i#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::i#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda i
    cmp #$10
    bne b1_from_b1
  //SEG323 [189] phi from mode_8bpppixelcell::@1 to mode_8bpppixelcell::@2 [phi:mode_8bpppixelcell::@1->mode_8bpppixelcell::@2]
  b2_from_b1:
  //SEG324 [189] phi (byte*) mode_8bpppixelcell::gfxa#3 = (const byte*) mode_8bpppixelcell::PLANEA#0 [phi:mode_8bpppixelcell::@1->mode_8bpppixelcell::@2#0] -- pbuz1=pbuc1 
    lda #<PLANEA
    sta gfxa
    lda #>PLANEA
    sta gfxa+1
  //SEG325 [189] phi (byte) mode_8bpppixelcell::ay#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bpppixelcell::@1->mode_8bpppixelcell::@2#1] -- vbuz1=vbuc1 
    lda #0
    sta ay
    jmp b2
  //SEG326 [189] phi from mode_8bpppixelcell::@13 to mode_8bpppixelcell::@2 [phi:mode_8bpppixelcell::@13->mode_8bpppixelcell::@2]
  b2_from_b13:
  //SEG327 [189] phi (byte*) mode_8bpppixelcell::gfxa#3 = (byte*) mode_8bpppixelcell::gfxa#1 [phi:mode_8bpppixelcell::@13->mode_8bpppixelcell::@2#0] -- register_copy 
  //SEG328 [189] phi (byte) mode_8bpppixelcell::ay#4 = (byte) mode_8bpppixelcell::ay#1 [phi:mode_8bpppixelcell::@13->mode_8bpppixelcell::@2#1] -- register_copy 
    jmp b2
  //SEG329 mode_8bpppixelcell::@2
  b2:
  //SEG330 [190] phi from mode_8bpppixelcell::@2 to mode_8bpppixelcell::@3 [phi:mode_8bpppixelcell::@2->mode_8bpppixelcell::@3]
  b3_from_b2:
  //SEG331 [190] phi (byte*) mode_8bpppixelcell::gfxa#2 = (byte*) mode_8bpppixelcell::gfxa#3 [phi:mode_8bpppixelcell::@2->mode_8bpppixelcell::@3#0] -- register_copy 
  //SEG332 [190] phi (byte) mode_8bpppixelcell::ax#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bpppixelcell::@2->mode_8bpppixelcell::@3#1] -- vbuz1=vbuc1 
    lda #0
    sta ax
    jmp b3
  //SEG333 [190] phi from mode_8bpppixelcell::@3 to mode_8bpppixelcell::@3 [phi:mode_8bpppixelcell::@3->mode_8bpppixelcell::@3]
  b3_from_b3:
  //SEG334 [190] phi (byte*) mode_8bpppixelcell::gfxa#2 = (byte*) mode_8bpppixelcell::gfxa#1 [phi:mode_8bpppixelcell::@3->mode_8bpppixelcell::@3#0] -- register_copy 
  //SEG335 [190] phi (byte) mode_8bpppixelcell::ax#2 = (byte) mode_8bpppixelcell::ax#1 [phi:mode_8bpppixelcell::@3->mode_8bpppixelcell::@3#1] -- register_copy 
    jmp b3
  //SEG336 mode_8bpppixelcell::@3
  b3:
  //SEG337 [191] (byte~) mode_8bpppixelcell::$11 ← (byte) mode_8bpppixelcell::ay#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$11 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$11 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and ay
    sta _11
  //SEG338 [192] (byte~) mode_8bpppixelcell::$12 ← (byte~) mode_8bpppixelcell::$11 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$12 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$12 ] ) -- vbuz1=vbuz2_rol_4 
    lda _11
    asl
    asl
    asl
    asl
    sta _12
  //SEG339 [193] (byte~) mode_8bpppixelcell::$13 ← (byte) mode_8bpppixelcell::ax#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$12 mode_8bpppixelcell::$13 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$12 mode_8bpppixelcell::$13 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and ax
    sta _13
  //SEG340 [194] (byte~) mode_8bpppixelcell::$14 ← (byte~) mode_8bpppixelcell::$12 | (byte~) mode_8bpppixelcell::$13 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$14 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$14 ] ) -- vbuz1=vbuz2_bor_vbuz3 
    lda _12
    ora _13
    sta _14
  //SEG341 [195] *((byte*) mode_8bpppixelcell::gfxa#2) ← (byte~) mode_8bpppixelcell::$14 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 ] ) -- _deref_pbuz1=vbuz2 
    lda _14
    ldy #0
    sta (gfxa),y
  //SEG342 [196] (byte*) mode_8bpppixelcell::gfxa#1 ← ++ (byte*) mode_8bpppixelcell::gfxa#2 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::ax#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::ax#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxa
    bne !+
    inc gfxa+1
  !:
  //SEG343 [197] (byte) mode_8bpppixelcell::ax#1 ← ++ (byte) mode_8bpppixelcell::ax#2 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::ax#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::ax#1 ] ) -- vbuz1=_inc_vbuz1 
    inc ax
  //SEG344 [198] if((byte) mode_8bpppixelcell::ax#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_8bpppixelcell::@3 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::ax#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::ax#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda ax
    cmp #$28
    bne b3_from_b3
    jmp b13
  //SEG345 mode_8bpppixelcell::@13
  b13:
  //SEG346 [199] (byte) mode_8bpppixelcell::ay#1 ← ++ (byte) mode_8bpppixelcell::ay#4 [ mode_8bpppixelcell::ay#1 mode_8bpppixelcell::gfxa#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#1 mode_8bpppixelcell::gfxa#1 ] ) -- vbuz1=_inc_vbuz1 
    inc ay
  //SEG347 [200] if((byte) mode_8bpppixelcell::ay#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_8bpppixelcell::@2 [ mode_8bpppixelcell::ay#1 mode_8bpppixelcell::gfxa#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#1 mode_8bpppixelcell::gfxa#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda ay
    cmp #$19
    bne b2_from_b13
    jmp b14
  //SEG348 mode_8bpppixelcell::@14
  b14:
  //SEG349 [201] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 50 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$32
    sta PROCPORT
  //SEG350 [202] phi from mode_8bpppixelcell::@14 to mode_8bpppixelcell::@4 [phi:mode_8bpppixelcell::@14->mode_8bpppixelcell::@4]
  b4_from_b14:
  //SEG351 [202] phi (byte) mode_8bpppixelcell::ch#8 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bpppixelcell::@14->mode_8bpppixelcell::@4#0] -- vbuz1=vbuc1 
    lda #0
    sta ch
  //SEG352 [202] phi (byte) mode_8bpppixelcell::col#7 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bpppixelcell::@14->mode_8bpppixelcell::@4#1] -- vbuz1=vbuc1 
    lda #0
    sta col
  //SEG353 [202] phi (byte*) mode_8bpppixelcell::gfxb#7 = (const byte*) mode_8bpppixelcell::PLANEB#0 [phi:mode_8bpppixelcell::@14->mode_8bpppixelcell::@4#2] -- pbuz1=pbuc1 
    lda #<PLANEB
    sta gfxb
    lda #>PLANEB
    sta gfxb+1
  //SEG354 [202] phi (byte*) mode_8bpppixelcell::chargen#4 = ((byte*))(word/dword/signed dword) 53248 [phi:mode_8bpppixelcell::@14->mode_8bpppixelcell::@4#3] -- pbuz1=pbuc1 
    lda #<$d000
    sta chargen
    lda #>$d000
    sta chargen+1
    jmp b4
  //SEG355 [202] phi from mode_8bpppixelcell::@17 to mode_8bpppixelcell::@4 [phi:mode_8bpppixelcell::@17->mode_8bpppixelcell::@4]
  b4_from_b17:
  //SEG356 [202] phi (byte) mode_8bpppixelcell::ch#8 = (byte) mode_8bpppixelcell::ch#1 [phi:mode_8bpppixelcell::@17->mode_8bpppixelcell::@4#0] -- register_copy 
  //SEG357 [202] phi (byte) mode_8bpppixelcell::col#7 = (byte) mode_8bpppixelcell::col#1 [phi:mode_8bpppixelcell::@17->mode_8bpppixelcell::@4#1] -- register_copy 
  //SEG358 [202] phi (byte*) mode_8bpppixelcell::gfxb#7 = (byte*) mode_8bpppixelcell::gfxb#1 [phi:mode_8bpppixelcell::@17->mode_8bpppixelcell::@4#2] -- register_copy 
  //SEG359 [202] phi (byte*) mode_8bpppixelcell::chargen#4 = (byte*) mode_8bpppixelcell::chargen#1 [phi:mode_8bpppixelcell::@17->mode_8bpppixelcell::@4#3] -- register_copy 
    jmp b4
  //SEG360 mode_8bpppixelcell::@4
  b4:
  //SEG361 [203] phi from mode_8bpppixelcell::@4 to mode_8bpppixelcell::@5 [phi:mode_8bpppixelcell::@4->mode_8bpppixelcell::@5]
  b5_from_b4:
  //SEG362 [203] phi (byte) mode_8bpppixelcell::cr#6 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bpppixelcell::@4->mode_8bpppixelcell::@5#0] -- vbuz1=vbuc1 
    lda #0
    sta cr
  //SEG363 [203] phi (byte) mode_8bpppixelcell::col#5 = (byte) mode_8bpppixelcell::col#7 [phi:mode_8bpppixelcell::@4->mode_8bpppixelcell::@5#1] -- register_copy 
  //SEG364 [203] phi (byte*) mode_8bpppixelcell::gfxb#5 = (byte*) mode_8bpppixelcell::gfxb#7 [phi:mode_8bpppixelcell::@4->mode_8bpppixelcell::@5#2] -- register_copy 
  //SEG365 [203] phi (byte*) mode_8bpppixelcell::chargen#2 = (byte*) mode_8bpppixelcell::chargen#4 [phi:mode_8bpppixelcell::@4->mode_8bpppixelcell::@5#3] -- register_copy 
    jmp b5
  //SEG366 [203] phi from mode_8bpppixelcell::@16 to mode_8bpppixelcell::@5 [phi:mode_8bpppixelcell::@16->mode_8bpppixelcell::@5]
  b5_from_b16:
  //SEG367 [203] phi (byte) mode_8bpppixelcell::cr#6 = (byte) mode_8bpppixelcell::cr#1 [phi:mode_8bpppixelcell::@16->mode_8bpppixelcell::@5#0] -- register_copy 
  //SEG368 [203] phi (byte) mode_8bpppixelcell::col#5 = (byte) mode_8bpppixelcell::col#1 [phi:mode_8bpppixelcell::@16->mode_8bpppixelcell::@5#1] -- register_copy 
  //SEG369 [203] phi (byte*) mode_8bpppixelcell::gfxb#5 = (byte*) mode_8bpppixelcell::gfxb#1 [phi:mode_8bpppixelcell::@16->mode_8bpppixelcell::@5#2] -- register_copy 
  //SEG370 [203] phi (byte*) mode_8bpppixelcell::chargen#2 = (byte*) mode_8bpppixelcell::chargen#1 [phi:mode_8bpppixelcell::@16->mode_8bpppixelcell::@5#3] -- register_copy 
    jmp b5
  //SEG371 mode_8bpppixelcell::@5
  b5:
  //SEG372 [204] (byte) mode_8bpppixelcell::bits#0 ← *((byte*) mode_8bpppixelcell::chargen#2) [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#0 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#0 ] ) -- vbuz1=_deref_pbuz2 
    ldy #0
    lda (chargen),y
    sta bits
  //SEG373 [205] (byte*) mode_8bpppixelcell::chargen#1 ← ++ (byte*) mode_8bpppixelcell::chargen#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#0 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#0 ] ) -- pbuz1=_inc_pbuz1 
    inc chargen
    bne !+
    inc chargen+1
  !:
  //SEG374 [206] phi from mode_8bpppixelcell::@5 to mode_8bpppixelcell::@6 [phi:mode_8bpppixelcell::@5->mode_8bpppixelcell::@6]
  b6_from_b5:
  //SEG375 [206] phi (byte) mode_8bpppixelcell::cp#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bpppixelcell::@5->mode_8bpppixelcell::@6#0] -- vbuz1=vbuc1 
    lda #0
    sta cp
  //SEG376 [206] phi (byte) mode_8bpppixelcell::col#2 = (byte) mode_8bpppixelcell::col#5 [phi:mode_8bpppixelcell::@5->mode_8bpppixelcell::@6#1] -- register_copy 
  //SEG377 [206] phi (byte*) mode_8bpppixelcell::gfxb#2 = (byte*) mode_8bpppixelcell::gfxb#5 [phi:mode_8bpppixelcell::@5->mode_8bpppixelcell::@6#2] -- register_copy 
  //SEG378 [206] phi (byte) mode_8bpppixelcell::bits#2 = (byte) mode_8bpppixelcell::bits#0 [phi:mode_8bpppixelcell::@5->mode_8bpppixelcell::@6#3] -- register_copy 
    jmp b6
  //SEG379 [206] phi from mode_8bpppixelcell::@7 to mode_8bpppixelcell::@6 [phi:mode_8bpppixelcell::@7->mode_8bpppixelcell::@6]
  b6_from_b7:
  //SEG380 [206] phi (byte) mode_8bpppixelcell::cp#2 = (byte) mode_8bpppixelcell::cp#1 [phi:mode_8bpppixelcell::@7->mode_8bpppixelcell::@6#0] -- register_copy 
  //SEG381 [206] phi (byte) mode_8bpppixelcell::col#2 = (byte) mode_8bpppixelcell::col#1 [phi:mode_8bpppixelcell::@7->mode_8bpppixelcell::@6#1] -- register_copy 
  //SEG382 [206] phi (byte*) mode_8bpppixelcell::gfxb#2 = (byte*) mode_8bpppixelcell::gfxb#1 [phi:mode_8bpppixelcell::@7->mode_8bpppixelcell::@6#2] -- register_copy 
  //SEG383 [206] phi (byte) mode_8bpppixelcell::bits#2 = (byte) mode_8bpppixelcell::bits#1 [phi:mode_8bpppixelcell::@7->mode_8bpppixelcell::@6#3] -- register_copy 
    jmp b6
  //SEG384 mode_8bpppixelcell::@6
  b6:
  //SEG385 [207] (byte~) mode_8bpppixelcell::$17 ← (byte) mode_8bpppixelcell::bits#2 & (byte/word/signed word/dword/signed dword) 128 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::$17 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::$17 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #$80
    and bits
    sta _17
  //SEG386 [208] if((byte~) mode_8bpppixelcell::$17==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_8bpppixelcell::@7 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ) -- vbuz1_eq_0_then_la1 
    lda _17
    beq b7_from_b6
    jmp b15
  //SEG387 mode_8bpppixelcell::@15
  b15:
  //SEG388 [209] (byte~) mode_8bpppixelcell::c#3 ← (byte) mode_8bpppixelcell::col#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::c#3 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::c#3 ] ) -- vbuz1=vbuz2 
    lda col
    sta c
  //SEG389 [210] phi from mode_8bpppixelcell::@15 to mode_8bpppixelcell::@7 [phi:mode_8bpppixelcell::@15->mode_8bpppixelcell::@7]
  b7_from_b15:
  //SEG390 [210] phi (byte) mode_8bpppixelcell::c#2 = (byte~) mode_8bpppixelcell::c#3 [phi:mode_8bpppixelcell::@15->mode_8bpppixelcell::@7#0] -- register_copy 
    jmp b7
  //SEG391 [210] phi from mode_8bpppixelcell::@6 to mode_8bpppixelcell::@7 [phi:mode_8bpppixelcell::@6->mode_8bpppixelcell::@7]
  b7_from_b6:
  //SEG392 [210] phi (byte) mode_8bpppixelcell::c#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bpppixelcell::@6->mode_8bpppixelcell::@7#0] -- vbuz1=vbuc1 
    lda #0
    sta c
    jmp b7
  //SEG393 mode_8bpppixelcell::@7
  b7:
  //SEG394 [211] *((byte*) mode_8bpppixelcell::gfxb#2) ← (byte) mode_8bpppixelcell::c#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ) -- _deref_pbuz1=vbuz2 
    lda c
    ldy #0
    sta (gfxb),y
  //SEG395 [212] (byte*) mode_8bpppixelcell::gfxb#1 ← ++ (byte*) mode_8bpppixelcell::gfxb#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxb
    bne !+
    inc gfxb+1
  !:
  //SEG396 [213] (byte) mode_8bpppixelcell::bits#1 ← (byte) mode_8bpppixelcell::bits#2 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::bits#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::bits#1 ] ) -- vbuz1=vbuz1_rol_1 
    asl bits
  //SEG397 [214] (byte) mode_8bpppixelcell::col#1 ← ++ (byte) mode_8bpppixelcell::col#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::bits#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::bits#1 ] ) -- vbuz1=_inc_vbuz1 
    inc col
  //SEG398 [215] (byte) mode_8bpppixelcell::cp#1 ← ++ (byte) mode_8bpppixelcell::cp#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#1 mode_8bpppixelcell::cp#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#1 mode_8bpppixelcell::cp#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cp
  //SEG399 [216] if((byte) mode_8bpppixelcell::cp#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto mode_8bpppixelcell::@6 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#1 mode_8bpppixelcell::cp#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#1 mode_8bpppixelcell::cp#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cp
    cmp #8
    bne b6_from_b7
    jmp b16
  //SEG400 mode_8bpppixelcell::@16
  b16:
  //SEG401 [217] (byte) mode_8bpppixelcell::cr#1 ← ++ (byte) mode_8bpppixelcell::cr#6 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cr
  //SEG402 [218] if((byte) mode_8bpppixelcell::cr#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto mode_8bpppixelcell::@5 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cr
    cmp #8
    bne b5_from_b16
    jmp b17
  //SEG403 mode_8bpppixelcell::@17
  b17:
  //SEG404 [219] (byte) mode_8bpppixelcell::ch#1 ← ++ (byte) mode_8bpppixelcell::ch#8 [ mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::ch#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::ch#1 ] ) -- vbuz1=_inc_vbuz1 
    inc ch
  //SEG405 [220] if((byte) mode_8bpppixelcell::ch#1!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_8bpppixelcell::@4 [ mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::ch#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::ch#1 ] ) -- vbuz1_neq_0_then_la1 
    lda ch
    bne b4_from_b17
    jmp b18
  //SEG406 mode_8bpppixelcell::@18
  b18:
  //SEG407 [221] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 55 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$37
    sta PROCPORT
    jmp b8
  //SEG408 mode_8bpppixelcell::@8
  b8:
  //SEG409 [222] if(true) goto mode_8bpppixelcell::@9 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- true_then_la1 
    jmp b9_from_b8
    jmp breturn
  //SEG410 mode_8bpppixelcell::@return
  breturn:
  //SEG411 [223] return  [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] )
    rts
  //SEG412 [224] phi from mode_8bpppixelcell::@8 to mode_8bpppixelcell::@9 [phi:mode_8bpppixelcell::@8->mode_8bpppixelcell::@9]
  b9_from_b8:
    jmp b9
  //SEG413 mode_8bpppixelcell::@9
  b9:
  //SEG414 [225] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ keyboard_key_pressed::return#0 ] )
  //SEG415 [153] phi from mode_8bpppixelcell::@9 to keyboard_key_pressed [phi:mode_8bpppixelcell::@9->keyboard_key_pressed]
  keyboard_key_pressed_from_b9:
  //SEG416 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_8bpppixelcell::@9->keyboard_key_pressed#0] -- vbuz1=vbuc1 
    lda #KEY_SPACE
    sta keyboard_key_pressed.key
    jsr keyboard_key_pressed
  //SEG417 [226] (byte) keyboard_key_pressed::return#22 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#22 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ keyboard_key_pressed::return#22 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return
    sta keyboard_key_pressed.return_22
    jmp b24
  //SEG418 mode_8bpppixelcell::@24
  b24:
  //SEG419 [227] (byte~) mode_8bpppixelcell::$24 ← (byte) keyboard_key_pressed::return#22 [ mode_8bpppixelcell::$24 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::$24 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return_22
    sta _24
  //SEG420 [228] if((byte~) mode_8bpppixelcell::$24==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_8bpppixelcell::@8 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- vbuz1_eq_0_then_la1 
    lda _24
    beq b8
    jmp breturn
}
//SEG421 mode_sixsfred
mode_sixsfred: {
    .label PLANEA = $4000
    .label PLANEB = $6000
    .label COLORS = $8000
    .label _15 = $9f
    .label _16 = $a0
    .label _19 = $a1
    .label _25 = $a4
    .label i = $1d
    .label col = $20
    .label cx = $1f
    .label cy = $1e
    .label row = $a2
    .label gfxa = $23
    .label ax = $25
    .label ay = $22
    .label gfxb = $27
    .label bx = $29
    .label by = $26
  //SEG422 [229] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_CONTROL_HIGHCOLOR_ON|DTV_CONTROL_LINEAR_ADDRESSING_ON
    sta DTV_CONTROL
  //SEG423 [230] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_ECM|VIC_BMM|VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG424 [231] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_MCM|VIC_CSEL
    sta VIC_CONTROL2
  //SEG425 [232] *((const byte*) DTV_PLANEA_START_LO#0) ← <(const byte*) mode_sixsfred::PLANEA#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<PLANEA
    sta DTV_PLANEA_START_LO
  //SEG426 [233] *((const byte*) DTV_PLANEA_START_MI#0) ← >(const byte*) mode_sixsfred::PLANEA#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>PLANEA
    sta DTV_PLANEA_START_MI
  //SEG427 [234] *((const byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_START_HI
  //SEG428 [235] *((const byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #1
    sta DTV_PLANEA_STEP
  //SEG429 [236] *((const byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_MODULO_LO
  //SEG430 [237] *((const byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_MODULO_HI
  //SEG431 [238] *((const byte*) DTV_PLANEB_START_LO#0) ← <(const byte*) mode_sixsfred::PLANEB#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<PLANEB
    sta DTV_PLANEB_START_LO
  //SEG432 [239] *((const byte*) DTV_PLANEB_START_MI#0) ← >(const byte*) mode_sixsfred::PLANEB#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>PLANEB
    sta DTV_PLANEB_START_MI
  //SEG433 [240] *((const byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_START_HI
  //SEG434 [241] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #1
    sta DTV_PLANEB_STEP
  //SEG435 [242] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_MODULO_LO
  //SEG436 [243] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_MODULO_HI
  //SEG437 [244] *((const byte*) DTV_COLOR_BANK_LO#0) ← <(const byte*) mode_sixsfred::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG438 [245] *((const byte*) DTV_COLOR_BANK_HI#0) ← >(const byte*) mode_sixsfred::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>COLORS/$400
    sta DTV_COLOR_BANK_HI
  //SEG439 [246] phi from mode_sixsfred to mode_sixsfred::@1 [phi:mode_sixsfred->mode_sixsfred::@1]
  b1_from_mode_sixsfred:
  //SEG440 [246] phi (byte) mode_sixsfred::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred->mode_sixsfred::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta i
    jmp b1
  //SEG441 [246] phi from mode_sixsfred::@1 to mode_sixsfred::@1 [phi:mode_sixsfred::@1->mode_sixsfred::@1]
  b1_from_b1:
  //SEG442 [246] phi (byte) mode_sixsfred::i#2 = (byte) mode_sixsfred::i#1 [phi:mode_sixsfred::@1->mode_sixsfred::@1#0] -- register_copy 
    jmp b1
  //SEG443 mode_sixsfred::@1
  b1:
  //SEG444 [247] *((const byte*) DTV_PALETTE#0 + (byte) mode_sixsfred::i#2) ← (byte) mode_sixsfred::i#2 [ mode_sixsfred::i#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::i#2 ] ) -- pbuc1_derefidx_vbuz1=vbuz1 
    ldy i
    tya
    sta DTV_PALETTE,y
  //SEG445 [248] (byte) mode_sixsfred::i#1 ← ++ (byte) mode_sixsfred::i#2 [ mode_sixsfred::i#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::i#1 ] ) -- vbuz1=_inc_vbuz1 
    inc i
  //SEG446 [249] if((byte) mode_sixsfred::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_sixsfred::@1 [ mode_sixsfred::i#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::i#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda i
    cmp #$10
    bne b1_from_b1
    jmp b12
  //SEG447 mode_sixsfred::@12
  b12:
  //SEG448 [250] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG449 [251] phi from mode_sixsfred::@12 to mode_sixsfred::@2 [phi:mode_sixsfred::@12->mode_sixsfred::@2]
  b2_from_b12:
  //SEG450 [251] phi (byte*) mode_sixsfred::col#3 = (const byte*) mode_sixsfred::COLORS#0 [phi:mode_sixsfred::@12->mode_sixsfred::@2#0] -- pbuz1=pbuc1 
    lda #<COLORS
    sta col
    lda #>COLORS
    sta col+1
  //SEG451 [251] phi (byte) mode_sixsfred::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred::@12->mode_sixsfred::@2#1] -- vbuz1=vbuc1 
    lda #0
    sta cy
    jmp b2
  //SEG452 [251] phi from mode_sixsfred::@13 to mode_sixsfred::@2 [phi:mode_sixsfred::@13->mode_sixsfred::@2]
  b2_from_b13:
  //SEG453 [251] phi (byte*) mode_sixsfred::col#3 = (byte*) mode_sixsfred::col#1 [phi:mode_sixsfred::@13->mode_sixsfred::@2#0] -- register_copy 
  //SEG454 [251] phi (byte) mode_sixsfred::cy#4 = (byte) mode_sixsfred::cy#1 [phi:mode_sixsfred::@13->mode_sixsfred::@2#1] -- register_copy 
    jmp b2
  //SEG455 mode_sixsfred::@2
  b2:
  //SEG456 [252] phi from mode_sixsfred::@2 to mode_sixsfred::@3 [phi:mode_sixsfred::@2->mode_sixsfred::@3]
  b3_from_b2:
  //SEG457 [252] phi (byte*) mode_sixsfred::col#2 = (byte*) mode_sixsfred::col#3 [phi:mode_sixsfred::@2->mode_sixsfred::@3#0] -- register_copy 
  //SEG458 [252] phi (byte) mode_sixsfred::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred::@2->mode_sixsfred::@3#1] -- vbuz1=vbuc1 
    lda #0
    sta cx
    jmp b3
  //SEG459 [252] phi from mode_sixsfred::@3 to mode_sixsfred::@3 [phi:mode_sixsfred::@3->mode_sixsfred::@3]
  b3_from_b3:
  //SEG460 [252] phi (byte*) mode_sixsfred::col#2 = (byte*) mode_sixsfred::col#1 [phi:mode_sixsfred::@3->mode_sixsfred::@3#0] -- register_copy 
  //SEG461 [252] phi (byte) mode_sixsfred::cx#2 = (byte) mode_sixsfred::cx#1 [phi:mode_sixsfred::@3->mode_sixsfred::@3#1] -- register_copy 
    jmp b3
  //SEG462 mode_sixsfred::@3
  b3:
  //SEG463 [253] (byte~) mode_sixsfred::$15 ← (byte) mode_sixsfred::cx#2 + (byte) mode_sixsfred::cy#4 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 mode_sixsfred::$15 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 mode_sixsfred::$15 ] ) -- vbuz1=vbuz2_plus_vbuz3 
    lda cx
    clc
    adc cy
    sta _15
  //SEG464 [254] (byte~) mode_sixsfred::$16 ← (byte~) mode_sixsfred::$15 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 mode_sixsfred::$16 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 mode_sixsfred::$16 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and _15
    sta _16
  //SEG465 [255] *((byte*) mode_sixsfred::col#2) ← (byte~) mode_sixsfred::$16 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 ] ) -- _deref_pbuz1=vbuz2 
    lda _16
    ldy #0
    sta (col),y
  //SEG466 [256] (byte*) mode_sixsfred::col#1 ← ++ (byte*) mode_sixsfred::col#2 [ mode_sixsfred::cy#4 mode_sixsfred::col#1 mode_sixsfred::cx#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::col#1 mode_sixsfred::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG467 [257] (byte) mode_sixsfred::cx#1 ← ++ (byte) mode_sixsfred::cx#2 [ mode_sixsfred::cy#4 mode_sixsfred::col#1 mode_sixsfred::cx#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::col#1 mode_sixsfred::cx#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cx
  //SEG468 [258] if((byte) mode_sixsfred::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred::@3 [ mode_sixsfred::cy#4 mode_sixsfred::col#1 mode_sixsfred::cx#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::col#1 mode_sixsfred::cx#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cx
    cmp #$28
    bne b3_from_b3
    jmp b13
  //SEG469 mode_sixsfred::@13
  b13:
  //SEG470 [259] (byte) mode_sixsfred::cy#1 ← ++ (byte) mode_sixsfred::cy#4 [ mode_sixsfred::cy#1 mode_sixsfred::col#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#1 mode_sixsfred::col#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG471 [260] if((byte) mode_sixsfred::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_sixsfred::@2 [ mode_sixsfred::cy#1 mode_sixsfred::col#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#1 mode_sixsfred::col#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2_from_b13
  //SEG472 [261] phi from mode_sixsfred::@13 to mode_sixsfred::@4 [phi:mode_sixsfred::@13->mode_sixsfred::@4]
  b4_from_b13:
  //SEG473 [261] phi (byte*) mode_sixsfred::gfxa#3 = (const byte*) mode_sixsfred::PLANEA#0 [phi:mode_sixsfred::@13->mode_sixsfred::@4#0] -- pbuz1=pbuc1 
    lda #<PLANEA
    sta gfxa
    lda #>PLANEA
    sta gfxa+1
  //SEG474 [261] phi (byte) mode_sixsfred::ay#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred::@13->mode_sixsfred::@4#1] -- vbuz1=vbuc1 
    lda #0
    sta ay
    jmp b4
  //SEG475 [261] phi from mode_sixsfred::@15 to mode_sixsfred::@4 [phi:mode_sixsfred::@15->mode_sixsfred::@4]
  b4_from_b15:
  //SEG476 [261] phi (byte*) mode_sixsfred::gfxa#3 = (byte*) mode_sixsfred::gfxa#1 [phi:mode_sixsfred::@15->mode_sixsfred::@4#0] -- register_copy 
  //SEG477 [261] phi (byte) mode_sixsfred::ay#4 = (byte) mode_sixsfred::ay#1 [phi:mode_sixsfred::@15->mode_sixsfred::@4#1] -- register_copy 
    jmp b4
  //SEG478 mode_sixsfred::@4
  b4:
  //SEG479 [262] phi from mode_sixsfred::@4 to mode_sixsfred::@5 [phi:mode_sixsfred::@4->mode_sixsfred::@5]
  b5_from_b4:
  //SEG480 [262] phi (byte) mode_sixsfred::ax#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred::@4->mode_sixsfred::@5#0] -- vbuz1=vbuc1 
    lda #0
    sta ax
  //SEG481 [262] phi (byte*) mode_sixsfred::gfxa#2 = (byte*) mode_sixsfred::gfxa#3 [phi:mode_sixsfred::@4->mode_sixsfred::@5#1] -- register_copy 
    jmp b5
  //SEG482 [262] phi from mode_sixsfred::@5 to mode_sixsfred::@5 [phi:mode_sixsfred::@5->mode_sixsfred::@5]
  b5_from_b5:
  //SEG483 [262] phi (byte) mode_sixsfred::ax#2 = (byte) mode_sixsfred::ax#1 [phi:mode_sixsfred::@5->mode_sixsfred::@5#0] -- register_copy 
  //SEG484 [262] phi (byte*) mode_sixsfred::gfxa#2 = (byte*) mode_sixsfred::gfxa#1 [phi:mode_sixsfred::@5->mode_sixsfred::@5#1] -- register_copy 
    jmp b5
  //SEG485 mode_sixsfred::@5
  b5:
  //SEG486 [263] (byte~) mode_sixsfred::$19 ← (byte) mode_sixsfred::ay#4 >> (byte/signed byte/word/signed word/dword/signed dword) 1 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 mode_sixsfred::$19 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 mode_sixsfred::$19 ] ) -- vbuz1=vbuz2_ror_1 
    lda ay
    lsr
    sta _19
  //SEG487 [264] (byte) mode_sixsfred::row#0 ← (byte~) mode_sixsfred::$19 & (byte/signed byte/word/signed word/dword/signed dword) 3 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 mode_sixsfred::row#0 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 mode_sixsfred::row#0 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #3
    and _19
    sta row
  //SEG488 [265] *((byte*) mode_sixsfred::gfxa#2) ← *((const byte[]) mode_sixsfred::row_bitmask#0 + (byte) mode_sixsfred::row#0) [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 ] ) -- _deref_pbuz1=pbuc1_derefidx_vbuz2 
    ldy row
    lda row_bitmask,y
    ldy #0
    sta (gfxa),y
  //SEG489 [266] (byte*) mode_sixsfred::gfxa#1 ← ++ (byte*) mode_sixsfred::gfxa#2 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#1 mode_sixsfred::ax#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#1 mode_sixsfred::ax#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxa
    bne !+
    inc gfxa+1
  !:
  //SEG490 [267] (byte) mode_sixsfred::ax#1 ← ++ (byte) mode_sixsfred::ax#2 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#1 mode_sixsfred::ax#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#1 mode_sixsfred::ax#1 ] ) -- vbuz1=_inc_vbuz1 
    inc ax
  //SEG491 [268] if((byte) mode_sixsfred::ax#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred::@5 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#1 mode_sixsfred::ax#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#1 mode_sixsfred::ax#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda ax
    cmp #$28
    bne b5_from_b5
    jmp b15
  //SEG492 mode_sixsfred::@15
  b15:
  //SEG493 [269] (byte) mode_sixsfred::ay#1 ← ++ (byte) mode_sixsfred::ay#4 [ mode_sixsfred::ay#1 mode_sixsfred::gfxa#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#1 mode_sixsfred::gfxa#1 ] ) -- vbuz1=_inc_vbuz1 
    inc ay
  //SEG494 [270] if((byte) mode_sixsfred::ay#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_sixsfred::@4 [ mode_sixsfred::ay#1 mode_sixsfred::gfxa#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#1 mode_sixsfred::gfxa#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda ay
    cmp #$c8
    bne b4_from_b15
  //SEG495 [271] phi from mode_sixsfred::@15 to mode_sixsfred::@6 [phi:mode_sixsfred::@15->mode_sixsfred::@6]
  b6_from_b15:
  //SEG496 [271] phi (byte) mode_sixsfred::by#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred::@15->mode_sixsfred::@6#0] -- vbuz1=vbuc1 
    lda #0
    sta by
  //SEG497 [271] phi (byte*) mode_sixsfred::gfxb#3 = (const byte*) mode_sixsfred::PLANEB#0 [phi:mode_sixsfred::@15->mode_sixsfred::@6#1] -- pbuz1=pbuc1 
    lda #<PLANEB
    sta gfxb
    lda #>PLANEB
    sta gfxb+1
    jmp b6
  //SEG498 [271] phi from mode_sixsfred::@17 to mode_sixsfred::@6 [phi:mode_sixsfred::@17->mode_sixsfred::@6]
  b6_from_b17:
  //SEG499 [271] phi (byte) mode_sixsfred::by#4 = (byte) mode_sixsfred::by#1 [phi:mode_sixsfred::@17->mode_sixsfred::@6#0] -- register_copy 
  //SEG500 [271] phi (byte*) mode_sixsfred::gfxb#3 = (byte*) mode_sixsfred::gfxb#1 [phi:mode_sixsfred::@17->mode_sixsfred::@6#1] -- register_copy 
    jmp b6
  //SEG501 mode_sixsfred::@6
  b6:
  //SEG502 [272] phi from mode_sixsfred::@6 to mode_sixsfred::@7 [phi:mode_sixsfred::@6->mode_sixsfred::@7]
  b7_from_b6:
  //SEG503 [272] phi (byte) mode_sixsfred::bx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred::@6->mode_sixsfred::@7#0] -- vbuz1=vbuc1 
    lda #0
    sta bx
  //SEG504 [272] phi (byte*) mode_sixsfred::gfxb#2 = (byte*) mode_sixsfred::gfxb#3 [phi:mode_sixsfred::@6->mode_sixsfred::@7#1] -- register_copy 
    jmp b7
  //SEG505 [272] phi from mode_sixsfred::@7 to mode_sixsfred::@7 [phi:mode_sixsfred::@7->mode_sixsfred::@7]
  b7_from_b7:
  //SEG506 [272] phi (byte) mode_sixsfred::bx#2 = (byte) mode_sixsfred::bx#1 [phi:mode_sixsfred::@7->mode_sixsfred::@7#0] -- register_copy 
  //SEG507 [272] phi (byte*) mode_sixsfred::gfxb#2 = (byte*) mode_sixsfred::gfxb#1 [phi:mode_sixsfred::@7->mode_sixsfred::@7#1] -- register_copy 
    jmp b7
  //SEG508 mode_sixsfred::@7
  b7:
  //SEG509 [273] *((byte*) mode_sixsfred::gfxb#2) ← (byte/signed byte/word/signed word/dword/signed dword) 27 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#2 mode_sixsfred::bx#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#2 mode_sixsfred::bx#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #$1b
    ldy #0
    sta (gfxb),y
  //SEG510 [274] (byte*) mode_sixsfred::gfxb#1 ← ++ (byte*) mode_sixsfred::gfxb#2 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#1 mode_sixsfred::bx#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#1 mode_sixsfred::bx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxb
    bne !+
    inc gfxb+1
  !:
  //SEG511 [275] (byte) mode_sixsfred::bx#1 ← ++ (byte) mode_sixsfred::bx#2 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#1 mode_sixsfred::bx#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#1 mode_sixsfred::bx#1 ] ) -- vbuz1=_inc_vbuz1 
    inc bx
  //SEG512 [276] if((byte) mode_sixsfred::bx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred::@7 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#1 mode_sixsfred::bx#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#1 mode_sixsfred::bx#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda bx
    cmp #$28
    bne b7_from_b7
    jmp b17
  //SEG513 mode_sixsfred::@17
  b17:
  //SEG514 [277] (byte) mode_sixsfred::by#1 ← ++ (byte) mode_sixsfred::by#4 [ mode_sixsfred::gfxb#1 mode_sixsfred::by#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::gfxb#1 mode_sixsfred::by#1 ] ) -- vbuz1=_inc_vbuz1 
    inc by
  //SEG515 [278] if((byte) mode_sixsfred::by#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_sixsfred::@6 [ mode_sixsfred::gfxb#1 mode_sixsfred::by#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::gfxb#1 mode_sixsfred::by#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda by
    cmp #$c8
    bne b6_from_b17
    jmp b8
  //SEG516 mode_sixsfred::@8
  b8:
  //SEG517 [279] if(true) goto mode_sixsfred::@9 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- true_then_la1 
    jmp b9_from_b8
    jmp breturn
  //SEG518 mode_sixsfred::@return
  breturn:
  //SEG519 [280] return  [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] )
    rts
  //SEG520 [281] phi from mode_sixsfred::@8 to mode_sixsfred::@9 [phi:mode_sixsfred::@8->mode_sixsfred::@9]
  b9_from_b8:
    jmp b9
  //SEG521 mode_sixsfred::@9
  b9:
  //SEG522 [282] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_sixsfred:98 [ keyboard_key_pressed::return#0 ] )
  //SEG523 [153] phi from mode_sixsfred::@9 to keyboard_key_pressed [phi:mode_sixsfred::@9->keyboard_key_pressed]
  keyboard_key_pressed_from_b9:
  //SEG524 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_sixsfred::@9->keyboard_key_pressed#0] -- vbuz1=vbuc1 
    lda #KEY_SPACE
    sta keyboard_key_pressed.key
    jsr keyboard_key_pressed
  //SEG525 [283] (byte) keyboard_key_pressed::return#20 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#20 ] ( main:2::menu:9::mode_sixsfred:98 [ keyboard_key_pressed::return#20 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return
    sta keyboard_key_pressed.return_20
    jmp b24
  //SEG526 mode_sixsfred::@24
  b24:
  //SEG527 [284] (byte~) mode_sixsfred::$25 ← (byte) keyboard_key_pressed::return#20 [ mode_sixsfred::$25 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::$25 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return_20
    sta _25
  //SEG528 [285] if((byte~) mode_sixsfred::$25==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_sixsfred::@8 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- vbuz1_eq_0_then_la1 
    lda _25
    beq b8
    jmp breturn
    row_bitmask: .byte 0, $55, $aa, $ff
}
//SEG529 mode_twoplanebitmap
mode_twoplanebitmap: {
    .label PLANEA = $4000
    .label PLANEB = $6000
    .label COLORS = $8000
    .label _14 = $a5
    .label _15 = $a6
    .label _16 = $a7
    .label _17 = $a8
    .label _20 = $a9
    .label _27 = $ab
    .label i = $2a
    .label col = $2d
    .label cx = $2c
    .label cy = $2b
    .label gfxa = $30
    .label ax = $32
    .label ay = $2f
    .label gfxb = $34
    .label bx = $36
    .label by = $33
  //SEG530 [286] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_CONTROL_HIGHCOLOR_ON|DTV_CONTROL_LINEAR_ADDRESSING_ON
    sta DTV_CONTROL
  //SEG531 [287] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_ECM|VIC_BMM|VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG532 [288] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_CSEL
    sta VIC_CONTROL2
  //SEG533 [289] *((const byte*) DTV_PLANEA_START_LO#0) ← <(const byte*) mode_twoplanebitmap::PLANEA#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<PLANEA
    sta DTV_PLANEA_START_LO
  //SEG534 [290] *((const byte*) DTV_PLANEA_START_MI#0) ← >(const byte*) mode_twoplanebitmap::PLANEA#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>PLANEA
    sta DTV_PLANEA_START_MI
  //SEG535 [291] *((const byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_START_HI
  //SEG536 [292] *((const byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #1
    sta DTV_PLANEA_STEP
  //SEG537 [293] *((const byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_MODULO_LO
  //SEG538 [294] *((const byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_MODULO_HI
  //SEG539 [295] *((const byte*) DTV_PLANEB_START_LO#0) ← <(const byte*) mode_twoplanebitmap::PLANEB#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<PLANEB
    sta DTV_PLANEB_START_LO
  //SEG540 [296] *((const byte*) DTV_PLANEB_START_MI#0) ← >(const byte*) mode_twoplanebitmap::PLANEB#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>PLANEB
    sta DTV_PLANEB_START_MI
  //SEG541 [297] *((const byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_START_HI
  //SEG542 [298] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #1
    sta DTV_PLANEB_STEP
  //SEG543 [299] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_MODULO_LO
  //SEG544 [300] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_MODULO_HI
  //SEG545 [301] *((const byte*) DTV_COLOR_BANK_LO#0) ← <(const byte*) mode_twoplanebitmap::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG546 [302] *((const byte*) DTV_COLOR_BANK_HI#0) ← >(const byte*) mode_twoplanebitmap::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>COLORS/$400
    sta DTV_COLOR_BANK_HI
  //SEG547 [303] phi from mode_twoplanebitmap to mode_twoplanebitmap::@1 [phi:mode_twoplanebitmap->mode_twoplanebitmap::@1]
  b1_from_mode_twoplanebitmap:
  //SEG548 [303] phi (byte) mode_twoplanebitmap::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_twoplanebitmap->mode_twoplanebitmap::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta i
    jmp b1
  //SEG549 [303] phi from mode_twoplanebitmap::@1 to mode_twoplanebitmap::@1 [phi:mode_twoplanebitmap::@1->mode_twoplanebitmap::@1]
  b1_from_b1:
  //SEG550 [303] phi (byte) mode_twoplanebitmap::i#2 = (byte) mode_twoplanebitmap::i#1 [phi:mode_twoplanebitmap::@1->mode_twoplanebitmap::@1#0] -- register_copy 
    jmp b1
  //SEG551 mode_twoplanebitmap::@1
  b1:
  //SEG552 [304] *((const byte*) DTV_PALETTE#0 + (byte) mode_twoplanebitmap::i#2) ← (byte) mode_twoplanebitmap::i#2 [ mode_twoplanebitmap::i#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::i#2 ] ) -- pbuc1_derefidx_vbuz1=vbuz1 
    ldy i
    tya
    sta DTV_PALETTE,y
  //SEG553 [305] (byte) mode_twoplanebitmap::i#1 ← ++ (byte) mode_twoplanebitmap::i#2 [ mode_twoplanebitmap::i#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::i#1 ] ) -- vbuz1=_inc_vbuz1 
    inc i
  //SEG554 [306] if((byte) mode_twoplanebitmap::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_twoplanebitmap::@1 [ mode_twoplanebitmap::i#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::i#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda i
    cmp #$10
    bne b1_from_b1
    jmp b14
  //SEG555 mode_twoplanebitmap::@14
  b14:
  //SEG556 [307] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG557 [308] *((const byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 112 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$70
    sta BGCOL1
  //SEG558 [309] *((const byte*) BGCOL2#0) ← (byte/word/signed word/dword/signed dword) 212 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$d4
    sta BGCOL2
  //SEG559 [310] phi from mode_twoplanebitmap::@14 to mode_twoplanebitmap::@2 [phi:mode_twoplanebitmap::@14->mode_twoplanebitmap::@2]
  b2_from_b14:
  //SEG560 [310] phi (byte*) mode_twoplanebitmap::col#3 = (const byte*) mode_twoplanebitmap::COLORS#0 [phi:mode_twoplanebitmap::@14->mode_twoplanebitmap::@2#0] -- pbuz1=pbuc1 
    lda #<COLORS
    sta col
    lda #>COLORS
    sta col+1
  //SEG561 [310] phi (byte) mode_twoplanebitmap::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_twoplanebitmap::@14->mode_twoplanebitmap::@2#1] -- vbuz1=vbuc1 
    lda #0
    sta cy
    jmp b2
  //SEG562 [310] phi from mode_twoplanebitmap::@15 to mode_twoplanebitmap::@2 [phi:mode_twoplanebitmap::@15->mode_twoplanebitmap::@2]
  b2_from_b15:
  //SEG563 [310] phi (byte*) mode_twoplanebitmap::col#3 = (byte*) mode_twoplanebitmap::col#1 [phi:mode_twoplanebitmap::@15->mode_twoplanebitmap::@2#0] -- register_copy 
  //SEG564 [310] phi (byte) mode_twoplanebitmap::cy#4 = (byte) mode_twoplanebitmap::cy#1 [phi:mode_twoplanebitmap::@15->mode_twoplanebitmap::@2#1] -- register_copy 
    jmp b2
  //SEG565 mode_twoplanebitmap::@2
  b2:
  //SEG566 [311] phi from mode_twoplanebitmap::@2 to mode_twoplanebitmap::@3 [phi:mode_twoplanebitmap::@2->mode_twoplanebitmap::@3]
  b3_from_b2:
  //SEG567 [311] phi (byte*) mode_twoplanebitmap::col#2 = (byte*) mode_twoplanebitmap::col#3 [phi:mode_twoplanebitmap::@2->mode_twoplanebitmap::@3#0] -- register_copy 
  //SEG568 [311] phi (byte) mode_twoplanebitmap::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_twoplanebitmap::@2->mode_twoplanebitmap::@3#1] -- vbuz1=vbuc1 
    lda #0
    sta cx
    jmp b3
  //SEG569 [311] phi from mode_twoplanebitmap::@3 to mode_twoplanebitmap::@3 [phi:mode_twoplanebitmap::@3->mode_twoplanebitmap::@3]
  b3_from_b3:
  //SEG570 [311] phi (byte*) mode_twoplanebitmap::col#2 = (byte*) mode_twoplanebitmap::col#1 [phi:mode_twoplanebitmap::@3->mode_twoplanebitmap::@3#0] -- register_copy 
  //SEG571 [311] phi (byte) mode_twoplanebitmap::cx#2 = (byte) mode_twoplanebitmap::cx#1 [phi:mode_twoplanebitmap::@3->mode_twoplanebitmap::@3#1] -- register_copy 
    jmp b3
  //SEG572 mode_twoplanebitmap::@3
  b3:
  //SEG573 [312] (byte~) mode_twoplanebitmap::$14 ← (byte) mode_twoplanebitmap::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$14 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$14 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and cy
    sta _14
  //SEG574 [313] (byte~) mode_twoplanebitmap::$15 ← (byte~) mode_twoplanebitmap::$14 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$15 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$15 ] ) -- vbuz1=vbuz2_rol_4 
    lda _14
    asl
    asl
    asl
    asl
    sta _15
  //SEG575 [314] (byte~) mode_twoplanebitmap::$16 ← (byte) mode_twoplanebitmap::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$15 mode_twoplanebitmap::$16 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$15 mode_twoplanebitmap::$16 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and cx
    sta _16
  //SEG576 [315] (byte~) mode_twoplanebitmap::$17 ← (byte~) mode_twoplanebitmap::$15 | (byte~) mode_twoplanebitmap::$16 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$17 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$17 ] ) -- vbuz1=vbuz2_bor_vbuz3 
    lda _15
    ora _16
    sta _17
  //SEG577 [316] *((byte*) mode_twoplanebitmap::col#2) ← (byte~) mode_twoplanebitmap::$17 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 ] ) -- _deref_pbuz1=vbuz2 
    lda _17
    ldy #0
    sta (col),y
  //SEG578 [317] (byte*) mode_twoplanebitmap::col#1 ← ++ (byte*) mode_twoplanebitmap::col#2 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#1 mode_twoplanebitmap::cx#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#1 mode_twoplanebitmap::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG579 [318] (byte) mode_twoplanebitmap::cx#1 ← ++ (byte) mode_twoplanebitmap::cx#2 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#1 mode_twoplanebitmap::cx#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#1 mode_twoplanebitmap::cx#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cx
  //SEG580 [319] if((byte) mode_twoplanebitmap::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_twoplanebitmap::@3 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#1 mode_twoplanebitmap::cx#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#1 mode_twoplanebitmap::cx#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cx
    cmp #$28
    bne b3_from_b3
    jmp b15
  //SEG581 mode_twoplanebitmap::@15
  b15:
  //SEG582 [320] (byte) mode_twoplanebitmap::cy#1 ← ++ (byte) mode_twoplanebitmap::cy#4 [ mode_twoplanebitmap::cy#1 mode_twoplanebitmap::col#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#1 mode_twoplanebitmap::col#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG583 [321] if((byte) mode_twoplanebitmap::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_twoplanebitmap::@2 [ mode_twoplanebitmap::cy#1 mode_twoplanebitmap::col#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#1 mode_twoplanebitmap::col#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2_from_b15
  //SEG584 [322] phi from mode_twoplanebitmap::@15 to mode_twoplanebitmap::@4 [phi:mode_twoplanebitmap::@15->mode_twoplanebitmap::@4]
  b4_from_b15:
  //SEG585 [322] phi (byte*) mode_twoplanebitmap::gfxa#6 = (const byte*) mode_twoplanebitmap::PLANEA#0 [phi:mode_twoplanebitmap::@15->mode_twoplanebitmap::@4#0] -- pbuz1=pbuc1 
    lda #<PLANEA
    sta gfxa
    lda #>PLANEA
    sta gfxa+1
  //SEG586 [322] phi (byte) mode_twoplanebitmap::ay#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_twoplanebitmap::@15->mode_twoplanebitmap::@4#1] -- vbuz1=vbuc1 
    lda #0
    sta ay
    jmp b4
  //SEG587 [322] phi from mode_twoplanebitmap::@19 to mode_twoplanebitmap::@4 [phi:mode_twoplanebitmap::@19->mode_twoplanebitmap::@4]
  b4_from_b19:
  //SEG588 [322] phi (byte*) mode_twoplanebitmap::gfxa#6 = (byte*) mode_twoplanebitmap::gfxa#7 [phi:mode_twoplanebitmap::@19->mode_twoplanebitmap::@4#0] -- register_copy 
  //SEG589 [322] phi (byte) mode_twoplanebitmap::ay#4 = (byte) mode_twoplanebitmap::ay#1 [phi:mode_twoplanebitmap::@19->mode_twoplanebitmap::@4#1] -- register_copy 
    jmp b4
  //SEG590 mode_twoplanebitmap::@4
  b4:
  //SEG591 [323] phi from mode_twoplanebitmap::@4 to mode_twoplanebitmap::@5 [phi:mode_twoplanebitmap::@4->mode_twoplanebitmap::@5]
  b5_from_b4:
  //SEG592 [323] phi (byte) mode_twoplanebitmap::ax#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_twoplanebitmap::@4->mode_twoplanebitmap::@5#0] -- vbuz1=vbuc1 
    lda #0
    sta ax
  //SEG593 [323] phi (byte*) mode_twoplanebitmap::gfxa#3 = (byte*) mode_twoplanebitmap::gfxa#6 [phi:mode_twoplanebitmap::@4->mode_twoplanebitmap::@5#1] -- register_copy 
    jmp b5
  //SEG594 [323] phi from mode_twoplanebitmap::@7 to mode_twoplanebitmap::@5 [phi:mode_twoplanebitmap::@7->mode_twoplanebitmap::@5]
  b5_from_b7:
  //SEG595 [323] phi (byte) mode_twoplanebitmap::ax#2 = (byte) mode_twoplanebitmap::ax#1 [phi:mode_twoplanebitmap::@7->mode_twoplanebitmap::@5#0] -- register_copy 
  //SEG596 [323] phi (byte*) mode_twoplanebitmap::gfxa#3 = (byte*) mode_twoplanebitmap::gfxa#7 [phi:mode_twoplanebitmap::@7->mode_twoplanebitmap::@5#1] -- register_copy 
    jmp b5
  //SEG597 mode_twoplanebitmap::@5
  b5:
  //SEG598 [324] (byte~) mode_twoplanebitmap::$20 ← (byte) mode_twoplanebitmap::ay#4 & (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::$20 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::$20 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #4
    and ay
    sta _20
  //SEG599 [325] if((byte~) mode_twoplanebitmap::$20!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_twoplanebitmap::@6 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ) -- vbuz1_neq_0_then_la1 
    lda _20
    bne b6
    jmp b17
  //SEG600 mode_twoplanebitmap::@17
  b17:
  //SEG601 [326] *((byte*) mode_twoplanebitmap::gfxa#3) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #0
    ldy #0
    sta (gfxa),y
  //SEG602 [327] (byte*) mode_twoplanebitmap::gfxa#2 ← ++ (byte*) mode_twoplanebitmap::gfxa#3 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::gfxa#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::gfxa#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxa
    bne !+
    inc gfxa+1
  !:
  //SEG603 [328] phi from mode_twoplanebitmap::@17 mode_twoplanebitmap::@6 to mode_twoplanebitmap::@7 [phi:mode_twoplanebitmap::@17/mode_twoplanebitmap::@6->mode_twoplanebitmap::@7]
  b7_from_b17:
  b7_from_b6:
  //SEG604 [328] phi (byte*) mode_twoplanebitmap::gfxa#7 = (byte*) mode_twoplanebitmap::gfxa#2 [phi:mode_twoplanebitmap::@17/mode_twoplanebitmap::@6->mode_twoplanebitmap::@7#0] -- register_copy 
    jmp b7
  //SEG605 mode_twoplanebitmap::@7
  b7:
  //SEG606 [329] (byte) mode_twoplanebitmap::ax#1 ← ++ (byte) mode_twoplanebitmap::ax#2 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::ax#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::ax#1 ] ) -- vbuz1=_inc_vbuz1 
    inc ax
  //SEG607 [330] if((byte) mode_twoplanebitmap::ax#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_twoplanebitmap::@5 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::ax#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::ax#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda ax
    cmp #$28
    bne b5_from_b7
    jmp b19
  //SEG608 mode_twoplanebitmap::@19
  b19:
  //SEG609 [331] (byte) mode_twoplanebitmap::ay#1 ← ++ (byte) mode_twoplanebitmap::ay#4 [ mode_twoplanebitmap::ay#1 mode_twoplanebitmap::gfxa#7 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#1 mode_twoplanebitmap::gfxa#7 ] ) -- vbuz1=_inc_vbuz1 
    inc ay
  //SEG610 [332] if((byte) mode_twoplanebitmap::ay#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_twoplanebitmap::@4 [ mode_twoplanebitmap::ay#1 mode_twoplanebitmap::gfxa#7 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#1 mode_twoplanebitmap::gfxa#7 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda ay
    cmp #$c8
    bne b4_from_b19
  //SEG611 [333] phi from mode_twoplanebitmap::@19 to mode_twoplanebitmap::@8 [phi:mode_twoplanebitmap::@19->mode_twoplanebitmap::@8]
  b8_from_b19:
  //SEG612 [333] phi (byte) mode_twoplanebitmap::by#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_twoplanebitmap::@19->mode_twoplanebitmap::@8#0] -- vbuz1=vbuc1 
    lda #0
    sta by
  //SEG613 [333] phi (byte*) mode_twoplanebitmap::gfxb#3 = (const byte*) mode_twoplanebitmap::PLANEB#0 [phi:mode_twoplanebitmap::@19->mode_twoplanebitmap::@8#1] -- pbuz1=pbuc1 
    lda #<PLANEB
    sta gfxb
    lda #>PLANEB
    sta gfxb+1
    jmp b8
  //SEG614 [333] phi from mode_twoplanebitmap::@21 to mode_twoplanebitmap::@8 [phi:mode_twoplanebitmap::@21->mode_twoplanebitmap::@8]
  b8_from_b21:
  //SEG615 [333] phi (byte) mode_twoplanebitmap::by#4 = (byte) mode_twoplanebitmap::by#1 [phi:mode_twoplanebitmap::@21->mode_twoplanebitmap::@8#0] -- register_copy 
  //SEG616 [333] phi (byte*) mode_twoplanebitmap::gfxb#3 = (byte*) mode_twoplanebitmap::gfxb#1 [phi:mode_twoplanebitmap::@21->mode_twoplanebitmap::@8#1] -- register_copy 
    jmp b8
  //SEG617 mode_twoplanebitmap::@8
  b8:
  //SEG618 [334] phi from mode_twoplanebitmap::@8 to mode_twoplanebitmap::@9 [phi:mode_twoplanebitmap::@8->mode_twoplanebitmap::@9]
  b9_from_b8:
  //SEG619 [334] phi (byte) mode_twoplanebitmap::bx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_twoplanebitmap::@8->mode_twoplanebitmap::@9#0] -- vbuz1=vbuc1 
    lda #0
    sta bx
  //SEG620 [334] phi (byte*) mode_twoplanebitmap::gfxb#2 = (byte*) mode_twoplanebitmap::gfxb#3 [phi:mode_twoplanebitmap::@8->mode_twoplanebitmap::@9#1] -- register_copy 
    jmp b9
  //SEG621 [334] phi from mode_twoplanebitmap::@9 to mode_twoplanebitmap::@9 [phi:mode_twoplanebitmap::@9->mode_twoplanebitmap::@9]
  b9_from_b9:
  //SEG622 [334] phi (byte) mode_twoplanebitmap::bx#2 = (byte) mode_twoplanebitmap::bx#1 [phi:mode_twoplanebitmap::@9->mode_twoplanebitmap::@9#0] -- register_copy 
  //SEG623 [334] phi (byte*) mode_twoplanebitmap::gfxb#2 = (byte*) mode_twoplanebitmap::gfxb#1 [phi:mode_twoplanebitmap::@9->mode_twoplanebitmap::@9#1] -- register_copy 
    jmp b9
  //SEG624 mode_twoplanebitmap::@9
  b9:
  //SEG625 [335] *((byte*) mode_twoplanebitmap::gfxb#2) ← (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::bx#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::bx#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #$f
    ldy #0
    sta (gfxb),y
  //SEG626 [336] (byte*) mode_twoplanebitmap::gfxb#1 ← ++ (byte*) mode_twoplanebitmap::gfxb#2 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::bx#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::bx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxb
    bne !+
    inc gfxb+1
  !:
  //SEG627 [337] (byte) mode_twoplanebitmap::bx#1 ← ++ (byte) mode_twoplanebitmap::bx#2 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::bx#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::bx#1 ] ) -- vbuz1=_inc_vbuz1 
    inc bx
  //SEG628 [338] if((byte) mode_twoplanebitmap::bx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_twoplanebitmap::@9 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::bx#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::bx#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda bx
    cmp #$28
    bne b9_from_b9
    jmp b21
  //SEG629 mode_twoplanebitmap::@21
  b21:
  //SEG630 [339] (byte) mode_twoplanebitmap::by#1 ← ++ (byte) mode_twoplanebitmap::by#4 [ mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::by#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::by#1 ] ) -- vbuz1=_inc_vbuz1 
    inc by
  //SEG631 [340] if((byte) mode_twoplanebitmap::by#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_twoplanebitmap::@8 [ mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::by#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::by#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda by
    cmp #$c8
    bne b8_from_b21
    jmp b10
  //SEG632 mode_twoplanebitmap::@10
  b10:
  //SEG633 [341] if(true) goto mode_twoplanebitmap::@11 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- true_then_la1 
    jmp b11_from_b10
    jmp breturn
  //SEG634 mode_twoplanebitmap::@return
  breturn:
  //SEG635 [342] return  [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
    rts
  //SEG636 [343] phi from mode_twoplanebitmap::@10 to mode_twoplanebitmap::@11 [phi:mode_twoplanebitmap::@10->mode_twoplanebitmap::@11]
  b11_from_b10:
    jmp b11
  //SEG637 mode_twoplanebitmap::@11
  b11:
  //SEG638 [344] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ keyboard_key_pressed::return#0 ] )
  //SEG639 [153] phi from mode_twoplanebitmap::@11 to keyboard_key_pressed [phi:mode_twoplanebitmap::@11->keyboard_key_pressed]
  keyboard_key_pressed_from_b11:
  //SEG640 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_twoplanebitmap::@11->keyboard_key_pressed#0] -- vbuz1=vbuc1 
    lda #KEY_SPACE
    sta keyboard_key_pressed.key
    jsr keyboard_key_pressed
  //SEG641 [345] (byte) keyboard_key_pressed::return#19 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#19 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ keyboard_key_pressed::return#19 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return
    sta keyboard_key_pressed.return_19
    jmp b28
  //SEG642 mode_twoplanebitmap::@28
  b28:
  //SEG643 [346] (byte~) mode_twoplanebitmap::$27 ← (byte) keyboard_key_pressed::return#19 [ mode_twoplanebitmap::$27 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::$27 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return_19
    sta _27
  //SEG644 [347] if((byte~) mode_twoplanebitmap::$27==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_twoplanebitmap::@10 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- vbuz1_eq_0_then_la1 
    lda _27
    beq b10
    jmp breturn
  //SEG645 mode_twoplanebitmap::@6
  b6:
  //SEG646 [348] *((byte*) mode_twoplanebitmap::gfxa#3) ← (byte/word/signed word/dword/signed dword) 255 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #$ff
    ldy #0
    sta (gfxa),y
  //SEG647 [349] (byte*) mode_twoplanebitmap::gfxa#1 ← ++ (byte*) mode_twoplanebitmap::gfxa#3 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::gfxa#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::gfxa#1 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxa
    bne !+
    inc gfxa+1
  !:
    jmp b7_from_b6
}
//SEG648 mode_sixsfred2
mode_sixsfred2: {
    .label PLANEA = $4000
    .label PLANEB = $6000
    .label COLORS = $8000
    .label _14 = $ac
    .label _15 = $ad
    .label _16 = $ae
    .label _17 = $af
    .label _20 = $b0
    .label _26 = $b3
    .label i = $37
    .label col = $3a
    .label cx = $39
    .label cy = $38
    .label row = $b1
    .label gfxa = $3d
    .label ax = $3f
    .label ay = $3c
    .label gfxb = $41
    .label bx = $43
    .label by = $40
  //SEG649 [350] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_CONTROL_LINEAR_ADDRESSING_ON
    sta DTV_CONTROL
  //SEG650 [351] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_ECM|VIC_BMM|VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG651 [352] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_MCM|VIC_CSEL
    sta VIC_CONTROL2
  //SEG652 [353] *((const byte*) DTV_PLANEA_START_LO#0) ← <(const byte*) mode_sixsfred2::PLANEA#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<PLANEA
    sta DTV_PLANEA_START_LO
  //SEG653 [354] *((const byte*) DTV_PLANEA_START_MI#0) ← >(const byte*) mode_sixsfred2::PLANEA#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>PLANEA
    sta DTV_PLANEA_START_MI
  //SEG654 [355] *((const byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_START_HI
  //SEG655 [356] *((const byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #1
    sta DTV_PLANEA_STEP
  //SEG656 [357] *((const byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_MODULO_LO
  //SEG657 [358] *((const byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_MODULO_HI
  //SEG658 [359] *((const byte*) DTV_PLANEB_START_LO#0) ← <(const byte*) mode_sixsfred2::PLANEB#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<PLANEB
    sta DTV_PLANEB_START_LO
  //SEG659 [360] *((const byte*) DTV_PLANEB_START_MI#0) ← >(const byte*) mode_sixsfred2::PLANEB#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>PLANEB
    sta DTV_PLANEB_START_MI
  //SEG660 [361] *((const byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_START_HI
  //SEG661 [362] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #1
    sta DTV_PLANEB_STEP
  //SEG662 [363] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_MODULO_LO
  //SEG663 [364] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_MODULO_HI
  //SEG664 [365] *((const byte*) DTV_COLOR_BANK_LO#0) ← <(const byte*) mode_sixsfred2::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG665 [366] *((const byte*) DTV_COLOR_BANK_HI#0) ← >(const byte*) mode_sixsfred2::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>COLORS/$400
    sta DTV_COLOR_BANK_HI
  //SEG666 [367] phi from mode_sixsfred2 to mode_sixsfred2::@1 [phi:mode_sixsfred2->mode_sixsfred2::@1]
  b1_from_mode_sixsfred2:
  //SEG667 [367] phi (byte) mode_sixsfred2::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred2->mode_sixsfred2::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta i
    jmp b1
  //SEG668 [367] phi from mode_sixsfred2::@1 to mode_sixsfred2::@1 [phi:mode_sixsfred2::@1->mode_sixsfred2::@1]
  b1_from_b1:
  //SEG669 [367] phi (byte) mode_sixsfred2::i#2 = (byte) mode_sixsfred2::i#1 [phi:mode_sixsfred2::@1->mode_sixsfred2::@1#0] -- register_copy 
    jmp b1
  //SEG670 mode_sixsfred2::@1
  b1:
  //SEG671 [368] *((const byte*) DTV_PALETTE#0 + (byte) mode_sixsfred2::i#2) ← (byte) mode_sixsfred2::i#2 [ mode_sixsfred2::i#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::i#2 ] ) -- pbuc1_derefidx_vbuz1=vbuz1 
    ldy i
    tya
    sta DTV_PALETTE,y
  //SEG672 [369] (byte) mode_sixsfred2::i#1 ← ++ (byte) mode_sixsfred2::i#2 [ mode_sixsfred2::i#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::i#1 ] ) -- vbuz1=_inc_vbuz1 
    inc i
  //SEG673 [370] if((byte) mode_sixsfred2::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_sixsfred2::@1 [ mode_sixsfred2::i#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::i#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda i
    cmp #$10
    bne b1_from_b1
    jmp b12
  //SEG674 mode_sixsfred2::@12
  b12:
  //SEG675 [371] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG676 [372] phi from mode_sixsfred2::@12 to mode_sixsfred2::@2 [phi:mode_sixsfred2::@12->mode_sixsfred2::@2]
  b2_from_b12:
  //SEG677 [372] phi (byte*) mode_sixsfred2::col#3 = (const byte*) mode_sixsfred2::COLORS#0 [phi:mode_sixsfred2::@12->mode_sixsfred2::@2#0] -- pbuz1=pbuc1 
    lda #<COLORS
    sta col
    lda #>COLORS
    sta col+1
  //SEG678 [372] phi (byte) mode_sixsfred2::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred2::@12->mode_sixsfred2::@2#1] -- vbuz1=vbuc1 
    lda #0
    sta cy
    jmp b2
  //SEG679 [372] phi from mode_sixsfred2::@13 to mode_sixsfred2::@2 [phi:mode_sixsfred2::@13->mode_sixsfred2::@2]
  b2_from_b13:
  //SEG680 [372] phi (byte*) mode_sixsfred2::col#3 = (byte*) mode_sixsfred2::col#1 [phi:mode_sixsfred2::@13->mode_sixsfred2::@2#0] -- register_copy 
  //SEG681 [372] phi (byte) mode_sixsfred2::cy#4 = (byte) mode_sixsfred2::cy#1 [phi:mode_sixsfred2::@13->mode_sixsfred2::@2#1] -- register_copy 
    jmp b2
  //SEG682 mode_sixsfred2::@2
  b2:
  //SEG683 [373] phi from mode_sixsfred2::@2 to mode_sixsfred2::@3 [phi:mode_sixsfred2::@2->mode_sixsfred2::@3]
  b3_from_b2:
  //SEG684 [373] phi (byte*) mode_sixsfred2::col#2 = (byte*) mode_sixsfred2::col#3 [phi:mode_sixsfred2::@2->mode_sixsfred2::@3#0] -- register_copy 
  //SEG685 [373] phi (byte) mode_sixsfred2::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred2::@2->mode_sixsfred2::@3#1] -- vbuz1=vbuc1 
    lda #0
    sta cx
    jmp b3
  //SEG686 [373] phi from mode_sixsfred2::@3 to mode_sixsfred2::@3 [phi:mode_sixsfred2::@3->mode_sixsfred2::@3]
  b3_from_b3:
  //SEG687 [373] phi (byte*) mode_sixsfred2::col#2 = (byte*) mode_sixsfred2::col#1 [phi:mode_sixsfred2::@3->mode_sixsfred2::@3#0] -- register_copy 
  //SEG688 [373] phi (byte) mode_sixsfred2::cx#2 = (byte) mode_sixsfred2::cx#1 [phi:mode_sixsfred2::@3->mode_sixsfred2::@3#1] -- register_copy 
    jmp b3
  //SEG689 mode_sixsfred2::@3
  b3:
  //SEG690 [374] (byte~) mode_sixsfred2::$14 ← (byte) mode_sixsfred2::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 3 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$14 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$14 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #3
    and cx
    sta _14
  //SEG691 [375] (byte~) mode_sixsfred2::$15 ← (byte~) mode_sixsfred2::$14 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$15 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$15 ] ) -- vbuz1=vbuz2_rol_4 
    lda _14
    asl
    asl
    asl
    asl
    sta _15
  //SEG692 [376] (byte~) mode_sixsfred2::$16 ← (byte) mode_sixsfred2::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 3 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$15 mode_sixsfred2::$16 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$15 mode_sixsfred2::$16 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #3
    and cy
    sta _16
  //SEG693 [377] (byte~) mode_sixsfred2::$17 ← (byte~) mode_sixsfred2::$15 | (byte~) mode_sixsfred2::$16 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$17 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$17 ] ) -- vbuz1=vbuz2_bor_vbuz3 
    lda _15
    ora _16
    sta _17
  //SEG694 [378] *((byte*) mode_sixsfred2::col#2) ← (byte~) mode_sixsfred2::$17 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 ] ) -- _deref_pbuz1=vbuz2 
    lda _17
    ldy #0
    sta (col),y
  //SEG695 [379] (byte*) mode_sixsfred2::col#1 ← ++ (byte*) mode_sixsfred2::col#2 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#1 mode_sixsfred2::cx#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#1 mode_sixsfred2::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG696 [380] (byte) mode_sixsfred2::cx#1 ← ++ (byte) mode_sixsfred2::cx#2 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#1 mode_sixsfred2::cx#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#1 mode_sixsfred2::cx#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cx
  //SEG697 [381] if((byte) mode_sixsfred2::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred2::@3 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#1 mode_sixsfred2::cx#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#1 mode_sixsfred2::cx#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cx
    cmp #$28
    bne b3_from_b3
    jmp b13
  //SEG698 mode_sixsfred2::@13
  b13:
  //SEG699 [382] (byte) mode_sixsfred2::cy#1 ← ++ (byte) mode_sixsfred2::cy#4 [ mode_sixsfred2::cy#1 mode_sixsfred2::col#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#1 mode_sixsfred2::col#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG700 [383] if((byte) mode_sixsfred2::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_sixsfred2::@2 [ mode_sixsfred2::cy#1 mode_sixsfred2::col#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#1 mode_sixsfred2::col#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2_from_b13
  //SEG701 [384] phi from mode_sixsfred2::@13 to mode_sixsfred2::@4 [phi:mode_sixsfred2::@13->mode_sixsfred2::@4]
  b4_from_b13:
  //SEG702 [384] phi (byte*) mode_sixsfred2::gfxa#3 = (const byte*) mode_sixsfred2::PLANEA#0 [phi:mode_sixsfred2::@13->mode_sixsfred2::@4#0] -- pbuz1=pbuc1 
    lda #<PLANEA
    sta gfxa
    lda #>PLANEA
    sta gfxa+1
  //SEG703 [384] phi (byte) mode_sixsfred2::ay#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred2::@13->mode_sixsfred2::@4#1] -- vbuz1=vbuc1 
    lda #0
    sta ay
    jmp b4
  //SEG704 [384] phi from mode_sixsfred2::@15 to mode_sixsfred2::@4 [phi:mode_sixsfred2::@15->mode_sixsfred2::@4]
  b4_from_b15:
  //SEG705 [384] phi (byte*) mode_sixsfred2::gfxa#3 = (byte*) mode_sixsfred2::gfxa#1 [phi:mode_sixsfred2::@15->mode_sixsfred2::@4#0] -- register_copy 
  //SEG706 [384] phi (byte) mode_sixsfred2::ay#4 = (byte) mode_sixsfred2::ay#1 [phi:mode_sixsfred2::@15->mode_sixsfred2::@4#1] -- register_copy 
    jmp b4
  //SEG707 mode_sixsfred2::@4
  b4:
  //SEG708 [385] phi from mode_sixsfred2::@4 to mode_sixsfred2::@5 [phi:mode_sixsfred2::@4->mode_sixsfred2::@5]
  b5_from_b4:
  //SEG709 [385] phi (byte) mode_sixsfred2::ax#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred2::@4->mode_sixsfred2::@5#0] -- vbuz1=vbuc1 
    lda #0
    sta ax
  //SEG710 [385] phi (byte*) mode_sixsfred2::gfxa#2 = (byte*) mode_sixsfred2::gfxa#3 [phi:mode_sixsfred2::@4->mode_sixsfred2::@5#1] -- register_copy 
    jmp b5
  //SEG711 [385] phi from mode_sixsfred2::@5 to mode_sixsfred2::@5 [phi:mode_sixsfred2::@5->mode_sixsfred2::@5]
  b5_from_b5:
  //SEG712 [385] phi (byte) mode_sixsfred2::ax#2 = (byte) mode_sixsfred2::ax#1 [phi:mode_sixsfred2::@5->mode_sixsfred2::@5#0] -- register_copy 
  //SEG713 [385] phi (byte*) mode_sixsfred2::gfxa#2 = (byte*) mode_sixsfred2::gfxa#1 [phi:mode_sixsfred2::@5->mode_sixsfred2::@5#1] -- register_copy 
    jmp b5
  //SEG714 mode_sixsfred2::@5
  b5:
  //SEG715 [386] (byte~) mode_sixsfred2::$20 ← (byte) mode_sixsfred2::ay#4 >> (byte/signed byte/word/signed word/dword/signed dword) 1 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 mode_sixsfred2::$20 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 mode_sixsfred2::$20 ] ) -- vbuz1=vbuz2_ror_1 
    lda ay
    lsr
    sta _20
  //SEG716 [387] (byte) mode_sixsfred2::row#0 ← (byte~) mode_sixsfred2::$20 & (byte/signed byte/word/signed word/dword/signed dword) 3 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 mode_sixsfred2::row#0 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 mode_sixsfred2::row#0 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #3
    and _20
    sta row
  //SEG717 [388] *((byte*) mode_sixsfred2::gfxa#2) ← *((const byte[]) mode_sixsfred2::row_bitmask#0 + (byte) mode_sixsfred2::row#0) [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 ] ) -- _deref_pbuz1=pbuc1_derefidx_vbuz2 
    ldy row
    lda row_bitmask,y
    ldy #0
    sta (gfxa),y
  //SEG718 [389] (byte*) mode_sixsfred2::gfxa#1 ← ++ (byte*) mode_sixsfred2::gfxa#2 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#1 mode_sixsfred2::ax#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#1 mode_sixsfred2::ax#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxa
    bne !+
    inc gfxa+1
  !:
  //SEG719 [390] (byte) mode_sixsfred2::ax#1 ← ++ (byte) mode_sixsfred2::ax#2 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#1 mode_sixsfred2::ax#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#1 mode_sixsfred2::ax#1 ] ) -- vbuz1=_inc_vbuz1 
    inc ax
  //SEG720 [391] if((byte) mode_sixsfred2::ax#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred2::@5 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#1 mode_sixsfred2::ax#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#1 mode_sixsfred2::ax#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda ax
    cmp #$28
    bne b5_from_b5
    jmp b15
  //SEG721 mode_sixsfred2::@15
  b15:
  //SEG722 [392] (byte) mode_sixsfred2::ay#1 ← ++ (byte) mode_sixsfred2::ay#4 [ mode_sixsfred2::ay#1 mode_sixsfred2::gfxa#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#1 mode_sixsfred2::gfxa#1 ] ) -- vbuz1=_inc_vbuz1 
    inc ay
  //SEG723 [393] if((byte) mode_sixsfred2::ay#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_sixsfred2::@4 [ mode_sixsfred2::ay#1 mode_sixsfred2::gfxa#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#1 mode_sixsfred2::gfxa#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda ay
    cmp #$c8
    bne b4_from_b15
  //SEG724 [394] phi from mode_sixsfred2::@15 to mode_sixsfred2::@6 [phi:mode_sixsfred2::@15->mode_sixsfred2::@6]
  b6_from_b15:
  //SEG725 [394] phi (byte) mode_sixsfred2::by#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred2::@15->mode_sixsfred2::@6#0] -- vbuz1=vbuc1 
    lda #0
    sta by
  //SEG726 [394] phi (byte*) mode_sixsfred2::gfxb#3 = (const byte*) mode_sixsfred2::PLANEB#0 [phi:mode_sixsfred2::@15->mode_sixsfred2::@6#1] -- pbuz1=pbuc1 
    lda #<PLANEB
    sta gfxb
    lda #>PLANEB
    sta gfxb+1
    jmp b6
  //SEG727 [394] phi from mode_sixsfred2::@17 to mode_sixsfred2::@6 [phi:mode_sixsfred2::@17->mode_sixsfred2::@6]
  b6_from_b17:
  //SEG728 [394] phi (byte) mode_sixsfred2::by#4 = (byte) mode_sixsfred2::by#1 [phi:mode_sixsfred2::@17->mode_sixsfred2::@6#0] -- register_copy 
  //SEG729 [394] phi (byte*) mode_sixsfred2::gfxb#3 = (byte*) mode_sixsfred2::gfxb#1 [phi:mode_sixsfred2::@17->mode_sixsfred2::@6#1] -- register_copy 
    jmp b6
  //SEG730 mode_sixsfred2::@6
  b6:
  //SEG731 [395] phi from mode_sixsfred2::@6 to mode_sixsfred2::@7 [phi:mode_sixsfred2::@6->mode_sixsfred2::@7]
  b7_from_b6:
  //SEG732 [395] phi (byte) mode_sixsfred2::bx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred2::@6->mode_sixsfred2::@7#0] -- vbuz1=vbuc1 
    lda #0
    sta bx
  //SEG733 [395] phi (byte*) mode_sixsfred2::gfxb#2 = (byte*) mode_sixsfred2::gfxb#3 [phi:mode_sixsfred2::@6->mode_sixsfred2::@7#1] -- register_copy 
    jmp b7
  //SEG734 [395] phi from mode_sixsfred2::@7 to mode_sixsfred2::@7 [phi:mode_sixsfred2::@7->mode_sixsfred2::@7]
  b7_from_b7:
  //SEG735 [395] phi (byte) mode_sixsfred2::bx#2 = (byte) mode_sixsfred2::bx#1 [phi:mode_sixsfred2::@7->mode_sixsfred2::@7#0] -- register_copy 
  //SEG736 [395] phi (byte*) mode_sixsfred2::gfxb#2 = (byte*) mode_sixsfred2::gfxb#1 [phi:mode_sixsfred2::@7->mode_sixsfred2::@7#1] -- register_copy 
    jmp b7
  //SEG737 mode_sixsfred2::@7
  b7:
  //SEG738 [396] *((byte*) mode_sixsfred2::gfxb#2) ← (byte/signed byte/word/signed word/dword/signed dword) 27 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#2 mode_sixsfred2::bx#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#2 mode_sixsfred2::bx#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #$1b
    ldy #0
    sta (gfxb),y
  //SEG739 [397] (byte*) mode_sixsfred2::gfxb#1 ← ++ (byte*) mode_sixsfred2::gfxb#2 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#1 mode_sixsfred2::bx#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#1 mode_sixsfred2::bx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxb
    bne !+
    inc gfxb+1
  !:
  //SEG740 [398] (byte) mode_sixsfred2::bx#1 ← ++ (byte) mode_sixsfred2::bx#2 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#1 mode_sixsfred2::bx#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#1 mode_sixsfred2::bx#1 ] ) -- vbuz1=_inc_vbuz1 
    inc bx
  //SEG741 [399] if((byte) mode_sixsfred2::bx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred2::@7 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#1 mode_sixsfred2::bx#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#1 mode_sixsfred2::bx#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda bx
    cmp #$28
    bne b7_from_b7
    jmp b17
  //SEG742 mode_sixsfred2::@17
  b17:
  //SEG743 [400] (byte) mode_sixsfred2::by#1 ← ++ (byte) mode_sixsfred2::by#4 [ mode_sixsfred2::gfxb#1 mode_sixsfred2::by#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::gfxb#1 mode_sixsfred2::by#1 ] ) -- vbuz1=_inc_vbuz1 
    inc by
  //SEG744 [401] if((byte) mode_sixsfred2::by#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_sixsfred2::@6 [ mode_sixsfred2::gfxb#1 mode_sixsfred2::by#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::gfxb#1 mode_sixsfred2::by#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda by
    cmp #$c8
    bne b6_from_b17
    jmp b8
  //SEG745 mode_sixsfred2::@8
  b8:
  //SEG746 [402] if(true) goto mode_sixsfred2::@9 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- true_then_la1 
    jmp b9_from_b8
    jmp breturn
  //SEG747 mode_sixsfred2::@return
  breturn:
  //SEG748 [403] return  [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] )
    rts
  //SEG749 [404] phi from mode_sixsfred2::@8 to mode_sixsfred2::@9 [phi:mode_sixsfred2::@8->mode_sixsfred2::@9]
  b9_from_b8:
    jmp b9
  //SEG750 mode_sixsfred2::@9
  b9:
  //SEG751 [405] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_sixsfred2:84 [ keyboard_key_pressed::return#0 ] )
  //SEG752 [153] phi from mode_sixsfred2::@9 to keyboard_key_pressed [phi:mode_sixsfred2::@9->keyboard_key_pressed]
  keyboard_key_pressed_from_b9:
  //SEG753 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_sixsfred2::@9->keyboard_key_pressed#0] -- vbuz1=vbuc1 
    lda #KEY_SPACE
    sta keyboard_key_pressed.key
    jsr keyboard_key_pressed
  //SEG754 [406] (byte) keyboard_key_pressed::return#21 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#21 ] ( main:2::menu:9::mode_sixsfred2:84 [ keyboard_key_pressed::return#21 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return
    sta keyboard_key_pressed.return_21
    jmp b24
  //SEG755 mode_sixsfred2::@24
  b24:
  //SEG756 [407] (byte~) mode_sixsfred2::$26 ← (byte) keyboard_key_pressed::return#21 [ mode_sixsfred2::$26 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::$26 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return_21
    sta _26
  //SEG757 [408] if((byte~) mode_sixsfred2::$26==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_sixsfred2::@8 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- vbuz1_eq_0_then_la1 
    lda _26
    beq b8
    jmp breturn
    row_bitmask: .byte 0, $55, $aa, $ff
}
//SEG758 mode_hicolmcchar
mode_hicolmcchar: {
    .label SCREEN = $8000
    .label CHARSET = $9000
    .label COLORS = $8400
    .label _25 = $b4
    .label _26 = $b5
    .label _27 = $b6
    .label _31 = $b9
    .label i = $44
    .label v = $b7
    .label col = $47
    .label ch = $49
    .label cx = $46
    .label cy = $45
  //SEG759 [409] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_hicolmcchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #($ffffffff&CHARSET)/$10000
    sta DTV_GRAPHICS_VIC_BANK
  //SEG760 [410] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_hicolmcchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG761 [411] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_hicolmcchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_COLOR_BANK_HI
  //SEG762 [412] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_CONTROL_HIGHCOLOR_ON
    sta DTV_CONTROL
  //SEG763 [413] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3
    sta CIA2_PORT_A_DDR
  //SEG764 [414] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_hicolmcchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3^CHARSET/$4000
    sta CIA2_PORT_A
  //SEG765 [415] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG766 [416] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0|(const byte) VIC_MCM#0 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_CSEL|VIC_MCM
    sta VIC_CONTROL2
  //SEG767 [417] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_hicolmcchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_hicolmcchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #(SCREEN&$3fff)/$40|(CHARSET&$3fff)/$400
    sta VIC_MEMORY
  //SEG768 [418] phi from mode_hicolmcchar to mode_hicolmcchar::@1 [phi:mode_hicolmcchar->mode_hicolmcchar::@1]
  b1_from_mode_hicolmcchar:
  //SEG769 [418] phi (byte) mode_hicolmcchar::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolmcchar->mode_hicolmcchar::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta i
    jmp b1
  //SEG770 [418] phi from mode_hicolmcchar::@1 to mode_hicolmcchar::@1 [phi:mode_hicolmcchar::@1->mode_hicolmcchar::@1]
  b1_from_b1:
  //SEG771 [418] phi (byte) mode_hicolmcchar::i#2 = (byte) mode_hicolmcchar::i#1 [phi:mode_hicolmcchar::@1->mode_hicolmcchar::@1#0] -- register_copy 
    jmp b1
  //SEG772 mode_hicolmcchar::@1
  b1:
  //SEG773 [419] *((const byte*) DTV_PALETTE#0 + (byte) mode_hicolmcchar::i#2) ← (byte) mode_hicolmcchar::i#2 [ mode_hicolmcchar::i#2 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::i#2 ] ) -- pbuc1_derefidx_vbuz1=vbuz1 
    ldy i
    tya
    sta DTV_PALETTE,y
  //SEG774 [420] (byte) mode_hicolmcchar::i#1 ← ++ (byte) mode_hicolmcchar::i#2 [ mode_hicolmcchar::i#1 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::i#1 ] ) -- vbuz1=_inc_vbuz1 
    inc i
  //SEG775 [421] if((byte) mode_hicolmcchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_hicolmcchar::@1 [ mode_hicolmcchar::i#1 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::i#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda i
    cmp #$10
    bne b1_from_b1
    jmp b8
  //SEG776 mode_hicolmcchar::@8
  b8:
  //SEG777 [422] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG778 [423] *((const byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 80 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$50
    sta BGCOL1
  //SEG779 [424] *((const byte*) BGCOL2#0) ← (byte/signed byte/word/signed word/dword/signed dword) 84 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$54
    sta BGCOL2
  //SEG780 [425] *((const byte*) BGCOL3#0) ← (byte/signed byte/word/signed word/dword/signed dword) 88 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$58
    sta BGCOL3
  //SEG781 [426] phi from mode_hicolmcchar::@8 to mode_hicolmcchar::@2 [phi:mode_hicolmcchar::@8->mode_hicolmcchar::@2]
  b2_from_b8:
  //SEG782 [426] phi (byte*) mode_hicolmcchar::ch#3 = (const byte*) mode_hicolmcchar::SCREEN#0 [phi:mode_hicolmcchar::@8->mode_hicolmcchar::@2#0] -- pbuz1=pbuc1 
    lda #<SCREEN
    sta ch
    lda #>SCREEN
    sta ch+1
  //SEG783 [426] phi (byte*) mode_hicolmcchar::col#3 = (const byte*) mode_hicolmcchar::COLORS#0 [phi:mode_hicolmcchar::@8->mode_hicolmcchar::@2#1] -- pbuz1=pbuc1 
    lda #<COLORS
    sta col
    lda #>COLORS
    sta col+1
  //SEG784 [426] phi (byte) mode_hicolmcchar::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolmcchar::@8->mode_hicolmcchar::@2#2] -- vbuz1=vbuc1 
    lda #0
    sta cy
    jmp b2
  //SEG785 [426] phi from mode_hicolmcchar::@9 to mode_hicolmcchar::@2 [phi:mode_hicolmcchar::@9->mode_hicolmcchar::@2]
  b2_from_b9:
  //SEG786 [426] phi (byte*) mode_hicolmcchar::ch#3 = (byte*) mode_hicolmcchar::ch#1 [phi:mode_hicolmcchar::@9->mode_hicolmcchar::@2#0] -- register_copy 
  //SEG787 [426] phi (byte*) mode_hicolmcchar::col#3 = (byte*) mode_hicolmcchar::col#1 [phi:mode_hicolmcchar::@9->mode_hicolmcchar::@2#1] -- register_copy 
  //SEG788 [426] phi (byte) mode_hicolmcchar::cy#4 = (byte) mode_hicolmcchar::cy#1 [phi:mode_hicolmcchar::@9->mode_hicolmcchar::@2#2] -- register_copy 
    jmp b2
  //SEG789 mode_hicolmcchar::@2
  b2:
  //SEG790 [427] phi from mode_hicolmcchar::@2 to mode_hicolmcchar::@3 [phi:mode_hicolmcchar::@2->mode_hicolmcchar::@3]
  b3_from_b2:
  //SEG791 [427] phi (byte*) mode_hicolmcchar::ch#2 = (byte*) mode_hicolmcchar::ch#3 [phi:mode_hicolmcchar::@2->mode_hicolmcchar::@3#0] -- register_copy 
  //SEG792 [427] phi (byte*) mode_hicolmcchar::col#2 = (byte*) mode_hicolmcchar::col#3 [phi:mode_hicolmcchar::@2->mode_hicolmcchar::@3#1] -- register_copy 
  //SEG793 [427] phi (byte) mode_hicolmcchar::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolmcchar::@2->mode_hicolmcchar::@3#2] -- vbuz1=vbuc1 
    lda #0
    sta cx
    jmp b3
  //SEG794 [427] phi from mode_hicolmcchar::@3 to mode_hicolmcchar::@3 [phi:mode_hicolmcchar::@3->mode_hicolmcchar::@3]
  b3_from_b3:
  //SEG795 [427] phi (byte*) mode_hicolmcchar::ch#2 = (byte*) mode_hicolmcchar::ch#1 [phi:mode_hicolmcchar::@3->mode_hicolmcchar::@3#0] -- register_copy 
  //SEG796 [427] phi (byte*) mode_hicolmcchar::col#2 = (byte*) mode_hicolmcchar::col#1 [phi:mode_hicolmcchar::@3->mode_hicolmcchar::@3#1] -- register_copy 
  //SEG797 [427] phi (byte) mode_hicolmcchar::cx#2 = (byte) mode_hicolmcchar::cx#1 [phi:mode_hicolmcchar::@3->mode_hicolmcchar::@3#2] -- register_copy 
    jmp b3
  //SEG798 mode_hicolmcchar::@3
  b3:
  //SEG799 [428] (byte~) mode_hicolmcchar::$25 ← (byte) mode_hicolmcchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$25 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$25 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and cy
    sta _25
  //SEG800 [429] (byte~) mode_hicolmcchar::$26 ← (byte~) mode_hicolmcchar::$25 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$26 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$26 ] ) -- vbuz1=vbuz2_rol_4 
    lda _25
    asl
    asl
    asl
    asl
    sta _26
  //SEG801 [430] (byte~) mode_hicolmcchar::$27 ← (byte) mode_hicolmcchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$26 mode_hicolmcchar::$27 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$26 mode_hicolmcchar::$27 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and cx
    sta _27
  //SEG802 [431] (byte) mode_hicolmcchar::v#0 ← (byte~) mode_hicolmcchar::$26 | (byte~) mode_hicolmcchar::$27 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] ) -- vbuz1=vbuz2_bor_vbuz3 
    lda _26
    ora _27
    sta v
  //SEG803 [432] *((byte*) mode_hicolmcchar::col#2) ← (byte) mode_hicolmcchar::v#0 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] ) -- _deref_pbuz1=vbuz2 
    lda v
    ldy #0
    sta (col),y
  //SEG804 [433] (byte*) mode_hicolmcchar::col#1 ← ++ (byte*) mode_hicolmcchar::col#2 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::cx#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::cx#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG805 [434] *((byte*) mode_hicolmcchar::ch#2) ← (byte) mode_hicolmcchar::v#0 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::cx#2 mode_hicolmcchar::ch#2 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::cx#2 mode_hicolmcchar::ch#2 ] ) -- _deref_pbuz1=vbuz2 
    lda v
    ldy #0
    sta (ch),y
  //SEG806 [435] (byte*) mode_hicolmcchar::ch#1 ← ++ (byte*) mode_hicolmcchar::ch#2 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 mode_hicolmcchar::cx#2 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 mode_hicolmcchar::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc ch
    bne !+
    inc ch+1
  !:
  //SEG807 [436] (byte) mode_hicolmcchar::cx#1 ← ++ (byte) mode_hicolmcchar::cx#2 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 mode_hicolmcchar::cx#1 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 mode_hicolmcchar::cx#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cx
  //SEG808 [437] if((byte) mode_hicolmcchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_hicolmcchar::@3 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 mode_hicolmcchar::cx#1 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 mode_hicolmcchar::cx#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cx
    cmp #$28
    bne b3_from_b3
    jmp b9
  //SEG809 mode_hicolmcchar::@9
  b9:
  //SEG810 [438] (byte) mode_hicolmcchar::cy#1 ← ++ (byte) mode_hicolmcchar::cy#4 [ mode_hicolmcchar::cy#1 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#1 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG811 [439] if((byte) mode_hicolmcchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_hicolmcchar::@2 [ mode_hicolmcchar::cy#1 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#1 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2_from_b9
    jmp b4
  //SEG812 mode_hicolmcchar::@4
  b4:
  //SEG813 [440] if(true) goto mode_hicolmcchar::@5 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- true_then_la1 
    jmp b5_from_b4
    jmp breturn
  //SEG814 mode_hicolmcchar::@return
  breturn:
  //SEG815 [441] return  [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] )
    rts
  //SEG816 [442] phi from mode_hicolmcchar::@4 to mode_hicolmcchar::@5 [phi:mode_hicolmcchar::@4->mode_hicolmcchar::@5]
  b5_from_b4:
    jmp b5
  //SEG817 mode_hicolmcchar::@5
  b5:
  //SEG818 [443] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_hicolmcchar:77 [ keyboard_key_pressed::return#0 ] )
  //SEG819 [153] phi from mode_hicolmcchar::@5 to keyboard_key_pressed [phi:mode_hicolmcchar::@5->keyboard_key_pressed]
  keyboard_key_pressed_from_b5:
  //SEG820 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_hicolmcchar::@5->keyboard_key_pressed#0] -- vbuz1=vbuc1 
    lda #KEY_SPACE
    sta keyboard_key_pressed.key
    jsr keyboard_key_pressed
  //SEG821 [444] (byte) keyboard_key_pressed::return#18 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#18 ] ( main:2::menu:9::mode_hicolmcchar:77 [ keyboard_key_pressed::return#18 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return
    sta keyboard_key_pressed.return_18
    jmp b16
  //SEG822 mode_hicolmcchar::@16
  b16:
  //SEG823 [445] (byte~) mode_hicolmcchar::$31 ← (byte) keyboard_key_pressed::return#18 [ mode_hicolmcchar::$31 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::$31 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return_18
    sta _31
  //SEG824 [446] if((byte~) mode_hicolmcchar::$31==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_hicolmcchar::@4 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- vbuz1_eq_0_then_la1 
    lda _31
    beq b4
    jmp breturn
}
//SEG825 mode_hicolecmchar
mode_hicolecmchar: {
    .label SCREEN = $8000
    .label CHARSET = $9000
    .label COLORS = $8400
    .label _25 = $ba
    .label _26 = $bb
    .label _27 = $bc
    .label _31 = $bf
    .label i = $4b
    .label v = $bd
    .label col = $4e
    .label ch = $50
    .label cx = $4d
    .label cy = $4c
  //SEG826 [447] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_hicolecmchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #($ffffffff&CHARSET)/$10000
    sta DTV_GRAPHICS_VIC_BANK
  //SEG827 [448] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_hicolecmchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG828 [449] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_hicolecmchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_COLOR_BANK_HI
  //SEG829 [450] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_CONTROL_HIGHCOLOR_ON
    sta DTV_CONTROL
  //SEG830 [451] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3
    sta CIA2_PORT_A_DDR
  //SEG831 [452] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_hicolecmchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3^CHARSET/$4000
    sta CIA2_PORT_A
  //SEG832 [453] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(const byte) VIC_ECM#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_DEN|VIC_RSEL|VIC_ECM|3
    sta VIC_CONTROL
  //SEG833 [454] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_CSEL
    sta VIC_CONTROL2
  //SEG834 [455] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_hicolecmchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_hicolecmchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #(SCREEN&$3fff)/$40|(CHARSET&$3fff)/$400
    sta VIC_MEMORY
  //SEG835 [456] phi from mode_hicolecmchar to mode_hicolecmchar::@1 [phi:mode_hicolecmchar->mode_hicolecmchar::@1]
  b1_from_mode_hicolecmchar:
  //SEG836 [456] phi (byte) mode_hicolecmchar::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolecmchar->mode_hicolecmchar::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta i
    jmp b1
  //SEG837 [456] phi from mode_hicolecmchar::@1 to mode_hicolecmchar::@1 [phi:mode_hicolecmchar::@1->mode_hicolecmchar::@1]
  b1_from_b1:
  //SEG838 [456] phi (byte) mode_hicolecmchar::i#2 = (byte) mode_hicolecmchar::i#1 [phi:mode_hicolecmchar::@1->mode_hicolecmchar::@1#0] -- register_copy 
    jmp b1
  //SEG839 mode_hicolecmchar::@1
  b1:
  //SEG840 [457] *((const byte*) DTV_PALETTE#0 + (byte) mode_hicolecmchar::i#2) ← (byte) mode_hicolecmchar::i#2 [ mode_hicolecmchar::i#2 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::i#2 ] ) -- pbuc1_derefidx_vbuz1=vbuz1 
    ldy i
    tya
    sta DTV_PALETTE,y
  //SEG841 [458] (byte) mode_hicolecmchar::i#1 ← ++ (byte) mode_hicolecmchar::i#2 [ mode_hicolecmchar::i#1 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::i#1 ] ) -- vbuz1=_inc_vbuz1 
    inc i
  //SEG842 [459] if((byte) mode_hicolecmchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_hicolecmchar::@1 [ mode_hicolecmchar::i#1 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::i#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda i
    cmp #$10
    bne b1_from_b1
    jmp b8
  //SEG843 mode_hicolecmchar::@8
  b8:
  //SEG844 [460] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG845 [461] *((const byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 80 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$50
    sta BGCOL1
  //SEG846 [462] *((const byte*) BGCOL2#0) ← (byte/signed byte/word/signed word/dword/signed dword) 84 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$54
    sta BGCOL2
  //SEG847 [463] *((const byte*) BGCOL3#0) ← (byte/signed byte/word/signed word/dword/signed dword) 88 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$58
    sta BGCOL3
  //SEG848 [464] *((const byte*) BGCOL4#0) ← (byte/signed byte/word/signed word/dword/signed dword) 92 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$5c
    sta BGCOL4
  //SEG849 [465] phi from mode_hicolecmchar::@8 to mode_hicolecmchar::@2 [phi:mode_hicolecmchar::@8->mode_hicolecmchar::@2]
  b2_from_b8:
  //SEG850 [465] phi (byte*) mode_hicolecmchar::ch#3 = (const byte*) mode_hicolecmchar::SCREEN#0 [phi:mode_hicolecmchar::@8->mode_hicolecmchar::@2#0] -- pbuz1=pbuc1 
    lda #<SCREEN
    sta ch
    lda #>SCREEN
    sta ch+1
  //SEG851 [465] phi (byte*) mode_hicolecmchar::col#3 = (const byte*) mode_hicolecmchar::COLORS#0 [phi:mode_hicolecmchar::@8->mode_hicolecmchar::@2#1] -- pbuz1=pbuc1 
    lda #<COLORS
    sta col
    lda #>COLORS
    sta col+1
  //SEG852 [465] phi (byte) mode_hicolecmchar::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolecmchar::@8->mode_hicolecmchar::@2#2] -- vbuz1=vbuc1 
    lda #0
    sta cy
    jmp b2
  //SEG853 [465] phi from mode_hicolecmchar::@9 to mode_hicolecmchar::@2 [phi:mode_hicolecmchar::@9->mode_hicolecmchar::@2]
  b2_from_b9:
  //SEG854 [465] phi (byte*) mode_hicolecmchar::ch#3 = (byte*) mode_hicolecmchar::ch#1 [phi:mode_hicolecmchar::@9->mode_hicolecmchar::@2#0] -- register_copy 
  //SEG855 [465] phi (byte*) mode_hicolecmchar::col#3 = (byte*) mode_hicolecmchar::col#1 [phi:mode_hicolecmchar::@9->mode_hicolecmchar::@2#1] -- register_copy 
  //SEG856 [465] phi (byte) mode_hicolecmchar::cy#4 = (byte) mode_hicolecmchar::cy#1 [phi:mode_hicolecmchar::@9->mode_hicolecmchar::@2#2] -- register_copy 
    jmp b2
  //SEG857 mode_hicolecmchar::@2
  b2:
  //SEG858 [466] phi from mode_hicolecmchar::@2 to mode_hicolecmchar::@3 [phi:mode_hicolecmchar::@2->mode_hicolecmchar::@3]
  b3_from_b2:
  //SEG859 [466] phi (byte*) mode_hicolecmchar::ch#2 = (byte*) mode_hicolecmchar::ch#3 [phi:mode_hicolecmchar::@2->mode_hicolecmchar::@3#0] -- register_copy 
  //SEG860 [466] phi (byte*) mode_hicolecmchar::col#2 = (byte*) mode_hicolecmchar::col#3 [phi:mode_hicolecmchar::@2->mode_hicolecmchar::@3#1] -- register_copy 
  //SEG861 [466] phi (byte) mode_hicolecmchar::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolecmchar::@2->mode_hicolecmchar::@3#2] -- vbuz1=vbuc1 
    lda #0
    sta cx
    jmp b3
  //SEG862 [466] phi from mode_hicolecmchar::@3 to mode_hicolecmchar::@3 [phi:mode_hicolecmchar::@3->mode_hicolecmchar::@3]
  b3_from_b3:
  //SEG863 [466] phi (byte*) mode_hicolecmchar::ch#2 = (byte*) mode_hicolecmchar::ch#1 [phi:mode_hicolecmchar::@3->mode_hicolecmchar::@3#0] -- register_copy 
  //SEG864 [466] phi (byte*) mode_hicolecmchar::col#2 = (byte*) mode_hicolecmchar::col#1 [phi:mode_hicolecmchar::@3->mode_hicolecmchar::@3#1] -- register_copy 
  //SEG865 [466] phi (byte) mode_hicolecmchar::cx#2 = (byte) mode_hicolecmchar::cx#1 [phi:mode_hicolecmchar::@3->mode_hicolecmchar::@3#2] -- register_copy 
    jmp b3
  //SEG866 mode_hicolecmchar::@3
  b3:
  //SEG867 [467] (byte~) mode_hicolecmchar::$25 ← (byte) mode_hicolecmchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$25 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$25 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and cy
    sta _25
  //SEG868 [468] (byte~) mode_hicolecmchar::$26 ← (byte~) mode_hicolecmchar::$25 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$26 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$26 ] ) -- vbuz1=vbuz2_rol_4 
    lda _25
    asl
    asl
    asl
    asl
    sta _26
  //SEG869 [469] (byte~) mode_hicolecmchar::$27 ← (byte) mode_hicolecmchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$26 mode_hicolecmchar::$27 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$26 mode_hicolecmchar::$27 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and cx
    sta _27
  //SEG870 [470] (byte) mode_hicolecmchar::v#0 ← (byte~) mode_hicolecmchar::$26 | (byte~) mode_hicolecmchar::$27 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] ) -- vbuz1=vbuz2_bor_vbuz3 
    lda _26
    ora _27
    sta v
  //SEG871 [471] *((byte*) mode_hicolecmchar::col#2) ← (byte) mode_hicolecmchar::v#0 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] ) -- _deref_pbuz1=vbuz2 
    lda v
    ldy #0
    sta (col),y
  //SEG872 [472] (byte*) mode_hicolecmchar::col#1 ← ++ (byte*) mode_hicolecmchar::col#2 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::cx#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::cx#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG873 [473] *((byte*) mode_hicolecmchar::ch#2) ← (byte) mode_hicolecmchar::v#0 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::cx#2 mode_hicolecmchar::ch#2 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::cx#2 mode_hicolecmchar::ch#2 ] ) -- _deref_pbuz1=vbuz2 
    lda v
    ldy #0
    sta (ch),y
  //SEG874 [474] (byte*) mode_hicolecmchar::ch#1 ← ++ (byte*) mode_hicolecmchar::ch#2 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 mode_hicolecmchar::cx#2 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 mode_hicolecmchar::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc ch
    bne !+
    inc ch+1
  !:
  //SEG875 [475] (byte) mode_hicolecmchar::cx#1 ← ++ (byte) mode_hicolecmchar::cx#2 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 mode_hicolecmchar::cx#1 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 mode_hicolecmchar::cx#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cx
  //SEG876 [476] if((byte) mode_hicolecmchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_hicolecmchar::@3 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 mode_hicolecmchar::cx#1 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 mode_hicolecmchar::cx#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cx
    cmp #$28
    bne b3_from_b3
    jmp b9
  //SEG877 mode_hicolecmchar::@9
  b9:
  //SEG878 [477] (byte) mode_hicolecmchar::cy#1 ← ++ (byte) mode_hicolecmchar::cy#4 [ mode_hicolecmchar::cy#1 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#1 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG879 [478] if((byte) mode_hicolecmchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_hicolecmchar::@2 [ mode_hicolecmchar::cy#1 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#1 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2_from_b9
    jmp b4
  //SEG880 mode_hicolecmchar::@4
  b4:
  //SEG881 [479] if(true) goto mode_hicolecmchar::@5 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- true_then_la1 
    jmp b5_from_b4
    jmp breturn
  //SEG882 mode_hicolecmchar::@return
  breturn:
  //SEG883 [480] return  [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] )
    rts
  //SEG884 [481] phi from mode_hicolecmchar::@4 to mode_hicolecmchar::@5 [phi:mode_hicolecmchar::@4->mode_hicolecmchar::@5]
  b5_from_b4:
    jmp b5
  //SEG885 mode_hicolecmchar::@5
  b5:
  //SEG886 [482] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_hicolecmchar:70 [ keyboard_key_pressed::return#0 ] )
  //SEG887 [153] phi from mode_hicolecmchar::@5 to keyboard_key_pressed [phi:mode_hicolecmchar::@5->keyboard_key_pressed]
  keyboard_key_pressed_from_b5:
  //SEG888 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_hicolecmchar::@5->keyboard_key_pressed#0] -- vbuz1=vbuc1 
    lda #KEY_SPACE
    sta keyboard_key_pressed.key
    jsr keyboard_key_pressed
  //SEG889 [483] (byte) keyboard_key_pressed::return#17 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#17 ] ( main:2::menu:9::mode_hicolecmchar:70 [ keyboard_key_pressed::return#17 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return
    sta keyboard_key_pressed.return_17
    jmp b16
  //SEG890 mode_hicolecmchar::@16
  b16:
  //SEG891 [484] (byte~) mode_hicolecmchar::$31 ← (byte) keyboard_key_pressed::return#17 [ mode_hicolecmchar::$31 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::$31 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return_17
    sta _31
  //SEG892 [485] if((byte~) mode_hicolecmchar::$31==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_hicolecmchar::@4 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- vbuz1_eq_0_then_la1 
    lda _31
    beq b4
    jmp breturn
}
//SEG893 mode_hicolstdchar
mode_hicolstdchar: {
    .label SCREEN = $8000
    .label CHARSET = $9000
    .label COLORS = $8400
    .label _24 = $c0
    .label _25 = $c1
    .label _26 = $c2
    .label _30 = $c5
    .label i = $52
    .label v = $c3
    .label col = $55
    .label ch = $57
    .label cx = $54
    .label cy = $53
  //SEG894 [486] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_hicolstdchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #($ffffffff&CHARSET)/$10000
    sta DTV_GRAPHICS_VIC_BANK
  //SEG895 [487] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_hicolstdchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG896 [488] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_hicolstdchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_COLOR_BANK_HI
  //SEG897 [489] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_CONTROL_HIGHCOLOR_ON
    sta DTV_CONTROL
  //SEG898 [490] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3
    sta CIA2_PORT_A_DDR
  //SEG899 [491] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_hicolstdchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3^CHARSET/$4000
    sta CIA2_PORT_A
  //SEG900 [492] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG901 [493] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_CSEL
    sta VIC_CONTROL2
  //SEG902 [494] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_hicolstdchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_hicolstdchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #(SCREEN&$3fff)/$40|(CHARSET&$3fff)/$400
    sta VIC_MEMORY
  //SEG903 [495] phi from mode_hicolstdchar to mode_hicolstdchar::@1 [phi:mode_hicolstdchar->mode_hicolstdchar::@1]
  b1_from_mode_hicolstdchar:
  //SEG904 [495] phi (byte) mode_hicolstdchar::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolstdchar->mode_hicolstdchar::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta i
    jmp b1
  //SEG905 [495] phi from mode_hicolstdchar::@1 to mode_hicolstdchar::@1 [phi:mode_hicolstdchar::@1->mode_hicolstdchar::@1]
  b1_from_b1:
  //SEG906 [495] phi (byte) mode_hicolstdchar::i#2 = (byte) mode_hicolstdchar::i#1 [phi:mode_hicolstdchar::@1->mode_hicolstdchar::@1#0] -- register_copy 
    jmp b1
  //SEG907 mode_hicolstdchar::@1
  b1:
  //SEG908 [496] *((const byte*) DTV_PALETTE#0 + (byte) mode_hicolstdchar::i#2) ← (byte) mode_hicolstdchar::i#2 [ mode_hicolstdchar::i#2 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::i#2 ] ) -- pbuc1_derefidx_vbuz1=vbuz1 
    ldy i
    tya
    sta DTV_PALETTE,y
  //SEG909 [497] (byte) mode_hicolstdchar::i#1 ← ++ (byte) mode_hicolstdchar::i#2 [ mode_hicolstdchar::i#1 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::i#1 ] ) -- vbuz1=_inc_vbuz1 
    inc i
  //SEG910 [498] if((byte) mode_hicolstdchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_hicolstdchar::@1 [ mode_hicolstdchar::i#1 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::i#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda i
    cmp #$10
    bne b1_from_b1
    jmp b8
  //SEG911 mode_hicolstdchar::@8
  b8:
  //SEG912 [499] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BGCOL
  //SEG913 [500] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG914 [501] phi from mode_hicolstdchar::@8 to mode_hicolstdchar::@2 [phi:mode_hicolstdchar::@8->mode_hicolstdchar::@2]
  b2_from_b8:
  //SEG915 [501] phi (byte*) mode_hicolstdchar::ch#3 = (const byte*) mode_hicolstdchar::SCREEN#0 [phi:mode_hicolstdchar::@8->mode_hicolstdchar::@2#0] -- pbuz1=pbuc1 
    lda #<SCREEN
    sta ch
    lda #>SCREEN
    sta ch+1
  //SEG916 [501] phi (byte*) mode_hicolstdchar::col#3 = (const byte*) mode_hicolstdchar::COLORS#0 [phi:mode_hicolstdchar::@8->mode_hicolstdchar::@2#1] -- pbuz1=pbuc1 
    lda #<COLORS
    sta col
    lda #>COLORS
    sta col+1
  //SEG917 [501] phi (byte) mode_hicolstdchar::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolstdchar::@8->mode_hicolstdchar::@2#2] -- vbuz1=vbuc1 
    lda #0
    sta cy
    jmp b2
  //SEG918 [501] phi from mode_hicolstdchar::@9 to mode_hicolstdchar::@2 [phi:mode_hicolstdchar::@9->mode_hicolstdchar::@2]
  b2_from_b9:
  //SEG919 [501] phi (byte*) mode_hicolstdchar::ch#3 = (byte*) mode_hicolstdchar::ch#1 [phi:mode_hicolstdchar::@9->mode_hicolstdchar::@2#0] -- register_copy 
  //SEG920 [501] phi (byte*) mode_hicolstdchar::col#3 = (byte*) mode_hicolstdchar::col#1 [phi:mode_hicolstdchar::@9->mode_hicolstdchar::@2#1] -- register_copy 
  //SEG921 [501] phi (byte) mode_hicolstdchar::cy#4 = (byte) mode_hicolstdchar::cy#1 [phi:mode_hicolstdchar::@9->mode_hicolstdchar::@2#2] -- register_copy 
    jmp b2
  //SEG922 mode_hicolstdchar::@2
  b2:
  //SEG923 [502] phi from mode_hicolstdchar::@2 to mode_hicolstdchar::@3 [phi:mode_hicolstdchar::@2->mode_hicolstdchar::@3]
  b3_from_b2:
  //SEG924 [502] phi (byte*) mode_hicolstdchar::ch#2 = (byte*) mode_hicolstdchar::ch#3 [phi:mode_hicolstdchar::@2->mode_hicolstdchar::@3#0] -- register_copy 
  //SEG925 [502] phi (byte*) mode_hicolstdchar::col#2 = (byte*) mode_hicolstdchar::col#3 [phi:mode_hicolstdchar::@2->mode_hicolstdchar::@3#1] -- register_copy 
  //SEG926 [502] phi (byte) mode_hicolstdchar::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolstdchar::@2->mode_hicolstdchar::@3#2] -- vbuz1=vbuc1 
    lda #0
    sta cx
    jmp b3
  //SEG927 [502] phi from mode_hicolstdchar::@3 to mode_hicolstdchar::@3 [phi:mode_hicolstdchar::@3->mode_hicolstdchar::@3]
  b3_from_b3:
  //SEG928 [502] phi (byte*) mode_hicolstdchar::ch#2 = (byte*) mode_hicolstdchar::ch#1 [phi:mode_hicolstdchar::@3->mode_hicolstdchar::@3#0] -- register_copy 
  //SEG929 [502] phi (byte*) mode_hicolstdchar::col#2 = (byte*) mode_hicolstdchar::col#1 [phi:mode_hicolstdchar::@3->mode_hicolstdchar::@3#1] -- register_copy 
  //SEG930 [502] phi (byte) mode_hicolstdchar::cx#2 = (byte) mode_hicolstdchar::cx#1 [phi:mode_hicolstdchar::@3->mode_hicolstdchar::@3#2] -- register_copy 
    jmp b3
  //SEG931 mode_hicolstdchar::@3
  b3:
  //SEG932 [503] (byte~) mode_hicolstdchar::$24 ← (byte) mode_hicolstdchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$24 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$24 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and cy
    sta _24
  //SEG933 [504] (byte~) mode_hicolstdchar::$25 ← (byte~) mode_hicolstdchar::$24 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$25 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$25 ] ) -- vbuz1=vbuz2_rol_4 
    lda _24
    asl
    asl
    asl
    asl
    sta _25
  //SEG934 [505] (byte~) mode_hicolstdchar::$26 ← (byte) mode_hicolstdchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$25 mode_hicolstdchar::$26 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$25 mode_hicolstdchar::$26 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and cx
    sta _26
  //SEG935 [506] (byte) mode_hicolstdchar::v#0 ← (byte~) mode_hicolstdchar::$25 | (byte~) mode_hicolstdchar::$26 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] ) -- vbuz1=vbuz2_bor_vbuz3 
    lda _25
    ora _26
    sta v
  //SEG936 [507] *((byte*) mode_hicolstdchar::col#2) ← (byte) mode_hicolstdchar::v#0 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] ) -- _deref_pbuz1=vbuz2 
    lda v
    ldy #0
    sta (col),y
  //SEG937 [508] (byte*) mode_hicolstdchar::col#1 ← ++ (byte*) mode_hicolstdchar::col#2 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::cx#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::cx#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG938 [509] *((byte*) mode_hicolstdchar::ch#2) ← (byte) mode_hicolstdchar::v#0 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::cx#2 mode_hicolstdchar::ch#2 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::cx#2 mode_hicolstdchar::ch#2 ] ) -- _deref_pbuz1=vbuz2 
    lda v
    ldy #0
    sta (ch),y
  //SEG939 [510] (byte*) mode_hicolstdchar::ch#1 ← ++ (byte*) mode_hicolstdchar::ch#2 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 mode_hicolstdchar::cx#2 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 mode_hicolstdchar::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc ch
    bne !+
    inc ch+1
  !:
  //SEG940 [511] (byte) mode_hicolstdchar::cx#1 ← ++ (byte) mode_hicolstdchar::cx#2 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 mode_hicolstdchar::cx#1 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 mode_hicolstdchar::cx#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cx
  //SEG941 [512] if((byte) mode_hicolstdchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_hicolstdchar::@3 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 mode_hicolstdchar::cx#1 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 mode_hicolstdchar::cx#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cx
    cmp #$28
    bne b3_from_b3
    jmp b9
  //SEG942 mode_hicolstdchar::@9
  b9:
  //SEG943 [513] (byte) mode_hicolstdchar::cy#1 ← ++ (byte) mode_hicolstdchar::cy#4 [ mode_hicolstdchar::cy#1 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#1 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG944 [514] if((byte) mode_hicolstdchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_hicolstdchar::@2 [ mode_hicolstdchar::cy#1 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#1 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2_from_b9
    jmp b4
  //SEG945 mode_hicolstdchar::@4
  b4:
  //SEG946 [515] if(true) goto mode_hicolstdchar::@5 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- true_then_la1 
    jmp b5_from_b4
    jmp breturn
  //SEG947 mode_hicolstdchar::@return
  breturn:
  //SEG948 [516] return  [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] )
    rts
  //SEG949 [517] phi from mode_hicolstdchar::@4 to mode_hicolstdchar::@5 [phi:mode_hicolstdchar::@4->mode_hicolstdchar::@5]
  b5_from_b4:
    jmp b5
  //SEG950 mode_hicolstdchar::@5
  b5:
  //SEG951 [518] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_hicolstdchar:63 [ keyboard_key_pressed::return#0 ] )
  //SEG952 [153] phi from mode_hicolstdchar::@5 to keyboard_key_pressed [phi:mode_hicolstdchar::@5->keyboard_key_pressed]
  keyboard_key_pressed_from_b5:
  //SEG953 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_hicolstdchar::@5->keyboard_key_pressed#0] -- vbuz1=vbuc1 
    lda #KEY_SPACE
    sta keyboard_key_pressed.key
    jsr keyboard_key_pressed
  //SEG954 [519] (byte) keyboard_key_pressed::return#16 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#16 ] ( main:2::menu:9::mode_hicolstdchar:63 [ keyboard_key_pressed::return#16 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return
    sta keyboard_key_pressed.return_16
    jmp b16
  //SEG955 mode_hicolstdchar::@16
  b16:
  //SEG956 [520] (byte~) mode_hicolstdchar::$30 ← (byte) keyboard_key_pressed::return#16 [ mode_hicolstdchar::$30 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::$30 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return_16
    sta _30
  //SEG957 [521] if((byte~) mode_hicolstdchar::$30==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_hicolstdchar::@4 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- vbuz1_eq_0_then_la1 
    lda _30
    beq b4
    jmp breturn
}
//SEG958 mode_mcchar
mode_mcchar: {
    .label SCREEN = $8000
    .label CHARSET = $9000
    .label COLORS = $8400
    .label _25 = $c6
    .label _26 = $c7
    .label _27 = $c8
    .label _28 = $c9
    .label _29 = $ca
    .label _30 = $cb
    .label _33 = $cd
    .label i = $59
    .label col = $5c
    .label ch = $5e
    .label cx = $5b
    .label cy = $5a
  //SEG959 [522] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_mcchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #($ffffffff&CHARSET)/$10000
    sta DTV_GRAPHICS_VIC_BANK
  //SEG960 [523] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_mcchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG961 [524] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_mcchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_COLOR_BANK_HI
  //SEG962 [525] *((const byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_CONTROL
  //SEG963 [526] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3
    sta CIA2_PORT_A_DDR
  //SEG964 [527] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_mcchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3^CHARSET/$4000
    sta CIA2_PORT_A
  //SEG965 [528] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG966 [529] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0|(const byte) VIC_MCM#0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_CSEL|VIC_MCM
    sta VIC_CONTROL2
  //SEG967 [530] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_mcchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_mcchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #(SCREEN&$3fff)/$40|(CHARSET&$3fff)/$400
    sta VIC_MEMORY
  //SEG968 [531] phi from mode_mcchar to mode_mcchar::@1 [phi:mode_mcchar->mode_mcchar::@1]
  b1_from_mode_mcchar:
  //SEG969 [531] phi (byte) mode_mcchar::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_mcchar->mode_mcchar::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta i
    jmp b1
  //SEG970 [531] phi from mode_mcchar::@1 to mode_mcchar::@1 [phi:mode_mcchar::@1->mode_mcchar::@1]
  b1_from_b1:
  //SEG971 [531] phi (byte) mode_mcchar::i#2 = (byte) mode_mcchar::i#1 [phi:mode_mcchar::@1->mode_mcchar::@1#0] -- register_copy 
    jmp b1
  //SEG972 mode_mcchar::@1
  b1:
  //SEG973 [532] *((const byte*) DTV_PALETTE#0 + (byte) mode_mcchar::i#2) ← *((const byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) mode_mcchar::i#2) [ mode_mcchar::i#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::i#2 ] ) -- pbuc1_derefidx_vbuz1=pbuc2_derefidx_vbuz1 
    ldy i
    lda DTV_PALETTE_DEFAULT,y
    sta DTV_PALETTE,y
  //SEG974 [533] (byte) mode_mcchar::i#1 ← ++ (byte) mode_mcchar::i#2 [ mode_mcchar::i#1 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::i#1 ] ) -- vbuz1=_inc_vbuz1 
    inc i
  //SEG975 [534] if((byte) mode_mcchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_mcchar::@1 [ mode_mcchar::i#1 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::i#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda i
    cmp #$10
    bne b1_from_b1
    jmp b8
  //SEG976 mode_mcchar::@8
  b8:
  //SEG977 [535] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG978 [536] *((const byte*) BGCOL1#0) ← (const byte) BLACK#0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #BLACK
    sta BGCOL1
  //SEG979 [537] *((const byte*) BGCOL2#0) ← (const byte) GREEN#0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #GREEN
    sta BGCOL2
  //SEG980 [538] *((const byte*) BGCOL3#0) ← (const byte) BLUE#0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #BLUE
    sta BGCOL3
  //SEG981 [539] phi from mode_mcchar::@8 to mode_mcchar::@2 [phi:mode_mcchar::@8->mode_mcchar::@2]
  b2_from_b8:
  //SEG982 [539] phi (byte*) mode_mcchar::ch#3 = (const byte*) mode_mcchar::SCREEN#0 [phi:mode_mcchar::@8->mode_mcchar::@2#0] -- pbuz1=pbuc1 
    lda #<SCREEN
    sta ch
    lda #>SCREEN
    sta ch+1
  //SEG983 [539] phi (byte*) mode_mcchar::col#3 = (const byte*) mode_mcchar::COLORS#0 [phi:mode_mcchar::@8->mode_mcchar::@2#1] -- pbuz1=pbuc1 
    lda #<COLORS
    sta col
    lda #>COLORS
    sta col+1
  //SEG984 [539] phi (byte) mode_mcchar::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_mcchar::@8->mode_mcchar::@2#2] -- vbuz1=vbuc1 
    lda #0
    sta cy
    jmp b2
  //SEG985 [539] phi from mode_mcchar::@9 to mode_mcchar::@2 [phi:mode_mcchar::@9->mode_mcchar::@2]
  b2_from_b9:
  //SEG986 [539] phi (byte*) mode_mcchar::ch#3 = (byte*) mode_mcchar::ch#1 [phi:mode_mcchar::@9->mode_mcchar::@2#0] -- register_copy 
  //SEG987 [539] phi (byte*) mode_mcchar::col#3 = (byte*) mode_mcchar::col#1 [phi:mode_mcchar::@9->mode_mcchar::@2#1] -- register_copy 
  //SEG988 [539] phi (byte) mode_mcchar::cy#4 = (byte) mode_mcchar::cy#1 [phi:mode_mcchar::@9->mode_mcchar::@2#2] -- register_copy 
    jmp b2
  //SEG989 mode_mcchar::@2
  b2:
  //SEG990 [540] phi from mode_mcchar::@2 to mode_mcchar::@3 [phi:mode_mcchar::@2->mode_mcchar::@3]
  b3_from_b2:
  //SEG991 [540] phi (byte*) mode_mcchar::ch#2 = (byte*) mode_mcchar::ch#3 [phi:mode_mcchar::@2->mode_mcchar::@3#0] -- register_copy 
  //SEG992 [540] phi (byte*) mode_mcchar::col#2 = (byte*) mode_mcchar::col#3 [phi:mode_mcchar::@2->mode_mcchar::@3#1] -- register_copy 
  //SEG993 [540] phi (byte) mode_mcchar::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_mcchar::@2->mode_mcchar::@3#2] -- vbuz1=vbuc1 
    lda #0
    sta cx
    jmp b3
  //SEG994 [540] phi from mode_mcchar::@3 to mode_mcchar::@3 [phi:mode_mcchar::@3->mode_mcchar::@3]
  b3_from_b3:
  //SEG995 [540] phi (byte*) mode_mcchar::ch#2 = (byte*) mode_mcchar::ch#1 [phi:mode_mcchar::@3->mode_mcchar::@3#0] -- register_copy 
  //SEG996 [540] phi (byte*) mode_mcchar::col#2 = (byte*) mode_mcchar::col#1 [phi:mode_mcchar::@3->mode_mcchar::@3#1] -- register_copy 
  //SEG997 [540] phi (byte) mode_mcchar::cx#2 = (byte) mode_mcchar::cx#1 [phi:mode_mcchar::@3->mode_mcchar::@3#2] -- register_copy 
    jmp b3
  //SEG998 mode_mcchar::@3
  b3:
  //SEG999 [541] (byte~) mode_mcchar::$25 ← (byte) mode_mcchar::cx#2 + (byte) mode_mcchar::cy#4 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 mode_mcchar::$25 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 mode_mcchar::$25 ] ) -- vbuz1=vbuz2_plus_vbuz3 
    lda cx
    clc
    adc cy
    sta _25
  //SEG1000 [542] (byte~) mode_mcchar::$26 ← (byte~) mode_mcchar::$25 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 mode_mcchar::$26 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 mode_mcchar::$26 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and _25
    sta _26
  //SEG1001 [543] *((byte*) mode_mcchar::col#2) ← (byte~) mode_mcchar::$26 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 ] ) -- _deref_pbuz1=vbuz2 
    lda _26
    ldy #0
    sta (col),y
  //SEG1002 [544] (byte*) mode_mcchar::col#1 ← ++ (byte*) mode_mcchar::col#2 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG1003 [545] (byte~) mode_mcchar::$27 ← (byte) mode_mcchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$27 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$27 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and cy
    sta _27
  //SEG1004 [546] (byte~) mode_mcchar::$28 ← (byte~) mode_mcchar::$27 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$28 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$28 ] ) -- vbuz1=vbuz2_rol_4 
    lda _27
    asl
    asl
    asl
    asl
    sta _28
  //SEG1005 [547] (byte~) mode_mcchar::$29 ← (byte) mode_mcchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$28 mode_mcchar::$29 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$28 mode_mcchar::$29 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and cx
    sta _29
  //SEG1006 [548] (byte~) mode_mcchar::$30 ← (byte~) mode_mcchar::$28 | (byte~) mode_mcchar::$29 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$30 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$30 ] ) -- vbuz1=vbuz2_bor_vbuz3 
    lda _28
    ora _29
    sta _30
  //SEG1007 [549] *((byte*) mode_mcchar::ch#2) ← (byte~) mode_mcchar::$30 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 ] ) -- _deref_pbuz1=vbuz2 
    lda _30
    ldy #0
    sta (ch),y
  //SEG1008 [550] (byte*) mode_mcchar::ch#1 ← ++ (byte*) mode_mcchar::ch#2 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::ch#1 mode_mcchar::cx#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::ch#1 mode_mcchar::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc ch
    bne !+
    inc ch+1
  !:
  //SEG1009 [551] (byte) mode_mcchar::cx#1 ← ++ (byte) mode_mcchar::cx#2 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::ch#1 mode_mcchar::cx#1 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::ch#1 mode_mcchar::cx#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cx
  //SEG1010 [552] if((byte) mode_mcchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_mcchar::@3 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::ch#1 mode_mcchar::cx#1 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::ch#1 mode_mcchar::cx#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cx
    cmp #$28
    bne b3_from_b3
    jmp b9
  //SEG1011 mode_mcchar::@9
  b9:
  //SEG1012 [553] (byte) mode_mcchar::cy#1 ← ++ (byte) mode_mcchar::cy#4 [ mode_mcchar::cy#1 mode_mcchar::col#1 mode_mcchar::ch#1 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#1 mode_mcchar::col#1 mode_mcchar::ch#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG1013 [554] if((byte) mode_mcchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_mcchar::@2 [ mode_mcchar::cy#1 mode_mcchar::col#1 mode_mcchar::ch#1 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#1 mode_mcchar::col#1 mode_mcchar::ch#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2_from_b9
    jmp b4
  //SEG1014 mode_mcchar::@4
  b4:
  //SEG1015 [555] if(true) goto mode_mcchar::@5 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- true_then_la1 
    jmp b5_from_b4
    jmp breturn
  //SEG1016 mode_mcchar::@return
  breturn:
  //SEG1017 [556] return  [ ] ( main:2::menu:9::mode_mcchar:56 [ ] )
    rts
  //SEG1018 [557] phi from mode_mcchar::@4 to mode_mcchar::@5 [phi:mode_mcchar::@4->mode_mcchar::@5]
  b5_from_b4:
    jmp b5
  //SEG1019 mode_mcchar::@5
  b5:
  //SEG1020 [558] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_mcchar:56 [ keyboard_key_pressed::return#0 ] )
  //SEG1021 [153] phi from mode_mcchar::@5 to keyboard_key_pressed [phi:mode_mcchar::@5->keyboard_key_pressed]
  keyboard_key_pressed_from_b5:
  //SEG1022 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_mcchar::@5->keyboard_key_pressed#0] -- vbuz1=vbuc1 
    lda #KEY_SPACE
    sta keyboard_key_pressed.key
    jsr keyboard_key_pressed
  //SEG1023 [559] (byte) keyboard_key_pressed::return#15 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#15 ] ( main:2::menu:9::mode_mcchar:56 [ keyboard_key_pressed::return#15 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return
    sta keyboard_key_pressed.return_15
    jmp b16
  //SEG1024 mode_mcchar::@16
  b16:
  //SEG1025 [560] (byte~) mode_mcchar::$33 ← (byte) keyboard_key_pressed::return#15 [ mode_mcchar::$33 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::$33 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return_15
    sta _33
  //SEG1026 [561] if((byte~) mode_mcchar::$33==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_mcchar::@4 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- vbuz1_eq_0_then_la1 
    lda _33
    beq b4
    jmp breturn
}
//SEG1027 mode_ecmchar
mode_ecmchar: {
    .label ECMCHAR_SCREEN = $8000
    .label ECMCHAR_CHARSET = $9000
    .label ECMCHAR_COLORS = $8400
    .label _25 = $ce
    .label _26 = $cf
    .label _27 = $d0
    .label _28 = $d1
    .label _29 = $d2
    .label _30 = $d3
    .label _33 = $d5
    .label i = $60
    .label col = $63
    .label ch = $65
    .label cx = $62
    .label cy = $61
  //SEG1028 [562] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #($ffffffff&ECMCHAR_CHARSET)/$10000
    sta DTV_GRAPHICS_VIC_BANK
  //SEG1029 [563] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_ecmchar::ECMCHAR_COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #ECMCHAR_COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG1030 [564] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_ecmchar::ECMCHAR_COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_COLOR_BANK_HI
  //SEG1031 [565] *((const byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_CONTROL
  //SEG1032 [566] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3
    sta CIA2_PORT_A_DDR
  //SEG1033 [567] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3^ECMCHAR_CHARSET/$4000
    sta CIA2_PORT_A
  //SEG1034 [568] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(const byte) VIC_ECM#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_DEN|VIC_RSEL|VIC_ECM|3
    sta VIC_CONTROL
  //SEG1035 [569] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_CSEL
    sta VIC_CONTROL2
  //SEG1036 [570] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_ecmchar::ECMCHAR_SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #(ECMCHAR_SCREEN&$3fff)/$40|(ECMCHAR_CHARSET&$3fff)/$400
    sta VIC_MEMORY
  //SEG1037 [571] phi from mode_ecmchar to mode_ecmchar::@1 [phi:mode_ecmchar->mode_ecmchar::@1]
  b1_from_mode_ecmchar:
  //SEG1038 [571] phi (byte) mode_ecmchar::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_ecmchar->mode_ecmchar::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta i
    jmp b1
  //SEG1039 [571] phi from mode_ecmchar::@1 to mode_ecmchar::@1 [phi:mode_ecmchar::@1->mode_ecmchar::@1]
  b1_from_b1:
  //SEG1040 [571] phi (byte) mode_ecmchar::i#2 = (byte) mode_ecmchar::i#1 [phi:mode_ecmchar::@1->mode_ecmchar::@1#0] -- register_copy 
    jmp b1
  //SEG1041 mode_ecmchar::@1
  b1:
  //SEG1042 [572] *((const byte*) DTV_PALETTE#0 + (byte) mode_ecmchar::i#2) ← *((const byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) mode_ecmchar::i#2) [ mode_ecmchar::i#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::i#2 ] ) -- pbuc1_derefidx_vbuz1=pbuc2_derefidx_vbuz1 
    ldy i
    lda DTV_PALETTE_DEFAULT,y
    sta DTV_PALETTE,y
  //SEG1043 [573] (byte) mode_ecmchar::i#1 ← ++ (byte) mode_ecmchar::i#2 [ mode_ecmchar::i#1 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::i#1 ] ) -- vbuz1=_inc_vbuz1 
    inc i
  //SEG1044 [574] if((byte) mode_ecmchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_ecmchar::@1 [ mode_ecmchar::i#1 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::i#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda i
    cmp #$10
    bne b1_from_b1
    jmp b8
  //SEG1045 mode_ecmchar::@8
  b8:
  //SEG1046 [575] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG1047 [576] *((const byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BGCOL1
  //SEG1048 [577] *((const byte*) BGCOL2#0) ← (byte/signed byte/word/signed word/dword/signed dword) 2 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #2
    sta BGCOL2
  //SEG1049 [578] *((const byte*) BGCOL3#0) ← (byte/signed byte/word/signed word/dword/signed dword) 5 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #5
    sta BGCOL3
  //SEG1050 [579] *((const byte*) BGCOL4#0) ← (byte/signed byte/word/signed word/dword/signed dword) 6 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #6
    sta BGCOL4
  //SEG1051 [580] phi from mode_ecmchar::@8 to mode_ecmchar::@2 [phi:mode_ecmchar::@8->mode_ecmchar::@2]
  b2_from_b8:
  //SEG1052 [580] phi (byte*) mode_ecmchar::ch#3 = (const byte*) mode_ecmchar::ECMCHAR_SCREEN#0 [phi:mode_ecmchar::@8->mode_ecmchar::@2#0] -- pbuz1=pbuc1 
    lda #<ECMCHAR_SCREEN
    sta ch
    lda #>ECMCHAR_SCREEN
    sta ch+1
  //SEG1053 [580] phi (byte*) mode_ecmchar::col#3 = (const byte*) mode_ecmchar::ECMCHAR_COLORS#0 [phi:mode_ecmchar::@8->mode_ecmchar::@2#1] -- pbuz1=pbuc1 
    lda #<ECMCHAR_COLORS
    sta col
    lda #>ECMCHAR_COLORS
    sta col+1
  //SEG1054 [580] phi (byte) mode_ecmchar::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_ecmchar::@8->mode_ecmchar::@2#2] -- vbuz1=vbuc1 
    lda #0
    sta cy
    jmp b2
  //SEG1055 [580] phi from mode_ecmchar::@9 to mode_ecmchar::@2 [phi:mode_ecmchar::@9->mode_ecmchar::@2]
  b2_from_b9:
  //SEG1056 [580] phi (byte*) mode_ecmchar::ch#3 = (byte*) mode_ecmchar::ch#1 [phi:mode_ecmchar::@9->mode_ecmchar::@2#0] -- register_copy 
  //SEG1057 [580] phi (byte*) mode_ecmchar::col#3 = (byte*) mode_ecmchar::col#1 [phi:mode_ecmchar::@9->mode_ecmchar::@2#1] -- register_copy 
  //SEG1058 [580] phi (byte) mode_ecmchar::cy#4 = (byte) mode_ecmchar::cy#1 [phi:mode_ecmchar::@9->mode_ecmchar::@2#2] -- register_copy 
    jmp b2
  //SEG1059 mode_ecmchar::@2
  b2:
  //SEG1060 [581] phi from mode_ecmchar::@2 to mode_ecmchar::@3 [phi:mode_ecmchar::@2->mode_ecmchar::@3]
  b3_from_b2:
  //SEG1061 [581] phi (byte*) mode_ecmchar::ch#2 = (byte*) mode_ecmchar::ch#3 [phi:mode_ecmchar::@2->mode_ecmchar::@3#0] -- register_copy 
  //SEG1062 [581] phi (byte*) mode_ecmchar::col#2 = (byte*) mode_ecmchar::col#3 [phi:mode_ecmchar::@2->mode_ecmchar::@3#1] -- register_copy 
  //SEG1063 [581] phi (byte) mode_ecmchar::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_ecmchar::@2->mode_ecmchar::@3#2] -- vbuz1=vbuc1 
    lda #0
    sta cx
    jmp b3
  //SEG1064 [581] phi from mode_ecmchar::@3 to mode_ecmchar::@3 [phi:mode_ecmchar::@3->mode_ecmchar::@3]
  b3_from_b3:
  //SEG1065 [581] phi (byte*) mode_ecmchar::ch#2 = (byte*) mode_ecmchar::ch#1 [phi:mode_ecmchar::@3->mode_ecmchar::@3#0] -- register_copy 
  //SEG1066 [581] phi (byte*) mode_ecmchar::col#2 = (byte*) mode_ecmchar::col#1 [phi:mode_ecmchar::@3->mode_ecmchar::@3#1] -- register_copy 
  //SEG1067 [581] phi (byte) mode_ecmchar::cx#2 = (byte) mode_ecmchar::cx#1 [phi:mode_ecmchar::@3->mode_ecmchar::@3#2] -- register_copy 
    jmp b3
  //SEG1068 mode_ecmchar::@3
  b3:
  //SEG1069 [582] (byte~) mode_ecmchar::$25 ← (byte) mode_ecmchar::cx#2 + (byte) mode_ecmchar::cy#4 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 mode_ecmchar::$25 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 mode_ecmchar::$25 ] ) -- vbuz1=vbuz2_plus_vbuz3 
    lda cx
    clc
    adc cy
    sta _25
  //SEG1070 [583] (byte~) mode_ecmchar::$26 ← (byte~) mode_ecmchar::$25 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 mode_ecmchar::$26 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 mode_ecmchar::$26 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and _25
    sta _26
  //SEG1071 [584] *((byte*) mode_ecmchar::col#2) ← (byte~) mode_ecmchar::$26 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 ] ) -- _deref_pbuz1=vbuz2 
    lda _26
    ldy #0
    sta (col),y
  //SEG1072 [585] (byte*) mode_ecmchar::col#1 ← ++ (byte*) mode_ecmchar::col#2 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG1073 [586] (byte~) mode_ecmchar::$27 ← (byte) mode_ecmchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$27 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$27 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and cy
    sta _27
  //SEG1074 [587] (byte~) mode_ecmchar::$28 ← (byte~) mode_ecmchar::$27 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$28 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$28 ] ) -- vbuz1=vbuz2_rol_4 
    lda _27
    asl
    asl
    asl
    asl
    sta _28
  //SEG1075 [588] (byte~) mode_ecmchar::$29 ← (byte) mode_ecmchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$28 mode_ecmchar::$29 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$28 mode_ecmchar::$29 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and cx
    sta _29
  //SEG1076 [589] (byte~) mode_ecmchar::$30 ← (byte~) mode_ecmchar::$28 | (byte~) mode_ecmchar::$29 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$30 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$30 ] ) -- vbuz1=vbuz2_bor_vbuz3 
    lda _28
    ora _29
    sta _30
  //SEG1077 [590] *((byte*) mode_ecmchar::ch#2) ← (byte~) mode_ecmchar::$30 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 ] ) -- _deref_pbuz1=vbuz2 
    lda _30
    ldy #0
    sta (ch),y
  //SEG1078 [591] (byte*) mode_ecmchar::ch#1 ← ++ (byte*) mode_ecmchar::ch#2 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::ch#1 mode_ecmchar::cx#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::ch#1 mode_ecmchar::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc ch
    bne !+
    inc ch+1
  !:
  //SEG1079 [592] (byte) mode_ecmchar::cx#1 ← ++ (byte) mode_ecmchar::cx#2 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::ch#1 mode_ecmchar::cx#1 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::ch#1 mode_ecmchar::cx#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cx
  //SEG1080 [593] if((byte) mode_ecmchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_ecmchar::@3 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::ch#1 mode_ecmchar::cx#1 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::ch#1 mode_ecmchar::cx#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cx
    cmp #$28
    bne b3_from_b3
    jmp b9
  //SEG1081 mode_ecmchar::@9
  b9:
  //SEG1082 [594] (byte) mode_ecmchar::cy#1 ← ++ (byte) mode_ecmchar::cy#4 [ mode_ecmchar::cy#1 mode_ecmchar::col#1 mode_ecmchar::ch#1 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#1 mode_ecmchar::col#1 mode_ecmchar::ch#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG1083 [595] if((byte) mode_ecmchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_ecmchar::@2 [ mode_ecmchar::cy#1 mode_ecmchar::col#1 mode_ecmchar::ch#1 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#1 mode_ecmchar::col#1 mode_ecmchar::ch#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2_from_b9
    jmp b4
  //SEG1084 mode_ecmchar::@4
  b4:
  //SEG1085 [596] if(true) goto mode_ecmchar::@5 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- true_then_la1 
    jmp b5_from_b4
    jmp breturn
  //SEG1086 mode_ecmchar::@return
  breturn:
  //SEG1087 [597] return  [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] )
    rts
  //SEG1088 [598] phi from mode_ecmchar::@4 to mode_ecmchar::@5 [phi:mode_ecmchar::@4->mode_ecmchar::@5]
  b5_from_b4:
    jmp b5
  //SEG1089 mode_ecmchar::@5
  b5:
  //SEG1090 [599] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_ecmchar:49 [ keyboard_key_pressed::return#0 ] )
  //SEG1091 [153] phi from mode_ecmchar::@5 to keyboard_key_pressed [phi:mode_ecmchar::@5->keyboard_key_pressed]
  keyboard_key_pressed_from_b5:
  //SEG1092 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_ecmchar::@5->keyboard_key_pressed#0] -- vbuz1=vbuc1 
    lda #KEY_SPACE
    sta keyboard_key_pressed.key
    jsr keyboard_key_pressed
  //SEG1093 [600] (byte) keyboard_key_pressed::return#14 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#14 ] ( main:2::menu:9::mode_ecmchar:49 [ keyboard_key_pressed::return#14 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return
    sta keyboard_key_pressed.return_14
    jmp b16
  //SEG1094 mode_ecmchar::@16
  b16:
  //SEG1095 [601] (byte~) mode_ecmchar::$33 ← (byte) keyboard_key_pressed::return#14 [ mode_ecmchar::$33 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::$33 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return_14
    sta _33
  //SEG1096 [602] if((byte~) mode_ecmchar::$33==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_ecmchar::@4 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- vbuz1_eq_0_then_la1 
    lda _33
    beq b4
    jmp breturn
}
//SEG1097 mode_stdchar
mode_stdchar: {
    .label SCREEN = $8000
    .label CHARSET = $9000
    .label COLORS = $8400
    .label _24 = $d6
    .label _25 = $d7
    .label _26 = $d8
    .label _27 = $d9
    .label _28 = $da
    .label _29 = $db
    .label _32 = $dd
    .label i = $67
    .label col = $6a
    .label ch = $6c
    .label cx = $69
    .label cy = $68
  //SEG1098 [603] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_stdchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #($ffffffff&CHARSET)/$10000
    sta DTV_GRAPHICS_VIC_BANK
  //SEG1099 [604] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_stdchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG1100 [605] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_stdchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_COLOR_BANK_HI
  //SEG1101 [606] *((const byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_CONTROL
  //SEG1102 [607] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3
    sta CIA2_PORT_A_DDR
  //SEG1103 [608] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_stdchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3^CHARSET/$4000
    sta CIA2_PORT_A
  //SEG1104 [609] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG1105 [610] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_CSEL
    sta VIC_CONTROL2
  //SEG1106 [611] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_stdchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_stdchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #(SCREEN&$3fff)/$40|(CHARSET&$3fff)/$400
    sta VIC_MEMORY
  //SEG1107 [612] phi from mode_stdchar to mode_stdchar::@1 [phi:mode_stdchar->mode_stdchar::@1]
  b1_from_mode_stdchar:
  //SEG1108 [612] phi (byte) mode_stdchar::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_stdchar->mode_stdchar::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta i
    jmp b1
  //SEG1109 [612] phi from mode_stdchar::@1 to mode_stdchar::@1 [phi:mode_stdchar::@1->mode_stdchar::@1]
  b1_from_b1:
  //SEG1110 [612] phi (byte) mode_stdchar::i#2 = (byte) mode_stdchar::i#1 [phi:mode_stdchar::@1->mode_stdchar::@1#0] -- register_copy 
    jmp b1
  //SEG1111 mode_stdchar::@1
  b1:
  //SEG1112 [613] *((const byte*) DTV_PALETTE#0 + (byte) mode_stdchar::i#2) ← *((const byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) mode_stdchar::i#2) [ mode_stdchar::i#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::i#2 ] ) -- pbuc1_derefidx_vbuz1=pbuc2_derefidx_vbuz1 
    ldy i
    lda DTV_PALETTE_DEFAULT,y
    sta DTV_PALETTE,y
  //SEG1113 [614] (byte) mode_stdchar::i#1 ← ++ (byte) mode_stdchar::i#2 [ mode_stdchar::i#1 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::i#1 ] ) -- vbuz1=_inc_vbuz1 
    inc i
  //SEG1114 [615] if((byte) mode_stdchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_stdchar::@1 [ mode_stdchar::i#1 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::i#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda i
    cmp #$10
    bne b1_from_b1
    jmp b8
  //SEG1115 mode_stdchar::@8
  b8:
  //SEG1116 [616] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BGCOL
  //SEG1117 [617] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG1118 [618] phi from mode_stdchar::@8 to mode_stdchar::@2 [phi:mode_stdchar::@8->mode_stdchar::@2]
  b2_from_b8:
  //SEG1119 [618] phi (byte*) mode_stdchar::ch#3 = (const byte*) mode_stdchar::SCREEN#0 [phi:mode_stdchar::@8->mode_stdchar::@2#0] -- pbuz1=pbuc1 
    lda #<SCREEN
    sta ch
    lda #>SCREEN
    sta ch+1
  //SEG1120 [618] phi (byte*) mode_stdchar::col#3 = (const byte*) mode_stdchar::COLORS#0 [phi:mode_stdchar::@8->mode_stdchar::@2#1] -- pbuz1=pbuc1 
    lda #<COLORS
    sta col
    lda #>COLORS
    sta col+1
  //SEG1121 [618] phi (byte) mode_stdchar::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_stdchar::@8->mode_stdchar::@2#2] -- vbuz1=vbuc1 
    lda #0
    sta cy
    jmp b2
  //SEG1122 [618] phi from mode_stdchar::@9 to mode_stdchar::@2 [phi:mode_stdchar::@9->mode_stdchar::@2]
  b2_from_b9:
  //SEG1123 [618] phi (byte*) mode_stdchar::ch#3 = (byte*) mode_stdchar::ch#1 [phi:mode_stdchar::@9->mode_stdchar::@2#0] -- register_copy 
  //SEG1124 [618] phi (byte*) mode_stdchar::col#3 = (byte*) mode_stdchar::col#1 [phi:mode_stdchar::@9->mode_stdchar::@2#1] -- register_copy 
  //SEG1125 [618] phi (byte) mode_stdchar::cy#4 = (byte) mode_stdchar::cy#1 [phi:mode_stdchar::@9->mode_stdchar::@2#2] -- register_copy 
    jmp b2
  //SEG1126 mode_stdchar::@2
  b2:
  //SEG1127 [619] phi from mode_stdchar::@2 to mode_stdchar::@3 [phi:mode_stdchar::@2->mode_stdchar::@3]
  b3_from_b2:
  //SEG1128 [619] phi (byte*) mode_stdchar::ch#2 = (byte*) mode_stdchar::ch#3 [phi:mode_stdchar::@2->mode_stdchar::@3#0] -- register_copy 
  //SEG1129 [619] phi (byte*) mode_stdchar::col#2 = (byte*) mode_stdchar::col#3 [phi:mode_stdchar::@2->mode_stdchar::@3#1] -- register_copy 
  //SEG1130 [619] phi (byte) mode_stdchar::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_stdchar::@2->mode_stdchar::@3#2] -- vbuz1=vbuc1 
    lda #0
    sta cx
    jmp b3
  //SEG1131 [619] phi from mode_stdchar::@3 to mode_stdchar::@3 [phi:mode_stdchar::@3->mode_stdchar::@3]
  b3_from_b3:
  //SEG1132 [619] phi (byte*) mode_stdchar::ch#2 = (byte*) mode_stdchar::ch#1 [phi:mode_stdchar::@3->mode_stdchar::@3#0] -- register_copy 
  //SEG1133 [619] phi (byte*) mode_stdchar::col#2 = (byte*) mode_stdchar::col#1 [phi:mode_stdchar::@3->mode_stdchar::@3#1] -- register_copy 
  //SEG1134 [619] phi (byte) mode_stdchar::cx#2 = (byte) mode_stdchar::cx#1 [phi:mode_stdchar::@3->mode_stdchar::@3#2] -- register_copy 
    jmp b3
  //SEG1135 mode_stdchar::@3
  b3:
  //SEG1136 [620] (byte~) mode_stdchar::$24 ← (byte) mode_stdchar::cx#2 + (byte) mode_stdchar::cy#4 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 mode_stdchar::$24 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 mode_stdchar::$24 ] ) -- vbuz1=vbuz2_plus_vbuz3 
    lda cx
    clc
    adc cy
    sta _24
  //SEG1137 [621] (byte~) mode_stdchar::$25 ← (byte~) mode_stdchar::$24 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 mode_stdchar::$25 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 mode_stdchar::$25 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and _24
    sta _25
  //SEG1138 [622] *((byte*) mode_stdchar::col#2) ← (byte~) mode_stdchar::$25 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 ] ) -- _deref_pbuz1=vbuz2 
    lda _25
    ldy #0
    sta (col),y
  //SEG1139 [623] (byte*) mode_stdchar::col#1 ← ++ (byte*) mode_stdchar::col#2 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG1140 [624] (byte~) mode_stdchar::$26 ← (byte) mode_stdchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$26 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$26 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and cy
    sta _26
  //SEG1141 [625] (byte~) mode_stdchar::$27 ← (byte~) mode_stdchar::$26 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$27 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$27 ] ) -- vbuz1=vbuz2_rol_4 
    lda _26
    asl
    asl
    asl
    asl
    sta _27
  //SEG1142 [626] (byte~) mode_stdchar::$28 ← (byte) mode_stdchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$27 mode_stdchar::$28 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$27 mode_stdchar::$28 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and cx
    sta _28
  //SEG1143 [627] (byte~) mode_stdchar::$29 ← (byte~) mode_stdchar::$27 | (byte~) mode_stdchar::$28 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$29 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$29 ] ) -- vbuz1=vbuz2_bor_vbuz3 
    lda _27
    ora _28
    sta _29
  //SEG1144 [628] *((byte*) mode_stdchar::ch#2) ← (byte~) mode_stdchar::$29 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 ] ) -- _deref_pbuz1=vbuz2 
    lda _29
    ldy #0
    sta (ch),y
  //SEG1145 [629] (byte*) mode_stdchar::ch#1 ← ++ (byte*) mode_stdchar::ch#2 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::ch#1 mode_stdchar::cx#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::ch#1 mode_stdchar::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc ch
    bne !+
    inc ch+1
  !:
  //SEG1146 [630] (byte) mode_stdchar::cx#1 ← ++ (byte) mode_stdchar::cx#2 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::ch#1 mode_stdchar::cx#1 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::ch#1 mode_stdchar::cx#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cx
  //SEG1147 [631] if((byte) mode_stdchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_stdchar::@3 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::ch#1 mode_stdchar::cx#1 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::ch#1 mode_stdchar::cx#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cx
    cmp #$28
    bne b3_from_b3
    jmp b9
  //SEG1148 mode_stdchar::@9
  b9:
  //SEG1149 [632] (byte) mode_stdchar::cy#1 ← ++ (byte) mode_stdchar::cy#4 [ mode_stdchar::cy#1 mode_stdchar::col#1 mode_stdchar::ch#1 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#1 mode_stdchar::col#1 mode_stdchar::ch#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG1150 [633] if((byte) mode_stdchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_stdchar::@2 [ mode_stdchar::cy#1 mode_stdchar::col#1 mode_stdchar::ch#1 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#1 mode_stdchar::col#1 mode_stdchar::ch#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2_from_b9
    jmp b4
  //SEG1151 mode_stdchar::@4
  b4:
  //SEG1152 [634] if(true) goto mode_stdchar::@5 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- true_then_la1 
    jmp b5_from_b4
    jmp breturn
  //SEG1153 mode_stdchar::@return
  breturn:
  //SEG1154 [635] return  [ ] ( main:2::menu:9::mode_stdchar:42 [ ] )
    rts
  //SEG1155 [636] phi from mode_stdchar::@4 to mode_stdchar::@5 [phi:mode_stdchar::@4->mode_stdchar::@5]
  b5_from_b4:
    jmp b5
  //SEG1156 mode_stdchar::@5
  b5:
  //SEG1157 [637] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_stdchar:42 [ keyboard_key_pressed::return#0 ] )
  //SEG1158 [153] phi from mode_stdchar::@5 to keyboard_key_pressed [phi:mode_stdchar::@5->keyboard_key_pressed]
  keyboard_key_pressed_from_b5:
  //SEG1159 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_stdchar::@5->keyboard_key_pressed#0] -- vbuz1=vbuc1 
    lda #KEY_SPACE
    sta keyboard_key_pressed.key
    jsr keyboard_key_pressed
  //SEG1160 [638] (byte) keyboard_key_pressed::return#13 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#13 ] ( main:2::menu:9::mode_stdchar:42 [ keyboard_key_pressed::return#13 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return
    sta keyboard_key_pressed.return_13
    jmp b16
  //SEG1161 mode_stdchar::@16
  b16:
  //SEG1162 [639] (byte~) mode_stdchar::$32 ← (byte) keyboard_key_pressed::return#13 [ mode_stdchar::$32 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::$32 ] ) -- vbuz1=vbuz2 
    lda keyboard_key_pressed.return_13
    sta _32
  //SEG1163 [640] if((byte~) mode_stdchar::$32==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_stdchar::@4 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- vbuz1_eq_0_then_la1 
    lda _32
    beq b4
    jmp breturn
}
//SEG1164 print_str_lines
print_str_lines: {
    .label ch = $de
    .label str = $6e
  //SEG1165 [642] phi from print_str_lines to print_str_lines::@1 [phi:print_str_lines->print_str_lines::@1]
  b1_from_print_str_lines:
  //SEG1166 [642] phi (byte*) print_line_cursor#17 = (const byte*) menu::SCREEN#0 [phi:print_str_lines->print_str_lines::@1#0] -- pbuz1=pbuc1 
    lda #<menu.SCREEN
    sta print_line_cursor
    lda #>menu.SCREEN
    sta print_line_cursor+1
  //SEG1167 [642] phi (byte*) print_char_cursor#19 = (const byte*) menu::SCREEN#0 [phi:print_str_lines->print_str_lines::@1#1] -- pbuz1=pbuc1 
    lda #<menu.SCREEN
    sta print_char_cursor
    lda #>menu.SCREEN
    sta print_char_cursor+1
  //SEG1168 [642] phi (byte*) print_str_lines::str#2 = (const string) MENU_TEXT#0 [phi:print_str_lines->print_str_lines::@1#2] -- pbuz1=pbuc1 
    lda #<MENU_TEXT
    sta str
    lda #>MENU_TEXT
    sta str+1
    jmp b1
  //SEG1169 print_str_lines::@1
  b1:
  //SEG1170 [643] if(*((byte*) print_str_lines::str#2)!=(byte) '@') goto print_str_lines::@4 [ print_str_lines::str#2 print_char_cursor#19 print_line_cursor#17 ] ( main:2::menu:9::print_str_lines:33 [ print_str_lines::str#2 print_char_cursor#19 print_line_cursor#17 ] ) -- _deref_pbuz1_neq_vbuc1_then_la1 
    ldy #0
    lda (str),y
    cmp #'@'
    bne b4_from_b1
    jmp breturn
  //SEG1171 print_str_lines::@return
  breturn:
  //SEG1172 [644] return  [ ] ( main:2::menu:9::print_str_lines:33 [ ] )
    rts
  //SEG1173 [645] phi from print_str_lines::@1 print_str_lines::@5 to print_str_lines::@4 [phi:print_str_lines::@1/print_str_lines::@5->print_str_lines::@4]
  b4_from_b1:
  b4_from_b5:
  //SEG1174 [645] phi (byte*) print_char_cursor#17 = (byte*) print_char_cursor#19 [phi:print_str_lines::@1/print_str_lines::@5->print_str_lines::@4#0] -- register_copy 
  //SEG1175 [645] phi (byte*) print_str_lines::str#3 = (byte*) print_str_lines::str#2 [phi:print_str_lines::@1/print_str_lines::@5->print_str_lines::@4#1] -- register_copy 
    jmp b4
  //SEG1176 print_str_lines::@4
  b4:
  //SEG1177 [646] (byte) print_str_lines::ch#0 ← *((byte*) print_str_lines::str#3) [ print_line_cursor#17 print_str_lines::str#3 print_char_cursor#17 print_str_lines::ch#0 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#3 print_char_cursor#17 print_str_lines::ch#0 ] ) -- vbuz1=_deref_pbuz2 
    ldy #0
    lda (str),y
    sta ch
  //SEG1178 [647] (byte*) print_str_lines::str#0 ← ++ (byte*) print_str_lines::str#3 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] ) -- pbuz1=_inc_pbuz1 
    inc str
    bne !+
    inc str+1
  !:
  //SEG1179 [648] if((byte) print_str_lines::ch#0==(byte) '@') goto print_str_lines::@5 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] ) -- vbuz1_eq_vbuc1_then_la1 
    lda ch
    cmp #'@'
    beq b5_from_b4
    jmp b8
  //SEG1180 print_str_lines::@8
  b8:
  //SEG1181 [649] *((byte*) print_char_cursor#17) ← (byte) print_str_lines::ch#0 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] ) -- _deref_pbuz1=vbuz2 
    lda ch
    ldy #0
    sta (print_char_cursor),y
  //SEG1182 [650] (byte*) print_char_cursor#1 ← ++ (byte*) print_char_cursor#17 [ print_line_cursor#17 print_str_lines::str#0 print_str_lines::ch#0 print_char_cursor#1 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#0 print_str_lines::ch#0 print_char_cursor#1 ] ) -- pbuz1=_inc_pbuz1 
    inc print_char_cursor
    bne !+
    inc print_char_cursor+1
  !:
  //SEG1183 [651] phi from print_str_lines::@4 print_str_lines::@8 to print_str_lines::@5 [phi:print_str_lines::@4/print_str_lines::@8->print_str_lines::@5]
  b5_from_b4:
  b5_from_b8:
  //SEG1184 [651] phi (byte*) print_char_cursor#32 = (byte*) print_char_cursor#17 [phi:print_str_lines::@4/print_str_lines::@8->print_str_lines::@5#0] -- register_copy 
    jmp b5
  //SEG1185 print_str_lines::@5
  b5:
  //SEG1186 [652] if((byte) print_str_lines::ch#0!=(byte) '@') goto print_str_lines::@4 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#32 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#32 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda ch
    cmp #'@'
    bne b4_from_b5
  //SEG1187 [653] phi from print_str_lines::@5 to print_str_lines::@9 [phi:print_str_lines::@5->print_str_lines::@9]
  b9_from_b5:
    jmp b9
  //SEG1188 print_str_lines::@9
  b9:
  //SEG1189 [654] call print_ln param-assignment [ print_str_lines::str#0 print_line_cursor#19 ] ( main:2::menu:9::print_str_lines:33 [ print_str_lines::str#0 print_line_cursor#19 ] )
  //SEG1190 [656] phi from print_str_lines::@9 to print_ln [phi:print_str_lines::@9->print_ln]
  print_ln_from_b9:
    jsr print_ln
  //SEG1191 [655] (byte*~) print_char_cursor#95 ← (byte*) print_line_cursor#19 [ print_str_lines::str#0 print_char_cursor#95 print_line_cursor#19 ] ( main:2::menu:9::print_str_lines:33 [ print_str_lines::str#0 print_char_cursor#95 print_line_cursor#19 ] ) -- pbuz1=pbuz2 
    lda print_line_cursor
    sta print_char_cursor
    lda print_line_cursor+1
    sta print_char_cursor+1
  //SEG1192 [642] phi from print_str_lines::@9 to print_str_lines::@1 [phi:print_str_lines::@9->print_str_lines::@1]
  b1_from_b9:
  //SEG1193 [642] phi (byte*) print_line_cursor#17 = (byte*) print_line_cursor#19 [phi:print_str_lines::@9->print_str_lines::@1#0] -- register_copy 
  //SEG1194 [642] phi (byte*) print_char_cursor#19 = (byte*~) print_char_cursor#95 [phi:print_str_lines::@9->print_str_lines::@1#1] -- register_copy 
  //SEG1195 [642] phi (byte*) print_str_lines::str#2 = (byte*) print_str_lines::str#0 [phi:print_str_lines::@9->print_str_lines::@1#2] -- register_copy 
    jmp b1
}
//SEG1196 print_ln
print_ln: {
  //SEG1197 [657] phi from print_ln print_ln::@1 to print_ln::@1 [phi:print_ln/print_ln::@1->print_ln::@1]
  b1_from_print_ln:
  b1_from_b1:
  //SEG1198 [657] phi (byte*) print_line_cursor#18 = (byte*) print_line_cursor#17 [phi:print_ln/print_ln::@1->print_ln::@1#0] -- register_copy 
    jmp b1
  //SEG1199 print_ln::@1
  b1:
  //SEG1200 [658] (byte*) print_line_cursor#19 ← (byte*) print_line_cursor#18 + (byte/signed byte/word/signed word/dword/signed dword) 40 [ print_line_cursor#19 print_char_cursor#32 ] ( main:2::menu:9::print_str_lines:33::print_ln:654 [ print_str_lines::str#0 print_line_cursor#19 print_char_cursor#32 ] ) -- pbuz1=pbuz1_plus_vbuc1 
    lda print_line_cursor
    clc
    adc #$28
    sta print_line_cursor
    bcc !+
    inc print_line_cursor+1
  !:
  //SEG1201 [659] if((byte*) print_line_cursor#19<(byte*) print_char_cursor#32) goto print_ln::@1 [ print_line_cursor#19 print_char_cursor#32 ] ( main:2::menu:9::print_str_lines:33::print_ln:654 [ print_str_lines::str#0 print_line_cursor#19 print_char_cursor#32 ] ) -- pbuz1_lt_pbuz2_then_la1 
    lda print_line_cursor+1
    cmp print_char_cursor+1
    bcc b1_from_b1
    bne !+
    lda print_line_cursor
    cmp print_char_cursor
    bcc b1_from_b1
  !:
    jmp breturn
  //SEG1202 print_ln::@return
  breturn:
  //SEG1203 [660] return  [ print_line_cursor#19 ] ( main:2::menu:9::print_str_lines:33::print_ln:654 [ print_str_lines::str#0 print_line_cursor#19 ] )
    rts
}
//SEG1204 print_cls
print_cls: {
    .label sc = $74
  //SEG1205 [662] phi from print_cls to print_cls::@1 [phi:print_cls->print_cls::@1]
  b1_from_print_cls:
  //SEG1206 [662] phi (byte*) print_cls::sc#2 = (const byte*) menu::SCREEN#0 [phi:print_cls->print_cls::@1#0] -- pbuz1=pbuc1 
    lda #<menu.SCREEN
    sta sc
    lda #>menu.SCREEN
    sta sc+1
    jmp b1
  //SEG1207 [662] phi from print_cls::@1 to print_cls::@1 [phi:print_cls::@1->print_cls::@1]
  b1_from_b1:
  //SEG1208 [662] phi (byte*) print_cls::sc#2 = (byte*) print_cls::sc#1 [phi:print_cls::@1->print_cls::@1#0] -- register_copy 
    jmp b1
  //SEG1209 print_cls::@1
  b1:
  //SEG1210 [663] *((byte*) print_cls::sc#2) ← (byte) ' ' [ print_cls::sc#2 ] ( main:2::menu:9::print_cls:31 [ print_cls::sc#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #' '
    ldy #0
    sta (sc),y
  //SEG1211 [664] (byte*) print_cls::sc#1 ← ++ (byte*) print_cls::sc#2 [ print_cls::sc#1 ] ( main:2::menu:9::print_cls:31 [ print_cls::sc#1 ] ) -- pbuz1=_inc_pbuz1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG1212 [665] if((byte*) print_cls::sc#1!=(const byte*) menu::SCREEN#0+(word/signed word/dword/signed dword) 1000) goto print_cls::@1 [ print_cls::sc#1 ] ( main:2::menu:9::print_cls:31 [ print_cls::sc#1 ] ) -- pbuz1_neq_pbuc1_then_la1 
    lda sc+1
    cmp #>menu.SCREEN+$3e8
    bne b1_from_b1
    lda sc
    cmp #<menu.SCREEN+$3e8
    bne b1_from_b1
    jmp breturn
  //SEG1213 print_cls::@return
  breturn:
  //SEG1214 [666] return  [ ] ( main:2::menu:9::print_cls:31 [ ] )
    rts
}
//SEG1215 print_set_screen
print_set_screen: {
    jmp breturn
  //SEG1216 print_set_screen::@return
  breturn:
  //SEG1217 [668] return  [ ] ( main:2::menu:9::print_set_screen:29 [ ] )
    rts
}
  DTV_PALETTE_DEFAULT: .byte 0, $f, $36, $be, $58, $db, $86, $ff, $29, $26, $3b, 5, 7, $df, $9a, $a
  keyboard_matrix_row_bitmask: .byte $fe, $fd, $fb, $f7, $ef, $df, $bf, $7f
  keyboard_matrix_col_bitmask: .byte 1, 2, 4, 8, $10, $20, $40, $80
  MENU_TEXT: .text "C64DTV Graphics Modes            CCLHBME@"+"                                 OHIIMCC@"+"                                 LUNCMMM@"+"----------------------------------------@"+"1. Standard Char             (V) 0000000@"+"2. Extended Color Char       (V) 0000001@"+"3. Multicolor Char           (V) 0000010@"+"4. Standard Bitmap           (V) 0000100@"+"5. Multicolor Bitmap         (V) 0000110@"+"6. High Color Standard Char  (H) 0001000@"+"7. High Extended Color Char  (H) 0001001@"+"8. High Multicolor Char      (H) 0001010@"+"9. High Multicolor Bitmap    (H) 0001110@"+"a. Sixs Fred 2               (D) 0010111@"+"b. Two Plane Bitmap          (D) 0011101@"+"c. Sixs Fred (2 Plane MC BM) (D) 0011111@"+"d. 8bpp Pixel Cell           (D) 0111011@"+"e. Chunky 8bpp Bitmap        (D) 1111011@"+"----------------------------------------@"+"    (V) vicII (H) vicII+hicol (D) c64dtv@"+"@"

REGISTER UPLIFT POTENTIAL REGISTERS
Statement [5] *((const byte*) DTV_FEATURE#0) ← (const byte) DTV_FEATURE_ENABLE#0 [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [10] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) menu::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9 [ ] ) always clobbers reg byte a 
Statement [11] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const dword) DTV_COLOR_BANK_DEFAULT#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9 [ ] ) always clobbers reg byte a 
Statement [12] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const dword) DTV_COLOR_BANK_DEFAULT#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9 [ ] ) always clobbers reg byte a 
Statement [13] *((const byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9 [ ] ) always clobbers reg byte a 
Statement [14] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9 [ ] ) always clobbers reg byte a 
Statement [15] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) menu::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9 [ ] ) always clobbers reg byte a 
Statement [16] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9 [ ] ) always clobbers reg byte a 
Statement [17] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9 [ ] ) always clobbers reg byte a 
Statement [18] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) menu::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) menu::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9 [ ] ) always clobbers reg byte a 
Statement [20] *((const byte*) DTV_PALETTE#0 + (byte) menu::i#2) ← *((const byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) menu::i#2) [ menu::i#2 ] ( main:2::menu:9 [ menu::i#2 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:2 [ menu::i#2 menu::i#1 ]
Statement [24] *((byte*) menu::c#2) ← (const byte) LIGHT_GREEN#0 [ menu::c#2 ] ( main:2::menu:9 [ menu::c#2 ] ) always clobbers reg byte a reg byte y 
Statement [26] if((byte*) menu::c#1!=(const byte*) COLS#0+(word/signed word/dword/signed dword) 1000) goto menu::@2 [ menu::c#1 ] ( main:2::menu:9 [ menu::c#1 ] ) always clobbers reg byte a 
Statement [27] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9 [ ] ) always clobbers reg byte a 
Statement [28] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9 [ ] ) always clobbers reg byte a 
Statement [113] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0|(const byte) DTV_CONTROL_CHUNKY_ON#0|(const byte) DTV_CONTROL_COLORRAM_OFF#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) always clobbers reg byte a 
Statement [114] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) always clobbers reg byte a 
Statement [115] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) always clobbers reg byte a 
Statement [116] *((const byte*) DTV_PLANEB_START_LO#0) ← <<(const dword) mode_8bppchunkybmm::PLANEB#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) always clobbers reg byte a 
Statement [117] *((const byte*) DTV_PLANEB_START_MI#0) ← ><(const dword) mode_8bppchunkybmm::PLANEB#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) always clobbers reg byte a 
Statement [118] *((const byte*) DTV_PLANEB_START_HI#0) ← <>(const dword) mode_8bppchunkybmm::PLANEB#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) always clobbers reg byte a 
Statement [119] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 8 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) always clobbers reg byte a 
Statement [120] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) always clobbers reg byte a 
Statement [121] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) always clobbers reg byte a 
Statement [122] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) always clobbers reg byte a 
Statement [131] if((byte*) mode_8bppchunkybmm::gfxb#3!=(word/dword/signed dword) 32768) goto mode_8bppchunkybmm::@4 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:9 [ mode_8bppchunkybmm::gfxbCpuBank#4 mode_8bppchunkybmm::gfxbCpuBank#7 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::gfxbCpuBank#2 ]
Statement [136] (word~) mode_8bppchunkybmm::$20 ← (word) mode_8bppchunkybmm::x#2 + (byte) mode_8bppchunkybmm::y#6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::$20 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::$20 ] ) always clobbers reg byte a 
Statement [137] (byte) mode_8bppchunkybmm::c#0 ← ((byte)) (word~) mode_8bppchunkybmm::$20 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::c#0 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::c#0 ] ) always clobbers reg byte a 
Statement [138] *((byte*) mode_8bppchunkybmm::gfxb#4) ← (byte) mode_8bppchunkybmm::c#0 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 ] ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:9 [ mode_8bppchunkybmm::gfxbCpuBank#4 mode_8bppchunkybmm::gfxbCpuBank#7 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::gfxbCpuBank#2 ]
Statement [141] if((word) mode_8bppchunkybmm::x#1!=(word/signed word/dword/signed dword) 320) goto mode_8bppchunkybmm::@3 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#1 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#1 ] ) always clobbers reg byte a 
Statement [154] (byte) keyboard_key_pressed::colidx#0 ← (byte) keyboard_key_pressed::key#22 & (byte/signed byte/word/signed word/dword/signed dword) 7 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:12 [ keyboard_key_pressed::key#22 ]
Statement [155] (byte) keyboard_key_pressed::rowidx#0 ← (byte) keyboard_key_pressed::key#22 >> (byte/signed byte/word/signed word/dword/signed dword) 3 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:145 [ keyboard_key_pressed::colidx#0 ]
Statement [160] (byte) keyboard_key_pressed::return#0 ← (byte~) keyboard_key_pressed::$2 & *((const byte[]) keyboard_matrix_col_bitmask#0 + (byte) keyboard_key_pressed::colidx#0) [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::return#0 ] ) always clobbers reg byte a 
Statement [162] *((const byte*) CIA1_PORT_A#0) ← *((const byte[8]) keyboard_matrix_row_bitmask#0 + (byte) keyboard_matrix_read::rowid#0) [ ] ( main:2::menu:9::keyboard_key_pressed:37::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:44::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:51::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:58::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:65::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:72::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:79::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:86::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:93::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:100::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:107::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] ) always clobbers reg byte a 
Statement [163] (byte) keyboard_matrix_read::return#0 ← ~ *((const byte*) CIA1_PORT_B#0) [ keyboard_matrix_read::return#0 ] ( main:2::menu:9::keyboard_key_pressed:37::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:44::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:51::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:58::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:65::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:72::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:79::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:86::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:93::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:100::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:107::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] ) always clobbers reg byte a 
Statement asm { .byte$32,$dd lda$ff .byte$32,$00  } always clobbers reg byte a 
Statement [169] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0|(const byte) DTV_CONTROL_CHUNKY_ON#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [170] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [171] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [172] *((const byte*) DTV_PLANEA_START_LO#0) ← <(const byte*) mode_8bpppixelcell::PLANEA#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [173] *((const byte*) DTV_PLANEA_START_MI#0) ← >(const byte*) mode_8bpppixelcell::PLANEA#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [174] *((const byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [175] *((const byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [176] *((const byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [177] *((const byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [178] *((const byte*) DTV_PLANEB_START_LO#0) ← <(const byte*) mode_8bpppixelcell::PLANEB#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [179] *((const byte*) DTV_PLANEB_START_MI#0) ← >(const byte*) mode_8bpppixelcell::PLANEB#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [180] *((const byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [181] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [182] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [183] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [184] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [191] (byte~) mode_8bpppixelcell::$11 ← (byte) mode_8bpppixelcell::ay#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$11 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$11 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:15 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:16 [ mode_8bpppixelcell::ax#2 mode_8bpppixelcell::ax#1 ]
Statement [193] (byte~) mode_8bpppixelcell::$13 ← (byte) mode_8bpppixelcell::ax#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$12 mode_8bpppixelcell::$13 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$12 mode_8bpppixelcell::$13 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:153 [ mode_8bpppixelcell::$12 ]
Statement [195] *((byte*) mode_8bpppixelcell::gfxa#2) ← (byte~) mode_8bpppixelcell::$14 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 ] ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:15 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:16 [ mode_8bpppixelcell::ax#2 mode_8bpppixelcell::ax#1 ]
Statement [201] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 50 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [204] (byte) mode_8bpppixelcell::bits#0 ← *((byte*) mode_8bpppixelcell::chargen#2) [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#0 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#0 ] ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:19 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:19 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:26 [ mode_8bpppixelcell::col#2 mode_8bpppixelcell::col#5 mode_8bpppixelcell::col#7 mode_8bpppixelcell::col#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:26 [ mode_8bpppixelcell::col#2 mode_8bpppixelcell::col#5 mode_8bpppixelcell::col#7 mode_8bpppixelcell::col#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:22 [ mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cr#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:22 [ mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cr#1 ]
Statement [207] (byte~) mode_8bpppixelcell::$17 ← (byte) mode_8bpppixelcell::bits#2 & (byte/word/signed word/dword/signed dword) 128 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::$17 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::$17 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:23 [ mode_8bpppixelcell::bits#2 mode_8bpppixelcell::bits#0 mode_8bpppixelcell::bits#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:27 [ mode_8bpppixelcell::cp#2 mode_8bpppixelcell::cp#1 ]
Statement [211] *((byte*) mode_8bpppixelcell::gfxb#2) ← (byte) mode_8bpppixelcell::c#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:23 [ mode_8bpppixelcell::bits#2 mode_8bpppixelcell::bits#0 mode_8bpppixelcell::bits#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:27 [ mode_8bpppixelcell::cp#2 mode_8bpppixelcell::cp#1 ]
Statement [221] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 55 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [229] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [230] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [231] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [232] *((const byte*) DTV_PLANEA_START_LO#0) ← <(const byte*) mode_sixsfred::PLANEA#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [233] *((const byte*) DTV_PLANEA_START_MI#0) ← >(const byte*) mode_sixsfred::PLANEA#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [234] *((const byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [235] *((const byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [236] *((const byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [237] *((const byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [238] *((const byte*) DTV_PLANEB_START_LO#0) ← <(const byte*) mode_sixsfred::PLANEB#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [239] *((const byte*) DTV_PLANEB_START_MI#0) ← >(const byte*) mode_sixsfred::PLANEB#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [240] *((const byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [241] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [242] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [243] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [244] *((const byte*) DTV_COLOR_BANK_LO#0) ← <(const byte*) mode_sixsfred::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [245] *((const byte*) DTV_COLOR_BANK_HI#0) ← >(const byte*) mode_sixsfred::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [250] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [254] (byte~) mode_sixsfred::$16 ← (byte~) mode_sixsfred::$15 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 mode_sixsfred::$16 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 mode_sixsfred::$16 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:30 [ mode_sixsfred::cy#4 mode_sixsfred::cy#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:31 [ mode_sixsfred::cx#2 mode_sixsfred::cx#1 ]
Statement [255] *((byte*) mode_sixsfred::col#2) ← (byte~) mode_sixsfred::$16 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 ] ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:30 [ mode_sixsfred::cy#4 mode_sixsfred::cy#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:31 [ mode_sixsfred::cx#2 mode_sixsfred::cx#1 ]
Statement [264] (byte) mode_sixsfred::row#0 ← (byte~) mode_sixsfred::$19 & (byte/signed byte/word/signed word/dword/signed dword) 3 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 mode_sixsfred::row#0 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 mode_sixsfred::row#0 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:34 [ mode_sixsfred::ay#4 mode_sixsfred::ay#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:37 [ mode_sixsfred::ax#2 mode_sixsfred::ax#1 ]
Statement [265] *((byte*) mode_sixsfred::gfxa#2) ← *((const byte[]) mode_sixsfred::row_bitmask#0 + (byte) mode_sixsfred::row#0) [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 ] ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:34 [ mode_sixsfred::ay#4 mode_sixsfred::ay#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:37 [ mode_sixsfred::ax#2 mode_sixsfred::ax#1 ]
Statement [273] *((byte*) mode_sixsfred::gfxb#2) ← (byte/signed byte/word/signed word/dword/signed dword) 27 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#2 mode_sixsfred::bx#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#2 mode_sixsfred::bx#2 ] ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:38 [ mode_sixsfred::by#4 mode_sixsfred::by#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:38 [ mode_sixsfred::by#4 mode_sixsfred::by#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:41 [ mode_sixsfred::bx#2 mode_sixsfred::bx#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:41 [ mode_sixsfred::bx#2 mode_sixsfred::bx#1 ]
Statement [286] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [287] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [288] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [289] *((const byte*) DTV_PLANEA_START_LO#0) ← <(const byte*) mode_twoplanebitmap::PLANEA#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [290] *((const byte*) DTV_PLANEA_START_MI#0) ← >(const byte*) mode_twoplanebitmap::PLANEA#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [291] *((const byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [292] *((const byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [293] *((const byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [294] *((const byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [295] *((const byte*) DTV_PLANEB_START_LO#0) ← <(const byte*) mode_twoplanebitmap::PLANEB#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [296] *((const byte*) DTV_PLANEB_START_MI#0) ← >(const byte*) mode_twoplanebitmap::PLANEB#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [297] *((const byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [298] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [299] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [300] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [301] *((const byte*) DTV_COLOR_BANK_LO#0) ← <(const byte*) mode_twoplanebitmap::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [302] *((const byte*) DTV_COLOR_BANK_HI#0) ← >(const byte*) mode_twoplanebitmap::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [307] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [308] *((const byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 112 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [309] *((const byte*) BGCOL2#0) ← (byte/word/signed word/dword/signed dword) 212 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [312] (byte~) mode_twoplanebitmap::$14 ← (byte) mode_twoplanebitmap::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$14 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$14 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:43 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cy#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:44 [ mode_twoplanebitmap::cx#2 mode_twoplanebitmap::cx#1 ]
Statement [314] (byte~) mode_twoplanebitmap::$16 ← (byte) mode_twoplanebitmap::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$15 mode_twoplanebitmap::$16 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$15 mode_twoplanebitmap::$16 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:166 [ mode_twoplanebitmap::$15 ]
Statement [316] *((byte*) mode_twoplanebitmap::col#2) ← (byte~) mode_twoplanebitmap::$17 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 ] ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:43 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cy#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:44 [ mode_twoplanebitmap::cx#2 mode_twoplanebitmap::cx#1 ]
Statement [324] (byte~) mode_twoplanebitmap::$20 ← (byte) mode_twoplanebitmap::ay#4 & (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::$20 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::$20 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:47 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ay#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:50 [ mode_twoplanebitmap::ax#2 mode_twoplanebitmap::ax#1 ]
Statement [326] *((byte*) mode_twoplanebitmap::gfxa#3) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:47 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ay#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:50 [ mode_twoplanebitmap::ax#2 mode_twoplanebitmap::ax#1 ]
Statement [335] *((byte*) mode_twoplanebitmap::gfxb#2) ← (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::bx#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::bx#2 ] ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:51 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::by#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:51 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::by#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:54 [ mode_twoplanebitmap::bx#2 mode_twoplanebitmap::bx#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:54 [ mode_twoplanebitmap::bx#2 mode_twoplanebitmap::bx#1 ]
Statement [348] *((byte*) mode_twoplanebitmap::gfxa#3) ← (byte/word/signed word/dword/signed dword) 255 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ) always clobbers reg byte a reg byte y 
Statement [350] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [351] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [352] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [353] *((const byte*) DTV_PLANEA_START_LO#0) ← <(const byte*) mode_sixsfred2::PLANEA#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [354] *((const byte*) DTV_PLANEA_START_MI#0) ← >(const byte*) mode_sixsfred2::PLANEA#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [355] *((const byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [356] *((const byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [357] *((const byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [358] *((const byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [359] *((const byte*) DTV_PLANEB_START_LO#0) ← <(const byte*) mode_sixsfred2::PLANEB#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [360] *((const byte*) DTV_PLANEB_START_MI#0) ← >(const byte*) mode_sixsfred2::PLANEB#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [361] *((const byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [362] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [363] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [364] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [365] *((const byte*) DTV_COLOR_BANK_LO#0) ← <(const byte*) mode_sixsfred2::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [366] *((const byte*) DTV_COLOR_BANK_HI#0) ← >(const byte*) mode_sixsfred2::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [371] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [374] (byte~) mode_sixsfred2::$14 ← (byte) mode_sixsfred2::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 3 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$14 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$14 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:56 [ mode_sixsfred2::cy#4 mode_sixsfred2::cy#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:57 [ mode_sixsfred2::cx#2 mode_sixsfred2::cx#1 ]
Statement [376] (byte~) mode_sixsfred2::$16 ← (byte) mode_sixsfred2::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 3 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$15 mode_sixsfred2::$16 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$15 mode_sixsfred2::$16 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:173 [ mode_sixsfred2::$15 ]
Statement [378] *((byte*) mode_sixsfred2::col#2) ← (byte~) mode_sixsfred2::$17 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 ] ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:56 [ mode_sixsfred2::cy#4 mode_sixsfred2::cy#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:57 [ mode_sixsfred2::cx#2 mode_sixsfred2::cx#1 ]
Statement [387] (byte) mode_sixsfred2::row#0 ← (byte~) mode_sixsfred2::$20 & (byte/signed byte/word/signed word/dword/signed dword) 3 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 mode_sixsfred2::row#0 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 mode_sixsfred2::row#0 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:60 [ mode_sixsfred2::ay#4 mode_sixsfred2::ay#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:63 [ mode_sixsfred2::ax#2 mode_sixsfred2::ax#1 ]
Statement [388] *((byte*) mode_sixsfred2::gfxa#2) ← *((const byte[]) mode_sixsfred2::row_bitmask#0 + (byte) mode_sixsfred2::row#0) [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 ] ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:60 [ mode_sixsfred2::ay#4 mode_sixsfred2::ay#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:63 [ mode_sixsfred2::ax#2 mode_sixsfred2::ax#1 ]
Statement [396] *((byte*) mode_sixsfred2::gfxb#2) ← (byte/signed byte/word/signed word/dword/signed dword) 27 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#2 mode_sixsfred2::bx#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#2 mode_sixsfred2::bx#2 ] ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:64 [ mode_sixsfred2::by#4 mode_sixsfred2::by#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:64 [ mode_sixsfred2::by#4 mode_sixsfred2::by#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:67 [ mode_sixsfred2::bx#2 mode_sixsfred2::bx#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:67 [ mode_sixsfred2::bx#2 mode_sixsfred2::bx#1 ]
Statement [409] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_hicolmcchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [410] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_hicolmcchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [411] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_hicolmcchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [412] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [413] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [414] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_hicolmcchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [415] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [416] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0|(const byte) VIC_MCM#0 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [417] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_hicolmcchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_hicolmcchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [422] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [423] *((const byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 80 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [424] *((const byte*) BGCOL2#0) ← (byte/signed byte/word/signed word/dword/signed dword) 84 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [425] *((const byte*) BGCOL3#0) ← (byte/signed byte/word/signed word/dword/signed dword) 88 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [428] (byte~) mode_hicolmcchar::$25 ← (byte) mode_hicolmcchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$25 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$25 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:69 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cy#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:70 [ mode_hicolmcchar::cx#2 mode_hicolmcchar::cx#1 ]
Statement [430] (byte~) mode_hicolmcchar::$27 ← (byte) mode_hicolmcchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$26 mode_hicolmcchar::$27 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$26 mode_hicolmcchar::$27 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:181 [ mode_hicolmcchar::$26 ]
Statement [432] *((byte*) mode_hicolmcchar::col#2) ← (byte) mode_hicolmcchar::v#0 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:69 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cy#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:70 [ mode_hicolmcchar::cx#2 mode_hicolmcchar::cx#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:183 [ mode_hicolmcchar::v#0 ]
Statement [434] *((byte*) mode_hicolmcchar::ch#2) ← (byte) mode_hicolmcchar::v#0 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::cx#2 mode_hicolmcchar::ch#2 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::cx#2 mode_hicolmcchar::ch#2 ] ) always clobbers reg byte y 
Statement [447] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_hicolecmchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [448] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_hicolecmchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [449] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_hicolecmchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [450] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [451] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [452] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_hicolecmchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [453] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(const byte) VIC_ECM#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [454] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [455] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_hicolecmchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_hicolecmchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [460] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [461] *((const byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 80 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [462] *((const byte*) BGCOL2#0) ← (byte/signed byte/word/signed word/dword/signed dword) 84 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [463] *((const byte*) BGCOL3#0) ← (byte/signed byte/word/signed word/dword/signed dword) 88 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [464] *((const byte*) BGCOL4#0) ← (byte/signed byte/word/signed word/dword/signed dword) 92 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [467] (byte~) mode_hicolecmchar::$25 ← (byte) mode_hicolecmchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$25 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$25 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:76 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cy#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:77 [ mode_hicolecmchar::cx#2 mode_hicolecmchar::cx#1 ]
Statement [469] (byte~) mode_hicolecmchar::$27 ← (byte) mode_hicolecmchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$26 mode_hicolecmchar::$27 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$26 mode_hicolecmchar::$27 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:187 [ mode_hicolecmchar::$26 ]
Statement [471] *((byte*) mode_hicolecmchar::col#2) ← (byte) mode_hicolecmchar::v#0 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:76 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cy#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:77 [ mode_hicolecmchar::cx#2 mode_hicolecmchar::cx#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:189 [ mode_hicolecmchar::v#0 ]
Statement [473] *((byte*) mode_hicolecmchar::ch#2) ← (byte) mode_hicolecmchar::v#0 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::cx#2 mode_hicolecmchar::ch#2 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::cx#2 mode_hicolecmchar::ch#2 ] ) always clobbers reg byte y 
Statement [486] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_hicolstdchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) always clobbers reg byte a 
Statement [487] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_hicolstdchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) always clobbers reg byte a 
Statement [488] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_hicolstdchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) always clobbers reg byte a 
Statement [489] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) always clobbers reg byte a 
Statement [490] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) always clobbers reg byte a 
Statement [491] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_hicolstdchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) always clobbers reg byte a 
Statement [492] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) always clobbers reg byte a 
Statement [493] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) always clobbers reg byte a 
Statement [494] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_hicolstdchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_hicolstdchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) always clobbers reg byte a 
Statement [499] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) always clobbers reg byte a 
Statement [500] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) always clobbers reg byte a 
Statement [503] (byte~) mode_hicolstdchar::$24 ← (byte) mode_hicolstdchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$24 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$24 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:83 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cy#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:84 [ mode_hicolstdchar::cx#2 mode_hicolstdchar::cx#1 ]
Statement [505] (byte~) mode_hicolstdchar::$26 ← (byte) mode_hicolstdchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$25 mode_hicolstdchar::$26 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$25 mode_hicolstdchar::$26 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:193 [ mode_hicolstdchar::$25 ]
Statement [507] *((byte*) mode_hicolstdchar::col#2) ← (byte) mode_hicolstdchar::v#0 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:83 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cy#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:84 [ mode_hicolstdchar::cx#2 mode_hicolstdchar::cx#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:195 [ mode_hicolstdchar::v#0 ]
Statement [509] *((byte*) mode_hicolstdchar::ch#2) ← (byte) mode_hicolstdchar::v#0 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::cx#2 mode_hicolstdchar::ch#2 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::cx#2 mode_hicolstdchar::ch#2 ] ) always clobbers reg byte y 
Statement [522] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_mcchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [523] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_mcchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [524] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_mcchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [525] *((const byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [526] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [527] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_mcchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [528] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [529] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0|(const byte) VIC_MCM#0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [530] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_mcchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_mcchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [532] *((const byte*) DTV_PALETTE#0 + (byte) mode_mcchar::i#2) ← *((const byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) mode_mcchar::i#2) [ mode_mcchar::i#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::i#2 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:89 [ mode_mcchar::i#2 mode_mcchar::i#1 ]
Statement [535] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [536] *((const byte*) BGCOL1#0) ← (const byte) BLACK#0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [537] *((const byte*) BGCOL2#0) ← (const byte) GREEN#0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [538] *((const byte*) BGCOL3#0) ← (const byte) BLUE#0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [542] (byte~) mode_mcchar::$26 ← (byte~) mode_mcchar::$25 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 mode_mcchar::$26 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 mode_mcchar::$26 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:90 [ mode_mcchar::cy#4 mode_mcchar::cy#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:91 [ mode_mcchar::cx#2 mode_mcchar::cx#1 ]
Statement [543] *((byte*) mode_mcchar::col#2) ← (byte~) mode_mcchar::$26 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 ] ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:90 [ mode_mcchar::cy#4 mode_mcchar::cy#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:91 [ mode_mcchar::cx#2 mode_mcchar::cx#1 ]
Statement [545] (byte~) mode_mcchar::$27 ← (byte) mode_mcchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$27 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$27 ] ) always clobbers reg byte a 
Statement [547] (byte~) mode_mcchar::$29 ← (byte) mode_mcchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$28 mode_mcchar::$29 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$28 mode_mcchar::$29 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:201 [ mode_mcchar::$28 ]
Statement [549] *((byte*) mode_mcchar::ch#2) ← (byte~) mode_mcchar::$30 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 ] ) always clobbers reg byte y 
Statement [562] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [563] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_ecmchar::ECMCHAR_COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [564] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_ecmchar::ECMCHAR_COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [565] *((const byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [566] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [567] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [568] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(const byte) VIC_ECM#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [569] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [570] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_ecmchar::ECMCHAR_SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [572] *((const byte*) DTV_PALETTE#0 + (byte) mode_ecmchar::i#2) ← *((const byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) mode_ecmchar::i#2) [ mode_ecmchar::i#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::i#2 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:96 [ mode_ecmchar::i#2 mode_ecmchar::i#1 ]
Statement [575] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [576] *((const byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [577] *((const byte*) BGCOL2#0) ← (byte/signed byte/word/signed word/dword/signed dword) 2 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [578] *((const byte*) BGCOL3#0) ← (byte/signed byte/word/signed word/dword/signed dword) 5 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [579] *((const byte*) BGCOL4#0) ← (byte/signed byte/word/signed word/dword/signed dword) 6 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [583] (byte~) mode_ecmchar::$26 ← (byte~) mode_ecmchar::$25 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 mode_ecmchar::$26 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 mode_ecmchar::$26 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:97 [ mode_ecmchar::cy#4 mode_ecmchar::cy#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:98 [ mode_ecmchar::cx#2 mode_ecmchar::cx#1 ]
Statement [584] *((byte*) mode_ecmchar::col#2) ← (byte~) mode_ecmchar::$26 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 ] ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:97 [ mode_ecmchar::cy#4 mode_ecmchar::cy#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:98 [ mode_ecmchar::cx#2 mode_ecmchar::cx#1 ]
Statement [586] (byte~) mode_ecmchar::$27 ← (byte) mode_ecmchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$27 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$27 ] ) always clobbers reg byte a 
Statement [588] (byte~) mode_ecmchar::$29 ← (byte) mode_ecmchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$28 mode_ecmchar::$29 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$28 mode_ecmchar::$29 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:209 [ mode_ecmchar::$28 ]
Statement [590] *((byte*) mode_ecmchar::ch#2) ← (byte~) mode_ecmchar::$30 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 ] ) always clobbers reg byte y 
Statement [603] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_stdchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) always clobbers reg byte a 
Statement [604] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_stdchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) always clobbers reg byte a 
Statement [605] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_stdchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) always clobbers reg byte a 
Statement [606] *((const byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) always clobbers reg byte a 
Statement [607] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) always clobbers reg byte a 
Statement [608] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_stdchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) always clobbers reg byte a 
Statement [609] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) always clobbers reg byte a 
Statement [610] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) always clobbers reg byte a 
Statement [611] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_stdchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_stdchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) always clobbers reg byte a 
Statement [613] *((const byte*) DTV_PALETTE#0 + (byte) mode_stdchar::i#2) ← *((const byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) mode_stdchar::i#2) [ mode_stdchar::i#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::i#2 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:103 [ mode_stdchar::i#2 mode_stdchar::i#1 ]
Statement [616] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) always clobbers reg byte a 
Statement [617] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) always clobbers reg byte a 
Statement [621] (byte~) mode_stdchar::$25 ← (byte~) mode_stdchar::$24 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 mode_stdchar::$25 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 mode_stdchar::$25 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:104 [ mode_stdchar::cy#4 mode_stdchar::cy#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:105 [ mode_stdchar::cx#2 mode_stdchar::cx#1 ]
Statement [622] *((byte*) mode_stdchar::col#2) ← (byte~) mode_stdchar::$25 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 ] ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:104 [ mode_stdchar::cy#4 mode_stdchar::cy#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:105 [ mode_stdchar::cx#2 mode_stdchar::cx#1 ]
Statement [624] (byte~) mode_stdchar::$26 ← (byte) mode_stdchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$26 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$26 ] ) always clobbers reg byte a 
Statement [626] (byte~) mode_stdchar::$28 ← (byte) mode_stdchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$27 mode_stdchar::$28 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$27 mode_stdchar::$28 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:217 [ mode_stdchar::$27 ]
Statement [628] *((byte*) mode_stdchar::ch#2) ← (byte~) mode_stdchar::$29 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 ] ) always clobbers reg byte y 
Statement [643] if(*((byte*) print_str_lines::str#2)!=(byte) '@') goto print_str_lines::@4 [ print_str_lines::str#2 print_char_cursor#19 print_line_cursor#17 ] ( main:2::menu:9::print_str_lines:33 [ print_str_lines::str#2 print_char_cursor#19 print_line_cursor#17 ] ) always clobbers reg byte a reg byte y 
Statement [646] (byte) print_str_lines::ch#0 ← *((byte*) print_str_lines::str#3) [ print_line_cursor#17 print_str_lines::str#3 print_char_cursor#17 print_str_lines::ch#0 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#3 print_char_cursor#17 print_str_lines::ch#0 ] ) always clobbers reg byte a reg byte y 
Statement [649] *((byte*) print_char_cursor#17) ← (byte) print_str_lines::ch#0 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:222 [ print_str_lines::ch#0 ]
Statement [655] (byte*~) print_char_cursor#95 ← (byte*) print_line_cursor#19 [ print_str_lines::str#0 print_char_cursor#95 print_line_cursor#19 ] ( main:2::menu:9::print_str_lines:33 [ print_str_lines::str#0 print_char_cursor#95 print_line_cursor#19 ] ) always clobbers reg byte a 
Statement [658] (byte*) print_line_cursor#19 ← (byte*) print_line_cursor#18 + (byte/signed byte/word/signed word/dword/signed dword) 40 [ print_line_cursor#19 print_char_cursor#32 ] ( main:2::menu:9::print_str_lines:33::print_ln:654 [ print_str_lines::str#0 print_line_cursor#19 print_char_cursor#32 ] ) always clobbers reg byte a 
Statement [659] if((byte*) print_line_cursor#19<(byte*) print_char_cursor#32) goto print_ln::@1 [ print_line_cursor#19 print_char_cursor#32 ] ( main:2::menu:9::print_str_lines:33::print_ln:654 [ print_str_lines::str#0 print_line_cursor#19 print_char_cursor#32 ] ) always clobbers reg byte a 
Statement [663] *((byte*) print_cls::sc#2) ← (byte) ' ' [ print_cls::sc#2 ] ( main:2::menu:9::print_cls:31 [ print_cls::sc#2 ] ) always clobbers reg byte a reg byte y 
Statement [665] if((byte*) print_cls::sc#1!=(const byte*) menu::SCREEN#0+(word/signed word/dword/signed dword) 1000) goto print_cls::@1 [ print_cls::sc#1 ] ( main:2::menu:9::print_cls:31 [ print_cls::sc#1 ] ) always clobbers reg byte a 
Statement [5] *((const byte*) DTV_FEATURE#0) ← (const byte) DTV_FEATURE_ENABLE#0 [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [10] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) menu::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9 [ ] ) always clobbers reg byte a 
Statement [11] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const dword) DTV_COLOR_BANK_DEFAULT#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9 [ ] ) always clobbers reg byte a 
Statement [12] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const dword) DTV_COLOR_BANK_DEFAULT#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9 [ ] ) always clobbers reg byte a 
Statement [13] *((const byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9 [ ] ) always clobbers reg byte a 
Statement [14] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9 [ ] ) always clobbers reg byte a 
Statement [15] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) menu::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9 [ ] ) always clobbers reg byte a 
Statement [16] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9 [ ] ) always clobbers reg byte a 
Statement [17] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9 [ ] ) always clobbers reg byte a 
Statement [18] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) menu::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) menu::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9 [ ] ) always clobbers reg byte a 
Statement [20] *((const byte*) DTV_PALETTE#0 + (byte) menu::i#2) ← *((const byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) menu::i#2) [ menu::i#2 ] ( main:2::menu:9 [ menu::i#2 ] ) always clobbers reg byte a 
Statement [24] *((byte*) menu::c#2) ← (const byte) LIGHT_GREEN#0 [ menu::c#2 ] ( main:2::menu:9 [ menu::c#2 ] ) always clobbers reg byte a reg byte y 
Statement [26] if((byte*) menu::c#1!=(const byte*) COLS#0+(word/signed word/dword/signed dword) 1000) goto menu::@2 [ menu::c#1 ] ( main:2::menu:9 [ menu::c#1 ] ) always clobbers reg byte a 
Statement [27] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9 [ ] ) always clobbers reg byte a 
Statement [28] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9 [ ] ) always clobbers reg byte a 
Statement [113] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0|(const byte) DTV_CONTROL_CHUNKY_ON#0|(const byte) DTV_CONTROL_COLORRAM_OFF#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) always clobbers reg byte a 
Statement [114] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) always clobbers reg byte a 
Statement [115] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) always clobbers reg byte a 
Statement [116] *((const byte*) DTV_PLANEB_START_LO#0) ← <<(const dword) mode_8bppchunkybmm::PLANEB#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) always clobbers reg byte a 
Statement [117] *((const byte*) DTV_PLANEB_START_MI#0) ← ><(const dword) mode_8bppchunkybmm::PLANEB#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) always clobbers reg byte a 
Statement [118] *((const byte*) DTV_PLANEB_START_HI#0) ← <>(const dword) mode_8bppchunkybmm::PLANEB#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) always clobbers reg byte a 
Statement [119] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 8 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) always clobbers reg byte a 
Statement [120] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) always clobbers reg byte a 
Statement [121] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) always clobbers reg byte a 
Statement [122] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) always clobbers reg byte a 
Statement [131] if((byte*) mode_8bppchunkybmm::gfxb#3!=(word/dword/signed dword) 32768) goto mode_8bppchunkybmm::@4 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] ) always clobbers reg byte a 
Statement [136] (word~) mode_8bppchunkybmm::$20 ← (word) mode_8bppchunkybmm::x#2 + (byte) mode_8bppchunkybmm::y#6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::$20 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::$20 ] ) always clobbers reg byte a 
Statement [137] (byte) mode_8bppchunkybmm::c#0 ← ((byte)) (word~) mode_8bppchunkybmm::$20 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::c#0 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::c#0 ] ) always clobbers reg byte a 
Statement [138] *((byte*) mode_8bppchunkybmm::gfxb#4) ← (byte) mode_8bppchunkybmm::c#0 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 ] ) always clobbers reg byte y 
Statement [141] if((word) mode_8bppchunkybmm::x#1!=(word/signed word/dword/signed dword) 320) goto mode_8bppchunkybmm::@3 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#1 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#1 ] ) always clobbers reg byte a 
Statement [154] (byte) keyboard_key_pressed::colidx#0 ← (byte) keyboard_key_pressed::key#22 & (byte/signed byte/word/signed word/dword/signed dword) 7 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] ) always clobbers reg byte a 
Statement [155] (byte) keyboard_key_pressed::rowidx#0 ← (byte) keyboard_key_pressed::key#22 >> (byte/signed byte/word/signed word/dword/signed dword) 3 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] ) always clobbers reg byte a 
Statement [160] (byte) keyboard_key_pressed::return#0 ← (byte~) keyboard_key_pressed::$2 & *((const byte[]) keyboard_matrix_col_bitmask#0 + (byte) keyboard_key_pressed::colidx#0) [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::return#0 ] ) always clobbers reg byte a 
Statement [162] *((const byte*) CIA1_PORT_A#0) ← *((const byte[8]) keyboard_matrix_row_bitmask#0 + (byte) keyboard_matrix_read::rowid#0) [ ] ( main:2::menu:9::keyboard_key_pressed:37::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:44::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:51::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:58::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:65::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:72::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:79::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:86::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:93::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:100::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:107::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] ) always clobbers reg byte a 
Statement [163] (byte) keyboard_matrix_read::return#0 ← ~ *((const byte*) CIA1_PORT_B#0) [ keyboard_matrix_read::return#0 ] ( main:2::menu:9::keyboard_key_pressed:37::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:44::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:51::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:58::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:65::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:72::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:79::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:86::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:93::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:100::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:107::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] ) always clobbers reg byte a 
Statement asm { .byte$32,$dd lda$ff .byte$32,$00  } always clobbers reg byte a 
Statement [169] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0|(const byte) DTV_CONTROL_CHUNKY_ON#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [170] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [171] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [172] *((const byte*) DTV_PLANEA_START_LO#0) ← <(const byte*) mode_8bpppixelcell::PLANEA#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [173] *((const byte*) DTV_PLANEA_START_MI#0) ← >(const byte*) mode_8bpppixelcell::PLANEA#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [174] *((const byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [175] *((const byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [176] *((const byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [177] *((const byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [178] *((const byte*) DTV_PLANEB_START_LO#0) ← <(const byte*) mode_8bpppixelcell::PLANEB#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [179] *((const byte*) DTV_PLANEB_START_MI#0) ← >(const byte*) mode_8bpppixelcell::PLANEB#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [180] *((const byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [181] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [182] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [183] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [184] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [191] (byte~) mode_8bpppixelcell::$11 ← (byte) mode_8bpppixelcell::ay#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$11 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$11 ] ) always clobbers reg byte a 
Statement [193] (byte~) mode_8bpppixelcell::$13 ← (byte) mode_8bpppixelcell::ax#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$12 mode_8bpppixelcell::$13 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$12 mode_8bpppixelcell::$13 ] ) always clobbers reg byte a 
Statement [195] *((byte*) mode_8bpppixelcell::gfxa#2) ← (byte~) mode_8bpppixelcell::$14 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 ] ) always clobbers reg byte y 
Statement [201] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 50 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [204] (byte) mode_8bpppixelcell::bits#0 ← *((byte*) mode_8bpppixelcell::chargen#2) [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#0 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#0 ] ) always clobbers reg byte a reg byte y 
Statement [207] (byte~) mode_8bpppixelcell::$17 ← (byte) mode_8bpppixelcell::bits#2 & (byte/word/signed word/dword/signed dword) 128 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::$17 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::$17 ] ) always clobbers reg byte a 
Statement [211] *((byte*) mode_8bpppixelcell::gfxb#2) ← (byte) mode_8bpppixelcell::c#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ) always clobbers reg byte y 
Statement [221] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 55 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) always clobbers reg byte a 
Statement [229] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [230] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [231] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [232] *((const byte*) DTV_PLANEA_START_LO#0) ← <(const byte*) mode_sixsfred::PLANEA#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [233] *((const byte*) DTV_PLANEA_START_MI#0) ← >(const byte*) mode_sixsfred::PLANEA#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [234] *((const byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [235] *((const byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [236] *((const byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [237] *((const byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [238] *((const byte*) DTV_PLANEB_START_LO#0) ← <(const byte*) mode_sixsfred::PLANEB#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [239] *((const byte*) DTV_PLANEB_START_MI#0) ← >(const byte*) mode_sixsfred::PLANEB#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [240] *((const byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [241] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [242] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [243] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [244] *((const byte*) DTV_COLOR_BANK_LO#0) ← <(const byte*) mode_sixsfred::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [245] *((const byte*) DTV_COLOR_BANK_HI#0) ← >(const byte*) mode_sixsfred::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [250] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) always clobbers reg byte a 
Statement [253] (byte~) mode_sixsfred::$15 ← (byte) mode_sixsfred::cx#2 + (byte) mode_sixsfred::cy#4 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 mode_sixsfred::$15 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 mode_sixsfred::$15 ] ) always clobbers reg byte a 
Statement [254] (byte~) mode_sixsfred::$16 ← (byte~) mode_sixsfred::$15 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 mode_sixsfred::$16 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 mode_sixsfred::$16 ] ) always clobbers reg byte a 
Statement [255] *((byte*) mode_sixsfred::col#2) ← (byte~) mode_sixsfred::$16 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 ] ) always clobbers reg byte y 
Statement [263] (byte~) mode_sixsfred::$19 ← (byte) mode_sixsfred::ay#4 >> (byte/signed byte/word/signed word/dword/signed dword) 1 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 mode_sixsfred::$19 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 mode_sixsfred::$19 ] ) always clobbers reg byte a 
Statement [264] (byte) mode_sixsfred::row#0 ← (byte~) mode_sixsfred::$19 & (byte/signed byte/word/signed word/dword/signed dword) 3 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 mode_sixsfred::row#0 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 mode_sixsfred::row#0 ] ) always clobbers reg byte a 
Statement [265] *((byte*) mode_sixsfred::gfxa#2) ← *((const byte[]) mode_sixsfred::row_bitmask#0 + (byte) mode_sixsfred::row#0) [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 ] ) always clobbers reg byte a reg byte y 
Statement [273] *((byte*) mode_sixsfred::gfxb#2) ← (byte/signed byte/word/signed word/dword/signed dword) 27 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#2 mode_sixsfred::bx#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#2 mode_sixsfred::bx#2 ] ) always clobbers reg byte a reg byte y 
Statement [286] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [287] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [288] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [289] *((const byte*) DTV_PLANEA_START_LO#0) ← <(const byte*) mode_twoplanebitmap::PLANEA#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [290] *((const byte*) DTV_PLANEA_START_MI#0) ← >(const byte*) mode_twoplanebitmap::PLANEA#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [291] *((const byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [292] *((const byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [293] *((const byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [294] *((const byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [295] *((const byte*) DTV_PLANEB_START_LO#0) ← <(const byte*) mode_twoplanebitmap::PLANEB#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [296] *((const byte*) DTV_PLANEB_START_MI#0) ← >(const byte*) mode_twoplanebitmap::PLANEB#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [297] *((const byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [298] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [299] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [300] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [301] *((const byte*) DTV_COLOR_BANK_LO#0) ← <(const byte*) mode_twoplanebitmap::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [302] *((const byte*) DTV_COLOR_BANK_HI#0) ← >(const byte*) mode_twoplanebitmap::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [307] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [308] *((const byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 112 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [309] *((const byte*) BGCOL2#0) ← (byte/word/signed word/dword/signed dword) 212 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) always clobbers reg byte a 
Statement [312] (byte~) mode_twoplanebitmap::$14 ← (byte) mode_twoplanebitmap::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$14 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$14 ] ) always clobbers reg byte a 
Statement [314] (byte~) mode_twoplanebitmap::$16 ← (byte) mode_twoplanebitmap::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$15 mode_twoplanebitmap::$16 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$15 mode_twoplanebitmap::$16 ] ) always clobbers reg byte a 
Statement [316] *((byte*) mode_twoplanebitmap::col#2) ← (byte~) mode_twoplanebitmap::$17 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 ] ) always clobbers reg byte y 
Statement [324] (byte~) mode_twoplanebitmap::$20 ← (byte) mode_twoplanebitmap::ay#4 & (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::$20 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::$20 ] ) always clobbers reg byte a 
Statement [326] *((byte*) mode_twoplanebitmap::gfxa#3) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ) always clobbers reg byte a reg byte y 
Statement [335] *((byte*) mode_twoplanebitmap::gfxb#2) ← (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::bx#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::bx#2 ] ) always clobbers reg byte a reg byte y 
Statement [348] *((byte*) mode_twoplanebitmap::gfxa#3) ← (byte/word/signed word/dword/signed dword) 255 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ) always clobbers reg byte a reg byte y 
Statement [350] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [351] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [352] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [353] *((const byte*) DTV_PLANEA_START_LO#0) ← <(const byte*) mode_sixsfred2::PLANEA#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [354] *((const byte*) DTV_PLANEA_START_MI#0) ← >(const byte*) mode_sixsfred2::PLANEA#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [355] *((const byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [356] *((const byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [357] *((const byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [358] *((const byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [359] *((const byte*) DTV_PLANEB_START_LO#0) ← <(const byte*) mode_sixsfred2::PLANEB#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [360] *((const byte*) DTV_PLANEB_START_MI#0) ← >(const byte*) mode_sixsfred2::PLANEB#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [361] *((const byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [362] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [363] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [364] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [365] *((const byte*) DTV_COLOR_BANK_LO#0) ← <(const byte*) mode_sixsfred2::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [366] *((const byte*) DTV_COLOR_BANK_HI#0) ← >(const byte*) mode_sixsfred2::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [371] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) always clobbers reg byte a 
Statement [374] (byte~) mode_sixsfred2::$14 ← (byte) mode_sixsfred2::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 3 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$14 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$14 ] ) always clobbers reg byte a 
Statement [376] (byte~) mode_sixsfred2::$16 ← (byte) mode_sixsfred2::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 3 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$15 mode_sixsfred2::$16 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$15 mode_sixsfred2::$16 ] ) always clobbers reg byte a 
Statement [378] *((byte*) mode_sixsfred2::col#2) ← (byte~) mode_sixsfred2::$17 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 ] ) always clobbers reg byte y 
Statement [386] (byte~) mode_sixsfred2::$20 ← (byte) mode_sixsfred2::ay#4 >> (byte/signed byte/word/signed word/dword/signed dword) 1 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 mode_sixsfred2::$20 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 mode_sixsfred2::$20 ] ) always clobbers reg byte a 
Statement [387] (byte) mode_sixsfred2::row#0 ← (byte~) mode_sixsfred2::$20 & (byte/signed byte/word/signed word/dword/signed dword) 3 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 mode_sixsfred2::row#0 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 mode_sixsfred2::row#0 ] ) always clobbers reg byte a 
Statement [388] *((byte*) mode_sixsfred2::gfxa#2) ← *((const byte[]) mode_sixsfred2::row_bitmask#0 + (byte) mode_sixsfred2::row#0) [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 ] ) always clobbers reg byte a reg byte y 
Statement [396] *((byte*) mode_sixsfred2::gfxb#2) ← (byte/signed byte/word/signed word/dword/signed dword) 27 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#2 mode_sixsfred2::bx#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#2 mode_sixsfred2::bx#2 ] ) always clobbers reg byte a reg byte y 
Statement [409] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_hicolmcchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [410] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_hicolmcchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [411] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_hicolmcchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [412] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [413] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [414] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_hicolmcchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [415] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [416] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0|(const byte) VIC_MCM#0 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [417] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_hicolmcchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_hicolmcchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [422] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [423] *((const byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 80 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [424] *((const byte*) BGCOL2#0) ← (byte/signed byte/word/signed word/dword/signed dword) 84 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [425] *((const byte*) BGCOL3#0) ← (byte/signed byte/word/signed word/dword/signed dword) 88 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) always clobbers reg byte a 
Statement [428] (byte~) mode_hicolmcchar::$25 ← (byte) mode_hicolmcchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$25 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$25 ] ) always clobbers reg byte a 
Statement [430] (byte~) mode_hicolmcchar::$27 ← (byte) mode_hicolmcchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$26 mode_hicolmcchar::$27 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$26 mode_hicolmcchar::$27 ] ) always clobbers reg byte a 
Statement [432] *((byte*) mode_hicolmcchar::col#2) ← (byte) mode_hicolmcchar::v#0 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] ) always clobbers reg byte y 
Statement [434] *((byte*) mode_hicolmcchar::ch#2) ← (byte) mode_hicolmcchar::v#0 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::cx#2 mode_hicolmcchar::ch#2 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::cx#2 mode_hicolmcchar::ch#2 ] ) always clobbers reg byte y 
Statement [447] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_hicolecmchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [448] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_hicolecmchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [449] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_hicolecmchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [450] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [451] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [452] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_hicolecmchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [453] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(const byte) VIC_ECM#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [454] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [455] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_hicolecmchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_hicolecmchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [460] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [461] *((const byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 80 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [462] *((const byte*) BGCOL2#0) ← (byte/signed byte/word/signed word/dword/signed dword) 84 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [463] *((const byte*) BGCOL3#0) ← (byte/signed byte/word/signed word/dword/signed dword) 88 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [464] *((const byte*) BGCOL4#0) ← (byte/signed byte/word/signed word/dword/signed dword) 92 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) always clobbers reg byte a 
Statement [467] (byte~) mode_hicolecmchar::$25 ← (byte) mode_hicolecmchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$25 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$25 ] ) always clobbers reg byte a 
Statement [469] (byte~) mode_hicolecmchar::$27 ← (byte) mode_hicolecmchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$26 mode_hicolecmchar::$27 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$26 mode_hicolecmchar::$27 ] ) always clobbers reg byte a 
Statement [471] *((byte*) mode_hicolecmchar::col#2) ← (byte) mode_hicolecmchar::v#0 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] ) always clobbers reg byte y 
Statement [473] *((byte*) mode_hicolecmchar::ch#2) ← (byte) mode_hicolecmchar::v#0 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::cx#2 mode_hicolecmchar::ch#2 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::cx#2 mode_hicolecmchar::ch#2 ] ) always clobbers reg byte y 
Statement [486] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_hicolstdchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) always clobbers reg byte a 
Statement [487] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_hicolstdchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) always clobbers reg byte a 
Statement [488] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_hicolstdchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) always clobbers reg byte a 
Statement [489] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) always clobbers reg byte a 
Statement [490] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) always clobbers reg byte a 
Statement [491] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_hicolstdchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) always clobbers reg byte a 
Statement [492] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) always clobbers reg byte a 
Statement [493] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) always clobbers reg byte a 
Statement [494] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_hicolstdchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_hicolstdchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) always clobbers reg byte a 
Statement [499] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) always clobbers reg byte a 
Statement [500] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) always clobbers reg byte a 
Statement [503] (byte~) mode_hicolstdchar::$24 ← (byte) mode_hicolstdchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$24 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$24 ] ) always clobbers reg byte a 
Statement [505] (byte~) mode_hicolstdchar::$26 ← (byte) mode_hicolstdchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$25 mode_hicolstdchar::$26 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$25 mode_hicolstdchar::$26 ] ) always clobbers reg byte a 
Statement [507] *((byte*) mode_hicolstdchar::col#2) ← (byte) mode_hicolstdchar::v#0 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] ) always clobbers reg byte y 
Statement [509] *((byte*) mode_hicolstdchar::ch#2) ← (byte) mode_hicolstdchar::v#0 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::cx#2 mode_hicolstdchar::ch#2 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::cx#2 mode_hicolstdchar::ch#2 ] ) always clobbers reg byte y 
Statement [522] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_mcchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [523] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_mcchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [524] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_mcchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [525] *((const byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [526] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [527] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_mcchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [528] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [529] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0|(const byte) VIC_MCM#0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [530] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_mcchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_mcchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [532] *((const byte*) DTV_PALETTE#0 + (byte) mode_mcchar::i#2) ← *((const byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) mode_mcchar::i#2) [ mode_mcchar::i#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::i#2 ] ) always clobbers reg byte a 
Statement [535] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [536] *((const byte*) BGCOL1#0) ← (const byte) BLACK#0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [537] *((const byte*) BGCOL2#0) ← (const byte) GREEN#0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [538] *((const byte*) BGCOL3#0) ← (const byte) BLUE#0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) always clobbers reg byte a 
Statement [541] (byte~) mode_mcchar::$25 ← (byte) mode_mcchar::cx#2 + (byte) mode_mcchar::cy#4 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 mode_mcchar::$25 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 mode_mcchar::$25 ] ) always clobbers reg byte a 
Statement [542] (byte~) mode_mcchar::$26 ← (byte~) mode_mcchar::$25 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 mode_mcchar::$26 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 mode_mcchar::$26 ] ) always clobbers reg byte a 
Statement [543] *((byte*) mode_mcchar::col#2) ← (byte~) mode_mcchar::$26 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 ] ) always clobbers reg byte y 
Statement [545] (byte~) mode_mcchar::$27 ← (byte) mode_mcchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$27 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$27 ] ) always clobbers reg byte a 
Statement [547] (byte~) mode_mcchar::$29 ← (byte) mode_mcchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$28 mode_mcchar::$29 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$28 mode_mcchar::$29 ] ) always clobbers reg byte a 
Statement [549] *((byte*) mode_mcchar::ch#2) ← (byte~) mode_mcchar::$30 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 ] ) always clobbers reg byte y 
Statement [562] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [563] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_ecmchar::ECMCHAR_COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [564] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_ecmchar::ECMCHAR_COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [565] *((const byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [566] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [567] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [568] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(const byte) VIC_ECM#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [569] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [570] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_ecmchar::ECMCHAR_SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [572] *((const byte*) DTV_PALETTE#0 + (byte) mode_ecmchar::i#2) ← *((const byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) mode_ecmchar::i#2) [ mode_ecmchar::i#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::i#2 ] ) always clobbers reg byte a 
Statement [575] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [576] *((const byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [577] *((const byte*) BGCOL2#0) ← (byte/signed byte/word/signed word/dword/signed dword) 2 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [578] *((const byte*) BGCOL3#0) ← (byte/signed byte/word/signed word/dword/signed dword) 5 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [579] *((const byte*) BGCOL4#0) ← (byte/signed byte/word/signed word/dword/signed dword) 6 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) always clobbers reg byte a 
Statement [582] (byte~) mode_ecmchar::$25 ← (byte) mode_ecmchar::cx#2 + (byte) mode_ecmchar::cy#4 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 mode_ecmchar::$25 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 mode_ecmchar::$25 ] ) always clobbers reg byte a 
Statement [583] (byte~) mode_ecmchar::$26 ← (byte~) mode_ecmchar::$25 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 mode_ecmchar::$26 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 mode_ecmchar::$26 ] ) always clobbers reg byte a 
Statement [584] *((byte*) mode_ecmchar::col#2) ← (byte~) mode_ecmchar::$26 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 ] ) always clobbers reg byte y 
Statement [586] (byte~) mode_ecmchar::$27 ← (byte) mode_ecmchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$27 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$27 ] ) always clobbers reg byte a 
Statement [588] (byte~) mode_ecmchar::$29 ← (byte) mode_ecmchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$28 mode_ecmchar::$29 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$28 mode_ecmchar::$29 ] ) always clobbers reg byte a 
Statement [590] *((byte*) mode_ecmchar::ch#2) ← (byte~) mode_ecmchar::$30 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 ] ) always clobbers reg byte y 
Statement [603] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_stdchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) always clobbers reg byte a 
Statement [604] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_stdchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) always clobbers reg byte a 
Statement [605] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_stdchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) always clobbers reg byte a 
Statement [606] *((const byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) always clobbers reg byte a 
Statement [607] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) always clobbers reg byte a 
Statement [608] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_stdchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) always clobbers reg byte a 
Statement [609] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) always clobbers reg byte a 
Statement [610] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) always clobbers reg byte a 
Statement [611] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_stdchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_stdchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) always clobbers reg byte a 
Statement [613] *((const byte*) DTV_PALETTE#0 + (byte) mode_stdchar::i#2) ← *((const byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) mode_stdchar::i#2) [ mode_stdchar::i#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::i#2 ] ) always clobbers reg byte a 
Statement [616] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) always clobbers reg byte a 
Statement [617] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) always clobbers reg byte a 
Statement [620] (byte~) mode_stdchar::$24 ← (byte) mode_stdchar::cx#2 + (byte) mode_stdchar::cy#4 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 mode_stdchar::$24 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 mode_stdchar::$24 ] ) always clobbers reg byte a 
Statement [621] (byte~) mode_stdchar::$25 ← (byte~) mode_stdchar::$24 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 mode_stdchar::$25 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 mode_stdchar::$25 ] ) always clobbers reg byte a 
Statement [622] *((byte*) mode_stdchar::col#2) ← (byte~) mode_stdchar::$25 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 ] ) always clobbers reg byte y 
Statement [624] (byte~) mode_stdchar::$26 ← (byte) mode_stdchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$26 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$26 ] ) always clobbers reg byte a 
Statement [626] (byte~) mode_stdchar::$28 ← (byte) mode_stdchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$27 mode_stdchar::$28 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$27 mode_stdchar::$28 ] ) always clobbers reg byte a 
Statement [628] *((byte*) mode_stdchar::ch#2) ← (byte~) mode_stdchar::$29 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 ] ) always clobbers reg byte y 
Statement [643] if(*((byte*) print_str_lines::str#2)!=(byte) '@') goto print_str_lines::@4 [ print_str_lines::str#2 print_char_cursor#19 print_line_cursor#17 ] ( main:2::menu:9::print_str_lines:33 [ print_str_lines::str#2 print_char_cursor#19 print_line_cursor#17 ] ) always clobbers reg byte a reg byte y 
Statement [646] (byte) print_str_lines::ch#0 ← *((byte*) print_str_lines::str#3) [ print_line_cursor#17 print_str_lines::str#3 print_char_cursor#17 print_str_lines::ch#0 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#3 print_char_cursor#17 print_str_lines::ch#0 ] ) always clobbers reg byte a reg byte y 
Statement [649] *((byte*) print_char_cursor#17) ← (byte) print_str_lines::ch#0 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] ) always clobbers reg byte y 
Statement [655] (byte*~) print_char_cursor#95 ← (byte*) print_line_cursor#19 [ print_str_lines::str#0 print_char_cursor#95 print_line_cursor#19 ] ( main:2::menu:9::print_str_lines:33 [ print_str_lines::str#0 print_char_cursor#95 print_line_cursor#19 ] ) always clobbers reg byte a 
Statement [658] (byte*) print_line_cursor#19 ← (byte*) print_line_cursor#18 + (byte/signed byte/word/signed word/dword/signed dword) 40 [ print_line_cursor#19 print_char_cursor#32 ] ( main:2::menu:9::print_str_lines:33::print_ln:654 [ print_str_lines::str#0 print_line_cursor#19 print_char_cursor#32 ] ) always clobbers reg byte a 
Statement [659] if((byte*) print_line_cursor#19<(byte*) print_char_cursor#32) goto print_ln::@1 [ print_line_cursor#19 print_char_cursor#32 ] ( main:2::menu:9::print_str_lines:33::print_ln:654 [ print_str_lines::str#0 print_line_cursor#19 print_char_cursor#32 ] ) always clobbers reg byte a 
Statement [663] *((byte*) print_cls::sc#2) ← (byte) ' ' [ print_cls::sc#2 ] ( main:2::menu:9::print_cls:31 [ print_cls::sc#2 ] ) always clobbers reg byte a reg byte y 
Statement [665] if((byte*) print_cls::sc#1!=(const byte*) menu::SCREEN#0+(word/signed word/dword/signed dword) 1000) goto print_cls::@1 [ print_cls::sc#1 ] ( main:2::menu:9::print_cls:31 [ print_cls::sc#1 ] ) always clobbers reg byte a 
Potential registers zp ZP_BYTE:2 [ menu::i#2 menu::i#1 ] : zp ZP_BYTE:2 , reg byte x , reg byte y , 
Potential registers zp ZP_WORD:3 [ menu::c#2 menu::c#1 ] : zp ZP_WORD:3 , 
Potential registers zp ZP_BYTE:5 [ mode_8bppchunkybmm::i#2 mode_8bppchunkybmm::i#1 ] : zp ZP_BYTE:5 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 ] : zp ZP_BYTE:6 , reg byte x , 
Potential registers zp ZP_WORD:7 [ mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 ] : zp ZP_WORD:7 , 
Potential registers zp ZP_BYTE:9 [ mode_8bppchunkybmm::gfxbCpuBank#4 mode_8bppchunkybmm::gfxbCpuBank#7 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::gfxbCpuBank#2 ] : zp ZP_BYTE:9 , reg byte x , 
Potential registers zp ZP_WORD:10 [ mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::gfxb#5 mode_8bppchunkybmm::gfxb#1 ] : zp ZP_WORD:10 , 
Potential registers zp ZP_BYTE:12 [ keyboard_key_pressed::key#22 ] : zp ZP_BYTE:12 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:13 [ dtvSetCpuBankSegment1::cpuBankIdx#3 dtvSetCpuBankSegment1::cpuBankIdx#1 ] : zp ZP_BYTE:13 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:14 [ mode_8bpppixelcell::i#2 mode_8bpppixelcell::i#1 ] : zp ZP_BYTE:14 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:15 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 ] : zp ZP_BYTE:15 , reg byte x , 
Potential registers zp ZP_BYTE:16 [ mode_8bpppixelcell::ax#2 mode_8bpppixelcell::ax#1 ] : zp ZP_BYTE:16 , reg byte x , 
Potential registers zp ZP_WORD:17 [ mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 ] : zp ZP_WORD:17 , 
Potential registers zp ZP_BYTE:19 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 ] : zp ZP_BYTE:19 , reg byte x , 
Potential registers zp ZP_WORD:20 [ mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 ] : zp ZP_WORD:20 , 
Potential registers zp ZP_BYTE:22 [ mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cr#1 ] : zp ZP_BYTE:22 , reg byte x , 
Potential registers zp ZP_BYTE:23 [ mode_8bpppixelcell::bits#2 mode_8bpppixelcell::bits#0 mode_8bpppixelcell::bits#1 ] : zp ZP_BYTE:23 , reg byte x , 
Potential registers zp ZP_WORD:24 [ mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::gfxb#7 mode_8bpppixelcell::gfxb#1 ] : zp ZP_WORD:24 , 
Potential registers zp ZP_BYTE:26 [ mode_8bpppixelcell::col#2 mode_8bpppixelcell::col#5 mode_8bpppixelcell::col#7 mode_8bpppixelcell::col#1 ] : zp ZP_BYTE:26 , reg byte x , 
Potential registers zp ZP_BYTE:27 [ mode_8bpppixelcell::cp#2 mode_8bpppixelcell::cp#1 ] : zp ZP_BYTE:27 , reg byte x , 
Potential registers zp ZP_BYTE:28 [ mode_8bpppixelcell::c#2 mode_8bpppixelcell::c#3 ] : zp ZP_BYTE:28 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:29 [ mode_sixsfred::i#2 mode_sixsfred::i#1 ] : zp ZP_BYTE:29 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:30 [ mode_sixsfred::cy#4 mode_sixsfred::cy#1 ] : zp ZP_BYTE:30 , reg byte x , 
Potential registers zp ZP_BYTE:31 [ mode_sixsfred::cx#2 mode_sixsfred::cx#1 ] : zp ZP_BYTE:31 , reg byte x , 
Potential registers zp ZP_WORD:32 [ mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 ] : zp ZP_WORD:32 , 
Potential registers zp ZP_BYTE:34 [ mode_sixsfred::ay#4 mode_sixsfred::ay#1 ] : zp ZP_BYTE:34 , reg byte x , 
Potential registers zp ZP_WORD:35 [ mode_sixsfred::gfxa#2 mode_sixsfred::gfxa#3 mode_sixsfred::gfxa#1 ] : zp ZP_WORD:35 , 
Potential registers zp ZP_BYTE:37 [ mode_sixsfred::ax#2 mode_sixsfred::ax#1 ] : zp ZP_BYTE:37 , reg byte x , 
Potential registers zp ZP_BYTE:38 [ mode_sixsfred::by#4 mode_sixsfred::by#1 ] : zp ZP_BYTE:38 , reg byte x , 
Potential registers zp ZP_WORD:39 [ mode_sixsfred::gfxb#2 mode_sixsfred::gfxb#3 mode_sixsfred::gfxb#1 ] : zp ZP_WORD:39 , 
Potential registers zp ZP_BYTE:41 [ mode_sixsfred::bx#2 mode_sixsfred::bx#1 ] : zp ZP_BYTE:41 , reg byte x , 
Potential registers zp ZP_BYTE:42 [ mode_twoplanebitmap::i#2 mode_twoplanebitmap::i#1 ] : zp ZP_BYTE:42 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:43 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cy#1 ] : zp ZP_BYTE:43 , reg byte x , 
Potential registers zp ZP_BYTE:44 [ mode_twoplanebitmap::cx#2 mode_twoplanebitmap::cx#1 ] : zp ZP_BYTE:44 , reg byte x , 
Potential registers zp ZP_WORD:45 [ mode_twoplanebitmap::col#2 mode_twoplanebitmap::col#3 mode_twoplanebitmap::col#1 ] : zp ZP_WORD:45 , 
Potential registers zp ZP_BYTE:47 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ay#1 ] : zp ZP_BYTE:47 , reg byte x , 
Potential registers zp ZP_WORD:48 [ mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::gfxa#6 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::gfxa#2 mode_twoplanebitmap::gfxa#1 ] : zp ZP_WORD:48 , 
Potential registers zp ZP_BYTE:50 [ mode_twoplanebitmap::ax#2 mode_twoplanebitmap::ax#1 ] : zp ZP_BYTE:50 , reg byte x , 
Potential registers zp ZP_BYTE:51 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::by#1 ] : zp ZP_BYTE:51 , reg byte x , 
Potential registers zp ZP_WORD:52 [ mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::gfxb#1 ] : zp ZP_WORD:52 , 
Potential registers zp ZP_BYTE:54 [ mode_twoplanebitmap::bx#2 mode_twoplanebitmap::bx#1 ] : zp ZP_BYTE:54 , reg byte x , 
Potential registers zp ZP_BYTE:55 [ mode_sixsfred2::i#2 mode_sixsfred2::i#1 ] : zp ZP_BYTE:55 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:56 [ mode_sixsfred2::cy#4 mode_sixsfred2::cy#1 ] : zp ZP_BYTE:56 , reg byte x , 
Potential registers zp ZP_BYTE:57 [ mode_sixsfred2::cx#2 mode_sixsfred2::cx#1 ] : zp ZP_BYTE:57 , reg byte x , 
Potential registers zp ZP_WORD:58 [ mode_sixsfred2::col#2 mode_sixsfred2::col#3 mode_sixsfred2::col#1 ] : zp ZP_WORD:58 , 
Potential registers zp ZP_BYTE:60 [ mode_sixsfred2::ay#4 mode_sixsfred2::ay#1 ] : zp ZP_BYTE:60 , reg byte x , 
Potential registers zp ZP_WORD:61 [ mode_sixsfred2::gfxa#2 mode_sixsfred2::gfxa#3 mode_sixsfred2::gfxa#1 ] : zp ZP_WORD:61 , 
Potential registers zp ZP_BYTE:63 [ mode_sixsfred2::ax#2 mode_sixsfred2::ax#1 ] : zp ZP_BYTE:63 , reg byte x , 
Potential registers zp ZP_BYTE:64 [ mode_sixsfred2::by#4 mode_sixsfred2::by#1 ] : zp ZP_BYTE:64 , reg byte x , 
Potential registers zp ZP_WORD:65 [ mode_sixsfred2::gfxb#2 mode_sixsfred2::gfxb#3 mode_sixsfred2::gfxb#1 ] : zp ZP_WORD:65 , 
Potential registers zp ZP_BYTE:67 [ mode_sixsfred2::bx#2 mode_sixsfred2::bx#1 ] : zp ZP_BYTE:67 , reg byte x , 
Potential registers zp ZP_BYTE:68 [ mode_hicolmcchar::i#2 mode_hicolmcchar::i#1 ] : zp ZP_BYTE:68 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:69 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cy#1 ] : zp ZP_BYTE:69 , reg byte x , 
Potential registers zp ZP_BYTE:70 [ mode_hicolmcchar::cx#2 mode_hicolmcchar::cx#1 ] : zp ZP_BYTE:70 , reg byte x , 
Potential registers zp ZP_WORD:71 [ mode_hicolmcchar::col#2 mode_hicolmcchar::col#3 mode_hicolmcchar::col#1 ] : zp ZP_WORD:71 , 
Potential registers zp ZP_WORD:73 [ mode_hicolmcchar::ch#2 mode_hicolmcchar::ch#3 mode_hicolmcchar::ch#1 ] : zp ZP_WORD:73 , 
Potential registers zp ZP_BYTE:75 [ mode_hicolecmchar::i#2 mode_hicolecmchar::i#1 ] : zp ZP_BYTE:75 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:76 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cy#1 ] : zp ZP_BYTE:76 , reg byte x , 
Potential registers zp ZP_BYTE:77 [ mode_hicolecmchar::cx#2 mode_hicolecmchar::cx#1 ] : zp ZP_BYTE:77 , reg byte x , 
Potential registers zp ZP_WORD:78 [ mode_hicolecmchar::col#2 mode_hicolecmchar::col#3 mode_hicolecmchar::col#1 ] : zp ZP_WORD:78 , 
Potential registers zp ZP_WORD:80 [ mode_hicolecmchar::ch#2 mode_hicolecmchar::ch#3 mode_hicolecmchar::ch#1 ] : zp ZP_WORD:80 , 
Potential registers zp ZP_BYTE:82 [ mode_hicolstdchar::i#2 mode_hicolstdchar::i#1 ] : zp ZP_BYTE:82 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:83 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cy#1 ] : zp ZP_BYTE:83 , reg byte x , 
Potential registers zp ZP_BYTE:84 [ mode_hicolstdchar::cx#2 mode_hicolstdchar::cx#1 ] : zp ZP_BYTE:84 , reg byte x , 
Potential registers zp ZP_WORD:85 [ mode_hicolstdchar::col#2 mode_hicolstdchar::col#3 mode_hicolstdchar::col#1 ] : zp ZP_WORD:85 , 
Potential registers zp ZP_WORD:87 [ mode_hicolstdchar::ch#2 mode_hicolstdchar::ch#3 mode_hicolstdchar::ch#1 ] : zp ZP_WORD:87 , 
Potential registers zp ZP_BYTE:89 [ mode_mcchar::i#2 mode_mcchar::i#1 ] : zp ZP_BYTE:89 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:90 [ mode_mcchar::cy#4 mode_mcchar::cy#1 ] : zp ZP_BYTE:90 , reg byte x , 
Potential registers zp ZP_BYTE:91 [ mode_mcchar::cx#2 mode_mcchar::cx#1 ] : zp ZP_BYTE:91 , reg byte x , 
Potential registers zp ZP_WORD:92 [ mode_mcchar::col#2 mode_mcchar::col#3 mode_mcchar::col#1 ] : zp ZP_WORD:92 , 
Potential registers zp ZP_WORD:94 [ mode_mcchar::ch#2 mode_mcchar::ch#3 mode_mcchar::ch#1 ] : zp ZP_WORD:94 , 
Potential registers zp ZP_BYTE:96 [ mode_ecmchar::i#2 mode_ecmchar::i#1 ] : zp ZP_BYTE:96 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:97 [ mode_ecmchar::cy#4 mode_ecmchar::cy#1 ] : zp ZP_BYTE:97 , reg byte x , 
Potential registers zp ZP_BYTE:98 [ mode_ecmchar::cx#2 mode_ecmchar::cx#1 ] : zp ZP_BYTE:98 , reg byte x , 
Potential registers zp ZP_WORD:99 [ mode_ecmchar::col#2 mode_ecmchar::col#3 mode_ecmchar::col#1 ] : zp ZP_WORD:99 , 
Potential registers zp ZP_WORD:101 [ mode_ecmchar::ch#2 mode_ecmchar::ch#3 mode_ecmchar::ch#1 ] : zp ZP_WORD:101 , 
Potential registers zp ZP_BYTE:103 [ mode_stdchar::i#2 mode_stdchar::i#1 ] : zp ZP_BYTE:103 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:104 [ mode_stdchar::cy#4 mode_stdchar::cy#1 ] : zp ZP_BYTE:104 , reg byte x , 
Potential registers zp ZP_BYTE:105 [ mode_stdchar::cx#2 mode_stdchar::cx#1 ] : zp ZP_BYTE:105 , reg byte x , 
Potential registers zp ZP_WORD:106 [ mode_stdchar::col#2 mode_stdchar::col#3 mode_stdchar::col#1 ] : zp ZP_WORD:106 , 
Potential registers zp ZP_WORD:108 [ mode_stdchar::ch#2 mode_stdchar::ch#3 mode_stdchar::ch#1 ] : zp ZP_WORD:108 , 
Potential registers zp ZP_WORD:110 [ print_str_lines::str#3 print_str_lines::str#2 print_str_lines::str#0 ] : zp ZP_WORD:110 , 
Potential registers zp ZP_WORD:112 [ print_char_cursor#17 print_char_cursor#19 print_char_cursor#95 print_char_cursor#32 print_char_cursor#1 ] : zp ZP_WORD:112 , 
Potential registers zp ZP_WORD:114 [ print_line_cursor#18 print_line_cursor#17 print_line_cursor#19 ] : zp ZP_WORD:114 , 
Potential registers zp ZP_WORD:116 [ print_cls::sc#2 print_cls::sc#1 ] : zp ZP_WORD:116 , 
Potential registers zp ZP_BYTE:118 [ keyboard_key_pressed::return#2 ] : zp ZP_BYTE:118 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:119 [ menu::$29 ] : zp ZP_BYTE:119 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:120 [ keyboard_key_pressed::return#26 ] : zp ZP_BYTE:120 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:121 [ menu::$33 ] : zp ZP_BYTE:121 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:122 [ keyboard_key_pressed::return#27 ] : zp ZP_BYTE:122 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:123 [ menu::$37 ] : zp ZP_BYTE:123 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:124 [ keyboard_key_pressed::return#28 ] : zp ZP_BYTE:124 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:125 [ menu::$41 ] : zp ZP_BYTE:125 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:126 [ keyboard_key_pressed::return#29 ] : zp ZP_BYTE:126 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:127 [ menu::$45 ] : zp ZP_BYTE:127 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:128 [ keyboard_key_pressed::return#30 ] : zp ZP_BYTE:128 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:129 [ menu::$49 ] : zp ZP_BYTE:129 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:130 [ keyboard_key_pressed::return#31 ] : zp ZP_BYTE:130 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:131 [ menu::$53 ] : zp ZP_BYTE:131 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:132 [ keyboard_key_pressed::return#32 ] : zp ZP_BYTE:132 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:133 [ menu::$57 ] : zp ZP_BYTE:133 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:134 [ keyboard_key_pressed::return#10 ] : zp ZP_BYTE:134 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:135 [ menu::$61 ] : zp ZP_BYTE:135 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:136 [ keyboard_key_pressed::return#11 ] : zp ZP_BYTE:136 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:137 [ menu::$65 ] : zp ZP_BYTE:137 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:138 [ keyboard_key_pressed::return#12 ] : zp ZP_BYTE:138 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:139 [ menu::$69 ] : zp ZP_BYTE:139 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_WORD:140 [ mode_8bppchunkybmm::$20 ] : zp ZP_WORD:140 , 
Potential registers zp ZP_BYTE:142 [ mode_8bppchunkybmm::c#0 ] : zp ZP_BYTE:142 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:143 [ keyboard_key_pressed::return#23 ] : zp ZP_BYTE:143 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:144 [ mode_8bppchunkybmm::$27 ] : zp ZP_BYTE:144 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:145 [ keyboard_key_pressed::colidx#0 ] : zp ZP_BYTE:145 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:146 [ keyboard_key_pressed::rowidx#0 ] : zp ZP_BYTE:146 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:147 [ keyboard_matrix_read::rowid#0 ] : zp ZP_BYTE:147 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:148 [ keyboard_matrix_read::return#2 ] : zp ZP_BYTE:148 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:149 [ keyboard_key_pressed::$2 ] : zp ZP_BYTE:149 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:150 [ keyboard_key_pressed::return#0 ] : zp ZP_BYTE:150 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:151 [ keyboard_matrix_read::return#0 ] : zp ZP_BYTE:151 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:152 [ mode_8bpppixelcell::$11 ] : zp ZP_BYTE:152 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:153 [ mode_8bpppixelcell::$12 ] : zp ZP_BYTE:153 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:154 [ mode_8bpppixelcell::$13 ] : zp ZP_BYTE:154 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:155 [ mode_8bpppixelcell::$14 ] : zp ZP_BYTE:155 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:156 [ mode_8bpppixelcell::$17 ] : zp ZP_BYTE:156 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:157 [ keyboard_key_pressed::return#22 ] : zp ZP_BYTE:157 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:158 [ mode_8bpppixelcell::$24 ] : zp ZP_BYTE:158 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:159 [ mode_sixsfred::$15 ] : zp ZP_BYTE:159 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:160 [ mode_sixsfred::$16 ] : zp ZP_BYTE:160 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:161 [ mode_sixsfred::$19 ] : zp ZP_BYTE:161 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:162 [ mode_sixsfred::row#0 ] : zp ZP_BYTE:162 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:163 [ keyboard_key_pressed::return#20 ] : zp ZP_BYTE:163 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:164 [ mode_sixsfred::$25 ] : zp ZP_BYTE:164 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:165 [ mode_twoplanebitmap::$14 ] : zp ZP_BYTE:165 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:166 [ mode_twoplanebitmap::$15 ] : zp ZP_BYTE:166 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:167 [ mode_twoplanebitmap::$16 ] : zp ZP_BYTE:167 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:168 [ mode_twoplanebitmap::$17 ] : zp ZP_BYTE:168 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:169 [ mode_twoplanebitmap::$20 ] : zp ZP_BYTE:169 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:170 [ keyboard_key_pressed::return#19 ] : zp ZP_BYTE:170 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:171 [ mode_twoplanebitmap::$27 ] : zp ZP_BYTE:171 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:172 [ mode_sixsfred2::$14 ] : zp ZP_BYTE:172 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:173 [ mode_sixsfred2::$15 ] : zp ZP_BYTE:173 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:174 [ mode_sixsfred2::$16 ] : zp ZP_BYTE:174 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:175 [ mode_sixsfred2::$17 ] : zp ZP_BYTE:175 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:176 [ mode_sixsfred2::$20 ] : zp ZP_BYTE:176 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:177 [ mode_sixsfred2::row#0 ] : zp ZP_BYTE:177 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:178 [ keyboard_key_pressed::return#21 ] : zp ZP_BYTE:178 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:179 [ mode_sixsfred2::$26 ] : zp ZP_BYTE:179 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:180 [ mode_hicolmcchar::$25 ] : zp ZP_BYTE:180 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:181 [ mode_hicolmcchar::$26 ] : zp ZP_BYTE:181 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:182 [ mode_hicolmcchar::$27 ] : zp ZP_BYTE:182 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:183 [ mode_hicolmcchar::v#0 ] : zp ZP_BYTE:183 , reg byte a , reg byte x , 
Potential registers zp ZP_BYTE:184 [ keyboard_key_pressed::return#18 ] : zp ZP_BYTE:184 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:185 [ mode_hicolmcchar::$31 ] : zp ZP_BYTE:185 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:186 [ mode_hicolecmchar::$25 ] : zp ZP_BYTE:186 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:187 [ mode_hicolecmchar::$26 ] : zp ZP_BYTE:187 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:188 [ mode_hicolecmchar::$27 ] : zp ZP_BYTE:188 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:189 [ mode_hicolecmchar::v#0 ] : zp ZP_BYTE:189 , reg byte a , reg byte x , 
Potential registers zp ZP_BYTE:190 [ keyboard_key_pressed::return#17 ] : zp ZP_BYTE:190 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:191 [ mode_hicolecmchar::$31 ] : zp ZP_BYTE:191 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:192 [ mode_hicolstdchar::$24 ] : zp ZP_BYTE:192 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:193 [ mode_hicolstdchar::$25 ] : zp ZP_BYTE:193 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:194 [ mode_hicolstdchar::$26 ] : zp ZP_BYTE:194 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:195 [ mode_hicolstdchar::v#0 ] : zp ZP_BYTE:195 , reg byte a , reg byte x , 
Potential registers zp ZP_BYTE:196 [ keyboard_key_pressed::return#16 ] : zp ZP_BYTE:196 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:197 [ mode_hicolstdchar::$30 ] : zp ZP_BYTE:197 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:198 [ mode_mcchar::$25 ] : zp ZP_BYTE:198 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:199 [ mode_mcchar::$26 ] : zp ZP_BYTE:199 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:200 [ mode_mcchar::$27 ] : zp ZP_BYTE:200 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:201 [ mode_mcchar::$28 ] : zp ZP_BYTE:201 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:202 [ mode_mcchar::$29 ] : zp ZP_BYTE:202 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:203 [ mode_mcchar::$30 ] : zp ZP_BYTE:203 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:204 [ keyboard_key_pressed::return#15 ] : zp ZP_BYTE:204 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:205 [ mode_mcchar::$33 ] : zp ZP_BYTE:205 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:206 [ mode_ecmchar::$25 ] : zp ZP_BYTE:206 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:207 [ mode_ecmchar::$26 ] : zp ZP_BYTE:207 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:208 [ mode_ecmchar::$27 ] : zp ZP_BYTE:208 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:209 [ mode_ecmchar::$28 ] : zp ZP_BYTE:209 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:210 [ mode_ecmchar::$29 ] : zp ZP_BYTE:210 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:211 [ mode_ecmchar::$30 ] : zp ZP_BYTE:211 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:212 [ keyboard_key_pressed::return#14 ] : zp ZP_BYTE:212 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:213 [ mode_ecmchar::$33 ] : zp ZP_BYTE:213 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:214 [ mode_stdchar::$24 ] : zp ZP_BYTE:214 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:215 [ mode_stdchar::$25 ] : zp ZP_BYTE:215 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:216 [ mode_stdchar::$26 ] : zp ZP_BYTE:216 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:217 [ mode_stdchar::$27 ] : zp ZP_BYTE:217 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:218 [ mode_stdchar::$28 ] : zp ZP_BYTE:218 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:219 [ mode_stdchar::$29 ] : zp ZP_BYTE:219 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:220 [ keyboard_key_pressed::return#13 ] : zp ZP_BYTE:220 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:221 [ mode_stdchar::$32 ] : zp ZP_BYTE:221 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:222 [ print_str_lines::ch#0 ] : zp ZP_BYTE:222 , reg byte a , reg byte x , 

REGISTER UPLIFT SCOPES
Uplift Scope [mode_8bpppixelcell] 40,004: zp ZP_BYTE:28 [ mode_8bpppixelcell::c#2 mode_8bpppixelcell::c#3 ] 20,002: zp ZP_BYTE:156 [ mode_8bpppixelcell::$17 ] 17,223.94: zp ZP_BYTE:27 [ mode_8bpppixelcell::cp#2 mode_8bpppixelcell::cp#1 ] 10,430.64: zp ZP_BYTE:23 [ mode_8bpppixelcell::bits#2 mode_8bpppixelcell::bits#0 mode_8bpppixelcell::bits#1 ] 8,415.22: zp ZP_WORD:24 [ mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::gfxb#7 mode_8bpppixelcell::gfxb#1 ] 7,793.36: zp ZP_BYTE:26 [ mode_8bpppixelcell::col#2 mode_8bpppixelcell::col#5 mode_8bpppixelcell::col#7 mode_8bpppixelcell::col#1 ] 2,002: zp ZP_BYTE:152 [ mode_8bpppixelcell::$11 ] 2,002: zp ZP_BYTE:154 [ mode_8bpppixelcell::$13 ] 2,002: zp ZP_BYTE:155 [ mode_8bpppixelcell::$14 ] 1,930.5: zp ZP_BYTE:16 [ mode_8bpppixelcell::ax#2 mode_8bpppixelcell::ax#1 ] 1,885.44: zp ZP_WORD:20 [ mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 ] 1,644.5: zp ZP_BYTE:22 [ mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cr#1 ] 1,139.93: zp ZP_WORD:17 [ mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 ] 1,001: zp ZP_BYTE:153 [ mode_8bpppixelcell::$12 ] 353.5: zp ZP_BYTE:14 [ mode_8bpppixelcell::i#2 mode_8bpppixelcell::i#1 ] 271.8: zp ZP_BYTE:15 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 ] 202: zp ZP_BYTE:158 [ mode_8bpppixelcell::$24 ] 163.38: zp ZP_BYTE:19 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 ] 
Uplift Scope [mode_twoplanebitmap] 5,848: zp ZP_WORD:48 [ mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::gfxa#6 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::gfxa#2 mode_twoplanebitmap::gfxa#1 ] 2,174.6: zp ZP_WORD:52 [ mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::gfxb#1 ] 2,168.83: zp ZP_BYTE:54 [ mode_twoplanebitmap::bx#2 mode_twoplanebitmap::bx#1 ] 2,002: zp ZP_BYTE:165 [ mode_twoplanebitmap::$14 ] 2,002: zp ZP_BYTE:167 [ mode_twoplanebitmap::$16 ] 2,002: zp ZP_BYTE:168 [ mode_twoplanebitmap::$17 ] 2,002: zp ZP_BYTE:169 [ mode_twoplanebitmap::$20 ] 1,930.5: zp ZP_BYTE:44 [ mode_twoplanebitmap::cx#2 mode_twoplanebitmap::cx#1 ] 1,751.75: zp ZP_BYTE:50 [ mode_twoplanebitmap::ax#2 mode_twoplanebitmap::ax#1 ] 1,139.93: zp ZP_WORD:45 [ mode_twoplanebitmap::col#2 mode_twoplanebitmap::col#3 mode_twoplanebitmap::col#1 ] 1,001: zp ZP_BYTE:166 [ mode_twoplanebitmap::$15 ] 353.5: zp ZP_BYTE:42 [ mode_twoplanebitmap::i#2 mode_twoplanebitmap::i#1 ] 271.8: zp ZP_BYTE:43 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cy#1 ] 260.86: zp ZP_BYTE:47 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ay#1 ] 202: zp ZP_BYTE:171 [ mode_twoplanebitmap::$27 ] 185.17: zp ZP_BYTE:51 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::by#1 ] 
Uplift Scope [mode_sixsfred2] 2,174.6: zp ZP_WORD:65 [ mode_sixsfred2::gfxb#2 mode_sixsfred2::gfxb#3 mode_sixsfred2::gfxb#1 ] 2,168.83: zp ZP_BYTE:67 [ mode_sixsfred2::bx#2 mode_sixsfred2::bx#1 ] 2,002: zp ZP_BYTE:172 [ mode_sixsfred2::$14 ] 2,002: zp ZP_BYTE:174 [ mode_sixsfred2::$16 ] 2,002: zp ZP_BYTE:175 [ mode_sixsfred2::$17 ] 2,002: zp ZP_BYTE:176 [ mode_sixsfred2::$20 ] 2,002: zp ZP_BYTE:177 [ mode_sixsfred2::row#0 ] 1,930.5: zp ZP_BYTE:57 [ mode_sixsfred2::cx#2 mode_sixsfred2::cx#1 ] 1,901.9: zp ZP_BYTE:63 [ mode_sixsfred2::ax#2 mode_sixsfred2::ax#1 ] 1,398.6: zp ZP_WORD:61 [ mode_sixsfred2::gfxa#2 mode_sixsfred2::gfxa#3 mode_sixsfred2::gfxa#1 ] 1,139.93: zp ZP_WORD:58 [ mode_sixsfred2::col#2 mode_sixsfred2::col#3 mode_sixsfred2::col#1 ] 1,001: zp ZP_BYTE:173 [ mode_sixsfred2::$15 ] 353.5: zp ZP_BYTE:55 [ mode_sixsfred2::i#2 mode_sixsfred2::i#1 ] 301.88: zp ZP_BYTE:60 [ mode_sixsfred2::ay#4 mode_sixsfred2::ay#1 ] 271.8: zp ZP_BYTE:56 [ mode_sixsfred2::cy#4 mode_sixsfred2::cy#1 ] 202: zp ZP_BYTE:179 [ mode_sixsfred2::$26 ] 185.17: zp ZP_BYTE:64 [ mode_sixsfred2::by#4 mode_sixsfred2::by#1 ] 
Uplift Scope [mode_sixsfred] 2,174.6: zp ZP_WORD:39 [ mode_sixsfred::gfxb#2 mode_sixsfred::gfxb#3 mode_sixsfred::gfxb#1 ] 2,168.83: zp ZP_BYTE:41 [ mode_sixsfred::bx#2 mode_sixsfred::bx#1 ] 2,102.1: zp ZP_BYTE:31 [ mode_sixsfred::cx#2 mode_sixsfred::cx#1 ] 2,002: zp ZP_BYTE:159 [ mode_sixsfred::$15 ] 2,002: zp ZP_BYTE:160 [ mode_sixsfred::$16 ] 2,002: zp ZP_BYTE:161 [ mode_sixsfred::$19 ] 2,002: zp ZP_BYTE:162 [ mode_sixsfred::row#0 ] 1,901.9: zp ZP_BYTE:37 [ mode_sixsfred::ax#2 mode_sixsfred::ax#1 ] 1,398.6: zp ZP_WORD:32 [ mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 ] 1,398.6: zp ZP_WORD:35 [ mode_sixsfred::gfxa#2 mode_sixsfred::gfxa#3 mode_sixsfred::gfxa#1 ] 353.5: zp ZP_BYTE:29 [ mode_sixsfred::i#2 mode_sixsfred::i#1 ] 301.88: zp ZP_BYTE:30 [ mode_sixsfred::cy#4 mode_sixsfred::cy#1 ] 301.88: zp ZP_BYTE:34 [ mode_sixsfred::ay#4 mode_sixsfred::ay#1 ] 202: zp ZP_BYTE:164 [ mode_sixsfred::$25 ] 185.17: zp ZP_BYTE:38 [ mode_sixsfred::by#4 mode_sixsfred::by#1 ] 
Uplift Scope [mode_stdchar] 2,002: zp ZP_BYTE:214 [ mode_stdchar::$24 ] 2,002: zp ZP_BYTE:215 [ mode_stdchar::$25 ] 2,002: zp ZP_BYTE:216 [ mode_stdchar::$26 ] 2,002: zp ZP_BYTE:218 [ mode_stdchar::$28 ] 2,002: zp ZP_BYTE:219 [ mode_stdchar::$29 ] 1,865.5: zp ZP_BYTE:105 [ mode_stdchar::cx#2 mode_stdchar::cx#1 ] 1,169.18: zp ZP_WORD:106 [ mode_stdchar::col#2 mode_stdchar::col#3 mode_stdchar::col#1 ] 1,001: zp ZP_BYTE:217 [ mode_stdchar::$27 ] 933: zp ZP_WORD:108 [ mode_stdchar::ch#2 mode_stdchar::ch#3 mode_stdchar::ch#1 ] 353.5: zp ZP_BYTE:103 [ mode_stdchar::i#2 mode_stdchar::i#1 ] 308.93: zp ZP_BYTE:104 [ mode_stdchar::cy#4 mode_stdchar::cy#1 ] 202: zp ZP_BYTE:221 [ mode_stdchar::$32 ] 
Uplift Scope [mode_ecmchar] 2,002: zp ZP_BYTE:206 [ mode_ecmchar::$25 ] 2,002: zp ZP_BYTE:207 [ mode_ecmchar::$26 ] 2,002: zp ZP_BYTE:208 [ mode_ecmchar::$27 ] 2,002: zp ZP_BYTE:210 [ mode_ecmchar::$29 ] 2,002: zp ZP_BYTE:211 [ mode_ecmchar::$30 ] 1,865.5: zp ZP_BYTE:98 [ mode_ecmchar::cx#2 mode_ecmchar::cx#1 ] 1,169.18: zp ZP_WORD:99 [ mode_ecmchar::col#2 mode_ecmchar::col#3 mode_ecmchar::col#1 ] 1,001: zp ZP_BYTE:209 [ mode_ecmchar::$28 ] 933: zp ZP_WORD:101 [ mode_ecmchar::ch#2 mode_ecmchar::ch#3 mode_ecmchar::ch#1 ] 353.5: zp ZP_BYTE:96 [ mode_ecmchar::i#2 mode_ecmchar::i#1 ] 308.93: zp ZP_BYTE:97 [ mode_ecmchar::cy#4 mode_ecmchar::cy#1 ] 202: zp ZP_BYTE:213 [ mode_ecmchar::$33 ] 
Uplift Scope [mode_mcchar] 2,002: zp ZP_BYTE:198 [ mode_mcchar::$25 ] 2,002: zp ZP_BYTE:199 [ mode_mcchar::$26 ] 2,002: zp ZP_BYTE:200 [ mode_mcchar::$27 ] 2,002: zp ZP_BYTE:202 [ mode_mcchar::$29 ] 2,002: zp ZP_BYTE:203 [ mode_mcchar::$30 ] 1,865.5: zp ZP_BYTE:91 [ mode_mcchar::cx#2 mode_mcchar::cx#1 ] 1,169.18: zp ZP_WORD:92 [ mode_mcchar::col#2 mode_mcchar::col#3 mode_mcchar::col#1 ] 1,001: zp ZP_BYTE:201 [ mode_mcchar::$28 ] 933: zp ZP_WORD:94 [ mode_mcchar::ch#2 mode_mcchar::ch#3 mode_mcchar::ch#1 ] 353.5: zp ZP_BYTE:89 [ mode_mcchar::i#2 mode_mcchar::i#1 ] 308.93: zp ZP_BYTE:90 [ mode_mcchar::cy#4 mode_mcchar::cy#1 ] 202: zp ZP_BYTE:205 [ mode_mcchar::$33 ] 
Uplift Scope [mode_8bppchunkybmm] 3,575.14: zp ZP_BYTE:9 [ mode_8bppchunkybmm::gfxbCpuBank#4 mode_8bppchunkybmm::gfxbCpuBank#7 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::gfxbCpuBank#2 ] 2,925.35: zp ZP_WORD:10 [ mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::gfxb#5 mode_8bppchunkybmm::gfxb#1 ] 2,002: zp ZP_WORD:140 [ mode_8bppchunkybmm::$20 ] 2,002: zp ZP_BYTE:142 [ mode_8bppchunkybmm::c#0 ] 1,801.8: zp ZP_WORD:7 [ mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 ] 353.5: zp ZP_BYTE:5 [ mode_8bppchunkybmm::i#2 mode_8bppchunkybmm::i#1 ] 244.04: zp ZP_BYTE:6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 ] 202: zp ZP_BYTE:144 [ mode_8bppchunkybmm::$27 ] 
Uplift Scope [mode_hicolstdchar] 2,002: zp ZP_BYTE:192 [ mode_hicolstdchar::$24 ] 2,002: zp ZP_BYTE:194 [ mode_hicolstdchar::$26 ] 1,835.17: zp ZP_BYTE:84 [ mode_hicolstdchar::cx#2 mode_hicolstdchar::cx#1 ] 1,019.76: zp ZP_WORD:85 [ mode_hicolstdchar::col#2 mode_hicolstdchar::col#3 mode_hicolstdchar::col#1 ] 1,010.6: zp ZP_WORD:87 [ mode_hicolstdchar::ch#2 mode_hicolstdchar::ch#3 mode_hicolstdchar::ch#1 ] 1,001: zp ZP_BYTE:193 [ mode_hicolstdchar::$25 ] 1,001: zp ZP_BYTE:195 [ mode_hicolstdchar::v#0 ] 353.5: zp ZP_BYTE:82 [ mode_hicolstdchar::i#2 mode_hicolstdchar::i#1 ] 251.75: zp ZP_BYTE:83 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cy#1 ] 202: zp ZP_BYTE:197 [ mode_hicolstdchar::$30 ] 
Uplift Scope [mode_hicolecmchar] 2,002: zp ZP_BYTE:186 [ mode_hicolecmchar::$25 ] 2,002: zp ZP_BYTE:188 [ mode_hicolecmchar::$27 ] 1,835.17: zp ZP_BYTE:77 [ mode_hicolecmchar::cx#2 mode_hicolecmchar::cx#1 ] 1,019.76: zp ZP_WORD:78 [ mode_hicolecmchar::col#2 mode_hicolecmchar::col#3 mode_hicolecmchar::col#1 ] 1,010.6: zp ZP_WORD:80 [ mode_hicolecmchar::ch#2 mode_hicolecmchar::ch#3 mode_hicolecmchar::ch#1 ] 1,001: zp ZP_BYTE:187 [ mode_hicolecmchar::$26 ] 1,001: zp ZP_BYTE:189 [ mode_hicolecmchar::v#0 ] 353.5: zp ZP_BYTE:75 [ mode_hicolecmchar::i#2 mode_hicolecmchar::i#1 ] 251.75: zp ZP_BYTE:76 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cy#1 ] 202: zp ZP_BYTE:191 [ mode_hicolecmchar::$31 ] 
Uplift Scope [mode_hicolmcchar] 2,002: zp ZP_BYTE:180 [ mode_hicolmcchar::$25 ] 2,002: zp ZP_BYTE:182 [ mode_hicolmcchar::$27 ] 1,835.17: zp ZP_BYTE:70 [ mode_hicolmcchar::cx#2 mode_hicolmcchar::cx#1 ] 1,019.76: zp ZP_WORD:71 [ mode_hicolmcchar::col#2 mode_hicolmcchar::col#3 mode_hicolmcchar::col#1 ] 1,010.6: zp ZP_WORD:73 [ mode_hicolmcchar::ch#2 mode_hicolmcchar::ch#3 mode_hicolmcchar::ch#1 ] 1,001: zp ZP_BYTE:181 [ mode_hicolmcchar::$26 ] 1,001: zp ZP_BYTE:183 [ mode_hicolmcchar::v#0 ] 353.5: zp ZP_BYTE:68 [ mode_hicolmcchar::i#2 mode_hicolmcchar::i#1 ] 251.75: zp ZP_BYTE:69 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cy#1 ] 202: zp ZP_BYTE:185 [ mode_hicolmcchar::$31 ] 
Uplift Scope [] 3,698: zp ZP_WORD:112 [ print_char_cursor#17 print_char_cursor#19 print_char_cursor#95 print_char_cursor#32 print_char_cursor#1 ] 2,653.58: zp ZP_WORD:114 [ print_line_cursor#18 print_line_cursor#17 print_line_cursor#19 ] 
Uplift Scope [keyboard_key_pressed] 202: zp ZP_BYTE:118 [ keyboard_key_pressed::return#2 ] 202: zp ZP_BYTE:120 [ keyboard_key_pressed::return#26 ] 202: zp ZP_BYTE:122 [ keyboard_key_pressed::return#27 ] 202: zp ZP_BYTE:124 [ keyboard_key_pressed::return#28 ] 202: zp ZP_BYTE:126 [ keyboard_key_pressed::return#29 ] 202: zp ZP_BYTE:128 [ keyboard_key_pressed::return#30 ] 202: zp ZP_BYTE:130 [ keyboard_key_pressed::return#31 ] 202: zp ZP_BYTE:132 [ keyboard_key_pressed::return#32 ] 202: zp ZP_BYTE:134 [ keyboard_key_pressed::return#10 ] 202: zp ZP_BYTE:136 [ keyboard_key_pressed::return#11 ] 202: zp ZP_BYTE:138 [ keyboard_key_pressed::return#12 ] 202: zp ZP_BYTE:143 [ keyboard_key_pressed::return#23 ] 202: zp ZP_BYTE:157 [ keyboard_key_pressed::return#22 ] 202: zp ZP_BYTE:163 [ keyboard_key_pressed::return#20 ] 202: zp ZP_BYTE:170 [ keyboard_key_pressed::return#19 ] 202: zp ZP_BYTE:178 [ keyboard_key_pressed::return#21 ] 202: zp ZP_BYTE:184 [ keyboard_key_pressed::return#18 ] 202: zp ZP_BYTE:190 [ keyboard_key_pressed::return#17 ] 202: zp ZP_BYTE:196 [ keyboard_key_pressed::return#16 ] 202: zp ZP_BYTE:204 [ keyboard_key_pressed::return#15 ] 202: zp ZP_BYTE:212 [ keyboard_key_pressed::return#14 ] 202: zp ZP_BYTE:220 [ keyboard_key_pressed::return#13 ] 92.67: zp ZP_BYTE:150 [ keyboard_key_pressed::return#0 ] 4: zp ZP_BYTE:146 [ keyboard_key_pressed::rowidx#0 ] 4: zp ZP_BYTE:149 [ keyboard_key_pressed::$2 ] 2: zp ZP_BYTE:12 [ keyboard_key_pressed::key#22 ] 0.67: zp ZP_BYTE:145 [ keyboard_key_pressed::colidx#0 ] 
Uplift Scope [dtvSetCpuBankSegment1] 3,005: zp ZP_BYTE:13 [ dtvSetCpuBankSegment1::cpuBankIdx#3 dtvSetCpuBankSegment1::cpuBankIdx#1 ] 
Uplift Scope [menu] 353.5: zp ZP_BYTE:2 [ menu::i#2 menu::i#1 ] 303: zp ZP_WORD:3 [ menu::c#2 menu::c#1 ] 202: zp ZP_BYTE:119 [ menu::$29 ] 202: zp ZP_BYTE:121 [ menu::$33 ] 202: zp ZP_BYTE:123 [ menu::$37 ] 202: zp ZP_BYTE:125 [ menu::$41 ] 202: zp ZP_BYTE:127 [ menu::$45 ] 202: zp ZP_BYTE:129 [ menu::$49 ] 202: zp ZP_BYTE:131 [ menu::$53 ] 202: zp ZP_BYTE:133 [ menu::$57 ] 202: zp ZP_BYTE:135 [ menu::$61 ] 202: zp ZP_BYTE:137 [ menu::$65 ] 202: zp ZP_BYTE:139 [ menu::$69 ] 
Uplift Scope [print_str_lines] 1,937.17: zp ZP_WORD:110 [ print_str_lines::str#3 print_str_lines::str#2 print_str_lines::str#0 ] 667.33: zp ZP_BYTE:222 [ print_str_lines::ch#0 ] 
Uplift Scope [print_cls] 303: zp ZP_WORD:116 [ print_cls::sc#2 print_cls::sc#1 ] 
Uplift Scope [keyboard_matrix_read] 4: zp ZP_BYTE:147 [ keyboard_matrix_read::rowid#0 ] 4: zp ZP_BYTE:148 [ keyboard_matrix_read::return#2 ] 1.33: zp ZP_BYTE:151 [ keyboard_matrix_read::return#0 ] 
Uplift Scope [print_ln] 
Uplift Scope [print_set_screen] 
Uplift Scope [main] 

Uplifting [mode_8bpppixelcell] best 2653328 combination reg byte a [ mode_8bpppixelcell::c#2 mode_8bpppixelcell::c#3 ] reg byte a [ mode_8bpppixelcell::$17 ] reg byte x [ mode_8bpppixelcell::cp#2 mode_8bpppixelcell::cp#1 ] zp ZP_BYTE:23 [ mode_8bpppixelcell::bits#2 mode_8bpppixelcell::bits#0 mode_8bpppixelcell::bits#1 ] zp ZP_WORD:24 [ mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::gfxb#7 mode_8bpppixelcell::gfxb#1 ] zp ZP_BYTE:26 [ mode_8bpppixelcell::col#2 mode_8bpppixelcell::col#5 mode_8bpppixelcell::col#7 mode_8bpppixelcell::col#1 ] reg byte a [ mode_8bpppixelcell::$11 ] reg byte a [ mode_8bpppixelcell::$13 ] zp ZP_BYTE:155 [ mode_8bpppixelcell::$14 ] zp ZP_BYTE:16 [ mode_8bpppixelcell::ax#2 mode_8bpppixelcell::ax#1 ] zp ZP_WORD:20 [ mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 ] zp ZP_BYTE:22 [ mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cr#1 ] zp ZP_WORD:17 [ mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 ] zp ZP_BYTE:153 [ mode_8bpppixelcell::$12 ] zp ZP_BYTE:14 [ mode_8bpppixelcell::i#2 mode_8bpppixelcell::i#1 ] zp ZP_BYTE:15 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 ] zp ZP_BYTE:158 [ mode_8bpppixelcell::$24 ] zp ZP_BYTE:19 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 ] 
Limited combination testing to 1000 combinations of 6291456 possible.
Uplifting [mode_twoplanebitmap] best 2612328 combination zp ZP_WORD:48 [ mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::gfxa#6 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::gfxa#2 mode_twoplanebitmap::gfxa#1 ] zp ZP_WORD:52 [ mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::gfxb#1 ] reg byte x [ mode_twoplanebitmap::bx#2 mode_twoplanebitmap::bx#1 ] reg byte a [ mode_twoplanebitmap::$14 ] reg byte a [ mode_twoplanebitmap::$16 ] reg byte a [ mode_twoplanebitmap::$17 ] reg byte a [ mode_twoplanebitmap::$20 ] reg byte x [ mode_twoplanebitmap::cx#2 mode_twoplanebitmap::cx#1 ] zp ZP_BYTE:50 [ mode_twoplanebitmap::ax#2 mode_twoplanebitmap::ax#1 ] zp ZP_WORD:45 [ mode_twoplanebitmap::col#2 mode_twoplanebitmap::col#3 mode_twoplanebitmap::col#1 ] zp ZP_BYTE:166 [ mode_twoplanebitmap::$15 ] zp ZP_BYTE:42 [ mode_twoplanebitmap::i#2 mode_twoplanebitmap::i#1 ] zp ZP_BYTE:43 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cy#1 ] zp ZP_BYTE:47 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ay#1 ] zp ZP_BYTE:171 [ mode_twoplanebitmap::$27 ] zp ZP_BYTE:51 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::by#1 ] 
Limited combination testing to 1000 combinations of 786432 possible.
Uplifting [mode_sixsfred2] best 2575328 combination zp ZP_WORD:65 [ mode_sixsfred2::gfxb#2 mode_sixsfred2::gfxb#3 mode_sixsfred2::gfxb#1 ] reg byte x [ mode_sixsfred2::bx#2 mode_sixsfred2::bx#1 ] reg byte a [ mode_sixsfred2::$14 ] reg byte a [ mode_sixsfred2::$16 ] reg byte a [ mode_sixsfred2::$17 ] reg byte a [ mode_sixsfred2::$20 ] reg byte a [ mode_sixsfred2::row#0 ] zp ZP_BYTE:57 [ mode_sixsfred2::cx#2 mode_sixsfred2::cx#1 ] zp ZP_BYTE:63 [ mode_sixsfred2::ax#2 mode_sixsfred2::ax#1 ] zp ZP_WORD:61 [ mode_sixsfred2::gfxa#2 mode_sixsfred2::gfxa#3 mode_sixsfred2::gfxa#1 ] zp ZP_WORD:58 [ mode_sixsfred2::col#2 mode_sixsfred2::col#3 mode_sixsfred2::col#1 ] zp ZP_BYTE:173 [ mode_sixsfred2::$15 ] zp ZP_BYTE:55 [ mode_sixsfred2::i#2 mode_sixsfred2::i#1 ] zp ZP_BYTE:60 [ mode_sixsfred2::ay#4 mode_sixsfred2::ay#1 ] zp ZP_BYTE:56 [ mode_sixsfred2::cy#4 mode_sixsfred2::cy#1 ] zp ZP_BYTE:179 [ mode_sixsfred2::$26 ] zp ZP_BYTE:64 [ mode_sixsfred2::by#4 mode_sixsfred2::by#1 ] 
Limited combination testing to 1000 combinations of 3145728 possible.
Uplifting [mode_sixsfred] best 2534328 combination zp ZP_WORD:39 [ mode_sixsfred::gfxb#2 mode_sixsfred::gfxb#3 mode_sixsfred::gfxb#1 ] reg byte x [ mode_sixsfred::bx#2 mode_sixsfred::bx#1 ] reg byte x [ mode_sixsfred::cx#2 mode_sixsfred::cx#1 ] reg byte a [ mode_sixsfred::$15 ] reg byte a [ mode_sixsfred::$16 ] reg byte a [ mode_sixsfred::$19 ] reg byte a [ mode_sixsfred::row#0 ] zp ZP_BYTE:37 [ mode_sixsfred::ax#2 mode_sixsfred::ax#1 ] zp ZP_WORD:32 [ mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 ] zp ZP_WORD:35 [ mode_sixsfred::gfxa#2 mode_sixsfred::gfxa#3 mode_sixsfred::gfxa#1 ] zp ZP_BYTE:29 [ mode_sixsfred::i#2 mode_sixsfred::i#1 ] zp ZP_BYTE:30 [ mode_sixsfred::cy#4 mode_sixsfred::cy#1 ] zp ZP_BYTE:34 [ mode_sixsfred::ay#4 mode_sixsfred::ay#1 ] zp ZP_BYTE:164 [ mode_sixsfred::$25 ] zp ZP_BYTE:38 [ mode_sixsfred::by#4 mode_sixsfred::by#1 ] 
Limited combination testing to 1000 combinations of 262144 possible.
Uplifting [mode_stdchar] best 2504328 combination reg byte a [ mode_stdchar::$24 ] reg byte a [ mode_stdchar::$25 ] reg byte a [ mode_stdchar::$26 ] reg byte a [ mode_stdchar::$28 ] reg byte a [ mode_stdchar::$29 ] zp ZP_BYTE:105 [ mode_stdchar::cx#2 mode_stdchar::cx#1 ] zp ZP_WORD:106 [ mode_stdchar::col#2 mode_stdchar::col#3 mode_stdchar::col#1 ] zp ZP_BYTE:217 [ mode_stdchar::$27 ] zp ZP_WORD:108 [ mode_stdchar::ch#2 mode_stdchar::ch#3 mode_stdchar::ch#1 ] zp ZP_BYTE:103 [ mode_stdchar::i#2 mode_stdchar::i#1 ] zp ZP_BYTE:104 [ mode_stdchar::cy#4 mode_stdchar::cy#1 ] zp ZP_BYTE:221 [ mode_stdchar::$32 ] 
Limited combination testing to 1000 combinations of 147456 possible.
Uplifting [mode_ecmchar] best 2474328 combination reg byte a [ mode_ecmchar::$25 ] reg byte a [ mode_ecmchar::$26 ] reg byte a [ mode_ecmchar::$27 ] reg byte a [ mode_ecmchar::$29 ] reg byte a [ mode_ecmchar::$30 ] zp ZP_BYTE:98 [ mode_ecmchar::cx#2 mode_ecmchar::cx#1 ] zp ZP_WORD:99 [ mode_ecmchar::col#2 mode_ecmchar::col#3 mode_ecmchar::col#1 ] zp ZP_BYTE:209 [ mode_ecmchar::$28 ] zp ZP_WORD:101 [ mode_ecmchar::ch#2 mode_ecmchar::ch#3 mode_ecmchar::ch#1 ] zp ZP_BYTE:96 [ mode_ecmchar::i#2 mode_ecmchar::i#1 ] zp ZP_BYTE:97 [ mode_ecmchar::cy#4 mode_ecmchar::cy#1 ] zp ZP_BYTE:213 [ mode_ecmchar::$33 ] 
Limited combination testing to 1000 combinations of 147456 possible.
Uplifting [mode_mcchar] best 2444328 combination reg byte a [ mode_mcchar::$25 ] reg byte a [ mode_mcchar::$26 ] reg byte a [ mode_mcchar::$27 ] reg byte a [ mode_mcchar::$29 ] reg byte a [ mode_mcchar::$30 ] zp ZP_BYTE:91 [ mode_mcchar::cx#2 mode_mcchar::cx#1 ] zp ZP_WORD:92 [ mode_mcchar::col#2 mode_mcchar::col#3 mode_mcchar::col#1 ] zp ZP_BYTE:201 [ mode_mcchar::$28 ] zp ZP_WORD:94 [ mode_mcchar::ch#2 mode_mcchar::ch#3 mode_mcchar::ch#1 ] zp ZP_BYTE:89 [ mode_mcchar::i#2 mode_mcchar::i#1 ] zp ZP_BYTE:90 [ mode_mcchar::cy#4 mode_mcchar::cy#1 ] zp ZP_BYTE:205 [ mode_mcchar::$33 ] 
Limited combination testing to 1000 combinations of 147456 possible.
Uplifting [mode_8bppchunkybmm] best 2430428 combination reg byte x [ mode_8bppchunkybmm::gfxbCpuBank#4 mode_8bppchunkybmm::gfxbCpuBank#7 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::gfxbCpuBank#2 ] zp ZP_WORD:10 [ mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::gfxb#5 mode_8bppchunkybmm::gfxb#1 ] zp ZP_WORD:140 [ mode_8bppchunkybmm::$20 ] reg byte a [ mode_8bppchunkybmm::c#0 ] zp ZP_WORD:7 [ mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 ] reg byte x [ mode_8bppchunkybmm::i#2 mode_8bppchunkybmm::i#1 ] zp ZP_BYTE:6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 ] reg byte a [ mode_8bppchunkybmm::$27 ] 
Uplifting [mode_hicolstdchar] best 2398228 combination reg byte a [ mode_hicolstdchar::$24 ] reg byte a [ mode_hicolstdchar::$26 ] reg byte x [ mode_hicolstdchar::cx#2 mode_hicolstdchar::cx#1 ] zp ZP_WORD:85 [ mode_hicolstdchar::col#2 mode_hicolstdchar::col#3 mode_hicolstdchar::col#1 ] zp ZP_WORD:87 [ mode_hicolstdchar::ch#2 mode_hicolstdchar::ch#3 mode_hicolstdchar::ch#1 ] zp ZP_BYTE:193 [ mode_hicolstdchar::$25 ] reg byte a [ mode_hicolstdchar::v#0 ] reg byte x [ mode_hicolstdchar::i#2 mode_hicolstdchar::i#1 ] zp ZP_BYTE:83 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cy#1 ] zp ZP_BYTE:197 [ mode_hicolstdchar::$30 ] 
Limited combination testing to 1000 combinations of 9216 possible.
Uplifting [mode_hicolecmchar] best 2366028 combination reg byte a [ mode_hicolecmchar::$25 ] reg byte a [ mode_hicolecmchar::$27 ] reg byte x [ mode_hicolecmchar::cx#2 mode_hicolecmchar::cx#1 ] zp ZP_WORD:78 [ mode_hicolecmchar::col#2 mode_hicolecmchar::col#3 mode_hicolecmchar::col#1 ] zp ZP_WORD:80 [ mode_hicolecmchar::ch#2 mode_hicolecmchar::ch#3 mode_hicolecmchar::ch#1 ] zp ZP_BYTE:187 [ mode_hicolecmchar::$26 ] reg byte a [ mode_hicolecmchar::v#0 ] reg byte x [ mode_hicolecmchar::i#2 mode_hicolecmchar::i#1 ] zp ZP_BYTE:76 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cy#1 ] zp ZP_BYTE:191 [ mode_hicolecmchar::$31 ] 
Limited combination testing to 1000 combinations of 9216 possible.
Uplifting [mode_hicolmcchar] best 2333828 combination reg byte a [ mode_hicolmcchar::$25 ] reg byte a [ mode_hicolmcchar::$27 ] reg byte x [ mode_hicolmcchar::cx#2 mode_hicolmcchar::cx#1 ] zp ZP_WORD:71 [ mode_hicolmcchar::col#2 mode_hicolmcchar::col#3 mode_hicolmcchar::col#1 ] zp ZP_WORD:73 [ mode_hicolmcchar::ch#2 mode_hicolmcchar::ch#3 mode_hicolmcchar::ch#1 ] zp ZP_BYTE:181 [ mode_hicolmcchar::$26 ] reg byte a [ mode_hicolmcchar::v#0 ] reg byte x [ mode_hicolmcchar::i#2 mode_hicolmcchar::i#1 ] zp ZP_BYTE:69 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cy#1 ] zp ZP_BYTE:185 [ mode_hicolmcchar::$31 ] 
Limited combination testing to 1000 combinations of 9216 possible.
Uplifting [] best 2333828 combination zp ZP_WORD:112 [ print_char_cursor#17 print_char_cursor#19 print_char_cursor#95 print_char_cursor#32 print_char_cursor#1 ] zp ZP_WORD:114 [ print_line_cursor#18 print_line_cursor#17 print_line_cursor#19 ] 
Uplifting [dtvSetCpuBankSegment1] best 2332819 combination reg byte a [ dtvSetCpuBankSegment1::cpuBankIdx#3 dtvSetCpuBankSegment1::cpuBankIdx#1 ] 
Uplifting [menu] best 2330019 combination reg byte x [ menu::i#2 menu::i#1 ] zp ZP_WORD:3 [ menu::c#2 menu::c#1 ] reg byte a [ menu::$29 ] reg byte a [ menu::$33 ] reg byte a [ menu::$37 ] reg byte a [ menu::$41 ] zp ZP_BYTE:127 [ menu::$45 ] zp ZP_BYTE:129 [ menu::$49 ] zp ZP_BYTE:131 [ menu::$53 ] zp ZP_BYTE:133 [ menu::$57 ] zp ZP_BYTE:135 [ menu::$61 ] zp ZP_BYTE:137 [ menu::$65 ] zp ZP_BYTE:139 [ menu::$69 ] 
Limited combination testing to 1000 combinations of 12582912 possible.
Uplifting [print_str_lines] best 2318019 combination zp ZP_WORD:110 [ print_str_lines::str#3 print_str_lines::str#2 print_str_lines::str#0 ] reg byte a [ print_str_lines::ch#0 ] 
Uplifting [print_cls] best 2318019 combination zp ZP_WORD:116 [ print_cls::sc#2 print_cls::sc#1 ] 
Uplifting [keyboard_matrix_read] best 2318001 combination reg byte x [ keyboard_matrix_read::rowid#0 ] reg byte a [ keyboard_matrix_read::return#2 ] reg byte a [ keyboard_matrix_read::return#0 ] 
Uplifting [print_ln] best 2318001 combination 
Uplifting [print_set_screen] best 2318001 combination 
Uplifting [main] best 2318001 combination 
Attempting to uplift remaining variables inzp ZP_BYTE:23 [ mode_8bpppixelcell::bits#2 mode_8bpppixelcell::bits#0 mode_8bpppixelcell::bits#1 ]
Uplifting [mode_8bpppixelcell] best 2318001 combination zp ZP_BYTE:23 [ mode_8bpppixelcell::bits#2 mode_8bpppixelcell::bits#0 mode_8bpppixelcell::bits#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:26 [ mode_8bpppixelcell::col#2 mode_8bpppixelcell::col#5 mode_8bpppixelcell::col#7 mode_8bpppixelcell::col#1 ]
Uplifting [mode_8bpppixelcell] best 2318001 combination zp ZP_BYTE:26 [ mode_8bpppixelcell::col#2 mode_8bpppixelcell::col#5 mode_8bpppixelcell::col#7 mode_8bpppixelcell::col#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:155 [ mode_8bpppixelcell::$14 ]
Uplifting [mode_8bpppixelcell] best 2312001 combination reg byte a [ mode_8bpppixelcell::$14 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:16 [ mode_8bpppixelcell::ax#2 mode_8bpppixelcell::ax#1 ]
Uplifting [mode_8bpppixelcell] best 2302001 combination reg byte x [ mode_8bpppixelcell::ax#2 mode_8bpppixelcell::ax#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:57 [ mode_sixsfred2::cx#2 mode_sixsfred2::cx#1 ]
Uplifting [mode_sixsfred2] best 2292001 combination reg byte x [ mode_sixsfred2::cx#2 mode_sixsfred2::cx#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:37 [ mode_sixsfred::ax#2 mode_sixsfred::ax#1 ]
Uplifting [mode_sixsfred] best 2283001 combination reg byte x [ mode_sixsfred::ax#2 mode_sixsfred::ax#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:63 [ mode_sixsfred2::ax#2 mode_sixsfred2::ax#1 ]
Uplifting [mode_sixsfred2] best 2274001 combination reg byte x [ mode_sixsfred2::ax#2 mode_sixsfred2::ax#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:91 [ mode_mcchar::cx#2 mode_mcchar::cx#1 ]
Uplifting [mode_mcchar] best 2263001 combination reg byte x [ mode_mcchar::cx#2 mode_mcchar::cx#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:98 [ mode_ecmchar::cx#2 mode_ecmchar::cx#1 ]
Uplifting [mode_ecmchar] best 2252001 combination reg byte x [ mode_ecmchar::cx#2 mode_ecmchar::cx#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:105 [ mode_stdchar::cx#2 mode_stdchar::cx#1 ]
Uplifting [mode_stdchar] best 2241001 combination reg byte x [ mode_stdchar::cx#2 mode_stdchar::cx#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:50 [ mode_twoplanebitmap::ax#2 mode_twoplanebitmap::ax#1 ]
Uplifting [mode_twoplanebitmap] best 2232001 combination reg byte x [ mode_twoplanebitmap::ax#2 mode_twoplanebitmap::ax#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:22 [ mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cr#1 ]
Uplifting [mode_8bpppixelcell] best 2232001 combination zp ZP_BYTE:22 [ mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cr#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:153 [ mode_8bpppixelcell::$12 ]
Uplifting [mode_8bpppixelcell] best 2232001 combination zp ZP_BYTE:153 [ mode_8bpppixelcell::$12 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:166 [ mode_twoplanebitmap::$15 ]
Uplifting [mode_twoplanebitmap] best 2232001 combination zp ZP_BYTE:166 [ mode_twoplanebitmap::$15 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:173 [ mode_sixsfred2::$15 ]
Uplifting [mode_sixsfred2] best 2232001 combination zp ZP_BYTE:173 [ mode_sixsfred2::$15 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:181 [ mode_hicolmcchar::$26 ]
Uplifting [mode_hicolmcchar] best 2232001 combination zp ZP_BYTE:181 [ mode_hicolmcchar::$26 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:187 [ mode_hicolecmchar::$26 ]
Uplifting [mode_hicolecmchar] best 2232001 combination zp ZP_BYTE:187 [ mode_hicolecmchar::$26 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:193 [ mode_hicolstdchar::$25 ]
Uplifting [mode_hicolstdchar] best 2232001 combination zp ZP_BYTE:193 [ mode_hicolstdchar::$25 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:201 [ mode_mcchar::$28 ]
Uplifting [mode_mcchar] best 2232001 combination zp ZP_BYTE:201 [ mode_mcchar::$28 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:209 [ mode_ecmchar::$28 ]
Uplifting [mode_ecmchar] best 2232001 combination zp ZP_BYTE:209 [ mode_ecmchar::$28 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:217 [ mode_stdchar::$27 ]
Uplifting [mode_stdchar] best 2232001 combination zp ZP_BYTE:217 [ mode_stdchar::$27 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:14 [ mode_8bpppixelcell::i#2 mode_8bpppixelcell::i#1 ]
Uplifting [mode_8bpppixelcell] best 2230801 combination reg byte x [ mode_8bpppixelcell::i#2 mode_8bpppixelcell::i#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:29 [ mode_sixsfred::i#2 mode_sixsfred::i#1 ]
Uplifting [mode_sixsfred] best 2229601 combination reg byte x [ mode_sixsfred::i#2 mode_sixsfred::i#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:42 [ mode_twoplanebitmap::i#2 mode_twoplanebitmap::i#1 ]
Uplifting [mode_twoplanebitmap] best 2228401 combination reg byte x [ mode_twoplanebitmap::i#2 mode_twoplanebitmap::i#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:55 [ mode_sixsfred2::i#2 mode_sixsfred2::i#1 ]
Uplifting [mode_sixsfred2] best 2227201 combination reg byte x [ mode_sixsfred2::i#2 mode_sixsfred2::i#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:89 [ mode_mcchar::i#2 mode_mcchar::i#1 ]
Uplifting [mode_mcchar] best 2226001 combination reg byte x [ mode_mcchar::i#2 mode_mcchar::i#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:96 [ mode_ecmchar::i#2 mode_ecmchar::i#1 ]
Uplifting [mode_ecmchar] best 2224801 combination reg byte x [ mode_ecmchar::i#2 mode_ecmchar::i#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:103 [ mode_stdchar::i#2 mode_stdchar::i#1 ]
Uplifting [mode_stdchar] best 2223601 combination reg byte x [ mode_stdchar::i#2 mode_stdchar::i#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:90 [ mode_mcchar::cy#4 mode_mcchar::cy#1 ]
Uplifting [mode_mcchar] best 2223601 combination zp ZP_BYTE:90 [ mode_mcchar::cy#4 mode_mcchar::cy#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:97 [ mode_ecmchar::cy#4 mode_ecmchar::cy#1 ]
Uplifting [mode_ecmchar] best 2223601 combination zp ZP_BYTE:97 [ mode_ecmchar::cy#4 mode_ecmchar::cy#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:104 [ mode_stdchar::cy#4 mode_stdchar::cy#1 ]
Uplifting [mode_stdchar] best 2223601 combination zp ZP_BYTE:104 [ mode_stdchar::cy#4 mode_stdchar::cy#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:30 [ mode_sixsfred::cy#4 mode_sixsfred::cy#1 ]
Uplifting [mode_sixsfred] best 2223601 combination zp ZP_BYTE:30 [ mode_sixsfred::cy#4 mode_sixsfred::cy#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:34 [ mode_sixsfred::ay#4 mode_sixsfred::ay#1 ]
Uplifting [mode_sixsfred] best 2223601 combination zp ZP_BYTE:34 [ mode_sixsfred::ay#4 mode_sixsfred::ay#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:60 [ mode_sixsfred2::ay#4 mode_sixsfred2::ay#1 ]
Uplifting [mode_sixsfred2] best 2223601 combination zp ZP_BYTE:60 [ mode_sixsfred2::ay#4 mode_sixsfred2::ay#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:15 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 ]
Uplifting [mode_8bpppixelcell] best 2223601 combination zp ZP_BYTE:15 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:43 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cy#1 ]
Uplifting [mode_twoplanebitmap] best 2223601 combination zp ZP_BYTE:43 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cy#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:56 [ mode_sixsfred2::cy#4 mode_sixsfred2::cy#1 ]
Uplifting [mode_sixsfred2] best 2223601 combination zp ZP_BYTE:56 [ mode_sixsfred2::cy#4 mode_sixsfred2::cy#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:47 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ay#1 ]
Uplifting [mode_twoplanebitmap] best 2223601 combination zp ZP_BYTE:47 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ay#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:69 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cy#1 ]
Uplifting [mode_hicolmcchar] best 2223601 combination zp ZP_BYTE:69 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cy#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:76 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cy#1 ]
Uplifting [mode_hicolecmchar] best 2223601 combination zp ZP_BYTE:76 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cy#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:83 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cy#1 ]
Uplifting [mode_hicolstdchar] best 2223601 combination zp ZP_BYTE:83 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cy#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 ]
Uplifting [mode_8bppchunkybmm] best 2223601 combination zp ZP_BYTE:6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:118 [ keyboard_key_pressed::return#2 ]
Uplifting [keyboard_key_pressed] best 2223001 combination reg byte a [ keyboard_key_pressed::return#2 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:120 [ keyboard_key_pressed::return#26 ]
Uplifting [keyboard_key_pressed] best 2222401 combination reg byte a [ keyboard_key_pressed::return#26 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:122 [ keyboard_key_pressed::return#27 ]
Uplifting [keyboard_key_pressed] best 2221801 combination reg byte a [ keyboard_key_pressed::return#27 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:124 [ keyboard_key_pressed::return#28 ]
Uplifting [keyboard_key_pressed] best 2221201 combination reg byte a [ keyboard_key_pressed::return#28 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:126 [ keyboard_key_pressed::return#29 ]
Uplifting [keyboard_key_pressed] best 2220601 combination reg byte a [ keyboard_key_pressed::return#29 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:127 [ menu::$45 ]
Uplifting [menu] best 2220201 combination reg byte a [ menu::$45 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:128 [ keyboard_key_pressed::return#30 ]
Uplifting [keyboard_key_pressed] best 2219601 combination reg byte a [ keyboard_key_pressed::return#30 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:129 [ menu::$49 ]
Uplifting [menu] best 2219201 combination reg byte a [ menu::$49 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:130 [ keyboard_key_pressed::return#31 ]
Uplifting [keyboard_key_pressed] best 2218601 combination reg byte a [ keyboard_key_pressed::return#31 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:131 [ menu::$53 ]
Uplifting [menu] best 2218201 combination reg byte a [ menu::$53 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:132 [ keyboard_key_pressed::return#32 ]
Uplifting [keyboard_key_pressed] best 2217601 combination reg byte a [ keyboard_key_pressed::return#32 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:133 [ menu::$57 ]
Uplifting [menu] best 2217201 combination reg byte a [ menu::$57 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:134 [ keyboard_key_pressed::return#10 ]
Uplifting [keyboard_key_pressed] best 2216601 combination reg byte a [ keyboard_key_pressed::return#10 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:135 [ menu::$61 ]
Uplifting [menu] best 2216201 combination reg byte a [ menu::$61 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:136 [ keyboard_key_pressed::return#11 ]
Uplifting [keyboard_key_pressed] best 2215601 combination reg byte a [ keyboard_key_pressed::return#11 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:137 [ menu::$65 ]
Uplifting [menu] best 2215201 combination reg byte a [ menu::$65 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:138 [ keyboard_key_pressed::return#12 ]
Uplifting [keyboard_key_pressed] best 2214601 combination reg byte a [ keyboard_key_pressed::return#12 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:139 [ menu::$69 ]
Uplifting [menu] best 2214201 combination reg byte a [ menu::$69 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:143 [ keyboard_key_pressed::return#23 ]
Uplifting [keyboard_key_pressed] best 2213601 combination reg byte a [ keyboard_key_pressed::return#23 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:157 [ keyboard_key_pressed::return#22 ]
Uplifting [keyboard_key_pressed] best 2213001 combination reg byte a [ keyboard_key_pressed::return#22 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:158 [ mode_8bpppixelcell::$24 ]
Uplifting [mode_8bpppixelcell] best 2212601 combination reg byte a [ mode_8bpppixelcell::$24 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:163 [ keyboard_key_pressed::return#20 ]
Uplifting [keyboard_key_pressed] best 2212001 combination reg byte a [ keyboard_key_pressed::return#20 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:164 [ mode_sixsfred::$25 ]
Uplifting [mode_sixsfred] best 2211601 combination reg byte a [ mode_sixsfred::$25 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:170 [ keyboard_key_pressed::return#19 ]
Uplifting [keyboard_key_pressed] best 2211001 combination reg byte a [ keyboard_key_pressed::return#19 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:171 [ mode_twoplanebitmap::$27 ]
Uplifting [mode_twoplanebitmap] best 2210601 combination reg byte a [ mode_twoplanebitmap::$27 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:178 [ keyboard_key_pressed::return#21 ]
Uplifting [keyboard_key_pressed] best 2210001 combination reg byte a [ keyboard_key_pressed::return#21 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:179 [ mode_sixsfred2::$26 ]
Uplifting [mode_sixsfred2] best 2209601 combination reg byte a [ mode_sixsfred2::$26 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:184 [ keyboard_key_pressed::return#18 ]
Uplifting [keyboard_key_pressed] best 2209001 combination reg byte a [ keyboard_key_pressed::return#18 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:185 [ mode_hicolmcchar::$31 ]
Uplifting [mode_hicolmcchar] best 2208601 combination reg byte a [ mode_hicolmcchar::$31 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:190 [ keyboard_key_pressed::return#17 ]
Uplifting [keyboard_key_pressed] best 2208001 combination reg byte a [ keyboard_key_pressed::return#17 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:191 [ mode_hicolecmchar::$31 ]
Uplifting [mode_hicolecmchar] best 2207601 combination reg byte a [ mode_hicolecmchar::$31 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:196 [ keyboard_key_pressed::return#16 ]
Uplifting [keyboard_key_pressed] best 2207001 combination reg byte a [ keyboard_key_pressed::return#16 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:197 [ mode_hicolstdchar::$30 ]
Uplifting [mode_hicolstdchar] best 2206601 combination reg byte a [ mode_hicolstdchar::$30 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:204 [ keyboard_key_pressed::return#15 ]
Uplifting [keyboard_key_pressed] best 2206001 combination reg byte a [ keyboard_key_pressed::return#15 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:205 [ mode_mcchar::$33 ]
Uplifting [mode_mcchar] best 2205601 combination reg byte a [ mode_mcchar::$33 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:212 [ keyboard_key_pressed::return#14 ]
Uplifting [keyboard_key_pressed] best 2205001 combination reg byte a [ keyboard_key_pressed::return#14 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:213 [ mode_ecmchar::$33 ]
Uplifting [mode_ecmchar] best 2204601 combination reg byte a [ mode_ecmchar::$33 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:220 [ keyboard_key_pressed::return#13 ]
Uplifting [keyboard_key_pressed] best 2204001 combination reg byte a [ keyboard_key_pressed::return#13 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:221 [ mode_stdchar::$32 ]
Uplifting [mode_stdchar] best 2203601 combination reg byte a [ mode_stdchar::$32 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:38 [ mode_sixsfred::by#4 mode_sixsfred::by#1 ]
Uplifting [mode_sixsfred] best 2203601 combination zp ZP_BYTE:38 [ mode_sixsfred::by#4 mode_sixsfred::by#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:51 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::by#1 ]
Uplifting [mode_twoplanebitmap] best 2203601 combination zp ZP_BYTE:51 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::by#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:64 [ mode_sixsfred2::by#4 mode_sixsfred2::by#1 ]
Uplifting [mode_sixsfred2] best 2203601 combination zp ZP_BYTE:64 [ mode_sixsfred2::by#4 mode_sixsfred2::by#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:19 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 ]
Uplifting [mode_8bpppixelcell] best 2203601 combination zp ZP_BYTE:19 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:150 [ keyboard_key_pressed::return#0 ]
Uplifting [keyboard_key_pressed] best 2196998 combination reg byte a [ keyboard_key_pressed::return#0 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:146 [ keyboard_key_pressed::rowidx#0 ]
Uplifting [keyboard_key_pressed] best 2196994 combination reg byte a [ keyboard_key_pressed::rowidx#0 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:149 [ keyboard_key_pressed::$2 ]
Uplifting [keyboard_key_pressed] best 2196988 combination reg byte a [ keyboard_key_pressed::$2 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:12 [ keyboard_key_pressed::key#22 ]
Uplifting [keyboard_key_pressed] best 2196920 combination reg byte x [ keyboard_key_pressed::key#22 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:145 [ keyboard_key_pressed::colidx#0 ]
Uplifting [keyboard_key_pressed] best 2196916 combination reg byte y [ keyboard_key_pressed::colidx#0 ] 
Coalescing zero page register [ zp ZP_WORD:3 [ menu::c#2 menu::c#1 ] ] with [ zp ZP_WORD:7 [ mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 ] ]
Coalescing zero page register [ zp ZP_WORD:3 [ menu::c#2 menu::c#1 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 ] ] with [ zp ZP_WORD:17 [ mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 ] ]
Coalescing zero page register [ zp ZP_WORD:3 [ menu::c#2 menu::c#1 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 ] ] with [ zp ZP_WORD:20 [ mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 ] ]
Coalescing zero page register [ zp ZP_WORD:3 [ menu::c#2 menu::c#1 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 ] ] with [ zp ZP_WORD:32 [ mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 ] ]
Coalescing zero page register [ zp ZP_WORD:3 [ menu::c#2 menu::c#1 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 ] ] with [ zp ZP_WORD:35 [ mode_sixsfred::gfxa#2 mode_sixsfred::gfxa#3 mode_sixsfred::gfxa#1 ] ]
Coalescing zero page register [ zp ZP_WORD:3 [ menu::c#2 menu::c#1 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 mode_sixsfred::gfxa#2 mode_sixsfred::gfxa#3 mode_sixsfred::gfxa#1 ] ] with [ zp ZP_WORD:39 [ mode_sixsfred::gfxb#2 mode_sixsfred::gfxb#3 mode_sixsfred::gfxb#1 ] ]
Coalescing zero page register [ zp ZP_WORD:3 [ menu::c#2 menu::c#1 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 mode_sixsfred::gfxa#2 mode_sixsfred::gfxa#3 mode_sixsfred::gfxa#1 mode_sixsfred::gfxb#2 mode_sixsfred::gfxb#3 mode_sixsfred::gfxb#1 ] ] with [ zp ZP_WORD:45 [ mode_twoplanebitmap::col#2 mode_twoplanebitmap::col#3 mode_twoplanebitmap::col#1 ] ]
Coalescing zero page register [ zp ZP_WORD:3 [ menu::c#2 menu::c#1 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 mode_sixsfred::gfxa#2 mode_sixsfred::gfxa#3 mode_sixsfred::gfxa#1 mode_sixsfred::gfxb#2 mode_sixsfred::gfxb#3 mode_sixsfred::gfxb#1 mode_twoplanebitmap::col#2 mode_twoplanebitmap::col#3 mode_twoplanebitmap::col#1 ] ] with [ zp ZP_WORD:48 [ mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::gfxa#6 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::gfxa#2 mode_twoplanebitmap::gfxa#1 ] ]
Coalescing zero page register [ zp ZP_WORD:3 [ menu::c#2 menu::c#1 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 mode_sixsfred::gfxa#2 mode_sixsfred::gfxa#3 mode_sixsfred::gfxa#1 mode_sixsfred::gfxb#2 mode_sixsfred::gfxb#3 mode_sixsfred::gfxb#1 mode_twoplanebitmap::col#2 mode_twoplanebitmap::col#3 mode_twoplanebitmap::col#1 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::gfxa#6 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::gfxa#2 mode_twoplanebitmap::gfxa#1 ] ] with [ zp ZP_WORD:52 [ mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::gfxb#1 ] ]
Coalescing zero page register [ zp ZP_WORD:3 [ menu::c#2 menu::c#1 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 mode_sixsfred::gfxa#2 mode_sixsfred::gfxa#3 mode_sixsfred::gfxa#1 mode_sixsfred::gfxb#2 mode_sixsfred::gfxb#3 mode_sixsfred::gfxb#1 mode_twoplanebitmap::col#2 mode_twoplanebitmap::col#3 mode_twoplanebitmap::col#1 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::gfxa#6 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::gfxa#2 mode_twoplanebitmap::gfxa#1 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::gfxb#1 ] ] with [ zp ZP_WORD:58 [ mode_sixsfred2::col#2 mode_sixsfred2::col#3 mode_sixsfred2::col#1 ] ]
Coalescing zero page register [ zp ZP_WORD:3 [ menu::c#2 menu::c#1 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 mode_sixsfred::gfxa#2 mode_sixsfred::gfxa#3 mode_sixsfred::gfxa#1 mode_sixsfred::gfxb#2 mode_sixsfred::gfxb#3 mode_sixsfred::gfxb#1 mode_twoplanebitmap::col#2 mode_twoplanebitmap::col#3 mode_twoplanebitmap::col#1 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::gfxa#6 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::gfxa#2 mode_twoplanebitmap::gfxa#1 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::gfxb#1 mode_sixsfred2::col#2 mode_sixsfred2::col#3 mode_sixsfred2::col#1 ] ] with [ zp ZP_WORD:61 [ mode_sixsfred2::gfxa#2 mode_sixsfred2::gfxa#3 mode_sixsfred2::gfxa#1 ] ]
Coalescing zero page register [ zp ZP_WORD:3 [ menu::c#2 menu::c#1 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 mode_sixsfred::gfxa#2 mode_sixsfred::gfxa#3 mode_sixsfred::gfxa#1 mode_sixsfred::gfxb#2 mode_sixsfred::gfxb#3 mode_sixsfred::gfxb#1 mode_twoplanebitmap::col#2 mode_twoplanebitmap::col#3 mode_twoplanebitmap::col#1 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::gfxa#6 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::gfxa#2 mode_twoplanebitmap::gfxa#1 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::gfxb#1 mode_sixsfred2::col#2 mode_sixsfred2::col#3 mode_sixsfred2::col#1 mode_sixsfred2::gfxa#2 mode_sixsfred2::gfxa#3 mode_sixsfred2::gfxa#1 ] ] with [ zp ZP_WORD:65 [ mode_sixsfred2::gfxb#2 mode_sixsfred2::gfxb#3 mode_sixsfred2::gfxb#1 ] ]
Coalescing zero page register [ zp ZP_WORD:3 [ menu::c#2 menu::c#1 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 mode_sixsfred::gfxa#2 mode_sixsfred::gfxa#3 mode_sixsfred::gfxa#1 mode_sixsfred::gfxb#2 mode_sixsfred::gfxb#3 mode_sixsfred::gfxb#1 mode_twoplanebitmap::col#2 mode_twoplanebitmap::col#3 mode_twoplanebitmap::col#1 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::gfxa#6 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::gfxa#2 mode_twoplanebitmap::gfxa#1 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::gfxb#1 mode_sixsfred2::col#2 mode_sixsfred2::col#3 mode_sixsfred2::col#1 mode_sixsfred2::gfxa#2 mode_sixsfred2::gfxa#3 mode_sixsfred2::gfxa#1 mode_sixsfred2::gfxb#2 mode_sixsfred2::gfxb#3 mode_sixsfred2::gfxb#1 ] ] with [ zp ZP_WORD:71 [ mode_hicolmcchar::col#2 mode_hicolmcchar::col#3 mode_hicolmcchar::col#1 ] ]
Coalescing zero page register [ zp ZP_WORD:3 [ menu::c#2 menu::c#1 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 mode_sixsfred::gfxa#2 mode_sixsfred::gfxa#3 mode_sixsfred::gfxa#1 mode_sixsfred::gfxb#2 mode_sixsfred::gfxb#3 mode_sixsfred::gfxb#1 mode_twoplanebitmap::col#2 mode_twoplanebitmap::col#3 mode_twoplanebitmap::col#1 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::gfxa#6 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::gfxa#2 mode_twoplanebitmap::gfxa#1 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::gfxb#1 mode_sixsfred2::col#2 mode_sixsfred2::col#3 mode_sixsfred2::col#1 mode_sixsfred2::gfxa#2 mode_sixsfred2::gfxa#3 mode_sixsfred2::gfxa#1 mode_sixsfred2::gfxb#2 mode_sixsfred2::gfxb#3 mode_sixsfred2::gfxb#1 mode_hicolmcchar::col#2 mode_hicolmcchar::col#3 mode_hicolmcchar::col#1 ] ] with [ zp ZP_WORD:78 [ mode_hicolecmchar::col#2 mode_hicolecmchar::col#3 mode_hicolecmchar::col#1 ] ]
Coalescing zero page register [ zp ZP_WORD:3 [ menu::c#2 menu::c#1 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 mode_sixsfred::gfxa#2 mode_sixsfred::gfxa#3 mode_sixsfred::gfxa#1 mode_sixsfred::gfxb#2 mode_sixsfred::gfxb#3 mode_sixsfred::gfxb#1 mode_twoplanebitmap::col#2 mode_twoplanebitmap::col#3 mode_twoplanebitmap::col#1 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::gfxa#6 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::gfxa#2 mode_twoplanebitmap::gfxa#1 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::gfxb#1 mode_sixsfred2::col#2 mode_sixsfred2::col#3 mode_sixsfred2::col#1 mode_sixsfred2::gfxa#2 mode_sixsfred2::gfxa#3 mode_sixsfred2::gfxa#1 mode_sixsfred2::gfxb#2 mode_sixsfred2::gfxb#3 mode_sixsfred2::gfxb#1 mode_hicolmcchar::col#2 mode_hicolmcchar::col#3 mode_hicolmcchar::col#1 mode_hicolecmchar::col#2 mode_hicolecmchar::col#3 mode_hicolecmchar::col#1 ] ] with [ zp ZP_WORD:85 [ mode_hicolstdchar::col#2 mode_hicolstdchar::col#3 mode_hicolstdchar::col#1 ] ]
Coalescing zero page register [ zp ZP_WORD:3 [ menu::c#2 menu::c#1 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 mode_sixsfred::gfxa#2 mode_sixsfred::gfxa#3 mode_sixsfred::gfxa#1 mode_sixsfred::gfxb#2 mode_sixsfred::gfxb#3 mode_sixsfred::gfxb#1 mode_twoplanebitmap::col#2 mode_twoplanebitmap::col#3 mode_twoplanebitmap::col#1 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::gfxa#6 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::gfxa#2 mode_twoplanebitmap::gfxa#1 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::gfxb#1 mode_sixsfred2::col#2 mode_sixsfred2::col#3 mode_sixsfred2::col#1 mode_sixsfred2::gfxa#2 mode_sixsfred2::gfxa#3 mode_sixsfred2::gfxa#1 mode_sixsfred2::gfxb#2 mode_sixsfred2::gfxb#3 mode_sixsfred2::gfxb#1 mode_hicolmcchar::col#2 mode_hicolmcchar::col#3 mode_hicolmcchar::col#1 mode_hicolecmchar::col#2 mode_hicolecmchar::col#3 mode_hicolecmchar::col#1 mode_hicolstdchar::col#2 mode_hicolstdchar::col#3 mode_hicolstdchar::col#1 ] ] with [ zp ZP_WORD:92 [ mode_mcchar::col#2 mode_mcchar::col#3 mode_mcchar::col#1 ] ]
Coalescing zero page register [ zp ZP_WORD:3 [ menu::c#2 menu::c#1 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 mode_sixsfred::gfxa#2 mode_sixsfred::gfxa#3 mode_sixsfred::gfxa#1 mode_sixsfred::gfxb#2 mode_sixsfred::gfxb#3 mode_sixsfred::gfxb#1 mode_twoplanebitmap::col#2 mode_twoplanebitmap::col#3 mode_twoplanebitmap::col#1 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::gfxa#6 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::gfxa#2 mode_twoplanebitmap::gfxa#1 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::gfxb#1 mode_sixsfred2::col#2 mode_sixsfred2::col#3 mode_sixsfred2::col#1 mode_sixsfred2::gfxa#2 mode_sixsfred2::gfxa#3 mode_sixsfred2::gfxa#1 mode_sixsfred2::gfxb#2 mode_sixsfred2::gfxb#3 mode_sixsfred2::gfxb#1 mode_hicolmcchar::col#2 mode_hicolmcchar::col#3 mode_hicolmcchar::col#1 mode_hicolecmchar::col#2 mode_hicolecmchar::col#3 mode_hicolecmchar::col#1 mode_hicolstdchar::col#2 mode_hicolstdchar::col#3 mode_hicolstdchar::col#1 mode_mcchar::col#2 mode_mcchar::col#3 mode_mcchar::col#1 ] ] with [ zp ZP_WORD:99 [ mode_ecmchar::col#2 mode_ecmchar::col#3 mode_ecmchar::col#1 ] ]
Coalescing zero page register [ zp ZP_WORD:3 [ menu::c#2 menu::c#1 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 mode_sixsfred::gfxa#2 mode_sixsfred::gfxa#3 mode_sixsfred::gfxa#1 mode_sixsfred::gfxb#2 mode_sixsfred::gfxb#3 mode_sixsfred::gfxb#1 mode_twoplanebitmap::col#2 mode_twoplanebitmap::col#3 mode_twoplanebitmap::col#1 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::gfxa#6 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::gfxa#2 mode_twoplanebitmap::gfxa#1 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::gfxb#1 mode_sixsfred2::col#2 mode_sixsfred2::col#3 mode_sixsfred2::col#1 mode_sixsfred2::gfxa#2 mode_sixsfred2::gfxa#3 mode_sixsfred2::gfxa#1 mode_sixsfred2::gfxb#2 mode_sixsfred2::gfxb#3 mode_sixsfred2::gfxb#1 mode_hicolmcchar::col#2 mode_hicolmcchar::col#3 mode_hicolmcchar::col#1 mode_hicolecmchar::col#2 mode_hicolecmchar::col#3 mode_hicolecmchar::col#1 mode_hicolstdchar::col#2 mode_hicolstdchar::col#3 mode_hicolstdchar::col#1 mode_mcchar::col#2 mode_mcchar::col#3 mode_mcchar::col#1 mode_ecmchar::col#2 mode_ecmchar::col#3 mode_ecmchar::col#1 ] ] with [ zp ZP_WORD:106 [ mode_stdchar::col#2 mode_stdchar::col#3 mode_stdchar::col#1 ] ]
Coalescing zero page register [ zp ZP_WORD:3 [ menu::c#2 menu::c#1 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 mode_sixsfred::gfxa#2 mode_sixsfred::gfxa#3 mode_sixsfred::gfxa#1 mode_sixsfred::gfxb#2 mode_sixsfred::gfxb#3 mode_sixsfred::gfxb#1 mode_twoplanebitmap::col#2 mode_twoplanebitmap::col#3 mode_twoplanebitmap::col#1 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::gfxa#6 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::gfxa#2 mode_twoplanebitmap::gfxa#1 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::gfxb#1 mode_sixsfred2::col#2 mode_sixsfred2::col#3 mode_sixsfred2::col#1 mode_sixsfred2::gfxa#2 mode_sixsfred2::gfxa#3 mode_sixsfred2::gfxa#1 mode_sixsfred2::gfxb#2 mode_sixsfred2::gfxb#3 mode_sixsfred2::gfxb#1 mode_hicolmcchar::col#2 mode_hicolmcchar::col#3 mode_hicolmcchar::col#1 mode_hicolecmchar::col#2 mode_hicolecmchar::col#3 mode_hicolecmchar::col#1 mode_hicolstdchar::col#2 mode_hicolstdchar::col#3 mode_hicolstdchar::col#1 mode_mcchar::col#2 mode_mcchar::col#3 mode_mcchar::col#1 mode_ecmchar::col#2 mode_ecmchar::col#3 mode_ecmchar::col#1 mode_stdchar::col#2 mode_stdchar::col#3 mode_stdchar::col#1 ] ] with [ zp ZP_WORD:110 [ print_str_lines::str#3 print_str_lines::str#2 print_str_lines::str#0 ] ]
Coalescing zero page register [ zp ZP_WORD:3 [ menu::c#2 menu::c#1 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 mode_sixsfred::gfxa#2 mode_sixsfred::gfxa#3 mode_sixsfred::gfxa#1 mode_sixsfred::gfxb#2 mode_sixsfred::gfxb#3 mode_sixsfred::gfxb#1 mode_twoplanebitmap::col#2 mode_twoplanebitmap::col#3 mode_twoplanebitmap::col#1 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::gfxa#6 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::gfxa#2 mode_twoplanebitmap::gfxa#1 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::gfxb#1 mode_sixsfred2::col#2 mode_sixsfred2::col#3 mode_sixsfred2::col#1 mode_sixsfred2::gfxa#2 mode_sixsfred2::gfxa#3 mode_sixsfred2::gfxa#1 mode_sixsfred2::gfxb#2 mode_sixsfred2::gfxb#3 mode_sixsfred2::gfxb#1 mode_hicolmcchar::col#2 mode_hicolmcchar::col#3 mode_hicolmcchar::col#1 mode_hicolecmchar::col#2 mode_hicolecmchar::col#3 mode_hicolecmchar::col#1 mode_hicolstdchar::col#2 mode_hicolstdchar::col#3 mode_hicolstdchar::col#1 mode_mcchar::col#2 mode_mcchar::col#3 mode_mcchar::col#1 mode_ecmchar::col#2 mode_ecmchar::col#3 mode_ecmchar::col#1 mode_stdchar::col#2 mode_stdchar::col#3 mode_stdchar::col#1 print_str_lines::str#3 print_str_lines::str#2 print_str_lines::str#0 ] ] with [ zp ZP_WORD:116 [ print_cls::sc#2 print_cls::sc#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 ] ] with [ zp ZP_BYTE:15 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 ] ] with [ zp ZP_BYTE:19 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 ] ] with [ zp ZP_BYTE:30 [ mode_sixsfred::cy#4 mode_sixsfred::cy#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 mode_sixsfred::cy#4 mode_sixsfred::cy#1 ] ] with [ zp ZP_BYTE:34 [ mode_sixsfred::ay#4 mode_sixsfred::ay#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 mode_sixsfred::cy#4 mode_sixsfred::cy#1 mode_sixsfred::ay#4 mode_sixsfred::ay#1 ] ] with [ zp ZP_BYTE:38 [ mode_sixsfred::by#4 mode_sixsfred::by#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 mode_sixsfred::cy#4 mode_sixsfred::cy#1 mode_sixsfred::ay#4 mode_sixsfred::ay#1 mode_sixsfred::by#4 mode_sixsfred::by#1 ] ] with [ zp ZP_BYTE:43 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cy#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 mode_sixsfred::cy#4 mode_sixsfred::cy#1 mode_sixsfred::ay#4 mode_sixsfred::ay#1 mode_sixsfred::by#4 mode_sixsfred::by#1 mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cy#1 ] ] with [ zp ZP_BYTE:47 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ay#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 mode_sixsfred::cy#4 mode_sixsfred::cy#1 mode_sixsfred::ay#4 mode_sixsfred::ay#1 mode_sixsfred::by#4 mode_sixsfred::by#1 mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cy#1 mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ay#1 ] ] with [ zp ZP_BYTE:51 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::by#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 mode_sixsfred::cy#4 mode_sixsfred::cy#1 mode_sixsfred::ay#4 mode_sixsfred::ay#1 mode_sixsfred::by#4 mode_sixsfred::by#1 mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cy#1 mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ay#1 mode_twoplanebitmap::by#4 mode_twoplanebitmap::by#1 ] ] with [ zp ZP_BYTE:56 [ mode_sixsfred2::cy#4 mode_sixsfred2::cy#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 mode_sixsfred::cy#4 mode_sixsfred::cy#1 mode_sixsfred::ay#4 mode_sixsfred::ay#1 mode_sixsfred::by#4 mode_sixsfred::by#1 mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cy#1 mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ay#1 mode_twoplanebitmap::by#4 mode_twoplanebitmap::by#1 mode_sixsfred2::cy#4 mode_sixsfred2::cy#1 ] ] with [ zp ZP_BYTE:60 [ mode_sixsfred2::ay#4 mode_sixsfred2::ay#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 mode_sixsfred::cy#4 mode_sixsfred::cy#1 mode_sixsfred::ay#4 mode_sixsfred::ay#1 mode_sixsfred::by#4 mode_sixsfred::by#1 mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cy#1 mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ay#1 mode_twoplanebitmap::by#4 mode_twoplanebitmap::by#1 mode_sixsfred2::cy#4 mode_sixsfred2::cy#1 mode_sixsfred2::ay#4 mode_sixsfred2::ay#1 ] ] with [ zp ZP_BYTE:64 [ mode_sixsfred2::by#4 mode_sixsfred2::by#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 mode_sixsfred::cy#4 mode_sixsfred::cy#1 mode_sixsfred::ay#4 mode_sixsfred::ay#1 mode_sixsfred::by#4 mode_sixsfred::by#1 mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cy#1 mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ay#1 mode_twoplanebitmap::by#4 mode_twoplanebitmap::by#1 mode_sixsfred2::cy#4 mode_sixsfred2::cy#1 mode_sixsfred2::ay#4 mode_sixsfred2::ay#1 mode_sixsfred2::by#4 mode_sixsfred2::by#1 ] ] with [ zp ZP_BYTE:69 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cy#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 mode_sixsfred::cy#4 mode_sixsfred::cy#1 mode_sixsfred::ay#4 mode_sixsfred::ay#1 mode_sixsfred::by#4 mode_sixsfred::by#1 mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cy#1 mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ay#1 mode_twoplanebitmap::by#4 mode_twoplanebitmap::by#1 mode_sixsfred2::cy#4 mode_sixsfred2::cy#1 mode_sixsfred2::ay#4 mode_sixsfred2::ay#1 mode_sixsfred2::by#4 mode_sixsfred2::by#1 mode_hicolmcchar::cy#4 mode_hicolmcchar::cy#1 ] ] with [ zp ZP_BYTE:76 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cy#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 mode_sixsfred::cy#4 mode_sixsfred::cy#1 mode_sixsfred::ay#4 mode_sixsfred::ay#1 mode_sixsfred::by#4 mode_sixsfred::by#1 mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cy#1 mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ay#1 mode_twoplanebitmap::by#4 mode_twoplanebitmap::by#1 mode_sixsfred2::cy#4 mode_sixsfred2::cy#1 mode_sixsfred2::ay#4 mode_sixsfred2::ay#1 mode_sixsfred2::by#4 mode_sixsfred2::by#1 mode_hicolmcchar::cy#4 mode_hicolmcchar::cy#1 mode_hicolecmchar::cy#4 mode_hicolecmchar::cy#1 ] ] with [ zp ZP_BYTE:83 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cy#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 mode_sixsfred::cy#4 mode_sixsfred::cy#1 mode_sixsfred::ay#4 mode_sixsfred::ay#1 mode_sixsfred::by#4 mode_sixsfred::by#1 mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cy#1 mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ay#1 mode_twoplanebitmap::by#4 mode_twoplanebitmap::by#1 mode_sixsfred2::cy#4 mode_sixsfred2::cy#1 mode_sixsfred2::ay#4 mode_sixsfred2::ay#1 mode_sixsfred2::by#4 mode_sixsfred2::by#1 mode_hicolmcchar::cy#4 mode_hicolmcchar::cy#1 mode_hicolecmchar::cy#4 mode_hicolecmchar::cy#1 mode_hicolstdchar::cy#4 mode_hicolstdchar::cy#1 ] ] with [ zp ZP_BYTE:90 [ mode_mcchar::cy#4 mode_mcchar::cy#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 mode_sixsfred::cy#4 mode_sixsfred::cy#1 mode_sixsfred::ay#4 mode_sixsfred::ay#1 mode_sixsfred::by#4 mode_sixsfred::by#1 mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cy#1 mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ay#1 mode_twoplanebitmap::by#4 mode_twoplanebitmap::by#1 mode_sixsfred2::cy#4 mode_sixsfred2::cy#1 mode_sixsfred2::ay#4 mode_sixsfred2::ay#1 mode_sixsfred2::by#4 mode_sixsfred2::by#1 mode_hicolmcchar::cy#4 mode_hicolmcchar::cy#1 mode_hicolecmchar::cy#4 mode_hicolecmchar::cy#1 mode_hicolstdchar::cy#4 mode_hicolstdchar::cy#1 mode_mcchar::cy#4 mode_mcchar::cy#1 ] ] with [ zp ZP_BYTE:97 [ mode_ecmchar::cy#4 mode_ecmchar::cy#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 mode_sixsfred::cy#4 mode_sixsfred::cy#1 mode_sixsfred::ay#4 mode_sixsfred::ay#1 mode_sixsfred::by#4 mode_sixsfred::by#1 mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cy#1 mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ay#1 mode_twoplanebitmap::by#4 mode_twoplanebitmap::by#1 mode_sixsfred2::cy#4 mode_sixsfred2::cy#1 mode_sixsfred2::ay#4 mode_sixsfred2::ay#1 mode_sixsfred2::by#4 mode_sixsfred2::by#1 mode_hicolmcchar::cy#4 mode_hicolmcchar::cy#1 mode_hicolecmchar::cy#4 mode_hicolecmchar::cy#1 mode_hicolstdchar::cy#4 mode_hicolstdchar::cy#1 mode_mcchar::cy#4 mode_mcchar::cy#1 mode_ecmchar::cy#4 mode_ecmchar::cy#1 ] ] with [ zp ZP_BYTE:104 [ mode_stdchar::cy#4 mode_stdchar::cy#1 ] ]
Coalescing zero page register [ zp ZP_WORD:10 [ mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::gfxb#5 mode_8bppchunkybmm::gfxb#1 ] ] with [ zp ZP_WORD:24 [ mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::gfxb#7 mode_8bpppixelcell::gfxb#1 ] ]
Coalescing zero page register [ zp ZP_WORD:10 [ mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::gfxb#5 mode_8bppchunkybmm::gfxb#1 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::gfxb#7 mode_8bpppixelcell::gfxb#1 ] ] with [ zp ZP_WORD:73 [ mode_hicolmcchar::ch#2 mode_hicolmcchar::ch#3 mode_hicolmcchar::ch#1 ] ]
Coalescing zero page register [ zp ZP_WORD:10 [ mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::gfxb#5 mode_8bppchunkybmm::gfxb#1 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::gfxb#7 mode_8bpppixelcell::gfxb#1 mode_hicolmcchar::ch#2 mode_hicolmcchar::ch#3 mode_hicolmcchar::ch#1 ] ] with [ zp ZP_WORD:80 [ mode_hicolecmchar::ch#2 mode_hicolecmchar::ch#3 mode_hicolecmchar::ch#1 ] ]
Coalescing zero page register [ zp ZP_WORD:10 [ mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::gfxb#5 mode_8bppchunkybmm::gfxb#1 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::gfxb#7 mode_8bpppixelcell::gfxb#1 mode_hicolmcchar::ch#2 mode_hicolmcchar::ch#3 mode_hicolmcchar::ch#1 mode_hicolecmchar::ch#2 mode_hicolecmchar::ch#3 mode_hicolecmchar::ch#1 ] ] with [ zp ZP_WORD:87 [ mode_hicolstdchar::ch#2 mode_hicolstdchar::ch#3 mode_hicolstdchar::ch#1 ] ]
Coalescing zero page register [ zp ZP_WORD:10 [ mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::gfxb#5 mode_8bppchunkybmm::gfxb#1 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::gfxb#7 mode_8bpppixelcell::gfxb#1 mode_hicolmcchar::ch#2 mode_hicolmcchar::ch#3 mode_hicolmcchar::ch#1 mode_hicolecmchar::ch#2 mode_hicolecmchar::ch#3 mode_hicolecmchar::ch#1 mode_hicolstdchar::ch#2 mode_hicolstdchar::ch#3 mode_hicolstdchar::ch#1 ] ] with [ zp ZP_WORD:94 [ mode_mcchar::ch#2 mode_mcchar::ch#3 mode_mcchar::ch#1 ] ]
Coalescing zero page register [ zp ZP_WORD:10 [ mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::gfxb#5 mode_8bppchunkybmm::gfxb#1 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::gfxb#7 mode_8bpppixelcell::gfxb#1 mode_hicolmcchar::ch#2 mode_hicolmcchar::ch#3 mode_hicolmcchar::ch#1 mode_hicolecmchar::ch#2 mode_hicolecmchar::ch#3 mode_hicolecmchar::ch#1 mode_hicolstdchar::ch#2 mode_hicolstdchar::ch#3 mode_hicolstdchar::ch#1 mode_mcchar::ch#2 mode_mcchar::ch#3 mode_mcchar::ch#1 ] ] with [ zp ZP_WORD:101 [ mode_ecmchar::ch#2 mode_ecmchar::ch#3 mode_ecmchar::ch#1 ] ]
Coalescing zero page register [ zp ZP_WORD:10 [ mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::gfxb#5 mode_8bppchunkybmm::gfxb#1 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::gfxb#7 mode_8bpppixelcell::gfxb#1 mode_hicolmcchar::ch#2 mode_hicolmcchar::ch#3 mode_hicolmcchar::ch#1 mode_hicolecmchar::ch#2 mode_hicolecmchar::ch#3 mode_hicolecmchar::ch#1 mode_hicolstdchar::ch#2 mode_hicolstdchar::ch#3 mode_hicolstdchar::ch#1 mode_mcchar::ch#2 mode_mcchar::ch#3 mode_mcchar::ch#1 mode_ecmchar::ch#2 mode_ecmchar::ch#3 mode_ecmchar::ch#1 ] ] with [ zp ZP_WORD:108 [ mode_stdchar::ch#2 mode_stdchar::ch#3 mode_stdchar::ch#1 ] ]
Coalescing zero page register [ zp ZP_WORD:10 [ mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::gfxb#5 mode_8bppchunkybmm::gfxb#1 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::gfxb#7 mode_8bpppixelcell::gfxb#1 mode_hicolmcchar::ch#2 mode_hicolmcchar::ch#3 mode_hicolmcchar::ch#1 mode_hicolecmchar::ch#2 mode_hicolecmchar::ch#3 mode_hicolecmchar::ch#1 mode_hicolstdchar::ch#2 mode_hicolstdchar::ch#3 mode_hicolstdchar::ch#1 mode_mcchar::ch#2 mode_mcchar::ch#3 mode_mcchar::ch#1 mode_ecmchar::ch#2 mode_ecmchar::ch#3 mode_ecmchar::ch#1 mode_stdchar::ch#2 mode_stdchar::ch#3 mode_stdchar::ch#1 ] ] with [ zp ZP_WORD:112 [ print_char_cursor#17 print_char_cursor#19 print_char_cursor#95 print_char_cursor#32 print_char_cursor#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:22 [ mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cr#1 ] ] with [ zp ZP_BYTE:153 [ mode_8bpppixelcell::$12 ] ]
Coalescing zero page register [ zp ZP_BYTE:22 [ mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cr#1 mode_8bpppixelcell::$12 ] ] with [ zp ZP_BYTE:166 [ mode_twoplanebitmap::$15 ] ]
Coalescing zero page register [ zp ZP_BYTE:22 [ mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cr#1 mode_8bpppixelcell::$12 mode_twoplanebitmap::$15 ] ] with [ zp ZP_BYTE:173 [ mode_sixsfred2::$15 ] ]
Coalescing zero page register [ zp ZP_BYTE:22 [ mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cr#1 mode_8bpppixelcell::$12 mode_twoplanebitmap::$15 mode_sixsfred2::$15 ] ] with [ zp ZP_BYTE:181 [ mode_hicolmcchar::$26 ] ]
Coalescing zero page register [ zp ZP_BYTE:22 [ mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cr#1 mode_8bpppixelcell::$12 mode_twoplanebitmap::$15 mode_sixsfred2::$15 mode_hicolmcchar::$26 ] ] with [ zp ZP_BYTE:187 [ mode_hicolecmchar::$26 ] ]
Coalescing zero page register [ zp ZP_BYTE:22 [ mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cr#1 mode_8bpppixelcell::$12 mode_twoplanebitmap::$15 mode_sixsfred2::$15 mode_hicolmcchar::$26 mode_hicolecmchar::$26 ] ] with [ zp ZP_BYTE:193 [ mode_hicolstdchar::$25 ] ]
Coalescing zero page register [ zp ZP_BYTE:22 [ mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cr#1 mode_8bpppixelcell::$12 mode_twoplanebitmap::$15 mode_sixsfred2::$15 mode_hicolmcchar::$26 mode_hicolecmchar::$26 mode_hicolstdchar::$25 ] ] with [ zp ZP_BYTE:201 [ mode_mcchar::$28 ] ]
Coalescing zero page register [ zp ZP_BYTE:22 [ mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cr#1 mode_8bpppixelcell::$12 mode_twoplanebitmap::$15 mode_sixsfred2::$15 mode_hicolmcchar::$26 mode_hicolecmchar::$26 mode_hicolstdchar::$25 mode_mcchar::$28 ] ] with [ zp ZP_BYTE:209 [ mode_ecmchar::$28 ] ]
Coalescing zero page register [ zp ZP_BYTE:22 [ mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cr#1 mode_8bpppixelcell::$12 mode_twoplanebitmap::$15 mode_sixsfred2::$15 mode_hicolmcchar::$26 mode_hicolecmchar::$26 mode_hicolstdchar::$25 mode_mcchar::$28 mode_ecmchar::$28 ] ] with [ zp ZP_BYTE:217 [ mode_stdchar::$27 ] ]
Coalescing zero page register [ zp ZP_WORD:114 [ print_line_cursor#18 print_line_cursor#17 print_line_cursor#19 ] ] with [ zp ZP_WORD:140 [ mode_8bppchunkybmm::$20 ] ]
Allocated (was zp ZP_WORD:3) zp ZP_WORD:2 [ menu::c#2 menu::c#1 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 mode_sixsfred::gfxa#2 mode_sixsfred::gfxa#3 mode_sixsfred::gfxa#1 mode_sixsfred::gfxb#2 mode_sixsfred::gfxb#3 mode_sixsfred::gfxb#1 mode_twoplanebitmap::col#2 mode_twoplanebitmap::col#3 mode_twoplanebitmap::col#1 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::gfxa#6 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::gfxa#2 mode_twoplanebitmap::gfxa#1 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::gfxb#1 mode_sixsfred2::col#2 mode_sixsfred2::col#3 mode_sixsfred2::col#1 mode_sixsfred2::gfxa#2 mode_sixsfred2::gfxa#3 mode_sixsfred2::gfxa#1 mode_sixsfred2::gfxb#2 mode_sixsfred2::gfxb#3 mode_sixsfred2::gfxb#1 mode_hicolmcchar::col#2 mode_hicolmcchar::col#3 mode_hicolmcchar::col#1 mode_hicolecmchar::col#2 mode_hicolecmchar::col#3 mode_hicolecmchar::col#1 mode_hicolstdchar::col#2 mode_hicolstdchar::col#3 mode_hicolstdchar::col#1 mode_mcchar::col#2 mode_mcchar::col#3 mode_mcchar::col#1 mode_ecmchar::col#2 mode_ecmchar::col#3 mode_ecmchar::col#1 mode_stdchar::col#2 mode_stdchar::col#3 mode_stdchar::col#1 print_str_lines::str#3 print_str_lines::str#2 print_str_lines::str#0 print_cls::sc#2 print_cls::sc#1 ]
Allocated (was zp ZP_BYTE:6) zp ZP_BYTE:4 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 mode_sixsfred::cy#4 mode_sixsfred::cy#1 mode_sixsfred::ay#4 mode_sixsfred::ay#1 mode_sixsfred::by#4 mode_sixsfred::by#1 mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cy#1 mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ay#1 mode_twoplanebitmap::by#4 mode_twoplanebitmap::by#1 mode_sixsfred2::cy#4 mode_sixsfred2::cy#1 mode_sixsfred2::ay#4 mode_sixsfred2::ay#1 mode_sixsfred2::by#4 mode_sixsfred2::by#1 mode_hicolmcchar::cy#4 mode_hicolmcchar::cy#1 mode_hicolecmchar::cy#4 mode_hicolecmchar::cy#1 mode_hicolstdchar::cy#4 mode_hicolstdchar::cy#1 mode_mcchar::cy#4 mode_mcchar::cy#1 mode_ecmchar::cy#4 mode_ecmchar::cy#1 mode_stdchar::cy#4 mode_stdchar::cy#1 ]
Allocated (was zp ZP_WORD:10) zp ZP_WORD:5 [ mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::gfxb#5 mode_8bppchunkybmm::gfxb#1 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::gfxb#7 mode_8bpppixelcell::gfxb#1 mode_hicolmcchar::ch#2 mode_hicolmcchar::ch#3 mode_hicolmcchar::ch#1 mode_hicolecmchar::ch#2 mode_hicolecmchar::ch#3 mode_hicolecmchar::ch#1 mode_hicolstdchar::ch#2 mode_hicolstdchar::ch#3 mode_hicolstdchar::ch#1 mode_mcchar::ch#2 mode_mcchar::ch#3 mode_mcchar::ch#1 mode_ecmchar::ch#2 mode_ecmchar::ch#3 mode_ecmchar::ch#1 mode_stdchar::ch#2 mode_stdchar::ch#3 mode_stdchar::ch#1 print_char_cursor#17 print_char_cursor#19 print_char_cursor#95 print_char_cursor#32 print_char_cursor#1 ]
Allocated (was zp ZP_BYTE:22) zp ZP_BYTE:7 [ mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cr#1 mode_8bpppixelcell::$12 mode_twoplanebitmap::$15 mode_sixsfred2::$15 mode_hicolmcchar::$26 mode_hicolecmchar::$26 mode_hicolstdchar::$25 mode_mcchar::$28 mode_ecmchar::$28 mode_stdchar::$27 ]
Allocated (was zp ZP_BYTE:23) zp ZP_BYTE:8 [ mode_8bpppixelcell::bits#2 mode_8bpppixelcell::bits#0 mode_8bpppixelcell::bits#1 ]
Allocated (was zp ZP_BYTE:26) zp ZP_BYTE:9 [ mode_8bpppixelcell::col#2 mode_8bpppixelcell::col#5 mode_8bpppixelcell::col#7 mode_8bpppixelcell::col#1 ]
Allocated (was zp ZP_WORD:114) zp ZP_WORD:10 [ print_line_cursor#18 print_line_cursor#17 print_line_cursor#19 mode_8bppchunkybmm::$20 ]

ASSEMBLER BEFORE OPTIMIZATION
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .label PROCPORT = 1
  .label BORDERCOL = $d020
  .label BGCOL = $d021
  .label BGCOL1 = $d021
  .label BGCOL2 = $d022
  .label BGCOL3 = $d023
  .label BGCOL4 = $d024
  .label VIC_CONTROL = $d011
  .const VIC_ECM = $40
  .const VIC_BMM = $20
  .const VIC_DEN = $10
  .const VIC_RSEL = 8
  .label VIC_CONTROL2 = $d016
  .const VIC_MCM = $10
  .const VIC_CSEL = 8
  .label VIC_MEMORY = $d018
  .label COLS = $d800
  .label CIA1_PORT_A = $dc00
  .label CIA1_PORT_B = $dc01
  .label CIA2_PORT_A = $dd00
  .label CIA2_PORT_A_DDR = $dd02
  .const BLACK = 0
  .const GREEN = 5
  .const BLUE = 6
  .const LIGHT_GREEN = $d
  .label DTV_FEATURE = $d03f
  .const DTV_FEATURE_ENABLE = 1
  .label DTV_CONTROL = $d03c
  .const DTV_CONTROL_LINEAR_ADDRESSING_ON = 1
  .const DTV_CONTROL_HIGHCOLOR_ON = 4
  .const DTV_CONTROL_COLORRAM_OFF = $10
  .const DTV_CONTROL_CHUNKY_ON = $40
  .label DTV_PALETTE = $d200
  .label DTV_PLANEA_START_LO = $d03a
  .label DTV_PLANEA_START_MI = $d03b
  .label DTV_PLANEA_START_HI = $d045
  .label DTV_PLANEA_STEP = $d046
  .label DTV_PLANEA_MODULO_LO = $d038
  .label DTV_PLANEA_MODULO_HI = $d039
  .label DTV_PLANEB_START_LO = $d049
  .label DTV_PLANEB_START_MI = $d04a
  .label DTV_PLANEB_START_HI = $d04b
  .label DTV_PLANEB_STEP = $d04c
  .label DTV_PLANEB_MODULO_LO = $d047
  .label DTV_PLANEB_MODULO_HI = $d048
  .label DTV_COLOR_BANK_LO = $d036
  .label DTV_COLOR_BANK_HI = $d037
  .const DTV_COLOR_BANK_DEFAULT = $1d800
  .label DTV_GRAPHICS_VIC_BANK = $d03d
  .const KEY_3 = 8
  .const KEY_A = $a
  .const KEY_E = $e
  .const KEY_D = $12
  .const KEY_6 = $13
  .const KEY_C = $14
  .const KEY_7 = $18
  .const KEY_8 = $1b
  .const KEY_B = $1c
  .const KEY_1 = $38
  .const KEY_2 = $3b
  .const KEY_SPACE = $3c
  .label print_char_cursor = 5
  .label print_line_cursor = $a
//SEG2 @begin
bbegin:
//SEG3 [1] phi from @begin to @32 [phi:@begin->@32]
b32_from_bbegin:
  jmp b32
//SEG4 @32
b32:
//SEG5 [2] call main param-assignment [ ] ( )
  jsr main
//SEG6 [3] phi from @32 to @end [phi:@32->@end]
bend_from_b32:
  jmp bend
//SEG7 @end
bend:
//SEG8 main
main: {
  //SEG9 asm { sei  }
    sei
  //SEG10 [5] *((const byte*) DTV_FEATURE#0) ← (const byte) DTV_FEATURE_ENABLE#0 [ ] ( main:2 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_FEATURE_ENABLE
    sta DTV_FEATURE
    jmp b1
  //SEG11 main::@1
  b1:
  //SEG12 [6] if(true) goto main::@2 [ ] ( main:2 [ ] ) -- true_then_la1 
    jmp b2_from_b1
    jmp breturn
  //SEG13 main::@return
  breturn:
  //SEG14 [7] return  [ ] ( main:2 [ ] )
    rts
  //SEG15 [8] phi from main::@1 to main::@2 [phi:main::@1->main::@2]
  b2_from_b1:
    jmp b2
  //SEG16 main::@2
  b2:
  //SEG17 [9] call menu param-assignment [ ] ( main:2 [ ] )
    jsr menu
    jmp b1
}
//SEG18 menu
menu: {
    .label SCREEN = $8000
    .label CHARSET = $9800
    .label c = 2
  //SEG19 [10] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) menu::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #($ffffffff&CHARSET)/$10000
    sta DTV_GRAPHICS_VIC_BANK
  //SEG20 [11] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const dword) DTV_COLOR_BANK_DEFAULT#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_COLOR_BANK_DEFAULT/$400
    sta DTV_COLOR_BANK_LO
  //SEG21 [12] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const dword) DTV_COLOR_BANK_DEFAULT#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_COLOR_BANK_HI
  //SEG22 [13] *((const byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_CONTROL
  //SEG23 [14] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3
    sta CIA2_PORT_A_DDR
  //SEG24 [15] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) menu::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3^CHARSET/$4000
    sta CIA2_PORT_A
  //SEG25 [16] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG26 [17] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_CSEL
    sta VIC_CONTROL2
  //SEG27 [18] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) menu::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) menu::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #(SCREEN&$3fff)/$40|(CHARSET&$3fff)/$400
    sta VIC_MEMORY
  //SEG28 [19] phi from menu to menu::@1 [phi:menu->menu::@1]
  b1_from_menu:
  //SEG29 [19] phi (byte) menu::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:menu->menu::@1#0] -- vbuxx=vbuc1 
    ldx #0
    jmp b1
  //SEG30 [19] phi from menu::@1 to menu::@1 [phi:menu::@1->menu::@1]
  b1_from_b1:
  //SEG31 [19] phi (byte) menu::i#2 = (byte) menu::i#1 [phi:menu::@1->menu::@1#0] -- register_copy 
    jmp b1
  //SEG32 menu::@1
  b1:
  //SEG33 [20] *((const byte*) DTV_PALETTE#0 + (byte) menu::i#2) ← *((const byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) menu::i#2) [ menu::i#2 ] ( main:2::menu:9 [ menu::i#2 ] ) -- pbuc1_derefidx_vbuxx=pbuc2_derefidx_vbuxx 
    lda DTV_PALETTE_DEFAULT,x
    sta DTV_PALETTE,x
  //SEG34 [21] (byte) menu::i#1 ← ++ (byte) menu::i#2 [ menu::i#1 ] ( main:2::menu:9 [ menu::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG35 [22] if((byte) menu::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto menu::@1 [ menu::i#1 ] ( main:2::menu:9 [ menu::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne b1_from_b1
  //SEG36 [23] phi from menu::@1 to menu::@2 [phi:menu::@1->menu::@2]
  b2_from_b1:
  //SEG37 [23] phi (byte*) menu::c#2 = (const byte*) COLS#0 [phi:menu::@1->menu::@2#0] -- pbuz1=pbuc1 
    lda #<COLS
    sta c
    lda #>COLS
    sta c+1
    jmp b2
  //SEG38 [23] phi from menu::@2 to menu::@2 [phi:menu::@2->menu::@2]
  b2_from_b2:
  //SEG39 [23] phi (byte*) menu::c#2 = (byte*) menu::c#1 [phi:menu::@2->menu::@2#0] -- register_copy 
    jmp b2
  //SEG40 menu::@2
  b2:
  //SEG41 [24] *((byte*) menu::c#2) ← (const byte) LIGHT_GREEN#0 [ menu::c#2 ] ( main:2::menu:9 [ menu::c#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #LIGHT_GREEN
    ldy #0
    sta (c),y
  //SEG42 [25] (byte*) menu::c#1 ← ++ (byte*) menu::c#2 [ menu::c#1 ] ( main:2::menu:9 [ menu::c#1 ] ) -- pbuz1=_inc_pbuz1 
    inc c
    bne !+
    inc c+1
  !:
  //SEG43 [26] if((byte*) menu::c#1!=(const byte*) COLS#0+(word/signed word/dword/signed dword) 1000) goto menu::@2 [ menu::c#1 ] ( main:2::menu:9 [ menu::c#1 ] ) -- pbuz1_neq_pbuc1_then_la1 
    lda c+1
    cmp #>COLS+$3e8
    bne b2_from_b2
    lda c
    cmp #<COLS+$3e8
    bne b2_from_b2
    jmp b18
  //SEG44 menu::@18
  b18:
  //SEG45 [27] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BGCOL
  //SEG46 [28] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG47 [29] call print_set_screen param-assignment [ ] ( main:2::menu:9 [ ] )
  //SEG48 [667] phi from menu::@18 to print_set_screen [phi:menu::@18->print_set_screen]
  print_set_screen_from_b18:
    jsr print_set_screen
  //SEG49 [30] phi from menu::@18 to menu::@44 [phi:menu::@18->menu::@44]
  b44_from_b18:
    jmp b44
  //SEG50 menu::@44
  b44:
  //SEG51 [31] call print_cls param-assignment [ ] ( main:2::menu:9 [ ] )
  //SEG52 [661] phi from menu::@44 to print_cls [phi:menu::@44->print_cls]
  print_cls_from_b44:
    jsr print_cls
  //SEG53 [32] phi from menu::@44 to menu::@45 [phi:menu::@44->menu::@45]
  b45_from_b44:
    jmp b45
  //SEG54 menu::@45
  b45:
  //SEG55 [33] call print_str_lines param-assignment [ ] ( main:2::menu:9 [ ] )
  //SEG56 [641] phi from menu::@45 to print_str_lines [phi:menu::@45->print_str_lines]
  print_str_lines_from_b45:
    jsr print_str_lines
    jmp b3
  //SEG57 menu::@3
  b3:
  //SEG58 [34] if(true) goto menu::@4 [ ] ( main:2::menu:9 [ ] ) -- true_then_la1 
    jmp b4_from_b3
    jmp breturn
  //SEG59 menu::@return
  breturn:
  //SEG60 [35] return  [ ] ( main:2::menu:9 [ ] )
    rts
  //SEG61 [36] phi from menu::@3 to menu::@4 [phi:menu::@3->menu::@4]
  b4_from_b3:
    jmp b4
  //SEG62 menu::@4
  b4:
  //SEG63 [37] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG64 [153] phi from menu::@4 to keyboard_key_pressed [phi:menu::@4->keyboard_key_pressed]
  keyboard_key_pressed_from_b4:
  //SEG65 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_1#0 [phi:menu::@4->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_1
    jsr keyboard_key_pressed
  //SEG66 [38] (byte) keyboard_key_pressed::return#2 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#2 ] ( main:2::menu:9 [ keyboard_key_pressed::return#2 ] )
    // (byte) keyboard_key_pressed::return#2 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
    jmp b47
  //SEG67 menu::@47
  b47:
  //SEG68 [39] (byte~) menu::$29 ← (byte) keyboard_key_pressed::return#2 [ menu::$29 ] ( main:2::menu:9 [ menu::$29 ] )
    // (byte~) menu::$29 = (byte) keyboard_key_pressed::return#2  // register copy reg byte a
  //SEG69 [40] if((byte~) menu::$29==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@6 [ ] ( main:2::menu:9 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b6_from_b47
  //SEG70 [41] phi from menu::@47 to menu::@21 [phi:menu::@47->menu::@21]
  b21_from_b47:
    jmp b21
  //SEG71 menu::@21
  b21:
  //SEG72 [42] call mode_stdchar param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_stdchar
    jmp breturn
  //SEG73 [43] phi from menu::@47 to menu::@6 [phi:menu::@47->menu::@6]
  b6_from_b47:
    jmp b6
  //SEG74 menu::@6
  b6:
  //SEG75 [44] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG76 [153] phi from menu::@6 to keyboard_key_pressed [phi:menu::@6->keyboard_key_pressed]
  keyboard_key_pressed_from_b6:
  //SEG77 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_2#0 [phi:menu::@6->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_2
    jsr keyboard_key_pressed
  //SEG78 [45] (byte) keyboard_key_pressed::return#26 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#26 ] ( main:2::menu:9 [ keyboard_key_pressed::return#26 ] )
    // (byte) keyboard_key_pressed::return#26 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
    jmp b48
  //SEG79 menu::@48
  b48:
  //SEG80 [46] (byte~) menu::$33 ← (byte) keyboard_key_pressed::return#26 [ menu::$33 ] ( main:2::menu:9 [ menu::$33 ] )
    // (byte~) menu::$33 = (byte) keyboard_key_pressed::return#26  // register copy reg byte a
  //SEG81 [47] if((byte~) menu::$33==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@7 [ ] ( main:2::menu:9 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b7_from_b48
  //SEG82 [48] phi from menu::@48 to menu::@23 [phi:menu::@48->menu::@23]
  b23_from_b48:
    jmp b23
  //SEG83 menu::@23
  b23:
  //SEG84 [49] call mode_ecmchar param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_ecmchar
    jmp breturn
  //SEG85 [50] phi from menu::@48 to menu::@7 [phi:menu::@48->menu::@7]
  b7_from_b48:
    jmp b7
  //SEG86 menu::@7
  b7:
  //SEG87 [51] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG88 [153] phi from menu::@7 to keyboard_key_pressed [phi:menu::@7->keyboard_key_pressed]
  keyboard_key_pressed_from_b7:
  //SEG89 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_3#0 [phi:menu::@7->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_3
    jsr keyboard_key_pressed
  //SEG90 [52] (byte) keyboard_key_pressed::return#27 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#27 ] ( main:2::menu:9 [ keyboard_key_pressed::return#27 ] )
    // (byte) keyboard_key_pressed::return#27 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
    jmp b50
  //SEG91 menu::@50
  b50:
  //SEG92 [53] (byte~) menu::$37 ← (byte) keyboard_key_pressed::return#27 [ menu::$37 ] ( main:2::menu:9 [ menu::$37 ] )
    // (byte~) menu::$37 = (byte) keyboard_key_pressed::return#27  // register copy reg byte a
  //SEG93 [54] if((byte~) menu::$37==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@8 [ ] ( main:2::menu:9 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b8_from_b50
  //SEG94 [55] phi from menu::@50 to menu::@25 [phi:menu::@50->menu::@25]
  b25_from_b50:
    jmp b25
  //SEG95 menu::@25
  b25:
  //SEG96 [56] call mode_mcchar param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_mcchar
    jmp breturn
  //SEG97 [57] phi from menu::@50 to menu::@8 [phi:menu::@50->menu::@8]
  b8_from_b50:
    jmp b8
  //SEG98 menu::@8
  b8:
  //SEG99 [58] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG100 [153] phi from menu::@8 to keyboard_key_pressed [phi:menu::@8->keyboard_key_pressed]
  keyboard_key_pressed_from_b8:
  //SEG101 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_6#0 [phi:menu::@8->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_6
    jsr keyboard_key_pressed
  //SEG102 [59] (byte) keyboard_key_pressed::return#28 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#28 ] ( main:2::menu:9 [ keyboard_key_pressed::return#28 ] )
    // (byte) keyboard_key_pressed::return#28 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
    jmp b52
  //SEG103 menu::@52
  b52:
  //SEG104 [60] (byte~) menu::$41 ← (byte) keyboard_key_pressed::return#28 [ menu::$41 ] ( main:2::menu:9 [ menu::$41 ] )
    // (byte~) menu::$41 = (byte) keyboard_key_pressed::return#28  // register copy reg byte a
  //SEG105 [61] if((byte~) menu::$41==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@9 [ ] ( main:2::menu:9 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b9_from_b52
  //SEG106 [62] phi from menu::@52 to menu::@27 [phi:menu::@52->menu::@27]
  b27_from_b52:
    jmp b27
  //SEG107 menu::@27
  b27:
  //SEG108 [63] call mode_hicolstdchar param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_hicolstdchar
    jmp breturn
  //SEG109 [64] phi from menu::@52 to menu::@9 [phi:menu::@52->menu::@9]
  b9_from_b52:
    jmp b9
  //SEG110 menu::@9
  b9:
  //SEG111 [65] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG112 [153] phi from menu::@9 to keyboard_key_pressed [phi:menu::@9->keyboard_key_pressed]
  keyboard_key_pressed_from_b9:
  //SEG113 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_7#0 [phi:menu::@9->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_7
    jsr keyboard_key_pressed
  //SEG114 [66] (byte) keyboard_key_pressed::return#29 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#29 ] ( main:2::menu:9 [ keyboard_key_pressed::return#29 ] )
    // (byte) keyboard_key_pressed::return#29 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
    jmp b54
  //SEG115 menu::@54
  b54:
  //SEG116 [67] (byte~) menu::$45 ← (byte) keyboard_key_pressed::return#29 [ menu::$45 ] ( main:2::menu:9 [ menu::$45 ] )
    // (byte~) menu::$45 = (byte) keyboard_key_pressed::return#29  // register copy reg byte a
  //SEG117 [68] if((byte~) menu::$45==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@10 [ ] ( main:2::menu:9 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b10_from_b54
  //SEG118 [69] phi from menu::@54 to menu::@29 [phi:menu::@54->menu::@29]
  b29_from_b54:
    jmp b29
  //SEG119 menu::@29
  b29:
  //SEG120 [70] call mode_hicolecmchar param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_hicolecmchar
    jmp breturn
  //SEG121 [71] phi from menu::@54 to menu::@10 [phi:menu::@54->menu::@10]
  b10_from_b54:
    jmp b10
  //SEG122 menu::@10
  b10:
  //SEG123 [72] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG124 [153] phi from menu::@10 to keyboard_key_pressed [phi:menu::@10->keyboard_key_pressed]
  keyboard_key_pressed_from_b10:
  //SEG125 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_8#0 [phi:menu::@10->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_8
    jsr keyboard_key_pressed
  //SEG126 [73] (byte) keyboard_key_pressed::return#30 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#30 ] ( main:2::menu:9 [ keyboard_key_pressed::return#30 ] )
    // (byte) keyboard_key_pressed::return#30 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
    jmp b56
  //SEG127 menu::@56
  b56:
  //SEG128 [74] (byte~) menu::$49 ← (byte) keyboard_key_pressed::return#30 [ menu::$49 ] ( main:2::menu:9 [ menu::$49 ] )
    // (byte~) menu::$49 = (byte) keyboard_key_pressed::return#30  // register copy reg byte a
  //SEG129 [75] if((byte~) menu::$49==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@11 [ ] ( main:2::menu:9 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b11_from_b56
  //SEG130 [76] phi from menu::@56 to menu::@31 [phi:menu::@56->menu::@31]
  b31_from_b56:
    jmp b31
  //SEG131 menu::@31
  b31:
  //SEG132 [77] call mode_hicolmcchar param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_hicolmcchar
    jmp breturn
  //SEG133 [78] phi from menu::@56 to menu::@11 [phi:menu::@56->menu::@11]
  b11_from_b56:
    jmp b11
  //SEG134 menu::@11
  b11:
  //SEG135 [79] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG136 [153] phi from menu::@11 to keyboard_key_pressed [phi:menu::@11->keyboard_key_pressed]
  keyboard_key_pressed_from_b11:
  //SEG137 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_A#0 [phi:menu::@11->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_A
    jsr keyboard_key_pressed
  //SEG138 [80] (byte) keyboard_key_pressed::return#31 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#31 ] ( main:2::menu:9 [ keyboard_key_pressed::return#31 ] )
    // (byte) keyboard_key_pressed::return#31 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
    jmp b58
  //SEG139 menu::@58
  b58:
  //SEG140 [81] (byte~) menu::$53 ← (byte) keyboard_key_pressed::return#31 [ menu::$53 ] ( main:2::menu:9 [ menu::$53 ] )
    // (byte~) menu::$53 = (byte) keyboard_key_pressed::return#31  // register copy reg byte a
  //SEG141 [82] if((byte~) menu::$53==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@12 [ ] ( main:2::menu:9 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b12_from_b58
  //SEG142 [83] phi from menu::@58 to menu::@33 [phi:menu::@58->menu::@33]
  b33_from_b58:
    jmp b33
  //SEG143 menu::@33
  b33:
  //SEG144 [84] call mode_sixsfred2 param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_sixsfred2
    jmp breturn
  //SEG145 [85] phi from menu::@58 to menu::@12 [phi:menu::@58->menu::@12]
  b12_from_b58:
    jmp b12
  //SEG146 menu::@12
  b12:
  //SEG147 [86] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG148 [153] phi from menu::@12 to keyboard_key_pressed [phi:menu::@12->keyboard_key_pressed]
  keyboard_key_pressed_from_b12:
  //SEG149 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_B#0 [phi:menu::@12->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_B
    jsr keyboard_key_pressed
  //SEG150 [87] (byte) keyboard_key_pressed::return#32 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#32 ] ( main:2::menu:9 [ keyboard_key_pressed::return#32 ] )
    // (byte) keyboard_key_pressed::return#32 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
    jmp b60
  //SEG151 menu::@60
  b60:
  //SEG152 [88] (byte~) menu::$57 ← (byte) keyboard_key_pressed::return#32 [ menu::$57 ] ( main:2::menu:9 [ menu::$57 ] )
    // (byte~) menu::$57 = (byte) keyboard_key_pressed::return#32  // register copy reg byte a
  //SEG153 [89] if((byte~) menu::$57==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@13 [ ] ( main:2::menu:9 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b13_from_b60
  //SEG154 [90] phi from menu::@60 to menu::@35 [phi:menu::@60->menu::@35]
  b35_from_b60:
    jmp b35
  //SEG155 menu::@35
  b35:
  //SEG156 [91] call mode_twoplanebitmap param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_twoplanebitmap
    jmp breturn
  //SEG157 [92] phi from menu::@60 to menu::@13 [phi:menu::@60->menu::@13]
  b13_from_b60:
    jmp b13
  //SEG158 menu::@13
  b13:
  //SEG159 [93] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG160 [153] phi from menu::@13 to keyboard_key_pressed [phi:menu::@13->keyboard_key_pressed]
  keyboard_key_pressed_from_b13:
  //SEG161 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_C#0 [phi:menu::@13->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_C
    jsr keyboard_key_pressed
  //SEG162 [94] (byte) keyboard_key_pressed::return#10 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#10 ] ( main:2::menu:9 [ keyboard_key_pressed::return#10 ] )
    // (byte) keyboard_key_pressed::return#10 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
    jmp b62
  //SEG163 menu::@62
  b62:
  //SEG164 [95] (byte~) menu::$61 ← (byte) keyboard_key_pressed::return#10 [ menu::$61 ] ( main:2::menu:9 [ menu::$61 ] )
    // (byte~) menu::$61 = (byte) keyboard_key_pressed::return#10  // register copy reg byte a
  //SEG165 [96] if((byte~) menu::$61==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@14 [ ] ( main:2::menu:9 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b14_from_b62
  //SEG166 [97] phi from menu::@62 to menu::@37 [phi:menu::@62->menu::@37]
  b37_from_b62:
    jmp b37
  //SEG167 menu::@37
  b37:
  //SEG168 [98] call mode_sixsfred param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_sixsfred
    jmp breturn
  //SEG169 [99] phi from menu::@62 to menu::@14 [phi:menu::@62->menu::@14]
  b14_from_b62:
    jmp b14
  //SEG170 menu::@14
  b14:
  //SEG171 [100] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG172 [153] phi from menu::@14 to keyboard_key_pressed [phi:menu::@14->keyboard_key_pressed]
  keyboard_key_pressed_from_b14:
  //SEG173 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_D#0 [phi:menu::@14->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_D
    jsr keyboard_key_pressed
  //SEG174 [101] (byte) keyboard_key_pressed::return#11 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#11 ] ( main:2::menu:9 [ keyboard_key_pressed::return#11 ] )
    // (byte) keyboard_key_pressed::return#11 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
    jmp b64
  //SEG175 menu::@64
  b64:
  //SEG176 [102] (byte~) menu::$65 ← (byte) keyboard_key_pressed::return#11 [ menu::$65 ] ( main:2::menu:9 [ menu::$65 ] )
    // (byte~) menu::$65 = (byte) keyboard_key_pressed::return#11  // register copy reg byte a
  //SEG177 [103] if((byte~) menu::$65==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@15 [ ] ( main:2::menu:9 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b15_from_b64
  //SEG178 [104] phi from menu::@64 to menu::@39 [phi:menu::@64->menu::@39]
  b39_from_b64:
    jmp b39
  //SEG179 menu::@39
  b39:
  //SEG180 [105] call mode_8bpppixelcell param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_8bpppixelcell
    jmp breturn
  //SEG181 [106] phi from menu::@64 to menu::@15 [phi:menu::@64->menu::@15]
  b15_from_b64:
    jmp b15
  //SEG182 menu::@15
  b15:
  //SEG183 [107] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG184 [153] phi from menu::@15 to keyboard_key_pressed [phi:menu::@15->keyboard_key_pressed]
  keyboard_key_pressed_from_b15:
  //SEG185 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_E#0 [phi:menu::@15->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_E
    jsr keyboard_key_pressed
  //SEG186 [108] (byte) keyboard_key_pressed::return#12 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#12 ] ( main:2::menu:9 [ keyboard_key_pressed::return#12 ] )
    // (byte) keyboard_key_pressed::return#12 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
    jmp b66
  //SEG187 menu::@66
  b66:
  //SEG188 [109] (byte~) menu::$69 ← (byte) keyboard_key_pressed::return#12 [ menu::$69 ] ( main:2::menu:9 [ menu::$69 ] )
    // (byte~) menu::$69 = (byte) keyboard_key_pressed::return#12  // register copy reg byte a
  //SEG189 [110] if((byte~) menu::$69==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@3 [ ] ( main:2::menu:9 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b3
  //SEG190 [111] phi from menu::@66 to menu::@41 [phi:menu::@66->menu::@41]
  b41_from_b66:
    jmp b41
  //SEG191 menu::@41
  b41:
  //SEG192 [112] call mode_8bppchunkybmm param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_8bppchunkybmm
    jmp breturn
}
//SEG193 mode_8bppchunkybmm
mode_8bppchunkybmm: {
    .const PLANEB = $20000
    .label _20 = $a
    .label gfxb = 5
    .label x = 2
    .label y = 4
  //SEG194 [113] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0|(const byte) DTV_CONTROL_CHUNKY_ON#0|(const byte) DTV_CONTROL_COLORRAM_OFF#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_CONTROL_HIGHCOLOR_ON|DTV_CONTROL_LINEAR_ADDRESSING_ON|DTV_CONTROL_CHUNKY_ON|DTV_CONTROL_COLORRAM_OFF
    sta DTV_CONTROL
  //SEG195 [114] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_ECM|VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG196 [115] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_MCM|VIC_CSEL
    sta VIC_CONTROL2
  //SEG197 [116] *((const byte*) DTV_PLANEB_START_LO#0) ← <<(const dword) mode_8bppchunkybmm::PLANEB#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #PLANEB&$ffff
    sta DTV_PLANEB_START_LO
  //SEG198 [117] *((const byte*) DTV_PLANEB_START_MI#0) ← ><(const dword) mode_8bppchunkybmm::PLANEB#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_START_MI
  //SEG199 [118] *((const byte*) DTV_PLANEB_START_HI#0) ← <>(const dword) mode_8bppchunkybmm::PLANEB#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #PLANEB>>$10
    sta DTV_PLANEB_START_HI
  //SEG200 [119] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 8 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #8
    sta DTV_PLANEB_STEP
  //SEG201 [120] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_MODULO_LO
  //SEG202 [121] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_MODULO_HI
  //SEG203 [122] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG204 [123] phi from mode_8bppchunkybmm to mode_8bppchunkybmm::@1 [phi:mode_8bppchunkybmm->mode_8bppchunkybmm::@1]
  b1_from_mode_8bppchunkybmm:
  //SEG205 [123] phi (byte) mode_8bppchunkybmm::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bppchunkybmm->mode_8bppchunkybmm::@1#0] -- vbuxx=vbuc1 
    ldx #0
    jmp b1
  //SEG206 [123] phi from mode_8bppchunkybmm::@1 to mode_8bppchunkybmm::@1 [phi:mode_8bppchunkybmm::@1->mode_8bppchunkybmm::@1]
  b1_from_b1:
  //SEG207 [123] phi (byte) mode_8bppchunkybmm::i#2 = (byte) mode_8bppchunkybmm::i#1 [phi:mode_8bppchunkybmm::@1->mode_8bppchunkybmm::@1#0] -- register_copy 
    jmp b1
  //SEG208 mode_8bppchunkybmm::@1
  b1:
  //SEG209 [124] *((const byte*) DTV_PALETTE#0 + (byte) mode_8bppchunkybmm::i#2) ← (byte) mode_8bppchunkybmm::i#2 [ mode_8bppchunkybmm::i#2 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::i#2 ] ) -- pbuc1_derefidx_vbuxx=vbuxx 
    txa
    sta DTV_PALETTE,x
  //SEG210 [125] (byte) mode_8bppchunkybmm::i#1 ← ++ (byte) mode_8bppchunkybmm::i#2 [ mode_8bppchunkybmm::i#1 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG211 [126] if((byte) mode_8bppchunkybmm::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_8bppchunkybmm::@1 [ mode_8bppchunkybmm::i#1 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne b1_from_b1
  //SEG212 [127] phi from mode_8bppchunkybmm::@1 to mode_8bppchunkybmm::@9 [phi:mode_8bppchunkybmm::@1->mode_8bppchunkybmm::@9]
  b9_from_b1:
    jmp b9
  //SEG213 mode_8bppchunkybmm::@9
  b9:
  //SEG214 [128] call dtvSetCpuBankSegment1 param-assignment [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
  //SEG215 [165] phi from mode_8bppchunkybmm::@9 to dtvSetCpuBankSegment1 [phi:mode_8bppchunkybmm::@9->dtvSetCpuBankSegment1]
  dtvSetCpuBankSegment1_from_b9:
  //SEG216 [165] phi (byte) dtvSetCpuBankSegment1::cpuBankIdx#3 = ((byte))(const dword) mode_8bppchunkybmm::PLANEB#0/(word/signed word/dword/signed dword) 16384 [phi:mode_8bppchunkybmm::@9->dtvSetCpuBankSegment1#0] -- vbuaa=vbuc1 
    lda #PLANEB/$4000
    jsr dtvSetCpuBankSegment1
  //SEG217 [129] phi from mode_8bppchunkybmm::@9 to mode_8bppchunkybmm::@2 [phi:mode_8bppchunkybmm::@9->mode_8bppchunkybmm::@2]
  b2_from_b9:
  //SEG218 [129] phi (byte) mode_8bppchunkybmm::gfxbCpuBank#7 = ++((byte))(const dword) mode_8bppchunkybmm::PLANEB#0/(word/signed word/dword/signed dword) 16384 [phi:mode_8bppchunkybmm::@9->mode_8bppchunkybmm::@2#0] -- vbuxx=vbuc1 
    ldx #PLANEB/$4000+1
  //SEG219 [129] phi (byte) mode_8bppchunkybmm::y#6 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bppchunkybmm::@9->mode_8bppchunkybmm::@2#1] -- vbuz1=vbuc1 
    lda #0
    sta y
  //SEG220 [129] phi (byte*) mode_8bppchunkybmm::gfxb#5 = ((byte*))(word/signed word/dword/signed dword) 16384 [phi:mode_8bppchunkybmm::@9->mode_8bppchunkybmm::@2#2] -- pbuz1=pbuc1 
    lda #<$4000
    sta gfxb
    lda #>$4000
    sta gfxb+1
    jmp b2
  //SEG221 [129] phi from mode_8bppchunkybmm::@11 to mode_8bppchunkybmm::@2 [phi:mode_8bppchunkybmm::@11->mode_8bppchunkybmm::@2]
  b2_from_b11:
  //SEG222 [129] phi (byte) mode_8bppchunkybmm::gfxbCpuBank#7 = (byte) mode_8bppchunkybmm::gfxbCpuBank#8 [phi:mode_8bppchunkybmm::@11->mode_8bppchunkybmm::@2#0] -- register_copy 
  //SEG223 [129] phi (byte) mode_8bppchunkybmm::y#6 = (byte) mode_8bppchunkybmm::y#1 [phi:mode_8bppchunkybmm::@11->mode_8bppchunkybmm::@2#1] -- register_copy 
  //SEG224 [129] phi (byte*) mode_8bppchunkybmm::gfxb#5 = (byte*) mode_8bppchunkybmm::gfxb#1 [phi:mode_8bppchunkybmm::@11->mode_8bppchunkybmm::@2#2] -- register_copy 
    jmp b2
  //SEG225 mode_8bppchunkybmm::@2
  b2:
  //SEG226 [130] phi from mode_8bppchunkybmm::@2 to mode_8bppchunkybmm::@3 [phi:mode_8bppchunkybmm::@2->mode_8bppchunkybmm::@3]
  b3_from_b2:
  //SEG227 [130] phi (byte) mode_8bppchunkybmm::gfxbCpuBank#4 = (byte) mode_8bppchunkybmm::gfxbCpuBank#7 [phi:mode_8bppchunkybmm::@2->mode_8bppchunkybmm::@3#0] -- register_copy 
  //SEG228 [130] phi (word) mode_8bppchunkybmm::x#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bppchunkybmm::@2->mode_8bppchunkybmm::@3#1] -- vwuz1=vbuc1 
    lda #<0
    sta x
    lda #>0
    sta x+1
  //SEG229 [130] phi (byte*) mode_8bppchunkybmm::gfxb#3 = (byte*) mode_8bppchunkybmm::gfxb#5 [phi:mode_8bppchunkybmm::@2->mode_8bppchunkybmm::@3#2] -- register_copy 
    jmp b3
  //SEG230 [130] phi from mode_8bppchunkybmm::@4 to mode_8bppchunkybmm::@3 [phi:mode_8bppchunkybmm::@4->mode_8bppchunkybmm::@3]
  b3_from_b4:
  //SEG231 [130] phi (byte) mode_8bppchunkybmm::gfxbCpuBank#4 = (byte) mode_8bppchunkybmm::gfxbCpuBank#8 [phi:mode_8bppchunkybmm::@4->mode_8bppchunkybmm::@3#0] -- register_copy 
  //SEG232 [130] phi (word) mode_8bppchunkybmm::x#2 = (word) mode_8bppchunkybmm::x#1 [phi:mode_8bppchunkybmm::@4->mode_8bppchunkybmm::@3#1] -- register_copy 
  //SEG233 [130] phi (byte*) mode_8bppchunkybmm::gfxb#3 = (byte*) mode_8bppchunkybmm::gfxb#1 [phi:mode_8bppchunkybmm::@4->mode_8bppchunkybmm::@3#2] -- register_copy 
    jmp b3
  //SEG234 mode_8bppchunkybmm::@3
  b3:
  //SEG235 [131] if((byte*) mode_8bppchunkybmm::gfxb#3!=(word/dword/signed dword) 32768) goto mode_8bppchunkybmm::@4 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] ) -- pbuz1_neq_vwuc1_then_la1 
    lda gfxb+1
    cmp #>$8000
    bne b4_from_b3
    lda gfxb
    cmp #<$8000
    bne b4_from_b3
    jmp b10
  //SEG236 mode_8bppchunkybmm::@10
  b10:
  //SEG237 [132] (byte) dtvSetCpuBankSegment1::cpuBankIdx#1 ← (byte) mode_8bppchunkybmm::gfxbCpuBank#4 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 dtvSetCpuBankSegment1::cpuBankIdx#1 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 dtvSetCpuBankSegment1::cpuBankIdx#1 ] ) -- vbuaa=vbuxx 
    txa
  //SEG238 [133] call dtvSetCpuBankSegment1 param-assignment [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] )
  //SEG239 [165] phi from mode_8bppchunkybmm::@10 to dtvSetCpuBankSegment1 [phi:mode_8bppchunkybmm::@10->dtvSetCpuBankSegment1]
  dtvSetCpuBankSegment1_from_b10:
  //SEG240 [165] phi (byte) dtvSetCpuBankSegment1::cpuBankIdx#3 = (byte) dtvSetCpuBankSegment1::cpuBankIdx#1 [phi:mode_8bppchunkybmm::@10->dtvSetCpuBankSegment1#0] -- register_copy 
    jsr dtvSetCpuBankSegment1
    jmp b19
  //SEG241 mode_8bppchunkybmm::@19
  b19:
  //SEG242 [134] (byte) mode_8bppchunkybmm::gfxbCpuBank#2 ← ++ (byte) mode_8bppchunkybmm::gfxbCpuBank#4 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#2 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#2 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG243 [135] phi from mode_8bppchunkybmm::@19 to mode_8bppchunkybmm::@4 [phi:mode_8bppchunkybmm::@19->mode_8bppchunkybmm::@4]
  b4_from_b19:
  //SEG244 [135] phi (byte) mode_8bppchunkybmm::gfxbCpuBank#8 = (byte) mode_8bppchunkybmm::gfxbCpuBank#2 [phi:mode_8bppchunkybmm::@19->mode_8bppchunkybmm::@4#0] -- register_copy 
  //SEG245 [135] phi (byte*) mode_8bppchunkybmm::gfxb#4 = ((byte*))(word/signed word/dword/signed dword) 16384 [phi:mode_8bppchunkybmm::@19->mode_8bppchunkybmm::@4#1] -- pbuz1=pbuc1 
    lda #<$4000
    sta gfxb
    lda #>$4000
    sta gfxb+1
    jmp b4
  //SEG246 [135] phi from mode_8bppchunkybmm::@3 to mode_8bppchunkybmm::@4 [phi:mode_8bppchunkybmm::@3->mode_8bppchunkybmm::@4]
  b4_from_b3:
  //SEG247 [135] phi (byte) mode_8bppchunkybmm::gfxbCpuBank#8 = (byte) mode_8bppchunkybmm::gfxbCpuBank#4 [phi:mode_8bppchunkybmm::@3->mode_8bppchunkybmm::@4#0] -- register_copy 
  //SEG248 [135] phi (byte*) mode_8bppchunkybmm::gfxb#4 = (byte*) mode_8bppchunkybmm::gfxb#3 [phi:mode_8bppchunkybmm::@3->mode_8bppchunkybmm::@4#1] -- register_copy 
    jmp b4
  //SEG249 mode_8bppchunkybmm::@4
  b4:
  //SEG250 [136] (word~) mode_8bppchunkybmm::$20 ← (word) mode_8bppchunkybmm::x#2 + (byte) mode_8bppchunkybmm::y#6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::$20 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::$20 ] ) -- vwuz1=vwuz2_plus_vbuz3 
    lda y
    clc
    adc x
    sta _20
    lda #0
    adc x+1
    sta _20+1
  //SEG251 [137] (byte) mode_8bppchunkybmm::c#0 ← ((byte)) (word~) mode_8bppchunkybmm::$20 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::c#0 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::c#0 ] ) -- vbuaa=_byte_vwuz1 
    lda _20
  //SEG252 [138] *((byte*) mode_8bppchunkybmm::gfxb#4) ← (byte) mode_8bppchunkybmm::c#0 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (gfxb),y
  //SEG253 [139] (byte*) mode_8bppchunkybmm::gfxb#1 ← ++ (byte*) mode_8bppchunkybmm::gfxb#4 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxb
    bne !+
    inc gfxb+1
  !:
  //SEG254 [140] (word) mode_8bppchunkybmm::x#1 ← ++ (word) mode_8bppchunkybmm::x#2 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#1 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#1 ] ) -- vwuz1=_inc_vwuz1 
    inc x
    bne !+
    inc x+1
  !:
  //SEG255 [141] if((word) mode_8bppchunkybmm::x#1!=(word/signed word/dword/signed dword) 320) goto mode_8bppchunkybmm::@3 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#1 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#1 ] ) -- vwuz1_neq_vwuc1_then_la1 
    lda x+1
    cmp #>$140
    bne b3_from_b4
    lda x
    cmp #<$140
    bne b3_from_b4
    jmp b11
  //SEG256 mode_8bppchunkybmm::@11
  b11:
  //SEG257 [142] (byte) mode_8bppchunkybmm::y#1 ← ++ (byte) mode_8bppchunkybmm::y#6 [ mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::y#1 mode_8bppchunkybmm::gfxbCpuBank#8 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::y#1 mode_8bppchunkybmm::gfxbCpuBank#8 ] ) -- vbuz1=_inc_vbuz1 
    inc y
  //SEG258 [143] if((byte) mode_8bppchunkybmm::y#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_8bppchunkybmm::@2 [ mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::y#1 mode_8bppchunkybmm::gfxbCpuBank#8 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::y#1 mode_8bppchunkybmm::gfxbCpuBank#8 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda y
    cmp #$c8
    bne b2_from_b11
  //SEG259 [144] phi from mode_8bppchunkybmm::@11 to mode_8bppchunkybmm::@12 [phi:mode_8bppchunkybmm::@11->mode_8bppchunkybmm::@12]
  b12_from_b11:
    jmp b12
  //SEG260 mode_8bppchunkybmm::@12
  b12:
  //SEG261 [145] call dtvSetCpuBankSegment1 param-assignment [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
  //SEG262 [165] phi from mode_8bppchunkybmm::@12 to dtvSetCpuBankSegment1 [phi:mode_8bppchunkybmm::@12->dtvSetCpuBankSegment1]
  dtvSetCpuBankSegment1_from_b12:
  //SEG263 [165] phi (byte) dtvSetCpuBankSegment1::cpuBankIdx#3 = ((byte))(word/signed word/dword/signed dword) 16384/(word/signed word/dword/signed dword) 16384 [phi:mode_8bppchunkybmm::@12->dtvSetCpuBankSegment1#0] -- vbuaa=vbuc1 
    lda #$4000/$4000
    jsr dtvSetCpuBankSegment1
    jmp b5
  //SEG264 mode_8bppchunkybmm::@5
  b5:
  //SEG265 [146] if(true) goto mode_8bppchunkybmm::@6 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- true_then_la1 
    jmp b6_from_b5
    jmp breturn
  //SEG266 mode_8bppchunkybmm::@return
  breturn:
  //SEG267 [147] return  [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
    rts
  //SEG268 [148] phi from mode_8bppchunkybmm::@5 to mode_8bppchunkybmm::@6 [phi:mode_8bppchunkybmm::@5->mode_8bppchunkybmm::@6]
  b6_from_b5:
    jmp b6
  //SEG269 mode_8bppchunkybmm::@6
  b6:
  //SEG270 [149] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ keyboard_key_pressed::return#0 ] )
  //SEG271 [153] phi from mode_8bppchunkybmm::@6 to keyboard_key_pressed [phi:mode_8bppchunkybmm::@6->keyboard_key_pressed]
  keyboard_key_pressed_from_b6:
  //SEG272 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_8bppchunkybmm::@6->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_SPACE
    jsr keyboard_key_pressed
  //SEG273 [150] (byte) keyboard_key_pressed::return#23 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#23 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ keyboard_key_pressed::return#23 ] )
    // (byte) keyboard_key_pressed::return#23 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
    jmp b21
  //SEG274 mode_8bppchunkybmm::@21
  b21:
  //SEG275 [151] (byte~) mode_8bppchunkybmm::$27 ← (byte) keyboard_key_pressed::return#23 [ mode_8bppchunkybmm::$27 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::$27 ] )
    // (byte~) mode_8bppchunkybmm::$27 = (byte) keyboard_key_pressed::return#23  // register copy reg byte a
  //SEG276 [152] if((byte~) mode_8bppchunkybmm::$27==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_8bppchunkybmm::@5 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b5
    jmp breturn
}
//SEG277 keyboard_key_pressed
keyboard_key_pressed: {
  //SEG278 [154] (byte) keyboard_key_pressed::colidx#0 ← (byte) keyboard_key_pressed::key#22 & (byte/signed byte/word/signed word/dword/signed dword) 7 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] ) -- vbuyy=vbuxx_band_vbuc1 
    txa
    and #7
    tay
  //SEG279 [155] (byte) keyboard_key_pressed::rowidx#0 ← (byte) keyboard_key_pressed::key#22 >> (byte/signed byte/word/signed word/dword/signed dword) 3 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] ) -- vbuaa=vbuxx_ror_3 
    txa
    lsr
    lsr
    lsr
  //SEG280 [156] (byte) keyboard_matrix_read::rowid#0 ← (byte) keyboard_key_pressed::rowidx#0 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] ) -- vbuxx=vbuaa 
    tax
  //SEG281 [157] call keyboard_matrix_read param-assignment [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] )
    jsr keyboard_matrix_read
  //SEG282 [158] (byte) keyboard_matrix_read::return#2 ← (byte) keyboard_matrix_read::return#0 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] )
    // (byte) keyboard_matrix_read::return#2 = (byte) keyboard_matrix_read::return#0  // register copy reg byte a
    jmp b2
  //SEG283 keyboard_key_pressed::@2
  b2:
  //SEG284 [159] (byte~) keyboard_key_pressed::$2 ← (byte) keyboard_matrix_read::return#2 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] )
    // (byte~) keyboard_key_pressed::$2 = (byte) keyboard_matrix_read::return#2  // register copy reg byte a
  //SEG285 [160] (byte) keyboard_key_pressed::return#0 ← (byte~) keyboard_key_pressed::$2 & *((const byte[]) keyboard_matrix_col_bitmask#0 + (byte) keyboard_key_pressed::colidx#0) [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::return#0 ] ) -- vbuaa=vbuaa_band_pbuc1_derefidx_vbuyy 
    and keyboard_matrix_col_bitmask,y
    jmp breturn
  //SEG286 keyboard_key_pressed::@return
  breturn:
  //SEG287 [161] return  [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::return#0 ] )
    rts
}
//SEG288 keyboard_matrix_read
keyboard_matrix_read: {
  //SEG289 [162] *((const byte*) CIA1_PORT_A#0) ← *((const byte[8]) keyboard_matrix_row_bitmask#0 + (byte) keyboard_matrix_read::rowid#0) [ ] ( main:2::menu:9::keyboard_key_pressed:37::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:44::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:51::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:58::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:65::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:72::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:79::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:86::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:93::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:100::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:107::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] ) -- _deref_pbuc1=pbuc2_derefidx_vbuxx 
    lda keyboard_matrix_row_bitmask,x
    sta CIA1_PORT_A
  //SEG290 [163] (byte) keyboard_matrix_read::return#0 ← ~ *((const byte*) CIA1_PORT_B#0) [ keyboard_matrix_read::return#0 ] ( main:2::menu:9::keyboard_key_pressed:37::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:44::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:51::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:58::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:65::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:72::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:79::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:86::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:93::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:100::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:107::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] ) -- vbuaa=_bnot__deref_pbuc1 
    lda CIA1_PORT_B
    eor #$ff
    jmp breturn
  //SEG291 keyboard_matrix_read::@return
  breturn:
  //SEG292 [164] return  [ keyboard_matrix_read::return#0 ] ( main:2::menu:9::keyboard_key_pressed:37::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:44::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:51::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:58::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:65::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:72::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:79::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:86::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:93::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:100::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:107::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] )
    rts
}
//SEG293 dtvSetCpuBankSegment1
dtvSetCpuBankSegment1: {
    .label cpuBank = $ff
  //SEG294 [166] *((const byte*) dtvSetCpuBankSegment1::cpuBank#0) ← (byte) dtvSetCpuBankSegment1::cpuBankIdx#3 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:128 [ ] main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:133 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:145 [ ] ) -- _deref_pbuc1=vbuaa 
    sta cpuBank
  //SEG295 asm { .byte$32,$dd lda$ff .byte$32,$00  }
    .byte $32, $dd
    lda $ff
    .byte $32, $00
    jmp breturn
  //SEG296 dtvSetCpuBankSegment1::@return
  breturn:
  //SEG297 [168] return  [ ] ( main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:128 [ ] main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:133 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:145 [ ] )
    rts
}
//SEG298 mode_8bpppixelcell
mode_8bpppixelcell: {
    .label PLANEA = $3c00
    .label PLANEB = $4000
    .label _12 = 7
    .label gfxa = 2
    .label ay = 4
    .label bits = 8
    .label chargen = 2
    .label gfxb = 5
    .label col = 9
    .label cr = 7
    .label ch = 4
  //SEG299 [169] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0|(const byte) DTV_CONTROL_CHUNKY_ON#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_CONTROL_HIGHCOLOR_ON|DTV_CONTROL_LINEAR_ADDRESSING_ON|DTV_CONTROL_CHUNKY_ON
    sta DTV_CONTROL
  //SEG300 [170] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_ECM|VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG301 [171] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_MCM|VIC_CSEL
    sta VIC_CONTROL2
  //SEG302 [172] *((const byte*) DTV_PLANEA_START_LO#0) ← <(const byte*) mode_8bpppixelcell::PLANEA#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<PLANEA
    sta DTV_PLANEA_START_LO
  //SEG303 [173] *((const byte*) DTV_PLANEA_START_MI#0) ← >(const byte*) mode_8bpppixelcell::PLANEA#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>PLANEA
    sta DTV_PLANEA_START_MI
  //SEG304 [174] *((const byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_START_HI
  //SEG305 [175] *((const byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #1
    sta DTV_PLANEA_STEP
  //SEG306 [176] *((const byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_MODULO_LO
  //SEG307 [177] *((const byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_MODULO_HI
  //SEG308 [178] *((const byte*) DTV_PLANEB_START_LO#0) ← <(const byte*) mode_8bpppixelcell::PLANEB#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<PLANEB
    sta DTV_PLANEB_START_LO
  //SEG309 [179] *((const byte*) DTV_PLANEB_START_MI#0) ← >(const byte*) mode_8bpppixelcell::PLANEB#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>PLANEB
    sta DTV_PLANEB_START_MI
  //SEG310 [180] *((const byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_START_HI
  //SEG311 [181] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_STEP
  //SEG312 [182] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_MODULO_LO
  //SEG313 [183] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_MODULO_HI
  //SEG314 [184] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG315 [185] phi from mode_8bpppixelcell to mode_8bpppixelcell::@1 [phi:mode_8bpppixelcell->mode_8bpppixelcell::@1]
  b1_from_mode_8bpppixelcell:
  //SEG316 [185] phi (byte) mode_8bpppixelcell::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bpppixelcell->mode_8bpppixelcell::@1#0] -- vbuxx=vbuc1 
    ldx #0
    jmp b1
  //SEG317 [185] phi from mode_8bpppixelcell::@1 to mode_8bpppixelcell::@1 [phi:mode_8bpppixelcell::@1->mode_8bpppixelcell::@1]
  b1_from_b1:
  //SEG318 [185] phi (byte) mode_8bpppixelcell::i#2 = (byte) mode_8bpppixelcell::i#1 [phi:mode_8bpppixelcell::@1->mode_8bpppixelcell::@1#0] -- register_copy 
    jmp b1
  //SEG319 mode_8bpppixelcell::@1
  b1:
  //SEG320 [186] *((const byte*) DTV_PALETTE#0 + (byte) mode_8bpppixelcell::i#2) ← (byte) mode_8bpppixelcell::i#2 [ mode_8bpppixelcell::i#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::i#2 ] ) -- pbuc1_derefidx_vbuxx=vbuxx 
    txa
    sta DTV_PALETTE,x
  //SEG321 [187] (byte) mode_8bpppixelcell::i#1 ← ++ (byte) mode_8bpppixelcell::i#2 [ mode_8bpppixelcell::i#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG322 [188] if((byte) mode_8bpppixelcell::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_8bpppixelcell::@1 [ mode_8bpppixelcell::i#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne b1_from_b1
  //SEG323 [189] phi from mode_8bpppixelcell::@1 to mode_8bpppixelcell::@2 [phi:mode_8bpppixelcell::@1->mode_8bpppixelcell::@2]
  b2_from_b1:
  //SEG324 [189] phi (byte*) mode_8bpppixelcell::gfxa#3 = (const byte*) mode_8bpppixelcell::PLANEA#0 [phi:mode_8bpppixelcell::@1->mode_8bpppixelcell::@2#0] -- pbuz1=pbuc1 
    lda #<PLANEA
    sta gfxa
    lda #>PLANEA
    sta gfxa+1
  //SEG325 [189] phi (byte) mode_8bpppixelcell::ay#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bpppixelcell::@1->mode_8bpppixelcell::@2#1] -- vbuz1=vbuc1 
    lda #0
    sta ay
    jmp b2
  //SEG326 [189] phi from mode_8bpppixelcell::@13 to mode_8bpppixelcell::@2 [phi:mode_8bpppixelcell::@13->mode_8bpppixelcell::@2]
  b2_from_b13:
  //SEG327 [189] phi (byte*) mode_8bpppixelcell::gfxa#3 = (byte*) mode_8bpppixelcell::gfxa#1 [phi:mode_8bpppixelcell::@13->mode_8bpppixelcell::@2#0] -- register_copy 
  //SEG328 [189] phi (byte) mode_8bpppixelcell::ay#4 = (byte) mode_8bpppixelcell::ay#1 [phi:mode_8bpppixelcell::@13->mode_8bpppixelcell::@2#1] -- register_copy 
    jmp b2
  //SEG329 mode_8bpppixelcell::@2
  b2:
  //SEG330 [190] phi from mode_8bpppixelcell::@2 to mode_8bpppixelcell::@3 [phi:mode_8bpppixelcell::@2->mode_8bpppixelcell::@3]
  b3_from_b2:
  //SEG331 [190] phi (byte*) mode_8bpppixelcell::gfxa#2 = (byte*) mode_8bpppixelcell::gfxa#3 [phi:mode_8bpppixelcell::@2->mode_8bpppixelcell::@3#0] -- register_copy 
  //SEG332 [190] phi (byte) mode_8bpppixelcell::ax#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bpppixelcell::@2->mode_8bpppixelcell::@3#1] -- vbuxx=vbuc1 
    ldx #0
    jmp b3
  //SEG333 [190] phi from mode_8bpppixelcell::@3 to mode_8bpppixelcell::@3 [phi:mode_8bpppixelcell::@3->mode_8bpppixelcell::@3]
  b3_from_b3:
  //SEG334 [190] phi (byte*) mode_8bpppixelcell::gfxa#2 = (byte*) mode_8bpppixelcell::gfxa#1 [phi:mode_8bpppixelcell::@3->mode_8bpppixelcell::@3#0] -- register_copy 
  //SEG335 [190] phi (byte) mode_8bpppixelcell::ax#2 = (byte) mode_8bpppixelcell::ax#1 [phi:mode_8bpppixelcell::@3->mode_8bpppixelcell::@3#1] -- register_copy 
    jmp b3
  //SEG336 mode_8bpppixelcell::@3
  b3:
  //SEG337 [191] (byte~) mode_8bpppixelcell::$11 ← (byte) mode_8bpppixelcell::ay#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$11 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$11 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #$f
    and ay
  //SEG338 [192] (byte~) mode_8bpppixelcell::$12 ← (byte~) mode_8bpppixelcell::$11 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$12 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$12 ] ) -- vbuz1=vbuaa_rol_4 
    asl
    asl
    asl
    asl
    sta _12
  //SEG339 [193] (byte~) mode_8bpppixelcell::$13 ← (byte) mode_8bpppixelcell::ax#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$12 mode_8bpppixelcell::$13 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$12 mode_8bpppixelcell::$13 ] ) -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #$f
  //SEG340 [194] (byte~) mode_8bpppixelcell::$14 ← (byte~) mode_8bpppixelcell::$12 | (byte~) mode_8bpppixelcell::$13 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$14 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$14 ] ) -- vbuaa=vbuz1_bor_vbuaa 
    ora _12
  //SEG341 [195] *((byte*) mode_8bpppixelcell::gfxa#2) ← (byte~) mode_8bpppixelcell::$14 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (gfxa),y
  //SEG342 [196] (byte*) mode_8bpppixelcell::gfxa#1 ← ++ (byte*) mode_8bpppixelcell::gfxa#2 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::ax#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::ax#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxa
    bne !+
    inc gfxa+1
  !:
  //SEG343 [197] (byte) mode_8bpppixelcell::ax#1 ← ++ (byte) mode_8bpppixelcell::ax#2 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::ax#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::ax#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG344 [198] if((byte) mode_8bpppixelcell::ax#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_8bpppixelcell::@3 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::ax#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::ax#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b3_from_b3
    jmp b13
  //SEG345 mode_8bpppixelcell::@13
  b13:
  //SEG346 [199] (byte) mode_8bpppixelcell::ay#1 ← ++ (byte) mode_8bpppixelcell::ay#4 [ mode_8bpppixelcell::ay#1 mode_8bpppixelcell::gfxa#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#1 mode_8bpppixelcell::gfxa#1 ] ) -- vbuz1=_inc_vbuz1 
    inc ay
  //SEG347 [200] if((byte) mode_8bpppixelcell::ay#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_8bpppixelcell::@2 [ mode_8bpppixelcell::ay#1 mode_8bpppixelcell::gfxa#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#1 mode_8bpppixelcell::gfxa#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda ay
    cmp #$19
    bne b2_from_b13
    jmp b14
  //SEG348 mode_8bpppixelcell::@14
  b14:
  //SEG349 [201] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 50 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$32
    sta PROCPORT
  //SEG350 [202] phi from mode_8bpppixelcell::@14 to mode_8bpppixelcell::@4 [phi:mode_8bpppixelcell::@14->mode_8bpppixelcell::@4]
  b4_from_b14:
  //SEG351 [202] phi (byte) mode_8bpppixelcell::ch#8 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bpppixelcell::@14->mode_8bpppixelcell::@4#0] -- vbuz1=vbuc1 
    lda #0
    sta ch
  //SEG352 [202] phi (byte) mode_8bpppixelcell::col#7 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bpppixelcell::@14->mode_8bpppixelcell::@4#1] -- vbuz1=vbuc1 
    lda #0
    sta col
  //SEG353 [202] phi (byte*) mode_8bpppixelcell::gfxb#7 = (const byte*) mode_8bpppixelcell::PLANEB#0 [phi:mode_8bpppixelcell::@14->mode_8bpppixelcell::@4#2] -- pbuz1=pbuc1 
    lda #<PLANEB
    sta gfxb
    lda #>PLANEB
    sta gfxb+1
  //SEG354 [202] phi (byte*) mode_8bpppixelcell::chargen#4 = ((byte*))(word/dword/signed dword) 53248 [phi:mode_8bpppixelcell::@14->mode_8bpppixelcell::@4#3] -- pbuz1=pbuc1 
    lda #<$d000
    sta chargen
    lda #>$d000
    sta chargen+1
    jmp b4
  //SEG355 [202] phi from mode_8bpppixelcell::@17 to mode_8bpppixelcell::@4 [phi:mode_8bpppixelcell::@17->mode_8bpppixelcell::@4]
  b4_from_b17:
  //SEG356 [202] phi (byte) mode_8bpppixelcell::ch#8 = (byte) mode_8bpppixelcell::ch#1 [phi:mode_8bpppixelcell::@17->mode_8bpppixelcell::@4#0] -- register_copy 
  //SEG357 [202] phi (byte) mode_8bpppixelcell::col#7 = (byte) mode_8bpppixelcell::col#1 [phi:mode_8bpppixelcell::@17->mode_8bpppixelcell::@4#1] -- register_copy 
  //SEG358 [202] phi (byte*) mode_8bpppixelcell::gfxb#7 = (byte*) mode_8bpppixelcell::gfxb#1 [phi:mode_8bpppixelcell::@17->mode_8bpppixelcell::@4#2] -- register_copy 
  //SEG359 [202] phi (byte*) mode_8bpppixelcell::chargen#4 = (byte*) mode_8bpppixelcell::chargen#1 [phi:mode_8bpppixelcell::@17->mode_8bpppixelcell::@4#3] -- register_copy 
    jmp b4
  //SEG360 mode_8bpppixelcell::@4
  b4:
  //SEG361 [203] phi from mode_8bpppixelcell::@4 to mode_8bpppixelcell::@5 [phi:mode_8bpppixelcell::@4->mode_8bpppixelcell::@5]
  b5_from_b4:
  //SEG362 [203] phi (byte) mode_8bpppixelcell::cr#6 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bpppixelcell::@4->mode_8bpppixelcell::@5#0] -- vbuz1=vbuc1 
    lda #0
    sta cr
  //SEG363 [203] phi (byte) mode_8bpppixelcell::col#5 = (byte) mode_8bpppixelcell::col#7 [phi:mode_8bpppixelcell::@4->mode_8bpppixelcell::@5#1] -- register_copy 
  //SEG364 [203] phi (byte*) mode_8bpppixelcell::gfxb#5 = (byte*) mode_8bpppixelcell::gfxb#7 [phi:mode_8bpppixelcell::@4->mode_8bpppixelcell::@5#2] -- register_copy 
  //SEG365 [203] phi (byte*) mode_8bpppixelcell::chargen#2 = (byte*) mode_8bpppixelcell::chargen#4 [phi:mode_8bpppixelcell::@4->mode_8bpppixelcell::@5#3] -- register_copy 
    jmp b5
  //SEG366 [203] phi from mode_8bpppixelcell::@16 to mode_8bpppixelcell::@5 [phi:mode_8bpppixelcell::@16->mode_8bpppixelcell::@5]
  b5_from_b16:
  //SEG367 [203] phi (byte) mode_8bpppixelcell::cr#6 = (byte) mode_8bpppixelcell::cr#1 [phi:mode_8bpppixelcell::@16->mode_8bpppixelcell::@5#0] -- register_copy 
  //SEG368 [203] phi (byte) mode_8bpppixelcell::col#5 = (byte) mode_8bpppixelcell::col#1 [phi:mode_8bpppixelcell::@16->mode_8bpppixelcell::@5#1] -- register_copy 
  //SEG369 [203] phi (byte*) mode_8bpppixelcell::gfxb#5 = (byte*) mode_8bpppixelcell::gfxb#1 [phi:mode_8bpppixelcell::@16->mode_8bpppixelcell::@5#2] -- register_copy 
  //SEG370 [203] phi (byte*) mode_8bpppixelcell::chargen#2 = (byte*) mode_8bpppixelcell::chargen#1 [phi:mode_8bpppixelcell::@16->mode_8bpppixelcell::@5#3] -- register_copy 
    jmp b5
  //SEG371 mode_8bpppixelcell::@5
  b5:
  //SEG372 [204] (byte) mode_8bpppixelcell::bits#0 ← *((byte*) mode_8bpppixelcell::chargen#2) [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#0 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#0 ] ) -- vbuz1=_deref_pbuz2 
    ldy #0
    lda (chargen),y
    sta bits
  //SEG373 [205] (byte*) mode_8bpppixelcell::chargen#1 ← ++ (byte*) mode_8bpppixelcell::chargen#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#0 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#0 ] ) -- pbuz1=_inc_pbuz1 
    inc chargen
    bne !+
    inc chargen+1
  !:
  //SEG374 [206] phi from mode_8bpppixelcell::@5 to mode_8bpppixelcell::@6 [phi:mode_8bpppixelcell::@5->mode_8bpppixelcell::@6]
  b6_from_b5:
  //SEG375 [206] phi (byte) mode_8bpppixelcell::cp#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bpppixelcell::@5->mode_8bpppixelcell::@6#0] -- vbuxx=vbuc1 
    ldx #0
  //SEG376 [206] phi (byte) mode_8bpppixelcell::col#2 = (byte) mode_8bpppixelcell::col#5 [phi:mode_8bpppixelcell::@5->mode_8bpppixelcell::@6#1] -- register_copy 
  //SEG377 [206] phi (byte*) mode_8bpppixelcell::gfxb#2 = (byte*) mode_8bpppixelcell::gfxb#5 [phi:mode_8bpppixelcell::@5->mode_8bpppixelcell::@6#2] -- register_copy 
  //SEG378 [206] phi (byte) mode_8bpppixelcell::bits#2 = (byte) mode_8bpppixelcell::bits#0 [phi:mode_8bpppixelcell::@5->mode_8bpppixelcell::@6#3] -- register_copy 
    jmp b6
  //SEG379 [206] phi from mode_8bpppixelcell::@7 to mode_8bpppixelcell::@6 [phi:mode_8bpppixelcell::@7->mode_8bpppixelcell::@6]
  b6_from_b7:
  //SEG380 [206] phi (byte) mode_8bpppixelcell::cp#2 = (byte) mode_8bpppixelcell::cp#1 [phi:mode_8bpppixelcell::@7->mode_8bpppixelcell::@6#0] -- register_copy 
  //SEG381 [206] phi (byte) mode_8bpppixelcell::col#2 = (byte) mode_8bpppixelcell::col#1 [phi:mode_8bpppixelcell::@7->mode_8bpppixelcell::@6#1] -- register_copy 
  //SEG382 [206] phi (byte*) mode_8bpppixelcell::gfxb#2 = (byte*) mode_8bpppixelcell::gfxb#1 [phi:mode_8bpppixelcell::@7->mode_8bpppixelcell::@6#2] -- register_copy 
  //SEG383 [206] phi (byte) mode_8bpppixelcell::bits#2 = (byte) mode_8bpppixelcell::bits#1 [phi:mode_8bpppixelcell::@7->mode_8bpppixelcell::@6#3] -- register_copy 
    jmp b6
  //SEG384 mode_8bpppixelcell::@6
  b6:
  //SEG385 [207] (byte~) mode_8bpppixelcell::$17 ← (byte) mode_8bpppixelcell::bits#2 & (byte/word/signed word/dword/signed dword) 128 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::$17 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::$17 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #$80
    and bits
  //SEG386 [208] if((byte~) mode_8bpppixelcell::$17==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_8bpppixelcell::@7 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b7_from_b6
    jmp b15
  //SEG387 mode_8bpppixelcell::@15
  b15:
  //SEG388 [209] (byte~) mode_8bpppixelcell::c#3 ← (byte) mode_8bpppixelcell::col#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::c#3 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::c#3 ] ) -- vbuaa=vbuz1 
    lda col
  //SEG389 [210] phi from mode_8bpppixelcell::@15 to mode_8bpppixelcell::@7 [phi:mode_8bpppixelcell::@15->mode_8bpppixelcell::@7]
  b7_from_b15:
  //SEG390 [210] phi (byte) mode_8bpppixelcell::c#2 = (byte~) mode_8bpppixelcell::c#3 [phi:mode_8bpppixelcell::@15->mode_8bpppixelcell::@7#0] -- register_copy 
    jmp b7
  //SEG391 [210] phi from mode_8bpppixelcell::@6 to mode_8bpppixelcell::@7 [phi:mode_8bpppixelcell::@6->mode_8bpppixelcell::@7]
  b7_from_b6:
  //SEG392 [210] phi (byte) mode_8bpppixelcell::c#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bpppixelcell::@6->mode_8bpppixelcell::@7#0] -- vbuaa=vbuc1 
    lda #0
    jmp b7
  //SEG393 mode_8bpppixelcell::@7
  b7:
  //SEG394 [211] *((byte*) mode_8bpppixelcell::gfxb#2) ← (byte) mode_8bpppixelcell::c#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (gfxb),y
  //SEG395 [212] (byte*) mode_8bpppixelcell::gfxb#1 ← ++ (byte*) mode_8bpppixelcell::gfxb#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxb
    bne !+
    inc gfxb+1
  !:
  //SEG396 [213] (byte) mode_8bpppixelcell::bits#1 ← (byte) mode_8bpppixelcell::bits#2 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::bits#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::bits#1 ] ) -- vbuz1=vbuz1_rol_1 
    asl bits
  //SEG397 [214] (byte) mode_8bpppixelcell::col#1 ← ++ (byte) mode_8bpppixelcell::col#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::bits#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::bits#1 ] ) -- vbuz1=_inc_vbuz1 
    inc col
  //SEG398 [215] (byte) mode_8bpppixelcell::cp#1 ← ++ (byte) mode_8bpppixelcell::cp#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#1 mode_8bpppixelcell::cp#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#1 mode_8bpppixelcell::cp#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG399 [216] if((byte) mode_8bpppixelcell::cp#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto mode_8bpppixelcell::@6 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#1 mode_8bpppixelcell::cp#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#1 mode_8bpppixelcell::cp#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #8
    bne b6_from_b7
    jmp b16
  //SEG400 mode_8bpppixelcell::@16
  b16:
  //SEG401 [217] (byte) mode_8bpppixelcell::cr#1 ← ++ (byte) mode_8bpppixelcell::cr#6 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cr
  //SEG402 [218] if((byte) mode_8bpppixelcell::cr#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto mode_8bpppixelcell::@5 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cr
    cmp #8
    bne b5_from_b16
    jmp b17
  //SEG403 mode_8bpppixelcell::@17
  b17:
  //SEG404 [219] (byte) mode_8bpppixelcell::ch#1 ← ++ (byte) mode_8bpppixelcell::ch#8 [ mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::ch#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::ch#1 ] ) -- vbuz1=_inc_vbuz1 
    inc ch
  //SEG405 [220] if((byte) mode_8bpppixelcell::ch#1!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_8bpppixelcell::@4 [ mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::ch#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::ch#1 ] ) -- vbuz1_neq_0_then_la1 
    lda ch
    bne b4_from_b17
    jmp b18
  //SEG406 mode_8bpppixelcell::@18
  b18:
  //SEG407 [221] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 55 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$37
    sta PROCPORT
    jmp b8
  //SEG408 mode_8bpppixelcell::@8
  b8:
  //SEG409 [222] if(true) goto mode_8bpppixelcell::@9 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- true_then_la1 
    jmp b9_from_b8
    jmp breturn
  //SEG410 mode_8bpppixelcell::@return
  breturn:
  //SEG411 [223] return  [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] )
    rts
  //SEG412 [224] phi from mode_8bpppixelcell::@8 to mode_8bpppixelcell::@9 [phi:mode_8bpppixelcell::@8->mode_8bpppixelcell::@9]
  b9_from_b8:
    jmp b9
  //SEG413 mode_8bpppixelcell::@9
  b9:
  //SEG414 [225] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ keyboard_key_pressed::return#0 ] )
  //SEG415 [153] phi from mode_8bpppixelcell::@9 to keyboard_key_pressed [phi:mode_8bpppixelcell::@9->keyboard_key_pressed]
  keyboard_key_pressed_from_b9:
  //SEG416 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_8bpppixelcell::@9->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_SPACE
    jsr keyboard_key_pressed
  //SEG417 [226] (byte) keyboard_key_pressed::return#22 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#22 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ keyboard_key_pressed::return#22 ] )
    // (byte) keyboard_key_pressed::return#22 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
    jmp b24
  //SEG418 mode_8bpppixelcell::@24
  b24:
  //SEG419 [227] (byte~) mode_8bpppixelcell::$24 ← (byte) keyboard_key_pressed::return#22 [ mode_8bpppixelcell::$24 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::$24 ] )
    // (byte~) mode_8bpppixelcell::$24 = (byte) keyboard_key_pressed::return#22  // register copy reg byte a
  //SEG420 [228] if((byte~) mode_8bpppixelcell::$24==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_8bpppixelcell::@8 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b8
    jmp breturn
}
//SEG421 mode_sixsfred
mode_sixsfred: {
    .label PLANEA = $4000
    .label PLANEB = $6000
    .label COLORS = $8000
    .label col = 2
    .label cy = 4
    .label gfxa = 2
    .label ay = 4
    .label gfxb = 2
    .label by = 4
  //SEG422 [229] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_CONTROL_HIGHCOLOR_ON|DTV_CONTROL_LINEAR_ADDRESSING_ON
    sta DTV_CONTROL
  //SEG423 [230] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_ECM|VIC_BMM|VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG424 [231] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_MCM|VIC_CSEL
    sta VIC_CONTROL2
  //SEG425 [232] *((const byte*) DTV_PLANEA_START_LO#0) ← <(const byte*) mode_sixsfred::PLANEA#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<PLANEA
    sta DTV_PLANEA_START_LO
  //SEG426 [233] *((const byte*) DTV_PLANEA_START_MI#0) ← >(const byte*) mode_sixsfred::PLANEA#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>PLANEA
    sta DTV_PLANEA_START_MI
  //SEG427 [234] *((const byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_START_HI
  //SEG428 [235] *((const byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #1
    sta DTV_PLANEA_STEP
  //SEG429 [236] *((const byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_MODULO_LO
  //SEG430 [237] *((const byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_MODULO_HI
  //SEG431 [238] *((const byte*) DTV_PLANEB_START_LO#0) ← <(const byte*) mode_sixsfred::PLANEB#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<PLANEB
    sta DTV_PLANEB_START_LO
  //SEG432 [239] *((const byte*) DTV_PLANEB_START_MI#0) ← >(const byte*) mode_sixsfred::PLANEB#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>PLANEB
    sta DTV_PLANEB_START_MI
  //SEG433 [240] *((const byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_START_HI
  //SEG434 [241] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #1
    sta DTV_PLANEB_STEP
  //SEG435 [242] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_MODULO_LO
  //SEG436 [243] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_MODULO_HI
  //SEG437 [244] *((const byte*) DTV_COLOR_BANK_LO#0) ← <(const byte*) mode_sixsfred::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG438 [245] *((const byte*) DTV_COLOR_BANK_HI#0) ← >(const byte*) mode_sixsfred::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>COLORS/$400
    sta DTV_COLOR_BANK_HI
  //SEG439 [246] phi from mode_sixsfred to mode_sixsfred::@1 [phi:mode_sixsfred->mode_sixsfred::@1]
  b1_from_mode_sixsfred:
  //SEG440 [246] phi (byte) mode_sixsfred::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred->mode_sixsfred::@1#0] -- vbuxx=vbuc1 
    ldx #0
    jmp b1
  //SEG441 [246] phi from mode_sixsfred::@1 to mode_sixsfred::@1 [phi:mode_sixsfred::@1->mode_sixsfred::@1]
  b1_from_b1:
  //SEG442 [246] phi (byte) mode_sixsfred::i#2 = (byte) mode_sixsfred::i#1 [phi:mode_sixsfred::@1->mode_sixsfred::@1#0] -- register_copy 
    jmp b1
  //SEG443 mode_sixsfred::@1
  b1:
  //SEG444 [247] *((const byte*) DTV_PALETTE#0 + (byte) mode_sixsfred::i#2) ← (byte) mode_sixsfred::i#2 [ mode_sixsfred::i#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::i#2 ] ) -- pbuc1_derefidx_vbuxx=vbuxx 
    txa
    sta DTV_PALETTE,x
  //SEG445 [248] (byte) mode_sixsfred::i#1 ← ++ (byte) mode_sixsfred::i#2 [ mode_sixsfred::i#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG446 [249] if((byte) mode_sixsfred::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_sixsfred::@1 [ mode_sixsfred::i#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne b1_from_b1
    jmp b12
  //SEG447 mode_sixsfred::@12
  b12:
  //SEG448 [250] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG449 [251] phi from mode_sixsfred::@12 to mode_sixsfred::@2 [phi:mode_sixsfred::@12->mode_sixsfred::@2]
  b2_from_b12:
  //SEG450 [251] phi (byte*) mode_sixsfred::col#3 = (const byte*) mode_sixsfred::COLORS#0 [phi:mode_sixsfred::@12->mode_sixsfred::@2#0] -- pbuz1=pbuc1 
    lda #<COLORS
    sta col
    lda #>COLORS
    sta col+1
  //SEG451 [251] phi (byte) mode_sixsfred::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred::@12->mode_sixsfred::@2#1] -- vbuz1=vbuc1 
    lda #0
    sta cy
    jmp b2
  //SEG452 [251] phi from mode_sixsfred::@13 to mode_sixsfred::@2 [phi:mode_sixsfred::@13->mode_sixsfred::@2]
  b2_from_b13:
  //SEG453 [251] phi (byte*) mode_sixsfred::col#3 = (byte*) mode_sixsfred::col#1 [phi:mode_sixsfred::@13->mode_sixsfred::@2#0] -- register_copy 
  //SEG454 [251] phi (byte) mode_sixsfred::cy#4 = (byte) mode_sixsfred::cy#1 [phi:mode_sixsfred::@13->mode_sixsfred::@2#1] -- register_copy 
    jmp b2
  //SEG455 mode_sixsfred::@2
  b2:
  //SEG456 [252] phi from mode_sixsfred::@2 to mode_sixsfred::@3 [phi:mode_sixsfred::@2->mode_sixsfred::@3]
  b3_from_b2:
  //SEG457 [252] phi (byte*) mode_sixsfred::col#2 = (byte*) mode_sixsfred::col#3 [phi:mode_sixsfred::@2->mode_sixsfred::@3#0] -- register_copy 
  //SEG458 [252] phi (byte) mode_sixsfred::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred::@2->mode_sixsfred::@3#1] -- vbuxx=vbuc1 
    ldx #0
    jmp b3
  //SEG459 [252] phi from mode_sixsfred::@3 to mode_sixsfred::@3 [phi:mode_sixsfred::@3->mode_sixsfred::@3]
  b3_from_b3:
  //SEG460 [252] phi (byte*) mode_sixsfred::col#2 = (byte*) mode_sixsfred::col#1 [phi:mode_sixsfred::@3->mode_sixsfred::@3#0] -- register_copy 
  //SEG461 [252] phi (byte) mode_sixsfred::cx#2 = (byte) mode_sixsfred::cx#1 [phi:mode_sixsfred::@3->mode_sixsfred::@3#1] -- register_copy 
    jmp b3
  //SEG462 mode_sixsfred::@3
  b3:
  //SEG463 [253] (byte~) mode_sixsfred::$15 ← (byte) mode_sixsfred::cx#2 + (byte) mode_sixsfred::cy#4 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 mode_sixsfred::$15 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 mode_sixsfred::$15 ] ) -- vbuaa=vbuxx_plus_vbuz1 
    txa
    clc
    adc cy
  //SEG464 [254] (byte~) mode_sixsfred::$16 ← (byte~) mode_sixsfred::$15 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 mode_sixsfred::$16 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 mode_sixsfred::$16 ] ) -- vbuaa=vbuaa_band_vbuc1 
    and #$f
  //SEG465 [255] *((byte*) mode_sixsfred::col#2) ← (byte~) mode_sixsfred::$16 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (col),y
  //SEG466 [256] (byte*) mode_sixsfred::col#1 ← ++ (byte*) mode_sixsfred::col#2 [ mode_sixsfred::cy#4 mode_sixsfred::col#1 mode_sixsfred::cx#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::col#1 mode_sixsfred::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG467 [257] (byte) mode_sixsfred::cx#1 ← ++ (byte) mode_sixsfred::cx#2 [ mode_sixsfred::cy#4 mode_sixsfred::col#1 mode_sixsfred::cx#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::col#1 mode_sixsfred::cx#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG468 [258] if((byte) mode_sixsfred::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred::@3 [ mode_sixsfred::cy#4 mode_sixsfred::col#1 mode_sixsfred::cx#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::col#1 mode_sixsfred::cx#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b3_from_b3
    jmp b13
  //SEG469 mode_sixsfred::@13
  b13:
  //SEG470 [259] (byte) mode_sixsfred::cy#1 ← ++ (byte) mode_sixsfred::cy#4 [ mode_sixsfred::cy#1 mode_sixsfred::col#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#1 mode_sixsfred::col#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG471 [260] if((byte) mode_sixsfred::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_sixsfred::@2 [ mode_sixsfred::cy#1 mode_sixsfred::col#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#1 mode_sixsfred::col#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2_from_b13
  //SEG472 [261] phi from mode_sixsfred::@13 to mode_sixsfred::@4 [phi:mode_sixsfred::@13->mode_sixsfred::@4]
  b4_from_b13:
  //SEG473 [261] phi (byte*) mode_sixsfred::gfxa#3 = (const byte*) mode_sixsfred::PLANEA#0 [phi:mode_sixsfred::@13->mode_sixsfred::@4#0] -- pbuz1=pbuc1 
    lda #<PLANEA
    sta gfxa
    lda #>PLANEA
    sta gfxa+1
  //SEG474 [261] phi (byte) mode_sixsfred::ay#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred::@13->mode_sixsfred::@4#1] -- vbuz1=vbuc1 
    lda #0
    sta ay
    jmp b4
  //SEG475 [261] phi from mode_sixsfred::@15 to mode_sixsfred::@4 [phi:mode_sixsfred::@15->mode_sixsfred::@4]
  b4_from_b15:
  //SEG476 [261] phi (byte*) mode_sixsfred::gfxa#3 = (byte*) mode_sixsfred::gfxa#1 [phi:mode_sixsfred::@15->mode_sixsfred::@4#0] -- register_copy 
  //SEG477 [261] phi (byte) mode_sixsfred::ay#4 = (byte) mode_sixsfred::ay#1 [phi:mode_sixsfred::@15->mode_sixsfred::@4#1] -- register_copy 
    jmp b4
  //SEG478 mode_sixsfred::@4
  b4:
  //SEG479 [262] phi from mode_sixsfred::@4 to mode_sixsfred::@5 [phi:mode_sixsfred::@4->mode_sixsfred::@5]
  b5_from_b4:
  //SEG480 [262] phi (byte) mode_sixsfred::ax#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred::@4->mode_sixsfred::@5#0] -- vbuxx=vbuc1 
    ldx #0
  //SEG481 [262] phi (byte*) mode_sixsfred::gfxa#2 = (byte*) mode_sixsfred::gfxa#3 [phi:mode_sixsfred::@4->mode_sixsfred::@5#1] -- register_copy 
    jmp b5
  //SEG482 [262] phi from mode_sixsfred::@5 to mode_sixsfred::@5 [phi:mode_sixsfred::@5->mode_sixsfred::@5]
  b5_from_b5:
  //SEG483 [262] phi (byte) mode_sixsfred::ax#2 = (byte) mode_sixsfred::ax#1 [phi:mode_sixsfred::@5->mode_sixsfred::@5#0] -- register_copy 
  //SEG484 [262] phi (byte*) mode_sixsfred::gfxa#2 = (byte*) mode_sixsfred::gfxa#1 [phi:mode_sixsfred::@5->mode_sixsfred::@5#1] -- register_copy 
    jmp b5
  //SEG485 mode_sixsfred::@5
  b5:
  //SEG486 [263] (byte~) mode_sixsfred::$19 ← (byte) mode_sixsfred::ay#4 >> (byte/signed byte/word/signed word/dword/signed dword) 1 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 mode_sixsfred::$19 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 mode_sixsfred::$19 ] ) -- vbuaa=vbuz1_ror_1 
    lda ay
    lsr
  //SEG487 [264] (byte) mode_sixsfred::row#0 ← (byte~) mode_sixsfred::$19 & (byte/signed byte/word/signed word/dword/signed dword) 3 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 mode_sixsfred::row#0 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 mode_sixsfred::row#0 ] ) -- vbuaa=vbuaa_band_vbuc1 
    and #3
  //SEG488 [265] *((byte*) mode_sixsfred::gfxa#2) ← *((const byte[]) mode_sixsfred::row_bitmask#0 + (byte) mode_sixsfred::row#0) [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 ] ) -- _deref_pbuz1=pbuc1_derefidx_vbuaa 
    tay
    lda row_bitmask,y
    ldy #0
    sta (gfxa),y
  //SEG489 [266] (byte*) mode_sixsfred::gfxa#1 ← ++ (byte*) mode_sixsfred::gfxa#2 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#1 mode_sixsfred::ax#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#1 mode_sixsfred::ax#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxa
    bne !+
    inc gfxa+1
  !:
  //SEG490 [267] (byte) mode_sixsfred::ax#1 ← ++ (byte) mode_sixsfred::ax#2 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#1 mode_sixsfred::ax#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#1 mode_sixsfred::ax#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG491 [268] if((byte) mode_sixsfred::ax#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred::@5 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#1 mode_sixsfred::ax#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#1 mode_sixsfred::ax#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b5_from_b5
    jmp b15
  //SEG492 mode_sixsfred::@15
  b15:
  //SEG493 [269] (byte) mode_sixsfred::ay#1 ← ++ (byte) mode_sixsfred::ay#4 [ mode_sixsfred::ay#1 mode_sixsfred::gfxa#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#1 mode_sixsfred::gfxa#1 ] ) -- vbuz1=_inc_vbuz1 
    inc ay
  //SEG494 [270] if((byte) mode_sixsfred::ay#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_sixsfred::@4 [ mode_sixsfred::ay#1 mode_sixsfred::gfxa#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#1 mode_sixsfred::gfxa#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda ay
    cmp #$c8
    bne b4_from_b15
  //SEG495 [271] phi from mode_sixsfred::@15 to mode_sixsfred::@6 [phi:mode_sixsfred::@15->mode_sixsfred::@6]
  b6_from_b15:
  //SEG496 [271] phi (byte) mode_sixsfred::by#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred::@15->mode_sixsfred::@6#0] -- vbuz1=vbuc1 
    lda #0
    sta by
  //SEG497 [271] phi (byte*) mode_sixsfred::gfxb#3 = (const byte*) mode_sixsfred::PLANEB#0 [phi:mode_sixsfred::@15->mode_sixsfred::@6#1] -- pbuz1=pbuc1 
    lda #<PLANEB
    sta gfxb
    lda #>PLANEB
    sta gfxb+1
    jmp b6
  //SEG498 [271] phi from mode_sixsfred::@17 to mode_sixsfred::@6 [phi:mode_sixsfred::@17->mode_sixsfred::@6]
  b6_from_b17:
  //SEG499 [271] phi (byte) mode_sixsfred::by#4 = (byte) mode_sixsfred::by#1 [phi:mode_sixsfred::@17->mode_sixsfred::@6#0] -- register_copy 
  //SEG500 [271] phi (byte*) mode_sixsfred::gfxb#3 = (byte*) mode_sixsfred::gfxb#1 [phi:mode_sixsfred::@17->mode_sixsfred::@6#1] -- register_copy 
    jmp b6
  //SEG501 mode_sixsfred::@6
  b6:
  //SEG502 [272] phi from mode_sixsfred::@6 to mode_sixsfred::@7 [phi:mode_sixsfred::@6->mode_sixsfred::@7]
  b7_from_b6:
  //SEG503 [272] phi (byte) mode_sixsfred::bx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred::@6->mode_sixsfred::@7#0] -- vbuxx=vbuc1 
    ldx #0
  //SEG504 [272] phi (byte*) mode_sixsfred::gfxb#2 = (byte*) mode_sixsfred::gfxb#3 [phi:mode_sixsfred::@6->mode_sixsfred::@7#1] -- register_copy 
    jmp b7
  //SEG505 [272] phi from mode_sixsfred::@7 to mode_sixsfred::@7 [phi:mode_sixsfred::@7->mode_sixsfred::@7]
  b7_from_b7:
  //SEG506 [272] phi (byte) mode_sixsfred::bx#2 = (byte) mode_sixsfred::bx#1 [phi:mode_sixsfred::@7->mode_sixsfred::@7#0] -- register_copy 
  //SEG507 [272] phi (byte*) mode_sixsfred::gfxb#2 = (byte*) mode_sixsfred::gfxb#1 [phi:mode_sixsfred::@7->mode_sixsfred::@7#1] -- register_copy 
    jmp b7
  //SEG508 mode_sixsfred::@7
  b7:
  //SEG509 [273] *((byte*) mode_sixsfred::gfxb#2) ← (byte/signed byte/word/signed word/dword/signed dword) 27 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#2 mode_sixsfred::bx#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#2 mode_sixsfred::bx#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #$1b
    ldy #0
    sta (gfxb),y
  //SEG510 [274] (byte*) mode_sixsfred::gfxb#1 ← ++ (byte*) mode_sixsfred::gfxb#2 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#1 mode_sixsfred::bx#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#1 mode_sixsfred::bx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxb
    bne !+
    inc gfxb+1
  !:
  //SEG511 [275] (byte) mode_sixsfred::bx#1 ← ++ (byte) mode_sixsfred::bx#2 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#1 mode_sixsfred::bx#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#1 mode_sixsfred::bx#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG512 [276] if((byte) mode_sixsfred::bx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred::@7 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#1 mode_sixsfred::bx#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#1 mode_sixsfred::bx#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b7_from_b7
    jmp b17
  //SEG513 mode_sixsfred::@17
  b17:
  //SEG514 [277] (byte) mode_sixsfred::by#1 ← ++ (byte) mode_sixsfred::by#4 [ mode_sixsfred::gfxb#1 mode_sixsfred::by#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::gfxb#1 mode_sixsfred::by#1 ] ) -- vbuz1=_inc_vbuz1 
    inc by
  //SEG515 [278] if((byte) mode_sixsfred::by#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_sixsfred::@6 [ mode_sixsfred::gfxb#1 mode_sixsfred::by#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::gfxb#1 mode_sixsfred::by#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda by
    cmp #$c8
    bne b6_from_b17
    jmp b8
  //SEG516 mode_sixsfred::@8
  b8:
  //SEG517 [279] if(true) goto mode_sixsfred::@9 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- true_then_la1 
    jmp b9_from_b8
    jmp breturn
  //SEG518 mode_sixsfred::@return
  breturn:
  //SEG519 [280] return  [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] )
    rts
  //SEG520 [281] phi from mode_sixsfred::@8 to mode_sixsfred::@9 [phi:mode_sixsfred::@8->mode_sixsfred::@9]
  b9_from_b8:
    jmp b9
  //SEG521 mode_sixsfred::@9
  b9:
  //SEG522 [282] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_sixsfred:98 [ keyboard_key_pressed::return#0 ] )
  //SEG523 [153] phi from mode_sixsfred::@9 to keyboard_key_pressed [phi:mode_sixsfred::@9->keyboard_key_pressed]
  keyboard_key_pressed_from_b9:
  //SEG524 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_sixsfred::@9->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_SPACE
    jsr keyboard_key_pressed
  //SEG525 [283] (byte) keyboard_key_pressed::return#20 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#20 ] ( main:2::menu:9::mode_sixsfred:98 [ keyboard_key_pressed::return#20 ] )
    // (byte) keyboard_key_pressed::return#20 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
    jmp b24
  //SEG526 mode_sixsfred::@24
  b24:
  //SEG527 [284] (byte~) mode_sixsfred::$25 ← (byte) keyboard_key_pressed::return#20 [ mode_sixsfred::$25 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::$25 ] )
    // (byte~) mode_sixsfred::$25 = (byte) keyboard_key_pressed::return#20  // register copy reg byte a
  //SEG528 [285] if((byte~) mode_sixsfred::$25==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_sixsfred::@8 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b8
    jmp breturn
    row_bitmask: .byte 0, $55, $aa, $ff
}
//SEG529 mode_twoplanebitmap
mode_twoplanebitmap: {
    .label PLANEA = $4000
    .label PLANEB = $6000
    .label COLORS = $8000
    .label _15 = 7
    .label col = 2
    .label cy = 4
    .label gfxa = 2
    .label ay = 4
    .label gfxb = 2
    .label by = 4
  //SEG530 [286] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_CONTROL_HIGHCOLOR_ON|DTV_CONTROL_LINEAR_ADDRESSING_ON
    sta DTV_CONTROL
  //SEG531 [287] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_ECM|VIC_BMM|VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG532 [288] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_CSEL
    sta VIC_CONTROL2
  //SEG533 [289] *((const byte*) DTV_PLANEA_START_LO#0) ← <(const byte*) mode_twoplanebitmap::PLANEA#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<PLANEA
    sta DTV_PLANEA_START_LO
  //SEG534 [290] *((const byte*) DTV_PLANEA_START_MI#0) ← >(const byte*) mode_twoplanebitmap::PLANEA#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>PLANEA
    sta DTV_PLANEA_START_MI
  //SEG535 [291] *((const byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_START_HI
  //SEG536 [292] *((const byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #1
    sta DTV_PLANEA_STEP
  //SEG537 [293] *((const byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_MODULO_LO
  //SEG538 [294] *((const byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_MODULO_HI
  //SEG539 [295] *((const byte*) DTV_PLANEB_START_LO#0) ← <(const byte*) mode_twoplanebitmap::PLANEB#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<PLANEB
    sta DTV_PLANEB_START_LO
  //SEG540 [296] *((const byte*) DTV_PLANEB_START_MI#0) ← >(const byte*) mode_twoplanebitmap::PLANEB#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>PLANEB
    sta DTV_PLANEB_START_MI
  //SEG541 [297] *((const byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_START_HI
  //SEG542 [298] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #1
    sta DTV_PLANEB_STEP
  //SEG543 [299] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_MODULO_LO
  //SEG544 [300] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_MODULO_HI
  //SEG545 [301] *((const byte*) DTV_COLOR_BANK_LO#0) ← <(const byte*) mode_twoplanebitmap::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG546 [302] *((const byte*) DTV_COLOR_BANK_HI#0) ← >(const byte*) mode_twoplanebitmap::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>COLORS/$400
    sta DTV_COLOR_BANK_HI
  //SEG547 [303] phi from mode_twoplanebitmap to mode_twoplanebitmap::@1 [phi:mode_twoplanebitmap->mode_twoplanebitmap::@1]
  b1_from_mode_twoplanebitmap:
  //SEG548 [303] phi (byte) mode_twoplanebitmap::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_twoplanebitmap->mode_twoplanebitmap::@1#0] -- vbuxx=vbuc1 
    ldx #0
    jmp b1
  //SEG549 [303] phi from mode_twoplanebitmap::@1 to mode_twoplanebitmap::@1 [phi:mode_twoplanebitmap::@1->mode_twoplanebitmap::@1]
  b1_from_b1:
  //SEG550 [303] phi (byte) mode_twoplanebitmap::i#2 = (byte) mode_twoplanebitmap::i#1 [phi:mode_twoplanebitmap::@1->mode_twoplanebitmap::@1#0] -- register_copy 
    jmp b1
  //SEG551 mode_twoplanebitmap::@1
  b1:
  //SEG552 [304] *((const byte*) DTV_PALETTE#0 + (byte) mode_twoplanebitmap::i#2) ← (byte) mode_twoplanebitmap::i#2 [ mode_twoplanebitmap::i#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::i#2 ] ) -- pbuc1_derefidx_vbuxx=vbuxx 
    txa
    sta DTV_PALETTE,x
  //SEG553 [305] (byte) mode_twoplanebitmap::i#1 ← ++ (byte) mode_twoplanebitmap::i#2 [ mode_twoplanebitmap::i#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG554 [306] if((byte) mode_twoplanebitmap::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_twoplanebitmap::@1 [ mode_twoplanebitmap::i#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne b1_from_b1
    jmp b14
  //SEG555 mode_twoplanebitmap::@14
  b14:
  //SEG556 [307] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG557 [308] *((const byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 112 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$70
    sta BGCOL1
  //SEG558 [309] *((const byte*) BGCOL2#0) ← (byte/word/signed word/dword/signed dword) 212 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$d4
    sta BGCOL2
  //SEG559 [310] phi from mode_twoplanebitmap::@14 to mode_twoplanebitmap::@2 [phi:mode_twoplanebitmap::@14->mode_twoplanebitmap::@2]
  b2_from_b14:
  //SEG560 [310] phi (byte*) mode_twoplanebitmap::col#3 = (const byte*) mode_twoplanebitmap::COLORS#0 [phi:mode_twoplanebitmap::@14->mode_twoplanebitmap::@2#0] -- pbuz1=pbuc1 
    lda #<COLORS
    sta col
    lda #>COLORS
    sta col+1
  //SEG561 [310] phi (byte) mode_twoplanebitmap::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_twoplanebitmap::@14->mode_twoplanebitmap::@2#1] -- vbuz1=vbuc1 
    lda #0
    sta cy
    jmp b2
  //SEG562 [310] phi from mode_twoplanebitmap::@15 to mode_twoplanebitmap::@2 [phi:mode_twoplanebitmap::@15->mode_twoplanebitmap::@2]
  b2_from_b15:
  //SEG563 [310] phi (byte*) mode_twoplanebitmap::col#3 = (byte*) mode_twoplanebitmap::col#1 [phi:mode_twoplanebitmap::@15->mode_twoplanebitmap::@2#0] -- register_copy 
  //SEG564 [310] phi (byte) mode_twoplanebitmap::cy#4 = (byte) mode_twoplanebitmap::cy#1 [phi:mode_twoplanebitmap::@15->mode_twoplanebitmap::@2#1] -- register_copy 
    jmp b2
  //SEG565 mode_twoplanebitmap::@2
  b2:
  //SEG566 [311] phi from mode_twoplanebitmap::@2 to mode_twoplanebitmap::@3 [phi:mode_twoplanebitmap::@2->mode_twoplanebitmap::@3]
  b3_from_b2:
  //SEG567 [311] phi (byte*) mode_twoplanebitmap::col#2 = (byte*) mode_twoplanebitmap::col#3 [phi:mode_twoplanebitmap::@2->mode_twoplanebitmap::@3#0] -- register_copy 
  //SEG568 [311] phi (byte) mode_twoplanebitmap::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_twoplanebitmap::@2->mode_twoplanebitmap::@3#1] -- vbuxx=vbuc1 
    ldx #0
    jmp b3
  //SEG569 [311] phi from mode_twoplanebitmap::@3 to mode_twoplanebitmap::@3 [phi:mode_twoplanebitmap::@3->mode_twoplanebitmap::@3]
  b3_from_b3:
  //SEG570 [311] phi (byte*) mode_twoplanebitmap::col#2 = (byte*) mode_twoplanebitmap::col#1 [phi:mode_twoplanebitmap::@3->mode_twoplanebitmap::@3#0] -- register_copy 
  //SEG571 [311] phi (byte) mode_twoplanebitmap::cx#2 = (byte) mode_twoplanebitmap::cx#1 [phi:mode_twoplanebitmap::@3->mode_twoplanebitmap::@3#1] -- register_copy 
    jmp b3
  //SEG572 mode_twoplanebitmap::@3
  b3:
  //SEG573 [312] (byte~) mode_twoplanebitmap::$14 ← (byte) mode_twoplanebitmap::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$14 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$14 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #$f
    and cy
  //SEG574 [313] (byte~) mode_twoplanebitmap::$15 ← (byte~) mode_twoplanebitmap::$14 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$15 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$15 ] ) -- vbuz1=vbuaa_rol_4 
    asl
    asl
    asl
    asl
    sta _15
  //SEG575 [314] (byte~) mode_twoplanebitmap::$16 ← (byte) mode_twoplanebitmap::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$15 mode_twoplanebitmap::$16 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$15 mode_twoplanebitmap::$16 ] ) -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #$f
  //SEG576 [315] (byte~) mode_twoplanebitmap::$17 ← (byte~) mode_twoplanebitmap::$15 | (byte~) mode_twoplanebitmap::$16 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$17 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$17 ] ) -- vbuaa=vbuz1_bor_vbuaa 
    ora _15
  //SEG577 [316] *((byte*) mode_twoplanebitmap::col#2) ← (byte~) mode_twoplanebitmap::$17 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (col),y
  //SEG578 [317] (byte*) mode_twoplanebitmap::col#1 ← ++ (byte*) mode_twoplanebitmap::col#2 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#1 mode_twoplanebitmap::cx#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#1 mode_twoplanebitmap::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG579 [318] (byte) mode_twoplanebitmap::cx#1 ← ++ (byte) mode_twoplanebitmap::cx#2 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#1 mode_twoplanebitmap::cx#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#1 mode_twoplanebitmap::cx#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG580 [319] if((byte) mode_twoplanebitmap::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_twoplanebitmap::@3 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#1 mode_twoplanebitmap::cx#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#1 mode_twoplanebitmap::cx#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b3_from_b3
    jmp b15
  //SEG581 mode_twoplanebitmap::@15
  b15:
  //SEG582 [320] (byte) mode_twoplanebitmap::cy#1 ← ++ (byte) mode_twoplanebitmap::cy#4 [ mode_twoplanebitmap::cy#1 mode_twoplanebitmap::col#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#1 mode_twoplanebitmap::col#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG583 [321] if((byte) mode_twoplanebitmap::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_twoplanebitmap::@2 [ mode_twoplanebitmap::cy#1 mode_twoplanebitmap::col#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#1 mode_twoplanebitmap::col#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2_from_b15
  //SEG584 [322] phi from mode_twoplanebitmap::@15 to mode_twoplanebitmap::@4 [phi:mode_twoplanebitmap::@15->mode_twoplanebitmap::@4]
  b4_from_b15:
  //SEG585 [322] phi (byte*) mode_twoplanebitmap::gfxa#6 = (const byte*) mode_twoplanebitmap::PLANEA#0 [phi:mode_twoplanebitmap::@15->mode_twoplanebitmap::@4#0] -- pbuz1=pbuc1 
    lda #<PLANEA
    sta gfxa
    lda #>PLANEA
    sta gfxa+1
  //SEG586 [322] phi (byte) mode_twoplanebitmap::ay#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_twoplanebitmap::@15->mode_twoplanebitmap::@4#1] -- vbuz1=vbuc1 
    lda #0
    sta ay
    jmp b4
  //SEG587 [322] phi from mode_twoplanebitmap::@19 to mode_twoplanebitmap::@4 [phi:mode_twoplanebitmap::@19->mode_twoplanebitmap::@4]
  b4_from_b19:
  //SEG588 [322] phi (byte*) mode_twoplanebitmap::gfxa#6 = (byte*) mode_twoplanebitmap::gfxa#7 [phi:mode_twoplanebitmap::@19->mode_twoplanebitmap::@4#0] -- register_copy 
  //SEG589 [322] phi (byte) mode_twoplanebitmap::ay#4 = (byte) mode_twoplanebitmap::ay#1 [phi:mode_twoplanebitmap::@19->mode_twoplanebitmap::@4#1] -- register_copy 
    jmp b4
  //SEG590 mode_twoplanebitmap::@4
  b4:
  //SEG591 [323] phi from mode_twoplanebitmap::@4 to mode_twoplanebitmap::@5 [phi:mode_twoplanebitmap::@4->mode_twoplanebitmap::@5]
  b5_from_b4:
  //SEG592 [323] phi (byte) mode_twoplanebitmap::ax#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_twoplanebitmap::@4->mode_twoplanebitmap::@5#0] -- vbuxx=vbuc1 
    ldx #0
  //SEG593 [323] phi (byte*) mode_twoplanebitmap::gfxa#3 = (byte*) mode_twoplanebitmap::gfxa#6 [phi:mode_twoplanebitmap::@4->mode_twoplanebitmap::@5#1] -- register_copy 
    jmp b5
  //SEG594 [323] phi from mode_twoplanebitmap::@7 to mode_twoplanebitmap::@5 [phi:mode_twoplanebitmap::@7->mode_twoplanebitmap::@5]
  b5_from_b7:
  //SEG595 [323] phi (byte) mode_twoplanebitmap::ax#2 = (byte) mode_twoplanebitmap::ax#1 [phi:mode_twoplanebitmap::@7->mode_twoplanebitmap::@5#0] -- register_copy 
  //SEG596 [323] phi (byte*) mode_twoplanebitmap::gfxa#3 = (byte*) mode_twoplanebitmap::gfxa#7 [phi:mode_twoplanebitmap::@7->mode_twoplanebitmap::@5#1] -- register_copy 
    jmp b5
  //SEG597 mode_twoplanebitmap::@5
  b5:
  //SEG598 [324] (byte~) mode_twoplanebitmap::$20 ← (byte) mode_twoplanebitmap::ay#4 & (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::$20 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::$20 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #4
    and ay
  //SEG599 [325] if((byte~) mode_twoplanebitmap::$20!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_twoplanebitmap::@6 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ) -- vbuaa_neq_0_then_la1 
    cmp #0
    bne b6
    jmp b17
  //SEG600 mode_twoplanebitmap::@17
  b17:
  //SEG601 [326] *((byte*) mode_twoplanebitmap::gfxa#3) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #0
    ldy #0
    sta (gfxa),y
  //SEG602 [327] (byte*) mode_twoplanebitmap::gfxa#2 ← ++ (byte*) mode_twoplanebitmap::gfxa#3 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::gfxa#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::gfxa#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxa
    bne !+
    inc gfxa+1
  !:
  //SEG603 [328] phi from mode_twoplanebitmap::@17 mode_twoplanebitmap::@6 to mode_twoplanebitmap::@7 [phi:mode_twoplanebitmap::@17/mode_twoplanebitmap::@6->mode_twoplanebitmap::@7]
  b7_from_b17:
  b7_from_b6:
  //SEG604 [328] phi (byte*) mode_twoplanebitmap::gfxa#7 = (byte*) mode_twoplanebitmap::gfxa#2 [phi:mode_twoplanebitmap::@17/mode_twoplanebitmap::@6->mode_twoplanebitmap::@7#0] -- register_copy 
    jmp b7
  //SEG605 mode_twoplanebitmap::@7
  b7:
  //SEG606 [329] (byte) mode_twoplanebitmap::ax#1 ← ++ (byte) mode_twoplanebitmap::ax#2 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::ax#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::ax#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG607 [330] if((byte) mode_twoplanebitmap::ax#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_twoplanebitmap::@5 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::ax#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::ax#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b5_from_b7
    jmp b19
  //SEG608 mode_twoplanebitmap::@19
  b19:
  //SEG609 [331] (byte) mode_twoplanebitmap::ay#1 ← ++ (byte) mode_twoplanebitmap::ay#4 [ mode_twoplanebitmap::ay#1 mode_twoplanebitmap::gfxa#7 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#1 mode_twoplanebitmap::gfxa#7 ] ) -- vbuz1=_inc_vbuz1 
    inc ay
  //SEG610 [332] if((byte) mode_twoplanebitmap::ay#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_twoplanebitmap::@4 [ mode_twoplanebitmap::ay#1 mode_twoplanebitmap::gfxa#7 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#1 mode_twoplanebitmap::gfxa#7 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda ay
    cmp #$c8
    bne b4_from_b19
  //SEG611 [333] phi from mode_twoplanebitmap::@19 to mode_twoplanebitmap::@8 [phi:mode_twoplanebitmap::@19->mode_twoplanebitmap::@8]
  b8_from_b19:
  //SEG612 [333] phi (byte) mode_twoplanebitmap::by#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_twoplanebitmap::@19->mode_twoplanebitmap::@8#0] -- vbuz1=vbuc1 
    lda #0
    sta by
  //SEG613 [333] phi (byte*) mode_twoplanebitmap::gfxb#3 = (const byte*) mode_twoplanebitmap::PLANEB#0 [phi:mode_twoplanebitmap::@19->mode_twoplanebitmap::@8#1] -- pbuz1=pbuc1 
    lda #<PLANEB
    sta gfxb
    lda #>PLANEB
    sta gfxb+1
    jmp b8
  //SEG614 [333] phi from mode_twoplanebitmap::@21 to mode_twoplanebitmap::@8 [phi:mode_twoplanebitmap::@21->mode_twoplanebitmap::@8]
  b8_from_b21:
  //SEG615 [333] phi (byte) mode_twoplanebitmap::by#4 = (byte) mode_twoplanebitmap::by#1 [phi:mode_twoplanebitmap::@21->mode_twoplanebitmap::@8#0] -- register_copy 
  //SEG616 [333] phi (byte*) mode_twoplanebitmap::gfxb#3 = (byte*) mode_twoplanebitmap::gfxb#1 [phi:mode_twoplanebitmap::@21->mode_twoplanebitmap::@8#1] -- register_copy 
    jmp b8
  //SEG617 mode_twoplanebitmap::@8
  b8:
  //SEG618 [334] phi from mode_twoplanebitmap::@8 to mode_twoplanebitmap::@9 [phi:mode_twoplanebitmap::@8->mode_twoplanebitmap::@9]
  b9_from_b8:
  //SEG619 [334] phi (byte) mode_twoplanebitmap::bx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_twoplanebitmap::@8->mode_twoplanebitmap::@9#0] -- vbuxx=vbuc1 
    ldx #0
  //SEG620 [334] phi (byte*) mode_twoplanebitmap::gfxb#2 = (byte*) mode_twoplanebitmap::gfxb#3 [phi:mode_twoplanebitmap::@8->mode_twoplanebitmap::@9#1] -- register_copy 
    jmp b9
  //SEG621 [334] phi from mode_twoplanebitmap::@9 to mode_twoplanebitmap::@9 [phi:mode_twoplanebitmap::@9->mode_twoplanebitmap::@9]
  b9_from_b9:
  //SEG622 [334] phi (byte) mode_twoplanebitmap::bx#2 = (byte) mode_twoplanebitmap::bx#1 [phi:mode_twoplanebitmap::@9->mode_twoplanebitmap::@9#0] -- register_copy 
  //SEG623 [334] phi (byte*) mode_twoplanebitmap::gfxb#2 = (byte*) mode_twoplanebitmap::gfxb#1 [phi:mode_twoplanebitmap::@9->mode_twoplanebitmap::@9#1] -- register_copy 
    jmp b9
  //SEG624 mode_twoplanebitmap::@9
  b9:
  //SEG625 [335] *((byte*) mode_twoplanebitmap::gfxb#2) ← (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::bx#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::bx#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #$f
    ldy #0
    sta (gfxb),y
  //SEG626 [336] (byte*) mode_twoplanebitmap::gfxb#1 ← ++ (byte*) mode_twoplanebitmap::gfxb#2 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::bx#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::bx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxb
    bne !+
    inc gfxb+1
  !:
  //SEG627 [337] (byte) mode_twoplanebitmap::bx#1 ← ++ (byte) mode_twoplanebitmap::bx#2 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::bx#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::bx#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG628 [338] if((byte) mode_twoplanebitmap::bx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_twoplanebitmap::@9 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::bx#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::bx#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b9_from_b9
    jmp b21
  //SEG629 mode_twoplanebitmap::@21
  b21:
  //SEG630 [339] (byte) mode_twoplanebitmap::by#1 ← ++ (byte) mode_twoplanebitmap::by#4 [ mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::by#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::by#1 ] ) -- vbuz1=_inc_vbuz1 
    inc by
  //SEG631 [340] if((byte) mode_twoplanebitmap::by#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_twoplanebitmap::@8 [ mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::by#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::by#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda by
    cmp #$c8
    bne b8_from_b21
    jmp b10
  //SEG632 mode_twoplanebitmap::@10
  b10:
  //SEG633 [341] if(true) goto mode_twoplanebitmap::@11 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- true_then_la1 
    jmp b11_from_b10
    jmp breturn
  //SEG634 mode_twoplanebitmap::@return
  breturn:
  //SEG635 [342] return  [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
    rts
  //SEG636 [343] phi from mode_twoplanebitmap::@10 to mode_twoplanebitmap::@11 [phi:mode_twoplanebitmap::@10->mode_twoplanebitmap::@11]
  b11_from_b10:
    jmp b11
  //SEG637 mode_twoplanebitmap::@11
  b11:
  //SEG638 [344] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ keyboard_key_pressed::return#0 ] )
  //SEG639 [153] phi from mode_twoplanebitmap::@11 to keyboard_key_pressed [phi:mode_twoplanebitmap::@11->keyboard_key_pressed]
  keyboard_key_pressed_from_b11:
  //SEG640 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_twoplanebitmap::@11->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_SPACE
    jsr keyboard_key_pressed
  //SEG641 [345] (byte) keyboard_key_pressed::return#19 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#19 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ keyboard_key_pressed::return#19 ] )
    // (byte) keyboard_key_pressed::return#19 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
    jmp b28
  //SEG642 mode_twoplanebitmap::@28
  b28:
  //SEG643 [346] (byte~) mode_twoplanebitmap::$27 ← (byte) keyboard_key_pressed::return#19 [ mode_twoplanebitmap::$27 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::$27 ] )
    // (byte~) mode_twoplanebitmap::$27 = (byte) keyboard_key_pressed::return#19  // register copy reg byte a
  //SEG644 [347] if((byte~) mode_twoplanebitmap::$27==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_twoplanebitmap::@10 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b10
    jmp breturn
  //SEG645 mode_twoplanebitmap::@6
  b6:
  //SEG646 [348] *((byte*) mode_twoplanebitmap::gfxa#3) ← (byte/word/signed word/dword/signed dword) 255 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #$ff
    ldy #0
    sta (gfxa),y
  //SEG647 [349] (byte*) mode_twoplanebitmap::gfxa#1 ← ++ (byte*) mode_twoplanebitmap::gfxa#3 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::gfxa#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::gfxa#1 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxa
    bne !+
    inc gfxa+1
  !:
    jmp b7_from_b6
}
//SEG648 mode_sixsfred2
mode_sixsfred2: {
    .label PLANEA = $4000
    .label PLANEB = $6000
    .label COLORS = $8000
    .label _15 = 7
    .label col = 2
    .label cy = 4
    .label gfxa = 2
    .label ay = 4
    .label gfxb = 2
    .label by = 4
  //SEG649 [350] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_CONTROL_LINEAR_ADDRESSING_ON
    sta DTV_CONTROL
  //SEG650 [351] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_ECM|VIC_BMM|VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG651 [352] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_MCM|VIC_CSEL
    sta VIC_CONTROL2
  //SEG652 [353] *((const byte*) DTV_PLANEA_START_LO#0) ← <(const byte*) mode_sixsfred2::PLANEA#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<PLANEA
    sta DTV_PLANEA_START_LO
  //SEG653 [354] *((const byte*) DTV_PLANEA_START_MI#0) ← >(const byte*) mode_sixsfred2::PLANEA#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>PLANEA
    sta DTV_PLANEA_START_MI
  //SEG654 [355] *((const byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_START_HI
  //SEG655 [356] *((const byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #1
    sta DTV_PLANEA_STEP
  //SEG656 [357] *((const byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_MODULO_LO
  //SEG657 [358] *((const byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_MODULO_HI
  //SEG658 [359] *((const byte*) DTV_PLANEB_START_LO#0) ← <(const byte*) mode_sixsfred2::PLANEB#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<PLANEB
    sta DTV_PLANEB_START_LO
  //SEG659 [360] *((const byte*) DTV_PLANEB_START_MI#0) ← >(const byte*) mode_sixsfred2::PLANEB#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>PLANEB
    sta DTV_PLANEB_START_MI
  //SEG660 [361] *((const byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_START_HI
  //SEG661 [362] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #1
    sta DTV_PLANEB_STEP
  //SEG662 [363] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_MODULO_LO
  //SEG663 [364] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_MODULO_HI
  //SEG664 [365] *((const byte*) DTV_COLOR_BANK_LO#0) ← <(const byte*) mode_sixsfred2::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG665 [366] *((const byte*) DTV_COLOR_BANK_HI#0) ← >(const byte*) mode_sixsfred2::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>COLORS/$400
    sta DTV_COLOR_BANK_HI
  //SEG666 [367] phi from mode_sixsfred2 to mode_sixsfred2::@1 [phi:mode_sixsfred2->mode_sixsfred2::@1]
  b1_from_mode_sixsfred2:
  //SEG667 [367] phi (byte) mode_sixsfred2::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred2->mode_sixsfred2::@1#0] -- vbuxx=vbuc1 
    ldx #0
    jmp b1
  //SEG668 [367] phi from mode_sixsfred2::@1 to mode_sixsfred2::@1 [phi:mode_sixsfred2::@1->mode_sixsfred2::@1]
  b1_from_b1:
  //SEG669 [367] phi (byte) mode_sixsfred2::i#2 = (byte) mode_sixsfred2::i#1 [phi:mode_sixsfred2::@1->mode_sixsfred2::@1#0] -- register_copy 
    jmp b1
  //SEG670 mode_sixsfred2::@1
  b1:
  //SEG671 [368] *((const byte*) DTV_PALETTE#0 + (byte) mode_sixsfred2::i#2) ← (byte) mode_sixsfred2::i#2 [ mode_sixsfred2::i#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::i#2 ] ) -- pbuc1_derefidx_vbuxx=vbuxx 
    txa
    sta DTV_PALETTE,x
  //SEG672 [369] (byte) mode_sixsfred2::i#1 ← ++ (byte) mode_sixsfred2::i#2 [ mode_sixsfred2::i#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG673 [370] if((byte) mode_sixsfred2::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_sixsfred2::@1 [ mode_sixsfred2::i#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne b1_from_b1
    jmp b12
  //SEG674 mode_sixsfred2::@12
  b12:
  //SEG675 [371] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG676 [372] phi from mode_sixsfred2::@12 to mode_sixsfred2::@2 [phi:mode_sixsfred2::@12->mode_sixsfred2::@2]
  b2_from_b12:
  //SEG677 [372] phi (byte*) mode_sixsfred2::col#3 = (const byte*) mode_sixsfred2::COLORS#0 [phi:mode_sixsfred2::@12->mode_sixsfred2::@2#0] -- pbuz1=pbuc1 
    lda #<COLORS
    sta col
    lda #>COLORS
    sta col+1
  //SEG678 [372] phi (byte) mode_sixsfred2::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred2::@12->mode_sixsfred2::@2#1] -- vbuz1=vbuc1 
    lda #0
    sta cy
    jmp b2
  //SEG679 [372] phi from mode_sixsfred2::@13 to mode_sixsfred2::@2 [phi:mode_sixsfred2::@13->mode_sixsfred2::@2]
  b2_from_b13:
  //SEG680 [372] phi (byte*) mode_sixsfred2::col#3 = (byte*) mode_sixsfred2::col#1 [phi:mode_sixsfred2::@13->mode_sixsfred2::@2#0] -- register_copy 
  //SEG681 [372] phi (byte) mode_sixsfred2::cy#4 = (byte) mode_sixsfred2::cy#1 [phi:mode_sixsfred2::@13->mode_sixsfred2::@2#1] -- register_copy 
    jmp b2
  //SEG682 mode_sixsfred2::@2
  b2:
  //SEG683 [373] phi from mode_sixsfred2::@2 to mode_sixsfred2::@3 [phi:mode_sixsfred2::@2->mode_sixsfred2::@3]
  b3_from_b2:
  //SEG684 [373] phi (byte*) mode_sixsfred2::col#2 = (byte*) mode_sixsfred2::col#3 [phi:mode_sixsfred2::@2->mode_sixsfred2::@3#0] -- register_copy 
  //SEG685 [373] phi (byte) mode_sixsfred2::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred2::@2->mode_sixsfred2::@3#1] -- vbuxx=vbuc1 
    ldx #0
    jmp b3
  //SEG686 [373] phi from mode_sixsfred2::@3 to mode_sixsfred2::@3 [phi:mode_sixsfred2::@3->mode_sixsfred2::@3]
  b3_from_b3:
  //SEG687 [373] phi (byte*) mode_sixsfred2::col#2 = (byte*) mode_sixsfred2::col#1 [phi:mode_sixsfred2::@3->mode_sixsfred2::@3#0] -- register_copy 
  //SEG688 [373] phi (byte) mode_sixsfred2::cx#2 = (byte) mode_sixsfred2::cx#1 [phi:mode_sixsfred2::@3->mode_sixsfred2::@3#1] -- register_copy 
    jmp b3
  //SEG689 mode_sixsfred2::@3
  b3:
  //SEG690 [374] (byte~) mode_sixsfred2::$14 ← (byte) mode_sixsfred2::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 3 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$14 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$14 ] ) -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #3
  //SEG691 [375] (byte~) mode_sixsfred2::$15 ← (byte~) mode_sixsfred2::$14 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$15 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$15 ] ) -- vbuz1=vbuaa_rol_4 
    asl
    asl
    asl
    asl
    sta _15
  //SEG692 [376] (byte~) mode_sixsfred2::$16 ← (byte) mode_sixsfred2::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 3 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$15 mode_sixsfred2::$16 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$15 mode_sixsfred2::$16 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #3
    and cy
  //SEG693 [377] (byte~) mode_sixsfred2::$17 ← (byte~) mode_sixsfred2::$15 | (byte~) mode_sixsfred2::$16 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$17 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$17 ] ) -- vbuaa=vbuz1_bor_vbuaa 
    ora _15
  //SEG694 [378] *((byte*) mode_sixsfred2::col#2) ← (byte~) mode_sixsfred2::$17 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (col),y
  //SEG695 [379] (byte*) mode_sixsfred2::col#1 ← ++ (byte*) mode_sixsfred2::col#2 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#1 mode_sixsfred2::cx#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#1 mode_sixsfred2::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG696 [380] (byte) mode_sixsfred2::cx#1 ← ++ (byte) mode_sixsfred2::cx#2 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#1 mode_sixsfred2::cx#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#1 mode_sixsfred2::cx#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG697 [381] if((byte) mode_sixsfred2::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred2::@3 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#1 mode_sixsfred2::cx#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#1 mode_sixsfred2::cx#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b3_from_b3
    jmp b13
  //SEG698 mode_sixsfred2::@13
  b13:
  //SEG699 [382] (byte) mode_sixsfred2::cy#1 ← ++ (byte) mode_sixsfred2::cy#4 [ mode_sixsfred2::cy#1 mode_sixsfred2::col#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#1 mode_sixsfred2::col#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG700 [383] if((byte) mode_sixsfred2::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_sixsfred2::@2 [ mode_sixsfred2::cy#1 mode_sixsfred2::col#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#1 mode_sixsfred2::col#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2_from_b13
  //SEG701 [384] phi from mode_sixsfred2::@13 to mode_sixsfred2::@4 [phi:mode_sixsfred2::@13->mode_sixsfred2::@4]
  b4_from_b13:
  //SEG702 [384] phi (byte*) mode_sixsfred2::gfxa#3 = (const byte*) mode_sixsfred2::PLANEA#0 [phi:mode_sixsfred2::@13->mode_sixsfred2::@4#0] -- pbuz1=pbuc1 
    lda #<PLANEA
    sta gfxa
    lda #>PLANEA
    sta gfxa+1
  //SEG703 [384] phi (byte) mode_sixsfred2::ay#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred2::@13->mode_sixsfred2::@4#1] -- vbuz1=vbuc1 
    lda #0
    sta ay
    jmp b4
  //SEG704 [384] phi from mode_sixsfred2::@15 to mode_sixsfred2::@4 [phi:mode_sixsfred2::@15->mode_sixsfred2::@4]
  b4_from_b15:
  //SEG705 [384] phi (byte*) mode_sixsfred2::gfxa#3 = (byte*) mode_sixsfred2::gfxa#1 [phi:mode_sixsfred2::@15->mode_sixsfred2::@4#0] -- register_copy 
  //SEG706 [384] phi (byte) mode_sixsfred2::ay#4 = (byte) mode_sixsfred2::ay#1 [phi:mode_sixsfred2::@15->mode_sixsfred2::@4#1] -- register_copy 
    jmp b4
  //SEG707 mode_sixsfred2::@4
  b4:
  //SEG708 [385] phi from mode_sixsfred2::@4 to mode_sixsfred2::@5 [phi:mode_sixsfred2::@4->mode_sixsfred2::@5]
  b5_from_b4:
  //SEG709 [385] phi (byte) mode_sixsfred2::ax#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred2::@4->mode_sixsfred2::@5#0] -- vbuxx=vbuc1 
    ldx #0
  //SEG710 [385] phi (byte*) mode_sixsfred2::gfxa#2 = (byte*) mode_sixsfred2::gfxa#3 [phi:mode_sixsfred2::@4->mode_sixsfred2::@5#1] -- register_copy 
    jmp b5
  //SEG711 [385] phi from mode_sixsfred2::@5 to mode_sixsfred2::@5 [phi:mode_sixsfred2::@5->mode_sixsfred2::@5]
  b5_from_b5:
  //SEG712 [385] phi (byte) mode_sixsfred2::ax#2 = (byte) mode_sixsfred2::ax#1 [phi:mode_sixsfred2::@5->mode_sixsfred2::@5#0] -- register_copy 
  //SEG713 [385] phi (byte*) mode_sixsfred2::gfxa#2 = (byte*) mode_sixsfred2::gfxa#1 [phi:mode_sixsfred2::@5->mode_sixsfred2::@5#1] -- register_copy 
    jmp b5
  //SEG714 mode_sixsfred2::@5
  b5:
  //SEG715 [386] (byte~) mode_sixsfred2::$20 ← (byte) mode_sixsfred2::ay#4 >> (byte/signed byte/word/signed word/dword/signed dword) 1 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 mode_sixsfred2::$20 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 mode_sixsfred2::$20 ] ) -- vbuaa=vbuz1_ror_1 
    lda ay
    lsr
  //SEG716 [387] (byte) mode_sixsfred2::row#0 ← (byte~) mode_sixsfred2::$20 & (byte/signed byte/word/signed word/dword/signed dword) 3 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 mode_sixsfred2::row#0 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 mode_sixsfred2::row#0 ] ) -- vbuaa=vbuaa_band_vbuc1 
    and #3
  //SEG717 [388] *((byte*) mode_sixsfred2::gfxa#2) ← *((const byte[]) mode_sixsfred2::row_bitmask#0 + (byte) mode_sixsfred2::row#0) [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 ] ) -- _deref_pbuz1=pbuc1_derefidx_vbuaa 
    tay
    lda row_bitmask,y
    ldy #0
    sta (gfxa),y
  //SEG718 [389] (byte*) mode_sixsfred2::gfxa#1 ← ++ (byte*) mode_sixsfred2::gfxa#2 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#1 mode_sixsfred2::ax#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#1 mode_sixsfred2::ax#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxa
    bne !+
    inc gfxa+1
  !:
  //SEG719 [390] (byte) mode_sixsfred2::ax#1 ← ++ (byte) mode_sixsfred2::ax#2 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#1 mode_sixsfred2::ax#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#1 mode_sixsfred2::ax#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG720 [391] if((byte) mode_sixsfred2::ax#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred2::@5 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#1 mode_sixsfred2::ax#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#1 mode_sixsfred2::ax#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b5_from_b5
    jmp b15
  //SEG721 mode_sixsfred2::@15
  b15:
  //SEG722 [392] (byte) mode_sixsfred2::ay#1 ← ++ (byte) mode_sixsfred2::ay#4 [ mode_sixsfred2::ay#1 mode_sixsfred2::gfxa#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#1 mode_sixsfred2::gfxa#1 ] ) -- vbuz1=_inc_vbuz1 
    inc ay
  //SEG723 [393] if((byte) mode_sixsfred2::ay#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_sixsfred2::@4 [ mode_sixsfred2::ay#1 mode_sixsfred2::gfxa#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#1 mode_sixsfred2::gfxa#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda ay
    cmp #$c8
    bne b4_from_b15
  //SEG724 [394] phi from mode_sixsfred2::@15 to mode_sixsfred2::@6 [phi:mode_sixsfred2::@15->mode_sixsfred2::@6]
  b6_from_b15:
  //SEG725 [394] phi (byte) mode_sixsfred2::by#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred2::@15->mode_sixsfred2::@6#0] -- vbuz1=vbuc1 
    lda #0
    sta by
  //SEG726 [394] phi (byte*) mode_sixsfred2::gfxb#3 = (const byte*) mode_sixsfred2::PLANEB#0 [phi:mode_sixsfred2::@15->mode_sixsfred2::@6#1] -- pbuz1=pbuc1 
    lda #<PLANEB
    sta gfxb
    lda #>PLANEB
    sta gfxb+1
    jmp b6
  //SEG727 [394] phi from mode_sixsfred2::@17 to mode_sixsfred2::@6 [phi:mode_sixsfred2::@17->mode_sixsfred2::@6]
  b6_from_b17:
  //SEG728 [394] phi (byte) mode_sixsfred2::by#4 = (byte) mode_sixsfred2::by#1 [phi:mode_sixsfred2::@17->mode_sixsfred2::@6#0] -- register_copy 
  //SEG729 [394] phi (byte*) mode_sixsfred2::gfxb#3 = (byte*) mode_sixsfred2::gfxb#1 [phi:mode_sixsfred2::@17->mode_sixsfred2::@6#1] -- register_copy 
    jmp b6
  //SEG730 mode_sixsfred2::@6
  b6:
  //SEG731 [395] phi from mode_sixsfred2::@6 to mode_sixsfred2::@7 [phi:mode_sixsfred2::@6->mode_sixsfred2::@7]
  b7_from_b6:
  //SEG732 [395] phi (byte) mode_sixsfred2::bx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred2::@6->mode_sixsfred2::@7#0] -- vbuxx=vbuc1 
    ldx #0
  //SEG733 [395] phi (byte*) mode_sixsfred2::gfxb#2 = (byte*) mode_sixsfred2::gfxb#3 [phi:mode_sixsfred2::@6->mode_sixsfred2::@7#1] -- register_copy 
    jmp b7
  //SEG734 [395] phi from mode_sixsfred2::@7 to mode_sixsfred2::@7 [phi:mode_sixsfred2::@7->mode_sixsfred2::@7]
  b7_from_b7:
  //SEG735 [395] phi (byte) mode_sixsfred2::bx#2 = (byte) mode_sixsfred2::bx#1 [phi:mode_sixsfred2::@7->mode_sixsfred2::@7#0] -- register_copy 
  //SEG736 [395] phi (byte*) mode_sixsfred2::gfxb#2 = (byte*) mode_sixsfred2::gfxb#1 [phi:mode_sixsfred2::@7->mode_sixsfred2::@7#1] -- register_copy 
    jmp b7
  //SEG737 mode_sixsfred2::@7
  b7:
  //SEG738 [396] *((byte*) mode_sixsfred2::gfxb#2) ← (byte/signed byte/word/signed word/dword/signed dword) 27 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#2 mode_sixsfred2::bx#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#2 mode_sixsfred2::bx#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #$1b
    ldy #0
    sta (gfxb),y
  //SEG739 [397] (byte*) mode_sixsfred2::gfxb#1 ← ++ (byte*) mode_sixsfred2::gfxb#2 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#1 mode_sixsfred2::bx#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#1 mode_sixsfred2::bx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxb
    bne !+
    inc gfxb+1
  !:
  //SEG740 [398] (byte) mode_sixsfred2::bx#1 ← ++ (byte) mode_sixsfred2::bx#2 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#1 mode_sixsfred2::bx#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#1 mode_sixsfred2::bx#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG741 [399] if((byte) mode_sixsfred2::bx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred2::@7 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#1 mode_sixsfred2::bx#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#1 mode_sixsfred2::bx#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b7_from_b7
    jmp b17
  //SEG742 mode_sixsfred2::@17
  b17:
  //SEG743 [400] (byte) mode_sixsfred2::by#1 ← ++ (byte) mode_sixsfred2::by#4 [ mode_sixsfred2::gfxb#1 mode_sixsfred2::by#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::gfxb#1 mode_sixsfred2::by#1 ] ) -- vbuz1=_inc_vbuz1 
    inc by
  //SEG744 [401] if((byte) mode_sixsfred2::by#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_sixsfred2::@6 [ mode_sixsfred2::gfxb#1 mode_sixsfred2::by#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::gfxb#1 mode_sixsfred2::by#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda by
    cmp #$c8
    bne b6_from_b17
    jmp b8
  //SEG745 mode_sixsfred2::@8
  b8:
  //SEG746 [402] if(true) goto mode_sixsfred2::@9 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- true_then_la1 
    jmp b9_from_b8
    jmp breturn
  //SEG747 mode_sixsfred2::@return
  breturn:
  //SEG748 [403] return  [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] )
    rts
  //SEG749 [404] phi from mode_sixsfred2::@8 to mode_sixsfred2::@9 [phi:mode_sixsfred2::@8->mode_sixsfred2::@9]
  b9_from_b8:
    jmp b9
  //SEG750 mode_sixsfred2::@9
  b9:
  //SEG751 [405] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_sixsfred2:84 [ keyboard_key_pressed::return#0 ] )
  //SEG752 [153] phi from mode_sixsfred2::@9 to keyboard_key_pressed [phi:mode_sixsfred2::@9->keyboard_key_pressed]
  keyboard_key_pressed_from_b9:
  //SEG753 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_sixsfred2::@9->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_SPACE
    jsr keyboard_key_pressed
  //SEG754 [406] (byte) keyboard_key_pressed::return#21 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#21 ] ( main:2::menu:9::mode_sixsfred2:84 [ keyboard_key_pressed::return#21 ] )
    // (byte) keyboard_key_pressed::return#21 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
    jmp b24
  //SEG755 mode_sixsfred2::@24
  b24:
  //SEG756 [407] (byte~) mode_sixsfred2::$26 ← (byte) keyboard_key_pressed::return#21 [ mode_sixsfred2::$26 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::$26 ] )
    // (byte~) mode_sixsfred2::$26 = (byte) keyboard_key_pressed::return#21  // register copy reg byte a
  //SEG757 [408] if((byte~) mode_sixsfred2::$26==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_sixsfred2::@8 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b8
    jmp breturn
    row_bitmask: .byte 0, $55, $aa, $ff
}
//SEG758 mode_hicolmcchar
mode_hicolmcchar: {
    .label SCREEN = $8000
    .label CHARSET = $9000
    .label COLORS = $8400
    .label _26 = 7
    .label col = 2
    .label ch = 5
    .label cy = 4
  //SEG759 [409] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_hicolmcchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #($ffffffff&CHARSET)/$10000
    sta DTV_GRAPHICS_VIC_BANK
  //SEG760 [410] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_hicolmcchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG761 [411] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_hicolmcchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_COLOR_BANK_HI
  //SEG762 [412] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_CONTROL_HIGHCOLOR_ON
    sta DTV_CONTROL
  //SEG763 [413] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3
    sta CIA2_PORT_A_DDR
  //SEG764 [414] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_hicolmcchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3^CHARSET/$4000
    sta CIA2_PORT_A
  //SEG765 [415] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG766 [416] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0|(const byte) VIC_MCM#0 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_CSEL|VIC_MCM
    sta VIC_CONTROL2
  //SEG767 [417] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_hicolmcchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_hicolmcchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #(SCREEN&$3fff)/$40|(CHARSET&$3fff)/$400
    sta VIC_MEMORY
  //SEG768 [418] phi from mode_hicolmcchar to mode_hicolmcchar::@1 [phi:mode_hicolmcchar->mode_hicolmcchar::@1]
  b1_from_mode_hicolmcchar:
  //SEG769 [418] phi (byte) mode_hicolmcchar::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolmcchar->mode_hicolmcchar::@1#0] -- vbuxx=vbuc1 
    ldx #0
    jmp b1
  //SEG770 [418] phi from mode_hicolmcchar::@1 to mode_hicolmcchar::@1 [phi:mode_hicolmcchar::@1->mode_hicolmcchar::@1]
  b1_from_b1:
  //SEG771 [418] phi (byte) mode_hicolmcchar::i#2 = (byte) mode_hicolmcchar::i#1 [phi:mode_hicolmcchar::@1->mode_hicolmcchar::@1#0] -- register_copy 
    jmp b1
  //SEG772 mode_hicolmcchar::@1
  b1:
  //SEG773 [419] *((const byte*) DTV_PALETTE#0 + (byte) mode_hicolmcchar::i#2) ← (byte) mode_hicolmcchar::i#2 [ mode_hicolmcchar::i#2 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::i#2 ] ) -- pbuc1_derefidx_vbuxx=vbuxx 
    txa
    sta DTV_PALETTE,x
  //SEG774 [420] (byte) mode_hicolmcchar::i#1 ← ++ (byte) mode_hicolmcchar::i#2 [ mode_hicolmcchar::i#1 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG775 [421] if((byte) mode_hicolmcchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_hicolmcchar::@1 [ mode_hicolmcchar::i#1 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne b1_from_b1
    jmp b8
  //SEG776 mode_hicolmcchar::@8
  b8:
  //SEG777 [422] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG778 [423] *((const byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 80 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$50
    sta BGCOL1
  //SEG779 [424] *((const byte*) BGCOL2#0) ← (byte/signed byte/word/signed word/dword/signed dword) 84 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$54
    sta BGCOL2
  //SEG780 [425] *((const byte*) BGCOL3#0) ← (byte/signed byte/word/signed word/dword/signed dword) 88 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$58
    sta BGCOL3
  //SEG781 [426] phi from mode_hicolmcchar::@8 to mode_hicolmcchar::@2 [phi:mode_hicolmcchar::@8->mode_hicolmcchar::@2]
  b2_from_b8:
  //SEG782 [426] phi (byte*) mode_hicolmcchar::ch#3 = (const byte*) mode_hicolmcchar::SCREEN#0 [phi:mode_hicolmcchar::@8->mode_hicolmcchar::@2#0] -- pbuz1=pbuc1 
    lda #<SCREEN
    sta ch
    lda #>SCREEN
    sta ch+1
  //SEG783 [426] phi (byte*) mode_hicolmcchar::col#3 = (const byte*) mode_hicolmcchar::COLORS#0 [phi:mode_hicolmcchar::@8->mode_hicolmcchar::@2#1] -- pbuz1=pbuc1 
    lda #<COLORS
    sta col
    lda #>COLORS
    sta col+1
  //SEG784 [426] phi (byte) mode_hicolmcchar::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolmcchar::@8->mode_hicolmcchar::@2#2] -- vbuz1=vbuc1 
    lda #0
    sta cy
    jmp b2
  //SEG785 [426] phi from mode_hicolmcchar::@9 to mode_hicolmcchar::@2 [phi:mode_hicolmcchar::@9->mode_hicolmcchar::@2]
  b2_from_b9:
  //SEG786 [426] phi (byte*) mode_hicolmcchar::ch#3 = (byte*) mode_hicolmcchar::ch#1 [phi:mode_hicolmcchar::@9->mode_hicolmcchar::@2#0] -- register_copy 
  //SEG787 [426] phi (byte*) mode_hicolmcchar::col#3 = (byte*) mode_hicolmcchar::col#1 [phi:mode_hicolmcchar::@9->mode_hicolmcchar::@2#1] -- register_copy 
  //SEG788 [426] phi (byte) mode_hicolmcchar::cy#4 = (byte) mode_hicolmcchar::cy#1 [phi:mode_hicolmcchar::@9->mode_hicolmcchar::@2#2] -- register_copy 
    jmp b2
  //SEG789 mode_hicolmcchar::@2
  b2:
  //SEG790 [427] phi from mode_hicolmcchar::@2 to mode_hicolmcchar::@3 [phi:mode_hicolmcchar::@2->mode_hicolmcchar::@3]
  b3_from_b2:
  //SEG791 [427] phi (byte*) mode_hicolmcchar::ch#2 = (byte*) mode_hicolmcchar::ch#3 [phi:mode_hicolmcchar::@2->mode_hicolmcchar::@3#0] -- register_copy 
  //SEG792 [427] phi (byte*) mode_hicolmcchar::col#2 = (byte*) mode_hicolmcchar::col#3 [phi:mode_hicolmcchar::@2->mode_hicolmcchar::@3#1] -- register_copy 
  //SEG793 [427] phi (byte) mode_hicolmcchar::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolmcchar::@2->mode_hicolmcchar::@3#2] -- vbuxx=vbuc1 
    ldx #0
    jmp b3
  //SEG794 [427] phi from mode_hicolmcchar::@3 to mode_hicolmcchar::@3 [phi:mode_hicolmcchar::@3->mode_hicolmcchar::@3]
  b3_from_b3:
  //SEG795 [427] phi (byte*) mode_hicolmcchar::ch#2 = (byte*) mode_hicolmcchar::ch#1 [phi:mode_hicolmcchar::@3->mode_hicolmcchar::@3#0] -- register_copy 
  //SEG796 [427] phi (byte*) mode_hicolmcchar::col#2 = (byte*) mode_hicolmcchar::col#1 [phi:mode_hicolmcchar::@3->mode_hicolmcchar::@3#1] -- register_copy 
  //SEG797 [427] phi (byte) mode_hicolmcchar::cx#2 = (byte) mode_hicolmcchar::cx#1 [phi:mode_hicolmcchar::@3->mode_hicolmcchar::@3#2] -- register_copy 
    jmp b3
  //SEG798 mode_hicolmcchar::@3
  b3:
  //SEG799 [428] (byte~) mode_hicolmcchar::$25 ← (byte) mode_hicolmcchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$25 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$25 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #$f
    and cy
  //SEG800 [429] (byte~) mode_hicolmcchar::$26 ← (byte~) mode_hicolmcchar::$25 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$26 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$26 ] ) -- vbuz1=vbuaa_rol_4 
    asl
    asl
    asl
    asl
    sta _26
  //SEG801 [430] (byte~) mode_hicolmcchar::$27 ← (byte) mode_hicolmcchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$26 mode_hicolmcchar::$27 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$26 mode_hicolmcchar::$27 ] ) -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #$f
  //SEG802 [431] (byte) mode_hicolmcchar::v#0 ← (byte~) mode_hicolmcchar::$26 | (byte~) mode_hicolmcchar::$27 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] ) -- vbuaa=vbuz1_bor_vbuaa 
    ora _26
  //SEG803 [432] *((byte*) mode_hicolmcchar::col#2) ← (byte) mode_hicolmcchar::v#0 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (col),y
  //SEG804 [433] (byte*) mode_hicolmcchar::col#1 ← ++ (byte*) mode_hicolmcchar::col#2 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::cx#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::cx#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG805 [434] *((byte*) mode_hicolmcchar::ch#2) ← (byte) mode_hicolmcchar::v#0 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::cx#2 mode_hicolmcchar::ch#2 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::cx#2 mode_hicolmcchar::ch#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (ch),y
  //SEG806 [435] (byte*) mode_hicolmcchar::ch#1 ← ++ (byte*) mode_hicolmcchar::ch#2 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 mode_hicolmcchar::cx#2 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 mode_hicolmcchar::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc ch
    bne !+
    inc ch+1
  !:
  //SEG807 [436] (byte) mode_hicolmcchar::cx#1 ← ++ (byte) mode_hicolmcchar::cx#2 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 mode_hicolmcchar::cx#1 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 mode_hicolmcchar::cx#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG808 [437] if((byte) mode_hicolmcchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_hicolmcchar::@3 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 mode_hicolmcchar::cx#1 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 mode_hicolmcchar::cx#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b3_from_b3
    jmp b9
  //SEG809 mode_hicolmcchar::@9
  b9:
  //SEG810 [438] (byte) mode_hicolmcchar::cy#1 ← ++ (byte) mode_hicolmcchar::cy#4 [ mode_hicolmcchar::cy#1 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#1 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG811 [439] if((byte) mode_hicolmcchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_hicolmcchar::@2 [ mode_hicolmcchar::cy#1 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#1 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2_from_b9
    jmp b4
  //SEG812 mode_hicolmcchar::@4
  b4:
  //SEG813 [440] if(true) goto mode_hicolmcchar::@5 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- true_then_la1 
    jmp b5_from_b4
    jmp breturn
  //SEG814 mode_hicolmcchar::@return
  breturn:
  //SEG815 [441] return  [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] )
    rts
  //SEG816 [442] phi from mode_hicolmcchar::@4 to mode_hicolmcchar::@5 [phi:mode_hicolmcchar::@4->mode_hicolmcchar::@5]
  b5_from_b4:
    jmp b5
  //SEG817 mode_hicolmcchar::@5
  b5:
  //SEG818 [443] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_hicolmcchar:77 [ keyboard_key_pressed::return#0 ] )
  //SEG819 [153] phi from mode_hicolmcchar::@5 to keyboard_key_pressed [phi:mode_hicolmcchar::@5->keyboard_key_pressed]
  keyboard_key_pressed_from_b5:
  //SEG820 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_hicolmcchar::@5->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_SPACE
    jsr keyboard_key_pressed
  //SEG821 [444] (byte) keyboard_key_pressed::return#18 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#18 ] ( main:2::menu:9::mode_hicolmcchar:77 [ keyboard_key_pressed::return#18 ] )
    // (byte) keyboard_key_pressed::return#18 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
    jmp b16
  //SEG822 mode_hicolmcchar::@16
  b16:
  //SEG823 [445] (byte~) mode_hicolmcchar::$31 ← (byte) keyboard_key_pressed::return#18 [ mode_hicolmcchar::$31 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::$31 ] )
    // (byte~) mode_hicolmcchar::$31 = (byte) keyboard_key_pressed::return#18  // register copy reg byte a
  //SEG824 [446] if((byte~) mode_hicolmcchar::$31==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_hicolmcchar::@4 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b4
    jmp breturn
}
//SEG825 mode_hicolecmchar
mode_hicolecmchar: {
    .label SCREEN = $8000
    .label CHARSET = $9000
    .label COLORS = $8400
    .label _26 = 7
    .label col = 2
    .label ch = 5
    .label cy = 4
  //SEG826 [447] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_hicolecmchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #($ffffffff&CHARSET)/$10000
    sta DTV_GRAPHICS_VIC_BANK
  //SEG827 [448] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_hicolecmchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG828 [449] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_hicolecmchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_COLOR_BANK_HI
  //SEG829 [450] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_CONTROL_HIGHCOLOR_ON
    sta DTV_CONTROL
  //SEG830 [451] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3
    sta CIA2_PORT_A_DDR
  //SEG831 [452] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_hicolecmchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3^CHARSET/$4000
    sta CIA2_PORT_A
  //SEG832 [453] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(const byte) VIC_ECM#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_DEN|VIC_RSEL|VIC_ECM|3
    sta VIC_CONTROL
  //SEG833 [454] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_CSEL
    sta VIC_CONTROL2
  //SEG834 [455] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_hicolecmchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_hicolecmchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #(SCREEN&$3fff)/$40|(CHARSET&$3fff)/$400
    sta VIC_MEMORY
  //SEG835 [456] phi from mode_hicolecmchar to mode_hicolecmchar::@1 [phi:mode_hicolecmchar->mode_hicolecmchar::@1]
  b1_from_mode_hicolecmchar:
  //SEG836 [456] phi (byte) mode_hicolecmchar::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolecmchar->mode_hicolecmchar::@1#0] -- vbuxx=vbuc1 
    ldx #0
    jmp b1
  //SEG837 [456] phi from mode_hicolecmchar::@1 to mode_hicolecmchar::@1 [phi:mode_hicolecmchar::@1->mode_hicolecmchar::@1]
  b1_from_b1:
  //SEG838 [456] phi (byte) mode_hicolecmchar::i#2 = (byte) mode_hicolecmchar::i#1 [phi:mode_hicolecmchar::@1->mode_hicolecmchar::@1#0] -- register_copy 
    jmp b1
  //SEG839 mode_hicolecmchar::@1
  b1:
  //SEG840 [457] *((const byte*) DTV_PALETTE#0 + (byte) mode_hicolecmchar::i#2) ← (byte) mode_hicolecmchar::i#2 [ mode_hicolecmchar::i#2 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::i#2 ] ) -- pbuc1_derefidx_vbuxx=vbuxx 
    txa
    sta DTV_PALETTE,x
  //SEG841 [458] (byte) mode_hicolecmchar::i#1 ← ++ (byte) mode_hicolecmchar::i#2 [ mode_hicolecmchar::i#1 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG842 [459] if((byte) mode_hicolecmchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_hicolecmchar::@1 [ mode_hicolecmchar::i#1 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne b1_from_b1
    jmp b8
  //SEG843 mode_hicolecmchar::@8
  b8:
  //SEG844 [460] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG845 [461] *((const byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 80 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$50
    sta BGCOL1
  //SEG846 [462] *((const byte*) BGCOL2#0) ← (byte/signed byte/word/signed word/dword/signed dword) 84 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$54
    sta BGCOL2
  //SEG847 [463] *((const byte*) BGCOL3#0) ← (byte/signed byte/word/signed word/dword/signed dword) 88 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$58
    sta BGCOL3
  //SEG848 [464] *((const byte*) BGCOL4#0) ← (byte/signed byte/word/signed word/dword/signed dword) 92 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$5c
    sta BGCOL4
  //SEG849 [465] phi from mode_hicolecmchar::@8 to mode_hicolecmchar::@2 [phi:mode_hicolecmchar::@8->mode_hicolecmchar::@2]
  b2_from_b8:
  //SEG850 [465] phi (byte*) mode_hicolecmchar::ch#3 = (const byte*) mode_hicolecmchar::SCREEN#0 [phi:mode_hicolecmchar::@8->mode_hicolecmchar::@2#0] -- pbuz1=pbuc1 
    lda #<SCREEN
    sta ch
    lda #>SCREEN
    sta ch+1
  //SEG851 [465] phi (byte*) mode_hicolecmchar::col#3 = (const byte*) mode_hicolecmchar::COLORS#0 [phi:mode_hicolecmchar::@8->mode_hicolecmchar::@2#1] -- pbuz1=pbuc1 
    lda #<COLORS
    sta col
    lda #>COLORS
    sta col+1
  //SEG852 [465] phi (byte) mode_hicolecmchar::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolecmchar::@8->mode_hicolecmchar::@2#2] -- vbuz1=vbuc1 
    lda #0
    sta cy
    jmp b2
  //SEG853 [465] phi from mode_hicolecmchar::@9 to mode_hicolecmchar::@2 [phi:mode_hicolecmchar::@9->mode_hicolecmchar::@2]
  b2_from_b9:
  //SEG854 [465] phi (byte*) mode_hicolecmchar::ch#3 = (byte*) mode_hicolecmchar::ch#1 [phi:mode_hicolecmchar::@9->mode_hicolecmchar::@2#0] -- register_copy 
  //SEG855 [465] phi (byte*) mode_hicolecmchar::col#3 = (byte*) mode_hicolecmchar::col#1 [phi:mode_hicolecmchar::@9->mode_hicolecmchar::@2#1] -- register_copy 
  //SEG856 [465] phi (byte) mode_hicolecmchar::cy#4 = (byte) mode_hicolecmchar::cy#1 [phi:mode_hicolecmchar::@9->mode_hicolecmchar::@2#2] -- register_copy 
    jmp b2
  //SEG857 mode_hicolecmchar::@2
  b2:
  //SEG858 [466] phi from mode_hicolecmchar::@2 to mode_hicolecmchar::@3 [phi:mode_hicolecmchar::@2->mode_hicolecmchar::@3]
  b3_from_b2:
  //SEG859 [466] phi (byte*) mode_hicolecmchar::ch#2 = (byte*) mode_hicolecmchar::ch#3 [phi:mode_hicolecmchar::@2->mode_hicolecmchar::@3#0] -- register_copy 
  //SEG860 [466] phi (byte*) mode_hicolecmchar::col#2 = (byte*) mode_hicolecmchar::col#3 [phi:mode_hicolecmchar::@2->mode_hicolecmchar::@3#1] -- register_copy 
  //SEG861 [466] phi (byte) mode_hicolecmchar::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolecmchar::@2->mode_hicolecmchar::@3#2] -- vbuxx=vbuc1 
    ldx #0
    jmp b3
  //SEG862 [466] phi from mode_hicolecmchar::@3 to mode_hicolecmchar::@3 [phi:mode_hicolecmchar::@3->mode_hicolecmchar::@3]
  b3_from_b3:
  //SEG863 [466] phi (byte*) mode_hicolecmchar::ch#2 = (byte*) mode_hicolecmchar::ch#1 [phi:mode_hicolecmchar::@3->mode_hicolecmchar::@3#0] -- register_copy 
  //SEG864 [466] phi (byte*) mode_hicolecmchar::col#2 = (byte*) mode_hicolecmchar::col#1 [phi:mode_hicolecmchar::@3->mode_hicolecmchar::@3#1] -- register_copy 
  //SEG865 [466] phi (byte) mode_hicolecmchar::cx#2 = (byte) mode_hicolecmchar::cx#1 [phi:mode_hicolecmchar::@3->mode_hicolecmchar::@3#2] -- register_copy 
    jmp b3
  //SEG866 mode_hicolecmchar::@3
  b3:
  //SEG867 [467] (byte~) mode_hicolecmchar::$25 ← (byte) mode_hicolecmchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$25 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$25 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #$f
    and cy
  //SEG868 [468] (byte~) mode_hicolecmchar::$26 ← (byte~) mode_hicolecmchar::$25 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$26 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$26 ] ) -- vbuz1=vbuaa_rol_4 
    asl
    asl
    asl
    asl
    sta _26
  //SEG869 [469] (byte~) mode_hicolecmchar::$27 ← (byte) mode_hicolecmchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$26 mode_hicolecmchar::$27 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$26 mode_hicolecmchar::$27 ] ) -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #$f
  //SEG870 [470] (byte) mode_hicolecmchar::v#0 ← (byte~) mode_hicolecmchar::$26 | (byte~) mode_hicolecmchar::$27 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] ) -- vbuaa=vbuz1_bor_vbuaa 
    ora _26
  //SEG871 [471] *((byte*) mode_hicolecmchar::col#2) ← (byte) mode_hicolecmchar::v#0 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (col),y
  //SEG872 [472] (byte*) mode_hicolecmchar::col#1 ← ++ (byte*) mode_hicolecmchar::col#2 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::cx#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::cx#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG873 [473] *((byte*) mode_hicolecmchar::ch#2) ← (byte) mode_hicolecmchar::v#0 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::cx#2 mode_hicolecmchar::ch#2 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::cx#2 mode_hicolecmchar::ch#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (ch),y
  //SEG874 [474] (byte*) mode_hicolecmchar::ch#1 ← ++ (byte*) mode_hicolecmchar::ch#2 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 mode_hicolecmchar::cx#2 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 mode_hicolecmchar::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc ch
    bne !+
    inc ch+1
  !:
  //SEG875 [475] (byte) mode_hicolecmchar::cx#1 ← ++ (byte) mode_hicolecmchar::cx#2 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 mode_hicolecmchar::cx#1 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 mode_hicolecmchar::cx#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG876 [476] if((byte) mode_hicolecmchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_hicolecmchar::@3 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 mode_hicolecmchar::cx#1 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 mode_hicolecmchar::cx#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b3_from_b3
    jmp b9
  //SEG877 mode_hicolecmchar::@9
  b9:
  //SEG878 [477] (byte) mode_hicolecmchar::cy#1 ← ++ (byte) mode_hicolecmchar::cy#4 [ mode_hicolecmchar::cy#1 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#1 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG879 [478] if((byte) mode_hicolecmchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_hicolecmchar::@2 [ mode_hicolecmchar::cy#1 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#1 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2_from_b9
    jmp b4
  //SEG880 mode_hicolecmchar::@4
  b4:
  //SEG881 [479] if(true) goto mode_hicolecmchar::@5 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- true_then_la1 
    jmp b5_from_b4
    jmp breturn
  //SEG882 mode_hicolecmchar::@return
  breturn:
  //SEG883 [480] return  [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] )
    rts
  //SEG884 [481] phi from mode_hicolecmchar::@4 to mode_hicolecmchar::@5 [phi:mode_hicolecmchar::@4->mode_hicolecmchar::@5]
  b5_from_b4:
    jmp b5
  //SEG885 mode_hicolecmchar::@5
  b5:
  //SEG886 [482] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_hicolecmchar:70 [ keyboard_key_pressed::return#0 ] )
  //SEG887 [153] phi from mode_hicolecmchar::@5 to keyboard_key_pressed [phi:mode_hicolecmchar::@5->keyboard_key_pressed]
  keyboard_key_pressed_from_b5:
  //SEG888 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_hicolecmchar::@5->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_SPACE
    jsr keyboard_key_pressed
  //SEG889 [483] (byte) keyboard_key_pressed::return#17 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#17 ] ( main:2::menu:9::mode_hicolecmchar:70 [ keyboard_key_pressed::return#17 ] )
    // (byte) keyboard_key_pressed::return#17 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
    jmp b16
  //SEG890 mode_hicolecmchar::@16
  b16:
  //SEG891 [484] (byte~) mode_hicolecmchar::$31 ← (byte) keyboard_key_pressed::return#17 [ mode_hicolecmchar::$31 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::$31 ] )
    // (byte~) mode_hicolecmchar::$31 = (byte) keyboard_key_pressed::return#17  // register copy reg byte a
  //SEG892 [485] if((byte~) mode_hicolecmchar::$31==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_hicolecmchar::@4 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b4
    jmp breturn
}
//SEG893 mode_hicolstdchar
mode_hicolstdchar: {
    .label SCREEN = $8000
    .label CHARSET = $9000
    .label COLORS = $8400
    .label _25 = 7
    .label col = 2
    .label ch = 5
    .label cy = 4
  //SEG894 [486] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_hicolstdchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #($ffffffff&CHARSET)/$10000
    sta DTV_GRAPHICS_VIC_BANK
  //SEG895 [487] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_hicolstdchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG896 [488] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_hicolstdchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_COLOR_BANK_HI
  //SEG897 [489] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_CONTROL_HIGHCOLOR_ON
    sta DTV_CONTROL
  //SEG898 [490] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3
    sta CIA2_PORT_A_DDR
  //SEG899 [491] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_hicolstdchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3^CHARSET/$4000
    sta CIA2_PORT_A
  //SEG900 [492] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG901 [493] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_CSEL
    sta VIC_CONTROL2
  //SEG902 [494] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_hicolstdchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_hicolstdchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #(SCREEN&$3fff)/$40|(CHARSET&$3fff)/$400
    sta VIC_MEMORY
  //SEG903 [495] phi from mode_hicolstdchar to mode_hicolstdchar::@1 [phi:mode_hicolstdchar->mode_hicolstdchar::@1]
  b1_from_mode_hicolstdchar:
  //SEG904 [495] phi (byte) mode_hicolstdchar::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolstdchar->mode_hicolstdchar::@1#0] -- vbuxx=vbuc1 
    ldx #0
    jmp b1
  //SEG905 [495] phi from mode_hicolstdchar::@1 to mode_hicolstdchar::@1 [phi:mode_hicolstdchar::@1->mode_hicolstdchar::@1]
  b1_from_b1:
  //SEG906 [495] phi (byte) mode_hicolstdchar::i#2 = (byte) mode_hicolstdchar::i#1 [phi:mode_hicolstdchar::@1->mode_hicolstdchar::@1#0] -- register_copy 
    jmp b1
  //SEG907 mode_hicolstdchar::@1
  b1:
  //SEG908 [496] *((const byte*) DTV_PALETTE#0 + (byte) mode_hicolstdchar::i#2) ← (byte) mode_hicolstdchar::i#2 [ mode_hicolstdchar::i#2 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::i#2 ] ) -- pbuc1_derefidx_vbuxx=vbuxx 
    txa
    sta DTV_PALETTE,x
  //SEG909 [497] (byte) mode_hicolstdchar::i#1 ← ++ (byte) mode_hicolstdchar::i#2 [ mode_hicolstdchar::i#1 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG910 [498] if((byte) mode_hicolstdchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_hicolstdchar::@1 [ mode_hicolstdchar::i#1 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne b1_from_b1
    jmp b8
  //SEG911 mode_hicolstdchar::@8
  b8:
  //SEG912 [499] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BGCOL
  //SEG913 [500] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG914 [501] phi from mode_hicolstdchar::@8 to mode_hicolstdchar::@2 [phi:mode_hicolstdchar::@8->mode_hicolstdchar::@2]
  b2_from_b8:
  //SEG915 [501] phi (byte*) mode_hicolstdchar::ch#3 = (const byte*) mode_hicolstdchar::SCREEN#0 [phi:mode_hicolstdchar::@8->mode_hicolstdchar::@2#0] -- pbuz1=pbuc1 
    lda #<SCREEN
    sta ch
    lda #>SCREEN
    sta ch+1
  //SEG916 [501] phi (byte*) mode_hicolstdchar::col#3 = (const byte*) mode_hicolstdchar::COLORS#0 [phi:mode_hicolstdchar::@8->mode_hicolstdchar::@2#1] -- pbuz1=pbuc1 
    lda #<COLORS
    sta col
    lda #>COLORS
    sta col+1
  //SEG917 [501] phi (byte) mode_hicolstdchar::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolstdchar::@8->mode_hicolstdchar::@2#2] -- vbuz1=vbuc1 
    lda #0
    sta cy
    jmp b2
  //SEG918 [501] phi from mode_hicolstdchar::@9 to mode_hicolstdchar::@2 [phi:mode_hicolstdchar::@9->mode_hicolstdchar::@2]
  b2_from_b9:
  //SEG919 [501] phi (byte*) mode_hicolstdchar::ch#3 = (byte*) mode_hicolstdchar::ch#1 [phi:mode_hicolstdchar::@9->mode_hicolstdchar::@2#0] -- register_copy 
  //SEG920 [501] phi (byte*) mode_hicolstdchar::col#3 = (byte*) mode_hicolstdchar::col#1 [phi:mode_hicolstdchar::@9->mode_hicolstdchar::@2#1] -- register_copy 
  //SEG921 [501] phi (byte) mode_hicolstdchar::cy#4 = (byte) mode_hicolstdchar::cy#1 [phi:mode_hicolstdchar::@9->mode_hicolstdchar::@2#2] -- register_copy 
    jmp b2
  //SEG922 mode_hicolstdchar::@2
  b2:
  //SEG923 [502] phi from mode_hicolstdchar::@2 to mode_hicolstdchar::@3 [phi:mode_hicolstdchar::@2->mode_hicolstdchar::@3]
  b3_from_b2:
  //SEG924 [502] phi (byte*) mode_hicolstdchar::ch#2 = (byte*) mode_hicolstdchar::ch#3 [phi:mode_hicolstdchar::@2->mode_hicolstdchar::@3#0] -- register_copy 
  //SEG925 [502] phi (byte*) mode_hicolstdchar::col#2 = (byte*) mode_hicolstdchar::col#3 [phi:mode_hicolstdchar::@2->mode_hicolstdchar::@3#1] -- register_copy 
  //SEG926 [502] phi (byte) mode_hicolstdchar::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolstdchar::@2->mode_hicolstdchar::@3#2] -- vbuxx=vbuc1 
    ldx #0
    jmp b3
  //SEG927 [502] phi from mode_hicolstdchar::@3 to mode_hicolstdchar::@3 [phi:mode_hicolstdchar::@3->mode_hicolstdchar::@3]
  b3_from_b3:
  //SEG928 [502] phi (byte*) mode_hicolstdchar::ch#2 = (byte*) mode_hicolstdchar::ch#1 [phi:mode_hicolstdchar::@3->mode_hicolstdchar::@3#0] -- register_copy 
  //SEG929 [502] phi (byte*) mode_hicolstdchar::col#2 = (byte*) mode_hicolstdchar::col#1 [phi:mode_hicolstdchar::@3->mode_hicolstdchar::@3#1] -- register_copy 
  //SEG930 [502] phi (byte) mode_hicolstdchar::cx#2 = (byte) mode_hicolstdchar::cx#1 [phi:mode_hicolstdchar::@3->mode_hicolstdchar::@3#2] -- register_copy 
    jmp b3
  //SEG931 mode_hicolstdchar::@3
  b3:
  //SEG932 [503] (byte~) mode_hicolstdchar::$24 ← (byte) mode_hicolstdchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$24 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$24 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #$f
    and cy
  //SEG933 [504] (byte~) mode_hicolstdchar::$25 ← (byte~) mode_hicolstdchar::$24 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$25 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$25 ] ) -- vbuz1=vbuaa_rol_4 
    asl
    asl
    asl
    asl
    sta _25
  //SEG934 [505] (byte~) mode_hicolstdchar::$26 ← (byte) mode_hicolstdchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$25 mode_hicolstdchar::$26 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$25 mode_hicolstdchar::$26 ] ) -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #$f
  //SEG935 [506] (byte) mode_hicolstdchar::v#0 ← (byte~) mode_hicolstdchar::$25 | (byte~) mode_hicolstdchar::$26 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] ) -- vbuaa=vbuz1_bor_vbuaa 
    ora _25
  //SEG936 [507] *((byte*) mode_hicolstdchar::col#2) ← (byte) mode_hicolstdchar::v#0 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (col),y
  //SEG937 [508] (byte*) mode_hicolstdchar::col#1 ← ++ (byte*) mode_hicolstdchar::col#2 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::cx#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::cx#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG938 [509] *((byte*) mode_hicolstdchar::ch#2) ← (byte) mode_hicolstdchar::v#0 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::cx#2 mode_hicolstdchar::ch#2 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::cx#2 mode_hicolstdchar::ch#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (ch),y
  //SEG939 [510] (byte*) mode_hicolstdchar::ch#1 ← ++ (byte*) mode_hicolstdchar::ch#2 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 mode_hicolstdchar::cx#2 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 mode_hicolstdchar::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc ch
    bne !+
    inc ch+1
  !:
  //SEG940 [511] (byte) mode_hicolstdchar::cx#1 ← ++ (byte) mode_hicolstdchar::cx#2 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 mode_hicolstdchar::cx#1 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 mode_hicolstdchar::cx#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG941 [512] if((byte) mode_hicolstdchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_hicolstdchar::@3 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 mode_hicolstdchar::cx#1 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 mode_hicolstdchar::cx#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b3_from_b3
    jmp b9
  //SEG942 mode_hicolstdchar::@9
  b9:
  //SEG943 [513] (byte) mode_hicolstdchar::cy#1 ← ++ (byte) mode_hicolstdchar::cy#4 [ mode_hicolstdchar::cy#1 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#1 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG944 [514] if((byte) mode_hicolstdchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_hicolstdchar::@2 [ mode_hicolstdchar::cy#1 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#1 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2_from_b9
    jmp b4
  //SEG945 mode_hicolstdchar::@4
  b4:
  //SEG946 [515] if(true) goto mode_hicolstdchar::@5 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- true_then_la1 
    jmp b5_from_b4
    jmp breturn
  //SEG947 mode_hicolstdchar::@return
  breturn:
  //SEG948 [516] return  [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] )
    rts
  //SEG949 [517] phi from mode_hicolstdchar::@4 to mode_hicolstdchar::@5 [phi:mode_hicolstdchar::@4->mode_hicolstdchar::@5]
  b5_from_b4:
    jmp b5
  //SEG950 mode_hicolstdchar::@5
  b5:
  //SEG951 [518] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_hicolstdchar:63 [ keyboard_key_pressed::return#0 ] )
  //SEG952 [153] phi from mode_hicolstdchar::@5 to keyboard_key_pressed [phi:mode_hicolstdchar::@5->keyboard_key_pressed]
  keyboard_key_pressed_from_b5:
  //SEG953 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_hicolstdchar::@5->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_SPACE
    jsr keyboard_key_pressed
  //SEG954 [519] (byte) keyboard_key_pressed::return#16 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#16 ] ( main:2::menu:9::mode_hicolstdchar:63 [ keyboard_key_pressed::return#16 ] )
    // (byte) keyboard_key_pressed::return#16 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
    jmp b16
  //SEG955 mode_hicolstdchar::@16
  b16:
  //SEG956 [520] (byte~) mode_hicolstdchar::$30 ← (byte) keyboard_key_pressed::return#16 [ mode_hicolstdchar::$30 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::$30 ] )
    // (byte~) mode_hicolstdchar::$30 = (byte) keyboard_key_pressed::return#16  // register copy reg byte a
  //SEG957 [521] if((byte~) mode_hicolstdchar::$30==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_hicolstdchar::@4 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b4
    jmp breturn
}
//SEG958 mode_mcchar
mode_mcchar: {
    .label SCREEN = $8000
    .label CHARSET = $9000
    .label COLORS = $8400
    .label _28 = 7
    .label col = 2
    .label ch = 5
    .label cy = 4
  //SEG959 [522] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_mcchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #($ffffffff&CHARSET)/$10000
    sta DTV_GRAPHICS_VIC_BANK
  //SEG960 [523] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_mcchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG961 [524] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_mcchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_COLOR_BANK_HI
  //SEG962 [525] *((const byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_CONTROL
  //SEG963 [526] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3
    sta CIA2_PORT_A_DDR
  //SEG964 [527] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_mcchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3^CHARSET/$4000
    sta CIA2_PORT_A
  //SEG965 [528] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG966 [529] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0|(const byte) VIC_MCM#0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_CSEL|VIC_MCM
    sta VIC_CONTROL2
  //SEG967 [530] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_mcchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_mcchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #(SCREEN&$3fff)/$40|(CHARSET&$3fff)/$400
    sta VIC_MEMORY
  //SEG968 [531] phi from mode_mcchar to mode_mcchar::@1 [phi:mode_mcchar->mode_mcchar::@1]
  b1_from_mode_mcchar:
  //SEG969 [531] phi (byte) mode_mcchar::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_mcchar->mode_mcchar::@1#0] -- vbuxx=vbuc1 
    ldx #0
    jmp b1
  //SEG970 [531] phi from mode_mcchar::@1 to mode_mcchar::@1 [phi:mode_mcchar::@1->mode_mcchar::@1]
  b1_from_b1:
  //SEG971 [531] phi (byte) mode_mcchar::i#2 = (byte) mode_mcchar::i#1 [phi:mode_mcchar::@1->mode_mcchar::@1#0] -- register_copy 
    jmp b1
  //SEG972 mode_mcchar::@1
  b1:
  //SEG973 [532] *((const byte*) DTV_PALETTE#0 + (byte) mode_mcchar::i#2) ← *((const byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) mode_mcchar::i#2) [ mode_mcchar::i#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::i#2 ] ) -- pbuc1_derefidx_vbuxx=pbuc2_derefidx_vbuxx 
    lda DTV_PALETTE_DEFAULT,x
    sta DTV_PALETTE,x
  //SEG974 [533] (byte) mode_mcchar::i#1 ← ++ (byte) mode_mcchar::i#2 [ mode_mcchar::i#1 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG975 [534] if((byte) mode_mcchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_mcchar::@1 [ mode_mcchar::i#1 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne b1_from_b1
    jmp b8
  //SEG976 mode_mcchar::@8
  b8:
  //SEG977 [535] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG978 [536] *((const byte*) BGCOL1#0) ← (const byte) BLACK#0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #BLACK
    sta BGCOL1
  //SEG979 [537] *((const byte*) BGCOL2#0) ← (const byte) GREEN#0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #GREEN
    sta BGCOL2
  //SEG980 [538] *((const byte*) BGCOL3#0) ← (const byte) BLUE#0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #BLUE
    sta BGCOL3
  //SEG981 [539] phi from mode_mcchar::@8 to mode_mcchar::@2 [phi:mode_mcchar::@8->mode_mcchar::@2]
  b2_from_b8:
  //SEG982 [539] phi (byte*) mode_mcchar::ch#3 = (const byte*) mode_mcchar::SCREEN#0 [phi:mode_mcchar::@8->mode_mcchar::@2#0] -- pbuz1=pbuc1 
    lda #<SCREEN
    sta ch
    lda #>SCREEN
    sta ch+1
  //SEG983 [539] phi (byte*) mode_mcchar::col#3 = (const byte*) mode_mcchar::COLORS#0 [phi:mode_mcchar::@8->mode_mcchar::@2#1] -- pbuz1=pbuc1 
    lda #<COLORS
    sta col
    lda #>COLORS
    sta col+1
  //SEG984 [539] phi (byte) mode_mcchar::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_mcchar::@8->mode_mcchar::@2#2] -- vbuz1=vbuc1 
    lda #0
    sta cy
    jmp b2
  //SEG985 [539] phi from mode_mcchar::@9 to mode_mcchar::@2 [phi:mode_mcchar::@9->mode_mcchar::@2]
  b2_from_b9:
  //SEG986 [539] phi (byte*) mode_mcchar::ch#3 = (byte*) mode_mcchar::ch#1 [phi:mode_mcchar::@9->mode_mcchar::@2#0] -- register_copy 
  //SEG987 [539] phi (byte*) mode_mcchar::col#3 = (byte*) mode_mcchar::col#1 [phi:mode_mcchar::@9->mode_mcchar::@2#1] -- register_copy 
  //SEG988 [539] phi (byte) mode_mcchar::cy#4 = (byte) mode_mcchar::cy#1 [phi:mode_mcchar::@9->mode_mcchar::@2#2] -- register_copy 
    jmp b2
  //SEG989 mode_mcchar::@2
  b2:
  //SEG990 [540] phi from mode_mcchar::@2 to mode_mcchar::@3 [phi:mode_mcchar::@2->mode_mcchar::@3]
  b3_from_b2:
  //SEG991 [540] phi (byte*) mode_mcchar::ch#2 = (byte*) mode_mcchar::ch#3 [phi:mode_mcchar::@2->mode_mcchar::@3#0] -- register_copy 
  //SEG992 [540] phi (byte*) mode_mcchar::col#2 = (byte*) mode_mcchar::col#3 [phi:mode_mcchar::@2->mode_mcchar::@3#1] -- register_copy 
  //SEG993 [540] phi (byte) mode_mcchar::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_mcchar::@2->mode_mcchar::@3#2] -- vbuxx=vbuc1 
    ldx #0
    jmp b3
  //SEG994 [540] phi from mode_mcchar::@3 to mode_mcchar::@3 [phi:mode_mcchar::@3->mode_mcchar::@3]
  b3_from_b3:
  //SEG995 [540] phi (byte*) mode_mcchar::ch#2 = (byte*) mode_mcchar::ch#1 [phi:mode_mcchar::@3->mode_mcchar::@3#0] -- register_copy 
  //SEG996 [540] phi (byte*) mode_mcchar::col#2 = (byte*) mode_mcchar::col#1 [phi:mode_mcchar::@3->mode_mcchar::@3#1] -- register_copy 
  //SEG997 [540] phi (byte) mode_mcchar::cx#2 = (byte) mode_mcchar::cx#1 [phi:mode_mcchar::@3->mode_mcchar::@3#2] -- register_copy 
    jmp b3
  //SEG998 mode_mcchar::@3
  b3:
  //SEG999 [541] (byte~) mode_mcchar::$25 ← (byte) mode_mcchar::cx#2 + (byte) mode_mcchar::cy#4 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 mode_mcchar::$25 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 mode_mcchar::$25 ] ) -- vbuaa=vbuxx_plus_vbuz1 
    txa
    clc
    adc cy
  //SEG1000 [542] (byte~) mode_mcchar::$26 ← (byte~) mode_mcchar::$25 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 mode_mcchar::$26 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 mode_mcchar::$26 ] ) -- vbuaa=vbuaa_band_vbuc1 
    and #$f
  //SEG1001 [543] *((byte*) mode_mcchar::col#2) ← (byte~) mode_mcchar::$26 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (col),y
  //SEG1002 [544] (byte*) mode_mcchar::col#1 ← ++ (byte*) mode_mcchar::col#2 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG1003 [545] (byte~) mode_mcchar::$27 ← (byte) mode_mcchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$27 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$27 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #$f
    and cy
  //SEG1004 [546] (byte~) mode_mcchar::$28 ← (byte~) mode_mcchar::$27 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$28 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$28 ] ) -- vbuz1=vbuaa_rol_4 
    asl
    asl
    asl
    asl
    sta _28
  //SEG1005 [547] (byte~) mode_mcchar::$29 ← (byte) mode_mcchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$28 mode_mcchar::$29 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$28 mode_mcchar::$29 ] ) -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #$f
  //SEG1006 [548] (byte~) mode_mcchar::$30 ← (byte~) mode_mcchar::$28 | (byte~) mode_mcchar::$29 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$30 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$30 ] ) -- vbuaa=vbuz1_bor_vbuaa 
    ora _28
  //SEG1007 [549] *((byte*) mode_mcchar::ch#2) ← (byte~) mode_mcchar::$30 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (ch),y
  //SEG1008 [550] (byte*) mode_mcchar::ch#1 ← ++ (byte*) mode_mcchar::ch#2 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::ch#1 mode_mcchar::cx#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::ch#1 mode_mcchar::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc ch
    bne !+
    inc ch+1
  !:
  //SEG1009 [551] (byte) mode_mcchar::cx#1 ← ++ (byte) mode_mcchar::cx#2 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::ch#1 mode_mcchar::cx#1 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::ch#1 mode_mcchar::cx#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG1010 [552] if((byte) mode_mcchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_mcchar::@3 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::ch#1 mode_mcchar::cx#1 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::ch#1 mode_mcchar::cx#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b3_from_b3
    jmp b9
  //SEG1011 mode_mcchar::@9
  b9:
  //SEG1012 [553] (byte) mode_mcchar::cy#1 ← ++ (byte) mode_mcchar::cy#4 [ mode_mcchar::cy#1 mode_mcchar::col#1 mode_mcchar::ch#1 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#1 mode_mcchar::col#1 mode_mcchar::ch#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG1013 [554] if((byte) mode_mcchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_mcchar::@2 [ mode_mcchar::cy#1 mode_mcchar::col#1 mode_mcchar::ch#1 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#1 mode_mcchar::col#1 mode_mcchar::ch#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2_from_b9
    jmp b4
  //SEG1014 mode_mcchar::@4
  b4:
  //SEG1015 [555] if(true) goto mode_mcchar::@5 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- true_then_la1 
    jmp b5_from_b4
    jmp breturn
  //SEG1016 mode_mcchar::@return
  breturn:
  //SEG1017 [556] return  [ ] ( main:2::menu:9::mode_mcchar:56 [ ] )
    rts
  //SEG1018 [557] phi from mode_mcchar::@4 to mode_mcchar::@5 [phi:mode_mcchar::@4->mode_mcchar::@5]
  b5_from_b4:
    jmp b5
  //SEG1019 mode_mcchar::@5
  b5:
  //SEG1020 [558] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_mcchar:56 [ keyboard_key_pressed::return#0 ] )
  //SEG1021 [153] phi from mode_mcchar::@5 to keyboard_key_pressed [phi:mode_mcchar::@5->keyboard_key_pressed]
  keyboard_key_pressed_from_b5:
  //SEG1022 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_mcchar::@5->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_SPACE
    jsr keyboard_key_pressed
  //SEG1023 [559] (byte) keyboard_key_pressed::return#15 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#15 ] ( main:2::menu:9::mode_mcchar:56 [ keyboard_key_pressed::return#15 ] )
    // (byte) keyboard_key_pressed::return#15 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
    jmp b16
  //SEG1024 mode_mcchar::@16
  b16:
  //SEG1025 [560] (byte~) mode_mcchar::$33 ← (byte) keyboard_key_pressed::return#15 [ mode_mcchar::$33 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::$33 ] )
    // (byte~) mode_mcchar::$33 = (byte) keyboard_key_pressed::return#15  // register copy reg byte a
  //SEG1026 [561] if((byte~) mode_mcchar::$33==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_mcchar::@4 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b4
    jmp breturn
}
//SEG1027 mode_ecmchar
mode_ecmchar: {
    .label ECMCHAR_SCREEN = $8000
    .label ECMCHAR_CHARSET = $9000
    .label ECMCHAR_COLORS = $8400
    .label _28 = 7
    .label col = 2
    .label ch = 5
    .label cy = 4
  //SEG1028 [562] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #($ffffffff&ECMCHAR_CHARSET)/$10000
    sta DTV_GRAPHICS_VIC_BANK
  //SEG1029 [563] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_ecmchar::ECMCHAR_COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #ECMCHAR_COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG1030 [564] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_ecmchar::ECMCHAR_COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_COLOR_BANK_HI
  //SEG1031 [565] *((const byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_CONTROL
  //SEG1032 [566] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3
    sta CIA2_PORT_A_DDR
  //SEG1033 [567] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3^ECMCHAR_CHARSET/$4000
    sta CIA2_PORT_A
  //SEG1034 [568] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(const byte) VIC_ECM#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_DEN|VIC_RSEL|VIC_ECM|3
    sta VIC_CONTROL
  //SEG1035 [569] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_CSEL
    sta VIC_CONTROL2
  //SEG1036 [570] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_ecmchar::ECMCHAR_SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #(ECMCHAR_SCREEN&$3fff)/$40|(ECMCHAR_CHARSET&$3fff)/$400
    sta VIC_MEMORY
  //SEG1037 [571] phi from mode_ecmchar to mode_ecmchar::@1 [phi:mode_ecmchar->mode_ecmchar::@1]
  b1_from_mode_ecmchar:
  //SEG1038 [571] phi (byte) mode_ecmchar::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_ecmchar->mode_ecmchar::@1#0] -- vbuxx=vbuc1 
    ldx #0
    jmp b1
  //SEG1039 [571] phi from mode_ecmchar::@1 to mode_ecmchar::@1 [phi:mode_ecmchar::@1->mode_ecmchar::@1]
  b1_from_b1:
  //SEG1040 [571] phi (byte) mode_ecmchar::i#2 = (byte) mode_ecmchar::i#1 [phi:mode_ecmchar::@1->mode_ecmchar::@1#0] -- register_copy 
    jmp b1
  //SEG1041 mode_ecmchar::@1
  b1:
  //SEG1042 [572] *((const byte*) DTV_PALETTE#0 + (byte) mode_ecmchar::i#2) ← *((const byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) mode_ecmchar::i#2) [ mode_ecmchar::i#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::i#2 ] ) -- pbuc1_derefidx_vbuxx=pbuc2_derefidx_vbuxx 
    lda DTV_PALETTE_DEFAULT,x
    sta DTV_PALETTE,x
  //SEG1043 [573] (byte) mode_ecmchar::i#1 ← ++ (byte) mode_ecmchar::i#2 [ mode_ecmchar::i#1 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG1044 [574] if((byte) mode_ecmchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_ecmchar::@1 [ mode_ecmchar::i#1 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne b1_from_b1
    jmp b8
  //SEG1045 mode_ecmchar::@8
  b8:
  //SEG1046 [575] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG1047 [576] *((const byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BGCOL1
  //SEG1048 [577] *((const byte*) BGCOL2#0) ← (byte/signed byte/word/signed word/dword/signed dword) 2 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #2
    sta BGCOL2
  //SEG1049 [578] *((const byte*) BGCOL3#0) ← (byte/signed byte/word/signed word/dword/signed dword) 5 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #5
    sta BGCOL3
  //SEG1050 [579] *((const byte*) BGCOL4#0) ← (byte/signed byte/word/signed word/dword/signed dword) 6 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #6
    sta BGCOL4
  //SEG1051 [580] phi from mode_ecmchar::@8 to mode_ecmchar::@2 [phi:mode_ecmchar::@8->mode_ecmchar::@2]
  b2_from_b8:
  //SEG1052 [580] phi (byte*) mode_ecmchar::ch#3 = (const byte*) mode_ecmchar::ECMCHAR_SCREEN#0 [phi:mode_ecmchar::@8->mode_ecmchar::@2#0] -- pbuz1=pbuc1 
    lda #<ECMCHAR_SCREEN
    sta ch
    lda #>ECMCHAR_SCREEN
    sta ch+1
  //SEG1053 [580] phi (byte*) mode_ecmchar::col#3 = (const byte*) mode_ecmchar::ECMCHAR_COLORS#0 [phi:mode_ecmchar::@8->mode_ecmchar::@2#1] -- pbuz1=pbuc1 
    lda #<ECMCHAR_COLORS
    sta col
    lda #>ECMCHAR_COLORS
    sta col+1
  //SEG1054 [580] phi (byte) mode_ecmchar::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_ecmchar::@8->mode_ecmchar::@2#2] -- vbuz1=vbuc1 
    lda #0
    sta cy
    jmp b2
  //SEG1055 [580] phi from mode_ecmchar::@9 to mode_ecmchar::@2 [phi:mode_ecmchar::@9->mode_ecmchar::@2]
  b2_from_b9:
  //SEG1056 [580] phi (byte*) mode_ecmchar::ch#3 = (byte*) mode_ecmchar::ch#1 [phi:mode_ecmchar::@9->mode_ecmchar::@2#0] -- register_copy 
  //SEG1057 [580] phi (byte*) mode_ecmchar::col#3 = (byte*) mode_ecmchar::col#1 [phi:mode_ecmchar::@9->mode_ecmchar::@2#1] -- register_copy 
  //SEG1058 [580] phi (byte) mode_ecmchar::cy#4 = (byte) mode_ecmchar::cy#1 [phi:mode_ecmchar::@9->mode_ecmchar::@2#2] -- register_copy 
    jmp b2
  //SEG1059 mode_ecmchar::@2
  b2:
  //SEG1060 [581] phi from mode_ecmchar::@2 to mode_ecmchar::@3 [phi:mode_ecmchar::@2->mode_ecmchar::@3]
  b3_from_b2:
  //SEG1061 [581] phi (byte*) mode_ecmchar::ch#2 = (byte*) mode_ecmchar::ch#3 [phi:mode_ecmchar::@2->mode_ecmchar::@3#0] -- register_copy 
  //SEG1062 [581] phi (byte*) mode_ecmchar::col#2 = (byte*) mode_ecmchar::col#3 [phi:mode_ecmchar::@2->mode_ecmchar::@3#1] -- register_copy 
  //SEG1063 [581] phi (byte) mode_ecmchar::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_ecmchar::@2->mode_ecmchar::@3#2] -- vbuxx=vbuc1 
    ldx #0
    jmp b3
  //SEG1064 [581] phi from mode_ecmchar::@3 to mode_ecmchar::@3 [phi:mode_ecmchar::@3->mode_ecmchar::@3]
  b3_from_b3:
  //SEG1065 [581] phi (byte*) mode_ecmchar::ch#2 = (byte*) mode_ecmchar::ch#1 [phi:mode_ecmchar::@3->mode_ecmchar::@3#0] -- register_copy 
  //SEG1066 [581] phi (byte*) mode_ecmchar::col#2 = (byte*) mode_ecmchar::col#1 [phi:mode_ecmchar::@3->mode_ecmchar::@3#1] -- register_copy 
  //SEG1067 [581] phi (byte) mode_ecmchar::cx#2 = (byte) mode_ecmchar::cx#1 [phi:mode_ecmchar::@3->mode_ecmchar::@3#2] -- register_copy 
    jmp b3
  //SEG1068 mode_ecmchar::@3
  b3:
  //SEG1069 [582] (byte~) mode_ecmchar::$25 ← (byte) mode_ecmchar::cx#2 + (byte) mode_ecmchar::cy#4 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 mode_ecmchar::$25 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 mode_ecmchar::$25 ] ) -- vbuaa=vbuxx_plus_vbuz1 
    txa
    clc
    adc cy
  //SEG1070 [583] (byte~) mode_ecmchar::$26 ← (byte~) mode_ecmchar::$25 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 mode_ecmchar::$26 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 mode_ecmchar::$26 ] ) -- vbuaa=vbuaa_band_vbuc1 
    and #$f
  //SEG1071 [584] *((byte*) mode_ecmchar::col#2) ← (byte~) mode_ecmchar::$26 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (col),y
  //SEG1072 [585] (byte*) mode_ecmchar::col#1 ← ++ (byte*) mode_ecmchar::col#2 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG1073 [586] (byte~) mode_ecmchar::$27 ← (byte) mode_ecmchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$27 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$27 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #$f
    and cy
  //SEG1074 [587] (byte~) mode_ecmchar::$28 ← (byte~) mode_ecmchar::$27 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$28 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$28 ] ) -- vbuz1=vbuaa_rol_4 
    asl
    asl
    asl
    asl
    sta _28
  //SEG1075 [588] (byte~) mode_ecmchar::$29 ← (byte) mode_ecmchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$28 mode_ecmchar::$29 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$28 mode_ecmchar::$29 ] ) -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #$f
  //SEG1076 [589] (byte~) mode_ecmchar::$30 ← (byte~) mode_ecmchar::$28 | (byte~) mode_ecmchar::$29 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$30 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$30 ] ) -- vbuaa=vbuz1_bor_vbuaa 
    ora _28
  //SEG1077 [590] *((byte*) mode_ecmchar::ch#2) ← (byte~) mode_ecmchar::$30 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (ch),y
  //SEG1078 [591] (byte*) mode_ecmchar::ch#1 ← ++ (byte*) mode_ecmchar::ch#2 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::ch#1 mode_ecmchar::cx#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::ch#1 mode_ecmchar::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc ch
    bne !+
    inc ch+1
  !:
  //SEG1079 [592] (byte) mode_ecmchar::cx#1 ← ++ (byte) mode_ecmchar::cx#2 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::ch#1 mode_ecmchar::cx#1 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::ch#1 mode_ecmchar::cx#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG1080 [593] if((byte) mode_ecmchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_ecmchar::@3 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::ch#1 mode_ecmchar::cx#1 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::ch#1 mode_ecmchar::cx#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b3_from_b3
    jmp b9
  //SEG1081 mode_ecmchar::@9
  b9:
  //SEG1082 [594] (byte) mode_ecmchar::cy#1 ← ++ (byte) mode_ecmchar::cy#4 [ mode_ecmchar::cy#1 mode_ecmchar::col#1 mode_ecmchar::ch#1 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#1 mode_ecmchar::col#1 mode_ecmchar::ch#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG1083 [595] if((byte) mode_ecmchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_ecmchar::@2 [ mode_ecmchar::cy#1 mode_ecmchar::col#1 mode_ecmchar::ch#1 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#1 mode_ecmchar::col#1 mode_ecmchar::ch#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2_from_b9
    jmp b4
  //SEG1084 mode_ecmchar::@4
  b4:
  //SEG1085 [596] if(true) goto mode_ecmchar::@5 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- true_then_la1 
    jmp b5_from_b4
    jmp breturn
  //SEG1086 mode_ecmchar::@return
  breturn:
  //SEG1087 [597] return  [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] )
    rts
  //SEG1088 [598] phi from mode_ecmchar::@4 to mode_ecmchar::@5 [phi:mode_ecmchar::@4->mode_ecmchar::@5]
  b5_from_b4:
    jmp b5
  //SEG1089 mode_ecmchar::@5
  b5:
  //SEG1090 [599] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_ecmchar:49 [ keyboard_key_pressed::return#0 ] )
  //SEG1091 [153] phi from mode_ecmchar::@5 to keyboard_key_pressed [phi:mode_ecmchar::@5->keyboard_key_pressed]
  keyboard_key_pressed_from_b5:
  //SEG1092 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_ecmchar::@5->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_SPACE
    jsr keyboard_key_pressed
  //SEG1093 [600] (byte) keyboard_key_pressed::return#14 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#14 ] ( main:2::menu:9::mode_ecmchar:49 [ keyboard_key_pressed::return#14 ] )
    // (byte) keyboard_key_pressed::return#14 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
    jmp b16
  //SEG1094 mode_ecmchar::@16
  b16:
  //SEG1095 [601] (byte~) mode_ecmchar::$33 ← (byte) keyboard_key_pressed::return#14 [ mode_ecmchar::$33 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::$33 ] )
    // (byte~) mode_ecmchar::$33 = (byte) keyboard_key_pressed::return#14  // register copy reg byte a
  //SEG1096 [602] if((byte~) mode_ecmchar::$33==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_ecmchar::@4 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b4
    jmp breturn
}
//SEG1097 mode_stdchar
mode_stdchar: {
    .label SCREEN = $8000
    .label CHARSET = $9000
    .label COLORS = $8400
    .label _27 = 7
    .label col = 2
    .label ch = 5
    .label cy = 4
  //SEG1098 [603] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_stdchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #($ffffffff&CHARSET)/$10000
    sta DTV_GRAPHICS_VIC_BANK
  //SEG1099 [604] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_stdchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG1100 [605] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_stdchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_COLOR_BANK_HI
  //SEG1101 [606] *((const byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_CONTROL
  //SEG1102 [607] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3
    sta CIA2_PORT_A_DDR
  //SEG1103 [608] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_stdchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3^CHARSET/$4000
    sta CIA2_PORT_A
  //SEG1104 [609] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG1105 [610] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_CSEL
    sta VIC_CONTROL2
  //SEG1106 [611] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_stdchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_stdchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #(SCREEN&$3fff)/$40|(CHARSET&$3fff)/$400
    sta VIC_MEMORY
  //SEG1107 [612] phi from mode_stdchar to mode_stdchar::@1 [phi:mode_stdchar->mode_stdchar::@1]
  b1_from_mode_stdchar:
  //SEG1108 [612] phi (byte) mode_stdchar::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_stdchar->mode_stdchar::@1#0] -- vbuxx=vbuc1 
    ldx #0
    jmp b1
  //SEG1109 [612] phi from mode_stdchar::@1 to mode_stdchar::@1 [phi:mode_stdchar::@1->mode_stdchar::@1]
  b1_from_b1:
  //SEG1110 [612] phi (byte) mode_stdchar::i#2 = (byte) mode_stdchar::i#1 [phi:mode_stdchar::@1->mode_stdchar::@1#0] -- register_copy 
    jmp b1
  //SEG1111 mode_stdchar::@1
  b1:
  //SEG1112 [613] *((const byte*) DTV_PALETTE#0 + (byte) mode_stdchar::i#2) ← *((const byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) mode_stdchar::i#2) [ mode_stdchar::i#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::i#2 ] ) -- pbuc1_derefidx_vbuxx=pbuc2_derefidx_vbuxx 
    lda DTV_PALETTE_DEFAULT,x
    sta DTV_PALETTE,x
  //SEG1113 [614] (byte) mode_stdchar::i#1 ← ++ (byte) mode_stdchar::i#2 [ mode_stdchar::i#1 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG1114 [615] if((byte) mode_stdchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_stdchar::@1 [ mode_stdchar::i#1 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne b1_from_b1
    jmp b8
  //SEG1115 mode_stdchar::@8
  b8:
  //SEG1116 [616] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BGCOL
  //SEG1117 [617] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG1118 [618] phi from mode_stdchar::@8 to mode_stdchar::@2 [phi:mode_stdchar::@8->mode_stdchar::@2]
  b2_from_b8:
  //SEG1119 [618] phi (byte*) mode_stdchar::ch#3 = (const byte*) mode_stdchar::SCREEN#0 [phi:mode_stdchar::@8->mode_stdchar::@2#0] -- pbuz1=pbuc1 
    lda #<SCREEN
    sta ch
    lda #>SCREEN
    sta ch+1
  //SEG1120 [618] phi (byte*) mode_stdchar::col#3 = (const byte*) mode_stdchar::COLORS#0 [phi:mode_stdchar::@8->mode_stdchar::@2#1] -- pbuz1=pbuc1 
    lda #<COLORS
    sta col
    lda #>COLORS
    sta col+1
  //SEG1121 [618] phi (byte) mode_stdchar::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_stdchar::@8->mode_stdchar::@2#2] -- vbuz1=vbuc1 
    lda #0
    sta cy
    jmp b2
  //SEG1122 [618] phi from mode_stdchar::@9 to mode_stdchar::@2 [phi:mode_stdchar::@9->mode_stdchar::@2]
  b2_from_b9:
  //SEG1123 [618] phi (byte*) mode_stdchar::ch#3 = (byte*) mode_stdchar::ch#1 [phi:mode_stdchar::@9->mode_stdchar::@2#0] -- register_copy 
  //SEG1124 [618] phi (byte*) mode_stdchar::col#3 = (byte*) mode_stdchar::col#1 [phi:mode_stdchar::@9->mode_stdchar::@2#1] -- register_copy 
  //SEG1125 [618] phi (byte) mode_stdchar::cy#4 = (byte) mode_stdchar::cy#1 [phi:mode_stdchar::@9->mode_stdchar::@2#2] -- register_copy 
    jmp b2
  //SEG1126 mode_stdchar::@2
  b2:
  //SEG1127 [619] phi from mode_stdchar::@2 to mode_stdchar::@3 [phi:mode_stdchar::@2->mode_stdchar::@3]
  b3_from_b2:
  //SEG1128 [619] phi (byte*) mode_stdchar::ch#2 = (byte*) mode_stdchar::ch#3 [phi:mode_stdchar::@2->mode_stdchar::@3#0] -- register_copy 
  //SEG1129 [619] phi (byte*) mode_stdchar::col#2 = (byte*) mode_stdchar::col#3 [phi:mode_stdchar::@2->mode_stdchar::@3#1] -- register_copy 
  //SEG1130 [619] phi (byte) mode_stdchar::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_stdchar::@2->mode_stdchar::@3#2] -- vbuxx=vbuc1 
    ldx #0
    jmp b3
  //SEG1131 [619] phi from mode_stdchar::@3 to mode_stdchar::@3 [phi:mode_stdchar::@3->mode_stdchar::@3]
  b3_from_b3:
  //SEG1132 [619] phi (byte*) mode_stdchar::ch#2 = (byte*) mode_stdchar::ch#1 [phi:mode_stdchar::@3->mode_stdchar::@3#0] -- register_copy 
  //SEG1133 [619] phi (byte*) mode_stdchar::col#2 = (byte*) mode_stdchar::col#1 [phi:mode_stdchar::@3->mode_stdchar::@3#1] -- register_copy 
  //SEG1134 [619] phi (byte) mode_stdchar::cx#2 = (byte) mode_stdchar::cx#1 [phi:mode_stdchar::@3->mode_stdchar::@3#2] -- register_copy 
    jmp b3
  //SEG1135 mode_stdchar::@3
  b3:
  //SEG1136 [620] (byte~) mode_stdchar::$24 ← (byte) mode_stdchar::cx#2 + (byte) mode_stdchar::cy#4 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 mode_stdchar::$24 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 mode_stdchar::$24 ] ) -- vbuaa=vbuxx_plus_vbuz1 
    txa
    clc
    adc cy
  //SEG1137 [621] (byte~) mode_stdchar::$25 ← (byte~) mode_stdchar::$24 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 mode_stdchar::$25 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 mode_stdchar::$25 ] ) -- vbuaa=vbuaa_band_vbuc1 
    and #$f
  //SEG1138 [622] *((byte*) mode_stdchar::col#2) ← (byte~) mode_stdchar::$25 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (col),y
  //SEG1139 [623] (byte*) mode_stdchar::col#1 ← ++ (byte*) mode_stdchar::col#2 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG1140 [624] (byte~) mode_stdchar::$26 ← (byte) mode_stdchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$26 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$26 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #$f
    and cy
  //SEG1141 [625] (byte~) mode_stdchar::$27 ← (byte~) mode_stdchar::$26 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$27 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$27 ] ) -- vbuz1=vbuaa_rol_4 
    asl
    asl
    asl
    asl
    sta _27
  //SEG1142 [626] (byte~) mode_stdchar::$28 ← (byte) mode_stdchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$27 mode_stdchar::$28 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$27 mode_stdchar::$28 ] ) -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #$f
  //SEG1143 [627] (byte~) mode_stdchar::$29 ← (byte~) mode_stdchar::$27 | (byte~) mode_stdchar::$28 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$29 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$29 ] ) -- vbuaa=vbuz1_bor_vbuaa 
    ora _27
  //SEG1144 [628] *((byte*) mode_stdchar::ch#2) ← (byte~) mode_stdchar::$29 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (ch),y
  //SEG1145 [629] (byte*) mode_stdchar::ch#1 ← ++ (byte*) mode_stdchar::ch#2 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::ch#1 mode_stdchar::cx#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::ch#1 mode_stdchar::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc ch
    bne !+
    inc ch+1
  !:
  //SEG1146 [630] (byte) mode_stdchar::cx#1 ← ++ (byte) mode_stdchar::cx#2 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::ch#1 mode_stdchar::cx#1 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::ch#1 mode_stdchar::cx#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG1147 [631] if((byte) mode_stdchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_stdchar::@3 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::ch#1 mode_stdchar::cx#1 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::ch#1 mode_stdchar::cx#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b3_from_b3
    jmp b9
  //SEG1148 mode_stdchar::@9
  b9:
  //SEG1149 [632] (byte) mode_stdchar::cy#1 ← ++ (byte) mode_stdchar::cy#4 [ mode_stdchar::cy#1 mode_stdchar::col#1 mode_stdchar::ch#1 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#1 mode_stdchar::col#1 mode_stdchar::ch#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG1150 [633] if((byte) mode_stdchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_stdchar::@2 [ mode_stdchar::cy#1 mode_stdchar::col#1 mode_stdchar::ch#1 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#1 mode_stdchar::col#1 mode_stdchar::ch#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2_from_b9
    jmp b4
  //SEG1151 mode_stdchar::@4
  b4:
  //SEG1152 [634] if(true) goto mode_stdchar::@5 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- true_then_la1 
    jmp b5_from_b4
    jmp breturn
  //SEG1153 mode_stdchar::@return
  breturn:
  //SEG1154 [635] return  [ ] ( main:2::menu:9::mode_stdchar:42 [ ] )
    rts
  //SEG1155 [636] phi from mode_stdchar::@4 to mode_stdchar::@5 [phi:mode_stdchar::@4->mode_stdchar::@5]
  b5_from_b4:
    jmp b5
  //SEG1156 mode_stdchar::@5
  b5:
  //SEG1157 [637] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_stdchar:42 [ keyboard_key_pressed::return#0 ] )
  //SEG1158 [153] phi from mode_stdchar::@5 to keyboard_key_pressed [phi:mode_stdchar::@5->keyboard_key_pressed]
  keyboard_key_pressed_from_b5:
  //SEG1159 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_stdchar::@5->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_SPACE
    jsr keyboard_key_pressed
  //SEG1160 [638] (byte) keyboard_key_pressed::return#13 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#13 ] ( main:2::menu:9::mode_stdchar:42 [ keyboard_key_pressed::return#13 ] )
    // (byte) keyboard_key_pressed::return#13 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
    jmp b16
  //SEG1161 mode_stdchar::@16
  b16:
  //SEG1162 [639] (byte~) mode_stdchar::$32 ← (byte) keyboard_key_pressed::return#13 [ mode_stdchar::$32 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::$32 ] )
    // (byte~) mode_stdchar::$32 = (byte) keyboard_key_pressed::return#13  // register copy reg byte a
  //SEG1163 [640] if((byte~) mode_stdchar::$32==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_stdchar::@4 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b4
    jmp breturn
}
//SEG1164 print_str_lines
print_str_lines: {
    .label str = 2
  //SEG1165 [642] phi from print_str_lines to print_str_lines::@1 [phi:print_str_lines->print_str_lines::@1]
  b1_from_print_str_lines:
  //SEG1166 [642] phi (byte*) print_line_cursor#17 = (const byte*) menu::SCREEN#0 [phi:print_str_lines->print_str_lines::@1#0] -- pbuz1=pbuc1 
    lda #<menu.SCREEN
    sta print_line_cursor
    lda #>menu.SCREEN
    sta print_line_cursor+1
  //SEG1167 [642] phi (byte*) print_char_cursor#19 = (const byte*) menu::SCREEN#0 [phi:print_str_lines->print_str_lines::@1#1] -- pbuz1=pbuc1 
    lda #<menu.SCREEN
    sta print_char_cursor
    lda #>menu.SCREEN
    sta print_char_cursor+1
  //SEG1168 [642] phi (byte*) print_str_lines::str#2 = (const string) MENU_TEXT#0 [phi:print_str_lines->print_str_lines::@1#2] -- pbuz1=pbuc1 
    lda #<MENU_TEXT
    sta str
    lda #>MENU_TEXT
    sta str+1
    jmp b1
  //SEG1169 print_str_lines::@1
  b1:
  //SEG1170 [643] if(*((byte*) print_str_lines::str#2)!=(byte) '@') goto print_str_lines::@4 [ print_str_lines::str#2 print_char_cursor#19 print_line_cursor#17 ] ( main:2::menu:9::print_str_lines:33 [ print_str_lines::str#2 print_char_cursor#19 print_line_cursor#17 ] ) -- _deref_pbuz1_neq_vbuc1_then_la1 
    ldy #0
    lda (str),y
    cmp #'@'
    bne b4_from_b1
    jmp breturn
  //SEG1171 print_str_lines::@return
  breturn:
  //SEG1172 [644] return  [ ] ( main:2::menu:9::print_str_lines:33 [ ] )
    rts
  //SEG1173 [645] phi from print_str_lines::@1 print_str_lines::@5 to print_str_lines::@4 [phi:print_str_lines::@1/print_str_lines::@5->print_str_lines::@4]
  b4_from_b1:
  b4_from_b5:
  //SEG1174 [645] phi (byte*) print_char_cursor#17 = (byte*) print_char_cursor#19 [phi:print_str_lines::@1/print_str_lines::@5->print_str_lines::@4#0] -- register_copy 
  //SEG1175 [645] phi (byte*) print_str_lines::str#3 = (byte*) print_str_lines::str#2 [phi:print_str_lines::@1/print_str_lines::@5->print_str_lines::@4#1] -- register_copy 
    jmp b4
  //SEG1176 print_str_lines::@4
  b4:
  //SEG1177 [646] (byte) print_str_lines::ch#0 ← *((byte*) print_str_lines::str#3) [ print_line_cursor#17 print_str_lines::str#3 print_char_cursor#17 print_str_lines::ch#0 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#3 print_char_cursor#17 print_str_lines::ch#0 ] ) -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (str),y
  //SEG1178 [647] (byte*) print_str_lines::str#0 ← ++ (byte*) print_str_lines::str#3 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] ) -- pbuz1=_inc_pbuz1 
    inc str
    bne !+
    inc str+1
  !:
  //SEG1179 [648] if((byte) print_str_lines::ch#0==(byte) '@') goto print_str_lines::@5 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] ) -- vbuaa_eq_vbuc1_then_la1 
    cmp #'@'
    beq b5_from_b4
    jmp b8
  //SEG1180 print_str_lines::@8
  b8:
  //SEG1181 [649] *((byte*) print_char_cursor#17) ← (byte) print_str_lines::ch#0 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (print_char_cursor),y
  //SEG1182 [650] (byte*) print_char_cursor#1 ← ++ (byte*) print_char_cursor#17 [ print_line_cursor#17 print_str_lines::str#0 print_str_lines::ch#0 print_char_cursor#1 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#0 print_str_lines::ch#0 print_char_cursor#1 ] ) -- pbuz1=_inc_pbuz1 
    inc print_char_cursor
    bne !+
    inc print_char_cursor+1
  !:
  //SEG1183 [651] phi from print_str_lines::@4 print_str_lines::@8 to print_str_lines::@5 [phi:print_str_lines::@4/print_str_lines::@8->print_str_lines::@5]
  b5_from_b4:
  b5_from_b8:
  //SEG1184 [651] phi (byte*) print_char_cursor#32 = (byte*) print_char_cursor#17 [phi:print_str_lines::@4/print_str_lines::@8->print_str_lines::@5#0] -- register_copy 
    jmp b5
  //SEG1185 print_str_lines::@5
  b5:
  //SEG1186 [652] if((byte) print_str_lines::ch#0!=(byte) '@') goto print_str_lines::@4 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#32 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#32 ] ) -- vbuaa_neq_vbuc1_then_la1 
    cmp #'@'
    bne b4_from_b5
  //SEG1187 [653] phi from print_str_lines::@5 to print_str_lines::@9 [phi:print_str_lines::@5->print_str_lines::@9]
  b9_from_b5:
    jmp b9
  //SEG1188 print_str_lines::@9
  b9:
  //SEG1189 [654] call print_ln param-assignment [ print_str_lines::str#0 print_line_cursor#19 ] ( main:2::menu:9::print_str_lines:33 [ print_str_lines::str#0 print_line_cursor#19 ] )
  //SEG1190 [656] phi from print_str_lines::@9 to print_ln [phi:print_str_lines::@9->print_ln]
  print_ln_from_b9:
    jsr print_ln
  //SEG1191 [655] (byte*~) print_char_cursor#95 ← (byte*) print_line_cursor#19 [ print_str_lines::str#0 print_char_cursor#95 print_line_cursor#19 ] ( main:2::menu:9::print_str_lines:33 [ print_str_lines::str#0 print_char_cursor#95 print_line_cursor#19 ] ) -- pbuz1=pbuz2 
    lda print_line_cursor
    sta print_char_cursor
    lda print_line_cursor+1
    sta print_char_cursor+1
  //SEG1192 [642] phi from print_str_lines::@9 to print_str_lines::@1 [phi:print_str_lines::@9->print_str_lines::@1]
  b1_from_b9:
  //SEG1193 [642] phi (byte*) print_line_cursor#17 = (byte*) print_line_cursor#19 [phi:print_str_lines::@9->print_str_lines::@1#0] -- register_copy 
  //SEG1194 [642] phi (byte*) print_char_cursor#19 = (byte*~) print_char_cursor#95 [phi:print_str_lines::@9->print_str_lines::@1#1] -- register_copy 
  //SEG1195 [642] phi (byte*) print_str_lines::str#2 = (byte*) print_str_lines::str#0 [phi:print_str_lines::@9->print_str_lines::@1#2] -- register_copy 
    jmp b1
}
//SEG1196 print_ln
print_ln: {
  //SEG1197 [657] phi from print_ln print_ln::@1 to print_ln::@1 [phi:print_ln/print_ln::@1->print_ln::@1]
  b1_from_print_ln:
  b1_from_b1:
  //SEG1198 [657] phi (byte*) print_line_cursor#18 = (byte*) print_line_cursor#17 [phi:print_ln/print_ln::@1->print_ln::@1#0] -- register_copy 
    jmp b1
  //SEG1199 print_ln::@1
  b1:
  //SEG1200 [658] (byte*) print_line_cursor#19 ← (byte*) print_line_cursor#18 + (byte/signed byte/word/signed word/dword/signed dword) 40 [ print_line_cursor#19 print_char_cursor#32 ] ( main:2::menu:9::print_str_lines:33::print_ln:654 [ print_str_lines::str#0 print_line_cursor#19 print_char_cursor#32 ] ) -- pbuz1=pbuz1_plus_vbuc1 
    lda print_line_cursor
    clc
    adc #$28
    sta print_line_cursor
    bcc !+
    inc print_line_cursor+1
  !:
  //SEG1201 [659] if((byte*) print_line_cursor#19<(byte*) print_char_cursor#32) goto print_ln::@1 [ print_line_cursor#19 print_char_cursor#32 ] ( main:2::menu:9::print_str_lines:33::print_ln:654 [ print_str_lines::str#0 print_line_cursor#19 print_char_cursor#32 ] ) -- pbuz1_lt_pbuz2_then_la1 
    lda print_line_cursor+1
    cmp print_char_cursor+1
    bcc b1_from_b1
    bne !+
    lda print_line_cursor
    cmp print_char_cursor
    bcc b1_from_b1
  !:
    jmp breturn
  //SEG1202 print_ln::@return
  breturn:
  //SEG1203 [660] return  [ print_line_cursor#19 ] ( main:2::menu:9::print_str_lines:33::print_ln:654 [ print_str_lines::str#0 print_line_cursor#19 ] )
    rts
}
//SEG1204 print_cls
print_cls: {
    .label sc = 2
  //SEG1205 [662] phi from print_cls to print_cls::@1 [phi:print_cls->print_cls::@1]
  b1_from_print_cls:
  //SEG1206 [662] phi (byte*) print_cls::sc#2 = (const byte*) menu::SCREEN#0 [phi:print_cls->print_cls::@1#0] -- pbuz1=pbuc1 
    lda #<menu.SCREEN
    sta sc
    lda #>menu.SCREEN
    sta sc+1
    jmp b1
  //SEG1207 [662] phi from print_cls::@1 to print_cls::@1 [phi:print_cls::@1->print_cls::@1]
  b1_from_b1:
  //SEG1208 [662] phi (byte*) print_cls::sc#2 = (byte*) print_cls::sc#1 [phi:print_cls::@1->print_cls::@1#0] -- register_copy 
    jmp b1
  //SEG1209 print_cls::@1
  b1:
  //SEG1210 [663] *((byte*) print_cls::sc#2) ← (byte) ' ' [ print_cls::sc#2 ] ( main:2::menu:9::print_cls:31 [ print_cls::sc#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #' '
    ldy #0
    sta (sc),y
  //SEG1211 [664] (byte*) print_cls::sc#1 ← ++ (byte*) print_cls::sc#2 [ print_cls::sc#1 ] ( main:2::menu:9::print_cls:31 [ print_cls::sc#1 ] ) -- pbuz1=_inc_pbuz1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG1212 [665] if((byte*) print_cls::sc#1!=(const byte*) menu::SCREEN#0+(word/signed word/dword/signed dword) 1000) goto print_cls::@1 [ print_cls::sc#1 ] ( main:2::menu:9::print_cls:31 [ print_cls::sc#1 ] ) -- pbuz1_neq_pbuc1_then_la1 
    lda sc+1
    cmp #>menu.SCREEN+$3e8
    bne b1_from_b1
    lda sc
    cmp #<menu.SCREEN+$3e8
    bne b1_from_b1
    jmp breturn
  //SEG1213 print_cls::@return
  breturn:
  //SEG1214 [666] return  [ ] ( main:2::menu:9::print_cls:31 [ ] )
    rts
}
//SEG1215 print_set_screen
print_set_screen: {
    jmp breturn
  //SEG1216 print_set_screen::@return
  breturn:
  //SEG1217 [668] return  [ ] ( main:2::menu:9::print_set_screen:29 [ ] )
    rts
}
  DTV_PALETTE_DEFAULT: .byte 0, $f, $36, $be, $58, $db, $86, $ff, $29, $26, $3b, 5, 7, $df, $9a, $a
  keyboard_matrix_row_bitmask: .byte $fe, $fd, $fb, $f7, $ef, $df, $bf, $7f
  keyboard_matrix_col_bitmask: .byte 1, 2, 4, 8, $10, $20, $40, $80
  MENU_TEXT: .text "C64DTV Graphics Modes            CCLHBME@"+"                                 OHIIMCC@"+"                                 LUNCMMM@"+"----------------------------------------@"+"1. Standard Char             (V) 0000000@"+"2. Extended Color Char       (V) 0000001@"+"3. Multicolor Char           (V) 0000010@"+"4. Standard Bitmap           (V) 0000100@"+"5. Multicolor Bitmap         (V) 0000110@"+"6. High Color Standard Char  (H) 0001000@"+"7. High Extended Color Char  (H) 0001001@"+"8. High Multicolor Char      (H) 0001010@"+"9. High Multicolor Bitmap    (H) 0001110@"+"a. Sixs Fred 2               (D) 0010111@"+"b. Two Plane Bitmap          (D) 0011101@"+"c. Sixs Fred (2 Plane MC BM) (D) 0011111@"+"d. 8bpp Pixel Cell           (D) 0111011@"+"e. Chunky 8bpp Bitmap        (D) 1111011@"+"----------------------------------------@"+"    (V) vicII (H) vicII+hicol (D) c64dtv@"+"@"

ASSEMBLER OPTIMIZATIONS
Removing instruction jmp b32
Removing instruction jmp bend
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp b2
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b18
Removing instruction jmp b44
Removing instruction jmp b45
Removing instruction jmp b3
Removing instruction jmp breturn
Removing instruction jmp b4
Removing instruction jmp b47
Removing instruction jmp b21
Removing instruction jmp b6
Removing instruction jmp b48
Removing instruction jmp b23
Removing instruction jmp b7
Removing instruction jmp b50
Removing instruction jmp b25
Removing instruction jmp b8
Removing instruction jmp b52
Removing instruction jmp b27
Removing instruction jmp b9
Removing instruction jmp b54
Removing instruction jmp b29
Removing instruction jmp b10
Removing instruction jmp b56
Removing instruction jmp b31
Removing instruction jmp b11
Removing instruction jmp b58
Removing instruction jmp b33
Removing instruction jmp b12
Removing instruction jmp b60
Removing instruction jmp b35
Removing instruction jmp b13
Removing instruction jmp b62
Removing instruction jmp b37
Removing instruction jmp b14
Removing instruction jmp b64
Removing instruction jmp b39
Removing instruction jmp b15
Removing instruction jmp b66
Removing instruction jmp b41
Removing instruction jmp b1
Removing instruction jmp b9
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b10
Removing instruction jmp b19
Removing instruction jmp b4
Removing instruction jmp b11
Removing instruction jmp b12
Removing instruction jmp b5
Removing instruction jmp breturn
Removing instruction jmp b6
Removing instruction jmp b21
Removing instruction jmp b2
Removing instruction jmp breturn
Removing instruction jmp breturn
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b13
Removing instruction jmp b14
Removing instruction jmp b4
Removing instruction jmp b5
Removing instruction jmp b6
Removing instruction jmp b15
Removing instruction jmp b7
Removing instruction jmp b16
Removing instruction jmp b17
Removing instruction jmp b18
Removing instruction jmp b8
Removing instruction jmp breturn
Removing instruction jmp b9
Removing instruction jmp b24
Removing instruction jmp b1
Removing instruction jmp b12
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b13
Removing instruction jmp b4
Removing instruction jmp b5
Removing instruction jmp b15
Removing instruction jmp b6
Removing instruction jmp b7
Removing instruction jmp b17
Removing instruction jmp b8
Removing instruction jmp breturn
Removing instruction jmp b9
Removing instruction jmp b24
Removing instruction jmp b1
Removing instruction jmp b14
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b15
Removing instruction jmp b4
Removing instruction jmp b5
Removing instruction jmp b17
Removing instruction jmp b7
Removing instruction jmp b19
Removing instruction jmp b8
Removing instruction jmp b9
Removing instruction jmp b21
Removing instruction jmp b10
Removing instruction jmp breturn
Removing instruction jmp b11
Removing instruction jmp b28
Removing instruction jmp b1
Removing instruction jmp b12
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b13
Removing instruction jmp b4
Removing instruction jmp b5
Removing instruction jmp b15
Removing instruction jmp b6
Removing instruction jmp b7
Removing instruction jmp b17
Removing instruction jmp b8
Removing instruction jmp breturn
Removing instruction jmp b9
Removing instruction jmp b24
Removing instruction jmp b1
Removing instruction jmp b8
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b9
Removing instruction jmp b4
Removing instruction jmp breturn
Removing instruction jmp b5
Removing instruction jmp b16
Removing instruction jmp b1
Removing instruction jmp b8
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b9
Removing instruction jmp b4
Removing instruction jmp breturn
Removing instruction jmp b5
Removing instruction jmp b16
Removing instruction jmp b1
Removing instruction jmp b8
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b9
Removing instruction jmp b4
Removing instruction jmp breturn
Removing instruction jmp b5
Removing instruction jmp b16
Removing instruction jmp b1
Removing instruction jmp b8
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b9
Removing instruction jmp b4
Removing instruction jmp breturn
Removing instruction jmp b5
Removing instruction jmp b16
Removing instruction jmp b1
Removing instruction jmp b8
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b9
Removing instruction jmp b4
Removing instruction jmp breturn
Removing instruction jmp b5
Removing instruction jmp b16
Removing instruction jmp b1
Removing instruction jmp b8
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b9
Removing instruction jmp b4
Removing instruction jmp breturn
Removing instruction jmp b5
Removing instruction jmp b16
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp b4
Removing instruction jmp b8
Removing instruction jmp b5
Removing instruction jmp b9
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp breturn
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #>0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Replacing instruction ldy #0 with TAY
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Succesful ASM optimization Pass5UnnecesaryLoadElimination
Replacing label b2_from_b1 with b2
Replacing label b1_from_b1 with b1
Replacing label b2_from_b2 with b2
Replacing label b2_from_b2 with b2
Replacing label b4_from_b3 with b4
Replacing label b6_from_b47 with b6
Replacing label b7_from_b48 with b7
Replacing label b8_from_b50 with b8
Replacing label b9_from_b52 with b9
Replacing label b10_from_b54 with b10
Replacing label b11_from_b56 with b11
Replacing label b12_from_b58 with b12
Replacing label b13_from_b60 with b13
Replacing label b14_from_b62 with b14
Replacing label b15_from_b64 with b15
Replacing label b1_from_b1 with b1
Replacing label b4_from_b3 with b4
Replacing label b4_from_b3 with b4
Replacing label b3_from_b4 with b3
Replacing label b3_from_b4 with b3
Replacing label b2_from_b11 with b2
Replacing label b6_from_b5 with b6
Replacing label b1_from_b1 with b1
Replacing label b3_from_b3 with b3
Replacing label b2_from_b13 with b2
Replacing label b6_from_b7 with b6
Replacing label b5_from_b16 with b5
Replacing label b4_from_b17 with b4
Replacing label b9_from_b8 with b9
Replacing label b1_from_b1 with b1
Replacing label b3_from_b3 with b3
Replacing label b2_from_b13 with b2
Replacing label b5_from_b5 with b5
Replacing label b4_from_b15 with b4
Replacing label b7_from_b7 with b7
Replacing label b6_from_b17 with b6
Replacing label b9_from_b8 with b9
Replacing label b1_from_b1 with b1
Replacing label b3_from_b3 with b3
Replacing label b2_from_b15 with b2
Replacing label b5_from_b7 with b5
Replacing label b4_from_b19 with b4
Replacing label b9_from_b9 with b9
Replacing label b8_from_b21 with b8
Replacing label b11_from_b10 with b11
Replacing label b7_from_b6 with b7
Replacing label b1_from_b1 with b1
Replacing label b3_from_b3 with b3
Replacing label b2_from_b13 with b2
Replacing label b5_from_b5 with b5
Replacing label b4_from_b15 with b4
Replacing label b7_from_b7 with b7
Replacing label b6_from_b17 with b6
Replacing label b9_from_b8 with b9
Replacing label b1_from_b1 with b1
Replacing label b3_from_b3 with b3
Replacing label b2_from_b9 with b2
Replacing label b5_from_b4 with b5
Replacing label b1_from_b1 with b1
Replacing label b3_from_b3 with b3
Replacing label b2_from_b9 with b2
Replacing label b5_from_b4 with b5
Replacing label b1_from_b1 with b1
Replacing label b3_from_b3 with b3
Replacing label b2_from_b9 with b2
Replacing label b5_from_b4 with b5
Replacing label b1_from_b1 with b1
Replacing label b3_from_b3 with b3
Replacing label b2_from_b9 with b2
Replacing label b5_from_b4 with b5
Replacing label b1_from_b1 with b1
Replacing label b3_from_b3 with b3
Replacing label b2_from_b9 with b2
Replacing label b5_from_b4 with b5
Replacing label b1_from_b1 with b1
Replacing label b3_from_b3 with b3
Replacing label b2_from_b9 with b2
Replacing label b5_from_b4 with b5
Replacing label b4_from_b1 with b4
Replacing label b5_from_b4 with b5
Replacing label b4_from_b5 with b4
Replacing label b1_from_b1 with b1
Replacing label b1_from_b1 with b1
Replacing label b1_from_b1 with b1
Replacing label b1_from_b1 with b1
Removing instruction bbegin:
Removing instruction b32_from_bbegin:
Removing instruction bend_from_b32:
Removing instruction b2_from_b1:
Removing instruction b1_from_b1:
Removing instruction b2_from_b2:
Removing instruction b44_from_b18:
Removing instruction print_cls_from_b44:
Removing instruction b45_from_b44:
Removing instruction print_str_lines_from_b45:
Removing instruction b4_from_b3:
Removing instruction keyboard_key_pressed_from_b4:
Removing instruction b21_from_b47:
Removing instruction b6_from_b47:
Removing instruction keyboard_key_pressed_from_b6:
Removing instruction b23_from_b48:
Removing instruction b7_from_b48:
Removing instruction keyboard_key_pressed_from_b7:
Removing instruction b25_from_b50:
Removing instruction b8_from_b50:
Removing instruction keyboard_key_pressed_from_b8:
Removing instruction b27_from_b52:
Removing instruction b9_from_b52:
Removing instruction keyboard_key_pressed_from_b9:
Removing instruction b29_from_b54:
Removing instruction b10_from_b54:
Removing instruction keyboard_key_pressed_from_b10:
Removing instruction b31_from_b56:
Removing instruction b11_from_b56:
Removing instruction keyboard_key_pressed_from_b11:
Removing instruction b33_from_b58:
Removing instruction b12_from_b58:
Removing instruction keyboard_key_pressed_from_b12:
Removing instruction b35_from_b60:
Removing instruction b13_from_b60:
Removing instruction keyboard_key_pressed_from_b13:
Removing instruction b37_from_b62:
Removing instruction b14_from_b62:
Removing instruction keyboard_key_pressed_from_b14:
Removing instruction b39_from_b64:
Removing instruction b15_from_b64:
Removing instruction keyboard_key_pressed_from_b15:
Removing instruction b41_from_b66:
Removing instruction b1_from_b1:
Removing instruction b9_from_b1:
Removing instruction dtvSetCpuBankSegment1_from_b9:
Removing instruction b2_from_b11:
Removing instruction b3_from_b2:
Removing instruction b3_from_b4:
Removing instruction b4_from_b3:
Removing instruction b12_from_b11:
Removing instruction dtvSetCpuBankSegment1_from_b12:
Removing instruction b6_from_b5:
Removing instruction keyboard_key_pressed_from_b6:
Removing instruction b1_from_b1:
Removing instruction b2_from_b13:
Removing instruction b3_from_b2:
Removing instruction b3_from_b3:
Removing instruction b4_from_b17:
Removing instruction b5_from_b4:
Removing instruction b5_from_b16:
Removing instruction b6_from_b7:
Removing instruction b9_from_b8:
Removing instruction keyboard_key_pressed_from_b9:
Removing instruction b1_from_b1:
Removing instruction b2_from_b13:
Removing instruction b3_from_b2:
Removing instruction b3_from_b3:
Removing instruction b4_from_b15:
Removing instruction b5_from_b4:
Removing instruction b5_from_b5:
Removing instruction b6_from_b17:
Removing instruction b7_from_b6:
Removing instruction b7_from_b7:
Removing instruction b9_from_b8:
Removing instruction keyboard_key_pressed_from_b9:
Removing instruction b1_from_b1:
Removing instruction b2_from_b15:
Removing instruction b3_from_b2:
Removing instruction b3_from_b3:
Removing instruction b4_from_b19:
Removing instruction b5_from_b4:
Removing instruction b5_from_b7:
Removing instruction b7_from_b17:
Removing instruction b7_from_b6:
Removing instruction b8_from_b21:
Removing instruction b9_from_b8:
Removing instruction b9_from_b9:
Removing instruction b11_from_b10:
Removing instruction keyboard_key_pressed_from_b11:
Removing instruction b1_from_b1:
Removing instruction b2_from_b13:
Removing instruction b3_from_b2:
Removing instruction b3_from_b3:
Removing instruction b4_from_b15:
Removing instruction b5_from_b4:
Removing instruction b5_from_b5:
Removing instruction b6_from_b17:
Removing instruction b7_from_b6:
Removing instruction b7_from_b7:
Removing instruction b9_from_b8:
Removing instruction keyboard_key_pressed_from_b9:
Removing instruction b1_from_b1:
Removing instruction b2_from_b9:
Removing instruction b3_from_b2:
Removing instruction b3_from_b3:
Removing instruction b5_from_b4:
Removing instruction keyboard_key_pressed_from_b5:
Removing instruction b1_from_b1:
Removing instruction b2_from_b9:
Removing instruction b3_from_b2:
Removing instruction b3_from_b3:
Removing instruction b5_from_b4:
Removing instruction keyboard_key_pressed_from_b5:
Removing instruction b1_from_b1:
Removing instruction b2_from_b9:
Removing instruction b3_from_b2:
Removing instruction b3_from_b3:
Removing instruction b5_from_b4:
Removing instruction keyboard_key_pressed_from_b5:
Removing instruction b1_from_b1:
Removing instruction b2_from_b9:
Removing instruction b3_from_b2:
Removing instruction b3_from_b3:
Removing instruction b5_from_b4:
Removing instruction keyboard_key_pressed_from_b5:
Removing instruction b1_from_b1:
Removing instruction b2_from_b9:
Removing instruction b3_from_b2:
Removing instruction b3_from_b3:
Removing instruction b5_from_b4:
Removing instruction keyboard_key_pressed_from_b5:
Removing instruction b1_from_b1:
Removing instruction b2_from_b9:
Removing instruction b3_from_b2:
Removing instruction b3_from_b3:
Removing instruction b5_from_b4:
Removing instruction keyboard_key_pressed_from_b5:
Removing instruction b4_from_b1:
Removing instruction b4_from_b5:
Removing instruction b5_from_b4:
Removing instruction b5_from_b8:
Removing instruction b9_from_b5:
Removing instruction print_ln_from_b9:
Removing instruction b1_from_print_ln:
Removing instruction b1_from_b1:
Removing instruction b1_from_b1:
Succesful ASM optimization Pass5RedundantLabelElimination
Removing instruction b32:
Removing instruction bend:
Removing instruction breturn:
Removing instruction b1_from_menu:
Removing instruction b2_from_b1:
Removing instruction b18:
Removing instruction print_set_screen_from_b18:
Removing instruction b44:
Removing instruction b45:
Removing instruction b47:
Removing instruction b21:
Removing instruction b48:
Removing instruction b23:
Removing instruction b50:
Removing instruction b25:
Removing instruction b52:
Removing instruction b27:
Removing instruction b54:
Removing instruction b29:
Removing instruction b56:
Removing instruction b31:
Removing instruction b58:
Removing instruction b33:
Removing instruction b60:
Removing instruction b35:
Removing instruction b62:
Removing instruction b37:
Removing instruction b64:
Removing instruction b39:
Removing instruction b66:
Removing instruction b41:
Removing instruction b1_from_mode_8bppchunkybmm:
Removing instruction b9:
Removing instruction b2_from_b9:
Removing instruction b10:
Removing instruction dtvSetCpuBankSegment1_from_b10:
Removing instruction b19:
Removing instruction b4_from_b19:
Removing instruction b11:
Removing instruction b12:
Removing instruction b21:
Removing instruction b2:
Removing instruction breturn:
Removing instruction breturn:
Removing instruction breturn:
Removing instruction b1_from_mode_8bpppixelcell:
Removing instruction b2_from_b1:
Removing instruction b13:
Removing instruction b14:
Removing instruction b4_from_b14:
Removing instruction b6_from_b5:
Removing instruction b15:
Removing instruction b7_from_b15:
Removing instruction b16:
Removing instruction b17:
Removing instruction b18:
Removing instruction b24:
Removing instruction b1_from_mode_sixsfred:
Removing instruction b12:
Removing instruction b2_from_b12:
Removing instruction b13:
Removing instruction b4_from_b13:
Removing instruction b15:
Removing instruction b6_from_b15:
Removing instruction b17:
Removing instruction b24:
Removing instruction b1_from_mode_twoplanebitmap:
Removing instruction b14:
Removing instruction b2_from_b14:
Removing instruction b15:
Removing instruction b4_from_b15:
Removing instruction b17:
Removing instruction b19:
Removing instruction b8_from_b19:
Removing instruction b21:
Removing instruction b28:
Removing instruction b1_from_mode_sixsfred2:
Removing instruction b12:
Removing instruction b2_from_b12:
Removing instruction b13:
Removing instruction b4_from_b13:
Removing instruction b15:
Removing instruction b6_from_b15:
Removing instruction b17:
Removing instruction b24:
Removing instruction b1_from_mode_hicolmcchar:
Removing instruction b8:
Removing instruction b2_from_b8:
Removing instruction b9:
Removing instruction b16:
Removing instruction b1_from_mode_hicolecmchar:
Removing instruction b8:
Removing instruction b2_from_b8:
Removing instruction b9:
Removing instruction b16:
Removing instruction b1_from_mode_hicolstdchar:
Removing instruction b8:
Removing instruction b2_from_b8:
Removing instruction b9:
Removing instruction b16:
Removing instruction b1_from_mode_mcchar:
Removing instruction b8:
Removing instruction b2_from_b8:
Removing instruction b9:
Removing instruction b16:
Removing instruction b1_from_mode_ecmchar:
Removing instruction b8:
Removing instruction b2_from_b8:
Removing instruction b9:
Removing instruction b16:
Removing instruction b1_from_mode_stdchar:
Removing instruction b8:
Removing instruction b2_from_b8:
Removing instruction b9:
Removing instruction b16:
Removing instruction b1_from_print_str_lines:
Removing instruction breturn:
Removing instruction b8:
Removing instruction b9:
Removing instruction b1_from_b9:
Removing instruction breturn:
Removing instruction b1_from_print_cls:
Removing instruction breturn:
Removing instruction breturn:
Succesful ASM optimization Pass5UnusedLabelElimination
Skipping double jump to b2 in jmp b1
Skipping double jump to b4 in beq b3
Skipping double jump to b6 in beq b5
Skipping double jump to b9 in beq b8
Skipping double jump to b9 in beq b8
Skipping double jump to b11 in beq b10
Skipping double jump to b9 in beq b8
Skipping double jump to b5 in beq b4
Skipping double jump to b5 in beq b4
Skipping double jump to b5 in beq b4
Skipping double jump to b5 in beq b4
Skipping double jump to b5 in beq b4
Skipping double jump to b5 in beq b4
Succesful ASM optimization Pass5DoubleJumpElimination
Removing unreachable instruction rts
Succesful ASM optimization Pass5UnreachableCodeElimination
Relabelling long label b7_from_b6 to b10
Succesful ASM optimization Pass5RelabelLongLabels
Removing instruction jmp b2
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b4
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b4
Removing instruction jmp b5
Removing instruction jmp b6
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b4
Removing instruction jmp b5
Removing instruction jmp b6
Removing instruction jmp b7
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b4
Removing instruction jmp b5
Removing instruction jmp b8
Removing instruction jmp b9
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b4
Removing instruction jmp b5
Removing instruction jmp b6
Removing instruction jmp b7
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b1
Succesful ASM optimization Pass5NextJumpElimination
Replacing instruction ldx #0 with TAX
Replacing instruction ldx #0 with TAX
Removing instruction b1:
Succesful ASM optimization Pass5RedundantLabelElimination
Removing instruction b3:
Removing instruction b5:
Removing instruction b8:
Removing instruction b8:
Removing instruction b10:
Removing instruction b8:
Removing instruction b4:
Removing instruction b4:
Removing instruction b4:
Removing instruction b4:
Removing instruction b4:
Removing instruction b4:
Succesful ASM optimization Pass5UnusedLabelElimination
Fixing long branch [204] beq b4 to bne

FINAL SYMBOL TABLE
(label) @32
(label) @begin
(label) @end
(byte*) BGCOL
(const byte*) BGCOL#0 BGCOL = ((byte*))(word/dword/signed dword) 53281
(byte*) BGCOL1
(const byte*) BGCOL1#0 BGCOL1 = ((byte*))(word/dword/signed dword) 53281
(byte*) BGCOL2
(const byte*) BGCOL2#0 BGCOL2 = ((byte*))(word/dword/signed dword) 53282
(byte*) BGCOL3
(const byte*) BGCOL3#0 BGCOL3 = ((byte*))(word/dword/signed dword) 53283
(byte*) BGCOL4
(const byte*) BGCOL4#0 BGCOL4 = ((byte*))(word/dword/signed dword) 53284
(byte) BLACK
(const byte) BLACK#0 BLACK = (byte/signed byte/word/signed word/dword/signed dword) 0
(byte) BLUE
(const byte) BLUE#0 BLUE = (byte/signed byte/word/signed word/dword/signed dword) 6
(byte*) BORDERCOL
(const byte*) BORDERCOL#0 BORDERCOL = ((byte*))(word/dword/signed dword) 53280
(byte*) CIA1_PORT_A
(const byte*) CIA1_PORT_A#0 CIA1_PORT_A = ((byte*))(word/dword/signed dword) 56320
(byte*) CIA1_PORT_B
(const byte*) CIA1_PORT_B#0 CIA1_PORT_B = ((byte*))(word/dword/signed dword) 56321
(byte*) CIA2_PORT_A
(const byte*) CIA2_PORT_A#0 CIA2_PORT_A = ((byte*))(word/dword/signed dword) 56576
(byte*) CIA2_PORT_A_DDR
(const byte*) CIA2_PORT_A_DDR#0 CIA2_PORT_A_DDR = ((byte*))(word/dword/signed dword) 56578
(byte*) COLS
(const byte*) COLS#0 COLS = ((byte*))(word/dword/signed dword) 55296
(dword) DTV_COLOR_BANK_DEFAULT
(const dword) DTV_COLOR_BANK_DEFAULT#0 DTV_COLOR_BANK_DEFAULT = (dword/signed dword) 120832
(byte*) DTV_COLOR_BANK_HI
(const byte*) DTV_COLOR_BANK_HI#0 DTV_COLOR_BANK_HI = ((byte*))(word/dword/signed dword) 53303
(byte*) DTV_COLOR_BANK_LO
(const byte*) DTV_COLOR_BANK_LO#0 DTV_COLOR_BANK_LO = ((byte*))(word/dword/signed dword) 53302
(byte*) DTV_CONTROL
(const byte*) DTV_CONTROL#0 DTV_CONTROL = ((byte*))(word/dword/signed dword) 53308
(byte) DTV_CONTROL_CHUNKY_ON
(const byte) DTV_CONTROL_CHUNKY_ON#0 DTV_CONTROL_CHUNKY_ON = (byte/signed byte/word/signed word/dword/signed dword) 64
(byte) DTV_CONTROL_COLORRAM_OFF
(const byte) DTV_CONTROL_COLORRAM_OFF#0 DTV_CONTROL_COLORRAM_OFF = (byte/signed byte/word/signed word/dword/signed dword) 16
(byte) DTV_CONTROL_HIGHCOLOR_ON
(const byte) DTV_CONTROL_HIGHCOLOR_ON#0 DTV_CONTROL_HIGHCOLOR_ON = (byte/signed byte/word/signed word/dword/signed dword) 4
(byte) DTV_CONTROL_LINEAR_ADDRESSING_ON
(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0 DTV_CONTROL_LINEAR_ADDRESSING_ON = (byte/signed byte/word/signed word/dword/signed dword) 1
(byte*) DTV_FEATURE
(const byte*) DTV_FEATURE#0 DTV_FEATURE = ((byte*))(word/dword/signed dword) 53311
(byte) DTV_FEATURE_ENABLE
(const byte) DTV_FEATURE_ENABLE#0 DTV_FEATURE_ENABLE = (byte/signed byte/word/signed word/dword/signed dword) 1
(byte*) DTV_GRAPHICS_VIC_BANK
(const byte*) DTV_GRAPHICS_VIC_BANK#0 DTV_GRAPHICS_VIC_BANK = ((byte*))(word/dword/signed dword) 53309
(byte*) DTV_PALETTE
(const byte*) DTV_PALETTE#0 DTV_PALETTE = ((byte*))(word/dword/signed dword) 53760
(byte[16]) DTV_PALETTE_DEFAULT
(const byte[16]) DTV_PALETTE_DEFAULT#0 DTV_PALETTE_DEFAULT = { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 15, (byte/signed byte/word/signed word/dword/signed dword) 54, (byte/word/signed word/dword/signed dword) 190, (byte/signed byte/word/signed word/dword/signed dword) 88, (byte/word/signed word/dword/signed dword) 219, (byte/word/signed word/dword/signed dword) 134, (byte/word/signed word/dword/signed dword) 255, (byte/signed byte/word/signed word/dword/signed dword) 41, (byte/signed byte/word/signed word/dword/signed dword) 38, (byte/signed byte/word/signed word/dword/signed dword) 59, (byte/signed byte/word/signed word/dword/signed dword) 5, (byte/signed byte/word/signed word/dword/signed dword) 7, (byte/word/signed word/dword/signed dword) 223, (byte/word/signed word/dword/signed dword) 154, (byte/signed byte/word/signed word/dword/signed dword) 10 }
(byte*) DTV_PLANEA_MODULO_HI
(const byte*) DTV_PLANEA_MODULO_HI#0 DTV_PLANEA_MODULO_HI = ((byte*))(word/dword/signed dword) 53305
(byte*) DTV_PLANEA_MODULO_LO
(const byte*) DTV_PLANEA_MODULO_LO#0 DTV_PLANEA_MODULO_LO = ((byte*))(word/dword/signed dword) 53304
(byte*) DTV_PLANEA_START_HI
(const byte*) DTV_PLANEA_START_HI#0 DTV_PLANEA_START_HI = ((byte*))(word/dword/signed dword) 53317
(byte*) DTV_PLANEA_START_LO
(const byte*) DTV_PLANEA_START_LO#0 DTV_PLANEA_START_LO = ((byte*))(word/dword/signed dword) 53306
(byte*) DTV_PLANEA_START_MI
(const byte*) DTV_PLANEA_START_MI#0 DTV_PLANEA_START_MI = ((byte*))(word/dword/signed dword) 53307
(byte*) DTV_PLANEA_STEP
(const byte*) DTV_PLANEA_STEP#0 DTV_PLANEA_STEP = ((byte*))(word/dword/signed dword) 53318
(byte*) DTV_PLANEB_MODULO_HI
(const byte*) DTV_PLANEB_MODULO_HI#0 DTV_PLANEB_MODULO_HI = ((byte*))(word/dword/signed dword) 53320
(byte*) DTV_PLANEB_MODULO_LO
(const byte*) DTV_PLANEB_MODULO_LO#0 DTV_PLANEB_MODULO_LO = ((byte*))(word/dword/signed dword) 53319
(byte*) DTV_PLANEB_START_HI
(const byte*) DTV_PLANEB_START_HI#0 DTV_PLANEB_START_HI = ((byte*))(word/dword/signed dword) 53323
(byte*) DTV_PLANEB_START_LO
(const byte*) DTV_PLANEB_START_LO#0 DTV_PLANEB_START_LO = ((byte*))(word/dword/signed dword) 53321
(byte*) DTV_PLANEB_START_MI
(const byte*) DTV_PLANEB_START_MI#0 DTV_PLANEB_START_MI = ((byte*))(word/dword/signed dword) 53322
(byte*) DTV_PLANEB_STEP
(const byte*) DTV_PLANEB_STEP#0 DTV_PLANEB_STEP = ((byte*))(word/dword/signed dword) 53324
(byte) GREEN
(const byte) GREEN#0 GREEN = (byte/signed byte/word/signed word/dword/signed dword) 5
(byte) KEY_1
(const byte) KEY_1#0 KEY_1 = (byte/signed byte/word/signed word/dword/signed dword) 56
(byte) KEY_2
(const byte) KEY_2#0 KEY_2 = (byte/signed byte/word/signed word/dword/signed dword) 59
(byte) KEY_3
(const byte) KEY_3#0 KEY_3 = (byte/signed byte/word/signed word/dword/signed dword) 8
(byte) KEY_6
(const byte) KEY_6#0 KEY_6 = (byte/signed byte/word/signed word/dword/signed dword) 19
(byte) KEY_7
(const byte) KEY_7#0 KEY_7 = (byte/signed byte/word/signed word/dword/signed dword) 24
(byte) KEY_8
(const byte) KEY_8#0 KEY_8 = (byte/signed byte/word/signed word/dword/signed dword) 27
(byte) KEY_A
(const byte) KEY_A#0 KEY_A = (byte/signed byte/word/signed word/dword/signed dword) 10
(byte) KEY_B
(const byte) KEY_B#0 KEY_B = (byte/signed byte/word/signed word/dword/signed dword) 28
(byte) KEY_C
(const byte) KEY_C#0 KEY_C = (byte/signed byte/word/signed word/dword/signed dword) 20
(byte) KEY_D
(const byte) KEY_D#0 KEY_D = (byte/signed byte/word/signed word/dword/signed dword) 18
(byte) KEY_E
(const byte) KEY_E#0 KEY_E = (byte/signed byte/word/signed word/dword/signed dword) 14
(byte) KEY_SPACE
(const byte) KEY_SPACE#0 KEY_SPACE = (byte/signed byte/word/signed word/dword/signed dword) 60
(byte) LIGHT_GREEN
(const byte) LIGHT_GREEN#0 LIGHT_GREEN = (byte/signed byte/word/signed word/dword/signed dword) 13
(byte[]) MENU_TEXT
(const string) MENU_TEXT#0 MENU_TEXT = (string) "C64DTV Graphics Modes            CCLHBME@"+(string) "                                 OHIIMCC@"+(string) "                                 LUNCMMM@"+(string) "----------------------------------------@"+(string) "1. Standard Char             (V) 0000000@"+(string) "2. Extended Color Char       (V) 0000001@"+(string) "3. Multicolor Char           (V) 0000010@"+(string) "4. Standard Bitmap           (V) 0000100@"+(string) "5. Multicolor Bitmap         (V) 0000110@"+(string) "6. High Color Standard Char  (H) 0001000@"+(string) "7. High Extended Color Char  (H) 0001001@"+(string) "8. High Multicolor Char      (H) 0001010@"+(string) "9. High Multicolor Bitmap    (H) 0001110@"+(string) "a. Sixs Fred 2               (D) 0010111@"+(string) "b. Two Plane Bitmap          (D) 0011101@"+(string) "c. Sixs Fred (2 Plane MC BM) (D) 0011111@"+(string) "d. 8bpp Pixel Cell           (D) 0111011@"+(string) "e. Chunky 8bpp Bitmap        (D) 1111011@"+(string) "----------------------------------------@"+(string) "    (V) vicII (H) vicII+hicol (D) c64dtv@"+(string) "@"
(byte*) PROCPORT
(const byte*) PROCPORT#0 PROCPORT = ((byte*))(byte/signed byte/word/signed word/dword/signed dword) 1
(byte) VIC_BMM
(const byte) VIC_BMM#0 VIC_BMM = (byte/signed byte/word/signed word/dword/signed dword) 32
(byte*) VIC_CONTROL
(const byte*) VIC_CONTROL#0 VIC_CONTROL = ((byte*))(word/dword/signed dword) 53265
(byte*) VIC_CONTROL2
(const byte*) VIC_CONTROL2#0 VIC_CONTROL2 = ((byte*))(word/dword/signed dword) 53270
(byte) VIC_CSEL
(const byte) VIC_CSEL#0 VIC_CSEL = (byte/signed byte/word/signed word/dword/signed dword) 8
(byte) VIC_DEN
(const byte) VIC_DEN#0 VIC_DEN = (byte/signed byte/word/signed word/dword/signed dword) 16
(byte) VIC_ECM
(const byte) VIC_ECM#0 VIC_ECM = (byte/signed byte/word/signed word/dword/signed dword) 64
(byte) VIC_MCM
(const byte) VIC_MCM#0 VIC_MCM = (byte/signed byte/word/signed word/dword/signed dword) 16
(byte*) VIC_MEMORY
(const byte*) VIC_MEMORY#0 VIC_MEMORY = ((byte*))(word/dword/signed dword) 53272
(byte) VIC_RSEL
(const byte) VIC_RSEL#0 VIC_RSEL = (byte/signed byte/word/signed word/dword/signed dword) 8
(void()) dtvSetCpuBankSegment1((byte) dtvSetCpuBankSegment1::cpuBankIdx)
(label) dtvSetCpuBankSegment1::@return
(byte*) dtvSetCpuBankSegment1::cpuBank
(const byte*) dtvSetCpuBankSegment1::cpuBank#0 cpuBank = ((byte*))(byte/word/signed word/dword/signed dword) 255
(byte) dtvSetCpuBankSegment1::cpuBankIdx
(byte) dtvSetCpuBankSegment1::cpuBankIdx#1 reg byte a 2002.0
(byte) dtvSetCpuBankSegment1::cpuBankIdx#3 reg byte a 1003.0
(byte()) keyboard_key_pressed((byte) keyboard_key_pressed::key)
(byte~) keyboard_key_pressed::$2 reg byte a 4.0
(label) keyboard_key_pressed::@2
(label) keyboard_key_pressed::@return
(byte) keyboard_key_pressed::colidx
(byte) keyboard_key_pressed::colidx#0 reg byte y 0.6666666666666666
(byte) keyboard_key_pressed::key
(byte) keyboard_key_pressed::key#22 reg byte x 2.0
(byte) keyboard_key_pressed::return
(byte) keyboard_key_pressed::return#0 reg byte a 92.66666666666666
(byte) keyboard_key_pressed::return#10 reg byte a 202.0
(byte) keyboard_key_pressed::return#11 reg byte a 202.0
(byte) keyboard_key_pressed::return#12 reg byte a 202.0
(byte) keyboard_key_pressed::return#13 reg byte a 202.0
(byte) keyboard_key_pressed::return#14 reg byte a 202.0
(byte) keyboard_key_pressed::return#15 reg byte a 202.0
(byte) keyboard_key_pressed::return#16 reg byte a 202.0
(byte) keyboard_key_pressed::return#17 reg byte a 202.0
(byte) keyboard_key_pressed::return#18 reg byte a 202.0
(byte) keyboard_key_pressed::return#19 reg byte a 202.0
(byte) keyboard_key_pressed::return#2 reg byte a 202.0
(byte) keyboard_key_pressed::return#20 reg byte a 202.0
(byte) keyboard_key_pressed::return#21 reg byte a 202.0
(byte) keyboard_key_pressed::return#22 reg byte a 202.0
(byte) keyboard_key_pressed::return#23 reg byte a 202.0
(byte) keyboard_key_pressed::return#26 reg byte a 202.0
(byte) keyboard_key_pressed::return#27 reg byte a 202.0
(byte) keyboard_key_pressed::return#28 reg byte a 202.0
(byte) keyboard_key_pressed::return#29 reg byte a 202.0
(byte) keyboard_key_pressed::return#30 reg byte a 202.0
(byte) keyboard_key_pressed::return#31 reg byte a 202.0
(byte) keyboard_key_pressed::return#32 reg byte a 202.0
(byte) keyboard_key_pressed::rowidx
(byte) keyboard_key_pressed::rowidx#0 reg byte a 4.0
(byte[]) keyboard_matrix_col_bitmask
(const byte[]) keyboard_matrix_col_bitmask#0 keyboard_matrix_col_bitmask = { (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 2, (byte/signed byte/word/signed word/dword/signed dword) 4, (byte/signed byte/word/signed word/dword/signed dword) 8, (byte/signed byte/word/signed word/dword/signed dword) 16, (byte/signed byte/word/signed word/dword/signed dword) 32, (byte/signed byte/word/signed word/dword/signed dword) 64, (byte/word/signed word/dword/signed dword) 128 }
(byte()) keyboard_matrix_read((byte) keyboard_matrix_read::rowid)
(label) keyboard_matrix_read::@return
(byte) keyboard_matrix_read::return
(byte) keyboard_matrix_read::return#0 reg byte a 1.3333333333333333
(byte) keyboard_matrix_read::return#2 reg byte a 4.0
(byte) keyboard_matrix_read::row_pressed_bits
(byte) keyboard_matrix_read::rowid
(byte) keyboard_matrix_read::rowid#0 reg byte x 4.0
(byte[8]) keyboard_matrix_row_bitmask
(const byte[8]) keyboard_matrix_row_bitmask#0 keyboard_matrix_row_bitmask = { (byte/word/signed word/dword/signed dword) 254, (byte/word/signed word/dword/signed dword) 253, (byte/word/signed word/dword/signed dword) 251, (byte/word/signed word/dword/signed dword) 247, (byte/word/signed word/dword/signed dword) 239, (byte/word/signed word/dword/signed dword) 223, (byte/word/signed word/dword/signed dword) 191, (byte/signed byte/word/signed word/dword/signed dword) 127 }
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@return
(void()) menu()
(byte~) menu::$29 reg byte a 202.0
(byte~) menu::$33 reg byte a 202.0
(byte~) menu::$37 reg byte a 202.0
(byte~) menu::$41 reg byte a 202.0
(byte~) menu::$45 reg byte a 202.0
(byte~) menu::$49 reg byte a 202.0
(byte~) menu::$53 reg byte a 202.0
(byte~) menu::$57 reg byte a 202.0
(byte~) menu::$61 reg byte a 202.0
(byte~) menu::$65 reg byte a 202.0
(byte~) menu::$69 reg byte a 202.0
(label) menu::@1
(label) menu::@10
(label) menu::@11
(label) menu::@12
(label) menu::@13
(label) menu::@14
(label) menu::@15
(label) menu::@18
(label) menu::@2
(label) menu::@21
(label) menu::@23
(label) menu::@25
(label) menu::@27
(label) menu::@29
(label) menu::@3
(label) menu::@31
(label) menu::@33
(label) menu::@35
(label) menu::@37
(label) menu::@39
(label) menu::@4
(label) menu::@41
(label) menu::@44
(label) menu::@45
(label) menu::@47
(label) menu::@48
(label) menu::@50
(label) menu::@52
(label) menu::@54
(label) menu::@56
(label) menu::@58
(label) menu::@6
(label) menu::@60
(label) menu::@62
(label) menu::@64
(label) menu::@66
(label) menu::@7
(label) menu::@8
(label) menu::@9
(label) menu::@return
(byte*) menu::CHARSET
(const byte*) menu::CHARSET#0 CHARSET = ((byte*))(word/dword/signed dword) 38912
(byte*) menu::SCREEN
(const byte*) menu::SCREEN#0 SCREEN = ((byte*))(word/dword/signed dword) 32768
(byte*) menu::c
(byte*) menu::c#1 c zp ZP_WORD:2 151.5
(byte*) menu::c#2 c zp ZP_WORD:2 151.5
(byte) menu::i
(byte) menu::i#1 reg byte x 151.5
(byte) menu::i#2 reg byte x 202.0
(void()) mode_8bppchunkybmm()
(word~) mode_8bppchunkybmm::$20 $20 zp ZP_WORD:10 2002.0
(byte~) mode_8bppchunkybmm::$27 reg byte a 202.0
(label) mode_8bppchunkybmm::@1
(label) mode_8bppchunkybmm::@10
(label) mode_8bppchunkybmm::@11
(label) mode_8bppchunkybmm::@12
(label) mode_8bppchunkybmm::@19
(label) mode_8bppchunkybmm::@2
(label) mode_8bppchunkybmm::@21
(label) mode_8bppchunkybmm::@3
(label) mode_8bppchunkybmm::@4
(label) mode_8bppchunkybmm::@5
(label) mode_8bppchunkybmm::@6
(label) mode_8bppchunkybmm::@9
(label) mode_8bppchunkybmm::@return
(dword) mode_8bppchunkybmm::PLANEB
(const dword) mode_8bppchunkybmm::PLANEB#0 PLANEB = (dword/signed dword) 131072
(byte) mode_8bppchunkybmm::c
(byte) mode_8bppchunkybmm::c#0 reg byte a 2002.0
(byte*) mode_8bppchunkybmm::gfxb
(byte*) mode_8bppchunkybmm::gfxb#1 gfxb zp ZP_WORD:5 420.59999999999997
(byte*) mode_8bppchunkybmm::gfxb#3 gfxb zp ZP_WORD:5 1552.0
(byte*) mode_8bppchunkybmm::gfxb#4 gfxb zp ZP_WORD:5 750.75
(byte*) mode_8bppchunkybmm::gfxb#5 gfxb zp ZP_WORD:5 202.0
(byte) mode_8bppchunkybmm::gfxbCpuBank
(byte) mode_8bppchunkybmm::gfxbCpuBank#2 reg byte x 2002.0
(byte) mode_8bppchunkybmm::gfxbCpuBank#4 reg byte x 1026.25
(byte) mode_8bppchunkybmm::gfxbCpuBank#7 reg byte x 202.0
(byte) mode_8bppchunkybmm::gfxbCpuBank#8 reg byte x 344.8888888888889
(byte) mode_8bppchunkybmm::i
(byte) mode_8bppchunkybmm::i#1 reg byte x 151.5
(byte) mode_8bppchunkybmm::i#2 reg byte x 202.0
(word) mode_8bppchunkybmm::x
(word) mode_8bppchunkybmm::x#1 x zp ZP_WORD:2 1501.5
(word) mode_8bppchunkybmm::x#2 x zp ZP_WORD:2 300.29999999999995
(byte) mode_8bppchunkybmm::y
(byte) mode_8bppchunkybmm::y#1 y zp ZP_BYTE:4 151.5
(byte) mode_8bppchunkybmm::y#6 y zp ZP_BYTE:4 92.53846153846155
(void()) mode_8bpppixelcell()
(byte~) mode_8bpppixelcell::$11 reg byte a 2002.0
(byte~) mode_8bpppixelcell::$12 $12 zp ZP_BYTE:7 1001.0
(byte~) mode_8bpppixelcell::$13 reg byte a 2002.0
(byte~) mode_8bpppixelcell::$14 reg byte a 2002.0
(byte~) mode_8bpppixelcell::$17 reg byte a 20002.0
(byte~) mode_8bpppixelcell::$24 reg byte a 202.0
(label) mode_8bpppixelcell::@1
(label) mode_8bpppixelcell::@13
(label) mode_8bpppixelcell::@14
(label) mode_8bpppixelcell::@15
(label) mode_8bpppixelcell::@16
(label) mode_8bpppixelcell::@17
(label) mode_8bpppixelcell::@18
(label) mode_8bpppixelcell::@2
(label) mode_8bpppixelcell::@24
(label) mode_8bpppixelcell::@3
(label) mode_8bpppixelcell::@4
(label) mode_8bpppixelcell::@5
(label) mode_8bpppixelcell::@6
(label) mode_8bpppixelcell::@7
(label) mode_8bpppixelcell::@8
(label) mode_8bpppixelcell::@9
(label) mode_8bpppixelcell::@return
(byte*) mode_8bpppixelcell::CHARGEN
(byte*) mode_8bpppixelcell::PLANEA
(const byte*) mode_8bpppixelcell::PLANEA#0 PLANEA = ((byte*))(word/signed word/dword/signed dword) 15360
(byte*) mode_8bpppixelcell::PLANEB
(const byte*) mode_8bpppixelcell::PLANEB#0 PLANEB = ((byte*))(word/signed word/dword/signed dword) 16384
(byte) mode_8bpppixelcell::ax
(byte) mode_8bpppixelcell::ax#1 reg byte x 1501.5
(byte) mode_8bpppixelcell::ax#2 reg byte x 429.0
(byte) mode_8bpppixelcell::ay
(byte) mode_8bpppixelcell::ay#1 ay zp ZP_BYTE:4 151.5
(byte) mode_8bpppixelcell::ay#4 ay zp ZP_BYTE:4 120.29999999999998
(byte) mode_8bpppixelcell::bits
(byte) mode_8bpppixelcell::bits#0 bits zp ZP_BYTE:8 1001.0
(byte) mode_8bpppixelcell::bits#1 bits zp ZP_BYTE:8 5000.5
(byte) mode_8bpppixelcell::bits#2 bits zp ZP_BYTE:8 4429.142857142857
(byte) mode_8bpppixelcell::c
(byte) mode_8bpppixelcell::c#2 reg byte a 20002.0
(byte~) mode_8bpppixelcell::c#3 reg byte a 20002.0
(byte) mode_8bpppixelcell::ch
(byte) mode_8bpppixelcell::ch#1 ch zp ZP_BYTE:4 151.5
(byte) mode_8bpppixelcell::ch#8 ch zp ZP_BYTE:4 11.882352941176471
(byte*) mode_8bpppixelcell::chargen
(byte*) mode_8bpppixelcell::chargen#1 chargen zp ZP_WORD:2 131.4375
(byte*) mode_8bpppixelcell::chargen#2 chargen zp ZP_WORD:2 1552.0
(byte*) mode_8bpppixelcell::chargen#4 chargen zp ZP_WORD:2 202.0
(byte) mode_8bpppixelcell::col
(byte) mode_8bpppixelcell::col#1 col zp ZP_BYTE:9 3014.857142857143
(byte) mode_8bpppixelcell::col#2 col zp ZP_BYTE:9 3875.5
(byte) mode_8bpppixelcell::col#5 col zp ZP_BYTE:9 701.0
(byte) mode_8bpppixelcell::col#7 col zp ZP_BYTE:9 202.0
(byte) mode_8bpppixelcell::cp
(byte) mode_8bpppixelcell::cp#1 reg byte x 15001.5
(byte) mode_8bpppixelcell::cp#2 reg byte x 2222.4444444444443
(byte) mode_8bpppixelcell::cr
(byte) mode_8bpppixelcell::cr#1 cr zp ZP_BYTE:7 1501.5
(byte) mode_8bpppixelcell::cr#6 cr zp ZP_BYTE:7 143.0
(byte*) mode_8bpppixelcell::gfxa
(byte*) mode_8bpppixelcell::gfxa#1 gfxa zp ZP_WORD:2 420.59999999999997
(byte*) mode_8bpppixelcell::gfxa#2 gfxa zp ZP_WORD:2 517.3333333333334
(byte*) mode_8bpppixelcell::gfxa#3 gfxa zp ZP_WORD:2 202.0
(byte*) mode_8bpppixelcell::gfxb
(byte*) mode_8bpppixelcell::gfxb#1 gfxb zp ZP_WORD:5 2344.8888888888887
(byte*) mode_8bpppixelcell::gfxb#2 gfxb zp ZP_WORD:5 5167.333333333333
(byte*) mode_8bpppixelcell::gfxb#5 gfxb zp ZP_WORD:5 701.0
(byte*) mode_8bpppixelcell::gfxb#7 gfxb zp ZP_WORD:5 202.0
(byte) mode_8bpppixelcell::i
(byte) mode_8bpppixelcell::i#1 reg byte x 151.5
(byte) mode_8bpppixelcell::i#2 reg byte x 202.0
(void()) mode_ecmchar()
(byte~) mode_ecmchar::$25 reg byte a 2002.0
(byte~) mode_ecmchar::$26 reg byte a 2002.0
(byte~) mode_ecmchar::$27 reg byte a 2002.0
(byte~) mode_ecmchar::$28 $28 zp ZP_BYTE:7 1001.0
(byte~) mode_ecmchar::$29 reg byte a 2002.0
(byte~) mode_ecmchar::$30 reg byte a 2002.0
(byte~) mode_ecmchar::$33 reg byte a 202.0
(label) mode_ecmchar::@1
(label) mode_ecmchar::@16
(label) mode_ecmchar::@2
(label) mode_ecmchar::@3
(label) mode_ecmchar::@4
(label) mode_ecmchar::@5
(label) mode_ecmchar::@8
(label) mode_ecmchar::@9
(label) mode_ecmchar::@return
(byte*) mode_ecmchar::ECMCHAR_CHARSET
(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0 ECMCHAR_CHARSET = ((byte*))(word/dword/signed dword) 36864
(byte*) mode_ecmchar::ECMCHAR_COLORS
(const byte*) mode_ecmchar::ECMCHAR_COLORS#0 ECMCHAR_COLORS = ((byte*))(word/dword/signed dword) 33792
(byte*) mode_ecmchar::ECMCHAR_SCREEN
(const byte*) mode_ecmchar::ECMCHAR_SCREEN#0 ECMCHAR_SCREEN = ((byte*))(word/dword/signed dword) 32768
(byte*) mode_ecmchar::ch
(byte*) mode_ecmchar::ch#1 ch zp ZP_WORD:5 420.59999999999997
(byte*) mode_ecmchar::ch#2 ch zp ZP_WORD:5 310.4
(byte*) mode_ecmchar::ch#3 ch zp ZP_WORD:5 202.0
(byte*) mode_ecmchar::col
(byte*) mode_ecmchar::col#1 col zp ZP_WORD:2 191.1818181818182
(byte*) mode_ecmchar::col#2 col zp ZP_WORD:2 776.0
(byte*) mode_ecmchar::col#3 col zp ZP_WORD:2 202.0
(byte) mode_ecmchar::cx
(byte) mode_ecmchar::cx#1 reg byte x 1501.5
(byte) mode_ecmchar::cx#2 reg byte x 364.0
(byte) mode_ecmchar::cy
(byte) mode_ecmchar::cy#1 cy zp ZP_BYTE:4 151.5
(byte) mode_ecmchar::cy#4 cy zp ZP_BYTE:4 157.42857142857144
(byte) mode_ecmchar::i
(byte) mode_ecmchar::i#1 reg byte x 151.5
(byte) mode_ecmchar::i#2 reg byte x 202.0
(void()) mode_hicolecmchar()
(byte~) mode_hicolecmchar::$25 reg byte a 2002.0
(byte~) mode_hicolecmchar::$26 $26 zp ZP_BYTE:7 1001.0
(byte~) mode_hicolecmchar::$27 reg byte a 2002.0
(byte~) mode_hicolecmchar::$31 reg byte a 202.0
(label) mode_hicolecmchar::@1
(label) mode_hicolecmchar::@16
(label) mode_hicolecmchar::@2
(label) mode_hicolecmchar::@3
(label) mode_hicolecmchar::@4
(label) mode_hicolecmchar::@5
(label) mode_hicolecmchar::@8
(label) mode_hicolecmchar::@9
(label) mode_hicolecmchar::@return
(byte*) mode_hicolecmchar::CHARSET
(const byte*) mode_hicolecmchar::CHARSET#0 CHARSET = ((byte*))(word/dword/signed dword) 36864
(byte*) mode_hicolecmchar::COLORS
(const byte*) mode_hicolecmchar::COLORS#0 COLORS = ((byte*))(word/dword/signed dword) 33792
(byte*) mode_hicolecmchar::SCREEN
(const byte*) mode_hicolecmchar::SCREEN#0 SCREEN = ((byte*))(word/dword/signed dword) 32768
(byte*) mode_hicolecmchar::ch
(byte*) mode_hicolecmchar::ch#1 ch zp ZP_WORD:5 420.59999999999997
(byte*) mode_hicolecmchar::ch#2 ch zp ZP_WORD:5 388.0
(byte*) mode_hicolecmchar::ch#3 ch zp ZP_WORD:5 202.0
(byte*) mode_hicolecmchar::col
(byte*) mode_hicolecmchar::col#1 col zp ZP_WORD:2 300.42857142857144
(byte*) mode_hicolecmchar::col#2 col zp ZP_WORD:2 517.3333333333334
(byte*) mode_hicolecmchar::col#3 col zp ZP_WORD:2 202.0
(byte) mode_hicolecmchar::cx
(byte) mode_hicolecmchar::cx#1 reg byte x 1501.5
(byte) mode_hicolecmchar::cx#2 reg byte x 333.6666666666667
(byte) mode_hicolecmchar::cy
(byte) mode_hicolecmchar::cy#1 cy zp ZP_BYTE:4 151.5
(byte) mode_hicolecmchar::cy#4 cy zp ZP_BYTE:4 100.25000000000001
(byte) mode_hicolecmchar::i
(byte) mode_hicolecmchar::i#1 reg byte x 151.5
(byte) mode_hicolecmchar::i#2 reg byte x 202.0
(byte) mode_hicolecmchar::v
(byte) mode_hicolecmchar::v#0 reg byte a 1001.0
(void()) mode_hicolmcchar()
(byte~) mode_hicolmcchar::$25 reg byte a 2002.0
(byte~) mode_hicolmcchar::$26 $26 zp ZP_BYTE:7 1001.0
(byte~) mode_hicolmcchar::$27 reg byte a 2002.0
(byte~) mode_hicolmcchar::$31 reg byte a 202.0
(label) mode_hicolmcchar::@1
(label) mode_hicolmcchar::@16
(label) mode_hicolmcchar::@2
(label) mode_hicolmcchar::@3
(label) mode_hicolmcchar::@4
(label) mode_hicolmcchar::@5
(label) mode_hicolmcchar::@8
(label) mode_hicolmcchar::@9
(label) mode_hicolmcchar::@return
(byte*) mode_hicolmcchar::CHARSET
(const byte*) mode_hicolmcchar::CHARSET#0 CHARSET = ((byte*))(word/dword/signed dword) 36864
(byte*) mode_hicolmcchar::COLORS
(const byte*) mode_hicolmcchar::COLORS#0 COLORS = ((byte*))(word/dword/signed dword) 33792
(byte*) mode_hicolmcchar::SCREEN
(const byte*) mode_hicolmcchar::SCREEN#0 SCREEN = ((byte*))(word/dword/signed dword) 32768
(byte*) mode_hicolmcchar::ch
(byte*) mode_hicolmcchar::ch#1 ch zp ZP_WORD:5 420.59999999999997
(byte*) mode_hicolmcchar::ch#2 ch zp ZP_WORD:5 388.0
(byte*) mode_hicolmcchar::ch#3 ch zp ZP_WORD:5 202.0
(byte*) mode_hicolmcchar::col
(byte*) mode_hicolmcchar::col#1 col zp ZP_WORD:2 300.42857142857144
(byte*) mode_hicolmcchar::col#2 col zp ZP_WORD:2 517.3333333333334
(byte*) mode_hicolmcchar::col#3 col zp ZP_WORD:2 202.0
(byte) mode_hicolmcchar::cx
(byte) mode_hicolmcchar::cx#1 reg byte x 1501.5
(byte) mode_hicolmcchar::cx#2 reg byte x 333.6666666666667
(byte) mode_hicolmcchar::cy
(byte) mode_hicolmcchar::cy#1 cy zp ZP_BYTE:4 151.5
(byte) mode_hicolmcchar::cy#4 cy zp ZP_BYTE:4 100.25000000000001
(byte) mode_hicolmcchar::i
(byte) mode_hicolmcchar::i#1 reg byte x 151.5
(byte) mode_hicolmcchar::i#2 reg byte x 202.0
(byte) mode_hicolmcchar::v
(byte) mode_hicolmcchar::v#0 reg byte a 1001.0
(void()) mode_hicolstdchar()
(byte~) mode_hicolstdchar::$24 reg byte a 2002.0
(byte~) mode_hicolstdchar::$25 $25 zp ZP_BYTE:7 1001.0
(byte~) mode_hicolstdchar::$26 reg byte a 2002.0
(byte~) mode_hicolstdchar::$30 reg byte a 202.0
(label) mode_hicolstdchar::@1
(label) mode_hicolstdchar::@16
(label) mode_hicolstdchar::@2
(label) mode_hicolstdchar::@3
(label) mode_hicolstdchar::@4
(label) mode_hicolstdchar::@5
(label) mode_hicolstdchar::@8
(label) mode_hicolstdchar::@9
(label) mode_hicolstdchar::@return
(byte*) mode_hicolstdchar::CHARSET
(const byte*) mode_hicolstdchar::CHARSET#0 CHARSET = ((byte*))(word/dword/signed dword) 36864
(byte*) mode_hicolstdchar::COLORS
(const byte*) mode_hicolstdchar::COLORS#0 COLORS = ((byte*))(word/dword/signed dword) 33792
(byte*) mode_hicolstdchar::SCREEN
(const byte*) mode_hicolstdchar::SCREEN#0 SCREEN = ((byte*))(word/dword/signed dword) 32768
(byte*) mode_hicolstdchar::ch
(byte*) mode_hicolstdchar::ch#1 ch zp ZP_WORD:5 420.59999999999997
(byte*) mode_hicolstdchar::ch#2 ch zp ZP_WORD:5 388.0
(byte*) mode_hicolstdchar::ch#3 ch zp ZP_WORD:5 202.0
(byte*) mode_hicolstdchar::col
(byte*) mode_hicolstdchar::col#1 col zp ZP_WORD:2 300.42857142857144
(byte*) mode_hicolstdchar::col#2 col zp ZP_WORD:2 517.3333333333334
(byte*) mode_hicolstdchar::col#3 col zp ZP_WORD:2 202.0
(byte) mode_hicolstdchar::cx
(byte) mode_hicolstdchar::cx#1 reg byte x 1501.5
(byte) mode_hicolstdchar::cx#2 reg byte x 333.6666666666667
(byte) mode_hicolstdchar::cy
(byte) mode_hicolstdchar::cy#1 cy zp ZP_BYTE:4 151.5
(byte) mode_hicolstdchar::cy#4 cy zp ZP_BYTE:4 100.25000000000001
(byte) mode_hicolstdchar::i
(byte) mode_hicolstdchar::i#1 reg byte x 151.5
(byte) mode_hicolstdchar::i#2 reg byte x 202.0
(byte) mode_hicolstdchar::v
(byte) mode_hicolstdchar::v#0 reg byte a 1001.0
(void()) mode_mcchar()
(byte~) mode_mcchar::$25 reg byte a 2002.0
(byte~) mode_mcchar::$26 reg byte a 2002.0
(byte~) mode_mcchar::$27 reg byte a 2002.0
(byte~) mode_mcchar::$28 $28 zp ZP_BYTE:7 1001.0
(byte~) mode_mcchar::$29 reg byte a 2002.0
(byte~) mode_mcchar::$30 reg byte a 2002.0
(byte~) mode_mcchar::$33 reg byte a 202.0
(label) mode_mcchar::@1
(label) mode_mcchar::@16
(label) mode_mcchar::@2
(label) mode_mcchar::@3
(label) mode_mcchar::@4
(label) mode_mcchar::@5
(label) mode_mcchar::@8
(label) mode_mcchar::@9
(label) mode_mcchar::@return
(byte*) mode_mcchar::CHARSET
(const byte*) mode_mcchar::CHARSET#0 CHARSET = ((byte*))(word/dword/signed dword) 36864
(byte*) mode_mcchar::COLORS
(const byte*) mode_mcchar::COLORS#0 COLORS = ((byte*))(word/dword/signed dword) 33792
(byte*) mode_mcchar::SCREEN
(const byte*) mode_mcchar::SCREEN#0 SCREEN = ((byte*))(word/dword/signed dword) 32768
(byte*) mode_mcchar::ch
(byte*) mode_mcchar::ch#1 ch zp ZP_WORD:5 420.59999999999997
(byte*) mode_mcchar::ch#2 ch zp ZP_WORD:5 310.4
(byte*) mode_mcchar::ch#3 ch zp ZP_WORD:5 202.0
(byte*) mode_mcchar::col
(byte*) mode_mcchar::col#1 col zp ZP_WORD:2 191.1818181818182
(byte*) mode_mcchar::col#2 col zp ZP_WORD:2 776.0
(byte*) mode_mcchar::col#3 col zp ZP_WORD:2 202.0
(byte) mode_mcchar::cx
(byte) mode_mcchar::cx#1 reg byte x 1501.5
(byte) mode_mcchar::cx#2 reg byte x 364.0
(byte) mode_mcchar::cy
(byte) mode_mcchar::cy#1 cy zp ZP_BYTE:4 151.5
(byte) mode_mcchar::cy#4 cy zp ZP_BYTE:4 157.42857142857144
(byte) mode_mcchar::i
(byte) mode_mcchar::i#1 reg byte x 151.5
(byte) mode_mcchar::i#2 reg byte x 202.0
(void()) mode_sixsfred()
(byte~) mode_sixsfred::$15 reg byte a 2002.0
(byte~) mode_sixsfred::$16 reg byte a 2002.0
(byte~) mode_sixsfred::$19 reg byte a 2002.0
(byte~) mode_sixsfred::$25 reg byte a 202.0
(label) mode_sixsfred::@1
(label) mode_sixsfred::@12
(label) mode_sixsfred::@13
(label) mode_sixsfred::@15
(label) mode_sixsfred::@17
(label) mode_sixsfred::@2
(label) mode_sixsfred::@24
(label) mode_sixsfred::@3
(label) mode_sixsfred::@4
(label) mode_sixsfred::@5
(label) mode_sixsfred::@6
(label) mode_sixsfred::@7
(label) mode_sixsfred::@8
(label) mode_sixsfred::@9
(label) mode_sixsfred::@return
(byte*) mode_sixsfred::COLORS
(const byte*) mode_sixsfred::COLORS#0 COLORS = ((byte*))(word/dword/signed dword) 32768
(byte*) mode_sixsfred::PLANEA
(const byte*) mode_sixsfred::PLANEA#0 PLANEA = ((byte*))(word/signed word/dword/signed dword) 16384
(byte*) mode_sixsfred::PLANEB
(const byte*) mode_sixsfred::PLANEB#0 PLANEB = ((byte*))(word/signed word/dword/signed dword) 24576
(byte) mode_sixsfred::ax
(byte) mode_sixsfred::ax#1 reg byte x 1501.5
(byte) mode_sixsfred::ax#2 reg byte x 400.4
(byte) mode_sixsfred::ay
(byte) mode_sixsfred::ay#1 ay zp ZP_BYTE:4 151.5
(byte) mode_sixsfred::ay#4 ay zp ZP_BYTE:4 150.375
(byte) mode_sixsfred::bx
(byte) mode_sixsfred::bx#1 reg byte x 1501.5
(byte) mode_sixsfred::bx#2 reg byte x 667.3333333333334
(byte) mode_sixsfred::by
(byte) mode_sixsfred::by#1 by zp ZP_BYTE:4 151.5
(byte) mode_sixsfred::by#4 by zp ZP_BYTE:4 33.666666666666664
(byte*) mode_sixsfred::col
(byte*) mode_sixsfred::col#1 col zp ZP_WORD:2 420.59999999999997
(byte*) mode_sixsfred::col#2 col zp ZP_WORD:2 776.0
(byte*) mode_sixsfred::col#3 col zp ZP_WORD:2 202.0
(byte) mode_sixsfred::cx
(byte) mode_sixsfred::cx#1 reg byte x 1501.5
(byte) mode_sixsfred::cx#2 reg byte x 600.5999999999999
(byte) mode_sixsfred::cy
(byte) mode_sixsfred::cy#1 cy zp ZP_BYTE:4 151.5
(byte) mode_sixsfred::cy#4 cy zp ZP_BYTE:4 150.375
(byte*) mode_sixsfred::gfxa
(byte*) mode_sixsfred::gfxa#1 gfxa zp ZP_WORD:2 420.59999999999997
(byte*) mode_sixsfred::gfxa#2 gfxa zp ZP_WORD:2 776.0
(byte*) mode_sixsfred::gfxa#3 gfxa zp ZP_WORD:2 202.0
(byte*) mode_sixsfred::gfxb
(byte*) mode_sixsfred::gfxb#1 gfxb zp ZP_WORD:2 420.59999999999997
(byte*) mode_sixsfred::gfxb#2 gfxb zp ZP_WORD:2 1552.0
(byte*) mode_sixsfred::gfxb#3 gfxb zp ZP_WORD:2 202.0
(byte) mode_sixsfred::i
(byte) mode_sixsfred::i#1 reg byte x 151.5
(byte) mode_sixsfred::i#2 reg byte x 202.0
(byte) mode_sixsfred::row
(byte) mode_sixsfred::row#0 reg byte a 2002.0
(byte[]) mode_sixsfred::row_bitmask
(const byte[]) mode_sixsfred::row_bitmask#0 row_bitmask = { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 85, (byte/word/signed word/dword/signed dword) 170, (byte/word/signed word/dword/signed dword) 255 }
(void()) mode_sixsfred2()
(byte~) mode_sixsfred2::$14 reg byte a 2002.0
(byte~) mode_sixsfred2::$15 $15 zp ZP_BYTE:7 1001.0
(byte~) mode_sixsfred2::$16 reg byte a 2002.0
(byte~) mode_sixsfred2::$17 reg byte a 2002.0
(byte~) mode_sixsfred2::$20 reg byte a 2002.0
(byte~) mode_sixsfred2::$26 reg byte a 202.0
(label) mode_sixsfred2::@1
(label) mode_sixsfred2::@12
(label) mode_sixsfred2::@13
(label) mode_sixsfred2::@15
(label) mode_sixsfred2::@17
(label) mode_sixsfred2::@2
(label) mode_sixsfred2::@24
(label) mode_sixsfred2::@3
(label) mode_sixsfred2::@4
(label) mode_sixsfred2::@5
(label) mode_sixsfred2::@6
(label) mode_sixsfred2::@7
(label) mode_sixsfred2::@8
(label) mode_sixsfred2::@9
(label) mode_sixsfred2::@return
(byte*) mode_sixsfred2::COLORS
(const byte*) mode_sixsfred2::COLORS#0 COLORS = ((byte*))(word/dword/signed dword) 32768
(byte*) mode_sixsfred2::PLANEA
(const byte*) mode_sixsfred2::PLANEA#0 PLANEA = ((byte*))(word/signed word/dword/signed dword) 16384
(byte*) mode_sixsfred2::PLANEB
(const byte*) mode_sixsfred2::PLANEB#0 PLANEB = ((byte*))(word/signed word/dword/signed dword) 24576
(byte) mode_sixsfred2::ax
(byte) mode_sixsfred2::ax#1 reg byte x 1501.5
(byte) mode_sixsfred2::ax#2 reg byte x 400.4
(byte) mode_sixsfred2::ay
(byte) mode_sixsfred2::ay#1 ay zp ZP_BYTE:4 151.5
(byte) mode_sixsfred2::ay#4 ay zp ZP_BYTE:4 150.375
(byte) mode_sixsfred2::bx
(byte) mode_sixsfred2::bx#1 reg byte x 1501.5
(byte) mode_sixsfred2::bx#2 reg byte x 667.3333333333334
(byte) mode_sixsfred2::by
(byte) mode_sixsfred2::by#1 by zp ZP_BYTE:4 151.5
(byte) mode_sixsfred2::by#4 by zp ZP_BYTE:4 33.666666666666664
(byte*) mode_sixsfred2::col
(byte*) mode_sixsfred2::col#1 col zp ZP_WORD:2 420.59999999999997
(byte*) mode_sixsfred2::col#2 col zp ZP_WORD:2 517.3333333333334
(byte*) mode_sixsfred2::col#3 col zp ZP_WORD:2 202.0
(byte) mode_sixsfred2::cx
(byte) mode_sixsfred2::cx#1 reg byte x 1501.5
(byte) mode_sixsfred2::cx#2 reg byte x 429.0
(byte) mode_sixsfred2::cy
(byte) mode_sixsfred2::cy#1 cy zp ZP_BYTE:4 151.5
(byte) mode_sixsfred2::cy#4 cy zp ZP_BYTE:4 120.29999999999998
(byte*) mode_sixsfred2::gfxa
(byte*) mode_sixsfred2::gfxa#1 gfxa zp ZP_WORD:2 420.59999999999997
(byte*) mode_sixsfred2::gfxa#2 gfxa zp ZP_WORD:2 776.0
(byte*) mode_sixsfred2::gfxa#3 gfxa zp ZP_WORD:2 202.0
(byte*) mode_sixsfred2::gfxb
(byte*) mode_sixsfred2::gfxb#1 gfxb zp ZP_WORD:2 420.59999999999997
(byte*) mode_sixsfred2::gfxb#2 gfxb zp ZP_WORD:2 1552.0
(byte*) mode_sixsfred2::gfxb#3 gfxb zp ZP_WORD:2 202.0
(byte) mode_sixsfred2::i
(byte) mode_sixsfred2::i#1 reg byte x 151.5
(byte) mode_sixsfred2::i#2 reg byte x 202.0
(byte) mode_sixsfred2::row
(byte) mode_sixsfred2::row#0 reg byte a 2002.0
(byte[]) mode_sixsfred2::row_bitmask
(const byte[]) mode_sixsfred2::row_bitmask#0 row_bitmask = { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 85, (byte/word/signed word/dword/signed dword) 170, (byte/word/signed word/dword/signed dword) 255 }
(void()) mode_stdchar()
(byte~) mode_stdchar::$24 reg byte a 2002.0
(byte~) mode_stdchar::$25 reg byte a 2002.0
(byte~) mode_stdchar::$26 reg byte a 2002.0
(byte~) mode_stdchar::$27 $27 zp ZP_BYTE:7 1001.0
(byte~) mode_stdchar::$28 reg byte a 2002.0
(byte~) mode_stdchar::$29 reg byte a 2002.0
(byte~) mode_stdchar::$32 reg byte a 202.0
(label) mode_stdchar::@1
(label) mode_stdchar::@16
(label) mode_stdchar::@2
(label) mode_stdchar::@3
(label) mode_stdchar::@4
(label) mode_stdchar::@5
(label) mode_stdchar::@8
(label) mode_stdchar::@9
(label) mode_stdchar::@return
(byte*) mode_stdchar::CHARSET
(const byte*) mode_stdchar::CHARSET#0 CHARSET = ((byte*))(word/dword/signed dword) 36864
(byte*) mode_stdchar::COLORS
(const byte*) mode_stdchar::COLORS#0 COLORS = ((byte*))(word/dword/signed dword) 33792
(byte*) mode_stdchar::SCREEN
(const byte*) mode_stdchar::SCREEN#0 SCREEN = ((byte*))(word/dword/signed dword) 32768
(byte*) mode_stdchar::ch
(byte*) mode_stdchar::ch#1 ch zp ZP_WORD:5 420.59999999999997
(byte*) mode_stdchar::ch#2 ch zp ZP_WORD:5 310.4
(byte*) mode_stdchar::ch#3 ch zp ZP_WORD:5 202.0
(byte*) mode_stdchar::col
(byte*) mode_stdchar::col#1 col zp ZP_WORD:2 191.1818181818182
(byte*) mode_stdchar::col#2 col zp ZP_WORD:2 776.0
(byte*) mode_stdchar::col#3 col zp ZP_WORD:2 202.0
(byte) mode_stdchar::cx
(byte) mode_stdchar::cx#1 reg byte x 1501.5
(byte) mode_stdchar::cx#2 reg byte x 364.0
(byte) mode_stdchar::cy
(byte) mode_stdchar::cy#1 cy zp ZP_BYTE:4 151.5
(byte) mode_stdchar::cy#4 cy zp ZP_BYTE:4 157.42857142857144
(byte) mode_stdchar::i
(byte) mode_stdchar::i#1 reg byte x 151.5
(byte) mode_stdchar::i#2 reg byte x 202.0
(void()) mode_twoplanebitmap()
(byte~) mode_twoplanebitmap::$14 reg byte a 2002.0
(byte~) mode_twoplanebitmap::$15 $15 zp ZP_BYTE:7 1001.0
(byte~) mode_twoplanebitmap::$16 reg byte a 2002.0
(byte~) mode_twoplanebitmap::$17 reg byte a 2002.0
(byte~) mode_twoplanebitmap::$20 reg byte a 2002.0
(byte~) mode_twoplanebitmap::$27 reg byte a 202.0
(label) mode_twoplanebitmap::@1
(label) mode_twoplanebitmap::@10
(label) mode_twoplanebitmap::@11
(label) mode_twoplanebitmap::@14
(label) mode_twoplanebitmap::@15
(label) mode_twoplanebitmap::@17
(label) mode_twoplanebitmap::@19
(label) mode_twoplanebitmap::@2
(label) mode_twoplanebitmap::@21
(label) mode_twoplanebitmap::@28
(label) mode_twoplanebitmap::@3
(label) mode_twoplanebitmap::@4
(label) mode_twoplanebitmap::@5
(label) mode_twoplanebitmap::@6
(label) mode_twoplanebitmap::@7
(label) mode_twoplanebitmap::@8
(label) mode_twoplanebitmap::@9
(label) mode_twoplanebitmap::@return
(byte*) mode_twoplanebitmap::COLORS
(const byte*) mode_twoplanebitmap::COLORS#0 COLORS = ((byte*))(word/dword/signed dword) 32768
(byte*) mode_twoplanebitmap::PLANEA
(const byte*) mode_twoplanebitmap::PLANEA#0 PLANEA = ((byte*))(word/signed word/dword/signed dword) 16384
(byte*) mode_twoplanebitmap::PLANEB
(const byte*) mode_twoplanebitmap::PLANEB#0 PLANEB = ((byte*))(word/signed word/dword/signed dword) 24576
(byte) mode_twoplanebitmap::ax
(byte) mode_twoplanebitmap::ax#1 reg byte x 1501.5
(byte) mode_twoplanebitmap::ax#2 reg byte x 250.25
(byte) mode_twoplanebitmap::ay
(byte) mode_twoplanebitmap::ay#1 ay zp ZP_BYTE:4 151.5
(byte) mode_twoplanebitmap::ay#4 ay zp ZP_BYTE:4 109.36363636363637
(byte) mode_twoplanebitmap::bx
(byte) mode_twoplanebitmap::bx#1 reg byte x 1501.5
(byte) mode_twoplanebitmap::bx#2 reg byte x 667.3333333333334
(byte) mode_twoplanebitmap::by
(byte) mode_twoplanebitmap::by#1 by zp ZP_BYTE:4 151.5
(byte) mode_twoplanebitmap::by#4 by zp ZP_BYTE:4 33.666666666666664
(byte*) mode_twoplanebitmap::col
(byte*) mode_twoplanebitmap::col#1 col zp ZP_WORD:2 420.59999999999997
(byte*) mode_twoplanebitmap::col#2 col zp ZP_WORD:2 517.3333333333334
(byte*) mode_twoplanebitmap::col#3 col zp ZP_WORD:2 202.0
(byte) mode_twoplanebitmap::cx
(byte) mode_twoplanebitmap::cx#1 reg byte x 1501.5
(byte) mode_twoplanebitmap::cx#2 reg byte x 429.0
(byte) mode_twoplanebitmap::cy
(byte) mode_twoplanebitmap::cy#1 cy zp ZP_BYTE:4 151.5
(byte) mode_twoplanebitmap::cy#4 cy zp ZP_BYTE:4 120.29999999999998
(byte*) mode_twoplanebitmap::gfxa
(byte*) mode_twoplanebitmap::gfxa#1 gfxa zp ZP_WORD:2 2002.0
(byte*) mode_twoplanebitmap::gfxa#2 gfxa zp ZP_WORD:2 2002.0
(byte*) mode_twoplanebitmap::gfxa#3 gfxa zp ZP_WORD:2 1021.2
(byte*) mode_twoplanebitmap::gfxa#6 gfxa zp ZP_WORD:2 202.0
(byte*) mode_twoplanebitmap::gfxa#7 gfxa zp ZP_WORD:2 620.8
(byte*) mode_twoplanebitmap::gfxb
(byte*) mode_twoplanebitmap::gfxb#1 gfxb zp ZP_WORD:2 420.59999999999997
(byte*) mode_twoplanebitmap::gfxb#2 gfxb zp ZP_WORD:2 1552.0
(byte*) mode_twoplanebitmap::gfxb#3 gfxb zp ZP_WORD:2 202.0
(byte) mode_twoplanebitmap::i
(byte) mode_twoplanebitmap::i#1 reg byte x 151.5
(byte) mode_twoplanebitmap::i#2 reg byte x 202.0
(byte*) print_char_cursor
(byte*) print_char_cursor#1 print_char_cursor zp ZP_WORD:5 2002.0
(byte*) print_char_cursor#17 print_char_cursor zp ZP_WORD:5 821.0
(byte*) print_char_cursor#19 print_char_cursor zp ZP_WORD:5 101.0
(byte*) print_char_cursor#32 print_char_cursor zp ZP_WORD:5 572.0
(byte*~) print_char_cursor#95 print_char_cursor zp ZP_WORD:5 202.0
(void()) print_cls()
(label) print_cls::@1
(label) print_cls::@return
(byte*) print_cls::sc
(byte*) print_cls::sc#1 sc zp ZP_WORD:2 151.5
(byte*) print_cls::sc#2 sc zp ZP_WORD:2 151.5
(byte*) print_line_cursor
(byte*) print_line_cursor#17 print_line_cursor zp ZP_WORD:10 8.583333333333332
(byte*) print_line_cursor#18 print_line_cursor zp ZP_WORD:10 2004.0
(byte*) print_line_cursor#19 print_line_cursor zp ZP_WORD:10 641.0
(void()) print_ln()
(label) print_ln::@1
(label) print_ln::@return
(byte*) print_screen
(void()) print_set_screen((byte*) print_set_screen::screen)
(label) print_set_screen::@return
(byte*) print_set_screen::screen
(void()) print_str_lines((byte*) print_str_lines::str)
(label) print_str_lines::@1
(label) print_str_lines::@4
(label) print_str_lines::@5
(label) print_str_lines::@8
(label) print_str_lines::@9
(label) print_str_lines::@return
(byte) print_str_lines::ch
(byte) print_str_lines::ch#0 reg byte a 667.3333333333334
(byte*) print_str_lines::str
(byte*) print_str_lines::str#0 str zp ZP_WORD:2 233.66666666666669
(byte*) print_str_lines::str#2 str zp ZP_WORD:2 151.5
(byte*) print_str_lines::str#3 str zp ZP_WORD:2 1552.0

reg byte x [ menu::i#2 menu::i#1 ]
zp ZP_WORD:2 [ menu::c#2 menu::c#1 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 mode_sixsfred::gfxa#2 mode_sixsfred::gfxa#3 mode_sixsfred::gfxa#1 mode_sixsfred::gfxb#2 mode_sixsfred::gfxb#3 mode_sixsfred::gfxb#1 mode_twoplanebitmap::col#2 mode_twoplanebitmap::col#3 mode_twoplanebitmap::col#1 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::gfxa#6 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::gfxa#2 mode_twoplanebitmap::gfxa#1 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::gfxb#1 mode_sixsfred2::col#2 mode_sixsfred2::col#3 mode_sixsfred2::col#1 mode_sixsfred2::gfxa#2 mode_sixsfred2::gfxa#3 mode_sixsfred2::gfxa#1 mode_sixsfred2::gfxb#2 mode_sixsfred2::gfxb#3 mode_sixsfred2::gfxb#1 mode_hicolmcchar::col#2 mode_hicolmcchar::col#3 mode_hicolmcchar::col#1 mode_hicolecmchar::col#2 mode_hicolecmchar::col#3 mode_hicolecmchar::col#1 mode_hicolstdchar::col#2 mode_hicolstdchar::col#3 mode_hicolstdchar::col#1 mode_mcchar::col#2 mode_mcchar::col#3 mode_mcchar::col#1 mode_ecmchar::col#2 mode_ecmchar::col#3 mode_ecmchar::col#1 mode_stdchar::col#2 mode_stdchar::col#3 mode_stdchar::col#1 print_str_lines::str#3 print_str_lines::str#2 print_str_lines::str#0 print_cls::sc#2 print_cls::sc#1 ]
reg byte x [ mode_8bppchunkybmm::i#2 mode_8bppchunkybmm::i#1 ]
zp ZP_BYTE:4 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 mode_sixsfred::cy#4 mode_sixsfred::cy#1 mode_sixsfred::ay#4 mode_sixsfred::ay#1 mode_sixsfred::by#4 mode_sixsfred::by#1 mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cy#1 mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ay#1 mode_twoplanebitmap::by#4 mode_twoplanebitmap::by#1 mode_sixsfred2::cy#4 mode_sixsfred2::cy#1 mode_sixsfred2::ay#4 mode_sixsfred2::ay#1 mode_sixsfred2::by#4 mode_sixsfred2::by#1 mode_hicolmcchar::cy#4 mode_hicolmcchar::cy#1 mode_hicolecmchar::cy#4 mode_hicolecmchar::cy#1 mode_hicolstdchar::cy#4 mode_hicolstdchar::cy#1 mode_mcchar::cy#4 mode_mcchar::cy#1 mode_ecmchar::cy#4 mode_ecmchar::cy#1 mode_stdchar::cy#4 mode_stdchar::cy#1 ]
reg byte x [ mode_8bppchunkybmm::gfxbCpuBank#4 mode_8bppchunkybmm::gfxbCpuBank#7 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::gfxbCpuBank#2 ]
zp ZP_WORD:5 [ mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::gfxb#5 mode_8bppchunkybmm::gfxb#1 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::gfxb#7 mode_8bpppixelcell::gfxb#1 mode_hicolmcchar::ch#2 mode_hicolmcchar::ch#3 mode_hicolmcchar::ch#1 mode_hicolecmchar::ch#2 mode_hicolecmchar::ch#3 mode_hicolecmchar::ch#1 mode_hicolstdchar::ch#2 mode_hicolstdchar::ch#3 mode_hicolstdchar::ch#1 mode_mcchar::ch#2 mode_mcchar::ch#3 mode_mcchar::ch#1 mode_ecmchar::ch#2 mode_ecmchar::ch#3 mode_ecmchar::ch#1 mode_stdchar::ch#2 mode_stdchar::ch#3 mode_stdchar::ch#1 print_char_cursor#17 print_char_cursor#19 print_char_cursor#95 print_char_cursor#32 print_char_cursor#1 ]
reg byte x [ keyboard_key_pressed::key#22 ]
reg byte a [ dtvSetCpuBankSegment1::cpuBankIdx#3 dtvSetCpuBankSegment1::cpuBankIdx#1 ]
reg byte x [ mode_8bpppixelcell::i#2 mode_8bpppixelcell::i#1 ]
reg byte x [ mode_8bpppixelcell::ax#2 mode_8bpppixelcell::ax#1 ]
zp ZP_BYTE:7 [ mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cr#1 mode_8bpppixelcell::$12 mode_twoplanebitmap::$15 mode_sixsfred2::$15 mode_hicolmcchar::$26 mode_hicolecmchar::$26 mode_hicolstdchar::$25 mode_mcchar::$28 mode_ecmchar::$28 mode_stdchar::$27 ]
zp ZP_BYTE:8 [ mode_8bpppixelcell::bits#2 mode_8bpppixelcell::bits#0 mode_8bpppixelcell::bits#1 ]
zp ZP_BYTE:9 [ mode_8bpppixelcell::col#2 mode_8bpppixelcell::col#5 mode_8bpppixelcell::col#7 mode_8bpppixelcell::col#1 ]
reg byte x [ mode_8bpppixelcell::cp#2 mode_8bpppixelcell::cp#1 ]
reg byte a [ mode_8bpppixelcell::c#2 mode_8bpppixelcell::c#3 ]
reg byte x [ mode_sixsfred::i#2 mode_sixsfred::i#1 ]
reg byte x [ mode_sixsfred::cx#2 mode_sixsfred::cx#1 ]
reg byte x [ mode_sixsfred::ax#2 mode_sixsfred::ax#1 ]
reg byte x [ mode_sixsfred::bx#2 mode_sixsfred::bx#1 ]
reg byte x [ mode_twoplanebitmap::i#2 mode_twoplanebitmap::i#1 ]
reg byte x [ mode_twoplanebitmap::cx#2 mode_twoplanebitmap::cx#1 ]
reg byte x [ mode_twoplanebitmap::ax#2 mode_twoplanebitmap::ax#1 ]
reg byte x [ mode_twoplanebitmap::bx#2 mode_twoplanebitmap::bx#1 ]
reg byte x [ mode_sixsfred2::i#2 mode_sixsfred2::i#1 ]
reg byte x [ mode_sixsfred2::cx#2 mode_sixsfred2::cx#1 ]
reg byte x [ mode_sixsfred2::ax#2 mode_sixsfred2::ax#1 ]
reg byte x [ mode_sixsfred2::bx#2 mode_sixsfred2::bx#1 ]
reg byte x [ mode_hicolmcchar::i#2 mode_hicolmcchar::i#1 ]
reg byte x [ mode_hicolmcchar::cx#2 mode_hicolmcchar::cx#1 ]
reg byte x [ mode_hicolecmchar::i#2 mode_hicolecmchar::i#1 ]
reg byte x [ mode_hicolecmchar::cx#2 mode_hicolecmchar::cx#1 ]
reg byte x [ mode_hicolstdchar::i#2 mode_hicolstdchar::i#1 ]
reg byte x [ mode_hicolstdchar::cx#2 mode_hicolstdchar::cx#1 ]
reg byte x [ mode_mcchar::i#2 mode_mcchar::i#1 ]
reg byte x [ mode_mcchar::cx#2 mode_mcchar::cx#1 ]
reg byte x [ mode_ecmchar::i#2 mode_ecmchar::i#1 ]
reg byte x [ mode_ecmchar::cx#2 mode_ecmchar::cx#1 ]
reg byte x [ mode_stdchar::i#2 mode_stdchar::i#1 ]
reg byte x [ mode_stdchar::cx#2 mode_stdchar::cx#1 ]
zp ZP_WORD:10 [ print_line_cursor#18 print_line_cursor#17 print_line_cursor#19 mode_8bppchunkybmm::$20 ]
reg byte a [ keyboard_key_pressed::return#2 ]
reg byte a [ menu::$29 ]
reg byte a [ keyboard_key_pressed::return#26 ]
reg byte a [ menu::$33 ]
reg byte a [ keyboard_key_pressed::return#27 ]
reg byte a [ menu::$37 ]
reg byte a [ keyboard_key_pressed::return#28 ]
reg byte a [ menu::$41 ]
reg byte a [ keyboard_key_pressed::return#29 ]
reg byte a [ menu::$45 ]
reg byte a [ keyboard_key_pressed::return#30 ]
reg byte a [ menu::$49 ]
reg byte a [ keyboard_key_pressed::return#31 ]
reg byte a [ menu::$53 ]
reg byte a [ keyboard_key_pressed::return#32 ]
reg byte a [ menu::$57 ]
reg byte a [ keyboard_key_pressed::return#10 ]
reg byte a [ menu::$61 ]
reg byte a [ keyboard_key_pressed::return#11 ]
reg byte a [ menu::$65 ]
reg byte a [ keyboard_key_pressed::return#12 ]
reg byte a [ menu::$69 ]
reg byte a [ mode_8bppchunkybmm::c#0 ]
reg byte a [ keyboard_key_pressed::return#23 ]
reg byte a [ mode_8bppchunkybmm::$27 ]
reg byte y [ keyboard_key_pressed::colidx#0 ]
reg byte a [ keyboard_key_pressed::rowidx#0 ]
reg byte x [ keyboard_matrix_read::rowid#0 ]
reg byte a [ keyboard_matrix_read::return#2 ]
reg byte a [ keyboard_key_pressed::$2 ]
reg byte a [ keyboard_key_pressed::return#0 ]
reg byte a [ keyboard_matrix_read::return#0 ]
reg byte a [ mode_8bpppixelcell::$11 ]
reg byte a [ mode_8bpppixelcell::$13 ]
reg byte a [ mode_8bpppixelcell::$14 ]
reg byte a [ mode_8bpppixelcell::$17 ]
reg byte a [ keyboard_key_pressed::return#22 ]
reg byte a [ mode_8bpppixelcell::$24 ]
reg byte a [ mode_sixsfred::$15 ]
reg byte a [ mode_sixsfred::$16 ]
reg byte a [ mode_sixsfred::$19 ]
reg byte a [ mode_sixsfred::row#0 ]
reg byte a [ keyboard_key_pressed::return#20 ]
reg byte a [ mode_sixsfred::$25 ]
reg byte a [ mode_twoplanebitmap::$14 ]
reg byte a [ mode_twoplanebitmap::$16 ]
reg byte a [ mode_twoplanebitmap::$17 ]
reg byte a [ mode_twoplanebitmap::$20 ]
reg byte a [ keyboard_key_pressed::return#19 ]
reg byte a [ mode_twoplanebitmap::$27 ]
reg byte a [ mode_sixsfred2::$14 ]
reg byte a [ mode_sixsfred2::$16 ]
reg byte a [ mode_sixsfred2::$17 ]
reg byte a [ mode_sixsfred2::$20 ]
reg byte a [ mode_sixsfred2::row#0 ]
reg byte a [ keyboard_key_pressed::return#21 ]
reg byte a [ mode_sixsfred2::$26 ]
reg byte a [ mode_hicolmcchar::$25 ]
reg byte a [ mode_hicolmcchar::$27 ]
reg byte a [ mode_hicolmcchar::v#0 ]
reg byte a [ keyboard_key_pressed::return#18 ]
reg byte a [ mode_hicolmcchar::$31 ]
reg byte a [ mode_hicolecmchar::$25 ]
reg byte a [ mode_hicolecmchar::$27 ]
reg byte a [ mode_hicolecmchar::v#0 ]
reg byte a [ keyboard_key_pressed::return#17 ]
reg byte a [ mode_hicolecmchar::$31 ]
reg byte a [ mode_hicolstdchar::$24 ]
reg byte a [ mode_hicolstdchar::$26 ]
reg byte a [ mode_hicolstdchar::v#0 ]
reg byte a [ keyboard_key_pressed::return#16 ]
reg byte a [ mode_hicolstdchar::$30 ]
reg byte a [ mode_mcchar::$25 ]
reg byte a [ mode_mcchar::$26 ]
reg byte a [ mode_mcchar::$27 ]
reg byte a [ mode_mcchar::$29 ]
reg byte a [ mode_mcchar::$30 ]
reg byte a [ keyboard_key_pressed::return#15 ]
reg byte a [ mode_mcchar::$33 ]
reg byte a [ mode_ecmchar::$25 ]
reg byte a [ mode_ecmchar::$26 ]
reg byte a [ mode_ecmchar::$27 ]
reg byte a [ mode_ecmchar::$29 ]
reg byte a [ mode_ecmchar::$30 ]
reg byte a [ keyboard_key_pressed::return#14 ]
reg byte a [ mode_ecmchar::$33 ]
reg byte a [ mode_stdchar::$24 ]
reg byte a [ mode_stdchar::$25 ]
reg byte a [ mode_stdchar::$26 ]
reg byte a [ mode_stdchar::$28 ]
reg byte a [ mode_stdchar::$29 ]
reg byte a [ keyboard_key_pressed::return#13 ]
reg byte a [ mode_stdchar::$32 ]
reg byte a [ print_str_lines::ch#0 ]


FINAL ASSEMBLER
Score: 1809270

//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .label PROCPORT = 1
  .label BORDERCOL = $d020
  .label BGCOL = $d021
  .label BGCOL1 = $d021
  .label BGCOL2 = $d022
  .label BGCOL3 = $d023
  .label BGCOL4 = $d024
  .label VIC_CONTROL = $d011
  .const VIC_ECM = $40
  .const VIC_BMM = $20
  .const VIC_DEN = $10
  .const VIC_RSEL = 8
  .label VIC_CONTROL2 = $d016
  .const VIC_MCM = $10
  .const VIC_CSEL = 8
  .label VIC_MEMORY = $d018
  .label COLS = $d800
  .label CIA1_PORT_A = $dc00
  .label CIA1_PORT_B = $dc01
  .label CIA2_PORT_A = $dd00
  .label CIA2_PORT_A_DDR = $dd02
  .const BLACK = 0
  .const GREEN = 5
  .const BLUE = 6
  .const LIGHT_GREEN = $d
  .label DTV_FEATURE = $d03f
  .const DTV_FEATURE_ENABLE = 1
  .label DTV_CONTROL = $d03c
  .const DTV_CONTROL_LINEAR_ADDRESSING_ON = 1
  .const DTV_CONTROL_HIGHCOLOR_ON = 4
  .const DTV_CONTROL_COLORRAM_OFF = $10
  .const DTV_CONTROL_CHUNKY_ON = $40
  .label DTV_PALETTE = $d200
  .label DTV_PLANEA_START_LO = $d03a
  .label DTV_PLANEA_START_MI = $d03b
  .label DTV_PLANEA_START_HI = $d045
  .label DTV_PLANEA_STEP = $d046
  .label DTV_PLANEA_MODULO_LO = $d038
  .label DTV_PLANEA_MODULO_HI = $d039
  .label DTV_PLANEB_START_LO = $d049
  .label DTV_PLANEB_START_MI = $d04a
  .label DTV_PLANEB_START_HI = $d04b
  .label DTV_PLANEB_STEP = $d04c
  .label DTV_PLANEB_MODULO_LO = $d047
  .label DTV_PLANEB_MODULO_HI = $d048
  .label DTV_COLOR_BANK_LO = $d036
  .label DTV_COLOR_BANK_HI = $d037
  .const DTV_COLOR_BANK_DEFAULT = $1d800
  .label DTV_GRAPHICS_VIC_BANK = $d03d
  .const KEY_3 = 8
  .const KEY_A = $a
  .const KEY_E = $e
  .const KEY_D = $12
  .const KEY_6 = $13
  .const KEY_C = $14
  .const KEY_7 = $18
  .const KEY_8 = $1b
  .const KEY_B = $1c
  .const KEY_1 = $38
  .const KEY_2 = $3b
  .const KEY_SPACE = $3c
  .label print_char_cursor = 5
  .label print_line_cursor = $a
//SEG2 @begin
//SEG3 [1] phi from @begin to @32 [phi:@begin->@32]
//SEG4 @32
//SEG5 [2] call main param-assignment [ ] ( )
  jsr main
//SEG6 [3] phi from @32 to @end [phi:@32->@end]
//SEG7 @end
//SEG8 main
main: {
  //SEG9 asm { sei  }
    sei
  //SEG10 [5] *((const byte*) DTV_FEATURE#0) ← (const byte) DTV_FEATURE_ENABLE#0 [ ] ( main:2 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_FEATURE_ENABLE
    sta DTV_FEATURE
  //SEG11 main::@1
  //SEG12 [6] if(true) goto main::@2 [ ] ( main:2 [ ] ) -- true_then_la1 
  //SEG13 main::@return
  //SEG14 [7] return  [ ] ( main:2 [ ] )
  //SEG15 [8] phi from main::@1 to main::@2 [phi:main::@1->main::@2]
  //SEG16 main::@2
  b2:
  //SEG17 [9] call menu param-assignment [ ] ( main:2 [ ] )
    jsr menu
    jmp b2
}
//SEG18 menu
menu: {
    .label SCREEN = $8000
    .label CHARSET = $9800
    .label c = 2
  //SEG19 [10] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) menu::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #($ffffffff&CHARSET)/$10000
    sta DTV_GRAPHICS_VIC_BANK
  //SEG20 [11] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const dword) DTV_COLOR_BANK_DEFAULT#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_COLOR_BANK_DEFAULT/$400
    sta DTV_COLOR_BANK_LO
  //SEG21 [12] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const dword) DTV_COLOR_BANK_DEFAULT#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_COLOR_BANK_HI
  //SEG22 [13] *((const byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    sta DTV_CONTROL
  //SEG23 [14] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3
    sta CIA2_PORT_A_DDR
  //SEG24 [15] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) menu::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3^CHARSET/$4000
    sta CIA2_PORT_A
  //SEG25 [16] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG26 [17] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_CSEL
    sta VIC_CONTROL2
  //SEG27 [18] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) menu::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) menu::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #(SCREEN&$3fff)/$40|(CHARSET&$3fff)/$400
    sta VIC_MEMORY
  //SEG28 [19] phi from menu to menu::@1 [phi:menu->menu::@1]
  //SEG29 [19] phi (byte) menu::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:menu->menu::@1#0] -- vbuxx=vbuc1 
    ldx #0
  //SEG30 [19] phi from menu::@1 to menu::@1 [phi:menu::@1->menu::@1]
  //SEG31 [19] phi (byte) menu::i#2 = (byte) menu::i#1 [phi:menu::@1->menu::@1#0] -- register_copy 
  //SEG32 menu::@1
  b1:
  //SEG33 [20] *((const byte*) DTV_PALETTE#0 + (byte) menu::i#2) ← *((const byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) menu::i#2) [ menu::i#2 ] ( main:2::menu:9 [ menu::i#2 ] ) -- pbuc1_derefidx_vbuxx=pbuc2_derefidx_vbuxx 
    lda DTV_PALETTE_DEFAULT,x
    sta DTV_PALETTE,x
  //SEG34 [21] (byte) menu::i#1 ← ++ (byte) menu::i#2 [ menu::i#1 ] ( main:2::menu:9 [ menu::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG35 [22] if((byte) menu::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto menu::@1 [ menu::i#1 ] ( main:2::menu:9 [ menu::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne b1
  //SEG36 [23] phi from menu::@1 to menu::@2 [phi:menu::@1->menu::@2]
  //SEG37 [23] phi (byte*) menu::c#2 = (const byte*) COLS#0 [phi:menu::@1->menu::@2#0] -- pbuz1=pbuc1 
    lda #<COLS
    sta c
    lda #>COLS
    sta c+1
  //SEG38 [23] phi from menu::@2 to menu::@2 [phi:menu::@2->menu::@2]
  //SEG39 [23] phi (byte*) menu::c#2 = (byte*) menu::c#1 [phi:menu::@2->menu::@2#0] -- register_copy 
  //SEG40 menu::@2
  b2:
  //SEG41 [24] *((byte*) menu::c#2) ← (const byte) LIGHT_GREEN#0 [ menu::c#2 ] ( main:2::menu:9 [ menu::c#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #LIGHT_GREEN
    ldy #0
    sta (c),y
  //SEG42 [25] (byte*) menu::c#1 ← ++ (byte*) menu::c#2 [ menu::c#1 ] ( main:2::menu:9 [ menu::c#1 ] ) -- pbuz1=_inc_pbuz1 
    inc c
    bne !+
    inc c+1
  !:
  //SEG43 [26] if((byte*) menu::c#1!=(const byte*) COLS#0+(word/signed word/dword/signed dword) 1000) goto menu::@2 [ menu::c#1 ] ( main:2::menu:9 [ menu::c#1 ] ) -- pbuz1_neq_pbuc1_then_la1 
    lda c+1
    cmp #>COLS+$3e8
    bne b2
    lda c
    cmp #<COLS+$3e8
    bne b2
  //SEG44 menu::@18
  //SEG45 [27] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BGCOL
  //SEG46 [28] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9 [ ] ) -- _deref_pbuc1=vbuc2 
    sta BORDERCOL
  //SEG47 [29] call print_set_screen param-assignment [ ] ( main:2::menu:9 [ ] )
  //SEG48 [667] phi from menu::@18 to print_set_screen [phi:menu::@18->print_set_screen]
    jsr print_set_screen
  //SEG49 [30] phi from menu::@18 to menu::@44 [phi:menu::@18->menu::@44]
  //SEG50 menu::@44
  //SEG51 [31] call print_cls param-assignment [ ] ( main:2::menu:9 [ ] )
  //SEG52 [661] phi from menu::@44 to print_cls [phi:menu::@44->print_cls]
    jsr print_cls
  //SEG53 [32] phi from menu::@44 to menu::@45 [phi:menu::@44->menu::@45]
  //SEG54 menu::@45
  //SEG55 [33] call print_str_lines param-assignment [ ] ( main:2::menu:9 [ ] )
  //SEG56 [641] phi from menu::@45 to print_str_lines [phi:menu::@45->print_str_lines]
    jsr print_str_lines
  //SEG57 menu::@3
  //SEG58 [34] if(true) goto menu::@4 [ ] ( main:2::menu:9 [ ] ) -- true_then_la1 
    jmp b4
  //SEG59 menu::@return
  breturn:
  //SEG60 [35] return  [ ] ( main:2::menu:9 [ ] )
    rts
  //SEG61 [36] phi from menu::@3 to menu::@4 [phi:menu::@3->menu::@4]
  //SEG62 menu::@4
  b4:
  //SEG63 [37] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG64 [153] phi from menu::@4 to keyboard_key_pressed [phi:menu::@4->keyboard_key_pressed]
  //SEG65 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_1#0 [phi:menu::@4->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_1
    jsr keyboard_key_pressed
  //SEG66 [38] (byte) keyboard_key_pressed::return#2 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#2 ] ( main:2::menu:9 [ keyboard_key_pressed::return#2 ] )
    // (byte) keyboard_key_pressed::return#2 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
  //SEG67 menu::@47
  //SEG68 [39] (byte~) menu::$29 ← (byte) keyboard_key_pressed::return#2 [ menu::$29 ] ( main:2::menu:9 [ menu::$29 ] )
    // (byte~) menu::$29 = (byte) keyboard_key_pressed::return#2  // register copy reg byte a
  //SEG69 [40] if((byte~) menu::$29==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@6 [ ] ( main:2::menu:9 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b6
  //SEG70 [41] phi from menu::@47 to menu::@21 [phi:menu::@47->menu::@21]
  //SEG71 menu::@21
  //SEG72 [42] call mode_stdchar param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_stdchar
    jmp breturn
  //SEG73 [43] phi from menu::@47 to menu::@6 [phi:menu::@47->menu::@6]
  //SEG74 menu::@6
  b6:
  //SEG75 [44] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG76 [153] phi from menu::@6 to keyboard_key_pressed [phi:menu::@6->keyboard_key_pressed]
  //SEG77 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_2#0 [phi:menu::@6->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_2
    jsr keyboard_key_pressed
  //SEG78 [45] (byte) keyboard_key_pressed::return#26 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#26 ] ( main:2::menu:9 [ keyboard_key_pressed::return#26 ] )
    // (byte) keyboard_key_pressed::return#26 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
  //SEG79 menu::@48
  //SEG80 [46] (byte~) menu::$33 ← (byte) keyboard_key_pressed::return#26 [ menu::$33 ] ( main:2::menu:9 [ menu::$33 ] )
    // (byte~) menu::$33 = (byte) keyboard_key_pressed::return#26  // register copy reg byte a
  //SEG81 [47] if((byte~) menu::$33==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@7 [ ] ( main:2::menu:9 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b7
  //SEG82 [48] phi from menu::@48 to menu::@23 [phi:menu::@48->menu::@23]
  //SEG83 menu::@23
  //SEG84 [49] call mode_ecmchar param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_ecmchar
    jmp breturn
  //SEG85 [50] phi from menu::@48 to menu::@7 [phi:menu::@48->menu::@7]
  //SEG86 menu::@7
  b7:
  //SEG87 [51] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG88 [153] phi from menu::@7 to keyboard_key_pressed [phi:menu::@7->keyboard_key_pressed]
  //SEG89 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_3#0 [phi:menu::@7->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_3
    jsr keyboard_key_pressed
  //SEG90 [52] (byte) keyboard_key_pressed::return#27 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#27 ] ( main:2::menu:9 [ keyboard_key_pressed::return#27 ] )
    // (byte) keyboard_key_pressed::return#27 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
  //SEG91 menu::@50
  //SEG92 [53] (byte~) menu::$37 ← (byte) keyboard_key_pressed::return#27 [ menu::$37 ] ( main:2::menu:9 [ menu::$37 ] )
    // (byte~) menu::$37 = (byte) keyboard_key_pressed::return#27  // register copy reg byte a
  //SEG93 [54] if((byte~) menu::$37==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@8 [ ] ( main:2::menu:9 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b8
  //SEG94 [55] phi from menu::@50 to menu::@25 [phi:menu::@50->menu::@25]
  //SEG95 menu::@25
  //SEG96 [56] call mode_mcchar param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_mcchar
    jmp breturn
  //SEG97 [57] phi from menu::@50 to menu::@8 [phi:menu::@50->menu::@8]
  //SEG98 menu::@8
  b8:
  //SEG99 [58] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG100 [153] phi from menu::@8 to keyboard_key_pressed [phi:menu::@8->keyboard_key_pressed]
  //SEG101 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_6#0 [phi:menu::@8->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_6
    jsr keyboard_key_pressed
  //SEG102 [59] (byte) keyboard_key_pressed::return#28 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#28 ] ( main:2::menu:9 [ keyboard_key_pressed::return#28 ] )
    // (byte) keyboard_key_pressed::return#28 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
  //SEG103 menu::@52
  //SEG104 [60] (byte~) menu::$41 ← (byte) keyboard_key_pressed::return#28 [ menu::$41 ] ( main:2::menu:9 [ menu::$41 ] )
    // (byte~) menu::$41 = (byte) keyboard_key_pressed::return#28  // register copy reg byte a
  //SEG105 [61] if((byte~) menu::$41==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@9 [ ] ( main:2::menu:9 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b9
  //SEG106 [62] phi from menu::@52 to menu::@27 [phi:menu::@52->menu::@27]
  //SEG107 menu::@27
  //SEG108 [63] call mode_hicolstdchar param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_hicolstdchar
    jmp breturn
  //SEG109 [64] phi from menu::@52 to menu::@9 [phi:menu::@52->menu::@9]
  //SEG110 menu::@9
  b9:
  //SEG111 [65] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG112 [153] phi from menu::@9 to keyboard_key_pressed [phi:menu::@9->keyboard_key_pressed]
  //SEG113 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_7#0 [phi:menu::@9->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_7
    jsr keyboard_key_pressed
  //SEG114 [66] (byte) keyboard_key_pressed::return#29 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#29 ] ( main:2::menu:9 [ keyboard_key_pressed::return#29 ] )
    // (byte) keyboard_key_pressed::return#29 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
  //SEG115 menu::@54
  //SEG116 [67] (byte~) menu::$45 ← (byte) keyboard_key_pressed::return#29 [ menu::$45 ] ( main:2::menu:9 [ menu::$45 ] )
    // (byte~) menu::$45 = (byte) keyboard_key_pressed::return#29  // register copy reg byte a
  //SEG117 [68] if((byte~) menu::$45==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@10 [ ] ( main:2::menu:9 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b10
  //SEG118 [69] phi from menu::@54 to menu::@29 [phi:menu::@54->menu::@29]
  //SEG119 menu::@29
  //SEG120 [70] call mode_hicolecmchar param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_hicolecmchar
    jmp breturn
  //SEG121 [71] phi from menu::@54 to menu::@10 [phi:menu::@54->menu::@10]
  //SEG122 menu::@10
  b10:
  //SEG123 [72] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG124 [153] phi from menu::@10 to keyboard_key_pressed [phi:menu::@10->keyboard_key_pressed]
  //SEG125 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_8#0 [phi:menu::@10->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_8
    jsr keyboard_key_pressed
  //SEG126 [73] (byte) keyboard_key_pressed::return#30 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#30 ] ( main:2::menu:9 [ keyboard_key_pressed::return#30 ] )
    // (byte) keyboard_key_pressed::return#30 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
  //SEG127 menu::@56
  //SEG128 [74] (byte~) menu::$49 ← (byte) keyboard_key_pressed::return#30 [ menu::$49 ] ( main:2::menu:9 [ menu::$49 ] )
    // (byte~) menu::$49 = (byte) keyboard_key_pressed::return#30  // register copy reg byte a
  //SEG129 [75] if((byte~) menu::$49==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@11 [ ] ( main:2::menu:9 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b11
  //SEG130 [76] phi from menu::@56 to menu::@31 [phi:menu::@56->menu::@31]
  //SEG131 menu::@31
  //SEG132 [77] call mode_hicolmcchar param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_hicolmcchar
    jmp breturn
  //SEG133 [78] phi from menu::@56 to menu::@11 [phi:menu::@56->menu::@11]
  //SEG134 menu::@11
  b11:
  //SEG135 [79] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG136 [153] phi from menu::@11 to keyboard_key_pressed [phi:menu::@11->keyboard_key_pressed]
  //SEG137 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_A#0 [phi:menu::@11->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_A
    jsr keyboard_key_pressed
  //SEG138 [80] (byte) keyboard_key_pressed::return#31 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#31 ] ( main:2::menu:9 [ keyboard_key_pressed::return#31 ] )
    // (byte) keyboard_key_pressed::return#31 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
  //SEG139 menu::@58
  //SEG140 [81] (byte~) menu::$53 ← (byte) keyboard_key_pressed::return#31 [ menu::$53 ] ( main:2::menu:9 [ menu::$53 ] )
    // (byte~) menu::$53 = (byte) keyboard_key_pressed::return#31  // register copy reg byte a
  //SEG141 [82] if((byte~) menu::$53==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@12 [ ] ( main:2::menu:9 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b12
  //SEG142 [83] phi from menu::@58 to menu::@33 [phi:menu::@58->menu::@33]
  //SEG143 menu::@33
  //SEG144 [84] call mode_sixsfred2 param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_sixsfred2
    jmp breturn
  //SEG145 [85] phi from menu::@58 to menu::@12 [phi:menu::@58->menu::@12]
  //SEG146 menu::@12
  b12:
  //SEG147 [86] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG148 [153] phi from menu::@12 to keyboard_key_pressed [phi:menu::@12->keyboard_key_pressed]
  //SEG149 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_B#0 [phi:menu::@12->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_B
    jsr keyboard_key_pressed
  //SEG150 [87] (byte) keyboard_key_pressed::return#32 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#32 ] ( main:2::menu:9 [ keyboard_key_pressed::return#32 ] )
    // (byte) keyboard_key_pressed::return#32 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
  //SEG151 menu::@60
  //SEG152 [88] (byte~) menu::$57 ← (byte) keyboard_key_pressed::return#32 [ menu::$57 ] ( main:2::menu:9 [ menu::$57 ] )
    // (byte~) menu::$57 = (byte) keyboard_key_pressed::return#32  // register copy reg byte a
  //SEG153 [89] if((byte~) menu::$57==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@13 [ ] ( main:2::menu:9 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b13
  //SEG154 [90] phi from menu::@60 to menu::@35 [phi:menu::@60->menu::@35]
  //SEG155 menu::@35
  //SEG156 [91] call mode_twoplanebitmap param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_twoplanebitmap
    jmp breturn
  //SEG157 [92] phi from menu::@60 to menu::@13 [phi:menu::@60->menu::@13]
  //SEG158 menu::@13
  b13:
  //SEG159 [93] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG160 [153] phi from menu::@13 to keyboard_key_pressed [phi:menu::@13->keyboard_key_pressed]
  //SEG161 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_C#0 [phi:menu::@13->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_C
    jsr keyboard_key_pressed
  //SEG162 [94] (byte) keyboard_key_pressed::return#10 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#10 ] ( main:2::menu:9 [ keyboard_key_pressed::return#10 ] )
    // (byte) keyboard_key_pressed::return#10 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
  //SEG163 menu::@62
  //SEG164 [95] (byte~) menu::$61 ← (byte) keyboard_key_pressed::return#10 [ menu::$61 ] ( main:2::menu:9 [ menu::$61 ] )
    // (byte~) menu::$61 = (byte) keyboard_key_pressed::return#10  // register copy reg byte a
  //SEG165 [96] if((byte~) menu::$61==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@14 [ ] ( main:2::menu:9 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b14
  //SEG166 [97] phi from menu::@62 to menu::@37 [phi:menu::@62->menu::@37]
  //SEG167 menu::@37
  //SEG168 [98] call mode_sixsfred param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_sixsfred
    jmp breturn
  //SEG169 [99] phi from menu::@62 to menu::@14 [phi:menu::@62->menu::@14]
  //SEG170 menu::@14
  b14:
  //SEG171 [100] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG172 [153] phi from menu::@14 to keyboard_key_pressed [phi:menu::@14->keyboard_key_pressed]
  //SEG173 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_D#0 [phi:menu::@14->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_D
    jsr keyboard_key_pressed
  //SEG174 [101] (byte) keyboard_key_pressed::return#11 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#11 ] ( main:2::menu:9 [ keyboard_key_pressed::return#11 ] )
    // (byte) keyboard_key_pressed::return#11 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
  //SEG175 menu::@64
  //SEG176 [102] (byte~) menu::$65 ← (byte) keyboard_key_pressed::return#11 [ menu::$65 ] ( main:2::menu:9 [ menu::$65 ] )
    // (byte~) menu::$65 = (byte) keyboard_key_pressed::return#11  // register copy reg byte a
  //SEG177 [103] if((byte~) menu::$65==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@15 [ ] ( main:2::menu:9 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b15
  //SEG178 [104] phi from menu::@64 to menu::@39 [phi:menu::@64->menu::@39]
  //SEG179 menu::@39
  //SEG180 [105] call mode_8bpppixelcell param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_8bpppixelcell
    jmp breturn
  //SEG181 [106] phi from menu::@64 to menu::@15 [phi:menu::@64->menu::@15]
  //SEG182 menu::@15
  b15:
  //SEG183 [107] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9 [ keyboard_key_pressed::return#0 ] )
  //SEG184 [153] phi from menu::@15 to keyboard_key_pressed [phi:menu::@15->keyboard_key_pressed]
  //SEG185 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_E#0 [phi:menu::@15->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_E
    jsr keyboard_key_pressed
  //SEG186 [108] (byte) keyboard_key_pressed::return#12 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#12 ] ( main:2::menu:9 [ keyboard_key_pressed::return#12 ] )
    // (byte) keyboard_key_pressed::return#12 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
  //SEG187 menu::@66
  //SEG188 [109] (byte~) menu::$69 ← (byte) keyboard_key_pressed::return#12 [ menu::$69 ] ( main:2::menu:9 [ menu::$69 ] )
    // (byte~) menu::$69 = (byte) keyboard_key_pressed::return#12  // register copy reg byte a
  //SEG189 [110] if((byte~) menu::$69==(byte/signed byte/word/signed word/dword/signed dword) 0) goto menu::@3 [ ] ( main:2::menu:9 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    bne !b4+
    jmp b4
  !b4:
  //SEG190 [111] phi from menu::@66 to menu::@41 [phi:menu::@66->menu::@41]
  //SEG191 menu::@41
  //SEG192 [112] call mode_8bppchunkybmm param-assignment [ ] ( main:2::menu:9 [ ] )
    jsr mode_8bppchunkybmm
    jmp breturn
}
//SEG193 mode_8bppchunkybmm
mode_8bppchunkybmm: {
    .const PLANEB = $20000
    .label _20 = $a
    .label gfxb = 5
    .label x = 2
    .label y = 4
  //SEG194 [113] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0|(const byte) DTV_CONTROL_CHUNKY_ON#0|(const byte) DTV_CONTROL_COLORRAM_OFF#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_CONTROL_HIGHCOLOR_ON|DTV_CONTROL_LINEAR_ADDRESSING_ON|DTV_CONTROL_CHUNKY_ON|DTV_CONTROL_COLORRAM_OFF
    sta DTV_CONTROL
  //SEG195 [114] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_ECM|VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG196 [115] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_MCM|VIC_CSEL
    sta VIC_CONTROL2
  //SEG197 [116] *((const byte*) DTV_PLANEB_START_LO#0) ← <<(const dword) mode_8bppchunkybmm::PLANEB#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #PLANEB&$ffff
    sta DTV_PLANEB_START_LO
  //SEG198 [117] *((const byte*) DTV_PLANEB_START_MI#0) ← ><(const dword) mode_8bppchunkybmm::PLANEB#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_START_MI
  //SEG199 [118] *((const byte*) DTV_PLANEB_START_HI#0) ← <>(const dword) mode_8bppchunkybmm::PLANEB#0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #PLANEB>>$10
    sta DTV_PLANEB_START_HI
  //SEG200 [119] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 8 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #8
    sta DTV_PLANEB_STEP
  //SEG201 [120] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_MODULO_LO
  //SEG202 [121] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    sta DTV_PLANEB_MODULO_HI
  //SEG203 [122] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- _deref_pbuc1=vbuc2 
    sta BORDERCOL
  //SEG204 [123] phi from mode_8bppchunkybmm to mode_8bppchunkybmm::@1 [phi:mode_8bppchunkybmm->mode_8bppchunkybmm::@1]
  //SEG205 [123] phi (byte) mode_8bppchunkybmm::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bppchunkybmm->mode_8bppchunkybmm::@1#0] -- vbuxx=vbuc1 
    tax
  //SEG206 [123] phi from mode_8bppchunkybmm::@1 to mode_8bppchunkybmm::@1 [phi:mode_8bppchunkybmm::@1->mode_8bppchunkybmm::@1]
  //SEG207 [123] phi (byte) mode_8bppchunkybmm::i#2 = (byte) mode_8bppchunkybmm::i#1 [phi:mode_8bppchunkybmm::@1->mode_8bppchunkybmm::@1#0] -- register_copy 
  //SEG208 mode_8bppchunkybmm::@1
  b1:
  //SEG209 [124] *((const byte*) DTV_PALETTE#0 + (byte) mode_8bppchunkybmm::i#2) ← (byte) mode_8bppchunkybmm::i#2 [ mode_8bppchunkybmm::i#2 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::i#2 ] ) -- pbuc1_derefidx_vbuxx=vbuxx 
    txa
    sta DTV_PALETTE,x
  //SEG210 [125] (byte) mode_8bppchunkybmm::i#1 ← ++ (byte) mode_8bppchunkybmm::i#2 [ mode_8bppchunkybmm::i#1 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG211 [126] if((byte) mode_8bppchunkybmm::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_8bppchunkybmm::@1 [ mode_8bppchunkybmm::i#1 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne b1
  //SEG212 [127] phi from mode_8bppchunkybmm::@1 to mode_8bppchunkybmm::@9 [phi:mode_8bppchunkybmm::@1->mode_8bppchunkybmm::@9]
  //SEG213 mode_8bppchunkybmm::@9
  //SEG214 [128] call dtvSetCpuBankSegment1 param-assignment [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
  //SEG215 [165] phi from mode_8bppchunkybmm::@9 to dtvSetCpuBankSegment1 [phi:mode_8bppchunkybmm::@9->dtvSetCpuBankSegment1]
  //SEG216 [165] phi (byte) dtvSetCpuBankSegment1::cpuBankIdx#3 = ((byte))(const dword) mode_8bppchunkybmm::PLANEB#0/(word/signed word/dword/signed dword) 16384 [phi:mode_8bppchunkybmm::@9->dtvSetCpuBankSegment1#0] -- vbuaa=vbuc1 
    lda #PLANEB/$4000
    jsr dtvSetCpuBankSegment1
  //SEG217 [129] phi from mode_8bppchunkybmm::@9 to mode_8bppchunkybmm::@2 [phi:mode_8bppchunkybmm::@9->mode_8bppchunkybmm::@2]
  //SEG218 [129] phi (byte) mode_8bppchunkybmm::gfxbCpuBank#7 = ++((byte))(const dword) mode_8bppchunkybmm::PLANEB#0/(word/signed word/dword/signed dword) 16384 [phi:mode_8bppchunkybmm::@9->mode_8bppchunkybmm::@2#0] -- vbuxx=vbuc1 
    ldx #PLANEB/$4000+1
  //SEG219 [129] phi (byte) mode_8bppchunkybmm::y#6 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bppchunkybmm::@9->mode_8bppchunkybmm::@2#1] -- vbuz1=vbuc1 
    lda #0
    sta y
  //SEG220 [129] phi (byte*) mode_8bppchunkybmm::gfxb#5 = ((byte*))(word/signed word/dword/signed dword) 16384 [phi:mode_8bppchunkybmm::@9->mode_8bppchunkybmm::@2#2] -- pbuz1=pbuc1 
    lda #<$4000
    sta gfxb
    lda #>$4000
    sta gfxb+1
  //SEG221 [129] phi from mode_8bppchunkybmm::@11 to mode_8bppchunkybmm::@2 [phi:mode_8bppchunkybmm::@11->mode_8bppchunkybmm::@2]
  //SEG222 [129] phi (byte) mode_8bppchunkybmm::gfxbCpuBank#7 = (byte) mode_8bppchunkybmm::gfxbCpuBank#8 [phi:mode_8bppchunkybmm::@11->mode_8bppchunkybmm::@2#0] -- register_copy 
  //SEG223 [129] phi (byte) mode_8bppchunkybmm::y#6 = (byte) mode_8bppchunkybmm::y#1 [phi:mode_8bppchunkybmm::@11->mode_8bppchunkybmm::@2#1] -- register_copy 
  //SEG224 [129] phi (byte*) mode_8bppchunkybmm::gfxb#5 = (byte*) mode_8bppchunkybmm::gfxb#1 [phi:mode_8bppchunkybmm::@11->mode_8bppchunkybmm::@2#2] -- register_copy 
  //SEG225 mode_8bppchunkybmm::@2
  b2:
  //SEG226 [130] phi from mode_8bppchunkybmm::@2 to mode_8bppchunkybmm::@3 [phi:mode_8bppchunkybmm::@2->mode_8bppchunkybmm::@3]
  //SEG227 [130] phi (byte) mode_8bppchunkybmm::gfxbCpuBank#4 = (byte) mode_8bppchunkybmm::gfxbCpuBank#7 [phi:mode_8bppchunkybmm::@2->mode_8bppchunkybmm::@3#0] -- register_copy 
  //SEG228 [130] phi (word) mode_8bppchunkybmm::x#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bppchunkybmm::@2->mode_8bppchunkybmm::@3#1] -- vwuz1=vbuc1 
    lda #<0
    sta x
    sta x+1
  //SEG229 [130] phi (byte*) mode_8bppchunkybmm::gfxb#3 = (byte*) mode_8bppchunkybmm::gfxb#5 [phi:mode_8bppchunkybmm::@2->mode_8bppchunkybmm::@3#2] -- register_copy 
  //SEG230 [130] phi from mode_8bppchunkybmm::@4 to mode_8bppchunkybmm::@3 [phi:mode_8bppchunkybmm::@4->mode_8bppchunkybmm::@3]
  //SEG231 [130] phi (byte) mode_8bppchunkybmm::gfxbCpuBank#4 = (byte) mode_8bppchunkybmm::gfxbCpuBank#8 [phi:mode_8bppchunkybmm::@4->mode_8bppchunkybmm::@3#0] -- register_copy 
  //SEG232 [130] phi (word) mode_8bppchunkybmm::x#2 = (word) mode_8bppchunkybmm::x#1 [phi:mode_8bppchunkybmm::@4->mode_8bppchunkybmm::@3#1] -- register_copy 
  //SEG233 [130] phi (byte*) mode_8bppchunkybmm::gfxb#3 = (byte*) mode_8bppchunkybmm::gfxb#1 [phi:mode_8bppchunkybmm::@4->mode_8bppchunkybmm::@3#2] -- register_copy 
  //SEG234 mode_8bppchunkybmm::@3
  b3:
  //SEG235 [131] if((byte*) mode_8bppchunkybmm::gfxb#3!=(word/dword/signed dword) 32768) goto mode_8bppchunkybmm::@4 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] ) -- pbuz1_neq_vwuc1_then_la1 
    lda gfxb+1
    cmp #>$8000
    bne b4
    lda gfxb
    cmp #<$8000
    bne b4
  //SEG236 mode_8bppchunkybmm::@10
  //SEG237 [132] (byte) dtvSetCpuBankSegment1::cpuBankIdx#1 ← (byte) mode_8bppchunkybmm::gfxbCpuBank#4 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 dtvSetCpuBankSegment1::cpuBankIdx#1 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 dtvSetCpuBankSegment1::cpuBankIdx#1 ] ) -- vbuaa=vbuxx 
    txa
  //SEG238 [133] call dtvSetCpuBankSegment1 param-assignment [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] )
  //SEG239 [165] phi from mode_8bppchunkybmm::@10 to dtvSetCpuBankSegment1 [phi:mode_8bppchunkybmm::@10->dtvSetCpuBankSegment1]
  //SEG240 [165] phi (byte) dtvSetCpuBankSegment1::cpuBankIdx#3 = (byte) dtvSetCpuBankSegment1::cpuBankIdx#1 [phi:mode_8bppchunkybmm::@10->dtvSetCpuBankSegment1#0] -- register_copy 
    jsr dtvSetCpuBankSegment1
  //SEG241 mode_8bppchunkybmm::@19
  //SEG242 [134] (byte) mode_8bppchunkybmm::gfxbCpuBank#2 ← ++ (byte) mode_8bppchunkybmm::gfxbCpuBank#4 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#2 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#2 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG243 [135] phi from mode_8bppchunkybmm::@19 to mode_8bppchunkybmm::@4 [phi:mode_8bppchunkybmm::@19->mode_8bppchunkybmm::@4]
  //SEG244 [135] phi (byte) mode_8bppchunkybmm::gfxbCpuBank#8 = (byte) mode_8bppchunkybmm::gfxbCpuBank#2 [phi:mode_8bppchunkybmm::@19->mode_8bppchunkybmm::@4#0] -- register_copy 
  //SEG245 [135] phi (byte*) mode_8bppchunkybmm::gfxb#4 = ((byte*))(word/signed word/dword/signed dword) 16384 [phi:mode_8bppchunkybmm::@19->mode_8bppchunkybmm::@4#1] -- pbuz1=pbuc1 
    lda #<$4000
    sta gfxb
    lda #>$4000
    sta gfxb+1
  //SEG246 [135] phi from mode_8bppchunkybmm::@3 to mode_8bppchunkybmm::@4 [phi:mode_8bppchunkybmm::@3->mode_8bppchunkybmm::@4]
  //SEG247 [135] phi (byte) mode_8bppchunkybmm::gfxbCpuBank#8 = (byte) mode_8bppchunkybmm::gfxbCpuBank#4 [phi:mode_8bppchunkybmm::@3->mode_8bppchunkybmm::@4#0] -- register_copy 
  //SEG248 [135] phi (byte*) mode_8bppchunkybmm::gfxb#4 = (byte*) mode_8bppchunkybmm::gfxb#3 [phi:mode_8bppchunkybmm::@3->mode_8bppchunkybmm::@4#1] -- register_copy 
  //SEG249 mode_8bppchunkybmm::@4
  b4:
  //SEG250 [136] (word~) mode_8bppchunkybmm::$20 ← (word) mode_8bppchunkybmm::x#2 + (byte) mode_8bppchunkybmm::y#6 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::$20 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::$20 ] ) -- vwuz1=vwuz2_plus_vbuz3 
    lda y
    clc
    adc x
    sta _20
    lda #0
    adc x+1
    sta _20+1
  //SEG251 [137] (byte) mode_8bppchunkybmm::c#0 ← ((byte)) (word~) mode_8bppchunkybmm::$20 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::c#0 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::c#0 ] ) -- vbuaa=_byte_vwuz1 
    lda _20
  //SEG252 [138] *((byte*) mode_8bppchunkybmm::gfxb#4) ← (byte) mode_8bppchunkybmm::c#0 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxb#4 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (gfxb),y
  //SEG253 [139] (byte*) mode_8bppchunkybmm::gfxb#1 ← ++ (byte*) mode_8bppchunkybmm::gfxb#4 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxb
    bne !+
    inc gfxb+1
  !:
  //SEG254 [140] (word) mode_8bppchunkybmm::x#1 ← ++ (word) mode_8bppchunkybmm::x#2 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#1 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#1 ] ) -- vwuz1=_inc_vwuz1 
    inc x
    bne !+
    inc x+1
  !:
  //SEG255 [141] if((word) mode_8bppchunkybmm::x#1!=(word/signed word/dword/signed dword) 320) goto mode_8bppchunkybmm::@3 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#1 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::x#1 ] ) -- vwuz1_neq_vwuc1_then_la1 
    lda x+1
    cmp #>$140
    bne b3
    lda x
    cmp #<$140
    bne b3
  //SEG256 mode_8bppchunkybmm::@11
  //SEG257 [142] (byte) mode_8bppchunkybmm::y#1 ← ++ (byte) mode_8bppchunkybmm::y#6 [ mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::y#1 mode_8bppchunkybmm::gfxbCpuBank#8 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::y#1 mode_8bppchunkybmm::gfxbCpuBank#8 ] ) -- vbuz1=_inc_vbuz1 
    inc y
  //SEG258 [143] if((byte) mode_8bppchunkybmm::y#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_8bppchunkybmm::@2 [ mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::y#1 mode_8bppchunkybmm::gfxbCpuBank#8 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::gfxb#1 mode_8bppchunkybmm::y#1 mode_8bppchunkybmm::gfxbCpuBank#8 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda y
    cmp #$c8
    bne b2
  //SEG259 [144] phi from mode_8bppchunkybmm::@11 to mode_8bppchunkybmm::@12 [phi:mode_8bppchunkybmm::@11->mode_8bppchunkybmm::@12]
  //SEG260 mode_8bppchunkybmm::@12
  //SEG261 [145] call dtvSetCpuBankSegment1 param-assignment [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
  //SEG262 [165] phi from mode_8bppchunkybmm::@12 to dtvSetCpuBankSegment1 [phi:mode_8bppchunkybmm::@12->dtvSetCpuBankSegment1]
  //SEG263 [165] phi (byte) dtvSetCpuBankSegment1::cpuBankIdx#3 = ((byte))(word/signed word/dword/signed dword) 16384/(word/signed word/dword/signed dword) 16384 [phi:mode_8bppchunkybmm::@12->dtvSetCpuBankSegment1#0] -- vbuaa=vbuc1 
    lda #$4000/$4000
    jsr dtvSetCpuBankSegment1
  //SEG264 mode_8bppchunkybmm::@5
  //SEG265 [146] if(true) goto mode_8bppchunkybmm::@6 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- true_then_la1 
    jmp b6
  //SEG266 mode_8bppchunkybmm::@return
  breturn:
  //SEG267 [147] return  [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] )
    rts
  //SEG268 [148] phi from mode_8bppchunkybmm::@5 to mode_8bppchunkybmm::@6 [phi:mode_8bppchunkybmm::@5->mode_8bppchunkybmm::@6]
  //SEG269 mode_8bppchunkybmm::@6
  b6:
  //SEG270 [149] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ keyboard_key_pressed::return#0 ] )
  //SEG271 [153] phi from mode_8bppchunkybmm::@6 to keyboard_key_pressed [phi:mode_8bppchunkybmm::@6->keyboard_key_pressed]
  //SEG272 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_8bppchunkybmm::@6->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_SPACE
    jsr keyboard_key_pressed
  //SEG273 [150] (byte) keyboard_key_pressed::return#23 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#23 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ keyboard_key_pressed::return#23 ] )
    // (byte) keyboard_key_pressed::return#23 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
  //SEG274 mode_8bppchunkybmm::@21
  //SEG275 [151] (byte~) mode_8bppchunkybmm::$27 ← (byte) keyboard_key_pressed::return#23 [ mode_8bppchunkybmm::$27 ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ mode_8bppchunkybmm::$27 ] )
    // (byte~) mode_8bppchunkybmm::$27 = (byte) keyboard_key_pressed::return#23  // register copy reg byte a
  //SEG276 [152] if((byte~) mode_8bppchunkybmm::$27==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_8bppchunkybmm::@5 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b6
    jmp breturn
}
//SEG277 keyboard_key_pressed
keyboard_key_pressed: {
  //SEG278 [154] (byte) keyboard_key_pressed::colidx#0 ← (byte) keyboard_key_pressed::key#22 & (byte/signed byte/word/signed word/dword/signed dword) 7 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::key#22 keyboard_key_pressed::colidx#0 ] ) -- vbuyy=vbuxx_band_vbuc1 
    txa
    and #7
    tay
  //SEG279 [155] (byte) keyboard_key_pressed::rowidx#0 ← (byte) keyboard_key_pressed::key#22 >> (byte/signed byte/word/signed word/dword/signed dword) 3 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::rowidx#0 ] ) -- vbuaa=vbuxx_ror_3 
    txa
    lsr
    lsr
    lsr
  //SEG280 [156] (byte) keyboard_matrix_read::rowid#0 ← (byte) keyboard_key_pressed::rowidx#0 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::rowid#0 ] ) -- vbuxx=vbuaa 
    tax
  //SEG281 [157] call keyboard_matrix_read param-assignment [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] )
    jsr keyboard_matrix_read
  //SEG282 [158] (byte) keyboard_matrix_read::return#2 ← (byte) keyboard_matrix_read::return#0 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#2 ] )
    // (byte) keyboard_matrix_read::return#2 = (byte) keyboard_matrix_read::return#0  // register copy reg byte a
  //SEG283 keyboard_key_pressed::@2
  //SEG284 [159] (byte~) keyboard_key_pressed::$2 ← (byte) keyboard_matrix_read::return#2 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::colidx#0 keyboard_key_pressed::$2 ] )
    // (byte~) keyboard_key_pressed::$2 = (byte) keyboard_matrix_read::return#2  // register copy reg byte a
  //SEG285 [160] (byte) keyboard_key_pressed::return#0 ← (byte~) keyboard_key_pressed::$2 & *((const byte[]) keyboard_matrix_col_bitmask#0 + (byte) keyboard_key_pressed::colidx#0) [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::return#0 ] ) -- vbuaa=vbuaa_band_pbuc1_derefidx_vbuyy 
    and keyboard_matrix_col_bitmask,y
  //SEG286 keyboard_key_pressed::@return
  //SEG287 [161] return  [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::keyboard_key_pressed:37 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:44 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:51 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:58 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:65 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:72 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:79 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:86 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:93 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:100 [ keyboard_key_pressed::return#0 ] main:2::menu:9::keyboard_key_pressed:107 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599 [ keyboard_key_pressed::return#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637 [ keyboard_key_pressed::return#0 ] )
    rts
}
//SEG288 keyboard_matrix_read
keyboard_matrix_read: {
  //SEG289 [162] *((const byte*) CIA1_PORT_A#0) ← *((const byte[8]) keyboard_matrix_row_bitmask#0 + (byte) keyboard_matrix_read::rowid#0) [ ] ( main:2::menu:9::keyboard_key_pressed:37::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:44::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:51::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:58::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:65::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:72::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:79::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:86::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:93::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:100::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::keyboard_key_pressed:107::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 ] ) -- _deref_pbuc1=pbuc2_derefidx_vbuxx 
    lda keyboard_matrix_row_bitmask,x
    sta CIA1_PORT_A
  //SEG290 [163] (byte) keyboard_matrix_read::return#0 ← ~ *((const byte*) CIA1_PORT_B#0) [ keyboard_matrix_read::return#0 ] ( main:2::menu:9::keyboard_key_pressed:37::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:44::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:51::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:58::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:65::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:72::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:79::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:86::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:93::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:100::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:107::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] ) -- vbuaa=_bnot__deref_pbuc1 
    lda CIA1_PORT_B
    eor #$ff
  //SEG291 keyboard_matrix_read::@return
  //SEG292 [164] return  [ keyboard_matrix_read::return#0 ] ( main:2::menu:9::keyboard_key_pressed:37::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:44::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:51::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:58::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:65::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:72::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:79::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:86::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:93::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:100::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::keyboard_key_pressed:107::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bppchunkybmm:112::keyboard_key_pressed:149::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_8bpppixelcell:105::keyboard_key_pressed:225::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred:98::keyboard_key_pressed:282::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_twoplanebitmap:91::keyboard_key_pressed:344::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_sixsfred2:84::keyboard_key_pressed:405::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolmcchar:77::keyboard_key_pressed:443::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolecmchar:70::keyboard_key_pressed:482::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_hicolstdchar:63::keyboard_key_pressed:518::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_mcchar:56::keyboard_key_pressed:558::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_ecmchar:49::keyboard_key_pressed:599::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] main:2::menu:9::mode_stdchar:42::keyboard_key_pressed:637::keyboard_matrix_read:157 [ keyboard_key_pressed::colidx#0 keyboard_matrix_read::return#0 ] )
    rts
}
//SEG293 dtvSetCpuBankSegment1
dtvSetCpuBankSegment1: {
    .label cpuBank = $ff
  //SEG294 [166] *((const byte*) dtvSetCpuBankSegment1::cpuBank#0) ← (byte) dtvSetCpuBankSegment1::cpuBankIdx#3 [ ] ( main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:128 [ ] main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:133 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:145 [ ] ) -- _deref_pbuc1=vbuaa 
    sta cpuBank
  //SEG295 asm { .byte$32,$dd lda$ff .byte$32,$00  }
    .byte $32, $dd
    lda $ff
    .byte $32, $00
  //SEG296 dtvSetCpuBankSegment1::@return
  //SEG297 [168] return  [ ] ( main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:128 [ ] main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:133 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::gfxbCpuBank#4 ] main:2::menu:9::mode_8bppchunkybmm:112::dtvSetCpuBankSegment1:145 [ ] )
    rts
}
//SEG298 mode_8bpppixelcell
mode_8bpppixelcell: {
    .label PLANEA = $3c00
    .label PLANEB = $4000
    .label _12 = 7
    .label gfxa = 2
    .label ay = 4
    .label bits = 8
    .label chargen = 2
    .label gfxb = 5
    .label col = 9
    .label cr = 7
    .label ch = 4
  //SEG299 [169] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0|(const byte) DTV_CONTROL_CHUNKY_ON#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_CONTROL_HIGHCOLOR_ON|DTV_CONTROL_LINEAR_ADDRESSING_ON|DTV_CONTROL_CHUNKY_ON
    sta DTV_CONTROL
  //SEG300 [170] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_ECM|VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG301 [171] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_MCM|VIC_CSEL
    sta VIC_CONTROL2
  //SEG302 [172] *((const byte*) DTV_PLANEA_START_LO#0) ← <(const byte*) mode_8bpppixelcell::PLANEA#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<PLANEA
    sta DTV_PLANEA_START_LO
  //SEG303 [173] *((const byte*) DTV_PLANEA_START_MI#0) ← >(const byte*) mode_8bpppixelcell::PLANEA#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>PLANEA
    sta DTV_PLANEA_START_MI
  //SEG304 [174] *((const byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_START_HI
  //SEG305 [175] *((const byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #1
    sta DTV_PLANEA_STEP
  //SEG306 [176] *((const byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_MODULO_LO
  //SEG307 [177] *((const byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    sta DTV_PLANEA_MODULO_HI
  //SEG308 [178] *((const byte*) DTV_PLANEB_START_LO#0) ← <(const byte*) mode_8bpppixelcell::PLANEB#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<PLANEB
    sta DTV_PLANEB_START_LO
  //SEG309 [179] *((const byte*) DTV_PLANEB_START_MI#0) ← >(const byte*) mode_8bpppixelcell::PLANEB#0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>PLANEB
    sta DTV_PLANEB_START_MI
  //SEG310 [180] *((const byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_START_HI
  //SEG311 [181] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    sta DTV_PLANEB_STEP
  //SEG312 [182] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    sta DTV_PLANEB_MODULO_LO
  //SEG313 [183] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    sta DTV_PLANEB_MODULO_HI
  //SEG314 [184] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    sta BORDERCOL
  //SEG315 [185] phi from mode_8bpppixelcell to mode_8bpppixelcell::@1 [phi:mode_8bpppixelcell->mode_8bpppixelcell::@1]
  //SEG316 [185] phi (byte) mode_8bpppixelcell::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bpppixelcell->mode_8bpppixelcell::@1#0] -- vbuxx=vbuc1 
    tax
  //SEG317 [185] phi from mode_8bpppixelcell::@1 to mode_8bpppixelcell::@1 [phi:mode_8bpppixelcell::@1->mode_8bpppixelcell::@1]
  //SEG318 [185] phi (byte) mode_8bpppixelcell::i#2 = (byte) mode_8bpppixelcell::i#1 [phi:mode_8bpppixelcell::@1->mode_8bpppixelcell::@1#0] -- register_copy 
  //SEG319 mode_8bpppixelcell::@1
  b1:
  //SEG320 [186] *((const byte*) DTV_PALETTE#0 + (byte) mode_8bpppixelcell::i#2) ← (byte) mode_8bpppixelcell::i#2 [ mode_8bpppixelcell::i#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::i#2 ] ) -- pbuc1_derefidx_vbuxx=vbuxx 
    txa
    sta DTV_PALETTE,x
  //SEG321 [187] (byte) mode_8bpppixelcell::i#1 ← ++ (byte) mode_8bpppixelcell::i#2 [ mode_8bpppixelcell::i#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG322 [188] if((byte) mode_8bpppixelcell::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_8bpppixelcell::@1 [ mode_8bpppixelcell::i#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne b1
  //SEG323 [189] phi from mode_8bpppixelcell::@1 to mode_8bpppixelcell::@2 [phi:mode_8bpppixelcell::@1->mode_8bpppixelcell::@2]
  //SEG324 [189] phi (byte*) mode_8bpppixelcell::gfxa#3 = (const byte*) mode_8bpppixelcell::PLANEA#0 [phi:mode_8bpppixelcell::@1->mode_8bpppixelcell::@2#0] -- pbuz1=pbuc1 
    lda #<PLANEA
    sta gfxa
    lda #>PLANEA
    sta gfxa+1
  //SEG325 [189] phi (byte) mode_8bpppixelcell::ay#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bpppixelcell::@1->mode_8bpppixelcell::@2#1] -- vbuz1=vbuc1 
    lda #0
    sta ay
  //SEG326 [189] phi from mode_8bpppixelcell::@13 to mode_8bpppixelcell::@2 [phi:mode_8bpppixelcell::@13->mode_8bpppixelcell::@2]
  //SEG327 [189] phi (byte*) mode_8bpppixelcell::gfxa#3 = (byte*) mode_8bpppixelcell::gfxa#1 [phi:mode_8bpppixelcell::@13->mode_8bpppixelcell::@2#0] -- register_copy 
  //SEG328 [189] phi (byte) mode_8bpppixelcell::ay#4 = (byte) mode_8bpppixelcell::ay#1 [phi:mode_8bpppixelcell::@13->mode_8bpppixelcell::@2#1] -- register_copy 
  //SEG329 mode_8bpppixelcell::@2
  b2:
  //SEG330 [190] phi from mode_8bpppixelcell::@2 to mode_8bpppixelcell::@3 [phi:mode_8bpppixelcell::@2->mode_8bpppixelcell::@3]
  //SEG331 [190] phi (byte*) mode_8bpppixelcell::gfxa#2 = (byte*) mode_8bpppixelcell::gfxa#3 [phi:mode_8bpppixelcell::@2->mode_8bpppixelcell::@3#0] -- register_copy 
  //SEG332 [190] phi (byte) mode_8bpppixelcell::ax#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bpppixelcell::@2->mode_8bpppixelcell::@3#1] -- vbuxx=vbuc1 
    ldx #0
  //SEG333 [190] phi from mode_8bpppixelcell::@3 to mode_8bpppixelcell::@3 [phi:mode_8bpppixelcell::@3->mode_8bpppixelcell::@3]
  //SEG334 [190] phi (byte*) mode_8bpppixelcell::gfxa#2 = (byte*) mode_8bpppixelcell::gfxa#1 [phi:mode_8bpppixelcell::@3->mode_8bpppixelcell::@3#0] -- register_copy 
  //SEG335 [190] phi (byte) mode_8bpppixelcell::ax#2 = (byte) mode_8bpppixelcell::ax#1 [phi:mode_8bpppixelcell::@3->mode_8bpppixelcell::@3#1] -- register_copy 
  //SEG336 mode_8bpppixelcell::@3
  b3:
  //SEG337 [191] (byte~) mode_8bpppixelcell::$11 ← (byte) mode_8bpppixelcell::ay#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$11 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$11 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #$f
    and ay
  //SEG338 [192] (byte~) mode_8bpppixelcell::$12 ← (byte~) mode_8bpppixelcell::$11 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$12 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$12 ] ) -- vbuz1=vbuaa_rol_4 
    asl
    asl
    asl
    asl
    sta _12
  //SEG339 [193] (byte~) mode_8bpppixelcell::$13 ← (byte) mode_8bpppixelcell::ax#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$12 mode_8bpppixelcell::$13 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$12 mode_8bpppixelcell::$13 ] ) -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #$f
  //SEG340 [194] (byte~) mode_8bpppixelcell::$14 ← (byte~) mode_8bpppixelcell::$12 | (byte~) mode_8bpppixelcell::$13 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$14 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::$14 ] ) -- vbuaa=vbuz1_bor_vbuaa 
    ora _12
  //SEG341 [195] *((byte*) mode_8bpppixelcell::gfxa#2) ← (byte~) mode_8bpppixelcell::$14 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ax#2 mode_8bpppixelcell::gfxa#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (gfxa),y
  //SEG342 [196] (byte*) mode_8bpppixelcell::gfxa#1 ← ++ (byte*) mode_8bpppixelcell::gfxa#2 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::ax#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::ax#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxa
    bne !+
    inc gfxa+1
  !:
  //SEG343 [197] (byte) mode_8bpppixelcell::ax#1 ← ++ (byte) mode_8bpppixelcell::ax#2 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::ax#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::ax#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG344 [198] if((byte) mode_8bpppixelcell::ax#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_8bpppixelcell::@3 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::ax#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#4 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::ax#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b3
  //SEG345 mode_8bpppixelcell::@13
  //SEG346 [199] (byte) mode_8bpppixelcell::ay#1 ← ++ (byte) mode_8bpppixelcell::ay#4 [ mode_8bpppixelcell::ay#1 mode_8bpppixelcell::gfxa#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#1 mode_8bpppixelcell::gfxa#1 ] ) -- vbuz1=_inc_vbuz1 
    inc ay
  //SEG347 [200] if((byte) mode_8bpppixelcell::ay#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_8bpppixelcell::@2 [ mode_8bpppixelcell::ay#1 mode_8bpppixelcell::gfxa#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ay#1 mode_8bpppixelcell::gfxa#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda ay
    cmp #$19
    bne b2
  //SEG348 mode_8bpppixelcell::@14
  //SEG349 [201] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 50 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$32
    sta PROCPORT
  //SEG350 [202] phi from mode_8bpppixelcell::@14 to mode_8bpppixelcell::@4 [phi:mode_8bpppixelcell::@14->mode_8bpppixelcell::@4]
  //SEG351 [202] phi (byte) mode_8bpppixelcell::ch#8 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bpppixelcell::@14->mode_8bpppixelcell::@4#0] -- vbuz1=vbuc1 
    lda #0
    sta ch
  //SEG352 [202] phi (byte) mode_8bpppixelcell::col#7 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bpppixelcell::@14->mode_8bpppixelcell::@4#1] -- vbuz1=vbuc1 
    sta col
  //SEG353 [202] phi (byte*) mode_8bpppixelcell::gfxb#7 = (const byte*) mode_8bpppixelcell::PLANEB#0 [phi:mode_8bpppixelcell::@14->mode_8bpppixelcell::@4#2] -- pbuz1=pbuc1 
    lda #<PLANEB
    sta gfxb
    lda #>PLANEB
    sta gfxb+1
  //SEG354 [202] phi (byte*) mode_8bpppixelcell::chargen#4 = ((byte*))(word/dword/signed dword) 53248 [phi:mode_8bpppixelcell::@14->mode_8bpppixelcell::@4#3] -- pbuz1=pbuc1 
    lda #<$d000
    sta chargen
    lda #>$d000
    sta chargen+1
  //SEG355 [202] phi from mode_8bpppixelcell::@17 to mode_8bpppixelcell::@4 [phi:mode_8bpppixelcell::@17->mode_8bpppixelcell::@4]
  //SEG356 [202] phi (byte) mode_8bpppixelcell::ch#8 = (byte) mode_8bpppixelcell::ch#1 [phi:mode_8bpppixelcell::@17->mode_8bpppixelcell::@4#0] -- register_copy 
  //SEG357 [202] phi (byte) mode_8bpppixelcell::col#7 = (byte) mode_8bpppixelcell::col#1 [phi:mode_8bpppixelcell::@17->mode_8bpppixelcell::@4#1] -- register_copy 
  //SEG358 [202] phi (byte*) mode_8bpppixelcell::gfxb#7 = (byte*) mode_8bpppixelcell::gfxb#1 [phi:mode_8bpppixelcell::@17->mode_8bpppixelcell::@4#2] -- register_copy 
  //SEG359 [202] phi (byte*) mode_8bpppixelcell::chargen#4 = (byte*) mode_8bpppixelcell::chargen#1 [phi:mode_8bpppixelcell::@17->mode_8bpppixelcell::@4#3] -- register_copy 
  //SEG360 mode_8bpppixelcell::@4
  b4:
  //SEG361 [203] phi from mode_8bpppixelcell::@4 to mode_8bpppixelcell::@5 [phi:mode_8bpppixelcell::@4->mode_8bpppixelcell::@5]
  //SEG362 [203] phi (byte) mode_8bpppixelcell::cr#6 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bpppixelcell::@4->mode_8bpppixelcell::@5#0] -- vbuz1=vbuc1 
    lda #0
    sta cr
  //SEG363 [203] phi (byte) mode_8bpppixelcell::col#5 = (byte) mode_8bpppixelcell::col#7 [phi:mode_8bpppixelcell::@4->mode_8bpppixelcell::@5#1] -- register_copy 
  //SEG364 [203] phi (byte*) mode_8bpppixelcell::gfxb#5 = (byte*) mode_8bpppixelcell::gfxb#7 [phi:mode_8bpppixelcell::@4->mode_8bpppixelcell::@5#2] -- register_copy 
  //SEG365 [203] phi (byte*) mode_8bpppixelcell::chargen#2 = (byte*) mode_8bpppixelcell::chargen#4 [phi:mode_8bpppixelcell::@4->mode_8bpppixelcell::@5#3] -- register_copy 
  //SEG366 [203] phi from mode_8bpppixelcell::@16 to mode_8bpppixelcell::@5 [phi:mode_8bpppixelcell::@16->mode_8bpppixelcell::@5]
  //SEG367 [203] phi (byte) mode_8bpppixelcell::cr#6 = (byte) mode_8bpppixelcell::cr#1 [phi:mode_8bpppixelcell::@16->mode_8bpppixelcell::@5#0] -- register_copy 
  //SEG368 [203] phi (byte) mode_8bpppixelcell::col#5 = (byte) mode_8bpppixelcell::col#1 [phi:mode_8bpppixelcell::@16->mode_8bpppixelcell::@5#1] -- register_copy 
  //SEG369 [203] phi (byte*) mode_8bpppixelcell::gfxb#5 = (byte*) mode_8bpppixelcell::gfxb#1 [phi:mode_8bpppixelcell::@16->mode_8bpppixelcell::@5#2] -- register_copy 
  //SEG370 [203] phi (byte*) mode_8bpppixelcell::chargen#2 = (byte*) mode_8bpppixelcell::chargen#1 [phi:mode_8bpppixelcell::@16->mode_8bpppixelcell::@5#3] -- register_copy 
  //SEG371 mode_8bpppixelcell::@5
  b5:
  //SEG372 [204] (byte) mode_8bpppixelcell::bits#0 ← *((byte*) mode_8bpppixelcell::chargen#2) [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#0 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#0 ] ) -- vbuz1=_deref_pbuz2 
    ldy #0
    lda (chargen),y
    sta bits
  //SEG373 [205] (byte*) mode_8bpppixelcell::chargen#1 ← ++ (byte*) mode_8bpppixelcell::chargen#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#0 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::col#5 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#0 ] ) -- pbuz1=_inc_pbuz1 
    inc chargen
    bne !+
    inc chargen+1
  !:
  //SEG374 [206] phi from mode_8bpppixelcell::@5 to mode_8bpppixelcell::@6 [phi:mode_8bpppixelcell::@5->mode_8bpppixelcell::@6]
  //SEG375 [206] phi (byte) mode_8bpppixelcell::cp#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bpppixelcell::@5->mode_8bpppixelcell::@6#0] -- vbuxx=vbuc1 
    ldx #0
  //SEG376 [206] phi (byte) mode_8bpppixelcell::col#2 = (byte) mode_8bpppixelcell::col#5 [phi:mode_8bpppixelcell::@5->mode_8bpppixelcell::@6#1] -- register_copy 
  //SEG377 [206] phi (byte*) mode_8bpppixelcell::gfxb#2 = (byte*) mode_8bpppixelcell::gfxb#5 [phi:mode_8bpppixelcell::@5->mode_8bpppixelcell::@6#2] -- register_copy 
  //SEG378 [206] phi (byte) mode_8bpppixelcell::bits#2 = (byte) mode_8bpppixelcell::bits#0 [phi:mode_8bpppixelcell::@5->mode_8bpppixelcell::@6#3] -- register_copy 
  //SEG379 [206] phi from mode_8bpppixelcell::@7 to mode_8bpppixelcell::@6 [phi:mode_8bpppixelcell::@7->mode_8bpppixelcell::@6]
  //SEG380 [206] phi (byte) mode_8bpppixelcell::cp#2 = (byte) mode_8bpppixelcell::cp#1 [phi:mode_8bpppixelcell::@7->mode_8bpppixelcell::@6#0] -- register_copy 
  //SEG381 [206] phi (byte) mode_8bpppixelcell::col#2 = (byte) mode_8bpppixelcell::col#1 [phi:mode_8bpppixelcell::@7->mode_8bpppixelcell::@6#1] -- register_copy 
  //SEG382 [206] phi (byte*) mode_8bpppixelcell::gfxb#2 = (byte*) mode_8bpppixelcell::gfxb#1 [phi:mode_8bpppixelcell::@7->mode_8bpppixelcell::@6#2] -- register_copy 
  //SEG383 [206] phi (byte) mode_8bpppixelcell::bits#2 = (byte) mode_8bpppixelcell::bits#1 [phi:mode_8bpppixelcell::@7->mode_8bpppixelcell::@6#3] -- register_copy 
  //SEG384 mode_8bpppixelcell::@6
  b6:
  //SEG385 [207] (byte~) mode_8bpppixelcell::$17 ← (byte) mode_8bpppixelcell::bits#2 & (byte/word/signed word/dword/signed dword) 128 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::$17 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::$17 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #$80
    and bits
  //SEG386 [208] if((byte~) mode_8bpppixelcell::$17==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_8bpppixelcell::@7 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b10
  //SEG387 mode_8bpppixelcell::@15
  //SEG388 [209] (byte~) mode_8bpppixelcell::c#3 ← (byte) mode_8bpppixelcell::col#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::c#3 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::c#3 ] ) -- vbuaa=vbuz1 
    lda col
  //SEG389 [210] phi from mode_8bpppixelcell::@15 to mode_8bpppixelcell::@7 [phi:mode_8bpppixelcell::@15->mode_8bpppixelcell::@7]
  //SEG390 [210] phi (byte) mode_8bpppixelcell::c#2 = (byte~) mode_8bpppixelcell::c#3 [phi:mode_8bpppixelcell::@15->mode_8bpppixelcell::@7#0] -- register_copy 
    jmp b7
  //SEG391 [210] phi from mode_8bpppixelcell::@6 to mode_8bpppixelcell::@7 [phi:mode_8bpppixelcell::@6->mode_8bpppixelcell::@7]
  b10:
  //SEG392 [210] phi (byte) mode_8bpppixelcell::c#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_8bpppixelcell::@6->mode_8bpppixelcell::@7#0] -- vbuaa=vbuc1 
    lda #0
  //SEG393 mode_8bpppixelcell::@7
  b7:
  //SEG394 [211] *((byte*) mode_8bpppixelcell::gfxb#2) ← (byte) mode_8bpppixelcell::c#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (gfxb),y
  //SEG395 [212] (byte*) mode_8bpppixelcell::gfxb#1 ← ++ (byte*) mode_8bpppixelcell::gfxb#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#2 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxb
    bne !+
    inc gfxb+1
  !:
  //SEG396 [213] (byte) mode_8bpppixelcell::bits#1 ← (byte) mode_8bpppixelcell::bits#2 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::bits#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::col#2 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::bits#1 ] ) -- vbuz1=vbuz1_rol_1 
    asl bits
  //SEG397 [214] (byte) mode_8bpppixelcell::col#1 ← ++ (byte) mode_8bpppixelcell::col#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::bits#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cp#2 mode_8bpppixelcell::bits#1 ] ) -- vbuz1=_inc_vbuz1 
    inc col
  //SEG398 [215] (byte) mode_8bpppixelcell::cp#1 ← ++ (byte) mode_8bpppixelcell::cp#2 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#1 mode_8bpppixelcell::cp#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#1 mode_8bpppixelcell::cp#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG399 [216] if((byte) mode_8bpppixelcell::cp#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto mode_8bpppixelcell::@6 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#1 mode_8bpppixelcell::cp#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#6 mode_8bpppixelcell::bits#1 mode_8bpppixelcell::cp#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #8
    bne b6
  //SEG400 mode_8bpppixelcell::@16
  //SEG401 [217] (byte) mode_8bpppixelcell::cr#1 ← ++ (byte) mode_8bpppixelcell::cr#6 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cr
  //SEG402 [218] if((byte) mode_8bpppixelcell::cr#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto mode_8bpppixelcell::@5 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::ch#8 mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::cr#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cr
    cmp #8
    bne b5
  //SEG403 mode_8bpppixelcell::@17
  //SEG404 [219] (byte) mode_8bpppixelcell::ch#1 ← ++ (byte) mode_8bpppixelcell::ch#8 [ mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::ch#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::ch#1 ] ) -- vbuz1=_inc_vbuz1 
    inc ch
  //SEG405 [220] if((byte) mode_8bpppixelcell::ch#1!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_8bpppixelcell::@4 [ mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::ch#1 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::chargen#1 mode_8bpppixelcell::gfxb#1 mode_8bpppixelcell::col#1 mode_8bpppixelcell::ch#1 ] ) -- vbuz1_neq_0_then_la1 
    lda ch
    bne b4
  //SEG406 mode_8bpppixelcell::@18
  //SEG407 [221] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 55 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$37
    sta PROCPORT
  //SEG408 mode_8bpppixelcell::@8
  //SEG409 [222] if(true) goto mode_8bpppixelcell::@9 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- true_then_la1 
    jmp b9
  //SEG410 mode_8bpppixelcell::@return
  breturn:
  //SEG411 [223] return  [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] )
    rts
  //SEG412 [224] phi from mode_8bpppixelcell::@8 to mode_8bpppixelcell::@9 [phi:mode_8bpppixelcell::@8->mode_8bpppixelcell::@9]
  //SEG413 mode_8bpppixelcell::@9
  b9:
  //SEG414 [225] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ keyboard_key_pressed::return#0 ] )
  //SEG415 [153] phi from mode_8bpppixelcell::@9 to keyboard_key_pressed [phi:mode_8bpppixelcell::@9->keyboard_key_pressed]
  //SEG416 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_8bpppixelcell::@9->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_SPACE
    jsr keyboard_key_pressed
  //SEG417 [226] (byte) keyboard_key_pressed::return#22 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#22 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ keyboard_key_pressed::return#22 ] )
    // (byte) keyboard_key_pressed::return#22 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
  //SEG418 mode_8bpppixelcell::@24
  //SEG419 [227] (byte~) mode_8bpppixelcell::$24 ← (byte) keyboard_key_pressed::return#22 [ mode_8bpppixelcell::$24 ] ( main:2::menu:9::mode_8bpppixelcell:105 [ mode_8bpppixelcell::$24 ] )
    // (byte~) mode_8bpppixelcell::$24 = (byte) keyboard_key_pressed::return#22  // register copy reg byte a
  //SEG420 [228] if((byte~) mode_8bpppixelcell::$24==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_8bpppixelcell::@8 [ ] ( main:2::menu:9::mode_8bpppixelcell:105 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b9
    jmp breturn
}
//SEG421 mode_sixsfred
mode_sixsfred: {
    .label PLANEA = $4000
    .label PLANEB = $6000
    .label COLORS = $8000
    .label col = 2
    .label cy = 4
    .label gfxa = 2
    .label ay = 4
    .label gfxb = 2
    .label by = 4
  //SEG422 [229] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_CONTROL_HIGHCOLOR_ON|DTV_CONTROL_LINEAR_ADDRESSING_ON
    sta DTV_CONTROL
  //SEG423 [230] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_ECM|VIC_BMM|VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG424 [231] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_MCM|VIC_CSEL
    sta VIC_CONTROL2
  //SEG425 [232] *((const byte*) DTV_PLANEA_START_LO#0) ← <(const byte*) mode_sixsfred::PLANEA#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<PLANEA
    sta DTV_PLANEA_START_LO
  //SEG426 [233] *((const byte*) DTV_PLANEA_START_MI#0) ← >(const byte*) mode_sixsfred::PLANEA#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>PLANEA
    sta DTV_PLANEA_START_MI
  //SEG427 [234] *((const byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_START_HI
  //SEG428 [235] *((const byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #1
    sta DTV_PLANEA_STEP
  //SEG429 [236] *((const byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_MODULO_LO
  //SEG430 [237] *((const byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    sta DTV_PLANEA_MODULO_HI
  //SEG431 [238] *((const byte*) DTV_PLANEB_START_LO#0) ← <(const byte*) mode_sixsfred::PLANEB#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<PLANEB
    sta DTV_PLANEB_START_LO
  //SEG432 [239] *((const byte*) DTV_PLANEB_START_MI#0) ← >(const byte*) mode_sixsfred::PLANEB#0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>PLANEB
    sta DTV_PLANEB_START_MI
  //SEG433 [240] *((const byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_START_HI
  //SEG434 [241] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #1
    sta DTV_PLANEB_STEP
  //SEG435 [242] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_MODULO_LO
  //SEG436 [243] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    sta DTV_PLANEB_MODULO_HI
  //SEG437 [244] *((const byte*) DTV_COLOR_BANK_LO#0) ← <(const byte*) mode_sixsfred::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG438 [245] *((const byte*) DTV_COLOR_BANK_HI#0) ← >(const byte*) mode_sixsfred::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>COLORS/$400
    sta DTV_COLOR_BANK_HI
  //SEG439 [246] phi from mode_sixsfred to mode_sixsfred::@1 [phi:mode_sixsfred->mode_sixsfred::@1]
  //SEG440 [246] phi (byte) mode_sixsfred::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred->mode_sixsfred::@1#0] -- vbuxx=vbuc1 
    ldx #0
  //SEG441 [246] phi from mode_sixsfred::@1 to mode_sixsfred::@1 [phi:mode_sixsfred::@1->mode_sixsfred::@1]
  //SEG442 [246] phi (byte) mode_sixsfred::i#2 = (byte) mode_sixsfred::i#1 [phi:mode_sixsfred::@1->mode_sixsfred::@1#0] -- register_copy 
  //SEG443 mode_sixsfred::@1
  b1:
  //SEG444 [247] *((const byte*) DTV_PALETTE#0 + (byte) mode_sixsfred::i#2) ← (byte) mode_sixsfred::i#2 [ mode_sixsfred::i#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::i#2 ] ) -- pbuc1_derefidx_vbuxx=vbuxx 
    txa
    sta DTV_PALETTE,x
  //SEG445 [248] (byte) mode_sixsfred::i#1 ← ++ (byte) mode_sixsfred::i#2 [ mode_sixsfred::i#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG446 [249] if((byte) mode_sixsfred::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_sixsfred::@1 [ mode_sixsfred::i#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne b1
  //SEG447 mode_sixsfred::@12
  //SEG448 [250] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG449 [251] phi from mode_sixsfred::@12 to mode_sixsfred::@2 [phi:mode_sixsfred::@12->mode_sixsfred::@2]
  //SEG450 [251] phi (byte*) mode_sixsfred::col#3 = (const byte*) mode_sixsfred::COLORS#0 [phi:mode_sixsfred::@12->mode_sixsfred::@2#0] -- pbuz1=pbuc1 
    lda #<COLORS
    sta col
    lda #>COLORS
    sta col+1
  //SEG451 [251] phi (byte) mode_sixsfred::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred::@12->mode_sixsfred::@2#1] -- vbuz1=vbuc1 
    lda #0
    sta cy
  //SEG452 [251] phi from mode_sixsfred::@13 to mode_sixsfred::@2 [phi:mode_sixsfred::@13->mode_sixsfred::@2]
  //SEG453 [251] phi (byte*) mode_sixsfred::col#3 = (byte*) mode_sixsfred::col#1 [phi:mode_sixsfred::@13->mode_sixsfred::@2#0] -- register_copy 
  //SEG454 [251] phi (byte) mode_sixsfred::cy#4 = (byte) mode_sixsfred::cy#1 [phi:mode_sixsfred::@13->mode_sixsfred::@2#1] -- register_copy 
  //SEG455 mode_sixsfred::@2
  b2:
  //SEG456 [252] phi from mode_sixsfred::@2 to mode_sixsfred::@3 [phi:mode_sixsfred::@2->mode_sixsfred::@3]
  //SEG457 [252] phi (byte*) mode_sixsfred::col#2 = (byte*) mode_sixsfred::col#3 [phi:mode_sixsfred::@2->mode_sixsfred::@3#0] -- register_copy 
  //SEG458 [252] phi (byte) mode_sixsfred::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred::@2->mode_sixsfred::@3#1] -- vbuxx=vbuc1 
    ldx #0
  //SEG459 [252] phi from mode_sixsfred::@3 to mode_sixsfred::@3 [phi:mode_sixsfred::@3->mode_sixsfred::@3]
  //SEG460 [252] phi (byte*) mode_sixsfred::col#2 = (byte*) mode_sixsfred::col#1 [phi:mode_sixsfred::@3->mode_sixsfred::@3#0] -- register_copy 
  //SEG461 [252] phi (byte) mode_sixsfred::cx#2 = (byte) mode_sixsfred::cx#1 [phi:mode_sixsfred::@3->mode_sixsfred::@3#1] -- register_copy 
  //SEG462 mode_sixsfred::@3
  b3:
  //SEG463 [253] (byte~) mode_sixsfred::$15 ← (byte) mode_sixsfred::cx#2 + (byte) mode_sixsfred::cy#4 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 mode_sixsfred::$15 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 mode_sixsfred::$15 ] ) -- vbuaa=vbuxx_plus_vbuz1 
    txa
    clc
    adc cy
  //SEG464 [254] (byte~) mode_sixsfred::$16 ← (byte~) mode_sixsfred::$15 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 mode_sixsfred::$16 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 mode_sixsfred::$16 ] ) -- vbuaa=vbuaa_band_vbuc1 
    and #$f
  //SEG465 [255] *((byte*) mode_sixsfred::col#2) ← (byte~) mode_sixsfred::$16 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::cx#2 mode_sixsfred::col#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (col),y
  //SEG466 [256] (byte*) mode_sixsfred::col#1 ← ++ (byte*) mode_sixsfred::col#2 [ mode_sixsfred::cy#4 mode_sixsfred::col#1 mode_sixsfred::cx#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::col#1 mode_sixsfred::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG467 [257] (byte) mode_sixsfred::cx#1 ← ++ (byte) mode_sixsfred::cx#2 [ mode_sixsfred::cy#4 mode_sixsfred::col#1 mode_sixsfred::cx#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::col#1 mode_sixsfred::cx#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG468 [258] if((byte) mode_sixsfred::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred::@3 [ mode_sixsfred::cy#4 mode_sixsfred::col#1 mode_sixsfred::cx#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#4 mode_sixsfred::col#1 mode_sixsfred::cx#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b3
  //SEG469 mode_sixsfred::@13
  //SEG470 [259] (byte) mode_sixsfred::cy#1 ← ++ (byte) mode_sixsfred::cy#4 [ mode_sixsfred::cy#1 mode_sixsfred::col#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#1 mode_sixsfred::col#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG471 [260] if((byte) mode_sixsfred::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_sixsfred::@2 [ mode_sixsfred::cy#1 mode_sixsfred::col#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::cy#1 mode_sixsfred::col#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2
  //SEG472 [261] phi from mode_sixsfred::@13 to mode_sixsfred::@4 [phi:mode_sixsfred::@13->mode_sixsfred::@4]
  //SEG473 [261] phi (byte*) mode_sixsfred::gfxa#3 = (const byte*) mode_sixsfred::PLANEA#0 [phi:mode_sixsfred::@13->mode_sixsfred::@4#0] -- pbuz1=pbuc1 
    lda #<PLANEA
    sta gfxa
    lda #>PLANEA
    sta gfxa+1
  //SEG474 [261] phi (byte) mode_sixsfred::ay#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred::@13->mode_sixsfred::@4#1] -- vbuz1=vbuc1 
    lda #0
    sta ay
  //SEG475 [261] phi from mode_sixsfred::@15 to mode_sixsfred::@4 [phi:mode_sixsfred::@15->mode_sixsfred::@4]
  //SEG476 [261] phi (byte*) mode_sixsfred::gfxa#3 = (byte*) mode_sixsfred::gfxa#1 [phi:mode_sixsfred::@15->mode_sixsfred::@4#0] -- register_copy 
  //SEG477 [261] phi (byte) mode_sixsfred::ay#4 = (byte) mode_sixsfred::ay#1 [phi:mode_sixsfred::@15->mode_sixsfred::@4#1] -- register_copy 
  //SEG478 mode_sixsfred::@4
  b4:
  //SEG479 [262] phi from mode_sixsfred::@4 to mode_sixsfred::@5 [phi:mode_sixsfred::@4->mode_sixsfred::@5]
  //SEG480 [262] phi (byte) mode_sixsfred::ax#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred::@4->mode_sixsfred::@5#0] -- vbuxx=vbuc1 
    ldx #0
  //SEG481 [262] phi (byte*) mode_sixsfred::gfxa#2 = (byte*) mode_sixsfred::gfxa#3 [phi:mode_sixsfred::@4->mode_sixsfred::@5#1] -- register_copy 
  //SEG482 [262] phi from mode_sixsfred::@5 to mode_sixsfred::@5 [phi:mode_sixsfred::@5->mode_sixsfred::@5]
  //SEG483 [262] phi (byte) mode_sixsfred::ax#2 = (byte) mode_sixsfred::ax#1 [phi:mode_sixsfred::@5->mode_sixsfred::@5#0] -- register_copy 
  //SEG484 [262] phi (byte*) mode_sixsfred::gfxa#2 = (byte*) mode_sixsfred::gfxa#1 [phi:mode_sixsfred::@5->mode_sixsfred::@5#1] -- register_copy 
  //SEG485 mode_sixsfred::@5
  b5:
  //SEG486 [263] (byte~) mode_sixsfred::$19 ← (byte) mode_sixsfred::ay#4 >> (byte/signed byte/word/signed word/dword/signed dword) 1 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 mode_sixsfred::$19 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 mode_sixsfred::$19 ] ) -- vbuaa=vbuz1_ror_1 
    lda ay
    lsr
  //SEG487 [264] (byte) mode_sixsfred::row#0 ← (byte~) mode_sixsfred::$19 & (byte/signed byte/word/signed word/dword/signed dword) 3 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 mode_sixsfred::row#0 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 mode_sixsfred::row#0 ] ) -- vbuaa=vbuaa_band_vbuc1 
    and #3
  //SEG488 [265] *((byte*) mode_sixsfred::gfxa#2) ← *((const byte[]) mode_sixsfred::row_bitmask#0 + (byte) mode_sixsfred::row#0) [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#2 mode_sixsfred::ax#2 ] ) -- _deref_pbuz1=pbuc1_derefidx_vbuaa 
    tay
    lda row_bitmask,y
    ldy #0
    sta (gfxa),y
  //SEG489 [266] (byte*) mode_sixsfred::gfxa#1 ← ++ (byte*) mode_sixsfred::gfxa#2 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#1 mode_sixsfred::ax#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#1 mode_sixsfred::ax#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxa
    bne !+
    inc gfxa+1
  !:
  //SEG490 [267] (byte) mode_sixsfred::ax#1 ← ++ (byte) mode_sixsfred::ax#2 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#1 mode_sixsfred::ax#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#1 mode_sixsfred::ax#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG491 [268] if((byte) mode_sixsfred::ax#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred::@5 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#1 mode_sixsfred::ax#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#4 mode_sixsfred::gfxa#1 mode_sixsfred::ax#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b5
  //SEG492 mode_sixsfred::@15
  //SEG493 [269] (byte) mode_sixsfred::ay#1 ← ++ (byte) mode_sixsfred::ay#4 [ mode_sixsfred::ay#1 mode_sixsfred::gfxa#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#1 mode_sixsfred::gfxa#1 ] ) -- vbuz1=_inc_vbuz1 
    inc ay
  //SEG494 [270] if((byte) mode_sixsfred::ay#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_sixsfred::@4 [ mode_sixsfred::ay#1 mode_sixsfred::gfxa#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::ay#1 mode_sixsfred::gfxa#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda ay
    cmp #$c8
    bne b4
  //SEG495 [271] phi from mode_sixsfred::@15 to mode_sixsfred::@6 [phi:mode_sixsfred::@15->mode_sixsfred::@6]
  //SEG496 [271] phi (byte) mode_sixsfred::by#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred::@15->mode_sixsfred::@6#0] -- vbuz1=vbuc1 
    lda #0
    sta by
  //SEG497 [271] phi (byte*) mode_sixsfred::gfxb#3 = (const byte*) mode_sixsfred::PLANEB#0 [phi:mode_sixsfred::@15->mode_sixsfred::@6#1] -- pbuz1=pbuc1 
    lda #<PLANEB
    sta gfxb
    lda #>PLANEB
    sta gfxb+1
  //SEG498 [271] phi from mode_sixsfred::@17 to mode_sixsfred::@6 [phi:mode_sixsfred::@17->mode_sixsfred::@6]
  //SEG499 [271] phi (byte) mode_sixsfred::by#4 = (byte) mode_sixsfred::by#1 [phi:mode_sixsfred::@17->mode_sixsfred::@6#0] -- register_copy 
  //SEG500 [271] phi (byte*) mode_sixsfred::gfxb#3 = (byte*) mode_sixsfred::gfxb#1 [phi:mode_sixsfred::@17->mode_sixsfred::@6#1] -- register_copy 
  //SEG501 mode_sixsfred::@6
  b6:
  //SEG502 [272] phi from mode_sixsfred::@6 to mode_sixsfred::@7 [phi:mode_sixsfred::@6->mode_sixsfred::@7]
  //SEG503 [272] phi (byte) mode_sixsfred::bx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred::@6->mode_sixsfred::@7#0] -- vbuxx=vbuc1 
    ldx #0
  //SEG504 [272] phi (byte*) mode_sixsfred::gfxb#2 = (byte*) mode_sixsfred::gfxb#3 [phi:mode_sixsfred::@6->mode_sixsfred::@7#1] -- register_copy 
  //SEG505 [272] phi from mode_sixsfred::@7 to mode_sixsfred::@7 [phi:mode_sixsfred::@7->mode_sixsfred::@7]
  //SEG506 [272] phi (byte) mode_sixsfred::bx#2 = (byte) mode_sixsfred::bx#1 [phi:mode_sixsfred::@7->mode_sixsfred::@7#0] -- register_copy 
  //SEG507 [272] phi (byte*) mode_sixsfred::gfxb#2 = (byte*) mode_sixsfred::gfxb#1 [phi:mode_sixsfred::@7->mode_sixsfred::@7#1] -- register_copy 
  //SEG508 mode_sixsfred::@7
  b7:
  //SEG509 [273] *((byte*) mode_sixsfred::gfxb#2) ← (byte/signed byte/word/signed word/dword/signed dword) 27 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#2 mode_sixsfred::bx#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#2 mode_sixsfred::bx#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #$1b
    ldy #0
    sta (gfxb),y
  //SEG510 [274] (byte*) mode_sixsfred::gfxb#1 ← ++ (byte*) mode_sixsfred::gfxb#2 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#1 mode_sixsfred::bx#2 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#1 mode_sixsfred::bx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxb
    bne !+
    inc gfxb+1
  !:
  //SEG511 [275] (byte) mode_sixsfred::bx#1 ← ++ (byte) mode_sixsfred::bx#2 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#1 mode_sixsfred::bx#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#1 mode_sixsfred::bx#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG512 [276] if((byte) mode_sixsfred::bx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred::@7 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#1 mode_sixsfred::bx#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::by#4 mode_sixsfred::gfxb#1 mode_sixsfred::bx#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b7
  //SEG513 mode_sixsfred::@17
  //SEG514 [277] (byte) mode_sixsfred::by#1 ← ++ (byte) mode_sixsfred::by#4 [ mode_sixsfred::gfxb#1 mode_sixsfred::by#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::gfxb#1 mode_sixsfred::by#1 ] ) -- vbuz1=_inc_vbuz1 
    inc by
  //SEG515 [278] if((byte) mode_sixsfred::by#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_sixsfred::@6 [ mode_sixsfred::gfxb#1 mode_sixsfred::by#1 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::gfxb#1 mode_sixsfred::by#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda by
    cmp #$c8
    bne b6
  //SEG516 mode_sixsfred::@8
  //SEG517 [279] if(true) goto mode_sixsfred::@9 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- true_then_la1 
    jmp b9
  //SEG518 mode_sixsfred::@return
  breturn:
  //SEG519 [280] return  [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] )
    rts
  //SEG520 [281] phi from mode_sixsfred::@8 to mode_sixsfred::@9 [phi:mode_sixsfred::@8->mode_sixsfred::@9]
  //SEG521 mode_sixsfred::@9
  b9:
  //SEG522 [282] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_sixsfred:98 [ keyboard_key_pressed::return#0 ] )
  //SEG523 [153] phi from mode_sixsfred::@9 to keyboard_key_pressed [phi:mode_sixsfred::@9->keyboard_key_pressed]
  //SEG524 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_sixsfred::@9->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_SPACE
    jsr keyboard_key_pressed
  //SEG525 [283] (byte) keyboard_key_pressed::return#20 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#20 ] ( main:2::menu:9::mode_sixsfred:98 [ keyboard_key_pressed::return#20 ] )
    // (byte) keyboard_key_pressed::return#20 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
  //SEG526 mode_sixsfred::@24
  //SEG527 [284] (byte~) mode_sixsfred::$25 ← (byte) keyboard_key_pressed::return#20 [ mode_sixsfred::$25 ] ( main:2::menu:9::mode_sixsfred:98 [ mode_sixsfred::$25 ] )
    // (byte~) mode_sixsfred::$25 = (byte) keyboard_key_pressed::return#20  // register copy reg byte a
  //SEG528 [285] if((byte~) mode_sixsfred::$25==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_sixsfred::@8 [ ] ( main:2::menu:9::mode_sixsfred:98 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b9
    jmp breturn
    row_bitmask: .byte 0, $55, $aa, $ff
}
//SEG529 mode_twoplanebitmap
mode_twoplanebitmap: {
    .label PLANEA = $4000
    .label PLANEB = $6000
    .label COLORS = $8000
    .label _15 = 7
    .label col = 2
    .label cy = 4
    .label gfxa = 2
    .label ay = 4
    .label gfxb = 2
    .label by = 4
  //SEG530 [286] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0|(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_CONTROL_HIGHCOLOR_ON|DTV_CONTROL_LINEAR_ADDRESSING_ON
    sta DTV_CONTROL
  //SEG531 [287] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_ECM|VIC_BMM|VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG532 [288] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_CSEL
    sta VIC_CONTROL2
  //SEG533 [289] *((const byte*) DTV_PLANEA_START_LO#0) ← <(const byte*) mode_twoplanebitmap::PLANEA#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<PLANEA
    sta DTV_PLANEA_START_LO
  //SEG534 [290] *((const byte*) DTV_PLANEA_START_MI#0) ← >(const byte*) mode_twoplanebitmap::PLANEA#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>PLANEA
    sta DTV_PLANEA_START_MI
  //SEG535 [291] *((const byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_START_HI
  //SEG536 [292] *((const byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #1
    sta DTV_PLANEA_STEP
  //SEG537 [293] *((const byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_MODULO_LO
  //SEG538 [294] *((const byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    sta DTV_PLANEA_MODULO_HI
  //SEG539 [295] *((const byte*) DTV_PLANEB_START_LO#0) ← <(const byte*) mode_twoplanebitmap::PLANEB#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<PLANEB
    sta DTV_PLANEB_START_LO
  //SEG540 [296] *((const byte*) DTV_PLANEB_START_MI#0) ← >(const byte*) mode_twoplanebitmap::PLANEB#0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>PLANEB
    sta DTV_PLANEB_START_MI
  //SEG541 [297] *((const byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_START_HI
  //SEG542 [298] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #1
    sta DTV_PLANEB_STEP
  //SEG543 [299] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_MODULO_LO
  //SEG544 [300] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    sta DTV_PLANEB_MODULO_HI
  //SEG545 [301] *((const byte*) DTV_COLOR_BANK_LO#0) ← <(const byte*) mode_twoplanebitmap::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG546 [302] *((const byte*) DTV_COLOR_BANK_HI#0) ← >(const byte*) mode_twoplanebitmap::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>COLORS/$400
    sta DTV_COLOR_BANK_HI
  //SEG547 [303] phi from mode_twoplanebitmap to mode_twoplanebitmap::@1 [phi:mode_twoplanebitmap->mode_twoplanebitmap::@1]
  //SEG548 [303] phi (byte) mode_twoplanebitmap::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_twoplanebitmap->mode_twoplanebitmap::@1#0] -- vbuxx=vbuc1 
    ldx #0
  //SEG549 [303] phi from mode_twoplanebitmap::@1 to mode_twoplanebitmap::@1 [phi:mode_twoplanebitmap::@1->mode_twoplanebitmap::@1]
  //SEG550 [303] phi (byte) mode_twoplanebitmap::i#2 = (byte) mode_twoplanebitmap::i#1 [phi:mode_twoplanebitmap::@1->mode_twoplanebitmap::@1#0] -- register_copy 
  //SEG551 mode_twoplanebitmap::@1
  b1:
  //SEG552 [304] *((const byte*) DTV_PALETTE#0 + (byte) mode_twoplanebitmap::i#2) ← (byte) mode_twoplanebitmap::i#2 [ mode_twoplanebitmap::i#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::i#2 ] ) -- pbuc1_derefidx_vbuxx=vbuxx 
    txa
    sta DTV_PALETTE,x
  //SEG553 [305] (byte) mode_twoplanebitmap::i#1 ← ++ (byte) mode_twoplanebitmap::i#2 [ mode_twoplanebitmap::i#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG554 [306] if((byte) mode_twoplanebitmap::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_twoplanebitmap::@1 [ mode_twoplanebitmap::i#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne b1
  //SEG555 mode_twoplanebitmap::@14
  //SEG556 [307] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG557 [308] *((const byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 112 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$70
    sta BGCOL1
  //SEG558 [309] *((const byte*) BGCOL2#0) ← (byte/word/signed word/dword/signed dword) 212 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$d4
    sta BGCOL2
  //SEG559 [310] phi from mode_twoplanebitmap::@14 to mode_twoplanebitmap::@2 [phi:mode_twoplanebitmap::@14->mode_twoplanebitmap::@2]
  //SEG560 [310] phi (byte*) mode_twoplanebitmap::col#3 = (const byte*) mode_twoplanebitmap::COLORS#0 [phi:mode_twoplanebitmap::@14->mode_twoplanebitmap::@2#0] -- pbuz1=pbuc1 
    lda #<COLORS
    sta col
    lda #>COLORS
    sta col+1
  //SEG561 [310] phi (byte) mode_twoplanebitmap::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_twoplanebitmap::@14->mode_twoplanebitmap::@2#1] -- vbuz1=vbuc1 
    lda #0
    sta cy
  //SEG562 [310] phi from mode_twoplanebitmap::@15 to mode_twoplanebitmap::@2 [phi:mode_twoplanebitmap::@15->mode_twoplanebitmap::@2]
  //SEG563 [310] phi (byte*) mode_twoplanebitmap::col#3 = (byte*) mode_twoplanebitmap::col#1 [phi:mode_twoplanebitmap::@15->mode_twoplanebitmap::@2#0] -- register_copy 
  //SEG564 [310] phi (byte) mode_twoplanebitmap::cy#4 = (byte) mode_twoplanebitmap::cy#1 [phi:mode_twoplanebitmap::@15->mode_twoplanebitmap::@2#1] -- register_copy 
  //SEG565 mode_twoplanebitmap::@2
  b2:
  //SEG566 [311] phi from mode_twoplanebitmap::@2 to mode_twoplanebitmap::@3 [phi:mode_twoplanebitmap::@2->mode_twoplanebitmap::@3]
  //SEG567 [311] phi (byte*) mode_twoplanebitmap::col#2 = (byte*) mode_twoplanebitmap::col#3 [phi:mode_twoplanebitmap::@2->mode_twoplanebitmap::@3#0] -- register_copy 
  //SEG568 [311] phi (byte) mode_twoplanebitmap::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_twoplanebitmap::@2->mode_twoplanebitmap::@3#1] -- vbuxx=vbuc1 
    ldx #0
  //SEG569 [311] phi from mode_twoplanebitmap::@3 to mode_twoplanebitmap::@3 [phi:mode_twoplanebitmap::@3->mode_twoplanebitmap::@3]
  //SEG570 [311] phi (byte*) mode_twoplanebitmap::col#2 = (byte*) mode_twoplanebitmap::col#1 [phi:mode_twoplanebitmap::@3->mode_twoplanebitmap::@3#0] -- register_copy 
  //SEG571 [311] phi (byte) mode_twoplanebitmap::cx#2 = (byte) mode_twoplanebitmap::cx#1 [phi:mode_twoplanebitmap::@3->mode_twoplanebitmap::@3#1] -- register_copy 
  //SEG572 mode_twoplanebitmap::@3
  b3:
  //SEG573 [312] (byte~) mode_twoplanebitmap::$14 ← (byte) mode_twoplanebitmap::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$14 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$14 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #$f
    and cy
  //SEG574 [313] (byte~) mode_twoplanebitmap::$15 ← (byte~) mode_twoplanebitmap::$14 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$15 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$15 ] ) -- vbuz1=vbuaa_rol_4 
    asl
    asl
    asl
    asl
    sta _15
  //SEG575 [314] (byte~) mode_twoplanebitmap::$16 ← (byte) mode_twoplanebitmap::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$15 mode_twoplanebitmap::$16 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$15 mode_twoplanebitmap::$16 ] ) -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #$f
  //SEG576 [315] (byte~) mode_twoplanebitmap::$17 ← (byte~) mode_twoplanebitmap::$15 | (byte~) mode_twoplanebitmap::$16 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$17 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 mode_twoplanebitmap::$17 ] ) -- vbuaa=vbuz1_bor_vbuaa 
    ora _15
  //SEG577 [316] *((byte*) mode_twoplanebitmap::col#2) ← (byte~) mode_twoplanebitmap::$17 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cx#2 mode_twoplanebitmap::col#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (col),y
  //SEG578 [317] (byte*) mode_twoplanebitmap::col#1 ← ++ (byte*) mode_twoplanebitmap::col#2 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#1 mode_twoplanebitmap::cx#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#1 mode_twoplanebitmap::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG579 [318] (byte) mode_twoplanebitmap::cx#1 ← ++ (byte) mode_twoplanebitmap::cx#2 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#1 mode_twoplanebitmap::cx#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#1 mode_twoplanebitmap::cx#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG580 [319] if((byte) mode_twoplanebitmap::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_twoplanebitmap::@3 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#1 mode_twoplanebitmap::cx#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#4 mode_twoplanebitmap::col#1 mode_twoplanebitmap::cx#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b3
  //SEG581 mode_twoplanebitmap::@15
  //SEG582 [320] (byte) mode_twoplanebitmap::cy#1 ← ++ (byte) mode_twoplanebitmap::cy#4 [ mode_twoplanebitmap::cy#1 mode_twoplanebitmap::col#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#1 mode_twoplanebitmap::col#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG583 [321] if((byte) mode_twoplanebitmap::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_twoplanebitmap::@2 [ mode_twoplanebitmap::cy#1 mode_twoplanebitmap::col#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::cy#1 mode_twoplanebitmap::col#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2
  //SEG584 [322] phi from mode_twoplanebitmap::@15 to mode_twoplanebitmap::@4 [phi:mode_twoplanebitmap::@15->mode_twoplanebitmap::@4]
  //SEG585 [322] phi (byte*) mode_twoplanebitmap::gfxa#6 = (const byte*) mode_twoplanebitmap::PLANEA#0 [phi:mode_twoplanebitmap::@15->mode_twoplanebitmap::@4#0] -- pbuz1=pbuc1 
    lda #<PLANEA
    sta gfxa
    lda #>PLANEA
    sta gfxa+1
  //SEG586 [322] phi (byte) mode_twoplanebitmap::ay#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_twoplanebitmap::@15->mode_twoplanebitmap::@4#1] -- vbuz1=vbuc1 
    lda #0
    sta ay
  //SEG587 [322] phi from mode_twoplanebitmap::@19 to mode_twoplanebitmap::@4 [phi:mode_twoplanebitmap::@19->mode_twoplanebitmap::@4]
  //SEG588 [322] phi (byte*) mode_twoplanebitmap::gfxa#6 = (byte*) mode_twoplanebitmap::gfxa#7 [phi:mode_twoplanebitmap::@19->mode_twoplanebitmap::@4#0] -- register_copy 
  //SEG589 [322] phi (byte) mode_twoplanebitmap::ay#4 = (byte) mode_twoplanebitmap::ay#1 [phi:mode_twoplanebitmap::@19->mode_twoplanebitmap::@4#1] -- register_copy 
  //SEG590 mode_twoplanebitmap::@4
  b4:
  //SEG591 [323] phi from mode_twoplanebitmap::@4 to mode_twoplanebitmap::@5 [phi:mode_twoplanebitmap::@4->mode_twoplanebitmap::@5]
  //SEG592 [323] phi (byte) mode_twoplanebitmap::ax#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_twoplanebitmap::@4->mode_twoplanebitmap::@5#0] -- vbuxx=vbuc1 
    ldx #0
  //SEG593 [323] phi (byte*) mode_twoplanebitmap::gfxa#3 = (byte*) mode_twoplanebitmap::gfxa#6 [phi:mode_twoplanebitmap::@4->mode_twoplanebitmap::@5#1] -- register_copy 
  //SEG594 [323] phi from mode_twoplanebitmap::@7 to mode_twoplanebitmap::@5 [phi:mode_twoplanebitmap::@7->mode_twoplanebitmap::@5]
  //SEG595 [323] phi (byte) mode_twoplanebitmap::ax#2 = (byte) mode_twoplanebitmap::ax#1 [phi:mode_twoplanebitmap::@7->mode_twoplanebitmap::@5#0] -- register_copy 
  //SEG596 [323] phi (byte*) mode_twoplanebitmap::gfxa#3 = (byte*) mode_twoplanebitmap::gfxa#7 [phi:mode_twoplanebitmap::@7->mode_twoplanebitmap::@5#1] -- register_copy 
  //SEG597 mode_twoplanebitmap::@5
  b5:
  //SEG598 [324] (byte~) mode_twoplanebitmap::$20 ← (byte) mode_twoplanebitmap::ay#4 & (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::$20 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::$20 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #4
    and ay
  //SEG599 [325] if((byte~) mode_twoplanebitmap::$20!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_twoplanebitmap::@6 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ) -- vbuaa_neq_0_then_la1 
    cmp #0
    bne b6
  //SEG600 mode_twoplanebitmap::@17
  //SEG601 [326] *((byte*) mode_twoplanebitmap::gfxa#3) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #0
    tay
    sta (gfxa),y
  //SEG602 [327] (byte*) mode_twoplanebitmap::gfxa#2 ← ++ (byte*) mode_twoplanebitmap::gfxa#3 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::gfxa#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::gfxa#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxa
    bne !+
    inc gfxa+1
  !:
  //SEG603 [328] phi from mode_twoplanebitmap::@17 mode_twoplanebitmap::@6 to mode_twoplanebitmap::@7 [phi:mode_twoplanebitmap::@17/mode_twoplanebitmap::@6->mode_twoplanebitmap::@7]
  //SEG604 [328] phi (byte*) mode_twoplanebitmap::gfxa#7 = (byte*) mode_twoplanebitmap::gfxa#2 [phi:mode_twoplanebitmap::@17/mode_twoplanebitmap::@6->mode_twoplanebitmap::@7#0] -- register_copy 
  //SEG605 mode_twoplanebitmap::@7
  b7:
  //SEG606 [329] (byte) mode_twoplanebitmap::ax#1 ← ++ (byte) mode_twoplanebitmap::ax#2 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::ax#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::ax#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG607 [330] if((byte) mode_twoplanebitmap::ax#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_twoplanebitmap::@5 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::ax#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::ax#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b5
  //SEG608 mode_twoplanebitmap::@19
  //SEG609 [331] (byte) mode_twoplanebitmap::ay#1 ← ++ (byte) mode_twoplanebitmap::ay#4 [ mode_twoplanebitmap::ay#1 mode_twoplanebitmap::gfxa#7 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#1 mode_twoplanebitmap::gfxa#7 ] ) -- vbuz1=_inc_vbuz1 
    inc ay
  //SEG610 [332] if((byte) mode_twoplanebitmap::ay#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_twoplanebitmap::@4 [ mode_twoplanebitmap::ay#1 mode_twoplanebitmap::gfxa#7 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#1 mode_twoplanebitmap::gfxa#7 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda ay
    cmp #$c8
    bne b4
  //SEG611 [333] phi from mode_twoplanebitmap::@19 to mode_twoplanebitmap::@8 [phi:mode_twoplanebitmap::@19->mode_twoplanebitmap::@8]
  //SEG612 [333] phi (byte) mode_twoplanebitmap::by#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_twoplanebitmap::@19->mode_twoplanebitmap::@8#0] -- vbuz1=vbuc1 
    lda #0
    sta by
  //SEG613 [333] phi (byte*) mode_twoplanebitmap::gfxb#3 = (const byte*) mode_twoplanebitmap::PLANEB#0 [phi:mode_twoplanebitmap::@19->mode_twoplanebitmap::@8#1] -- pbuz1=pbuc1 
    lda #<PLANEB
    sta gfxb
    lda #>PLANEB
    sta gfxb+1
  //SEG614 [333] phi from mode_twoplanebitmap::@21 to mode_twoplanebitmap::@8 [phi:mode_twoplanebitmap::@21->mode_twoplanebitmap::@8]
  //SEG615 [333] phi (byte) mode_twoplanebitmap::by#4 = (byte) mode_twoplanebitmap::by#1 [phi:mode_twoplanebitmap::@21->mode_twoplanebitmap::@8#0] -- register_copy 
  //SEG616 [333] phi (byte*) mode_twoplanebitmap::gfxb#3 = (byte*) mode_twoplanebitmap::gfxb#1 [phi:mode_twoplanebitmap::@21->mode_twoplanebitmap::@8#1] -- register_copy 
  //SEG617 mode_twoplanebitmap::@8
  b8:
  //SEG618 [334] phi from mode_twoplanebitmap::@8 to mode_twoplanebitmap::@9 [phi:mode_twoplanebitmap::@8->mode_twoplanebitmap::@9]
  //SEG619 [334] phi (byte) mode_twoplanebitmap::bx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_twoplanebitmap::@8->mode_twoplanebitmap::@9#0] -- vbuxx=vbuc1 
    ldx #0
  //SEG620 [334] phi (byte*) mode_twoplanebitmap::gfxb#2 = (byte*) mode_twoplanebitmap::gfxb#3 [phi:mode_twoplanebitmap::@8->mode_twoplanebitmap::@9#1] -- register_copy 
  //SEG621 [334] phi from mode_twoplanebitmap::@9 to mode_twoplanebitmap::@9 [phi:mode_twoplanebitmap::@9->mode_twoplanebitmap::@9]
  //SEG622 [334] phi (byte) mode_twoplanebitmap::bx#2 = (byte) mode_twoplanebitmap::bx#1 [phi:mode_twoplanebitmap::@9->mode_twoplanebitmap::@9#0] -- register_copy 
  //SEG623 [334] phi (byte*) mode_twoplanebitmap::gfxb#2 = (byte*) mode_twoplanebitmap::gfxb#1 [phi:mode_twoplanebitmap::@9->mode_twoplanebitmap::@9#1] -- register_copy 
  //SEG624 mode_twoplanebitmap::@9
  b9:
  //SEG625 [335] *((byte*) mode_twoplanebitmap::gfxb#2) ← (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::bx#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::bx#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #$f
    ldy #0
    sta (gfxb),y
  //SEG626 [336] (byte*) mode_twoplanebitmap::gfxb#1 ← ++ (byte*) mode_twoplanebitmap::gfxb#2 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::bx#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::bx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxb
    bne !+
    inc gfxb+1
  !:
  //SEG627 [337] (byte) mode_twoplanebitmap::bx#1 ← ++ (byte) mode_twoplanebitmap::bx#2 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::bx#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::bx#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG628 [338] if((byte) mode_twoplanebitmap::bx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_twoplanebitmap::@9 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::bx#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::by#4 mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::bx#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b9
  //SEG629 mode_twoplanebitmap::@21
  //SEG630 [339] (byte) mode_twoplanebitmap::by#1 ← ++ (byte) mode_twoplanebitmap::by#4 [ mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::by#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::by#1 ] ) -- vbuz1=_inc_vbuz1 
    inc by
  //SEG631 [340] if((byte) mode_twoplanebitmap::by#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_twoplanebitmap::@8 [ mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::by#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::gfxb#1 mode_twoplanebitmap::by#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda by
    cmp #$c8
    bne b8
  //SEG632 mode_twoplanebitmap::@10
  //SEG633 [341] if(true) goto mode_twoplanebitmap::@11 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- true_then_la1 
    jmp b11
  //SEG634 mode_twoplanebitmap::@return
  breturn:
  //SEG635 [342] return  [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] )
    rts
  //SEG636 [343] phi from mode_twoplanebitmap::@10 to mode_twoplanebitmap::@11 [phi:mode_twoplanebitmap::@10->mode_twoplanebitmap::@11]
  //SEG637 mode_twoplanebitmap::@11
  b11:
  //SEG638 [344] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ keyboard_key_pressed::return#0 ] )
  //SEG639 [153] phi from mode_twoplanebitmap::@11 to keyboard_key_pressed [phi:mode_twoplanebitmap::@11->keyboard_key_pressed]
  //SEG640 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_twoplanebitmap::@11->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_SPACE
    jsr keyboard_key_pressed
  //SEG641 [345] (byte) keyboard_key_pressed::return#19 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#19 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ keyboard_key_pressed::return#19 ] )
    // (byte) keyboard_key_pressed::return#19 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
  //SEG642 mode_twoplanebitmap::@28
  //SEG643 [346] (byte~) mode_twoplanebitmap::$27 ← (byte) keyboard_key_pressed::return#19 [ mode_twoplanebitmap::$27 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::$27 ] )
    // (byte~) mode_twoplanebitmap::$27 = (byte) keyboard_key_pressed::return#19  // register copy reg byte a
  //SEG644 [347] if((byte~) mode_twoplanebitmap::$27==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_twoplanebitmap::@10 [ ] ( main:2::menu:9::mode_twoplanebitmap:91 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b11
    jmp breturn
  //SEG645 mode_twoplanebitmap::@6
  b6:
  //SEG646 [348] *((byte*) mode_twoplanebitmap::gfxa#3) ← (byte/word/signed word/dword/signed dword) 255 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::ax#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #$ff
    ldy #0
    sta (gfxa),y
  //SEG647 [349] (byte*) mode_twoplanebitmap::gfxa#1 ← ++ (byte*) mode_twoplanebitmap::gfxa#3 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::gfxa#1 ] ( main:2::menu:9::mode_twoplanebitmap:91 [ mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ax#2 mode_twoplanebitmap::gfxa#1 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxa
    bne !+
    inc gfxa+1
  !:
    jmp b7
}
//SEG648 mode_sixsfred2
mode_sixsfred2: {
    .label PLANEA = $4000
    .label PLANEB = $6000
    .label COLORS = $8000
    .label _15 = 7
    .label col = 2
    .label cy = 4
    .label gfxa = 2
    .label ay = 4
    .label gfxb = 2
    .label by = 4
  //SEG649 [350] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_CONTROL_LINEAR_ADDRESSING_ON
    sta DTV_CONTROL
  //SEG650 [351] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_ECM#0|(const byte) VIC_BMM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_ECM|VIC_BMM|VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG651 [352] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_MCM#0|(const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_MCM|VIC_CSEL
    sta VIC_CONTROL2
  //SEG652 [353] *((const byte*) DTV_PLANEA_START_LO#0) ← <(const byte*) mode_sixsfred2::PLANEA#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<PLANEA
    sta DTV_PLANEA_START_LO
  //SEG653 [354] *((const byte*) DTV_PLANEA_START_MI#0) ← >(const byte*) mode_sixsfred2::PLANEA#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>PLANEA
    sta DTV_PLANEA_START_MI
  //SEG654 [355] *((const byte*) DTV_PLANEA_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_START_HI
  //SEG655 [356] *((const byte*) DTV_PLANEA_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #1
    sta DTV_PLANEA_STEP
  //SEG656 [357] *((const byte*) DTV_PLANEA_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEA_MODULO_LO
  //SEG657 [358] *((const byte*) DTV_PLANEA_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    sta DTV_PLANEA_MODULO_HI
  //SEG658 [359] *((const byte*) DTV_PLANEB_START_LO#0) ← <(const byte*) mode_sixsfred2::PLANEB#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<PLANEB
    sta DTV_PLANEB_START_LO
  //SEG659 [360] *((const byte*) DTV_PLANEB_START_MI#0) ← >(const byte*) mode_sixsfred2::PLANEB#0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>PLANEB
    sta DTV_PLANEB_START_MI
  //SEG660 [361] *((const byte*) DTV_PLANEB_START_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_START_HI
  //SEG661 [362] *((const byte*) DTV_PLANEB_STEP#0) ← (byte/signed byte/word/signed word/dword/signed dword) 1 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #1
    sta DTV_PLANEB_STEP
  //SEG662 [363] *((const byte*) DTV_PLANEB_MODULO_LO#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_PLANEB_MODULO_LO
  //SEG663 [364] *((const byte*) DTV_PLANEB_MODULO_HI#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    sta DTV_PLANEB_MODULO_HI
  //SEG664 [365] *((const byte*) DTV_COLOR_BANK_LO#0) ← <(const byte*) mode_sixsfred2::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #<COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG665 [366] *((const byte*) DTV_COLOR_BANK_HI#0) ← >(const byte*) mode_sixsfred2::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #>COLORS/$400
    sta DTV_COLOR_BANK_HI
  //SEG666 [367] phi from mode_sixsfred2 to mode_sixsfred2::@1 [phi:mode_sixsfred2->mode_sixsfred2::@1]
  //SEG667 [367] phi (byte) mode_sixsfred2::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred2->mode_sixsfred2::@1#0] -- vbuxx=vbuc1 
    ldx #0
  //SEG668 [367] phi from mode_sixsfred2::@1 to mode_sixsfred2::@1 [phi:mode_sixsfred2::@1->mode_sixsfred2::@1]
  //SEG669 [367] phi (byte) mode_sixsfred2::i#2 = (byte) mode_sixsfred2::i#1 [phi:mode_sixsfred2::@1->mode_sixsfred2::@1#0] -- register_copy 
  //SEG670 mode_sixsfred2::@1
  b1:
  //SEG671 [368] *((const byte*) DTV_PALETTE#0 + (byte) mode_sixsfred2::i#2) ← (byte) mode_sixsfred2::i#2 [ mode_sixsfred2::i#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::i#2 ] ) -- pbuc1_derefidx_vbuxx=vbuxx 
    txa
    sta DTV_PALETTE,x
  //SEG672 [369] (byte) mode_sixsfred2::i#1 ← ++ (byte) mode_sixsfred2::i#2 [ mode_sixsfred2::i#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG673 [370] if((byte) mode_sixsfred2::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_sixsfred2::@1 [ mode_sixsfred2::i#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne b1
  //SEG674 mode_sixsfred2::@12
  //SEG675 [371] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG676 [372] phi from mode_sixsfred2::@12 to mode_sixsfred2::@2 [phi:mode_sixsfred2::@12->mode_sixsfred2::@2]
  //SEG677 [372] phi (byte*) mode_sixsfred2::col#3 = (const byte*) mode_sixsfred2::COLORS#0 [phi:mode_sixsfred2::@12->mode_sixsfred2::@2#0] -- pbuz1=pbuc1 
    lda #<COLORS
    sta col
    lda #>COLORS
    sta col+1
  //SEG678 [372] phi (byte) mode_sixsfred2::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred2::@12->mode_sixsfred2::@2#1] -- vbuz1=vbuc1 
    lda #0
    sta cy
  //SEG679 [372] phi from mode_sixsfred2::@13 to mode_sixsfred2::@2 [phi:mode_sixsfred2::@13->mode_sixsfred2::@2]
  //SEG680 [372] phi (byte*) mode_sixsfred2::col#3 = (byte*) mode_sixsfred2::col#1 [phi:mode_sixsfred2::@13->mode_sixsfred2::@2#0] -- register_copy 
  //SEG681 [372] phi (byte) mode_sixsfred2::cy#4 = (byte) mode_sixsfred2::cy#1 [phi:mode_sixsfred2::@13->mode_sixsfred2::@2#1] -- register_copy 
  //SEG682 mode_sixsfred2::@2
  b2:
  //SEG683 [373] phi from mode_sixsfred2::@2 to mode_sixsfred2::@3 [phi:mode_sixsfred2::@2->mode_sixsfred2::@3]
  //SEG684 [373] phi (byte*) mode_sixsfred2::col#2 = (byte*) mode_sixsfred2::col#3 [phi:mode_sixsfred2::@2->mode_sixsfred2::@3#0] -- register_copy 
  //SEG685 [373] phi (byte) mode_sixsfred2::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred2::@2->mode_sixsfred2::@3#1] -- vbuxx=vbuc1 
    ldx #0
  //SEG686 [373] phi from mode_sixsfred2::@3 to mode_sixsfred2::@3 [phi:mode_sixsfred2::@3->mode_sixsfred2::@3]
  //SEG687 [373] phi (byte*) mode_sixsfred2::col#2 = (byte*) mode_sixsfred2::col#1 [phi:mode_sixsfred2::@3->mode_sixsfred2::@3#0] -- register_copy 
  //SEG688 [373] phi (byte) mode_sixsfred2::cx#2 = (byte) mode_sixsfred2::cx#1 [phi:mode_sixsfred2::@3->mode_sixsfred2::@3#1] -- register_copy 
  //SEG689 mode_sixsfred2::@3
  b3:
  //SEG690 [374] (byte~) mode_sixsfred2::$14 ← (byte) mode_sixsfred2::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 3 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$14 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$14 ] ) -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #3
  //SEG691 [375] (byte~) mode_sixsfred2::$15 ← (byte~) mode_sixsfred2::$14 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$15 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$15 ] ) -- vbuz1=vbuaa_rol_4 
    asl
    asl
    asl
    asl
    sta _15
  //SEG692 [376] (byte~) mode_sixsfred2::$16 ← (byte) mode_sixsfred2::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 3 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$15 mode_sixsfred2::$16 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$15 mode_sixsfred2::$16 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #3
    and cy
  //SEG693 [377] (byte~) mode_sixsfred2::$17 ← (byte~) mode_sixsfred2::$15 | (byte~) mode_sixsfred2::$16 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$17 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 mode_sixsfred2::$17 ] ) -- vbuaa=vbuz1_bor_vbuaa 
    ora _15
  //SEG694 [378] *((byte*) mode_sixsfred2::col#2) ← (byte~) mode_sixsfred2::$17 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::cx#2 mode_sixsfred2::col#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (col),y
  //SEG695 [379] (byte*) mode_sixsfred2::col#1 ← ++ (byte*) mode_sixsfred2::col#2 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#1 mode_sixsfred2::cx#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#1 mode_sixsfred2::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG696 [380] (byte) mode_sixsfred2::cx#1 ← ++ (byte) mode_sixsfred2::cx#2 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#1 mode_sixsfred2::cx#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#1 mode_sixsfred2::cx#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG697 [381] if((byte) mode_sixsfred2::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred2::@3 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#1 mode_sixsfred2::cx#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#4 mode_sixsfred2::col#1 mode_sixsfred2::cx#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b3
  //SEG698 mode_sixsfred2::@13
  //SEG699 [382] (byte) mode_sixsfred2::cy#1 ← ++ (byte) mode_sixsfred2::cy#4 [ mode_sixsfred2::cy#1 mode_sixsfred2::col#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#1 mode_sixsfred2::col#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG700 [383] if((byte) mode_sixsfred2::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_sixsfred2::@2 [ mode_sixsfred2::cy#1 mode_sixsfred2::col#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::cy#1 mode_sixsfred2::col#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2
  //SEG701 [384] phi from mode_sixsfred2::@13 to mode_sixsfred2::@4 [phi:mode_sixsfred2::@13->mode_sixsfred2::@4]
  //SEG702 [384] phi (byte*) mode_sixsfred2::gfxa#3 = (const byte*) mode_sixsfred2::PLANEA#0 [phi:mode_sixsfred2::@13->mode_sixsfred2::@4#0] -- pbuz1=pbuc1 
    lda #<PLANEA
    sta gfxa
    lda #>PLANEA
    sta gfxa+1
  //SEG703 [384] phi (byte) mode_sixsfred2::ay#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred2::@13->mode_sixsfred2::@4#1] -- vbuz1=vbuc1 
    lda #0
    sta ay
  //SEG704 [384] phi from mode_sixsfred2::@15 to mode_sixsfred2::@4 [phi:mode_sixsfred2::@15->mode_sixsfred2::@4]
  //SEG705 [384] phi (byte*) mode_sixsfred2::gfxa#3 = (byte*) mode_sixsfred2::gfxa#1 [phi:mode_sixsfred2::@15->mode_sixsfred2::@4#0] -- register_copy 
  //SEG706 [384] phi (byte) mode_sixsfred2::ay#4 = (byte) mode_sixsfred2::ay#1 [phi:mode_sixsfred2::@15->mode_sixsfred2::@4#1] -- register_copy 
  //SEG707 mode_sixsfred2::@4
  b4:
  //SEG708 [385] phi from mode_sixsfred2::@4 to mode_sixsfred2::@5 [phi:mode_sixsfred2::@4->mode_sixsfred2::@5]
  //SEG709 [385] phi (byte) mode_sixsfred2::ax#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred2::@4->mode_sixsfred2::@5#0] -- vbuxx=vbuc1 
    ldx #0
  //SEG710 [385] phi (byte*) mode_sixsfred2::gfxa#2 = (byte*) mode_sixsfred2::gfxa#3 [phi:mode_sixsfred2::@4->mode_sixsfred2::@5#1] -- register_copy 
  //SEG711 [385] phi from mode_sixsfred2::@5 to mode_sixsfred2::@5 [phi:mode_sixsfred2::@5->mode_sixsfred2::@5]
  //SEG712 [385] phi (byte) mode_sixsfred2::ax#2 = (byte) mode_sixsfred2::ax#1 [phi:mode_sixsfred2::@5->mode_sixsfred2::@5#0] -- register_copy 
  //SEG713 [385] phi (byte*) mode_sixsfred2::gfxa#2 = (byte*) mode_sixsfred2::gfxa#1 [phi:mode_sixsfred2::@5->mode_sixsfred2::@5#1] -- register_copy 
  //SEG714 mode_sixsfred2::@5
  b5:
  //SEG715 [386] (byte~) mode_sixsfred2::$20 ← (byte) mode_sixsfred2::ay#4 >> (byte/signed byte/word/signed word/dword/signed dword) 1 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 mode_sixsfred2::$20 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 mode_sixsfred2::$20 ] ) -- vbuaa=vbuz1_ror_1 
    lda ay
    lsr
  //SEG716 [387] (byte) mode_sixsfred2::row#0 ← (byte~) mode_sixsfred2::$20 & (byte/signed byte/word/signed word/dword/signed dword) 3 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 mode_sixsfred2::row#0 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 mode_sixsfred2::row#0 ] ) -- vbuaa=vbuaa_band_vbuc1 
    and #3
  //SEG717 [388] *((byte*) mode_sixsfred2::gfxa#2) ← *((const byte[]) mode_sixsfred2::row_bitmask#0 + (byte) mode_sixsfred2::row#0) [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#2 mode_sixsfred2::ax#2 ] ) -- _deref_pbuz1=pbuc1_derefidx_vbuaa 
    tay
    lda row_bitmask,y
    ldy #0
    sta (gfxa),y
  //SEG718 [389] (byte*) mode_sixsfred2::gfxa#1 ← ++ (byte*) mode_sixsfred2::gfxa#2 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#1 mode_sixsfred2::ax#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#1 mode_sixsfred2::ax#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxa
    bne !+
    inc gfxa+1
  !:
  //SEG719 [390] (byte) mode_sixsfred2::ax#1 ← ++ (byte) mode_sixsfred2::ax#2 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#1 mode_sixsfred2::ax#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#1 mode_sixsfred2::ax#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG720 [391] if((byte) mode_sixsfred2::ax#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred2::@5 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#1 mode_sixsfred2::ax#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#4 mode_sixsfred2::gfxa#1 mode_sixsfred2::ax#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b5
  //SEG721 mode_sixsfred2::@15
  //SEG722 [392] (byte) mode_sixsfred2::ay#1 ← ++ (byte) mode_sixsfred2::ay#4 [ mode_sixsfred2::ay#1 mode_sixsfred2::gfxa#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#1 mode_sixsfred2::gfxa#1 ] ) -- vbuz1=_inc_vbuz1 
    inc ay
  //SEG723 [393] if((byte) mode_sixsfred2::ay#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_sixsfred2::@4 [ mode_sixsfred2::ay#1 mode_sixsfred2::gfxa#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::ay#1 mode_sixsfred2::gfxa#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda ay
    cmp #$c8
    bne b4
  //SEG724 [394] phi from mode_sixsfred2::@15 to mode_sixsfred2::@6 [phi:mode_sixsfred2::@15->mode_sixsfred2::@6]
  //SEG725 [394] phi (byte) mode_sixsfred2::by#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred2::@15->mode_sixsfred2::@6#0] -- vbuz1=vbuc1 
    lda #0
    sta by
  //SEG726 [394] phi (byte*) mode_sixsfred2::gfxb#3 = (const byte*) mode_sixsfred2::PLANEB#0 [phi:mode_sixsfred2::@15->mode_sixsfred2::@6#1] -- pbuz1=pbuc1 
    lda #<PLANEB
    sta gfxb
    lda #>PLANEB
    sta gfxb+1
  //SEG727 [394] phi from mode_sixsfred2::@17 to mode_sixsfred2::@6 [phi:mode_sixsfred2::@17->mode_sixsfred2::@6]
  //SEG728 [394] phi (byte) mode_sixsfred2::by#4 = (byte) mode_sixsfred2::by#1 [phi:mode_sixsfred2::@17->mode_sixsfred2::@6#0] -- register_copy 
  //SEG729 [394] phi (byte*) mode_sixsfred2::gfxb#3 = (byte*) mode_sixsfred2::gfxb#1 [phi:mode_sixsfred2::@17->mode_sixsfred2::@6#1] -- register_copy 
  //SEG730 mode_sixsfred2::@6
  b6:
  //SEG731 [395] phi from mode_sixsfred2::@6 to mode_sixsfred2::@7 [phi:mode_sixsfred2::@6->mode_sixsfred2::@7]
  //SEG732 [395] phi (byte) mode_sixsfred2::bx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_sixsfred2::@6->mode_sixsfred2::@7#0] -- vbuxx=vbuc1 
    ldx #0
  //SEG733 [395] phi (byte*) mode_sixsfred2::gfxb#2 = (byte*) mode_sixsfred2::gfxb#3 [phi:mode_sixsfred2::@6->mode_sixsfred2::@7#1] -- register_copy 
  //SEG734 [395] phi from mode_sixsfred2::@7 to mode_sixsfred2::@7 [phi:mode_sixsfred2::@7->mode_sixsfred2::@7]
  //SEG735 [395] phi (byte) mode_sixsfred2::bx#2 = (byte) mode_sixsfred2::bx#1 [phi:mode_sixsfred2::@7->mode_sixsfred2::@7#0] -- register_copy 
  //SEG736 [395] phi (byte*) mode_sixsfred2::gfxb#2 = (byte*) mode_sixsfred2::gfxb#1 [phi:mode_sixsfred2::@7->mode_sixsfred2::@7#1] -- register_copy 
  //SEG737 mode_sixsfred2::@7
  b7:
  //SEG738 [396] *((byte*) mode_sixsfred2::gfxb#2) ← (byte/signed byte/word/signed word/dword/signed dword) 27 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#2 mode_sixsfred2::bx#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#2 mode_sixsfred2::bx#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #$1b
    ldy #0
    sta (gfxb),y
  //SEG739 [397] (byte*) mode_sixsfred2::gfxb#1 ← ++ (byte*) mode_sixsfred2::gfxb#2 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#1 mode_sixsfred2::bx#2 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#1 mode_sixsfred2::bx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc gfxb
    bne !+
    inc gfxb+1
  !:
  //SEG740 [398] (byte) mode_sixsfred2::bx#1 ← ++ (byte) mode_sixsfred2::bx#2 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#1 mode_sixsfred2::bx#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#1 mode_sixsfred2::bx#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG741 [399] if((byte) mode_sixsfred2::bx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_sixsfred2::@7 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#1 mode_sixsfred2::bx#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::by#4 mode_sixsfred2::gfxb#1 mode_sixsfred2::bx#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b7
  //SEG742 mode_sixsfred2::@17
  //SEG743 [400] (byte) mode_sixsfred2::by#1 ← ++ (byte) mode_sixsfred2::by#4 [ mode_sixsfred2::gfxb#1 mode_sixsfred2::by#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::gfxb#1 mode_sixsfred2::by#1 ] ) -- vbuz1=_inc_vbuz1 
    inc by
  //SEG744 [401] if((byte) mode_sixsfred2::by#1!=(byte/word/signed word/dword/signed dword) 200) goto mode_sixsfred2::@6 [ mode_sixsfred2::gfxb#1 mode_sixsfred2::by#1 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::gfxb#1 mode_sixsfred2::by#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda by
    cmp #$c8
    bne b6
  //SEG745 mode_sixsfred2::@8
  //SEG746 [402] if(true) goto mode_sixsfred2::@9 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- true_then_la1 
    jmp b9
  //SEG747 mode_sixsfred2::@return
  breturn:
  //SEG748 [403] return  [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] )
    rts
  //SEG749 [404] phi from mode_sixsfred2::@8 to mode_sixsfred2::@9 [phi:mode_sixsfred2::@8->mode_sixsfred2::@9]
  //SEG750 mode_sixsfred2::@9
  b9:
  //SEG751 [405] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_sixsfred2:84 [ keyboard_key_pressed::return#0 ] )
  //SEG752 [153] phi from mode_sixsfred2::@9 to keyboard_key_pressed [phi:mode_sixsfred2::@9->keyboard_key_pressed]
  //SEG753 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_sixsfred2::@9->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_SPACE
    jsr keyboard_key_pressed
  //SEG754 [406] (byte) keyboard_key_pressed::return#21 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#21 ] ( main:2::menu:9::mode_sixsfred2:84 [ keyboard_key_pressed::return#21 ] )
    // (byte) keyboard_key_pressed::return#21 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
  //SEG755 mode_sixsfred2::@24
  //SEG756 [407] (byte~) mode_sixsfred2::$26 ← (byte) keyboard_key_pressed::return#21 [ mode_sixsfred2::$26 ] ( main:2::menu:9::mode_sixsfred2:84 [ mode_sixsfred2::$26 ] )
    // (byte~) mode_sixsfred2::$26 = (byte) keyboard_key_pressed::return#21  // register copy reg byte a
  //SEG757 [408] if((byte~) mode_sixsfred2::$26==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_sixsfred2::@8 [ ] ( main:2::menu:9::mode_sixsfred2:84 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b9
    jmp breturn
    row_bitmask: .byte 0, $55, $aa, $ff
}
//SEG758 mode_hicolmcchar
mode_hicolmcchar: {
    .label SCREEN = $8000
    .label CHARSET = $9000
    .label COLORS = $8400
    .label _26 = 7
    .label col = 2
    .label ch = 5
    .label cy = 4
  //SEG759 [409] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_hicolmcchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #($ffffffff&CHARSET)/$10000
    sta DTV_GRAPHICS_VIC_BANK
  //SEG760 [410] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_hicolmcchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG761 [411] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_hicolmcchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_COLOR_BANK_HI
  //SEG762 [412] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_CONTROL_HIGHCOLOR_ON
    sta DTV_CONTROL
  //SEG763 [413] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3
    sta CIA2_PORT_A_DDR
  //SEG764 [414] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_hicolmcchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3^CHARSET/$4000
    sta CIA2_PORT_A
  //SEG765 [415] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG766 [416] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0|(const byte) VIC_MCM#0 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_CSEL|VIC_MCM
    sta VIC_CONTROL2
  //SEG767 [417] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_hicolmcchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_hicolmcchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #(SCREEN&$3fff)/$40|(CHARSET&$3fff)/$400
    sta VIC_MEMORY
  //SEG768 [418] phi from mode_hicolmcchar to mode_hicolmcchar::@1 [phi:mode_hicolmcchar->mode_hicolmcchar::@1]
  //SEG769 [418] phi (byte) mode_hicolmcchar::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolmcchar->mode_hicolmcchar::@1#0] -- vbuxx=vbuc1 
    ldx #0
  //SEG770 [418] phi from mode_hicolmcchar::@1 to mode_hicolmcchar::@1 [phi:mode_hicolmcchar::@1->mode_hicolmcchar::@1]
  //SEG771 [418] phi (byte) mode_hicolmcchar::i#2 = (byte) mode_hicolmcchar::i#1 [phi:mode_hicolmcchar::@1->mode_hicolmcchar::@1#0] -- register_copy 
  //SEG772 mode_hicolmcchar::@1
  b1:
  //SEG773 [419] *((const byte*) DTV_PALETTE#0 + (byte) mode_hicolmcchar::i#2) ← (byte) mode_hicolmcchar::i#2 [ mode_hicolmcchar::i#2 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::i#2 ] ) -- pbuc1_derefidx_vbuxx=vbuxx 
    txa
    sta DTV_PALETTE,x
  //SEG774 [420] (byte) mode_hicolmcchar::i#1 ← ++ (byte) mode_hicolmcchar::i#2 [ mode_hicolmcchar::i#1 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG775 [421] if((byte) mode_hicolmcchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_hicolmcchar::@1 [ mode_hicolmcchar::i#1 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne b1
  //SEG776 mode_hicolmcchar::@8
  //SEG777 [422] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG778 [423] *((const byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 80 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$50
    sta BGCOL1
  //SEG779 [424] *((const byte*) BGCOL2#0) ← (byte/signed byte/word/signed word/dword/signed dword) 84 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$54
    sta BGCOL2
  //SEG780 [425] *((const byte*) BGCOL3#0) ← (byte/signed byte/word/signed word/dword/signed dword) 88 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$58
    sta BGCOL3
  //SEG781 [426] phi from mode_hicolmcchar::@8 to mode_hicolmcchar::@2 [phi:mode_hicolmcchar::@8->mode_hicolmcchar::@2]
  //SEG782 [426] phi (byte*) mode_hicolmcchar::ch#3 = (const byte*) mode_hicolmcchar::SCREEN#0 [phi:mode_hicolmcchar::@8->mode_hicolmcchar::@2#0] -- pbuz1=pbuc1 
    lda #<SCREEN
    sta ch
    lda #>SCREEN
    sta ch+1
  //SEG783 [426] phi (byte*) mode_hicolmcchar::col#3 = (const byte*) mode_hicolmcchar::COLORS#0 [phi:mode_hicolmcchar::@8->mode_hicolmcchar::@2#1] -- pbuz1=pbuc1 
    lda #<COLORS
    sta col
    lda #>COLORS
    sta col+1
  //SEG784 [426] phi (byte) mode_hicolmcchar::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolmcchar::@8->mode_hicolmcchar::@2#2] -- vbuz1=vbuc1 
    lda #0
    sta cy
  //SEG785 [426] phi from mode_hicolmcchar::@9 to mode_hicolmcchar::@2 [phi:mode_hicolmcchar::@9->mode_hicolmcchar::@2]
  //SEG786 [426] phi (byte*) mode_hicolmcchar::ch#3 = (byte*) mode_hicolmcchar::ch#1 [phi:mode_hicolmcchar::@9->mode_hicolmcchar::@2#0] -- register_copy 
  //SEG787 [426] phi (byte*) mode_hicolmcchar::col#3 = (byte*) mode_hicolmcchar::col#1 [phi:mode_hicolmcchar::@9->mode_hicolmcchar::@2#1] -- register_copy 
  //SEG788 [426] phi (byte) mode_hicolmcchar::cy#4 = (byte) mode_hicolmcchar::cy#1 [phi:mode_hicolmcchar::@9->mode_hicolmcchar::@2#2] -- register_copy 
  //SEG789 mode_hicolmcchar::@2
  b2:
  //SEG790 [427] phi from mode_hicolmcchar::@2 to mode_hicolmcchar::@3 [phi:mode_hicolmcchar::@2->mode_hicolmcchar::@3]
  //SEG791 [427] phi (byte*) mode_hicolmcchar::ch#2 = (byte*) mode_hicolmcchar::ch#3 [phi:mode_hicolmcchar::@2->mode_hicolmcchar::@3#0] -- register_copy 
  //SEG792 [427] phi (byte*) mode_hicolmcchar::col#2 = (byte*) mode_hicolmcchar::col#3 [phi:mode_hicolmcchar::@2->mode_hicolmcchar::@3#1] -- register_copy 
  //SEG793 [427] phi (byte) mode_hicolmcchar::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolmcchar::@2->mode_hicolmcchar::@3#2] -- vbuxx=vbuc1 
    ldx #0
  //SEG794 [427] phi from mode_hicolmcchar::@3 to mode_hicolmcchar::@3 [phi:mode_hicolmcchar::@3->mode_hicolmcchar::@3]
  //SEG795 [427] phi (byte*) mode_hicolmcchar::ch#2 = (byte*) mode_hicolmcchar::ch#1 [phi:mode_hicolmcchar::@3->mode_hicolmcchar::@3#0] -- register_copy 
  //SEG796 [427] phi (byte*) mode_hicolmcchar::col#2 = (byte*) mode_hicolmcchar::col#1 [phi:mode_hicolmcchar::@3->mode_hicolmcchar::@3#1] -- register_copy 
  //SEG797 [427] phi (byte) mode_hicolmcchar::cx#2 = (byte) mode_hicolmcchar::cx#1 [phi:mode_hicolmcchar::@3->mode_hicolmcchar::@3#2] -- register_copy 
  //SEG798 mode_hicolmcchar::@3
  b3:
  //SEG799 [428] (byte~) mode_hicolmcchar::$25 ← (byte) mode_hicolmcchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$25 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$25 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #$f
    and cy
  //SEG800 [429] (byte~) mode_hicolmcchar::$26 ← (byte~) mode_hicolmcchar::$25 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$26 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$26 ] ) -- vbuz1=vbuaa_rol_4 
    asl
    asl
    asl
    asl
    sta _26
  //SEG801 [430] (byte~) mode_hicolmcchar::$27 ← (byte) mode_hicolmcchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$26 mode_hicolmcchar::$27 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::$26 mode_hicolmcchar::$27 ] ) -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #$f
  //SEG802 [431] (byte) mode_hicolmcchar::v#0 ← (byte~) mode_hicolmcchar::$26 | (byte~) mode_hicolmcchar::$27 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] ) -- vbuaa=vbuz1_bor_vbuaa 
    ora _26
  //SEG803 [432] *((byte*) mode_hicolmcchar::col#2) ← (byte) mode_hicolmcchar::v#0 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::cx#2 mode_hicolmcchar::col#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (col),y
  //SEG804 [433] (byte*) mode_hicolmcchar::col#1 ← ++ (byte*) mode_hicolmcchar::col#2 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::cx#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::cx#2 mode_hicolmcchar::ch#2 mode_hicolmcchar::v#0 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG805 [434] *((byte*) mode_hicolmcchar::ch#2) ← (byte) mode_hicolmcchar::v#0 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::cx#2 mode_hicolmcchar::ch#2 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::cx#2 mode_hicolmcchar::ch#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (ch),y
  //SEG806 [435] (byte*) mode_hicolmcchar::ch#1 ← ++ (byte*) mode_hicolmcchar::ch#2 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 mode_hicolmcchar::cx#2 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 mode_hicolmcchar::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc ch
    bne !+
    inc ch+1
  !:
  //SEG807 [436] (byte) mode_hicolmcchar::cx#1 ← ++ (byte) mode_hicolmcchar::cx#2 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 mode_hicolmcchar::cx#1 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 mode_hicolmcchar::cx#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG808 [437] if((byte) mode_hicolmcchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_hicolmcchar::@3 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 mode_hicolmcchar::cx#1 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#4 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 mode_hicolmcchar::cx#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b3
  //SEG809 mode_hicolmcchar::@9
  //SEG810 [438] (byte) mode_hicolmcchar::cy#1 ← ++ (byte) mode_hicolmcchar::cy#4 [ mode_hicolmcchar::cy#1 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#1 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG811 [439] if((byte) mode_hicolmcchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_hicolmcchar::@2 [ mode_hicolmcchar::cy#1 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::cy#1 mode_hicolmcchar::col#1 mode_hicolmcchar::ch#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2
  //SEG812 mode_hicolmcchar::@4
  //SEG813 [440] if(true) goto mode_hicolmcchar::@5 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- true_then_la1 
    jmp b5
  //SEG814 mode_hicolmcchar::@return
  breturn:
  //SEG815 [441] return  [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] )
    rts
  //SEG816 [442] phi from mode_hicolmcchar::@4 to mode_hicolmcchar::@5 [phi:mode_hicolmcchar::@4->mode_hicolmcchar::@5]
  //SEG817 mode_hicolmcchar::@5
  b5:
  //SEG818 [443] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_hicolmcchar:77 [ keyboard_key_pressed::return#0 ] )
  //SEG819 [153] phi from mode_hicolmcchar::@5 to keyboard_key_pressed [phi:mode_hicolmcchar::@5->keyboard_key_pressed]
  //SEG820 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_hicolmcchar::@5->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_SPACE
    jsr keyboard_key_pressed
  //SEG821 [444] (byte) keyboard_key_pressed::return#18 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#18 ] ( main:2::menu:9::mode_hicolmcchar:77 [ keyboard_key_pressed::return#18 ] )
    // (byte) keyboard_key_pressed::return#18 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
  //SEG822 mode_hicolmcchar::@16
  //SEG823 [445] (byte~) mode_hicolmcchar::$31 ← (byte) keyboard_key_pressed::return#18 [ mode_hicolmcchar::$31 ] ( main:2::menu:9::mode_hicolmcchar:77 [ mode_hicolmcchar::$31 ] )
    // (byte~) mode_hicolmcchar::$31 = (byte) keyboard_key_pressed::return#18  // register copy reg byte a
  //SEG824 [446] if((byte~) mode_hicolmcchar::$31==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_hicolmcchar::@4 [ ] ( main:2::menu:9::mode_hicolmcchar:77 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b5
    jmp breturn
}
//SEG825 mode_hicolecmchar
mode_hicolecmchar: {
    .label SCREEN = $8000
    .label CHARSET = $9000
    .label COLORS = $8400
    .label _26 = 7
    .label col = 2
    .label ch = 5
    .label cy = 4
  //SEG826 [447] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_hicolecmchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #($ffffffff&CHARSET)/$10000
    sta DTV_GRAPHICS_VIC_BANK
  //SEG827 [448] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_hicolecmchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG828 [449] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_hicolecmchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_COLOR_BANK_HI
  //SEG829 [450] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_CONTROL_HIGHCOLOR_ON
    sta DTV_CONTROL
  //SEG830 [451] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3
    sta CIA2_PORT_A_DDR
  //SEG831 [452] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_hicolecmchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3^CHARSET/$4000
    sta CIA2_PORT_A
  //SEG832 [453] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(const byte) VIC_ECM#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_DEN|VIC_RSEL|VIC_ECM|3
    sta VIC_CONTROL
  //SEG833 [454] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_CSEL
    sta VIC_CONTROL2
  //SEG834 [455] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_hicolecmchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_hicolecmchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #(SCREEN&$3fff)/$40|(CHARSET&$3fff)/$400
    sta VIC_MEMORY
  //SEG835 [456] phi from mode_hicolecmchar to mode_hicolecmchar::@1 [phi:mode_hicolecmchar->mode_hicolecmchar::@1]
  //SEG836 [456] phi (byte) mode_hicolecmchar::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolecmchar->mode_hicolecmchar::@1#0] -- vbuxx=vbuc1 
    ldx #0
  //SEG837 [456] phi from mode_hicolecmchar::@1 to mode_hicolecmchar::@1 [phi:mode_hicolecmchar::@1->mode_hicolecmchar::@1]
  //SEG838 [456] phi (byte) mode_hicolecmchar::i#2 = (byte) mode_hicolecmchar::i#1 [phi:mode_hicolecmchar::@1->mode_hicolecmchar::@1#0] -- register_copy 
  //SEG839 mode_hicolecmchar::@1
  b1:
  //SEG840 [457] *((const byte*) DTV_PALETTE#0 + (byte) mode_hicolecmchar::i#2) ← (byte) mode_hicolecmchar::i#2 [ mode_hicolecmchar::i#2 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::i#2 ] ) -- pbuc1_derefidx_vbuxx=vbuxx 
    txa
    sta DTV_PALETTE,x
  //SEG841 [458] (byte) mode_hicolecmchar::i#1 ← ++ (byte) mode_hicolecmchar::i#2 [ mode_hicolecmchar::i#1 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG842 [459] if((byte) mode_hicolecmchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_hicolecmchar::@1 [ mode_hicolecmchar::i#1 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne b1
  //SEG843 mode_hicolecmchar::@8
  //SEG844 [460] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG845 [461] *((const byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 80 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$50
    sta BGCOL1
  //SEG846 [462] *((const byte*) BGCOL2#0) ← (byte/signed byte/word/signed word/dword/signed dword) 84 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$54
    sta BGCOL2
  //SEG847 [463] *((const byte*) BGCOL3#0) ← (byte/signed byte/word/signed word/dword/signed dword) 88 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$58
    sta BGCOL3
  //SEG848 [464] *((const byte*) BGCOL4#0) ← (byte/signed byte/word/signed word/dword/signed dword) 92 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$5c
    sta BGCOL4
  //SEG849 [465] phi from mode_hicolecmchar::@8 to mode_hicolecmchar::@2 [phi:mode_hicolecmchar::@8->mode_hicolecmchar::@2]
  //SEG850 [465] phi (byte*) mode_hicolecmchar::ch#3 = (const byte*) mode_hicolecmchar::SCREEN#0 [phi:mode_hicolecmchar::@8->mode_hicolecmchar::@2#0] -- pbuz1=pbuc1 
    lda #<SCREEN
    sta ch
    lda #>SCREEN
    sta ch+1
  //SEG851 [465] phi (byte*) mode_hicolecmchar::col#3 = (const byte*) mode_hicolecmchar::COLORS#0 [phi:mode_hicolecmchar::@8->mode_hicolecmchar::@2#1] -- pbuz1=pbuc1 
    lda #<COLORS
    sta col
    lda #>COLORS
    sta col+1
  //SEG852 [465] phi (byte) mode_hicolecmchar::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolecmchar::@8->mode_hicolecmchar::@2#2] -- vbuz1=vbuc1 
    lda #0
    sta cy
  //SEG853 [465] phi from mode_hicolecmchar::@9 to mode_hicolecmchar::@2 [phi:mode_hicolecmchar::@9->mode_hicolecmchar::@2]
  //SEG854 [465] phi (byte*) mode_hicolecmchar::ch#3 = (byte*) mode_hicolecmchar::ch#1 [phi:mode_hicolecmchar::@9->mode_hicolecmchar::@2#0] -- register_copy 
  //SEG855 [465] phi (byte*) mode_hicolecmchar::col#3 = (byte*) mode_hicolecmchar::col#1 [phi:mode_hicolecmchar::@9->mode_hicolecmchar::@2#1] -- register_copy 
  //SEG856 [465] phi (byte) mode_hicolecmchar::cy#4 = (byte) mode_hicolecmchar::cy#1 [phi:mode_hicolecmchar::@9->mode_hicolecmchar::@2#2] -- register_copy 
  //SEG857 mode_hicolecmchar::@2
  b2:
  //SEG858 [466] phi from mode_hicolecmchar::@2 to mode_hicolecmchar::@3 [phi:mode_hicolecmchar::@2->mode_hicolecmchar::@3]
  //SEG859 [466] phi (byte*) mode_hicolecmchar::ch#2 = (byte*) mode_hicolecmchar::ch#3 [phi:mode_hicolecmchar::@2->mode_hicolecmchar::@3#0] -- register_copy 
  //SEG860 [466] phi (byte*) mode_hicolecmchar::col#2 = (byte*) mode_hicolecmchar::col#3 [phi:mode_hicolecmchar::@2->mode_hicolecmchar::@3#1] -- register_copy 
  //SEG861 [466] phi (byte) mode_hicolecmchar::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolecmchar::@2->mode_hicolecmchar::@3#2] -- vbuxx=vbuc1 
    ldx #0
  //SEG862 [466] phi from mode_hicolecmchar::@3 to mode_hicolecmchar::@3 [phi:mode_hicolecmchar::@3->mode_hicolecmchar::@3]
  //SEG863 [466] phi (byte*) mode_hicolecmchar::ch#2 = (byte*) mode_hicolecmchar::ch#1 [phi:mode_hicolecmchar::@3->mode_hicolecmchar::@3#0] -- register_copy 
  //SEG864 [466] phi (byte*) mode_hicolecmchar::col#2 = (byte*) mode_hicolecmchar::col#1 [phi:mode_hicolecmchar::@3->mode_hicolecmchar::@3#1] -- register_copy 
  //SEG865 [466] phi (byte) mode_hicolecmchar::cx#2 = (byte) mode_hicolecmchar::cx#1 [phi:mode_hicolecmchar::@3->mode_hicolecmchar::@3#2] -- register_copy 
  //SEG866 mode_hicolecmchar::@3
  b3:
  //SEG867 [467] (byte~) mode_hicolecmchar::$25 ← (byte) mode_hicolecmchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$25 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$25 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #$f
    and cy
  //SEG868 [468] (byte~) mode_hicolecmchar::$26 ← (byte~) mode_hicolecmchar::$25 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$26 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$26 ] ) -- vbuz1=vbuaa_rol_4 
    asl
    asl
    asl
    asl
    sta _26
  //SEG869 [469] (byte~) mode_hicolecmchar::$27 ← (byte) mode_hicolecmchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$26 mode_hicolecmchar::$27 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::$26 mode_hicolecmchar::$27 ] ) -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #$f
  //SEG870 [470] (byte) mode_hicolecmchar::v#0 ← (byte~) mode_hicolecmchar::$26 | (byte~) mode_hicolecmchar::$27 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] ) -- vbuaa=vbuz1_bor_vbuaa 
    ora _26
  //SEG871 [471] *((byte*) mode_hicolecmchar::col#2) ← (byte) mode_hicolecmchar::v#0 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::cx#2 mode_hicolecmchar::col#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (col),y
  //SEG872 [472] (byte*) mode_hicolecmchar::col#1 ← ++ (byte*) mode_hicolecmchar::col#2 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::cx#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::cx#2 mode_hicolecmchar::ch#2 mode_hicolecmchar::v#0 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG873 [473] *((byte*) mode_hicolecmchar::ch#2) ← (byte) mode_hicolecmchar::v#0 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::cx#2 mode_hicolecmchar::ch#2 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::cx#2 mode_hicolecmchar::ch#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (ch),y
  //SEG874 [474] (byte*) mode_hicolecmchar::ch#1 ← ++ (byte*) mode_hicolecmchar::ch#2 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 mode_hicolecmchar::cx#2 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 mode_hicolecmchar::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc ch
    bne !+
    inc ch+1
  !:
  //SEG875 [475] (byte) mode_hicolecmchar::cx#1 ← ++ (byte) mode_hicolecmchar::cx#2 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 mode_hicolecmchar::cx#1 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 mode_hicolecmchar::cx#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG876 [476] if((byte) mode_hicolecmchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_hicolecmchar::@3 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 mode_hicolecmchar::cx#1 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#4 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 mode_hicolecmchar::cx#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b3
  //SEG877 mode_hicolecmchar::@9
  //SEG878 [477] (byte) mode_hicolecmchar::cy#1 ← ++ (byte) mode_hicolecmchar::cy#4 [ mode_hicolecmchar::cy#1 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#1 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG879 [478] if((byte) mode_hicolecmchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_hicolecmchar::@2 [ mode_hicolecmchar::cy#1 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::cy#1 mode_hicolecmchar::col#1 mode_hicolecmchar::ch#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2
  //SEG880 mode_hicolecmchar::@4
  //SEG881 [479] if(true) goto mode_hicolecmchar::@5 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- true_then_la1 
    jmp b5
  //SEG882 mode_hicolecmchar::@return
  breturn:
  //SEG883 [480] return  [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] )
    rts
  //SEG884 [481] phi from mode_hicolecmchar::@4 to mode_hicolecmchar::@5 [phi:mode_hicolecmchar::@4->mode_hicolecmchar::@5]
  //SEG885 mode_hicolecmchar::@5
  b5:
  //SEG886 [482] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_hicolecmchar:70 [ keyboard_key_pressed::return#0 ] )
  //SEG887 [153] phi from mode_hicolecmchar::@5 to keyboard_key_pressed [phi:mode_hicolecmchar::@5->keyboard_key_pressed]
  //SEG888 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_hicolecmchar::@5->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_SPACE
    jsr keyboard_key_pressed
  //SEG889 [483] (byte) keyboard_key_pressed::return#17 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#17 ] ( main:2::menu:9::mode_hicolecmchar:70 [ keyboard_key_pressed::return#17 ] )
    // (byte) keyboard_key_pressed::return#17 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
  //SEG890 mode_hicolecmchar::@16
  //SEG891 [484] (byte~) mode_hicolecmchar::$31 ← (byte) keyboard_key_pressed::return#17 [ mode_hicolecmchar::$31 ] ( main:2::menu:9::mode_hicolecmchar:70 [ mode_hicolecmchar::$31 ] )
    // (byte~) mode_hicolecmchar::$31 = (byte) keyboard_key_pressed::return#17  // register copy reg byte a
  //SEG892 [485] if((byte~) mode_hicolecmchar::$31==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_hicolecmchar::@4 [ ] ( main:2::menu:9::mode_hicolecmchar:70 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b5
    jmp breturn
}
//SEG893 mode_hicolstdchar
mode_hicolstdchar: {
    .label SCREEN = $8000
    .label CHARSET = $9000
    .label COLORS = $8400
    .label _25 = 7
    .label col = 2
    .label ch = 5
    .label cy = 4
  //SEG894 [486] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_hicolstdchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #($ffffffff&CHARSET)/$10000
    sta DTV_GRAPHICS_VIC_BANK
  //SEG895 [487] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_hicolstdchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG896 [488] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_hicolstdchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_COLOR_BANK_HI
  //SEG897 [489] *((const byte*) DTV_CONTROL#0) ← (const byte) DTV_CONTROL_HIGHCOLOR_ON#0 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #DTV_CONTROL_HIGHCOLOR_ON
    sta DTV_CONTROL
  //SEG898 [490] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3
    sta CIA2_PORT_A_DDR
  //SEG899 [491] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_hicolstdchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3^CHARSET/$4000
    sta CIA2_PORT_A
  //SEG900 [492] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG901 [493] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_CSEL
    sta VIC_CONTROL2
  //SEG902 [494] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_hicolstdchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_hicolstdchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #(SCREEN&$3fff)/$40|(CHARSET&$3fff)/$400
    sta VIC_MEMORY
  //SEG903 [495] phi from mode_hicolstdchar to mode_hicolstdchar::@1 [phi:mode_hicolstdchar->mode_hicolstdchar::@1]
  //SEG904 [495] phi (byte) mode_hicolstdchar::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolstdchar->mode_hicolstdchar::@1#0] -- vbuxx=vbuc1 
    ldx #0
  //SEG905 [495] phi from mode_hicolstdchar::@1 to mode_hicolstdchar::@1 [phi:mode_hicolstdchar::@1->mode_hicolstdchar::@1]
  //SEG906 [495] phi (byte) mode_hicolstdchar::i#2 = (byte) mode_hicolstdchar::i#1 [phi:mode_hicolstdchar::@1->mode_hicolstdchar::@1#0] -- register_copy 
  //SEG907 mode_hicolstdchar::@1
  b1:
  //SEG908 [496] *((const byte*) DTV_PALETTE#0 + (byte) mode_hicolstdchar::i#2) ← (byte) mode_hicolstdchar::i#2 [ mode_hicolstdchar::i#2 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::i#2 ] ) -- pbuc1_derefidx_vbuxx=vbuxx 
    txa
    sta DTV_PALETTE,x
  //SEG909 [497] (byte) mode_hicolstdchar::i#1 ← ++ (byte) mode_hicolstdchar::i#2 [ mode_hicolstdchar::i#1 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG910 [498] if((byte) mode_hicolstdchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_hicolstdchar::@1 [ mode_hicolstdchar::i#1 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne b1
  //SEG911 mode_hicolstdchar::@8
  //SEG912 [499] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BGCOL
  //SEG913 [500] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- _deref_pbuc1=vbuc2 
    sta BORDERCOL
  //SEG914 [501] phi from mode_hicolstdchar::@8 to mode_hicolstdchar::@2 [phi:mode_hicolstdchar::@8->mode_hicolstdchar::@2]
  //SEG915 [501] phi (byte*) mode_hicolstdchar::ch#3 = (const byte*) mode_hicolstdchar::SCREEN#0 [phi:mode_hicolstdchar::@8->mode_hicolstdchar::@2#0] -- pbuz1=pbuc1 
    lda #<SCREEN
    sta ch
    lda #>SCREEN
    sta ch+1
  //SEG916 [501] phi (byte*) mode_hicolstdchar::col#3 = (const byte*) mode_hicolstdchar::COLORS#0 [phi:mode_hicolstdchar::@8->mode_hicolstdchar::@2#1] -- pbuz1=pbuc1 
    lda #<COLORS
    sta col
    lda #>COLORS
    sta col+1
  //SEG917 [501] phi (byte) mode_hicolstdchar::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolstdchar::@8->mode_hicolstdchar::@2#2] -- vbuz1=vbuc1 
    lda #0
    sta cy
  //SEG918 [501] phi from mode_hicolstdchar::@9 to mode_hicolstdchar::@2 [phi:mode_hicolstdchar::@9->mode_hicolstdchar::@2]
  //SEG919 [501] phi (byte*) mode_hicolstdchar::ch#3 = (byte*) mode_hicolstdchar::ch#1 [phi:mode_hicolstdchar::@9->mode_hicolstdchar::@2#0] -- register_copy 
  //SEG920 [501] phi (byte*) mode_hicolstdchar::col#3 = (byte*) mode_hicolstdchar::col#1 [phi:mode_hicolstdchar::@9->mode_hicolstdchar::@2#1] -- register_copy 
  //SEG921 [501] phi (byte) mode_hicolstdchar::cy#4 = (byte) mode_hicolstdchar::cy#1 [phi:mode_hicolstdchar::@9->mode_hicolstdchar::@2#2] -- register_copy 
  //SEG922 mode_hicolstdchar::@2
  b2:
  //SEG923 [502] phi from mode_hicolstdchar::@2 to mode_hicolstdchar::@3 [phi:mode_hicolstdchar::@2->mode_hicolstdchar::@3]
  //SEG924 [502] phi (byte*) mode_hicolstdchar::ch#2 = (byte*) mode_hicolstdchar::ch#3 [phi:mode_hicolstdchar::@2->mode_hicolstdchar::@3#0] -- register_copy 
  //SEG925 [502] phi (byte*) mode_hicolstdchar::col#2 = (byte*) mode_hicolstdchar::col#3 [phi:mode_hicolstdchar::@2->mode_hicolstdchar::@3#1] -- register_copy 
  //SEG926 [502] phi (byte) mode_hicolstdchar::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_hicolstdchar::@2->mode_hicolstdchar::@3#2] -- vbuxx=vbuc1 
    ldx #0
  //SEG927 [502] phi from mode_hicolstdchar::@3 to mode_hicolstdchar::@3 [phi:mode_hicolstdchar::@3->mode_hicolstdchar::@3]
  //SEG928 [502] phi (byte*) mode_hicolstdchar::ch#2 = (byte*) mode_hicolstdchar::ch#1 [phi:mode_hicolstdchar::@3->mode_hicolstdchar::@3#0] -- register_copy 
  //SEG929 [502] phi (byte*) mode_hicolstdchar::col#2 = (byte*) mode_hicolstdchar::col#1 [phi:mode_hicolstdchar::@3->mode_hicolstdchar::@3#1] -- register_copy 
  //SEG930 [502] phi (byte) mode_hicolstdchar::cx#2 = (byte) mode_hicolstdchar::cx#1 [phi:mode_hicolstdchar::@3->mode_hicolstdchar::@3#2] -- register_copy 
  //SEG931 mode_hicolstdchar::@3
  b3:
  //SEG932 [503] (byte~) mode_hicolstdchar::$24 ← (byte) mode_hicolstdchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$24 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$24 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #$f
    and cy
  //SEG933 [504] (byte~) mode_hicolstdchar::$25 ← (byte~) mode_hicolstdchar::$24 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$25 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$25 ] ) -- vbuz1=vbuaa_rol_4 
    asl
    asl
    asl
    asl
    sta _25
  //SEG934 [505] (byte~) mode_hicolstdchar::$26 ← (byte) mode_hicolstdchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$25 mode_hicolstdchar::$26 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::$25 mode_hicolstdchar::$26 ] ) -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #$f
  //SEG935 [506] (byte) mode_hicolstdchar::v#0 ← (byte~) mode_hicolstdchar::$25 | (byte~) mode_hicolstdchar::$26 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] ) -- vbuaa=vbuz1_bor_vbuaa 
    ora _25
  //SEG936 [507] *((byte*) mode_hicolstdchar::col#2) ← (byte) mode_hicolstdchar::v#0 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::cx#2 mode_hicolstdchar::col#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (col),y
  //SEG937 [508] (byte*) mode_hicolstdchar::col#1 ← ++ (byte*) mode_hicolstdchar::col#2 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::cx#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::cx#2 mode_hicolstdchar::ch#2 mode_hicolstdchar::v#0 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG938 [509] *((byte*) mode_hicolstdchar::ch#2) ← (byte) mode_hicolstdchar::v#0 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::cx#2 mode_hicolstdchar::ch#2 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::cx#2 mode_hicolstdchar::ch#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (ch),y
  //SEG939 [510] (byte*) mode_hicolstdchar::ch#1 ← ++ (byte*) mode_hicolstdchar::ch#2 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 mode_hicolstdchar::cx#2 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 mode_hicolstdchar::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc ch
    bne !+
    inc ch+1
  !:
  //SEG940 [511] (byte) mode_hicolstdchar::cx#1 ← ++ (byte) mode_hicolstdchar::cx#2 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 mode_hicolstdchar::cx#1 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 mode_hicolstdchar::cx#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG941 [512] if((byte) mode_hicolstdchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_hicolstdchar::@3 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 mode_hicolstdchar::cx#1 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#4 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 mode_hicolstdchar::cx#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b3
  //SEG942 mode_hicolstdchar::@9
  //SEG943 [513] (byte) mode_hicolstdchar::cy#1 ← ++ (byte) mode_hicolstdchar::cy#4 [ mode_hicolstdchar::cy#1 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#1 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG944 [514] if((byte) mode_hicolstdchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_hicolstdchar::@2 [ mode_hicolstdchar::cy#1 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::cy#1 mode_hicolstdchar::col#1 mode_hicolstdchar::ch#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2
  //SEG945 mode_hicolstdchar::@4
  //SEG946 [515] if(true) goto mode_hicolstdchar::@5 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- true_then_la1 
    jmp b5
  //SEG947 mode_hicolstdchar::@return
  breturn:
  //SEG948 [516] return  [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] )
    rts
  //SEG949 [517] phi from mode_hicolstdchar::@4 to mode_hicolstdchar::@5 [phi:mode_hicolstdchar::@4->mode_hicolstdchar::@5]
  //SEG950 mode_hicolstdchar::@5
  b5:
  //SEG951 [518] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_hicolstdchar:63 [ keyboard_key_pressed::return#0 ] )
  //SEG952 [153] phi from mode_hicolstdchar::@5 to keyboard_key_pressed [phi:mode_hicolstdchar::@5->keyboard_key_pressed]
  //SEG953 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_hicolstdchar::@5->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_SPACE
    jsr keyboard_key_pressed
  //SEG954 [519] (byte) keyboard_key_pressed::return#16 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#16 ] ( main:2::menu:9::mode_hicolstdchar:63 [ keyboard_key_pressed::return#16 ] )
    // (byte) keyboard_key_pressed::return#16 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
  //SEG955 mode_hicolstdchar::@16
  //SEG956 [520] (byte~) mode_hicolstdchar::$30 ← (byte) keyboard_key_pressed::return#16 [ mode_hicolstdchar::$30 ] ( main:2::menu:9::mode_hicolstdchar:63 [ mode_hicolstdchar::$30 ] )
    // (byte~) mode_hicolstdchar::$30 = (byte) keyboard_key_pressed::return#16  // register copy reg byte a
  //SEG957 [521] if((byte~) mode_hicolstdchar::$30==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_hicolstdchar::@4 [ ] ( main:2::menu:9::mode_hicolstdchar:63 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b5
    jmp breturn
}
//SEG958 mode_mcchar
mode_mcchar: {
    .label SCREEN = $8000
    .label CHARSET = $9000
    .label COLORS = $8400
    .label _28 = 7
    .label col = 2
    .label ch = 5
    .label cy = 4
  //SEG959 [522] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_mcchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #($ffffffff&CHARSET)/$10000
    sta DTV_GRAPHICS_VIC_BANK
  //SEG960 [523] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_mcchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG961 [524] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_mcchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_COLOR_BANK_HI
  //SEG962 [525] *((const byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    sta DTV_CONTROL
  //SEG963 [526] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3
    sta CIA2_PORT_A_DDR
  //SEG964 [527] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_mcchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3^CHARSET/$4000
    sta CIA2_PORT_A
  //SEG965 [528] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG966 [529] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0|(const byte) VIC_MCM#0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_CSEL|VIC_MCM
    sta VIC_CONTROL2
  //SEG967 [530] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_mcchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_mcchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #(SCREEN&$3fff)/$40|(CHARSET&$3fff)/$400
    sta VIC_MEMORY
  //SEG968 [531] phi from mode_mcchar to mode_mcchar::@1 [phi:mode_mcchar->mode_mcchar::@1]
  //SEG969 [531] phi (byte) mode_mcchar::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_mcchar->mode_mcchar::@1#0] -- vbuxx=vbuc1 
    ldx #0
  //SEG970 [531] phi from mode_mcchar::@1 to mode_mcchar::@1 [phi:mode_mcchar::@1->mode_mcchar::@1]
  //SEG971 [531] phi (byte) mode_mcchar::i#2 = (byte) mode_mcchar::i#1 [phi:mode_mcchar::@1->mode_mcchar::@1#0] -- register_copy 
  //SEG972 mode_mcchar::@1
  b1:
  //SEG973 [532] *((const byte*) DTV_PALETTE#0 + (byte) mode_mcchar::i#2) ← *((const byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) mode_mcchar::i#2) [ mode_mcchar::i#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::i#2 ] ) -- pbuc1_derefidx_vbuxx=pbuc2_derefidx_vbuxx 
    lda DTV_PALETTE_DEFAULT,x
    sta DTV_PALETTE,x
  //SEG974 [533] (byte) mode_mcchar::i#1 ← ++ (byte) mode_mcchar::i#2 [ mode_mcchar::i#1 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG975 [534] if((byte) mode_mcchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_mcchar::@1 [ mode_mcchar::i#1 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne b1
  //SEG976 mode_mcchar::@8
  //SEG977 [535] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG978 [536] *((const byte*) BGCOL1#0) ← (const byte) BLACK#0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #BLACK
    sta BGCOL1
  //SEG979 [537] *((const byte*) BGCOL2#0) ← (const byte) GREEN#0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #GREEN
    sta BGCOL2
  //SEG980 [538] *((const byte*) BGCOL3#0) ← (const byte) BLUE#0 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #BLUE
    sta BGCOL3
  //SEG981 [539] phi from mode_mcchar::@8 to mode_mcchar::@2 [phi:mode_mcchar::@8->mode_mcchar::@2]
  //SEG982 [539] phi (byte*) mode_mcchar::ch#3 = (const byte*) mode_mcchar::SCREEN#0 [phi:mode_mcchar::@8->mode_mcchar::@2#0] -- pbuz1=pbuc1 
    lda #<SCREEN
    sta ch
    lda #>SCREEN
    sta ch+1
  //SEG983 [539] phi (byte*) mode_mcchar::col#3 = (const byte*) mode_mcchar::COLORS#0 [phi:mode_mcchar::@8->mode_mcchar::@2#1] -- pbuz1=pbuc1 
    lda #<COLORS
    sta col
    lda #>COLORS
    sta col+1
  //SEG984 [539] phi (byte) mode_mcchar::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_mcchar::@8->mode_mcchar::@2#2] -- vbuz1=vbuc1 
    lda #0
    sta cy
  //SEG985 [539] phi from mode_mcchar::@9 to mode_mcchar::@2 [phi:mode_mcchar::@9->mode_mcchar::@2]
  //SEG986 [539] phi (byte*) mode_mcchar::ch#3 = (byte*) mode_mcchar::ch#1 [phi:mode_mcchar::@9->mode_mcchar::@2#0] -- register_copy 
  //SEG987 [539] phi (byte*) mode_mcchar::col#3 = (byte*) mode_mcchar::col#1 [phi:mode_mcchar::@9->mode_mcchar::@2#1] -- register_copy 
  //SEG988 [539] phi (byte) mode_mcchar::cy#4 = (byte) mode_mcchar::cy#1 [phi:mode_mcchar::@9->mode_mcchar::@2#2] -- register_copy 
  //SEG989 mode_mcchar::@2
  b2:
  //SEG990 [540] phi from mode_mcchar::@2 to mode_mcchar::@3 [phi:mode_mcchar::@2->mode_mcchar::@3]
  //SEG991 [540] phi (byte*) mode_mcchar::ch#2 = (byte*) mode_mcchar::ch#3 [phi:mode_mcchar::@2->mode_mcchar::@3#0] -- register_copy 
  //SEG992 [540] phi (byte*) mode_mcchar::col#2 = (byte*) mode_mcchar::col#3 [phi:mode_mcchar::@2->mode_mcchar::@3#1] -- register_copy 
  //SEG993 [540] phi (byte) mode_mcchar::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_mcchar::@2->mode_mcchar::@3#2] -- vbuxx=vbuc1 
    ldx #0
  //SEG994 [540] phi from mode_mcchar::@3 to mode_mcchar::@3 [phi:mode_mcchar::@3->mode_mcchar::@3]
  //SEG995 [540] phi (byte*) mode_mcchar::ch#2 = (byte*) mode_mcchar::ch#1 [phi:mode_mcchar::@3->mode_mcchar::@3#0] -- register_copy 
  //SEG996 [540] phi (byte*) mode_mcchar::col#2 = (byte*) mode_mcchar::col#1 [phi:mode_mcchar::@3->mode_mcchar::@3#1] -- register_copy 
  //SEG997 [540] phi (byte) mode_mcchar::cx#2 = (byte) mode_mcchar::cx#1 [phi:mode_mcchar::@3->mode_mcchar::@3#2] -- register_copy 
  //SEG998 mode_mcchar::@3
  b3:
  //SEG999 [541] (byte~) mode_mcchar::$25 ← (byte) mode_mcchar::cx#2 + (byte) mode_mcchar::cy#4 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 mode_mcchar::$25 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 mode_mcchar::$25 ] ) -- vbuaa=vbuxx_plus_vbuz1 
    txa
    clc
    adc cy
  //SEG1000 [542] (byte~) mode_mcchar::$26 ← (byte~) mode_mcchar::$25 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 mode_mcchar::$26 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 mode_mcchar::$26 ] ) -- vbuaa=vbuaa_band_vbuc1 
    and #$f
  //SEG1001 [543] *((byte*) mode_mcchar::col#2) ← (byte~) mode_mcchar::$26 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::cx#2 mode_mcchar::col#2 mode_mcchar::ch#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (col),y
  //SEG1002 [544] (byte*) mode_mcchar::col#1 ← ++ (byte*) mode_mcchar::col#2 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG1003 [545] (byte~) mode_mcchar::$27 ← (byte) mode_mcchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$27 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$27 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #$f
    and cy
  //SEG1004 [546] (byte~) mode_mcchar::$28 ← (byte~) mode_mcchar::$27 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$28 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$28 ] ) -- vbuz1=vbuaa_rol_4 
    asl
    asl
    asl
    asl
    sta _28
  //SEG1005 [547] (byte~) mode_mcchar::$29 ← (byte) mode_mcchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$28 mode_mcchar::$29 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$28 mode_mcchar::$29 ] ) -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #$f
  //SEG1006 [548] (byte~) mode_mcchar::$30 ← (byte~) mode_mcchar::$28 | (byte~) mode_mcchar::$29 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$30 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 mode_mcchar::$30 ] ) -- vbuaa=vbuz1_bor_vbuaa 
    ora _28
  //SEG1007 [549] *((byte*) mode_mcchar::ch#2) ← (byte~) mode_mcchar::$30 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::cx#2 mode_mcchar::ch#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (ch),y
  //SEG1008 [550] (byte*) mode_mcchar::ch#1 ← ++ (byte*) mode_mcchar::ch#2 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::ch#1 mode_mcchar::cx#2 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::ch#1 mode_mcchar::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc ch
    bne !+
    inc ch+1
  !:
  //SEG1009 [551] (byte) mode_mcchar::cx#1 ← ++ (byte) mode_mcchar::cx#2 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::ch#1 mode_mcchar::cx#1 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::ch#1 mode_mcchar::cx#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG1010 [552] if((byte) mode_mcchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_mcchar::@3 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::ch#1 mode_mcchar::cx#1 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#4 mode_mcchar::col#1 mode_mcchar::ch#1 mode_mcchar::cx#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b3
  //SEG1011 mode_mcchar::@9
  //SEG1012 [553] (byte) mode_mcchar::cy#1 ← ++ (byte) mode_mcchar::cy#4 [ mode_mcchar::cy#1 mode_mcchar::col#1 mode_mcchar::ch#1 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#1 mode_mcchar::col#1 mode_mcchar::ch#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG1013 [554] if((byte) mode_mcchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_mcchar::@2 [ mode_mcchar::cy#1 mode_mcchar::col#1 mode_mcchar::ch#1 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::cy#1 mode_mcchar::col#1 mode_mcchar::ch#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2
  //SEG1014 mode_mcchar::@4
  //SEG1015 [555] if(true) goto mode_mcchar::@5 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- true_then_la1 
    jmp b5
  //SEG1016 mode_mcchar::@return
  breturn:
  //SEG1017 [556] return  [ ] ( main:2::menu:9::mode_mcchar:56 [ ] )
    rts
  //SEG1018 [557] phi from mode_mcchar::@4 to mode_mcchar::@5 [phi:mode_mcchar::@4->mode_mcchar::@5]
  //SEG1019 mode_mcchar::@5
  b5:
  //SEG1020 [558] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_mcchar:56 [ keyboard_key_pressed::return#0 ] )
  //SEG1021 [153] phi from mode_mcchar::@5 to keyboard_key_pressed [phi:mode_mcchar::@5->keyboard_key_pressed]
  //SEG1022 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_mcchar::@5->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_SPACE
    jsr keyboard_key_pressed
  //SEG1023 [559] (byte) keyboard_key_pressed::return#15 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#15 ] ( main:2::menu:9::mode_mcchar:56 [ keyboard_key_pressed::return#15 ] )
    // (byte) keyboard_key_pressed::return#15 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
  //SEG1024 mode_mcchar::@16
  //SEG1025 [560] (byte~) mode_mcchar::$33 ← (byte) keyboard_key_pressed::return#15 [ mode_mcchar::$33 ] ( main:2::menu:9::mode_mcchar:56 [ mode_mcchar::$33 ] )
    // (byte~) mode_mcchar::$33 = (byte) keyboard_key_pressed::return#15  // register copy reg byte a
  //SEG1026 [561] if((byte~) mode_mcchar::$33==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_mcchar::@4 [ ] ( main:2::menu:9::mode_mcchar:56 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b5
    jmp breturn
}
//SEG1027 mode_ecmchar
mode_ecmchar: {
    .label ECMCHAR_SCREEN = $8000
    .label ECMCHAR_CHARSET = $9000
    .label ECMCHAR_COLORS = $8400
    .label _28 = 7
    .label col = 2
    .label ch = 5
    .label cy = 4
  //SEG1028 [562] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #($ffffffff&ECMCHAR_CHARSET)/$10000
    sta DTV_GRAPHICS_VIC_BANK
  //SEG1029 [563] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_ecmchar::ECMCHAR_COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #ECMCHAR_COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG1030 [564] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_ecmchar::ECMCHAR_COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_COLOR_BANK_HI
  //SEG1031 [565] *((const byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    sta DTV_CONTROL
  //SEG1032 [566] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3
    sta CIA2_PORT_A_DDR
  //SEG1033 [567] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3^ECMCHAR_CHARSET/$4000
    sta CIA2_PORT_A
  //SEG1034 [568] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(const byte) VIC_ECM#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_DEN|VIC_RSEL|VIC_ECM|3
    sta VIC_CONTROL
  //SEG1035 [569] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_CSEL
    sta VIC_CONTROL2
  //SEG1036 [570] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_ecmchar::ECMCHAR_SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_ecmchar::ECMCHAR_CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #(ECMCHAR_SCREEN&$3fff)/$40|(ECMCHAR_CHARSET&$3fff)/$400
    sta VIC_MEMORY
  //SEG1037 [571] phi from mode_ecmchar to mode_ecmchar::@1 [phi:mode_ecmchar->mode_ecmchar::@1]
  //SEG1038 [571] phi (byte) mode_ecmchar::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_ecmchar->mode_ecmchar::@1#0] -- vbuxx=vbuc1 
    ldx #0
  //SEG1039 [571] phi from mode_ecmchar::@1 to mode_ecmchar::@1 [phi:mode_ecmchar::@1->mode_ecmchar::@1]
  //SEG1040 [571] phi (byte) mode_ecmchar::i#2 = (byte) mode_ecmchar::i#1 [phi:mode_ecmchar::@1->mode_ecmchar::@1#0] -- register_copy 
  //SEG1041 mode_ecmchar::@1
  b1:
  //SEG1042 [572] *((const byte*) DTV_PALETTE#0 + (byte) mode_ecmchar::i#2) ← *((const byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) mode_ecmchar::i#2) [ mode_ecmchar::i#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::i#2 ] ) -- pbuc1_derefidx_vbuxx=pbuc2_derefidx_vbuxx 
    lda DTV_PALETTE_DEFAULT,x
    sta DTV_PALETTE,x
  //SEG1043 [573] (byte) mode_ecmchar::i#1 ← ++ (byte) mode_ecmchar::i#2 [ mode_ecmchar::i#1 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG1044 [574] if((byte) mode_ecmchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_ecmchar::@1 [ mode_ecmchar::i#1 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne b1
  //SEG1045 mode_ecmchar::@8
  //SEG1046 [575] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BORDERCOL
  //SEG1047 [576] *((const byte*) BGCOL1#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    sta BGCOL1
  //SEG1048 [577] *((const byte*) BGCOL2#0) ← (byte/signed byte/word/signed word/dword/signed dword) 2 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #2
    sta BGCOL2
  //SEG1049 [578] *((const byte*) BGCOL3#0) ← (byte/signed byte/word/signed word/dword/signed dword) 5 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #5
    sta BGCOL3
  //SEG1050 [579] *((const byte*) BGCOL4#0) ← (byte/signed byte/word/signed word/dword/signed dword) 6 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #6
    sta BGCOL4
  //SEG1051 [580] phi from mode_ecmchar::@8 to mode_ecmchar::@2 [phi:mode_ecmchar::@8->mode_ecmchar::@2]
  //SEG1052 [580] phi (byte*) mode_ecmchar::ch#3 = (const byte*) mode_ecmchar::ECMCHAR_SCREEN#0 [phi:mode_ecmchar::@8->mode_ecmchar::@2#0] -- pbuz1=pbuc1 
    lda #<ECMCHAR_SCREEN
    sta ch
    lda #>ECMCHAR_SCREEN
    sta ch+1
  //SEG1053 [580] phi (byte*) mode_ecmchar::col#3 = (const byte*) mode_ecmchar::ECMCHAR_COLORS#0 [phi:mode_ecmchar::@8->mode_ecmchar::@2#1] -- pbuz1=pbuc1 
    lda #<ECMCHAR_COLORS
    sta col
    lda #>ECMCHAR_COLORS
    sta col+1
  //SEG1054 [580] phi (byte) mode_ecmchar::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_ecmchar::@8->mode_ecmchar::@2#2] -- vbuz1=vbuc1 
    lda #0
    sta cy
  //SEG1055 [580] phi from mode_ecmchar::@9 to mode_ecmchar::@2 [phi:mode_ecmchar::@9->mode_ecmchar::@2]
  //SEG1056 [580] phi (byte*) mode_ecmchar::ch#3 = (byte*) mode_ecmchar::ch#1 [phi:mode_ecmchar::@9->mode_ecmchar::@2#0] -- register_copy 
  //SEG1057 [580] phi (byte*) mode_ecmchar::col#3 = (byte*) mode_ecmchar::col#1 [phi:mode_ecmchar::@9->mode_ecmchar::@2#1] -- register_copy 
  //SEG1058 [580] phi (byte) mode_ecmchar::cy#4 = (byte) mode_ecmchar::cy#1 [phi:mode_ecmchar::@9->mode_ecmchar::@2#2] -- register_copy 
  //SEG1059 mode_ecmchar::@2
  b2:
  //SEG1060 [581] phi from mode_ecmchar::@2 to mode_ecmchar::@3 [phi:mode_ecmchar::@2->mode_ecmchar::@3]
  //SEG1061 [581] phi (byte*) mode_ecmchar::ch#2 = (byte*) mode_ecmchar::ch#3 [phi:mode_ecmchar::@2->mode_ecmchar::@3#0] -- register_copy 
  //SEG1062 [581] phi (byte*) mode_ecmchar::col#2 = (byte*) mode_ecmchar::col#3 [phi:mode_ecmchar::@2->mode_ecmchar::@3#1] -- register_copy 
  //SEG1063 [581] phi (byte) mode_ecmchar::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_ecmchar::@2->mode_ecmchar::@3#2] -- vbuxx=vbuc1 
    ldx #0
  //SEG1064 [581] phi from mode_ecmchar::@3 to mode_ecmchar::@3 [phi:mode_ecmchar::@3->mode_ecmchar::@3]
  //SEG1065 [581] phi (byte*) mode_ecmchar::ch#2 = (byte*) mode_ecmchar::ch#1 [phi:mode_ecmchar::@3->mode_ecmchar::@3#0] -- register_copy 
  //SEG1066 [581] phi (byte*) mode_ecmchar::col#2 = (byte*) mode_ecmchar::col#1 [phi:mode_ecmchar::@3->mode_ecmchar::@3#1] -- register_copy 
  //SEG1067 [581] phi (byte) mode_ecmchar::cx#2 = (byte) mode_ecmchar::cx#1 [phi:mode_ecmchar::@3->mode_ecmchar::@3#2] -- register_copy 
  //SEG1068 mode_ecmchar::@3
  b3:
  //SEG1069 [582] (byte~) mode_ecmchar::$25 ← (byte) mode_ecmchar::cx#2 + (byte) mode_ecmchar::cy#4 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 mode_ecmchar::$25 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 mode_ecmchar::$25 ] ) -- vbuaa=vbuxx_plus_vbuz1 
    txa
    clc
    adc cy
  //SEG1070 [583] (byte~) mode_ecmchar::$26 ← (byte~) mode_ecmchar::$25 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 mode_ecmchar::$26 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 mode_ecmchar::$26 ] ) -- vbuaa=vbuaa_band_vbuc1 
    and #$f
  //SEG1071 [584] *((byte*) mode_ecmchar::col#2) ← (byte~) mode_ecmchar::$26 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::cx#2 mode_ecmchar::col#2 mode_ecmchar::ch#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (col),y
  //SEG1072 [585] (byte*) mode_ecmchar::col#1 ← ++ (byte*) mode_ecmchar::col#2 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG1073 [586] (byte~) mode_ecmchar::$27 ← (byte) mode_ecmchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$27 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$27 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #$f
    and cy
  //SEG1074 [587] (byte~) mode_ecmchar::$28 ← (byte~) mode_ecmchar::$27 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$28 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$28 ] ) -- vbuz1=vbuaa_rol_4 
    asl
    asl
    asl
    asl
    sta _28
  //SEG1075 [588] (byte~) mode_ecmchar::$29 ← (byte) mode_ecmchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$28 mode_ecmchar::$29 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$28 mode_ecmchar::$29 ] ) -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #$f
  //SEG1076 [589] (byte~) mode_ecmchar::$30 ← (byte~) mode_ecmchar::$28 | (byte~) mode_ecmchar::$29 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$30 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 mode_ecmchar::$30 ] ) -- vbuaa=vbuz1_bor_vbuaa 
    ora _28
  //SEG1077 [590] *((byte*) mode_ecmchar::ch#2) ← (byte~) mode_ecmchar::$30 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::cx#2 mode_ecmchar::ch#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (ch),y
  //SEG1078 [591] (byte*) mode_ecmchar::ch#1 ← ++ (byte*) mode_ecmchar::ch#2 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::ch#1 mode_ecmchar::cx#2 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::ch#1 mode_ecmchar::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc ch
    bne !+
    inc ch+1
  !:
  //SEG1079 [592] (byte) mode_ecmchar::cx#1 ← ++ (byte) mode_ecmchar::cx#2 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::ch#1 mode_ecmchar::cx#1 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::ch#1 mode_ecmchar::cx#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG1080 [593] if((byte) mode_ecmchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_ecmchar::@3 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::ch#1 mode_ecmchar::cx#1 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#4 mode_ecmchar::col#1 mode_ecmchar::ch#1 mode_ecmchar::cx#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b3
  //SEG1081 mode_ecmchar::@9
  //SEG1082 [594] (byte) mode_ecmchar::cy#1 ← ++ (byte) mode_ecmchar::cy#4 [ mode_ecmchar::cy#1 mode_ecmchar::col#1 mode_ecmchar::ch#1 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#1 mode_ecmchar::col#1 mode_ecmchar::ch#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG1083 [595] if((byte) mode_ecmchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_ecmchar::@2 [ mode_ecmchar::cy#1 mode_ecmchar::col#1 mode_ecmchar::ch#1 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::cy#1 mode_ecmchar::col#1 mode_ecmchar::ch#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2
  //SEG1084 mode_ecmchar::@4
  //SEG1085 [596] if(true) goto mode_ecmchar::@5 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- true_then_la1 
    jmp b5
  //SEG1086 mode_ecmchar::@return
  breturn:
  //SEG1087 [597] return  [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] )
    rts
  //SEG1088 [598] phi from mode_ecmchar::@4 to mode_ecmchar::@5 [phi:mode_ecmchar::@4->mode_ecmchar::@5]
  //SEG1089 mode_ecmchar::@5
  b5:
  //SEG1090 [599] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_ecmchar:49 [ keyboard_key_pressed::return#0 ] )
  //SEG1091 [153] phi from mode_ecmchar::@5 to keyboard_key_pressed [phi:mode_ecmchar::@5->keyboard_key_pressed]
  //SEG1092 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_ecmchar::@5->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_SPACE
    jsr keyboard_key_pressed
  //SEG1093 [600] (byte) keyboard_key_pressed::return#14 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#14 ] ( main:2::menu:9::mode_ecmchar:49 [ keyboard_key_pressed::return#14 ] )
    // (byte) keyboard_key_pressed::return#14 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
  //SEG1094 mode_ecmchar::@16
  //SEG1095 [601] (byte~) mode_ecmchar::$33 ← (byte) keyboard_key_pressed::return#14 [ mode_ecmchar::$33 ] ( main:2::menu:9::mode_ecmchar:49 [ mode_ecmchar::$33 ] )
    // (byte~) mode_ecmchar::$33 = (byte) keyboard_key_pressed::return#14  // register copy reg byte a
  //SEG1096 [602] if((byte~) mode_ecmchar::$33==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_ecmchar::@4 [ ] ( main:2::menu:9::mode_ecmchar:49 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b5
    jmp breturn
}
//SEG1097 mode_stdchar
mode_stdchar: {
    .label SCREEN = $8000
    .label CHARSET = $9000
    .label COLORS = $8400
    .label _27 = 7
    .label col = 2
    .label ch = 5
    .label cy = 4
  //SEG1098 [603] *((const byte*) DTV_GRAPHICS_VIC_BANK#0) ← ((byte))((dword))(const byte*) mode_stdchar::CHARSET#0/(dword/signed dword) 65536 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #($ffffffff&CHARSET)/$10000
    sta DTV_GRAPHICS_VIC_BANK
  //SEG1099 [604] *((const byte*) DTV_COLOR_BANK_LO#0) ← <((word))(const byte*) mode_stdchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #COLORS/$400
    sta DTV_COLOR_BANK_LO
  //SEG1100 [605] *((const byte*) DTV_COLOR_BANK_HI#0) ← >((word))(const byte*) mode_stdchar::COLORS#0/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta DTV_COLOR_BANK_HI
  //SEG1101 [606] *((const byte*) DTV_CONTROL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    sta DTV_CONTROL
  //SEG1102 [607] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3
    sta CIA2_PORT_A_DDR
  //SEG1103 [608] *((const byte*) CIA2_PORT_A#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3^((byte))((word))(const byte*) mode_stdchar::CHARSET#0/(word/signed word/dword/signed dword) 16384 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #3^CHARSET/$4000
    sta CIA2_PORT_A
  //SEG1104 [609] *((const byte*) VIC_CONTROL#0) ← (const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_DEN|VIC_RSEL|3
    sta VIC_CONTROL
  //SEG1105 [610] *((const byte*) VIC_CONTROL2#0) ← (const byte) VIC_CSEL#0 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #VIC_CSEL
    sta VIC_CONTROL2
  //SEG1106 [611] *((const byte*) VIC_MEMORY#0) ← ((byte))((word))(const byte*) mode_stdchar::SCREEN#0&(word/signed word/dword/signed dword) 16383/(byte/signed byte/word/signed word/dword/signed dword) 64|((word))(const byte*) mode_stdchar::CHARSET#0&(word/signed word/dword/signed dword) 16383/(word/signed word/dword/signed dword) 1024 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #(SCREEN&$3fff)/$40|(CHARSET&$3fff)/$400
    sta VIC_MEMORY
  //SEG1107 [612] phi from mode_stdchar to mode_stdchar::@1 [phi:mode_stdchar->mode_stdchar::@1]
  //SEG1108 [612] phi (byte) mode_stdchar::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_stdchar->mode_stdchar::@1#0] -- vbuxx=vbuc1 
    ldx #0
  //SEG1109 [612] phi from mode_stdchar::@1 to mode_stdchar::@1 [phi:mode_stdchar::@1->mode_stdchar::@1]
  //SEG1110 [612] phi (byte) mode_stdchar::i#2 = (byte) mode_stdchar::i#1 [phi:mode_stdchar::@1->mode_stdchar::@1#0] -- register_copy 
  //SEG1111 mode_stdchar::@1
  b1:
  //SEG1112 [613] *((const byte*) DTV_PALETTE#0 + (byte) mode_stdchar::i#2) ← *((const byte[16]) DTV_PALETTE_DEFAULT#0 + (byte) mode_stdchar::i#2) [ mode_stdchar::i#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::i#2 ] ) -- pbuc1_derefidx_vbuxx=pbuc2_derefidx_vbuxx 
    lda DTV_PALETTE_DEFAULT,x
    sta DTV_PALETTE,x
  //SEG1113 [614] (byte) mode_stdchar::i#1 ← ++ (byte) mode_stdchar::i#2 [ mode_stdchar::i#1 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG1114 [615] if((byte) mode_stdchar::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto mode_stdchar::@1 [ mode_stdchar::i#1 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne b1
  //SEG1115 mode_stdchar::@8
  //SEG1116 [616] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #0
    sta BGCOL
  //SEG1117 [617] *((const byte*) BORDERCOL#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- _deref_pbuc1=vbuc2 
    sta BORDERCOL
  //SEG1118 [618] phi from mode_stdchar::@8 to mode_stdchar::@2 [phi:mode_stdchar::@8->mode_stdchar::@2]
  //SEG1119 [618] phi (byte*) mode_stdchar::ch#3 = (const byte*) mode_stdchar::SCREEN#0 [phi:mode_stdchar::@8->mode_stdchar::@2#0] -- pbuz1=pbuc1 
    lda #<SCREEN
    sta ch
    lda #>SCREEN
    sta ch+1
  //SEG1120 [618] phi (byte*) mode_stdchar::col#3 = (const byte*) mode_stdchar::COLORS#0 [phi:mode_stdchar::@8->mode_stdchar::@2#1] -- pbuz1=pbuc1 
    lda #<COLORS
    sta col
    lda #>COLORS
    sta col+1
  //SEG1121 [618] phi (byte) mode_stdchar::cy#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_stdchar::@8->mode_stdchar::@2#2] -- vbuz1=vbuc1 
    lda #0
    sta cy
  //SEG1122 [618] phi from mode_stdchar::@9 to mode_stdchar::@2 [phi:mode_stdchar::@9->mode_stdchar::@2]
  //SEG1123 [618] phi (byte*) mode_stdchar::ch#3 = (byte*) mode_stdchar::ch#1 [phi:mode_stdchar::@9->mode_stdchar::@2#0] -- register_copy 
  //SEG1124 [618] phi (byte*) mode_stdchar::col#3 = (byte*) mode_stdchar::col#1 [phi:mode_stdchar::@9->mode_stdchar::@2#1] -- register_copy 
  //SEG1125 [618] phi (byte) mode_stdchar::cy#4 = (byte) mode_stdchar::cy#1 [phi:mode_stdchar::@9->mode_stdchar::@2#2] -- register_copy 
  //SEG1126 mode_stdchar::@2
  b2:
  //SEG1127 [619] phi from mode_stdchar::@2 to mode_stdchar::@3 [phi:mode_stdchar::@2->mode_stdchar::@3]
  //SEG1128 [619] phi (byte*) mode_stdchar::ch#2 = (byte*) mode_stdchar::ch#3 [phi:mode_stdchar::@2->mode_stdchar::@3#0] -- register_copy 
  //SEG1129 [619] phi (byte*) mode_stdchar::col#2 = (byte*) mode_stdchar::col#3 [phi:mode_stdchar::@2->mode_stdchar::@3#1] -- register_copy 
  //SEG1130 [619] phi (byte) mode_stdchar::cx#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:mode_stdchar::@2->mode_stdchar::@3#2] -- vbuxx=vbuc1 
    ldx #0
  //SEG1131 [619] phi from mode_stdchar::@3 to mode_stdchar::@3 [phi:mode_stdchar::@3->mode_stdchar::@3]
  //SEG1132 [619] phi (byte*) mode_stdchar::ch#2 = (byte*) mode_stdchar::ch#1 [phi:mode_stdchar::@3->mode_stdchar::@3#0] -- register_copy 
  //SEG1133 [619] phi (byte*) mode_stdchar::col#2 = (byte*) mode_stdchar::col#1 [phi:mode_stdchar::@3->mode_stdchar::@3#1] -- register_copy 
  //SEG1134 [619] phi (byte) mode_stdchar::cx#2 = (byte) mode_stdchar::cx#1 [phi:mode_stdchar::@3->mode_stdchar::@3#2] -- register_copy 
  //SEG1135 mode_stdchar::@3
  b3:
  //SEG1136 [620] (byte~) mode_stdchar::$24 ← (byte) mode_stdchar::cx#2 + (byte) mode_stdchar::cy#4 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 mode_stdchar::$24 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 mode_stdchar::$24 ] ) -- vbuaa=vbuxx_plus_vbuz1 
    txa
    clc
    adc cy
  //SEG1137 [621] (byte~) mode_stdchar::$25 ← (byte~) mode_stdchar::$24 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 mode_stdchar::$25 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 mode_stdchar::$25 ] ) -- vbuaa=vbuaa_band_vbuc1 
    and #$f
  //SEG1138 [622] *((byte*) mode_stdchar::col#2) ← (byte~) mode_stdchar::$25 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::cx#2 mode_stdchar::col#2 mode_stdchar::ch#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (col),y
  //SEG1139 [623] (byte*) mode_stdchar::col#1 ← ++ (byte*) mode_stdchar::col#2 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 ] ) -- pbuz1=_inc_pbuz1 
    inc col
    bne !+
    inc col+1
  !:
  //SEG1140 [624] (byte~) mode_stdchar::$26 ← (byte) mode_stdchar::cy#4 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$26 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$26 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #$f
    and cy
  //SEG1141 [625] (byte~) mode_stdchar::$27 ← (byte~) mode_stdchar::$26 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$27 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$27 ] ) -- vbuz1=vbuaa_rol_4 
    asl
    asl
    asl
    asl
    sta _27
  //SEG1142 [626] (byte~) mode_stdchar::$28 ← (byte) mode_stdchar::cx#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$27 mode_stdchar::$28 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$27 mode_stdchar::$28 ] ) -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #$f
  //SEG1143 [627] (byte~) mode_stdchar::$29 ← (byte~) mode_stdchar::$27 | (byte~) mode_stdchar::$28 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$29 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 mode_stdchar::$29 ] ) -- vbuaa=vbuz1_bor_vbuaa 
    ora _27
  //SEG1144 [628] *((byte*) mode_stdchar::ch#2) ← (byte~) mode_stdchar::$29 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::cx#2 mode_stdchar::ch#2 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (ch),y
  //SEG1145 [629] (byte*) mode_stdchar::ch#1 ← ++ (byte*) mode_stdchar::ch#2 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::ch#1 mode_stdchar::cx#2 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::ch#1 mode_stdchar::cx#2 ] ) -- pbuz1=_inc_pbuz1 
    inc ch
    bne !+
    inc ch+1
  !:
  //SEG1146 [630] (byte) mode_stdchar::cx#1 ← ++ (byte) mode_stdchar::cx#2 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::ch#1 mode_stdchar::cx#1 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::ch#1 mode_stdchar::cx#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG1147 [631] if((byte) mode_stdchar::cx#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto mode_stdchar::@3 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::ch#1 mode_stdchar::cx#1 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#4 mode_stdchar::col#1 mode_stdchar::ch#1 mode_stdchar::cx#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b3
  //SEG1148 mode_stdchar::@9
  //SEG1149 [632] (byte) mode_stdchar::cy#1 ← ++ (byte) mode_stdchar::cy#4 [ mode_stdchar::cy#1 mode_stdchar::col#1 mode_stdchar::ch#1 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#1 mode_stdchar::col#1 mode_stdchar::ch#1 ] ) -- vbuz1=_inc_vbuz1 
    inc cy
  //SEG1150 [633] if((byte) mode_stdchar::cy#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto mode_stdchar::@2 [ mode_stdchar::cy#1 mode_stdchar::col#1 mode_stdchar::ch#1 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::cy#1 mode_stdchar::col#1 mode_stdchar::ch#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda cy
    cmp #$19
    bne b2
  //SEG1151 mode_stdchar::@4
  //SEG1152 [634] if(true) goto mode_stdchar::@5 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- true_then_la1 
    jmp b5
  //SEG1153 mode_stdchar::@return
  breturn:
  //SEG1154 [635] return  [ ] ( main:2::menu:9::mode_stdchar:42 [ ] )
    rts
  //SEG1155 [636] phi from mode_stdchar::@4 to mode_stdchar::@5 [phi:mode_stdchar::@4->mode_stdchar::@5]
  //SEG1156 mode_stdchar::@5
  b5:
  //SEG1157 [637] call keyboard_key_pressed param-assignment [ keyboard_key_pressed::return#0 ] ( main:2::menu:9::mode_stdchar:42 [ keyboard_key_pressed::return#0 ] )
  //SEG1158 [153] phi from mode_stdchar::@5 to keyboard_key_pressed [phi:mode_stdchar::@5->keyboard_key_pressed]
  //SEG1159 [153] phi (byte) keyboard_key_pressed::key#22 = (const byte) KEY_SPACE#0 [phi:mode_stdchar::@5->keyboard_key_pressed#0] -- vbuxx=vbuc1 
    ldx #KEY_SPACE
    jsr keyboard_key_pressed
  //SEG1160 [638] (byte) keyboard_key_pressed::return#13 ← (byte) keyboard_key_pressed::return#0 [ keyboard_key_pressed::return#13 ] ( main:2::menu:9::mode_stdchar:42 [ keyboard_key_pressed::return#13 ] )
    // (byte) keyboard_key_pressed::return#13 = (byte) keyboard_key_pressed::return#0  // register copy reg byte a
  //SEG1161 mode_stdchar::@16
  //SEG1162 [639] (byte~) mode_stdchar::$32 ← (byte) keyboard_key_pressed::return#13 [ mode_stdchar::$32 ] ( main:2::menu:9::mode_stdchar:42 [ mode_stdchar::$32 ] )
    // (byte~) mode_stdchar::$32 = (byte) keyboard_key_pressed::return#13  // register copy reg byte a
  //SEG1163 [640] if((byte~) mode_stdchar::$32==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mode_stdchar::@4 [ ] ( main:2::menu:9::mode_stdchar:42 [ ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b5
    jmp breturn
}
//SEG1164 print_str_lines
print_str_lines: {
    .label str = 2
  //SEG1165 [642] phi from print_str_lines to print_str_lines::@1 [phi:print_str_lines->print_str_lines::@1]
  //SEG1166 [642] phi (byte*) print_line_cursor#17 = (const byte*) menu::SCREEN#0 [phi:print_str_lines->print_str_lines::@1#0] -- pbuz1=pbuc1 
    lda #<menu.SCREEN
    sta print_line_cursor
    lda #>menu.SCREEN
    sta print_line_cursor+1
  //SEG1167 [642] phi (byte*) print_char_cursor#19 = (const byte*) menu::SCREEN#0 [phi:print_str_lines->print_str_lines::@1#1] -- pbuz1=pbuc1 
    lda #<menu.SCREEN
    sta print_char_cursor
    lda #>menu.SCREEN
    sta print_char_cursor+1
  //SEG1168 [642] phi (byte*) print_str_lines::str#2 = (const string) MENU_TEXT#0 [phi:print_str_lines->print_str_lines::@1#2] -- pbuz1=pbuc1 
    lda #<MENU_TEXT
    sta str
    lda #>MENU_TEXT
    sta str+1
  //SEG1169 print_str_lines::@1
  b1:
  //SEG1170 [643] if(*((byte*) print_str_lines::str#2)!=(byte) '@') goto print_str_lines::@4 [ print_str_lines::str#2 print_char_cursor#19 print_line_cursor#17 ] ( main:2::menu:9::print_str_lines:33 [ print_str_lines::str#2 print_char_cursor#19 print_line_cursor#17 ] ) -- _deref_pbuz1_neq_vbuc1_then_la1 
    ldy #0
    lda (str),y
    cmp #'@'
    bne b4
  //SEG1171 print_str_lines::@return
  //SEG1172 [644] return  [ ] ( main:2::menu:9::print_str_lines:33 [ ] )
    rts
  //SEG1173 [645] phi from print_str_lines::@1 print_str_lines::@5 to print_str_lines::@4 [phi:print_str_lines::@1/print_str_lines::@5->print_str_lines::@4]
  //SEG1174 [645] phi (byte*) print_char_cursor#17 = (byte*) print_char_cursor#19 [phi:print_str_lines::@1/print_str_lines::@5->print_str_lines::@4#0] -- register_copy 
  //SEG1175 [645] phi (byte*) print_str_lines::str#3 = (byte*) print_str_lines::str#2 [phi:print_str_lines::@1/print_str_lines::@5->print_str_lines::@4#1] -- register_copy 
  //SEG1176 print_str_lines::@4
  b4:
  //SEG1177 [646] (byte) print_str_lines::ch#0 ← *((byte*) print_str_lines::str#3) [ print_line_cursor#17 print_str_lines::str#3 print_char_cursor#17 print_str_lines::ch#0 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#3 print_char_cursor#17 print_str_lines::ch#0 ] ) -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (str),y
  //SEG1178 [647] (byte*) print_str_lines::str#0 ← ++ (byte*) print_str_lines::str#3 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] ) -- pbuz1=_inc_pbuz1 
    inc str
    bne !+
    inc str+1
  !:
  //SEG1179 [648] if((byte) print_str_lines::ch#0==(byte) '@') goto print_str_lines::@5 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] ) -- vbuaa_eq_vbuc1_then_la1 
    cmp #'@'
    beq b5
  //SEG1180 print_str_lines::@8
  //SEG1181 [649] *((byte*) print_char_cursor#17) ← (byte) print_str_lines::ch#0 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#17 print_str_lines::ch#0 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (print_char_cursor),y
  //SEG1182 [650] (byte*) print_char_cursor#1 ← ++ (byte*) print_char_cursor#17 [ print_line_cursor#17 print_str_lines::str#0 print_str_lines::ch#0 print_char_cursor#1 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#0 print_str_lines::ch#0 print_char_cursor#1 ] ) -- pbuz1=_inc_pbuz1 
    inc print_char_cursor
    bne !+
    inc print_char_cursor+1
  !:
  //SEG1183 [651] phi from print_str_lines::@4 print_str_lines::@8 to print_str_lines::@5 [phi:print_str_lines::@4/print_str_lines::@8->print_str_lines::@5]
  //SEG1184 [651] phi (byte*) print_char_cursor#32 = (byte*) print_char_cursor#17 [phi:print_str_lines::@4/print_str_lines::@8->print_str_lines::@5#0] -- register_copy 
  //SEG1185 print_str_lines::@5
  b5:
  //SEG1186 [652] if((byte) print_str_lines::ch#0!=(byte) '@') goto print_str_lines::@4 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#32 ] ( main:2::menu:9::print_str_lines:33 [ print_line_cursor#17 print_str_lines::str#0 print_char_cursor#32 ] ) -- vbuaa_neq_vbuc1_then_la1 
    cmp #'@'
    bne b4
  //SEG1187 [653] phi from print_str_lines::@5 to print_str_lines::@9 [phi:print_str_lines::@5->print_str_lines::@9]
  //SEG1188 print_str_lines::@9
  //SEG1189 [654] call print_ln param-assignment [ print_str_lines::str#0 print_line_cursor#19 ] ( main:2::menu:9::print_str_lines:33 [ print_str_lines::str#0 print_line_cursor#19 ] )
  //SEG1190 [656] phi from print_str_lines::@9 to print_ln [phi:print_str_lines::@9->print_ln]
    jsr print_ln
  //SEG1191 [655] (byte*~) print_char_cursor#95 ← (byte*) print_line_cursor#19 [ print_str_lines::str#0 print_char_cursor#95 print_line_cursor#19 ] ( main:2::menu:9::print_str_lines:33 [ print_str_lines::str#0 print_char_cursor#95 print_line_cursor#19 ] ) -- pbuz1=pbuz2 
    lda print_line_cursor
    sta print_char_cursor
    lda print_line_cursor+1
    sta print_char_cursor+1
  //SEG1192 [642] phi from print_str_lines::@9 to print_str_lines::@1 [phi:print_str_lines::@9->print_str_lines::@1]
  //SEG1193 [642] phi (byte*) print_line_cursor#17 = (byte*) print_line_cursor#19 [phi:print_str_lines::@9->print_str_lines::@1#0] -- register_copy 
  //SEG1194 [642] phi (byte*) print_char_cursor#19 = (byte*~) print_char_cursor#95 [phi:print_str_lines::@9->print_str_lines::@1#1] -- register_copy 
  //SEG1195 [642] phi (byte*) print_str_lines::str#2 = (byte*) print_str_lines::str#0 [phi:print_str_lines::@9->print_str_lines::@1#2] -- register_copy 
    jmp b1
}
//SEG1196 print_ln
print_ln: {
  //SEG1197 [657] phi from print_ln print_ln::@1 to print_ln::@1 [phi:print_ln/print_ln::@1->print_ln::@1]
  //SEG1198 [657] phi (byte*) print_line_cursor#18 = (byte*) print_line_cursor#17 [phi:print_ln/print_ln::@1->print_ln::@1#0] -- register_copy 
  //SEG1199 print_ln::@1
  b1:
  //SEG1200 [658] (byte*) print_line_cursor#19 ← (byte*) print_line_cursor#18 + (byte/signed byte/word/signed word/dword/signed dword) 40 [ print_line_cursor#19 print_char_cursor#32 ] ( main:2::menu:9::print_str_lines:33::print_ln:654 [ print_str_lines::str#0 print_line_cursor#19 print_char_cursor#32 ] ) -- pbuz1=pbuz1_plus_vbuc1 
    lda print_line_cursor
    clc
    adc #$28
    sta print_line_cursor
    bcc !+
    inc print_line_cursor+1
  !:
  //SEG1201 [659] if((byte*) print_line_cursor#19<(byte*) print_char_cursor#32) goto print_ln::@1 [ print_line_cursor#19 print_char_cursor#32 ] ( main:2::menu:9::print_str_lines:33::print_ln:654 [ print_str_lines::str#0 print_line_cursor#19 print_char_cursor#32 ] ) -- pbuz1_lt_pbuz2_then_la1 
    lda print_line_cursor+1
    cmp print_char_cursor+1
    bcc b1
    bne !+
    lda print_line_cursor
    cmp print_char_cursor
    bcc b1
  !:
  //SEG1202 print_ln::@return
  //SEG1203 [660] return  [ print_line_cursor#19 ] ( main:2::menu:9::print_str_lines:33::print_ln:654 [ print_str_lines::str#0 print_line_cursor#19 ] )
    rts
}
//SEG1204 print_cls
print_cls: {
    .label sc = 2
  //SEG1205 [662] phi from print_cls to print_cls::@1 [phi:print_cls->print_cls::@1]
  //SEG1206 [662] phi (byte*) print_cls::sc#2 = (const byte*) menu::SCREEN#0 [phi:print_cls->print_cls::@1#0] -- pbuz1=pbuc1 
    lda #<menu.SCREEN
    sta sc
    lda #>menu.SCREEN
    sta sc+1
  //SEG1207 [662] phi from print_cls::@1 to print_cls::@1 [phi:print_cls::@1->print_cls::@1]
  //SEG1208 [662] phi (byte*) print_cls::sc#2 = (byte*) print_cls::sc#1 [phi:print_cls::@1->print_cls::@1#0] -- register_copy 
  //SEG1209 print_cls::@1
  b1:
  //SEG1210 [663] *((byte*) print_cls::sc#2) ← (byte) ' ' [ print_cls::sc#2 ] ( main:2::menu:9::print_cls:31 [ print_cls::sc#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #' '
    ldy #0
    sta (sc),y
  //SEG1211 [664] (byte*) print_cls::sc#1 ← ++ (byte*) print_cls::sc#2 [ print_cls::sc#1 ] ( main:2::menu:9::print_cls:31 [ print_cls::sc#1 ] ) -- pbuz1=_inc_pbuz1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG1212 [665] if((byte*) print_cls::sc#1!=(const byte*) menu::SCREEN#0+(word/signed word/dword/signed dword) 1000) goto print_cls::@1 [ print_cls::sc#1 ] ( main:2::menu:9::print_cls:31 [ print_cls::sc#1 ] ) -- pbuz1_neq_pbuc1_then_la1 
    lda sc+1
    cmp #>menu.SCREEN+$3e8
    bne b1
    lda sc
    cmp #<menu.SCREEN+$3e8
    bne b1
  //SEG1213 print_cls::@return
  //SEG1214 [666] return  [ ] ( main:2::menu:9::print_cls:31 [ ] )
    rts
}
//SEG1215 print_set_screen
print_set_screen: {
  //SEG1216 print_set_screen::@return
  //SEG1217 [668] return  [ ] ( main:2::menu:9::print_set_screen:29 [ ] )
    rts
}
  DTV_PALETTE_DEFAULT: .byte 0, $f, $36, $be, $58, $db, $86, $ff, $29, $26, $3b, 5, 7, $df, $9a, $a
  keyboard_matrix_row_bitmask: .byte $fe, $fd, $fb, $f7, $ef, $df, $bf, $7f
  keyboard_matrix_col_bitmask: .byte 1, 2, 4, 8, $10, $20, $40, $80
  MENU_TEXT: .text "C64DTV Graphics Modes            CCLHBME@"+"                                 OHIIMCC@"+"                                 LUNCMMM@"+"----------------------------------------@"+"1. Standard Char             (V) 0000000@"+"2. Extended Color Char       (V) 0000001@"+"3. Multicolor Char           (V) 0000010@"+"4. Standard Bitmap           (V) 0000100@"+"5. Multicolor Bitmap         (V) 0000110@"+"6. High Color Standard Char  (H) 0001000@"+"7. High Extended Color Char  (H) 0001001@"+"8. High Multicolor Char      (H) 0001010@"+"9. High Multicolor Bitmap    (H) 0001110@"+"a. Sixs Fred 2               (D) 0010111@"+"b. Two Plane Bitmap          (D) 0011101@"+"c. Sixs Fred (2 Plane MC BM) (D) 0011111@"+"d. 8bpp Pixel Cell           (D) 0111011@"+"e. Chunky 8bpp Bitmap        (D) 1111011@"+"----------------------------------------@"+"    (V) vicII (H) vicII+hicol (D) c64dtv@"+"@"

