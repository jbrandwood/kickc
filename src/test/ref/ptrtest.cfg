@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()
main: scope:[main]  from @1
  [4] phi()
  [5] call lvalue 
  to:main::@1
main::@1: scope:[main]  from main
  [6] phi()
  [7] call rvalue 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [8] phi()
  [9] call rvaluevar 
  to:main::@3
main::@3: scope:[main]  from main::@2
  [10] phi()
  [11] call lvaluevar 
  to:main::@return
main::@return: scope:[main]  from main::@3
  [12] return 
  to:@return
lvaluevar: scope:[lvaluevar]  from main::@3
  [13] phi()
  to:lvaluevar::@2
lvaluevar::@2: scope:[lvaluevar]  from lvaluevar lvaluevar::@1
  [14] (byte*) lvaluevar::screen#4 ← phi( lvaluevar::@1/(byte*) lvaluevar::screen#1 lvaluevar/(byte*) 1024 )
  [14] (byte) lvaluevar::i#4 ← phi( lvaluevar::@1/(byte) lvaluevar::i#1 lvaluevar/(byte) 2 )
  [15] *((byte*) lvaluevar::screen#4) ← (const byte) lvaluevar::b#0
  [16] (byte*) lvaluevar::screen#1 ← ++ (byte*) lvaluevar::screen#4
  [17] (byte) lvaluevar::i#1 ← ++ (byte) lvaluevar::i#4
  to:lvaluevar::@1
lvaluevar::@1: scope:[lvaluevar]  from lvaluevar::@2
  [18] if((byte) lvaluevar::i#1<(byte) $a) goto lvaluevar::@2
  to:lvaluevar::@return
lvaluevar::@return: scope:[lvaluevar]  from lvaluevar::@1
  [19] return 
  to:@return
rvaluevar: scope:[rvaluevar]  from main::@2
  [20] phi()
  to:rvaluevar::@2
rvaluevar::@2: scope:[rvaluevar]  from rvaluevar rvaluevar::@1
  [21] (byte*) rvaluevar::screen#4 ← phi( rvaluevar::@1/(byte*) rvaluevar::screen#1 rvaluevar/(byte*) 1024 )
  [21] (byte) rvaluevar::i#4 ← phi( rvaluevar::@1/(byte) rvaluevar::i#1 rvaluevar/(byte) 2 )
  [22] (byte) rvaluevar::b#1 ← *((byte*) rvaluevar::screen#4)
  [23] (byte*) rvaluevar::screen#1 ← ++ (byte*) rvaluevar::screen#4
  [24] (byte) rvaluevar::i#1 ← ++ (byte) rvaluevar::i#4
  to:rvaluevar::@1
rvaluevar::@1: scope:[rvaluevar]  from rvaluevar::@2
  [25] if((byte) rvaluevar::i#1<(byte) $a) goto rvaluevar::@2
  to:rvaluevar::@3
rvaluevar::@3: scope:[rvaluevar]  from rvaluevar::@1
  [26] *((const byte*) rvaluevar::screen2#0) ← (byte) rvaluevar::b#1
  to:rvaluevar::@return
rvaluevar::@return: scope:[rvaluevar]  from rvaluevar::@3
  [27] return 
  to:@return
rvalue: scope:[rvalue]  from main::@1
  [28] phi()
  to:rvalue::@2
rvalue::@2: scope:[rvalue]  from rvalue rvalue::@1
  [29] (byte) rvalue::i#4 ← phi( rvalue::@1/(byte) rvalue::i#1 rvalue/(byte) 2 )
  [30] (byte) rvalue::b#2 ← *((const byte[$400]) rvalue::SCREEN#0 + (byte) rvalue::i#4)
  [31] (byte) rvalue::i#1 ← ++ (byte) rvalue::i#4
  to:rvalue::@1
rvalue::@1: scope:[rvalue]  from rvalue::@2
  [32] if((byte) rvalue::i#1<(byte) $a) goto rvalue::@2
  to:rvalue::@3
rvalue::@3: scope:[rvalue]  from rvalue::@1
  [33] *((const byte*) rvalue::screen2#0) ← (byte) rvalue::b#2
  to:rvalue::@return
rvalue::@return: scope:[rvalue]  from rvalue::@3
  [34] return 
  to:@return
lvalue: scope:[lvalue]  from main
  [35] *((const byte[$400]) lvalue::SCREEN#0) ← (byte) 1
  [36] *((const byte[$400]) lvalue::SCREEN#0+(byte) 1) ← (byte) 2
  to:lvalue::@2
lvalue::@2: scope:[lvalue]  from lvalue lvalue::@1
  [37] (byte) lvalue::i#4 ← phi( lvalue::@1/(byte) lvalue::i#1 lvalue/(byte) 2 )
  [38] *((const byte[$400]) lvalue::SCREEN#0 + (byte) lvalue::i#4) ← (byte) 3
  [39] (byte) lvalue::i#1 ← ++ (byte) lvalue::i#4
  to:lvalue::@1
lvalue::@1: scope:[lvalue]  from lvalue::@2
  [40] if((byte) lvalue::i#1<(byte) $a) goto lvalue::@2
  to:lvalue::@return
lvalue::@return: scope:[lvalue]  from lvalue::@1
  [41] return 
  to:@return
