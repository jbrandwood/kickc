
(void()) main()
main: scope:[main]  from
  [0] phi()
  [1] call init_font_hex 
  to:main::toD0181
main::toD0181: scope:[main]  from main
  [2] phi()
  to:main::@1
main::@1: scope:[main]  from main::toD0181
  [3] *((const nomodify byte*) D018) ← (const byte) main::toD0181_return#0
  [4] call clock_start 
  to:main::@3
main::@3: scope:[main]  from main::@1
  [5] phi()
  [6] call init_angle_screen 
  to:main::@4
main::@4: scope:[main]  from main::@3
  [7] phi()
  [8] call clock 
  [9] (dword) clock::return#2 ← (dword) clock::return#0
  to:main::@5
main::@5: scope:[main]  from main::@4
  [10] (dword~) main::$4 ← (dword) clock::return#2
  [11] (dword) main::cyclecount#0 ← (dword~) main::$4 - (const nomodify dword) CLOCKS_PER_INIT
  [12] (dword) print_ulong_at::dw#0 ← (dword) main::cyclecount#0
  [13] call print_ulong_at 
  to:main::toD0182
main::toD0182: scope:[main]  from main::@5
  [14] phi()
  to:main::@2
main::@2: scope:[main]  from main::toD0182
  [15] *((const nomodify byte*) D018) ← (const byte) main::toD0182_return#0
  to:main::@return
main::@return: scope:[main]  from main::@2
  [16] return 
  to:@return

(void()) init_font_hex((byte*) init_font_hex::charset)
init_font_hex: scope:[init_font_hex]  from main
  [17] phi()
  to:init_font_hex::@1
init_font_hex::@1: scope:[init_font_hex]  from init_font_hex init_font_hex::@5
  [18] (byte) init_font_hex::c#6 ← phi( init_font_hex/(byte) 0 init_font_hex::@5/(byte) init_font_hex::c#1 )
  [18] (byte*) init_font_hex::proto_hi#6 ← phi( init_font_hex/(const byte*) FONT_HEX_PROTO init_font_hex::@5/(byte*) init_font_hex::proto_hi#1 )
  [18] (byte*) init_font_hex::charset#5 ← phi( init_font_hex/(const nomodify byte*) CHARSET init_font_hex::@5/(byte*) init_font_hex::charset#0 )
  to:init_font_hex::@2
init_font_hex::@2: scope:[init_font_hex]  from init_font_hex::@1 init_font_hex::@4
  [19] (byte) init_font_hex::c1#4 ← phi( init_font_hex::@1/(byte) 0 init_font_hex::@4/(byte) init_font_hex::c1#1 )
  [19] (byte*) init_font_hex::proto_lo#4 ← phi( init_font_hex::@1/(const byte*) FONT_HEX_PROTO init_font_hex::@4/(byte*) init_font_hex::proto_lo#1 )
  [19] (byte*) init_font_hex::charset#2 ← phi( init_font_hex::@1/(byte*) init_font_hex::charset#5 init_font_hex::@4/(byte*) init_font_hex::charset#0 )
  [20] *((byte*) init_font_hex::charset#2) ← (byte) 0
  to:init_font_hex::@3
init_font_hex::@3: scope:[init_font_hex]  from init_font_hex::@2 init_font_hex::@3
  [21] (byte) init_font_hex::idx#5 ← phi( init_font_hex::@2/(byte) 1 init_font_hex::@3/(byte) init_font_hex::idx#2 )
  [21] (byte) init_font_hex::i#2 ← phi( init_font_hex::@2/(byte) 0 init_font_hex::@3/(byte) init_font_hex::i#1 )
  [22] (byte~) init_font_hex::$0 ← *((byte*) init_font_hex::proto_hi#6 + (byte) init_font_hex::i#2) << (byte) 4
  [23] (byte~) init_font_hex::$1 ← *((byte*) init_font_hex::proto_lo#4 + (byte) init_font_hex::i#2) << (byte) 1
  [24] (byte~) init_font_hex::$2 ← (byte~) init_font_hex::$0 | (byte~) init_font_hex::$1
  [25] *((byte*) init_font_hex::charset#2 + (byte) init_font_hex::idx#5) ← (byte~) init_font_hex::$2
  [26] (byte) init_font_hex::idx#2 ← ++ (byte) init_font_hex::idx#5
  [27] (byte) init_font_hex::i#1 ← ++ (byte) init_font_hex::i#2
  [28] if((byte) init_font_hex::i#1!=(byte) 5) goto init_font_hex::@3
  to:init_font_hex::@4
init_font_hex::@4: scope:[init_font_hex]  from init_font_hex::@3
  [29] *((byte*) init_font_hex::charset#2 + (byte) init_font_hex::idx#2) ← (byte) 0
  [30] (byte) init_font_hex::idx#3 ← ++ (byte) init_font_hex::idx#2
  [31] *((byte*) init_font_hex::charset#2 + (byte) init_font_hex::idx#3) ← (byte) 0
  [32] (byte*) init_font_hex::proto_lo#1 ← (byte*) init_font_hex::proto_lo#4 + (byte) 5
  [33] (byte*) init_font_hex::charset#0 ← (byte*) init_font_hex::charset#2 + (byte) 8
  [34] (byte) init_font_hex::c1#1 ← ++ (byte) init_font_hex::c1#4
  [35] if((byte) init_font_hex::c1#1!=(byte) $10) goto init_font_hex::@2
  to:init_font_hex::@5
init_font_hex::@5: scope:[init_font_hex]  from init_font_hex::@4
  [36] (byte*) init_font_hex::proto_hi#1 ← (byte*) init_font_hex::proto_hi#6 + (byte) 5
  [37] (byte) init_font_hex::c#1 ← ++ (byte) init_font_hex::c#6
  [38] if((byte) init_font_hex::c#1!=(byte) $10) goto init_font_hex::@1
  to:init_font_hex::@return
init_font_hex::@return: scope:[init_font_hex]  from init_font_hex::@5
  [39] return 
  to:@return

(void()) clock_start()
clock_start: scope:[clock_start]  from main::@1
  [40] *((byte*)(const nomodify struct MOS6526_CIA*) CIA2+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL) ← (byte) 0
  [41] *((byte*)(const nomodify struct MOS6526_CIA*) CIA2+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL) ← (const nomodify byte) CIA_TIMER_CONTROL_B_COUNT_UNDERFLOW_A
  [42] *((const nomodify dword*) CIA2_TIMER_AB) ← (dword) $ffffffff
  [43] *((byte*)(const nomodify struct MOS6526_CIA*) CIA2+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL) ← (const nomodify byte) CIA_TIMER_CONTROL_START|(const nomodify byte) CIA_TIMER_CONTROL_B_COUNT_UNDERFLOW_A
  [44] *((byte*)(const nomodify struct MOS6526_CIA*) CIA2+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL) ← (const nomodify byte) CIA_TIMER_CONTROL_START
  to:clock_start::@return
clock_start::@return: scope:[clock_start]  from clock_start
  [45] return 
  to:@return

(void()) init_angle_screen((byte*) init_angle_screen::screen)
init_angle_screen: scope:[init_angle_screen]  from main::@3
  [46] phi()
  to:init_angle_screen::@1
init_angle_screen::@1: scope:[init_angle_screen]  from init_angle_screen init_angle_screen::@4
  [47] (byte*) init_angle_screen::screen_bottomline#6 ← phi( init_angle_screen/(const nomodify byte*) SCREEN+(word)(number) $28*(number) $c init_angle_screen::@4/(byte*) init_angle_screen::screen_bottomline#1 )
  [47] (byte*) init_angle_screen::screen_topline#6 ← phi( init_angle_screen/(const nomodify byte*) SCREEN+(word)(number) $28*(number) $c init_angle_screen::@4/(byte*) init_angle_screen::screen_topline#1 )
  [47] (byte) init_angle_screen::y#5 ← phi( init_angle_screen/(byte) 0 init_angle_screen::@4/(byte) init_angle_screen::y#1 )
  to:init_angle_screen::@2
init_angle_screen::@2: scope:[init_angle_screen]  from init_angle_screen::@1 init_angle_screen::@5
  [48] (byte) init_angle_screen::xb#2 ← phi( init_angle_screen::@1/(byte) $27 init_angle_screen::@5/(byte) init_angle_screen::xb#1 )
  [48] (byte) init_angle_screen::x#2 ← phi( init_angle_screen::@1/(byte) 0 init_angle_screen::@5/(byte) init_angle_screen::x#1 )
  [49] if((byte) init_angle_screen::x#2<(byte) $13+(byte) 1) goto init_angle_screen::@3
  to:init_angle_screen::@4
init_angle_screen::@4: scope:[init_angle_screen]  from init_angle_screen::@2
  [50] (byte*) init_angle_screen::screen_topline#1 ← (byte*) init_angle_screen::screen_topline#6 - (byte) $28
  [51] (byte*) init_angle_screen::screen_bottomline#1 ← (byte*) init_angle_screen::screen_bottomline#6 + (byte) $28
  [52] (byte) init_angle_screen::y#1 ← ++ (byte) init_angle_screen::y#5
  [53] if((byte) init_angle_screen::y#1!=(byte) $d) goto init_angle_screen::@1
  to:init_angle_screen::@return
init_angle_screen::@return: scope:[init_angle_screen]  from init_angle_screen::@4
  [54] return 
  to:@return
init_angle_screen::@3: scope:[init_angle_screen]  from init_angle_screen::@2
  [55] (byte~) init_angle_screen::$3 ← (byte) init_angle_screen::x#2 << (byte) 1
  [56] (byte~) init_angle_screen::$4 ← (byte) $27 - (byte~) init_angle_screen::$3
  [57] (word) init_angle_screen::xw#0 ← (byte~) init_angle_screen::$4 w= (byte) 0
  [58] (byte~) init_angle_screen::$5 ← (byte) init_angle_screen::y#5 << (byte) 1
  [59] (word) init_angle_screen::yw#0 ← (byte~) init_angle_screen::$5 w= (byte) 0
  [60] (signed word) atan2_16::x#0 ← (signed word)(word) init_angle_screen::xw#0
  [61] (signed word) atan2_16::y#0 ← (signed word)(word) init_angle_screen::yw#0
  [62] call atan2_16 
  [63] (word) atan2_16::return#2 ← (word) atan2_16::return#0
  to:init_angle_screen::@5
init_angle_screen::@5: scope:[init_angle_screen]  from init_angle_screen::@3
  [64] (word) init_angle_screen::angle_w#0 ← (word) atan2_16::return#2
  [65] (word~) init_angle_screen::$7 ← (word) init_angle_screen::angle_w#0 + (byte) $80
  [66] (byte) init_angle_screen::ang_w#0 ← > (word~) init_angle_screen::$7
  [67] *((byte*) init_angle_screen::screen_bottomline#6 + (byte) init_angle_screen::xb#2) ← (byte) init_angle_screen::ang_w#0
  [68] (byte~) init_angle_screen::$9 ← - (byte) init_angle_screen::ang_w#0
  [69] *((byte*) init_angle_screen::screen_topline#6 + (byte) init_angle_screen::xb#2) ← (byte~) init_angle_screen::$9
  [70] (byte~) init_angle_screen::$10 ← (byte) $80 + (byte) init_angle_screen::ang_w#0
  [71] *((byte*) init_angle_screen::screen_topline#6 + (byte) init_angle_screen::x#2) ← (byte~) init_angle_screen::$10
  [72] (byte~) init_angle_screen::$11 ← (byte) $80 - (byte) init_angle_screen::ang_w#0
  [73] *((byte*) init_angle_screen::screen_bottomline#6 + (byte) init_angle_screen::x#2) ← (byte~) init_angle_screen::$11
  [74] (byte) init_angle_screen::x#1 ← ++ (byte) init_angle_screen::x#2
  [75] (byte) init_angle_screen::xb#1 ← -- (byte) init_angle_screen::xb#2
  to:init_angle_screen::@2

(dword()) clock()
clock: scope:[clock]  from main::@4
  [76] (dword) clock::return#0 ← (dword) $ffffffff - *((const nomodify dword*) CIA2_TIMER_AB)
  to:clock::@return
clock::@return: scope:[clock]  from clock
  [77] return 
  to:@return

(void()) print_ulong_at((dword) print_ulong_at::dw , (byte*) print_ulong_at::at)
print_ulong_at: scope:[print_ulong_at]  from main::@5
  [78] (word) print_uint_at::w#0 ← > (dword) print_ulong_at::dw#0
  [79] call print_uint_at 
  to:print_ulong_at::@1
print_ulong_at::@1: scope:[print_ulong_at]  from print_ulong_at
  [80] (word) print_uint_at::w#1 ← < (dword) print_ulong_at::dw#0
  [81] call print_uint_at 
  to:print_ulong_at::@return
print_ulong_at::@return: scope:[print_ulong_at]  from print_ulong_at::@1
  [82] return 
  to:@return

(word()) atan2_16((signed word) atan2_16::x , (signed word) atan2_16::y)
atan2_16: scope:[atan2_16]  from init_angle_screen::@3
  [83] if((signed word) atan2_16::y#0>=(signed byte) 0) goto atan2_16::@1
  to:atan2_16::@2
atan2_16::@2: scope:[atan2_16]  from atan2_16
  [84] (signed word~) atan2_16::$2 ← - (signed word) atan2_16::y#0
  to:atan2_16::@3
atan2_16::@3: scope:[atan2_16]  from atan2_16::@1 atan2_16::@2
  [85] (signed word) atan2_16::yi#0 ← phi( atan2_16::@1/(signed word) atan2_16::yi#16 atan2_16::@2/(signed word~) atan2_16::$2 )
  [86] if((signed word) atan2_16::x#0>=(signed byte) 0) goto atan2_16::@4
  to:atan2_16::@5
atan2_16::@5: scope:[atan2_16]  from atan2_16::@3
  [87] (signed word~) atan2_16::$7 ← - (signed word) atan2_16::x#0
  to:atan2_16::@6
atan2_16::@6: scope:[atan2_16]  from atan2_16::@4 atan2_16::@5
  [88] (signed word) atan2_16::xi#0 ← phi( atan2_16::@4/(signed word) atan2_16::xi#13 atan2_16::@5/(signed word~) atan2_16::$7 )
  to:atan2_16::@10
atan2_16::@10: scope:[atan2_16]  from atan2_16::@19 atan2_16::@6
  [89] (word) atan2_16::angle#12 ← phi( atan2_16::@19/(word) atan2_16::angle#13 atan2_16::@6/(word) 0 )
  [89] (byte) atan2_16::i#2 ← phi( atan2_16::@19/(byte) atan2_16::i#1 atan2_16::@6/(byte) 0 )
  [89] (signed word) atan2_16::xi#3 ← phi( atan2_16::@19/(signed word) atan2_16::xi#8 atan2_16::@6/(signed word) atan2_16::xi#0 )
  [89] (signed word) atan2_16::yi#3 ← phi( atan2_16::@19/(signed word) atan2_16::yi#8 atan2_16::@6/(signed word) atan2_16::yi#0 )
  [90] if((signed word) atan2_16::yi#3!=(signed byte) 0) goto atan2_16::@11
  to:atan2_16::@12
atan2_16::@12: scope:[atan2_16]  from atan2_16::@10 atan2_16::@19
  [91] (word) atan2_16::angle#6 ← phi( atan2_16::@10/(word) atan2_16::angle#12 atan2_16::@19/(word) atan2_16::angle#13 )
  [92] (word) atan2_16::angle#1 ← (word) atan2_16::angle#6 >> (byte) 1
  [93] if((signed word) atan2_16::x#0>=(signed byte) 0) goto atan2_16::@7
  to:atan2_16::@21
atan2_16::@21: scope:[atan2_16]  from atan2_16::@12
  [94] (word) atan2_16::angle#4 ← (word) $8000 - (word) atan2_16::angle#1
  to:atan2_16::@7
atan2_16::@7: scope:[atan2_16]  from atan2_16::@12 atan2_16::@21
  [95] (word) atan2_16::angle#11 ← phi( atan2_16::@12/(word) atan2_16::angle#1 atan2_16::@21/(word) atan2_16::angle#4 )
  [96] if((signed word) atan2_16::y#0>=(signed byte) 0) goto atan2_16::@8
  to:atan2_16::@9
atan2_16::@9: scope:[atan2_16]  from atan2_16::@7
  [97] (word) atan2_16::angle#5 ← - (word) atan2_16::angle#11
  to:atan2_16::@8
atan2_16::@8: scope:[atan2_16]  from atan2_16::@7 atan2_16::@9
  [98] (word) atan2_16::return#0 ← phi( atan2_16::@7/(word) atan2_16::angle#11 atan2_16::@9/(word) atan2_16::angle#5 )
  to:atan2_16::@return
atan2_16::@return: scope:[atan2_16]  from atan2_16::@8
  [99] return 
  to:@return
atan2_16::@11: scope:[atan2_16]  from atan2_16::@10
  [100] (byte) atan2_16::shift#5 ← (byte) atan2_16::i#2
  [101] (signed word) atan2_16::xd#10 ← (signed word) atan2_16::xi#3
  [102] (signed word) atan2_16::yd#10 ← (signed word) atan2_16::yi#3
  to:atan2_16::@13
atan2_16::@13: scope:[atan2_16]  from atan2_16::@11 atan2_16::@14
  [103] (signed word) atan2_16::yd#3 ← phi( atan2_16::@11/(signed word) atan2_16::yd#10 atan2_16::@14/(signed word) atan2_16::yd#1 )
  [103] (signed word) atan2_16::xd#3 ← phi( atan2_16::@11/(signed word) atan2_16::xd#10 atan2_16::@14/(signed word) atan2_16::xd#1 )
  [103] (byte) atan2_16::shift#2 ← phi( atan2_16::@11/(byte) atan2_16::shift#5 atan2_16::@14/(byte) atan2_16::shift#1 )
  [104] if((byte) atan2_16::shift#2>=(byte) 2) goto atan2_16::@14
  to:atan2_16::@15
atan2_16::@15: scope:[atan2_16]  from atan2_16::@13
  [105] if((byte) 0==(byte) atan2_16::shift#2) goto atan2_16::@17
  to:atan2_16::@16
atan2_16::@16: scope:[atan2_16]  from atan2_16::@15
  [106] (signed word) atan2_16::xd#2 ← (signed word) atan2_16::xd#3 >> (signed byte) 1
  [107] (signed word) atan2_16::yd#2 ← (signed word) atan2_16::yd#3 >> (signed byte) 1
  to:atan2_16::@17
atan2_16::@17: scope:[atan2_16]  from atan2_16::@15 atan2_16::@16
  [108] (signed word) atan2_16::xd#5 ← phi( atan2_16::@15/(signed word) atan2_16::xd#3 atan2_16::@16/(signed word) atan2_16::xd#2 )
  [108] (signed word) atan2_16::yd#5 ← phi( atan2_16::@15/(signed word) atan2_16::yd#3 atan2_16::@16/(signed word) atan2_16::yd#2 )
  [109] if((signed word) atan2_16::yi#3>=(signed byte) 0) goto atan2_16::@18
  to:atan2_16::@20
atan2_16::@20: scope:[atan2_16]  from atan2_16::@17
  [110] (signed word) atan2_16::xi#2 ← (signed word) atan2_16::xi#3 - (signed word) atan2_16::yd#5
  [111] (signed word) atan2_16::yi#2 ← (signed word) atan2_16::yi#3 + (signed word) atan2_16::xd#5
  [112] (byte~) atan2_16::$23 ← (byte) atan2_16::i#2 << (byte) 1
  [113] (word) atan2_16::angle#3 ← (word) atan2_16::angle#12 - *((const word*) CORDIC_ATAN2_ANGLES_16 + (byte~) atan2_16::$23)
  to:atan2_16::@19
atan2_16::@19: scope:[atan2_16]  from atan2_16::@18 atan2_16::@20
  [114] (signed word) atan2_16::xi#8 ← phi( atan2_16::@18/(signed word) atan2_16::xi#1 atan2_16::@20/(signed word) atan2_16::xi#2 )
  [114] (word) atan2_16::angle#13 ← phi( atan2_16::@18/(word) atan2_16::angle#2 atan2_16::@20/(word) atan2_16::angle#3 )
  [114] (signed word) atan2_16::yi#8 ← phi( atan2_16::@18/(signed word) atan2_16::yi#1 atan2_16::@20/(signed word) atan2_16::yi#2 )
  [115] (byte) atan2_16::i#1 ← ++ (byte) atan2_16::i#2
  [116] if((byte) atan2_16::i#1==(const nomodify byte) CORDIC_ITERATIONS_16-(byte) 1+(byte) 1) goto atan2_16::@12
  to:atan2_16::@10
atan2_16::@18: scope:[atan2_16]  from atan2_16::@17
  [117] (signed word) atan2_16::xi#1 ← (signed word) atan2_16::xi#3 + (signed word) atan2_16::yd#5
  [118] (signed word) atan2_16::yi#1 ← (signed word) atan2_16::yi#3 - (signed word) atan2_16::xd#5
  [119] (byte~) atan2_16::$22 ← (byte) atan2_16::i#2 << (byte) 1
  [120] (word) atan2_16::angle#2 ← (word) atan2_16::angle#12 + *((const word*) CORDIC_ATAN2_ANGLES_16 + (byte~) atan2_16::$22)
  to:atan2_16::@19
atan2_16::@14: scope:[atan2_16]  from atan2_16::@13
  [121] (signed word) atan2_16::xd#1 ← (signed word) atan2_16::xd#3 >> (signed byte) 2
  [122] (signed word) atan2_16::yd#1 ← (signed word) atan2_16::yd#3 >> (signed byte) 2
  [123] (byte) atan2_16::shift#1 ← (byte) atan2_16::shift#2 - (byte) 2
  to:atan2_16::@13
atan2_16::@4: scope:[atan2_16]  from atan2_16::@3
  [124] (signed word) atan2_16::xi#13 ← (signed word) atan2_16::x#0
  to:atan2_16::@6
atan2_16::@1: scope:[atan2_16]  from atan2_16
  [125] (signed word) atan2_16::yi#16 ← (signed word) atan2_16::y#0
  to:atan2_16::@3

(void()) print_uint_at((word) print_uint_at::w , (byte*) print_uint_at::at)
print_uint_at: scope:[print_uint_at]  from print_ulong_at print_ulong_at::@1
  [126] (byte*) print_uint_at::at#2 ← phi( print_ulong_at/(const byte*) main::BASE_SCREEN print_ulong_at::@1/(const byte*) main::BASE_SCREEN+(byte) 4 )
  [126] (word) print_uint_at::w#2 ← phi( print_ulong_at/(word) print_uint_at::w#0 print_ulong_at::@1/(word) print_uint_at::w#1 )
  [127] (byte) print_uchar_at::b#0 ← > (word) print_uint_at::w#2
  [128] (byte*) print_uchar_at::at#0 ← (byte*) print_uint_at::at#2
  [129] call print_uchar_at 
  to:print_uint_at::@1
print_uint_at::@1: scope:[print_uint_at]  from print_uint_at
  [130] (byte) print_uchar_at::b#1 ← < (word) print_uint_at::w#2
  [131] (byte*) print_uchar_at::at#1 ← (byte*) print_uint_at::at#2 + (byte) 2
  [132] call print_uchar_at 
  to:print_uint_at::@return
print_uint_at::@return: scope:[print_uint_at]  from print_uint_at::@1
  [133] return 
  to:@return

(void()) print_uchar_at((byte) print_uchar_at::b , (byte*) print_uchar_at::at)
print_uchar_at: scope:[print_uchar_at]  from print_uint_at print_uint_at::@1
  [134] (byte*) print_uchar_at::at#2 ← phi( print_uint_at/(byte*) print_uchar_at::at#0 print_uint_at::@1/(byte*) print_uchar_at::at#1 )
  [134] (byte) print_uchar_at::b#2 ← phi( print_uint_at/(byte) print_uchar_at::b#0 print_uint_at::@1/(byte) print_uchar_at::b#1 )
  [135] (byte~) print_uchar_at::$0 ← (byte) print_uchar_at::b#2 >> (byte) 4
  [136] (byte) print_char_at::ch#0 ← *((const to_nomodify byte*) print_hextab + (byte~) print_uchar_at::$0)
  [137] (byte*) print_char_at::at#0 ← (byte*) print_uchar_at::at#2
  [138] call print_char_at 
  to:print_uchar_at::@1
print_uchar_at::@1: scope:[print_uchar_at]  from print_uchar_at
  [139] (byte~) print_uchar_at::$2 ← (byte) print_uchar_at::b#2 & (byte) $f
  [140] (byte*) print_char_at::at#1 ← (byte*) print_uchar_at::at#2 + (byte) 1
  [141] (byte) print_char_at::ch#1 ← *((const to_nomodify byte*) print_hextab + (byte~) print_uchar_at::$2)
  [142] call print_char_at 
  to:print_uchar_at::@return
print_uchar_at::@return: scope:[print_uchar_at]  from print_uchar_at::@1
  [143] return 
  to:@return

(void()) print_char_at((byte) print_char_at::ch , (byte*) print_char_at::at)
print_char_at: scope:[print_char_at]  from print_uchar_at print_uchar_at::@1
  [144] (byte*) print_char_at::at#2 ← phi( print_uchar_at/(byte*) print_char_at::at#0 print_uchar_at::@1/(byte*) print_char_at::at#1 )
  [144] (byte) print_char_at::ch#2 ← phi( print_uchar_at/(byte) print_char_at::ch#0 print_uchar_at::@1/(byte) print_char_at::ch#1 )
  [145] *((byte*) print_char_at::at#2) ← (byte) print_char_at::ch#2
  to:print_char_at::@return
print_char_at::@return: scope:[print_char_at]  from print_char_at
  [146] return 
  to:@return
