(label) @1
(label) @begin
(label) @end
(const byte) RADIX::BINARY = (number) 2
(const byte) RADIX::DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL = (number) 8
(void()) main()
(label) main::@1
(label) main::@10
(label) main::@11
(label) main::@12
(label) main::@13
(label) main::@14
(label) main::@15
(label) main::@16
(label) main::@17
(label) main::@18
(label) main::@19
(label) main::@2
(label) main::@20
(label) main::@21
(label) main::@22
(label) main::@23
(label) main::@24
(label) main::@25
(label) main::@26
(label) main::@27
(label) main::@28
(label) main::@29
(label) main::@3
(label) main::@30
(label) main::@31
(label) main::@32
(label) main::@33
(label) main::@34
(label) main::@35
(label) main::@36
(label) main::@37
(label) main::@38
(label) main::@39
(label) main::@4
(label) main::@40
(label) main::@41
(label) main::@42
(label) main::@43
(label) main::@44
(label) main::@45
(label) main::@46
(label) main::@47
(label) main::@48
(label) main::@49
(label) main::@5
(label) main::@50
(label) main::@51
(label) main::@52
(label) main::@53
(label) main::@54
(label) main::@55
(label) main::@56
(label) main::@57
(label) main::@58
(label) main::@59
(label) main::@6
(label) main::@60
(label) main::@61
(label) main::@62
(label) main::@63
(label) main::@64
(label) main::@65
(label) main::@66
(label) main::@67
(label) main::@68
(label) main::@7
(label) main::@8
(label) main::@9
(byte) main::a
(byte) main::a#1 a zp[1]:2 5.5
(byte) main::a#10 a zp[1]:2 3.860927152317884
(byte) main::b
(byte) main::b#0 b zp[1]:12 0.9758064516129035
(const byte*) main::cs[(number) 5]  = { (byte) 7, (byte) $c7, (byte) $37, (byte) $97, (byte) $67 }
(byte) main::i
(byte) main::i#1 i zp[1]:3 11.0
(byte) main::i#10 i zp[1]:3 0.8684210526315792
(const string) main::op[]  = (string) "< "
(const string) main::op12[]  = (string) ">="
(const string) main::op16[]  = (string) "=="
(const string) main::op4[]  = (string) "> "
(const string) main::op8[]  = (string) "<="
(byte) main::r
(byte) main::r#41 reg byte x 3.6666666666666665
(byte) main::r#42 reg byte x 5.5
(byte) main::r#43 reg byte x 3.6666666666666665
(byte) main::r#44 reg byte x 3.6666666666666665
(byte) main::r#45 reg byte x 3.6666666666666665
(byte) main::r#46 reg byte x 5.5
(byte) main::r#47 reg byte x 3.6666666666666665
(byte) main::r#48 reg byte x 3.6666666666666665
(byte) main::r#49 reg byte x 3.6666666666666665
(byte) main::r#50 reg byte x 5.5
(byte) main::r#51 reg byte x 3.6666666666666665
(byte) main::r#52 reg byte x 3.6666666666666665
(byte) main::r#53 reg byte x 3.6666666666666665
(byte) main::r#54 reg byte x 5.5
(byte) main::r#55 reg byte x 3.6666666666666665
(byte) main::r#56 reg byte x 3.6666666666666665
(byte) main::r#57 reg byte x 3.6666666666666665
(byte) main::r#58 reg byte x 5.5
(byte) main::r#59 reg byte x 3.6666666666666665
(byte) main::r#60 reg byte x 3.6666666666666665
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(label) memset::@1
(label) memset::@2
(label) memset::@return
(byte) memset::c
(const byte) memset::c#0 c = (byte) ' '
(byte*) memset::dst
(byte*) memset::dst#1 dst zp[2]:10 22.0
(byte*) memset::dst#2 dst zp[2]:10 14.666666666666666
(byte*) memset::end
(const byte*) memset::end#0 end = (byte*)(const void*) memset::str#0+(const word) memset::num#0
(word) memset::num
(const word) memset::num#0 num = (word) $3e8
(void*) memset::return
(void*) memset::str
(const void*) memset::str#0 str = (void*)(byte*) 1024
(void()) print_byte((byte) print_byte::b)
(byte~) print_byte::$0 reg byte a 4.0
(byte~) print_byte::$2 reg byte a 4.0
(label) print_byte::@1
(label) print_byte::@return
(byte) print_byte::b
(byte) print_byte::b#0 b zp[1]:9 4.0
(byte) print_byte::b#1 b zp[1]:9 4.0
(byte) print_byte::b#2 b zp[1]:9 2.0
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(byte) print_char::ch#0 reg byte a 4.0
(byte) print_char::ch#1 reg byte a 4.0
(byte) print_char::ch#4 reg byte a 4.0
(byte) print_char::ch#5 reg byte a 8.0
(byte*) print_char_cursor
(byte*) print_char_cursor#1 print_char_cursor zp[2]:7 101.0
(byte*) print_char_cursor#120 print_char_cursor zp[2]:7 2.75
(byte*) print_char_cursor#150 print_char_cursor zp[2]:7 22.0
(byte*) print_char_cursor#151 print_char_cursor zp[2]:7 22.0
(byte*) print_char_cursor#155 print_char_cursor zp[2]:7 22.0
(byte*) print_char_cursor#159 print_char_cursor zp[2]:7 22.0
(byte*) print_char_cursor#167 print_char_cursor zp[2]:7 22.0
(byte*) print_char_cursor#2 print_char_cursor zp[2]:7 51.16666666666666
(byte*) print_char_cursor#54 print_char_cursor zp[2]:7 7.0
(byte*) print_char_cursor#55 print_char_cursor zp[2]:7 2.106060606060605
(byte*) print_char_cursor#94 print_char_cursor zp[2]:7 2.0
(byte*) print_char_cursor#95 print_char_cursor zp[2]:7 222.0
(void()) print_cls()
(label) print_cls::@return
(const byte*) print_hextab[]  = (string) "0123456789abcdef"z
(byte*) print_line_cursor
(byte*) print_line_cursor#1 print_line_cursor zp[2]:10 3.2265625
(byte*) print_line_cursor#13 print_line_cursor zp[2]:10 204.0
(byte*) print_line_cursor#25 print_line_cursor zp[2]:10 57.0
(byte*) print_line_cursor#27 print_line_cursor zp[2]:10 0.7333333333333333
(void()) print_ln()
(label) print_ln::@1
(label) print_ln::@return
(byte*) print_screen
(void()) print_str((byte*) print_str::str)
(label) print_str::@1
(label) print_str::@2
(label) print_str::@return
(byte*) print_str::str
(byte*) print_str::str#0 str zp[2]:4 202.0
(byte*) print_str::str#1 str zp[2]:4 2.0
(byte*) print_str::str#2 str zp[2]:4 101.5
(void()) printu((byte) printu::a , (byte*) printu::op , (byte) printu::b , (byte) printu::res)
(label) printu::@1
(label) printu::@2
(label) printu::@3
(label) printu::@4
(label) printu::@5
(label) printu::@return
(byte) printu::a
(byte) printu::a#0 a zp[1]:2 7.333333333333333
(byte) printu::a#1 a zp[1]:2 11.0
(byte) printu::a#10 a zp[1]:2 7.333333333333333
(byte) printu::a#11 a zp[1]:2 7.333333333333333
(byte) printu::a#12 a zp[1]:2 5.5
(byte) printu::a#13 a zp[1]:2 11.0
(byte) printu::a#14 a zp[1]:2 7.333333333333333
(byte) printu::a#15 a zp[1]:2 7.333333333333333
(byte) printu::a#16 a zp[1]:2 5.5
(byte) printu::a#17 a zp[1]:2 11.0
(byte) printu::a#18 a zp[1]:2 7.333333333333333
(byte) printu::a#19 a zp[1]:2 7.333333333333333
(byte) printu::a#2 a zp[1]:2 7.333333333333333
(byte) printu::a#20 a zp[1]:2 111.0
(byte) printu::a#3 a zp[1]:2 7.333333333333333
(byte) printu::a#4 a zp[1]:2 5.5
(byte) printu::a#5 a zp[1]:2 11.0
(byte) printu::a#6 a zp[1]:2 7.333333333333333
(byte) printu::a#7 a zp[1]:2 7.333333333333333
(byte) printu::a#8 a zp[1]:2 5.5
(byte) printu::a#9 a zp[1]:2 11.0
(byte) printu::b
(byte) printu::b#0 b zp[1]:6 11.0
(byte) printu::b#10 b zp[1]:6 11.0
(byte) printu::b#11 b zp[1]:6 11.0
(byte) printu::b#12 b zp[1]:6 7.333333333333333
(byte) printu::b#14 b zp[1]:6 11.0
(byte) printu::b#15 b zp[1]:6 11.0
(byte) printu::b#16 b zp[1]:6 7.333333333333333
(byte) printu::b#18 b zp[1]:6 11.0
(byte) printu::b#19 b zp[1]:6 11.0
(byte) printu::b#2 b zp[1]:6 11.0
(byte) printu::b#20 b zp[1]:6 27.833333333333325
(byte) printu::b#3 b zp[1]:6 11.0
(byte) printu::b#4 b zp[1]:6 7.333333333333333
(byte) printu::b#6 b zp[1]:6 11.0
(byte) printu::b#7 b zp[1]:6 11.0
(byte) printu::b#8 b zp[1]:6 7.333333333333333
(byte*) printu::op
(byte*) printu::op#20 op zp[2]:4 0.5
(byte) printu::res
(byte) printu::res#0 reg byte x 22.0
(byte) printu::res#1 reg byte x 22.0
(byte) printu::res#10 reg byte x 22.0
(byte) printu::res#11 reg byte x 22.0
(byte) printu::res#12 reg byte x 11.0
(byte) printu::res#13 reg byte x 22.0
(byte) printu::res#14 reg byte x 22.0
(byte) printu::res#15 reg byte x 22.0
(byte) printu::res#16 reg byte x 11.0
(byte) printu::res#17 reg byte x 22.0
(byte) printu::res#18 reg byte x 22.0
(byte) printu::res#19 reg byte x 22.0
(byte) printu::res#2 reg byte x 22.0
(byte) printu::res#20 reg byte x 22.200000000000003
(byte) printu::res#3 reg byte x 22.0
(byte) printu::res#4 reg byte x 11.0
(byte) printu::res#5 reg byte x 22.0
(byte) printu::res#6 reg byte x 22.0
(byte) printu::res#7 reg byte x 22.0
(byte) printu::res#8 reg byte x 11.0
(byte) printu::res#9 reg byte x 22.0

zp[1]:2 [ main::a#10 main::a#1 printu::a#20 printu::a#8 printu::a#9 printu::a#10 printu::a#11 printu::a#12 printu::a#13 printu::a#14 printu::a#15 printu::a#16 printu::a#17 printu::a#0 printu::a#18 printu::a#19 printu::a#1 printu::a#2 printu::a#3 printu::a#4 printu::a#5 printu::a#6 printu::a#7 ]
zp[1]:3 [ main::i#10 main::i#1 ]
reg byte x [ main::r#41 ]
reg byte x [ main::r#42 ]
reg byte x [ main::r#43 ]
reg byte x [ main::r#44 ]
reg byte x [ main::r#45 ]
reg byte x [ main::r#46 ]
reg byte x [ main::r#47 ]
reg byte x [ main::r#48 ]
reg byte x [ main::r#49 ]
reg byte x [ main::r#50 ]
reg byte x [ main::r#51 ]
reg byte x [ main::r#52 ]
reg byte x [ main::r#53 ]
reg byte x [ main::r#54 ]
reg byte x [ main::r#55 ]
reg byte x [ main::r#56 ]
reg byte x [ main::r#57 ]
reg byte x [ main::r#58 ]
reg byte x [ main::r#59 ]
reg byte x [ main::r#60 ]
zp[2]:4 [ printu::op#20 print_str::str#2 print_str::str#1 print_str::str#0 ]
zp[1]:6 [ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ]
reg byte x [ printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 ]
reg byte a [ print_char::ch#5 print_char::ch#0 print_char::ch#1 print_char::ch#4 ]
zp[2]:7 [ print_char_cursor#54 print_char_cursor#94 print_char_cursor#95 print_char_cursor#151 print_char_cursor#55 print_char_cursor#155 print_char_cursor#159 print_char_cursor#120 print_char_cursor#150 print_char_cursor#167 print_char_cursor#2 print_char_cursor#1 ]
zp[1]:9 [ print_byte::b#2 print_byte::b#0 print_byte::b#1 ]
zp[2]:10 [ memset::dst#2 memset::dst#1 print_line_cursor#13 print_line_cursor#25 print_line_cursor#27 print_line_cursor#1 ]
zp[1]:12 [ main::b#0 ]
reg byte a [ print_byte::$0 ]
reg byte a [ print_byte::$2 ]
