@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@3
  [5] (byte*) main::cur_item#4 ← phi( main/(const byte*) items main::@3/(byte*) main::cur_item#1 )
  [5] (byte) main::item#4 ← phi( main/(byte) 0 main::@3/(byte) main::item#1 )
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2
  [6] (byte) main::sub#2 ← phi( main::@1/(byte) 0 main::@2/(byte) main::sub#1 )
  [7] (byte~) main::$0 ← (byte) main::item#4 << (byte) 4
  [8] (byte~) main::$1 ← (byte~) main::$0 | (byte) main::sub#2
  [9] *((byte*) main::cur_item#4 + (byte) main::sub#2) ← (byte~) main::$1
  [10] (byte) main::sub#1 ← ++ (byte) main::sub#2
  [11] if((byte) main::sub#1!=(const nomodify byte) ITEM_SIZE-(byte) 1+(byte) 1) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  [12] (byte*) main::cur_item#1 ← (byte*) main::cur_item#4 + (const nomodify byte) ITEM_SIZE
  [13] (byte) main::item#1 ← ++ (byte) main::item#4
  [14] if((byte) main::item#1!=(const nomodify byte) ITEM_COUNT-(byte) 1+(byte) 1) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@3
  [15] return 
  to:@return
