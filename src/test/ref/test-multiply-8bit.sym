(const byte*) BG_COLOR = (byte*) 53281
(const byte) RADIX::BINARY = (number) 2
(const byte) RADIX::DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL = (number) 8
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@return
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(label) memset::@1
(label) memset::@2
(label) memset::@return
(byte) memset::c
(const byte) memset::c#0 c = (byte) ' '
(byte*) memset::dst
(byte*) memset::dst#1 dst zp[2]:12 2002.0
(byte*) memset::dst#2 dst zp[2]:12 1334.6666666666667
(byte*) memset::end
(const byte*) memset::end#0 end = (byte*)(const void*) memset::str#0+(const word) memset::num#0
(word) memset::num
(const word) memset::num#0 num = (word) $3e8
(void*) memset::return
(void*) memset::str
(const void*) memset::str#0 str = (void*)(const byte*) print_screen#0
(signed word()) mul8s((signed byte) mul8s::a , (signed byte) mul8s::b)
(byte~) mul8s::$11 reg byte a 20002.0
(byte~) mul8s::$12 reg byte a 20002.0
(byte~) mul8s::$6 reg byte a 20002.0
(byte~) mul8s::$9 reg byte a 20002.0
(label) mul8s::@1
(label) mul8s::@2
(label) mul8s::@3
(label) mul8s::@4
(label) mul8s::@5
(label) mul8s::@return
(signed byte) mul8s::a
(signed byte) mul8s::a#0 a zp[1]:4 785.8571428571429
(signed byte) mul8s::b
(signed byte) mul8s::b#0 reg byte y 1000.1818181818181
(word) mul8s::m
(word) mul8s::m#0 m zp[2]:10 10001.0
(word) mul8s::m#1 m zp[2]:10 20002.0
(word) mul8s::m#2 m zp[2]:10 20002.0
(word) mul8s::m#4 m zp[2]:10 6667.333333333333
(word) mul8s::m#5 m zp[2]:10 12501.25
(signed word) mul8s::return
(void()) mul8s_compare()
(label) mul8s_compare::@1
(label) mul8s_compare::@10
(label) mul8s_compare::@11
(label) mul8s_compare::@12
(label) mul8s_compare::@13
(label) mul8s_compare::@14
(label) mul8s_compare::@15
(label) mul8s_compare::@2
(label) mul8s_compare::@3
(label) mul8s_compare::@4
(label) mul8s_compare::@5
(label) mul8s_compare::@6
(label) mul8s_compare::@7
(label) mul8s_compare::@8
(label) mul8s_compare::@9
(label) mul8s_compare::@return
(signed byte) mul8s_compare::a
(signed byte) mul8s_compare::a#1 a zp[1]:4 202.0
(signed byte) mul8s_compare::a#10 a zp[1]:4 122.85185185185186
(signed byte) mul8s_compare::b
(signed byte) mul8s_compare::b#1 b zp[1]:5 2002.0
(signed byte) mul8s_compare::b#10 b zp[1]:5 240.67999999999998
(signed word) mul8s_compare::mf
(signed word) mul8s_compare::mf#0 mf zp[2]:16 118.41176470588235
(signed word) mul8s_compare::mn
(signed word) mul8s_compare::mn#0 mn zp[2]:10 167.75
(signed word) mul8s_compare::ms
(signed word) mul8s_compare::ms#0 ms zp[2]:2 150.7
(byte) mul8s_compare::ok
(byte) mul8s_compare::ok#3 reg byte x 2002.0
(byte) mul8s_compare::ok#4 reg byte x 333.6666666666667
(const byte*) mul8s_compare::str[(byte) $1f]  = (byte*) "signed multiply results match!"
(void()) mul8s_error((signed byte) mul8s_error::a , (signed byte) mul8s_error::b , (signed word) mul8s_error::ms , (signed word) mul8s_error::mn , (signed word) mul8s_error::mf)
(label) mul8s_error::@1
(label) mul8s_error::@10
(label) mul8s_error::@2
(label) mul8s_error::@3
(label) mul8s_error::@4
(label) mul8s_error::@5
(label) mul8s_error::@6
(label) mul8s_error::@7
(label) mul8s_error::@8
(label) mul8s_error::@9
(label) mul8s_error::@return
(signed byte) mul8s_error::a
(signed byte) mul8s_error::a#0 reg byte x 16.0
(signed byte) mul8s_error::b
(signed byte) mul8s_error::b#0 b zp[1]:5 11.2
(signed word) mul8s_error::mf
(signed word) mul8s_error::mf#0 mf zp[2]:16 5.894736842105264
(signed word) mul8s_error::mn
(signed word) mul8s_error::mn#0 mn zp[2]:10 7.0
(signed word) mul8s_error::ms
(signed word) mul8s_error::ms#0 ms zp[2]:2 8.615384615384615
(const byte*) mul8s_error::str[(byte) $1a]  = (byte*) "signed multiply mismatch "
(word()) mul8u((byte) mul8u::a , (byte) mul8u::b)
(byte~) mul8u::$1 reg byte a 2.00000002E8
(label) mul8u::@1
(label) mul8u::@2
(label) mul8u::@3
(label) mul8u::@4
(label) mul8u::@return
(byte) mul8u::a
(byte) mul8u::a#0 reg byte x 1.00000001E8
(byte) mul8u::a#1 reg byte x 10001.0
(byte) mul8u::a#2 reg byte x 1001.0
(byte) mul8u::a#3 reg byte x 6.668333416666667E7
(byte) mul8u::a#6 reg byte x 55501.5
(byte) mul8u::b
(byte) mul8u::b#0 reg byte a 20002.0
(byte) mul8u::b#1 reg byte a 2002.0
(byte) mul8u::b#2 reg byte a 11002.0
(word) mul8u::mb
(word) mul8u::mb#0 mb zp[2]:12 200002.0
(word) mul8u::mb#1 mb zp[2]:12 2.00000002E8
(word) mul8u::mb#2 mb zp[2]:12 4.287142914285715E7
(word) mul8u::res
(word) mul8u::res#1 res zp[2]:10 2.00000002E8
(word) mul8u::res#2 res zp[2]:10 4.2858715E7
(word) mul8u::res#6 res zp[2]:10 1.00000001E8
(word) mul8u::return
(word) mul8u::return#2 return zp[2]:10 20002.0
(word) mul8u::return#3 return zp[2]:10 2002.0
(void()) mul8u_compare()
(label) mul8u_compare::@1
(label) mul8u_compare::@10
(label) mul8u_compare::@11
(label) mul8u_compare::@12
(label) mul8u_compare::@13
(label) mul8u_compare::@14
(label) mul8u_compare::@2
(label) mul8u_compare::@3
(label) mul8u_compare::@4
(label) mul8u_compare::@5
(label) mul8u_compare::@6
(label) mul8u_compare::@7
(label) mul8u_compare::@8
(label) mul8u_compare::@9
(label) mul8u_compare::@return
(byte) mul8u_compare::a
(byte) mul8u_compare::a#1 a zp[1]:4 151.5
(byte) mul8u_compare::a#7 a zp[1]:4 119.11111111111111
(byte) mul8u_compare::b
(byte) mul8u_compare::b#1 b zp[1]:5 1501.5
(byte) mul8u_compare::b#10 b zp[1]:5 200.64
(word) mul8u_compare::mf
(word) mul8u_compare::mf#0 mf zp[2]:16 111.83333333333334
(word) mul8u_compare::mn
(word) mul8u_compare::mn#0 mn zp[2]:10 167.75
(word) mul8u_compare::ms
(word) mul8u_compare::ms#0 ms zp[2]:2 143.52380952380952
(byte) mul8u_compare::ok
(byte) mul8u_compare::ok#3 reg byte x 2002.0
(byte) mul8u_compare::ok#4 reg byte x 333.6666666666667
(const byte*) mul8u_compare::str[(byte) $18]  = (byte*) "multiply results match!"
(void()) mul8u_error((byte) mul8u_error::a , (byte) mul8u_error::b , (word) mul8u_error::ms , (word) mul8u_error::mn , (word) mul8u_error::mf)
(label) mul8u_error::@1
(label) mul8u_error::@10
(label) mul8u_error::@2
(label) mul8u_error::@3
(label) mul8u_error::@4
(label) mul8u_error::@5
(label) mul8u_error::@6
(label) mul8u_error::@7
(label) mul8u_error::@8
(label) mul8u_error::@9
(label) mul8u_error::@return
(byte) mul8u_error::a
(byte) mul8u_error::a#0 reg byte x 16.0
(byte) mul8u_error::b
(byte) mul8u_error::b#0 b zp[1]:5 11.2
(word) mul8u_error::mf
(word) mul8u_error::mf#0 mf zp[2]:16 5.894736842105264
(word) mul8u_error::mn
(word) mul8u_error::mn#0 mn zp[2]:10 7.0
(word) mul8u_error::ms
(word) mul8u_error::ms#0 ms zp[2]:2 8.615384615384615
(const byte*) mul8u_error::str[(byte) $13]  = (byte*) "multiply mismatch "
(const byte*) mula_sqr1_hi[(number) $200]  = { fill( $200, 0) }
(const byte*) mula_sqr1_lo[(number) $200]  = { fill( $200, 0) }
(const byte*) mula_sqr2_hi[(number) $200]  = { fill( $200, 0) }
(const byte*) mula_sqr2_lo[(number) $200]  = { fill( $200, 0) }
(signed word()) mulf8s((signed byte) mulf8s::a , (signed byte) mulf8s::b)
(label) mulf8s::@1
(label) mulf8s::@2
(label) mulf8s::@return
(signed byte) mulf8s::a
(signed byte) mulf8s::a#0 reg byte a 333.6666666666667
(signed byte) mulf8s::b
(signed byte) mulf8s::b#0 reg byte x 2750.5
(label) mulf8s::mulf8s_prepare1
(signed byte) mulf8s::mulf8s_prepare1_a
(signed word) mulf8s::return
(signed word) mulf8s::return#0 return zp[2]:16 3667.333333333333
(signed word) mulf8s::return#2 return zp[2]:16 2002.0
(signed word()) mulf8s_prepared((signed byte) mulf8s_prepared::b)
(byte~) mulf8s_prepared::$11 reg byte a 200002.0
(byte~) mulf8s_prepared::$12 reg byte a 200002.0
(byte~) mulf8s_prepared::$6 reg byte a 200002.0
(byte~) mulf8s_prepared::$9 reg byte a 200002.0
(label) mulf8s_prepared::@1
(label) mulf8s_prepared::@2
(label) mulf8s_prepared::@3
(label) mulf8s_prepared::@4
(label) mulf8s_prepared::@5
(label) mulf8s_prepared::@return
(signed byte) mulf8s_prepared::b
(signed byte) mulf8s_prepared::b#0 b zp[1]:18 11000.2
(word) mulf8s_prepared::m
(word) mulf8s_prepared::m#0 m zp[2]:16 100001.0
(word) mulf8s_prepared::m#1 m zp[2]:16 200002.0
(word) mulf8s_prepared::m#2 m zp[2]:16 200002.0
(word) mulf8s_prepared::m#4 m zp[2]:16 66667.33333333333
(word) mulf8s_prepared::m#5 m zp[2]:16 125001.25
(const nomodify signed byte*) mulf8s_prepared::memA = (signed byte*) 253
(signed word) mulf8s_prepared::return
(word()) mulf8u((byte) mulf8u::a , (byte) mulf8u::b)
(label) mulf8u::@1
(label) mulf8u::@2
(label) mulf8u::@return
(byte) mulf8u::a
(byte) mulf8u::a#0 reg byte a 5501.0
(byte) mulf8u::b
(byte) mulf8u::b#0 reg byte x 3667.333333333333
(word) mulf8u::return
(word) mulf8u::return#0 return zp[2]:16 3667.333333333333
(word) mulf8u::return#2 return zp[2]:16 2002.0
(void()) mulf8u_prepare((byte) mulf8u_prepare::a)
(label) mulf8u_prepare::@return
(byte) mulf8u_prepare::a
(byte) mulf8u_prepare::a#0 reg byte a 20002.0
(byte) mulf8u_prepare::a#1 reg byte a 20002.0
(byte) mulf8u_prepare::a#2 reg byte a 120003.0
(const nomodify byte*) mulf8u_prepare::memA = (byte*) 253
(word()) mulf8u_prepared((byte) mulf8u_prepared::b)
(label) mulf8u_prepared::@return
(byte) mulf8u_prepared::b
(byte) mulf8u_prepared::b#0 reg byte a 20002.0
(byte) mulf8u_prepared::b#1 reg byte a 200002.0
(byte) mulf8u_prepared::b#2 reg byte a 1110003.0
(const nomodify byte*) mulf8u_prepared::memB = (byte*) 255
(const nomodify byte*) mulf8u_prepared::resL = (byte*) 254
(word) mulf8u_prepared::return
(word) mulf8u_prepared::return#0 return zp[2]:16 277500.75
(word) mulf8u_prepared::return#2 return zp[2]:16 20002.0
(word) mulf8u_prepared::return#3 return zp[2]:16 200002.0
(void()) mulf_init()
(byte~) mulf_init::$1 reg byte a 202.0
(byte~) mulf_init::$4 reg byte a 202.0
(byte~) mulf_init::$5 reg byte a 202.0
(label) mulf_init::@1
(label) mulf_init::@2
(label) mulf_init::@3
(label) mulf_init::@4
(label) mulf_init::@5
(label) mulf_init::@6
(label) mulf_init::@7
(label) mulf_init::@8
(label) mulf_init::@9
(label) mulf_init::@return
(byte) mulf_init::c
(byte) mulf_init::c#1 c zp[1]:4 23.307692307692307
(byte) mulf_init::c#2 c zp[1]:4 101.0
(byte) mulf_init::dir
(byte) mulf_init::dir#2 dir zp[1]:5 37.875
(byte) mulf_init::dir#4 dir zp[1]:5 101.0
(word) mulf_init::sqr
(word) mulf_init::sqr#1 sqr zp[2]:8 101.0
(word) mulf_init::sqr#2 sqr zp[2]:8 202.0
(word) mulf_init::sqr#3 sqr zp[2]:8 84.16666666666666
(word) mulf_init::sqr#4 sqr zp[2]:8 50.5
(byte*) mulf_init::sqr1_hi
(byte*) mulf_init::sqr1_hi#1 sqr1_hi zp[2]:2 67.33333333333333
(byte*) mulf_init::sqr1_hi#2 sqr1_hi zp[2]:2 25.25
(byte*) mulf_init::sqr1_lo
(byte*) mulf_init::sqr1_lo#1 sqr1_lo zp[2]:10 202.0
(byte*) mulf_init::sqr1_lo#2 sqr1_lo zp[2]:10 28.857142857142858
(byte*) mulf_init::sqr2_hi
(byte*) mulf_init::sqr2_hi#1 sqr2_hi zp[2]:6 33.666666666666664
(byte*) mulf_init::sqr2_hi#2 sqr2_hi zp[2]:6 75.75
(byte*) mulf_init::sqr2_lo
(byte*) mulf_init::sqr2_lo#1 sqr2_lo zp[2]:12 202.0
(byte*) mulf_init::sqr2_lo#2 sqr2_lo zp[2]:12 44.888888888888886
(byte) mulf_init::x_2
(byte) mulf_init::x_2#1 reg byte x 101.0
(byte) mulf_init::x_2#2 reg byte x 50.5
(byte) mulf_init::x_2#3 reg byte x 60.599999999999994
(byte) mulf_init::x_255
(byte) mulf_init::x_255#1 reg byte x 60.599999999999994
(byte) mulf_init::x_255#2 reg byte x 80.8
(void()) mulf_init_asm()
(label) mulf_init_asm::@return
(const byte*) mulf_init_asm::mem = (byte*) 255
(const byte*) mulf_sqr1_hi[(number) $200]  = { fill( $200, 0) }
(const byte*) mulf_sqr1_lo[(number) $200]  = { fill( $200, 0) }
(const byte*) mulf_sqr2_hi[(number) $200]  = { fill( $200, 0) }
(const byte*) mulf_sqr2_lo[(number) $200]  = { fill( $200, 0) }
(void()) mulf_tables_cmp()
(label) mulf_tables_cmp::@1
(label) mulf_tables_cmp::@10
(label) mulf_tables_cmp::@2
(label) mulf_tables_cmp::@3
(label) mulf_tables_cmp::@4
(label) mulf_tables_cmp::@5
(label) mulf_tables_cmp::@6
(label) mulf_tables_cmp::@7
(label) mulf_tables_cmp::@8
(label) mulf_tables_cmp::@9
(label) mulf_tables_cmp::@return
(byte*) mulf_tables_cmp::asm_sqr
(byte*) mulf_tables_cmp::asm_sqr#1 asm_sqr zp[2]:2 101.0
(byte*) mulf_tables_cmp::asm_sqr#2 asm_sqr zp[2]:2 60.599999999999994
(byte*) mulf_tables_cmp::kc_sqr
(byte*) mulf_tables_cmp::kc_sqr#1 kc_sqr zp[2]:10 202.0
(byte*) mulf_tables_cmp::kc_sqr#2 kc_sqr zp[2]:10 40.4
(const byte*) mulf_tables_cmp::str[(byte) $17]  = (byte*) "multiply tables match!"
(const byte*) mulf_tables_cmp::str1[(byte) $1c]  = (byte*) "multiply table mismatch at "
(const byte*) mulf_tables_cmp::str2[(byte) 4]  = (byte*) " / "
(signed word()) muls8s((signed byte) muls8s::a , (signed byte) muls8s::b)
(label) muls8s::@1
(label) muls8s::@2
(label) muls8s::@3
(label) muls8s::@4
(label) muls8s::@5
(label) muls8s::@6
(label) muls8s::@return
(signed byte) muls8s::a
(signed byte) muls8s::a#0 a zp[1]:4 1668417.0833333333
(signed byte) muls8s::b
(signed byte) muls8s::b#0 reg byte x 1818273.0
(signed byte) muls8s::i
(signed byte) muls8s::i#1 reg byte y 2.0000002E7
(signed byte) muls8s::i#2 reg byte y 1.0000001E7
(signed byte) muls8s::j
(signed byte) muls8s::j#1 reg byte y 2.0000002E7
(signed byte) muls8s::j#2 reg byte y 1.0000001E7
(signed word) muls8s::m
(signed word) muls8s::m#1 m zp[2]:2 1.0000001E7
(signed word) muls8s::m#2 m zp[2]:2 1.0000001E7
(signed word) muls8s::m#3 m zp[2]:2 1.50000015E7
(signed word) muls8s::m#5 m zp[2]:2 1.50000015E7
(signed word) muls8s::return
(signed word) muls8s::return#0 return zp[2]:2 6667001.0
(signed word) muls8s::return#2 return zp[2]:2 2002.0
(word()) muls8u((byte) muls8u::a , (byte) muls8u::b)
(label) muls8u::@1
(label) muls8u::@2
(label) muls8u::@3
(label) muls8u::@return
(byte) muls8u::a
(byte) muls8u::a#0 a zp[1]:4 1430143.2857142857
(byte) muls8u::b
(byte) muls8u::b#0 reg byte x 1666833.6666666665
(byte) muls8u::i
(byte) muls8u::i#1 reg byte y 2.0000002E7
(byte) muls8u::i#2 reg byte y 1.0000001E7
(word) muls8u::m
(word) muls8u::m#1 m zp[2]:2 1.0000001E7
(word) muls8u::m#3 m zp[2]:2 1.50000015E7
(word) muls8u::return
(word) muls8u::return#0 return zp[2]:2 3333667.333333333
(word) muls8u::return#2 return zp[2]:2 2002.0
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(byte) print_char::ch#0 reg byte a 20002.0
(byte) print_char::ch#5 reg byte a 200002.0
(byte) print_char::ch#6 reg byte a 200002.0
(byte) print_char::ch#7 reg byte a 1210004.0
(byte*) print_char_cursor
(byte*) print_char_cursor#1 print_char_cursor zp[2]:14 608.7380952380953
(byte*) print_char_cursor#101 print_char_cursor zp[2]:14 3.2682926829268295
(byte*) print_char_cursor#138 print_char_cursor zp[2]:14 2559.0
(byte*) print_char_cursor#145 print_char_cursor zp[2]:14 5663.5
(byte*) print_char_cursor#146 print_char_cursor zp[2]:14 40401.999999999985
(byte*) print_char_cursor#158 print_char_cursor zp[2]:14 2044.0
(byte*) print_char_cursor#18 print_char_cursor zp[2]:14 22460.760000000002
(byte*) print_char_cursor#192 print_char_cursor zp[2]:14 22.0
(byte*) print_char_cursor#193 print_char_cursor zp[2]:14 202.0
(byte*) print_char_cursor#231 print_char_cursor zp[2]:14 22.0
(byte*) print_char_cursor#87 print_char_cursor zp[2]:14 1107004.5
(void()) print_cls()
(label) print_cls::@return
(const to_nomodify byte*) print_hextab[]  = (byte*) "0123456789abcdef"z
(byte*) print_line_cursor
(byte*) print_line_cursor#0 print_line_cursor zp[2]:8 432.1285714285714
(byte*) print_line_cursor#10 print_line_cursor zp[2]:8 1.9523809523809526
(byte*) print_line_cursor#24 print_line_cursor zp[2]:8 21003.0
(byte*) print_line_cursor#47 print_line_cursor zp[2]:8 1225.0
(void()) print_ln()
(label) print_ln::@1
(label) print_ln::@return
(void()) print_schar((signed byte) print_schar::b)
(label) print_schar::@1
(label) print_schar::@2
(label) print_schar::@3
(label) print_schar::@4
(label) print_schar::@return
(signed byte) print_schar::b
(signed byte) print_schar::b#0 reg byte x 2002.0
(signed byte) print_schar::b#1 reg byte x 202.0
(signed byte) print_schar::b#2 reg byte x 202.0
(signed byte) print_schar::b#3 reg byte x 534.1666666666667
(signed byte) print_schar::b#5 reg byte x 2002.0
(byte*) print_screen
(const byte*) print_screen#0 print_screen = (byte*) 1024
(void()) print_sint((signed word) print_sint::w)
(label) print_sint::@1
(label) print_sint::@2
(label) print_sint::@3
(label) print_sint::@4
(label) print_sint::@return
(signed word) print_sint::w
(signed word) print_sint::w#0 w zp[2]:2 2002.0
(signed word) print_sint::w#1 w zp[2]:2 202.0
(signed word) print_sint::w#2 w zp[2]:2 202.0
(signed word) print_sint::w#3 w zp[2]:2 202.0
(signed word) print_sint::w#4 w zp[2]:2 551.0
(signed word) print_sint::w#6 w zp[2]:2 2002.0
(void()) print_str((byte*) print_str::str)
(label) print_str::@1
(label) print_str::@2
(label) print_str::@3
(label) print_str::@return
(byte*) print_str::str
(byte*) print_str::str#0 str zp[2]:6 20002.0
(byte*) print_str::str#16 str zp[2]:6 10251.25
(byte*) print_str::str#19 str zp[2]:6 1001.0
(void()) print_uchar((byte) print_uchar::b)
(byte~) print_uchar::$0 reg byte a 200002.0
(byte~) print_uchar::$2 reg byte x 200002.0
(label) print_uchar::@1
(label) print_uchar::@return
(byte) print_uchar::b
(byte) print_uchar::b#0 reg byte x 2002.0
(byte) print_uchar::b#1 reg byte x 20002.0
(byte) print_uchar::b#2 reg byte x 20002.0
(byte) print_uchar::b#3 reg byte x 202.0
(byte) print_uchar::b#4 reg byte x 202.0
(byte) print_uchar::b#5 reg byte x 55301.75
(void()) print_uint((word) print_uint::w)
(label) print_uint::@1
(label) print_uint::@return
(word) print_uint::w
(word) print_uint::w#0 w zp[2]:2 2002.0
(word) print_uint::w#1 w zp[2]:2 22.0
(word) print_uint::w#2 w zp[2]:2 22.0
(word) print_uint::w#3 w zp[2]:2 202.0
(word) print_uint::w#4 w zp[2]:2 202.0
(word) print_uint::w#5 w zp[2]:2 202.0
(word) print_uint::w#6 w zp[2]:2 7109.333333333333
(const byte*) str1[(byte) 2]  = (byte*) "*"
(const byte*) str2[(byte) 7]  = (byte*) " slow:"
(const byte*) str3[(byte) $b]  = (byte*) " / normal:"
(const byte*) str4[(byte) 9]  = (byte*) " / fast:"

reg byte x [ mulf_init::x_2#3 mulf_init::x_2#2 mulf_init::x_2#1 ]
reg byte x [ mulf_init::x_255#2 mulf_init::x_255#1 ]
zp[2]:2 [ mulf_tables_cmp::asm_sqr#2 mulf_tables_cmp::asm_sqr#1 print_uint::w#6 print_uint::w#3 print_uint::w#4 print_uint::w#5 print_uint::w#2 print_uint::w#1 print_uint::w#0 print_sint::w#6 print_sint::w#0 print_sint::w#4 print_sint::w#1 print_sint::w#2 print_sint::w#3 mul8s_error::ms#0 mul8u_compare::ms#0 mul8u_error::ms#0 muls8u::return#0 muls8u::m#3 muls8u::m#1 muls8u::return#2 muls8s::return#0 muls8s::m#3 muls8s::m#1 muls8s::m#5 muls8s::m#2 muls8s::return#2 mul8s_compare::ms#0 mulf_init::sqr1_hi#2 mulf_init::sqr1_hi#1 ]
reg byte x [ mul8u_compare::ok#3 mul8u_compare::ok#4 ]
zp[1]:4 [ mul8s_compare::a#10 mul8s_compare::a#1 muls8s::a#0 mul8s::a#0 mul8u_compare::a#7 mul8u_compare::a#1 muls8u::a#0 mulf_init::c#2 mulf_init::c#1 ]
zp[1]:5 [ mul8s_compare::b#10 mul8s_compare::b#1 mul8s_error::b#0 mul8u_compare::b#10 mul8u_compare::b#1 mul8u_error::b#0 mulf_init::dir#2 mulf_init::dir#4 ]
reg byte x [ mul8s_compare::ok#3 mul8s_compare::ok#4 ]
zp[2]:6 [ print_str::str#16 print_str::str#19 print_str::str#0 mulf_init::sqr2_hi#2 mulf_init::sqr2_hi#1 ]
zp[2]:8 [ print_line_cursor#24 print_line_cursor#47 print_line_cursor#10 print_line_cursor#0 mulf_init::sqr#3 mulf_init::sqr#4 mulf_init::sqr#1 mulf_init::sqr#2 ]
reg byte y [ muls8u::i#2 muls8u::i#1 ]
reg byte a [ mul8u::b#2 mul8u::b#0 mul8u::b#1 ]
reg byte x [ mul8u::a#3 mul8u::a#6 mul8u::a#1 mul8u::a#2 mul8u::a#0 ]
zp[2]:10 [ mul8u::res#2 mul8u::res#6 mul8u::res#1 mul8u::return#3 mul8u::return#2 mul8s::m#4 mul8s::m#5 mul8s::m#1 mul8s::m#0 mul8s::m#2 mul8s_compare::mn#0 mul8u_compare::mn#0 mul8u_error::mn#0 mul8s_error::mn#0 mulf_tables_cmp::kc_sqr#2 mulf_tables_cmp::kc_sqr#1 mulf_init::sqr1_lo#2 mulf_init::sqr1_lo#1 ]
zp[2]:12 [ mul8u::mb#2 mul8u::mb#0 mul8u::mb#1 memset::dst#2 memset::dst#1 mulf_init::sqr2_lo#2 mulf_init::sqr2_lo#1 ]
reg byte y [ muls8s::j#2 muls8s::j#1 ]
reg byte y [ muls8s::i#2 muls8s::i#1 ]
reg byte a [ print_char::ch#7 print_char::ch#0 print_char::ch#5 print_char::ch#6 ]
zp[2]:14 [ print_char_cursor#87 print_char_cursor#145 print_char_cursor#138 print_char_cursor#1 print_char_cursor#158 print_char_cursor#192 print_char_cursor#193 print_char_cursor#101 print_char_cursor#18 print_char_cursor#231 print_char_cursor#146 ]
reg byte x [ print_uchar::b#5 print_uchar::b#3 print_uchar::b#4 print_uchar::b#0 print_uchar::b#1 print_uchar::b#2 ]
reg byte a [ mulf8u_prepare::a#2 mulf8u_prepare::a#1 mulf8u_prepare::a#0 ]
reg byte a [ mulf8u_prepared::b#2 mulf8u_prepared::b#1 mulf8u_prepared::b#0 ]
zp[2]:16 [ mulf8s_prepared::m#4 mulf8s_prepared::m#5 mulf8s_prepared::m#1 mulf8s_prepared::m#0 mulf8s_prepared::m#2 mulf8s::return#0 mulf8u_prepared::return#3 mulf8s::return#2 mul8s_compare::mf#0 mulf8u_prepared::return#2 mulf8u_prepared::return#0 mulf8u::return#2 mul8u_compare::mf#0 mulf8u::return#0 mul8u_error::mf#0 mul8s_error::mf#0 ]
reg byte x [ print_schar::b#5 print_schar::b#0 print_schar::b#3 print_schar::b#1 print_schar::b#2 ]
reg byte a [ mulf_init::$1 ]
reg byte a [ mulf_init::$4 ]
reg byte a [ mulf_init::$5 ]
reg byte x [ muls8u::b#0 ]
reg byte a [ mulf8u::a#0 ]
reg byte x [ mulf8u::b#0 ]
reg byte x [ mul8u_error::a#0 ]
reg byte x [ muls8s::b#0 ]
reg byte a [ mulf8s::a#0 ]
reg byte x [ mulf8s::b#0 ]
reg byte y [ mul8s::b#0 ]
reg byte x [ mul8s_error::a#0 ]
reg byte a [ mul8u::$1 ]
zp[1]:18 [ mulf8s_prepared::b#0 ]
reg byte a [ mul8s::$6 ]
reg byte a [ mul8s::$11 ]
reg byte a [ mul8s::$9 ]
reg byte a [ mul8s::$12 ]
reg byte a [ print_uchar::$0 ]
reg byte x [ print_uchar::$2 ]
reg byte a [ mulf8s_prepared::$6 ]
reg byte a [ mulf8s_prepared::$11 ]
reg byte a [ mulf8s_prepared::$9 ]
reg byte a [ mulf8s_prepared::$12 ]
