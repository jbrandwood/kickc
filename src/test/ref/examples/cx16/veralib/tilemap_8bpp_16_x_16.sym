__constant const char BLACK = 0
__constant const char BLUE = 6
char CONIO_SCREEN_BANK
char CONIO_SCREEN_BANK#12 // CONIO_SCREEN_BANK zp[1]:57 625.0625
char CONIO_SCREEN_BANK#15 // reg byte x 14.693333333333332
char *CONIO_SCREEN_TEXT
char *CONIO_SCREEN_TEXT#12 // CONIO_SCREEN_TEXT zp[2]:18 2.000018187272727E7
unsigned int CONIO_SCREEN_TEXT#17 // CONIO_SCREEN_TEXT_1 zp[2]:86 2.2954545454545454
__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
__constant char SIZEOF_POINTER = 2
__constant unsigned int STACK_BASE = $103
__constant const char VERA_ADDRSEL = 1
__constant char * const VERA_ADDRX_H = (char *) 40738
__constant char * const VERA_ADDRX_L = (char *) 40736
__constant char * const VERA_ADDRX_M = (char *) 40737
__constant char * const VERA_CTRL = (char *) 40741
__constant char * const VERA_DATA0 = (char *) 40739
__constant char * const VERA_DATA1 = (char *) 40740
__constant char * const VERA_DC_HSCALE = (char *) 40746
__constant char * const VERA_DC_VIDEO = (char *) 40745
__constant char * const VERA_DC_VSCALE = (char *) 40747
__constant const char VERA_INC_1 = $10
__constant char * const VERA_L0_CONFIG = (char *) 40749
__constant char * const VERA_L0_MAPBASE = (char *) 40750
__constant char * const VERA_L0_TILEBASE = (char *) 40751
__constant char * const VERA_L1_CONFIG = (char *) 40756
__constant char * const VERA_L1_MAPBASE = (char *) 40757
__constant char * const VERA_L1_TILEBASE = (char *) 40758
__constant const char VERA_LAYER0_ENABLE = $10
__constant const char VERA_LAYER1_ENABLE = $20
__constant const char VERA_LAYER_COLOR_DEPTH_1BPP = 0
__constant const char VERA_LAYER_COLOR_DEPTH_2BPP = 1
__constant const char VERA_LAYER_COLOR_DEPTH_4BPP = 2
__constant const char VERA_LAYER_COLOR_DEPTH_8BPP = 3
__constant const char VERA_LAYER_CONFIG_256C = 8
__constant const unsigned int VERA_LAYER_HEIGHT[4] = { $20, $40, $80, $100 }
__constant const char VERA_LAYER_HEIGHT_128 = $80
__constant const char VERA_LAYER_HEIGHT_256 = $c0
__constant const char VERA_LAYER_HEIGHT_64 = $40
__constant const char VERA_LAYER_HEIGHT_MASK = $c0
__constant const char VERA_LAYER_TILEBASE_MASK = $fc
__constant const unsigned int VERA_LAYER_WIDTH[4] = { $20, $40, $80, $100 }
__constant const char VERA_LAYER_WIDTH_128 = $20
__constant const char VERA_LAYER_WIDTH_256 = $30
__constant const char VERA_LAYER_WIDTH_64 = $10
__constant const char VERA_LAYER_WIDTH_MASK = $30
__constant const char VERA_TILEBASE_HEIGHT_16 = 2
__constant const char VERA_TILEBASE_WIDTH_16 = 1
__constant const char WHITE = 1
void __start()
void clearline()
char clearline::$1 // reg byte a 2.00000002E8
char clearline::$2 // reg byte a 2.00000002E8
char clearline::$5 // reg byte a 2.00000002E8
char *clearline::addr
char *clearline::addr#0 // addr zp[2]:12 1.00000001E8
unsigned int clearline::c
unsigned int clearline::c#1 // c zp[2]:2 2.0000000002E10
unsigned int clearline::c#2 // c zp[2]:2 7.50000000075E9
char clearline::color
char clearline::color#0 // reg byte x 1.6833333336666665E9
void clrscr()
char clrscr::$0 // reg byte a 202.0
char clrscr::$1 // zp[1]:83 40.4
char clrscr::$2 // reg byte a 202.0
char clrscr::$5 // reg byte a 2002.0
char clrscr::$6 // reg byte a 2002.0
char clrscr::$7 // reg byte a 2002.0
char clrscr::$9 // reg byte a 202.0
char clrscr::c
char clrscr::c#1 // reg byte y 20002.0
char clrscr::c#2 // reg byte y 7500.75
char *clrscr::ch
char clrscr::color
char clrscr::color#0 // color zp[1]:32 594.2352941176471
char clrscr::l
char clrscr::l#1 // l zp[1]:10 2002.0
char clrscr::l#2 // l zp[1]:10 200.2
char *clrscr::line_text
char *clrscr::line_text#0 // line_text zp[2]:6 18.363636363636363
char *clrscr::line_text#1 // line_text zp[2]:6 1001.0
char *clrscr::line_text#2 // line_text zp[2]:6 293.2142857142857
__constant char conio_cursor_x[2] = { 0, 0 }
__constant char conio_cursor_y[2] = { 0, 0 }
__loadstore unsigned int conio_height // zp[2]:38 6500.681818181818
__constant unsigned int conio_line_text[2] = { 0, 0 }
__loadstore char conio_rowshift // zp[1]:24 5838150.895953758
__loadstore unsigned int conio_rowskip // zp[2]:25 5556117.255555555
__loadstore volatile char conio_screen_height // zp[1]:33 75000.16875000001
__loadstore char conio_screen_layer // zp[1]:29 1357989.2490118577
__loadstore volatile char conio_screen_width // zp[1]:15 5.1122500030612245E7
__constant char conio_scroll_enable[2] = { 1, 1 }
__loadstore unsigned int conio_width // zp[2]:70 128.87820512820514
void conio_x16_init()
__constant char * const conio_x16_init::BASIC_CURSOR_LINE = (char *) 214
char conio_x16_init::line
char conio_x16_init::line#0 // line zp[1]:82 2.1999999999999997
char conio_x16_init::line#1 // line zp[1]:82 22.0
char conio_x16_init::line#3 // line zp[1]:82 33.0
__stackcall void cputc(char c)
char cputc::$15 // reg byte a 20002.0
unsigned int cputc::$16 // zp[2]:6 20002.0
char cputc::$2 // reg byte a 20002.0
char cputc::$4 // reg byte a 20002.0
char cputc::$5 // reg byte a 20002.0
char cputc::$6 // reg byte a 20002.0
__constant char cputc::OFFSET_STACK_C = 0
char cputc::c
char cputc::c#0 // c zp[1]:10 1764.8823529411764
char cputc::color
char cputc::color#0 // reg byte x 1428.7142857142858
char *cputc::conio_addr
char *cputc::conio_addr#0 // conio_addr zp[2]:8 10001.0
char *cputc::conio_addr#1 // conio_addr zp[2]:8 6000.6
char cputc::scroll_enable
char cputc::scroll_enable#0 // reg byte a 20002.0
void cputln()
char cputln::$2 // reg byte a 200002.0
char cputln::$3 // reg byte a 200002.0
unsigned int cputln::temp
unsigned int cputln::temp#0 // temp zp[2]:4 200002.0
unsigned int cputln::temp#1 // temp zp[2]:4 100001.0
void cscroll()
void gotoxy(char x , char y)
char gotoxy::$5 // reg byte a 2.0000002E7
unsigned int gotoxy::$6 // zp[2]:16 2.0000002E7
unsigned int gotoxy::line_offset
unsigned int gotoxy::line_offset#0 // line_offset zp[2]:16 1.0000001E7
char gotoxy::x
char gotoxy::y
char gotoxy::y#1 // reg byte x 22.0
char gotoxy::y#2 // reg byte x 2000002.0
char gotoxy::y#4 // reg byte x 7000004.666666666
char gotoxy::y#5 // reg byte x 4000000.4
void insertup()
char insertup::$3 // reg byte a 2.000000002E9
char insertup::cy
char insertup::cy#0 // cy zp[1]:14 7.769230784615384E7
char insertup::i
char insertup::i#1 // reg byte x 2.000000002E9
char insertup::i#2 // reg byte x 4.000000004E8
unsigned int insertup::line
unsigned int insertup::line#0 // line zp[2]:8 2.000000002E9
char *insertup::start
char *insertup::start#0 // start zp[2]:8 1.000000001E9
char insertup::width
char insertup::width#0 // width zp[1]:11 8.416666683333334E7
char kbhit()
__constant char * const kbhit::GETIN = (char *) 65508
__constant char * const kbhit::IN_DEV = (char *) 650
__loadstore volatile char kbhit::ch // zp[1]:56 1001.0
__constant char * const kbhit::chptr = &kbhit::ch
char kbhit::return
char kbhit::return#0 // reg byte a 2002.0
char kbhit::return#1 // reg byte a 300.75
char kbhit::return#2 // reg byte a 202.0
char kbhit::return#3 // reg byte a 202.0
void main()
char main::$35 // reg byte a 202.0
char main::$40 // reg byte a 202.0
char main::bgcolor1_color
char main::bgcolor2_color
char main::c
char main::c#1 // c zp[1]:55 1501.5
char main::c#2 // c zp[1]:55 250.25
char main::c1
char main::c1#1 // reg byte x 1501.5
char main::c1#2 // reg byte x 250.25
char main::column
char main::column#1 // reg byte x 400.4
char main::column#2 // reg byte x 600.5999999999999
char main::column1
char main::column1#1 // column1 zp[1]:41 400.4
char main::column1#2 // column1 zp[1]:41 600.5999999999999
char main::p
char main::p#1 // reg byte x 1501.5
char main::p#2 // reg byte x 2002.0
char main::r
char main::r#1 // r zp[1]:66 151.5
char main::r#5 // r zp[1]:66 16.833333333333332
char main::r1
char main::r1#1 // r1 zp[1]:67 151.5
char main::r1#5 // r1 zp[1]:67 16.833333333333332
char main::row
char main::row#1 // row zp[1]:64 67.33333333333333
char main::row#10 // row_1 zp[1]:65 109.36363636363637
char main::row#3 // row_1 zp[1]:65 67.33333333333333
char main::row#9 // row zp[1]:64 109.36363636363637
__constant char main::s[$38] = "vera in tile mode 8 x 8, color depth 8 bits per pixel.
"
__constant char main::s1[$3a] = "in this mode, tiles are 8 pixels wide and 8 pixels tall.
"
__constant char main::s2[$2f] = "each tile can have a variation of 256 colors.
"
__constant char main::s3[$44] = "the vera palette of 256 colors, can be used by setting the palette
"
__constant char main::s4[$17] = "offset for each tile.
"
__constant char main::s5[$4b] = "here each column is displaying the same tile, but with different offsets!
"
__constant char main::s6[$3f] = "each offset aligns to multiples of 16 colors in the palette!.
"
__constant char main::s7[$3e] = "however, the first color will always be transparent (black).
"
char main::t
char main::t#1 // t zp[1]:63 151.5
char main::t#5 // t zp[1]:63 25.25
char main::textcolor1_color
char main::textcolor2_color
unsigned int main::tile
unsigned int main::tile#1 // tile zp[2]:36 2002.0
unsigned int main::tile#10 // tile zp[2]:36 202.0
unsigned int main::tile#11 // tile zp[2]:36 202.0
unsigned int main::tile#12 // tile zp[2]:36 350.5
unsigned int main::tile#13 // tile zp[2]:36 350.5
unsigned int main::tile#4 // tile zp[2]:36 2002.0
unsigned int main::tile#6 // tile zp[2]:36 517.3333333333334
unsigned int main::tile#8 // tile zp[2]:36 517.3333333333334
char *main::tilebase
char *main::tilebase#2 // tilebase zp[2]:72 67.33333333333333
char *main::tilebase#7 // tilebase zp[2]:72 28.857142857142858
__constant char main::tiles[$100] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
char main::vera_layer_hide1_$0 // reg byte a 22.0
char main::vera_layer_hide1_layer
char main::vera_layer_show1_layer
void memcpy_in_vram(char dest_bank , void *dest , char dest_increment , char src_bank , void *src , char src_increment , unsigned int num)
char memcpy_in_vram::$0 // reg byte a 2.0000000002E10
char memcpy_in_vram::$1 // reg byte a 2.0000000002E10
char memcpy_in_vram::$2 // reg byte a 2.0000000002E10
char memcpy_in_vram::$3 // reg byte a 2.0000000002E10
char memcpy_in_vram::$4 // reg byte a 2.0000000002E10
char memcpy_in_vram::$5 // reg byte a 2.0000000002E10
void *memcpy_in_vram::dest
void *memcpy_in_vram::dest#0 // dest zp[2]:8 6.666666673333334E8
void *memcpy_in_vram::dest#3 // dest zp[2]:8 1.9090909093636363E9
char memcpy_in_vram::dest_bank
char memcpy_in_vram::dest_bank#3 // dest_bank zp[1]:10 7.692307693076923E8
char memcpy_in_vram::dest_increment
unsigned int memcpy_in_vram::i
unsigned int memcpy_in_vram::i#1 // i zp[2]:2 2.00000000002E11
unsigned int memcpy_in_vram::i#2 // i zp[2]:2 1.00000000001E11
unsigned int memcpy_in_vram::num
unsigned int memcpy_in_vram::num#0 // num zp[2]:4 1.000000001E9
unsigned int memcpy_in_vram::num#4 // num zp[2]:4 5.315789473789474E9
void *memcpy_in_vram::src
char *memcpy_in_vram::src#0 // src zp[2]:6 3.333333336666667E8
void *memcpy_in_vram::src#3 // src zp[2]:6 5.25000000075E9
void *memcpy_in_vram::src#4 // src zp[2]:6 2.000000002E9
char memcpy_in_vram::src_bank
char memcpy_in_vram::src_bank#3 // reg byte y 1.6666666668333333E9
char memcpy_in_vram::src_increment
void memcpy_to_vram(char vbank , void *vdest , void *src , unsigned int num)
char memcpy_to_vram::$0 // reg byte a 2002.0
char memcpy_to_vram::$1 // reg byte a 2002.0
char *memcpy_to_vram::end
__constant char *memcpy_to_vram::end#0 = (char *)(void *)main::tiles+$100 // end
unsigned int memcpy_to_vram::num
char *memcpy_to_vram::s
char *memcpy_to_vram::s#1 // s zp[2]:4 200002.0
char *memcpy_to_vram::s#2 // s zp[2]:4 133334.66666666666
void *memcpy_to_vram::src
char memcpy_to_vram::vbank
void *memcpy_to_vram::vdest
void *memcpy_to_vram::vdest#1 // vdest zp[2]:8 202.0
void *memcpy_to_vram::vdest#2 // vdest zp[2]:8 525.75
void printf_str(void (*putc)(char) , const char *s)
char printf_str::c
char printf_str::c#1 // reg byte a 1001.0
void (*printf_str::putc)(char)
const char *printf_str::s
const char *printf_str::s#0 // s zp[2]:30 400.4
const char *printf_str::s#10 // s zp[2]:30 101.0
const char *printf_str::s#9 // s zp[2]:30 1552.0
void screenlayer(char layer)
unsigned int screenlayer::$2 // zp[2]:16 202.0
char screenlayer::$3 // reg byte a 202.0
unsigned int screenlayer::$4 // zp[2]:53 202.0
unsigned int screenlayer::$5 // zp[2]:58 202.0
char screenlayer::layer
char screenlayer::vera_layer_get_height1_$0 // reg byte a 202.0
char screenlayer::vera_layer_get_height1_$1 // reg byte a 202.0
char screenlayer::vera_layer_get_height1_$2 // reg byte a 202.0
char screenlayer::vera_layer_get_height1_$3 // reg byte a 202.0
char *screenlayer::vera_layer_get_height1_config
char *screenlayer::vera_layer_get_height1_config#0 // vera_layer_get_height1_config zp[2]:43 202.0
char screenlayer::vera_layer_get_height1_layer
char screenlayer::vera_layer_get_height1_layer#0 // reg byte a 202.0
unsigned int screenlayer::vera_layer_get_height1_return
unsigned int screenlayer::vera_layer_get_height1_return#0 // vera_layer_get_height1_return zp[2]:58 202.0
unsigned int screenlayer::vera_layer_get_height1_return#1 // vera_layer_get_height1_return zp[2]:58 202.0
char screenlayer::vera_layer_get_width1_$0 // reg byte a 202.0
char screenlayer::vera_layer_get_width1_$1 // reg byte a 202.0
char screenlayer::vera_layer_get_width1_$2 // reg byte a 202.0
char screenlayer::vera_layer_get_width1_$3 // reg byte a 202.0
char *screenlayer::vera_layer_get_width1_config
char *screenlayer::vera_layer_get_width1_config#0 // vera_layer_get_width1_config zp[2]:34 202.0
char screenlayer::vera_layer_get_width1_layer
char screenlayer::vera_layer_get_width1_layer#0 // reg byte a 202.0
unsigned int screenlayer::vera_layer_get_width1_return
unsigned int screenlayer::vera_layer_get_width1_return#0 // vera_layer_get_width1_return zp[2]:16 202.0
unsigned int screenlayer::vera_layer_get_width1_return#1 // vera_layer_get_width1_return zp[2]:16 202.0
void screensize(char *x , char *y)
char screensize::$1 // reg byte a 202.0
char screensize::$3 // reg byte a 202.0
char screensize::hscale
char screensize::hscale#0 // reg byte a 202.0
char screensize::vscale
char screensize::vscale#0 // reg byte a 202.0
char *screensize::x
__constant char *screensize::x#0 = &conio_screen_width // x
char *screensize::y
__constant char *screensize::y#0 = &conio_screen_height // y
__constant char vera_layer_backcolor[2] = { BLUE, BLUE }
__constant char *vera_layer_config[2] = { VERA_L0_CONFIG, VERA_L1_CONFIG }
__constant char vera_layer_enable[2] = { VERA_LAYER0_ENABLE, VERA_LAYER1_ENABLE }
char vera_layer_get_backcolor(char layer)
char vera_layer_get_backcolor::layer
char vera_layer_get_backcolor::layer#0 // reg byte y 1102.0
char vera_layer_get_backcolor::return
char vera_layer_get_backcolor::return#0 // reg byte a 202.0
char vera_layer_get_backcolor::return#1 // reg byte a 367.33333333333337
char vera_layer_get_color(char layer)
char vera_layer_get_color::$0 // reg byte a 2.000000002E9
char vera_layer_get_color::$1 // reg byte a 2.000000002E9
char vera_layer_get_color::$3 // reg byte a 2.000000002E9
char *vera_layer_get_color::addr
char *vera_layer_get_color::addr#0 // addr zp[2]:4 2.000000002E9
char vera_layer_get_color::layer
char vera_layer_get_color::layer#0 // reg byte x 20002.0
char vera_layer_get_color::layer#1 // reg byte x 2.00000002E8
char vera_layer_get_color::layer#2 // reg byte x 6.833350010000001E8
char vera_layer_get_color::return
char vera_layer_get_color::return#0 // reg byte a 20002.0
char vera_layer_get_color::return#1 // reg byte a 2.000000002E9
char vera_layer_get_color::return#2 // reg byte a 2.000000002E9
char vera_layer_get_color::return#3 // reg byte a 5.25002501E8
char vera_layer_get_color::return#4 // reg byte a 2.00000002E8
char vera_layer_get_mapbase_bank(char layer)
char vera_layer_get_mapbase_bank::layer
char vera_layer_get_mapbase_bank::layer#0 // reg byte y 1102.0
char vera_layer_get_mapbase_bank::return
char vera_layer_get_mapbase_bank::return#0 // reg byte x 367.33333333333337
char vera_layer_get_mapbase_bank::return#2 // reg byte x 202.0
unsigned int vera_layer_get_mapbase_offset(char layer)
char vera_layer_get_mapbase_offset::$0 // reg byte a 2002.0
char vera_layer_get_mapbase_offset::layer
char vera_layer_get_mapbase_offset::layer#0 // reg byte a 1102.0
unsigned int vera_layer_get_mapbase_offset::return
unsigned int vera_layer_get_mapbase_offset::return#0 // return zp[2]:16 367.33333333333337
unsigned int vera_layer_get_mapbase_offset::return#2 // return zp[2]:16 202.0
char vera_layer_get_rowshift(char layer)
char vera_layer_get_rowshift::layer
char vera_layer_get_rowshift::layer#0 // reg byte y 1102.0
char vera_layer_get_rowshift::return
char vera_layer_get_rowshift::return#0 // reg byte a 367.33333333333337
char vera_layer_get_rowshift::return#2 // reg byte a 202.0
unsigned int vera_layer_get_rowskip(char layer)
char vera_layer_get_rowskip::$0 // reg byte a 2002.0
char vera_layer_get_rowskip::layer
char vera_layer_get_rowskip::layer#0 // reg byte a 1102.0
unsigned int vera_layer_get_rowskip::return
unsigned int vera_layer_get_rowskip::return#0 // return zp[2]:53 367.33333333333337
unsigned int vera_layer_get_rowskip::return#2 // return zp[2]:53 202.0
char vera_layer_get_textcolor(char layer)
char vera_layer_get_textcolor::layer
char vera_layer_get_textcolor::layer#0 // reg byte y 1102.0
char vera_layer_get_textcolor::return
char vera_layer_get_textcolor::return#0 // reg byte a 202.0
char vera_layer_get_textcolor::return#1 // reg byte a 367.33333333333337
__constant const char vera_layer_hflip[2] = { 0, 4 }
__constant char *vera_layer_mapbase[2] = { VERA_L0_MAPBASE, VERA_L1_MAPBASE }
void vera_layer_mode_text(char layer , unsigned long mapbase_address , unsigned long tilebase_address , unsigned int mapwidth , unsigned int mapheight , char tilewidth , char tileheight , unsigned int color_mode)
unsigned int vera_layer_mode_text::color_mode
char vera_layer_mode_text::layer
__constant char vera_layer_mode_text::layer#0 = 1 // layer
unsigned long vera_layer_mode_text::mapbase_address
__constant unsigned long vera_layer_mode_text::mapbase_address#0 = 0 // mapbase_address
unsigned int vera_layer_mode_text::mapheight
__constant unsigned int vera_layer_mode_text::mapheight#0 = $40 // mapheight
unsigned int vera_layer_mode_text::mapwidth
__constant unsigned int vera_layer_mode_text::mapwidth#0 = $80 // mapwidth
unsigned long vera_layer_mode_text::tilebase_address
__constant unsigned long vera_layer_mode_text::tilebase_address#0 = $f800 // tilebase_address
char vera_layer_mode_text::tileheight
__constant char vera_layer_mode_text::tileheight#0 = 8 // tileheight
char vera_layer_mode_text::tilewidth
__constant char vera_layer_mode_text::tilewidth#0 = 8 // tilewidth
void vera_layer_mode_tile(char layer , unsigned long mapbase_address , unsigned long tilebase_address , unsigned int mapwidth , unsigned int mapheight , char tilewidth , char tileheight , char color_depth)
unsigned int vera_layer_mode_tile::$1 // zp[2]:53 1001.0
char vera_layer_mode_tile::$11 // reg byte a 2002.0
char vera_layer_mode_tile::$12 // reg byte a 2002.0
char vera_layer_mode_tile::$13 // reg byte a 2002.0
char vera_layer_mode_tile::$14 // reg byte a 2002.0
char vera_layer_mode_tile::$17 // zp[1]:61 250.25
char vera_layer_mode_tile::$18 // zp[1]:60 273.0
char vera_layer_mode_tile::$2 // reg byte a 2002.0
unsigned int vera_layer_mode_tile::$6 // zp[2]:43 2002.0
char vera_layer_mode_tile::$7 // reg byte a 2002.0
char vera_layer_mode_tile::color_depth
char vera_layer_mode_tile::color_depth#5 // reg byte x 1001.0
char vera_layer_mode_tile::config
char vera_layer_mode_tile::config#10 // reg byte x 2002.0
char vera_layer_mode_tile::config#11 // reg byte x 2002.0
char vera_layer_mode_tile::config#12 // reg byte x 2002.0
char vera_layer_mode_tile::config#17 // reg byte x 625.625
char vera_layer_mode_tile::config#21 // reg byte x 2002.0000000000002
char vera_layer_mode_tile::config#25 // reg byte x 3003.0
char vera_layer_mode_tile::config#6 // reg byte x 500.5
char vera_layer_mode_tile::config#7 // reg byte x 500.5
char vera_layer_mode_tile::config#8 // reg byte x 500.5
char vera_layer_mode_tile::layer
char vera_layer_mode_tile::layer#10 // layer zp[1]:62 227.49999999999994
char vera_layer_mode_tile::mapbase
char vera_layer_mode_tile::mapbase#0 // reg byte x 1001.0
unsigned long vera_layer_mode_tile::mapbase_address
unsigned long vera_layer_mode_tile::mapbase_address#0 // mapbase_address zp[4]:45 2002.0
unsigned long vera_layer_mode_tile::mapbase_address#10 // mapbase_address_1 zp[4]:74 88.97777777777777
unsigned int vera_layer_mode_tile::mapheight
unsigned int vera_layer_mode_tile::mapheight#10 // mapheight zp[2]:68 133.46666666666667
unsigned int vera_layer_mode_tile::mapwidth
unsigned int vera_layer_mode_tile::mapwidth#10 // mapwidth zp[2]:16 400.4
char vera_layer_mode_tile::tilebase
char vera_layer_mode_tile::tilebase#0 // reg byte a 2002.0
char vera_layer_mode_tile::tilebase#1 // reg byte x 1334.6666666666667
char vera_layer_mode_tile::tilebase#10 // reg byte x 2002.0
char vera_layer_mode_tile::tilebase#12 // reg byte x 2002.0000000000002
char vera_layer_mode_tile::tilebase#3 // reg byte x 2002.0
char vera_layer_mode_tile::tilebase#5 // reg byte x 2002.0
unsigned long vera_layer_mode_tile::tilebase_address
unsigned long vera_layer_mode_tile::tilebase_address#0 // tilebase_address zp[4]:49 2002.0
unsigned long vera_layer_mode_tile::tilebase_address#10 // tilebase_address_1 zp[4]:78 72.8
char vera_layer_mode_tile::tileheight
char vera_layer_mode_tile::tileheight#10 // tileheight zp[1]:85 31.77777777777778
char vera_layer_mode_tile::tilewidth
char vera_layer_mode_tile::tilewidth#10 // tilewidth zp[1]:84 33.932203389830505
__constant char vera_layer_rowshift[2] = { 0, 0 }
__constant unsigned int vera_layer_rowskip[2] = { 0, 0 }
char vera_layer_set_backcolor(char layer , char color)
char vera_layer_set_backcolor::color
char vera_layer_set_backcolor::color#3 // reg byte a 101.0
char vera_layer_set_backcolor::layer
char vera_layer_set_backcolor::layer#1 // reg byte y 22.0
char vera_layer_set_backcolor::layer#2 // reg byte y 22.0
char vera_layer_set_backcolor::layer#3 // reg byte y 123.0
char vera_layer_set_backcolor::old
char vera_layer_set_backcolor::return
void vera_layer_set_config(char layer , char config)
char vera_layer_set_config::$0 // reg byte a 20002.0
char *vera_layer_set_config::addr
char *vera_layer_set_config::addr#0 // addr zp[2]:34 20002.0
char vera_layer_set_config::config
char vera_layer_set_config::config#0 // reg byte x 3667.333333333333
char vera_layer_set_config::layer
char vera_layer_set_config::layer#0 // reg byte a 5501.0
void vera_layer_set_mapbase(char layer , char mapbase)
char vera_layer_set_mapbase::$0 // reg byte a 20002.0
char *vera_layer_set_mapbase::addr
char *vera_layer_set_mapbase::addr#0 // addr zp[2]:34 20002.0
char vera_layer_set_mapbase::layer
char vera_layer_set_mapbase::layer#0 // reg byte a 1001.0
char vera_layer_set_mapbase::layer#3 // reg byte a 11002.0
char vera_layer_set_mapbase::mapbase
char vera_layer_set_mapbase::mapbase#0 // reg byte x 2002.0
char vera_layer_set_mapbase::mapbase#3 // reg byte x 3667.333333333333
void vera_layer_set_text_color_mode(char layer , char color_mode)
char *vera_layer_set_text_color_mode::addr
char *vera_layer_set_text_color_mode::addr#0 // addr zp[2]:34 2502.5
char vera_layer_set_text_color_mode::color_mode
char vera_layer_set_text_color_mode::layer
char vera_layer_set_textcolor(char layer , char color)
char vera_layer_set_textcolor::color
char vera_layer_set_textcolor::layer
char vera_layer_set_textcolor::layer#1 // reg byte y 22.0
char vera_layer_set_textcolor::layer#2 // reg byte y 22.0
char vera_layer_set_textcolor::layer#3 // reg byte y 123.0
char vera_layer_set_textcolor::old
char vera_layer_set_textcolor::return
void vera_layer_set_tilebase(char layer , char tilebase)
char vera_layer_set_tilebase::$0 // reg byte a 20002.0
char *vera_layer_set_tilebase::addr
char *vera_layer_set_tilebase::addr#0 // addr zp[2]:34 20002.0
char vera_layer_set_tilebase::layer
char vera_layer_set_tilebase::layer#0 // reg byte a 5501.0
char vera_layer_set_tilebase::tilebase
char vera_layer_set_tilebase::tilebase#0 // reg byte x 3667.333333333333
__constant char vera_layer_textcolor[2] = { WHITE, WHITE }
__constant char *vera_layer_tilebase[2] = { VERA_L0_TILEBASE, VERA_L1_TILEBASE }
__constant const char vera_layer_vflip[2] = { 0, 8 }
__constant unsigned long vera_mapbase_address[2] = { 0, 0 }
__constant char vera_mapbase_bank[2] = { 0, 0 }
__constant unsigned int vera_mapbase_offset[2] = { 0, 0 }
void vera_tile_area(char layer , unsigned int tileindex , char x , char y , char w , char h , char hflip , char vflip , char offset)
unsigned int vera_tile_area::$10 // zp[2]:8 20002.0
unsigned int vera_tile_area::$4 // zp[2]:8 20002.0
char vera_tile_area::$5 // reg byte a 20002.0
char vera_tile_area::c
char vera_tile_area::c#1 // reg byte y 2.00000002E8
char vera_tile_area::c#2 // reg byte y 7.500000075E7
char vera_tile_area::h
char vera_tile_area::h#6 // h zp[1]:32 312500.03125
char vera_tile_area::hflip
char vera_tile_area::hflip#0 // hflip zp[1]:40 5000.5
char vera_tile_area::index_h
char vera_tile_area::index_h#0 // reg byte a 20002.0
char vera_tile_area::index_h#1 // reg byte a 20002.0
char vera_tile_area::index_h#2 // index_h zp[1]:27 4348260.956521738
char vera_tile_area::index_l
char vera_tile_area::index_l#0 // index_l zp[1]:28 3846538.5384615385
char vera_tile_area::layer
unsigned long vera_tile_area::mapbase
unsigned long vera_tile_area::mapbase#0 // mapbase zp[4]:20 1818.3636363636363
unsigned long vera_tile_area::mapbase#1 // mapbase zp[4]:20 10001.0
unsigned long vera_tile_area::mapbase#10 // mapbase zp[4]:20 3334000.4
unsigned long vera_tile_area::mapbase#2 // mapbase zp[4]:20 20002.0
unsigned long vera_tile_area::mapbase#3 // mapbase zp[4]:20 1.0000001E7
char vera_tile_area::offset
char vera_tile_area::r
char vera_tile_area::r#1 // r zp[1]:11 2.0000002E7
char vera_tile_area::r#2 // r zp[1]:11 1875000.1875
unsigned int vera_tile_area::rowskip
unsigned int vera_tile_area::rowskip#0 // rowskip zp[2]:30 345172.4827586207
char vera_tile_area::shift
char vera_tile_area::shift#0 // shift zp[1]:42 3333.6666666666665
unsigned int vera_tile_area::tileindex
unsigned int vera_tile_area::tileindex#1 // tileindex zp[2]:36 667.3333333333334
unsigned int vera_tile_area::tileindex#3 // tileindex zp[2]:36 667.3333333333334
unsigned int vera_tile_area::tileindex#5 // tileindex zp[2]:36 3143.4285714285716
char vera_tile_area::vera_vram_address01_$0 // reg byte a 2.0000002E7
char vera_tile_area::vera_vram_address01_$1 // reg byte a 2.0000002E7
char vera_tile_area::vera_vram_address01_$2 // reg byte a 2.0000002E7
char vera_tile_area::vera_vram_address01_$3 // reg byte a 2.0000002E7
unsigned long vera_tile_area::vera_vram_address01_bankaddr
char vera_tile_area::vera_vram_address01_incr
char vera_tile_area::vflip
char vera_tile_area::vflip#0 // vflip zp[1]:27 5000.5
char vera_tile_area::w
char vera_tile_area::w#11 // w zp[1]:14 3125000.03125
char vera_tile_area::x
char vera_tile_area::x#1 // x zp[1]:41 1001.0
char vera_tile_area::x#3 // x zp[1]:41 1001.0
char vera_tile_area::x#5 // x zp[1]:41 923.3076923076923
char vera_tile_area::y
char vera_tile_area::y#1 // y zp[1]:10 2002.0
char vera_tile_area::y#3 // y zp[1]:10 2002.0
char vera_tile_area::y#5 // y zp[1]:10 200.2
__constant unsigned long vera_tilebase_address[2] = { 0, 0 }
__constant char vera_tilebase_bank[2] = { 0, 0 }
__constant unsigned int vera_tilebase_offset[2] = { 0, 0 }

zp[1]:82 [ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ]
zp[2]:18 [ CONIO_SCREEN_TEXT#12 ]
zp[1]:57 [ CONIO_SCREEN_BANK#12 ]
zp[2]:72 [ main::tilebase#7 main::tilebase#2 ]
zp[1]:63 [ main::t#5 main::t#1 ]
reg byte x [ main::p#2 main::p#1 ]
zp[1]:64 [ main::row#9 main::row#1 ]
zp[1]:66 [ main::r#5 main::r#1 ]
zp[2]:36 [ main::tile#6 main::tile#10 main::tile#12 main::tile#1 vera_tile_area::tileindex#5 vera_tile_area::tileindex#3 vera_tile_area::tileindex#1 main::tile#8 main::tile#11 main::tile#13 main::tile#4 ]
reg byte x [ main::column#2 main::column#1 ]
zp[1]:55 [ main::c#2 main::c#1 ]
zp[1]:65 [ main::row#10 main::row#3 ]
zp[1]:67 [ main::r1#5 main::r1#1 ]
zp[1]:41 [ main::column1#2 main::column1#1 vera_tile_area::x#5 vera_tile_area::x#3 vera_tile_area::x#1 ]
reg byte x [ main::c1#2 main::c1#1 ]
reg byte y [ vera_layer_set_textcolor::layer#3 vera_layer_set_textcolor::layer#1 vera_layer_set_textcolor::layer#2 ]
reg byte y [ vera_layer_set_backcolor::layer#3 vera_layer_set_backcolor::layer#1 vera_layer_set_backcolor::layer#2 ]
reg byte a [ vera_layer_set_backcolor::color#3 ]
reg byte a [ vera_layer_set_mapbase::layer#3 vera_layer_set_mapbase::layer#0 ]
reg byte x [ vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::mapbase#0 ]
reg byte x [ gotoxy::y#5 gotoxy::y#4 gotoxy::y#1 gotoxy::y#2 ]
reg byte x [ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ]
reg byte a [ vera_layer_get_color::return#3 vera_layer_get_color::return#1 vera_layer_get_color::return#2 ]
reg byte y [ memcpy_in_vram::src_bank#3 ]
reg byte x [ vera_layer_mode_tile::color_depth#5 ]
zp[1]:62 [ vera_layer_mode_tile::layer#10 ]
zp[2]:68 [ vera_layer_mode_tile::mapheight#10 ]
zp[4]:74 [ vera_layer_mode_tile::mapbase_address#10 ]
zp[4]:78 [ vera_layer_mode_tile::tilebase_address#10 ]
zp[1]:84 [ vera_layer_mode_tile::tilewidth#10 ]
zp[1]:85 [ vera_layer_mode_tile::tileheight#10 ]
reg byte x [ vera_layer_mode_tile::config#25 vera_layer_mode_tile::config#21 vera_layer_mode_tile::config#17 vera_layer_mode_tile::config#6 vera_layer_mode_tile::config#7 vera_layer_mode_tile::config#8 vera_layer_mode_tile::config#10 vera_layer_mode_tile::config#11 vera_layer_mode_tile::config#12 ]
reg byte x [ vera_layer_mode_tile::tilebase#10 vera_layer_mode_tile::tilebase#12 vera_layer_mode_tile::tilebase#1 vera_layer_mode_tile::tilebase#3 vera_layer_mode_tile::tilebase#5 ]
reg byte y [ clrscr::c#2 clrscr::c#1 ]
zp[4]:20 [ vera_tile_area::mapbase#10 vera_tile_area::mapbase#2 vera_tile_area::mapbase#3 vera_tile_area::mapbase#1 vera_tile_area::mapbase#0 ]
reg byte y [ vera_tile_area::c#2 vera_tile_area::c#1 ]
reg byte x [ insertup::i#2 insertup::i#1 ]
zp[2]:2 [ clearline::c#2 clearline::c#1 memcpy_in_vram::i#2 memcpy_in_vram::i#1 ]
zp[1]:15 [ conio_screen_width ]
zp[1]:33 [ conio_screen_height ]
zp[1]:29 [ conio_screen_layer ]
zp[2]:70 [ conio_width ]
zp[2]:38 [ conio_height ]
zp[1]:24 [ conio_rowshift ]
zp[2]:25 [ conio_rowskip ]
zp[1]:10 [ cputc::c#0 vera_tile_area::y#5 vera_tile_area::y#3 vera_tile_area::y#1 clrscr::l#2 clrscr::l#1 memcpy_in_vram::dest_bank#3 ]
reg byte a [ vera_layer_get_color::return#0 ]
reg byte x [ cputc::color#0 ]
reg byte a [ cputc::$15 ]
reg byte a [ cputc::$2 ]
reg byte a [ cputc::$4 ]
reg byte a [ cputc::$5 ]
reg byte a [ cputc::$6 ]
reg byte a [ cputc::scroll_enable#0 ]
zp[2]:6 [ cputc::$16 clrscr::line_text#2 clrscr::line_text#1 clrscr::line_text#0 memcpy_in_vram::src#3 memcpy_in_vram::src#4 memcpy_in_vram::src#0 ]
reg byte a [ kbhit::return#2 ]
reg byte a [ main::$35 ]
reg byte a [ kbhit::return#3 ]
reg byte a [ main::$40 ]
reg byte a [ main::vera_layer_hide1_$0 ]
reg byte a [ screensize::hscale#0 ]
reg byte a [ screensize::$1 ]
reg byte a [ screensize::vscale#0 ]
reg byte a [ screensize::$3 ]
reg byte y [ vera_layer_get_mapbase_bank::layer#0 ]
reg byte x [ vera_layer_get_mapbase_bank::return#2 ]
reg byte x [ CONIO_SCREEN_BANK#15 ]
reg byte a [ vera_layer_get_mapbase_offset::layer#0 ]
zp[2]:86 [ CONIO_SCREEN_TEXT#17 ]
reg byte a [ screenlayer::vera_layer_get_width1_layer#0 ]
reg byte a [ screenlayer::vera_layer_get_width1_$2 ]
reg byte a [ screenlayer::vera_layer_get_width1_$0 ]
reg byte a [ screenlayer::vera_layer_get_width1_$1 ]
reg byte a [ screenlayer::vera_layer_get_width1_$3 ]
reg byte y [ vera_layer_get_rowshift::layer#0 ]
reg byte a [ vera_layer_get_rowshift::return#2 ]
reg byte a [ screenlayer::$3 ]
reg byte a [ vera_layer_get_rowskip::layer#0 ]
reg byte a [ screenlayer::vera_layer_get_height1_layer#0 ]
reg byte a [ screenlayer::vera_layer_get_height1_$2 ]
reg byte a [ screenlayer::vera_layer_get_height1_$0 ]
reg byte a [ screenlayer::vera_layer_get_height1_$1 ]
reg byte a [ screenlayer::vera_layer_get_height1_$3 ]
zp[2]:58 [ screenlayer::vera_layer_get_height1_return#0 screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 ]
reg byte a [ vera_layer_set_mapbase::$0 ]
zp[2]:16 [ gotoxy::$6 gotoxy::line_offset#0 screenlayer::vera_layer_get_width1_return#0 screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 vera_layer_get_mapbase_offset::return#2 vera_layer_get_mapbase_offset::return#0 vera_layer_mode_tile::mapwidth#10 ]
reg byte a [ gotoxy::$5 ]
reg byte a [ vera_layer_get_color::$3 ]
reg byte a [ vera_layer_get_color::$0 ]
reg byte a [ vera_layer_get_color::$1 ]
reg byte a [ cputln::$2 ]
zp[2]:4 [ cputln::temp#0 cputln::temp#1 vera_layer_get_color::addr#0 memcpy_to_vram::s#2 memcpy_to_vram::s#1 memcpy_in_vram::num#4 memcpy_in_vram::num#0 ]
reg byte a [ cputln::$3 ]
reg byte a [ memcpy_in_vram::$0 ]
reg byte a [ memcpy_in_vram::$1 ]
reg byte a [ memcpy_in_vram::$2 ]
reg byte a [ memcpy_in_vram::$3 ]
reg byte a [ memcpy_in_vram::$4 ]
reg byte a [ memcpy_in_vram::$5 ]
reg byte a [ vera_layer_mode_tile::$14 ]
reg byte a [ vera_layer_set_config::layer#0 ]
reg byte x [ vera_layer_set_config::config#0 ]
zp[2]:53 [ vera_layer_mode_tile::$1 vera_layer_get_rowskip::return#2 screenlayer::$4 vera_layer_get_rowskip::return#0 ]
zp[1]:61 [ vera_layer_mode_tile::$17 ]
reg byte a [ vera_layer_mode_tile::$2 ]
zp[1]:60 [ vera_layer_mode_tile::$18 ]
zp[4]:45 [ vera_layer_mode_tile::mapbase_address#0 ]
reg byte x [ vera_layer_mode_tile::mapbase#0 ]
zp[2]:43 [ vera_layer_mode_tile::$6 screenlayer::vera_layer_get_height1_config#0 ]
reg byte a [ vera_layer_mode_tile::$7 ]
zp[4]:49 [ vera_layer_mode_tile::tilebase_address#0 ]
reg byte a [ vera_layer_mode_tile::tilebase#0 ]
reg byte a [ vera_layer_set_tilebase::layer#0 ]
reg byte x [ vera_layer_set_tilebase::tilebase#0 ]
reg byte a [ vera_layer_mode_tile::$13 ]
reg byte a [ vera_layer_mode_tile::$12 ]
reg byte a [ vera_layer_mode_tile::$11 ]
reg byte y [ vera_layer_get_backcolor::layer#0 ]
reg byte a [ vera_layer_get_backcolor::return#0 ]
reg byte a [ clrscr::$0 ]
zp[1]:83 [ clrscr::$1 ]
reg byte y [ vera_layer_get_textcolor::layer#0 ]
reg byte a [ vera_layer_get_textcolor::return#0 ]
reg byte a [ clrscr::$2 ]
zp[1]:32 [ clrscr::color#0 vera_tile_area::h#6 ]
reg byte a [ clrscr::$9 ]
reg byte a [ clrscr::$5 ]
reg byte a [ clrscr::$6 ]
reg byte a [ clrscr::$7 ]
reg byte a [ memcpy_to_vram::$0 ]
reg byte a [ memcpy_to_vram::$1 ]
zp[1]:42 [ vera_tile_area::shift#0 ]
zp[2]:30 [ vera_tile_area::rowskip#0 printf_str::s#9 printf_str::s#10 printf_str::s#0 ]
zp[1]:40 [ vera_tile_area::hflip#0 ]
zp[1]:27 [ vera_tile_area::vflip#0 vera_tile_area::index_h#2 ]
zp[1]:28 [ vera_tile_area::index_l#0 ]
reg byte a [ vera_tile_area::index_h#0 ]
reg byte a [ vera_tile_area::index_h#1 ]
zp[2]:8 [ vera_tile_area::$10 vera_tile_area::$4 cputc::conio_addr#0 cputc::conio_addr#1 memcpy_to_vram::vdest#2 memcpy_to_vram::vdest#1 memcpy_in_vram::dest#3 memcpy_in_vram::dest#0 insertup::start#0 insertup::line#0 ]
reg byte a [ vera_tile_area::$5 ]
reg byte a [ vera_tile_area::vera_vram_address01_$0 ]
reg byte a [ vera_tile_area::vera_vram_address01_$1 ]
reg byte a [ vera_tile_area::vera_vram_address01_$2 ]
reg byte a [ vera_tile_area::vera_vram_address01_$3 ]
reg byte a [ printf_str::c#1 ]
zp[1]:56 [ kbhit::ch ]
reg byte a [ kbhit::return#0 ]
reg byte a [ kbhit::return#1 ]
reg byte x [ vera_layer_get_mapbase_bank::return#0 ]
reg byte a [ vera_layer_get_mapbase_offset::$0 ]
reg byte a [ vera_layer_get_rowshift::return#0 ]
reg byte a [ vera_layer_get_rowskip::$0 ]
reg byte a [ vera_layer_set_config::$0 ]
reg byte a [ vera_layer_set_tilebase::$0 ]
zp[2]:34 [ vera_layer_set_tilebase::addr#0 vera_layer_set_config::addr#0 vera_layer_set_text_color_mode::addr#0 vera_layer_set_mapbase::addr#0 screenlayer::vera_layer_get_width1_config#0 ]
reg byte a [ vera_layer_get_backcolor::return#1 ]
reg byte a [ vera_layer_get_textcolor::return#1 ]
zp[1]:14 [ insertup::cy#0 vera_tile_area::w#11 ]
zp[1]:11 [ insertup::width#0 vera_tile_area::r#2 vera_tile_area::r#1 ]
reg byte a [ insertup::$3 ]
reg byte a [ clearline::$5 ]
zp[2]:12 [ clearline::addr#0 ]
reg byte a [ clearline::$1 ]
reg byte a [ clearline::$2 ]
reg byte a [ vera_layer_get_color::return#4 ]
reg byte x [ clearline::color#0 ]
