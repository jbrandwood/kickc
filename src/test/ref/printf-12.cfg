
void __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] conio_cursor_x = 0
  [2] conio_cursor_y = 0
  [3] conio_line_text = DEFAULT_SCREEN
  [4] conio_line_color = COLORRAM
  [5] call conio_c64_init
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  [6] phi()
  [7] call main
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [8] return 
  to:@return

void conio_c64_init()
conio_c64_init: scope:[conio_c64_init]  from __start::__init1
  [9] conio_c64_init::line#0 = *conio_c64_init::BASIC_CURSOR_LINE
  [10] if(conio_c64_init::line#0<$19) goto conio_c64_init::@2
  to:conio_c64_init::@1
conio_c64_init::@2: scope:[conio_c64_init]  from conio_c64_init
  [11] phi()
  to:conio_c64_init::@1
conio_c64_init::@1: scope:[conio_c64_init]  from conio_c64_init conio_c64_init::@2
  [12] conio_c64_init::line#2 = phi( conio_c64_init::@2/conio_c64_init::line#0, conio_c64_init/$19-1 )
  [13] gotoxy::y#2 = conio_c64_init::line#2
  [14] call gotoxy
  to:conio_c64_init::@return
conio_c64_init::@return: scope:[conio_c64_init]  from conio_c64_init::@1
  [15] return 
  to:@return

__stackcall void cputc(char c)
cputc: scope:[cputc]  from
  [16] cputc::c#0 = stackidx(char,cputc::OFFSET_STACK_C)
  [17] if(cputc::c#0=='
') goto cputc::@1
  to:cputc::@2
cputc::@2: scope:[cputc]  from cputc
  [18] conio_line_text[conio_cursor_x] = cputc::c#0
  [19] conio_line_color[conio_cursor_x] = LIGHT_BLUE
  [20] conio_cursor_x = ++ conio_cursor_x
  [21] if(conio_cursor_x!=$28) goto cputc::@return
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc::@2
  [22] phi()
  [23] call cputln
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@1 cputc::@2 cputc::@3
  [24] return 
  to:@return
cputc::@1: scope:[cputc]  from cputc
  [25] phi()
  [26] call cputln
  to:cputc::@return

void main()
main: scope:[main]  from __start::@1
  [27] phi()
  [28] call clrscr
  to:main::@1
main::@1: scope:[main]  from main
  [29] main::c = 'x'
  [30] call printf_str
  to:main::@2
main::@2: scope:[main]  from main::@1
  [31] stackpush(char) = main::c
  [32] callexecute cputc 
  sideeffect stackpullpadding(1)
  [34] call printf_str
  to:main::@3
main::@3: scope:[main]  from main::@2
  [35] phi()
  [36] call printf_str
  to:main::@4
main::@4: scope:[main]  from main::@3
  [37] phi()
  [38] call printf_uint
  to:main::@5
main::@5: scope:[main]  from main::@4
  [39] phi()
  [40] call printf_str
  to:main::@6
main::@6: scope:[main]  from main::@5
  [41] phi()
  [42] call printf_str
  to:main::@7
main::@7: scope:[main]  from main::@6
  [43] stackpush(char) = '%'
  [44] callexecute cputc 
  sideeffect stackpullpadding(1)
  [46] call printf_str
  to:main::@8
main::@8: scope:[main]  from main::@7
  [47] phi()
  [48] call printf_str
  to:main::@9
main::@9: scope:[main]  from main::@8
  [49] phi()
  [50] call printf_schar
  to:main::@10
main::@10: scope:[main]  from main::@9
  [51] phi()
  [52] call printf_str
  to:main::@11
main::@11: scope:[main]  from main::@10
  [53] phi()
  [54] call printf_str
  to:main::@12
main::@12: scope:[main]  from main::@11
  [55] phi()
  [56] call printf_uchar
  to:main::@13
main::@13: scope:[main]  from main::@12
  [57] phi()
  [58] call printf_str
  to:main::@14
main::@14: scope:[main]  from main::@13
  [59] phi()
  [60] call printf_str
  to:main::@15
main::@15: scope:[main]  from main::@14
  [61] phi()
  [62] call printf_sint
  to:main::@16
main::@16: scope:[main]  from main::@15
  [63] phi()
  [64] call printf_str
  to:main::@17
main::@17: scope:[main]  from main::@16
  [65] phi()
  [66] call printf_str
  to:main::@18
main::@18: scope:[main]  from main::@17
  [67] phi()
  [68] call printf_uint
  to:main::@19
main::@19: scope:[main]  from main::@18
  [69] phi()
  [70] call printf_str
  to:main::@20
main::@20: scope:[main]  from main::@19
  [71] phi()
  [72] call printf_str
  to:main::@21
main::@21: scope:[main]  from main::@20
  [73] phi()
  [74] call printf_slong
  to:main::@22
main::@22: scope:[main]  from main::@21
  [75] phi()
  [76] call printf_str
  to:main::@23
main::@23: scope:[main]  from main::@22
  [77] phi()
  [78] call printf_str
  to:main::@24
main::@24: scope:[main]  from main::@23
  [79] phi()
  [80] call printf_ulong
  to:main::@25
main::@25: scope:[main]  from main::@24
  [81] phi()
  [82] call printf_str
  to:main::@return
main::@return: scope:[main]  from main::@25
  [83] return 
  to:@return

void gotoxy(char x , char y)
gotoxy: scope:[gotoxy]  from conio_c64_init::@1
  [84] if(gotoxy::y#2<$19+1) goto gotoxy::@3
  to:gotoxy::@1
gotoxy::@3: scope:[gotoxy]  from gotoxy
  [85] phi()
  to:gotoxy::@1
gotoxy::@1: scope:[gotoxy]  from gotoxy gotoxy::@3
  [86] gotoxy::y#4 = phi( gotoxy::@3/gotoxy::y#2, gotoxy/0 )
  to:gotoxy::@2
gotoxy::@2: scope:[gotoxy]  from gotoxy::@1
  [87] conio_cursor_x = gotoxy::x#2
  [88] conio_cursor_y = gotoxy::y#4
  [89] gotoxy::$7 = (unsigned int)gotoxy::y#4
  [90] gotoxy::$8 = gotoxy::$7 << 2
  [91] gotoxy::$9 = gotoxy::$8 + gotoxy::$7
  [92] gotoxy::line_offset#0 = gotoxy::$9 << 3
  [93] gotoxy::$5 = DEFAULT_SCREEN + gotoxy::line_offset#0
  [94] conio_line_text = gotoxy::$5
  [95] gotoxy::$6 = COLORRAM + gotoxy::line_offset#0
  [96] conio_line_color = gotoxy::$6
  to:gotoxy::@return
gotoxy::@return: scope:[gotoxy]  from gotoxy::@2
  [97] return 
  to:@return

void cputln()
cputln: scope:[cputln]  from cputc::@1 cputc::@3
  [98] conio_line_text = conio_line_text + $28
  [99] conio_line_color = conio_line_color + $28
  [100] conio_cursor_x = 0
  [101] conio_cursor_y = ++ conio_cursor_y
  [102] call cscroll
  to:cputln::@return
cputln::@return: scope:[cputln]  from cputln
  [103] return 
  to:@return

void clrscr()
clrscr: scope:[clrscr]  from main
  [104] phi()
  to:clrscr::@1
clrscr::@1: scope:[clrscr]  from clrscr clrscr::@5
  [105] clrscr::line_cols#5 = phi( clrscr/COLORRAM, clrscr::@5/clrscr::line_cols#1 )
  [105] clrscr::line_text#5 = phi( clrscr/DEFAULT_SCREEN, clrscr::@5/clrscr::line_text#1 )
  [105] clrscr::l#2 = phi( clrscr/0, clrscr::@5/clrscr::l#1 )
  [106] if(clrscr::l#2<$19) goto clrscr::@3
  to:clrscr::@2
clrscr::@2: scope:[clrscr]  from clrscr::@1
  [107] conio_cursor_x = 0
  [108] conio_cursor_y = 0
  [109] conio_line_text = DEFAULT_SCREEN
  [110] conio_line_color = COLORRAM
  to:clrscr::@return
clrscr::@return: scope:[clrscr]  from clrscr::@2
  [111] return 
  to:@return
clrscr::@3: scope:[clrscr]  from clrscr::@1 clrscr::@4
  [112] clrscr::c#2 = phi( clrscr::@1/0, clrscr::@4/clrscr::c#1 )
  [113] if(clrscr::c#2<$28) goto clrscr::@4
  to:clrscr::@5
clrscr::@5: scope:[clrscr]  from clrscr::@3
  [114] clrscr::line_text#1 = clrscr::line_text#5 + $28
  [115] clrscr::line_cols#1 = clrscr::line_cols#5 + $28
  [116] clrscr::l#1 = ++ clrscr::l#2
  to:clrscr::@1
clrscr::@4: scope:[clrscr]  from clrscr::@3
  [117] clrscr::line_text#5[clrscr::c#2] = ' '
  [118] clrscr::line_cols#5[clrscr::c#2] = LIGHT_BLUE
  [119] clrscr::c#1 = ++ clrscr::c#2
  to:clrscr::@3

void printf_str(void (*putc)(char) , const char *s)
printf_str: scope:[printf_str]  from main::@1 main::@10 main::@11 main::@13 main::@14 main::@16 main::@17 main::@19 main::@2 main::@20 main::@22 main::@23 main::@25 main::@3 main::@5 main::@6 main::@7 main::@8 printf_number_buffer::@5
  [120] printf_str::putc#21 = phi( main::@1/&cputc, main::@10/&cputc, main::@11/&cputc, main::@13/&cputc, main::@14/&cputc, main::@16/&cputc, main::@17/&cputc, main::@19/&cputc, main::@2/&cputc, main::@20/&cputc, main::@22/&cputc, main::@23/&cputc, main::@25/&cputc, main::@3/&cputc, main::@5/&cputc, main::@6/&cputc, main::@7/&cputc, main::@8/&cputc, printf_number_buffer::@5/printf_str::putc#0 )
  [120] printf_str::s#21 = phi( main::@1/main::s, main::@10/main::s1, main::@11/main::s8, main::@13/main::s1, main::@14/main::s10, main::@16/main::s1, main::@17/main::s12, main::@19/main::s1, main::@2/main::s1, main::@20/main::s14, main::@22/main::s1, main::@23/main::s16, main::@25/main::s1, main::@3/main::s2, main::@5/main::s1, main::@6/main::s4, main::@7/main::s1, main::@8/main::s6, printf_number_buffer::@5/(char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  to:printf_str::@1
printf_str::@1: scope:[printf_str]  from printf_str printf_str::@2
  [121] printf_str::s#20 = phi( printf_str/printf_str::s#21, printf_str::@2/printf_str::s#0 )
  [122] printf_str::c#1 = *printf_str::s#20
  [123] printf_str::s#0 = ++ printf_str::s#20
  [124] if(0!=printf_str::c#1) goto printf_str::@2
  to:printf_str::@return
printf_str::@return: scope:[printf_str]  from printf_str::@1
  [125] return 
  to:@return
printf_str::@2: scope:[printf_str]  from printf_str::@1
  [126] stackpush(char) = printf_str::c#1
  [127] callexecute *printf_str::putc#21 
  sideeffect stackpullpadding(1)
  to:printf_str::@1

void printf_uint(void (*putc)(char) , unsigned int uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
printf_uint: scope:[printf_uint]  from main::@18 main::@4
  [129] printf_uint::format_radix#2 = phi( main::@18/DECIMAL, main::@4/HEXADECIMAL )
  [129] printf_uint::uvalue#2 = phi( main::@18/main::ui, main::@4/(unsigned int)&main::c )
  to:printf_uint::@1
printf_uint::@1: scope:[printf_uint]  from printf_uint
  [130] *((char *)&printf_buffer) = 0
  [131] utoa::value#2 = printf_uint::uvalue#2
  [132] utoa::radix#1 = printf_uint::format_radix#2
  [133] call utoa
  to:printf_uint::@2
printf_uint::@2: scope:[printf_uint]  from printf_uint::@1
  [134] printf_number_buffer::buffer_sign#3 = *((char *)&printf_buffer)
  [135] call printf_number_buffer
  to:printf_uint::@return
printf_uint::@return: scope:[printf_uint]  from printf_uint::@2
  [136] return 
  to:@return

void printf_schar(void (*putc)(char) , signed char value , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
printf_schar: scope:[printf_schar]  from main::@9
  [137] *((char *)&printf_buffer) = 0
  to:printf_schar::@1
printf_schar::@1: scope:[printf_schar]  from printf_schar
  [138] *((char *)&printf_buffer) = '-'
  to:printf_schar::@2
printf_schar::@2: scope:[printf_schar]  from printf_schar::@1
  [139] phi()
  [140] call uctoa
  to:printf_schar::@3
printf_schar::@3: scope:[printf_schar]  from printf_schar::@2
  [141] printf_number_buffer::buffer_sign#4 = *((char *)&printf_buffer)
  [142] call printf_number_buffer
  to:printf_schar::@return
printf_schar::@return: scope:[printf_schar]  from printf_schar::@3
  [143] return 
  to:@return

void printf_uchar(void (*putc)(char) , char uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
printf_uchar: scope:[printf_uchar]  from main::@12
  [144] phi()
  to:printf_uchar::@1
printf_uchar::@1: scope:[printf_uchar]  from printf_uchar
  [145] *((char *)&printf_buffer) = 0
  [146] call uctoa
  to:printf_uchar::@2
printf_uchar::@2: scope:[printf_uchar]  from printf_uchar::@1
  [147] printf_number_buffer::buffer_sign#5 = *((char *)&printf_buffer)
  [148] call printf_number_buffer
  to:printf_uchar::@return
printf_uchar::@return: scope:[printf_uchar]  from printf_uchar::@2
  [149] return 
  to:@return

void printf_sint(void (*putc)(char) , int value , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
printf_sint: scope:[printf_sint]  from main::@15
  [150] *((char *)&printf_buffer) = 0
  to:printf_sint::@1
printf_sint::@1: scope:[printf_sint]  from printf_sint
  [151] *((char *)&printf_buffer) = '-'
  to:printf_sint::@2
printf_sint::@2: scope:[printf_sint]  from printf_sint::@1
  [152] phi()
  [153] call utoa
  to:printf_sint::@3
printf_sint::@3: scope:[printf_sint]  from printf_sint::@2
  [154] printf_number_buffer::buffer_sign#2 = *((char *)&printf_buffer)
  [155] call printf_number_buffer
  to:printf_sint::@return
printf_sint::@return: scope:[printf_sint]  from printf_sint::@3
  [156] return 
  to:@return

void printf_slong(void (*putc)(char) , long value , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
printf_slong: scope:[printf_slong]  from main::@21
  [157] *((char *)&printf_buffer) = 0
  to:printf_slong::@1
printf_slong::@1: scope:[printf_slong]  from printf_slong
  [158] *((char *)&printf_buffer) = '-'
  to:printf_slong::@2
printf_slong::@2: scope:[printf_slong]  from printf_slong::@1
  [159] phi()
  [160] call ultoa
  to:printf_slong::@3
printf_slong::@3: scope:[printf_slong]  from printf_slong::@2
  [161] printf_number_buffer::buffer_sign#0 = *((char *)&printf_buffer)
  [162] call printf_number_buffer
  to:printf_slong::@return
printf_slong::@return: scope:[printf_slong]  from printf_slong::@3
  [163] return 
  to:@return

void printf_ulong(void (*putc)(char) , unsigned long uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
printf_ulong: scope:[printf_ulong]  from main::@24
  [164] phi()
  to:printf_ulong::@1
printf_ulong::@1: scope:[printf_ulong]  from printf_ulong
  [165] *((char *)&printf_buffer) = 0
  [166] call ultoa
  to:printf_ulong::@2
printf_ulong::@2: scope:[printf_ulong]  from printf_ulong::@1
  [167] printf_number_buffer::buffer_sign#1 = *((char *)&printf_buffer)
  [168] call printf_number_buffer
  to:printf_ulong::@return
printf_ulong::@return: scope:[printf_ulong]  from printf_ulong::@2
  [169] return 
  to:@return

void cscroll()
cscroll: scope:[cscroll]  from cputln
  [170] if(conio_cursor_y!=$19) goto cscroll::@return
  to:cscroll::@1
cscroll::@1: scope:[cscroll]  from cscroll
  [171] phi()
  [172] call memcpy
  to:cscroll::@2
cscroll::@2: scope:[cscroll]  from cscroll::@1
  [173] phi()
  [174] call memcpy
  to:cscroll::@3
cscroll::@3: scope:[cscroll]  from cscroll::@2
  [175] phi()
  [176] call memset
  to:cscroll::@4
cscroll::@4: scope:[cscroll]  from cscroll::@3
  [177] phi()
  [178] call memset
  to:cscroll::@5
cscroll::@5: scope:[cscroll]  from cscroll::@4
  [179] conio_line_text = conio_line_text - $28
  [180] conio_line_color = conio_line_color - $28
  [181] conio_cursor_y = -- conio_cursor_y
  to:cscroll::@return
cscroll::@return: scope:[cscroll]  from cscroll cscroll::@5
  [182] return 
  to:@return

void utoa(unsigned int value , char *buffer , char radix)
utoa: scope:[utoa]  from printf_sint::@2 printf_uint::@1
  [183] utoa::value#10 = phi( printf_sint::@2/printf_sint::uvalue#0, printf_uint::@1/utoa::value#2 )
  [183] utoa::radix#2 = phi( printf_sint::@2/DECIMAL, printf_uint::@1/utoa::radix#1 )
  [184] if(utoa::radix#2==DECIMAL) goto utoa::@1
  to:utoa::@2
utoa::@2: scope:[utoa]  from utoa
  [185] if(utoa::radix#2==HEXADECIMAL) goto utoa::@1
  to:utoa::@3
utoa::@3: scope:[utoa]  from utoa::@2
  [186] if(utoa::radix#2==OCTAL) goto utoa::@1
  to:utoa::@4
utoa::@4: scope:[utoa]  from utoa::@3
  [187] if(utoa::radix#2==BINARY) goto utoa::@1
  to:utoa::@5
utoa::@5: scope:[utoa]  from utoa::@4
  [188] *((char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS) = 'e'
  [189] *((char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+1) = 'r'
  [190] *((char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+2) = 'r'
  [191] *((char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+3) = 0
  to:utoa::@return
utoa::@return: scope:[utoa]  from utoa::@5 utoa::@8
  [192] return 
  to:@return
utoa::@1: scope:[utoa]  from utoa utoa::@2 utoa::@3 utoa::@4
  [193] utoa::digit_values#8 = phi( utoa/RADIX_DECIMAL_VALUES, utoa::@2/RADIX_HEXADECIMAL_VALUES, utoa::@3/RADIX_OCTAL_VALUES, utoa::@4/RADIX_BINARY_VALUES )
  [193] utoa::max_digits#7 = phi( utoa/5, utoa::@2/4, utoa::@3/6, utoa::@4/$10 )
  to:utoa::@6
utoa::@6: scope:[utoa]  from utoa::@1 utoa::@9
  [194] utoa::buffer#10 = phi( utoa::@9/utoa::buffer#15, utoa::@1/(char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  [194] utoa::started#2 = phi( utoa::@9/utoa::started#4, utoa::@1/0 )
  [194] utoa::value#3 = phi( utoa::@9/utoa::value#7, utoa::@1/utoa::value#10 )
  [194] utoa::digit#2 = phi( utoa::@9/utoa::digit#1, utoa::@1/0 )
  [195] utoa::$4 = utoa::max_digits#7 - 1
  [196] if(utoa::digit#2<utoa::$4) goto utoa::@7
  to:utoa::@8
utoa::@8: scope:[utoa]  from utoa::@6
  [197] utoa::$11 = (char)utoa::value#3
  [198] *utoa::buffer#10 = DIGITS[utoa::$11]
  [199] utoa::buffer#3 = ++ utoa::buffer#10
  [200] *utoa::buffer#3 = 0
  to:utoa::@return
utoa::@7: scope:[utoa]  from utoa::@6
  [201] utoa::$10 = utoa::digit#2 << 1
  [202] utoa::digit_value#0 = utoa::digit_values#8[utoa::$10]
  [203] if(0!=utoa::started#2) goto utoa::@10
  to:utoa::@12
utoa::@12: scope:[utoa]  from utoa::@7
  [204] if(utoa::value#3>=utoa::digit_value#0) goto utoa::@10
  to:utoa::@9
utoa::@9: scope:[utoa]  from utoa::@11 utoa::@12
  [205] utoa::buffer#15 = phi( utoa::@12/utoa::buffer#10, utoa::@11/utoa::buffer#4 )
  [205] utoa::started#4 = phi( utoa::@12/utoa::started#2, utoa::@11/1 )
  [205] utoa::value#7 = phi( utoa::@12/utoa::value#3, utoa::@11/utoa::value#0 )
  [206] utoa::digit#1 = ++ utoa::digit#2
  to:utoa::@6
utoa::@10: scope:[utoa]  from utoa::@12 utoa::@7
  [207] utoa_append::buffer#0 = utoa::buffer#10
  [208] utoa_append::value#0 = utoa::value#3
  [209] utoa_append::sub#0 = utoa::digit_value#0
  [210] call utoa_append
  [211] utoa_append::return#0 = utoa_append::value#2
  to:utoa::@11
utoa::@11: scope:[utoa]  from utoa::@10
  [212] utoa::value#0 = utoa_append::return#0
  [213] utoa::buffer#4 = ++ utoa::buffer#10
  to:utoa::@9

void printf_number_buffer(void (*putc)(char) , char buffer_sign , char *buffer_digits , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
printf_number_buffer: scope:[printf_number_buffer]  from printf_schar::@3 printf_sint::@3 printf_slong::@3 printf_uchar::@2 printf_uint::@2 printf_ulong::@2
  [214] printf_number_buffer::format_upper_case#10 = phi( printf_schar::@3/printf_schar::format_upper_case#0, printf_sint::@3/printf_sint::format_upper_case#0, printf_slong::@3/printf_slong::format_upper_case#0, printf_uchar::@2/printf_uchar::format_upper_case#0, printf_uint::@2/0, printf_ulong::@2/printf_ulong::format_upper_case#0 )
  [214] printf_number_buffer::putc#10 = phi( printf_schar::@3/printf_schar::putc#0, printf_sint::@3/printf_sint::putc#0, printf_slong::@3/printf_slong::putc#0, printf_uchar::@2/printf_uchar::putc#0, printf_uint::@2/&cputc, printf_ulong::@2/printf_ulong::putc#0 )
  [214] printf_number_buffer::buffer_sign#10 = phi( printf_schar::@3/printf_number_buffer::buffer_sign#4, printf_sint::@3/printf_number_buffer::buffer_sign#2, printf_slong::@3/printf_number_buffer::buffer_sign#0, printf_uchar::@2/printf_number_buffer::buffer_sign#5, printf_uint::@2/printf_number_buffer::buffer_sign#3, printf_ulong::@2/printf_number_buffer::buffer_sign#1 )
  [214] printf_number_buffer::format_zero_padding#10 = phi( printf_schar::@3/printf_schar::format_zero_padding#0, printf_sint::@3/printf_sint::format_zero_padding#0, printf_slong::@3/printf_slong::format_zero_padding#0, printf_uchar::@2/printf_uchar::format_zero_padding#0, printf_uint::@2/0, printf_ulong::@2/printf_ulong::format_zero_padding#0 )
  [214] printf_number_buffer::format_justify_left#10 = phi( printf_schar::@3/printf_schar::format_justify_left#0, printf_sint::@3/printf_sint::format_justify_left#0, printf_slong::@3/printf_slong::format_justify_left#0, printf_uchar::@2/printf_uchar::format_justify_left#0, printf_uint::@2/0, printf_ulong::@2/printf_ulong::format_justify_left#0 )
  [214] printf_number_buffer::format_min_length#10 = phi( printf_schar::@3/printf_schar::format_min_length#0, printf_sint::@3/printf_sint::format_min_length#0, printf_slong::@3/printf_slong::format_min_length#0, printf_uchar::@2/printf_uchar::format_min_length#0, printf_uint::@2/0, printf_ulong::@2/printf_ulong::format_min_length#0 )
  [215] if(0==printf_number_buffer::format_min_length#10) goto printf_number_buffer::@1
  to:printf_number_buffer::@6
printf_number_buffer::@6: scope:[printf_number_buffer]  from printf_number_buffer
  [216] phi()
  [217] call strlen
  [218] strlen::return#2 = strlen::len#2
  to:printf_number_buffer::@14
printf_number_buffer::@14: scope:[printf_number_buffer]  from printf_number_buffer::@6
  [219] printf_number_buffer::$19 = strlen::return#2
  [220] printf_number_buffer::len#0 = (signed char)printf_number_buffer::$19
  [221] if(0==printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@13
  to:printf_number_buffer::@7
printf_number_buffer::@7: scope:[printf_number_buffer]  from printf_number_buffer::@14
  [222] printf_number_buffer::len#1 = ++ printf_number_buffer::len#0
  to:printf_number_buffer::@13
printf_number_buffer::@13: scope:[printf_number_buffer]  from printf_number_buffer::@14 printf_number_buffer::@7
  [223] printf_number_buffer::len#2 = phi( printf_number_buffer::@14/printf_number_buffer::len#0, printf_number_buffer::@7/printf_number_buffer::len#1 )
  [224] printf_number_buffer::padding#1 = (signed char)printf_number_buffer::format_min_length#10 - printf_number_buffer::len#2
  [225] if(printf_number_buffer::padding#1>=0) goto printf_number_buffer::@21
  to:printf_number_buffer::@1
printf_number_buffer::@21: scope:[printf_number_buffer]  from printf_number_buffer::@13
  [226] phi()
  to:printf_number_buffer::@1
printf_number_buffer::@1: scope:[printf_number_buffer]  from printf_number_buffer printf_number_buffer::@13 printf_number_buffer::@21
  [227] printf_number_buffer::padding#10 = phi( printf_number_buffer/0, printf_number_buffer::@21/printf_number_buffer::padding#1, printf_number_buffer::@13/0 )
  [228] if(0!=printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@2
  to:printf_number_buffer::@17
printf_number_buffer::@17: scope:[printf_number_buffer]  from printf_number_buffer::@1
  [229] if(0!=printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@2
  to:printf_number_buffer::@16
printf_number_buffer::@16: scope:[printf_number_buffer]  from printf_number_buffer::@17
  [230] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@8
  to:printf_number_buffer::@2
printf_number_buffer::@8: scope:[printf_number_buffer]  from printf_number_buffer::@16
  [231] printf_padding::putc#0 = printf_number_buffer::putc#10
  [232] printf_padding::length#0 = (char)printf_number_buffer::padding#10
  [233] call printf_padding
  to:printf_number_buffer::@2
printf_number_buffer::@2: scope:[printf_number_buffer]  from printf_number_buffer::@1 printf_number_buffer::@16 printf_number_buffer::@17 printf_number_buffer::@8
  [234] if(0==printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@3
  to:printf_number_buffer::@9
printf_number_buffer::@9: scope:[printf_number_buffer]  from printf_number_buffer::@2
  [235] stackpush(char) = printf_number_buffer::buffer_sign#10
  [236] callexecute *printf_number_buffer::putc#10 
  sideeffect stackpullpadding(1)
  to:printf_number_buffer::@3
printf_number_buffer::@3: scope:[printf_number_buffer]  from printf_number_buffer::@2 printf_number_buffer::@9
  [238] if(0==printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@4
  to:printf_number_buffer::@18
printf_number_buffer::@18: scope:[printf_number_buffer]  from printf_number_buffer::@3
  [239] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@10
  to:printf_number_buffer::@4
printf_number_buffer::@10: scope:[printf_number_buffer]  from printf_number_buffer::@18
  [240] printf_padding::putc#1 = printf_number_buffer::putc#10
  [241] printf_padding::length#1 = (char)printf_number_buffer::padding#10
  [242] call printf_padding
  to:printf_number_buffer::@4
printf_number_buffer::@4: scope:[printf_number_buffer]  from printf_number_buffer::@10 printf_number_buffer::@18 printf_number_buffer::@3
  [243] if(0==printf_number_buffer::format_upper_case#10) goto printf_number_buffer::@5
  to:printf_number_buffer::@11
printf_number_buffer::@11: scope:[printf_number_buffer]  from printf_number_buffer::@4
  [244] phi()
  [245] call strupr
  to:printf_number_buffer::@5
printf_number_buffer::@5: scope:[printf_number_buffer]  from printf_number_buffer::@11 printf_number_buffer::@4
  [246] printf_str::putc#0 = printf_number_buffer::putc#10
  [247] call printf_str
  to:printf_number_buffer::@15
printf_number_buffer::@15: scope:[printf_number_buffer]  from printf_number_buffer::@5
  [248] if(0==printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@return
  to:printf_number_buffer::@20
printf_number_buffer::@20: scope:[printf_number_buffer]  from printf_number_buffer::@15
  [249] if(0!=printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@return
  to:printf_number_buffer::@19
printf_number_buffer::@19: scope:[printf_number_buffer]  from printf_number_buffer::@20
  [250] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@12
  to:printf_number_buffer::@return
printf_number_buffer::@12: scope:[printf_number_buffer]  from printf_number_buffer::@19
  [251] printf_padding::putc#2 = printf_number_buffer::putc#10
  [252] printf_padding::length#2 = (char)printf_number_buffer::padding#10
  [253] call printf_padding
  to:printf_number_buffer::@return
printf_number_buffer::@return: scope:[printf_number_buffer]  from printf_number_buffer::@12 printf_number_buffer::@15 printf_number_buffer::@19 printf_number_buffer::@20
  [254] return 
  to:@return

void uctoa(char value , char *buffer , char radix)
uctoa: scope:[uctoa]  from printf_schar::@2 printf_uchar::@1
  [255] uctoa::value#10 = phi( printf_schar::@2/printf_schar::uvalue#0, printf_uchar::@1/main::uc )
  to:uctoa::@1
uctoa::@1: scope:[uctoa]  from uctoa uctoa::@4
  [256] uctoa::buffer#10 = phi( uctoa::@4/uctoa::buffer#15, uctoa/(char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  [256] uctoa::started#2 = phi( uctoa::@4/uctoa::started#4, uctoa/0 )
  [256] uctoa::value#3 = phi( uctoa::@4/uctoa::value#7, uctoa/uctoa::value#10 )
  [256] uctoa::digit#2 = phi( uctoa::@4/uctoa::digit#1, uctoa/0 )
  [257] if(uctoa::digit#2<3-1) goto uctoa::@2
  to:uctoa::@3
uctoa::@3: scope:[uctoa]  from uctoa::@1
  [258] *uctoa::buffer#10 = DIGITS[uctoa::value#3]
  [259] uctoa::buffer#3 = ++ uctoa::buffer#10
  [260] *uctoa::buffer#3 = 0
  to:uctoa::@return
uctoa::@return: scope:[uctoa]  from uctoa::@3
  [261] return 
  to:@return
uctoa::@2: scope:[uctoa]  from uctoa::@1
  [262] uctoa::digit_value#0 = RADIX_DECIMAL_VALUES_CHAR[uctoa::digit#2]
  [263] if(0!=uctoa::started#2) goto uctoa::@5
  to:uctoa::@7
uctoa::@7: scope:[uctoa]  from uctoa::@2
  [264] if(uctoa::value#3>=uctoa::digit_value#0) goto uctoa::@5
  to:uctoa::@4
uctoa::@4: scope:[uctoa]  from uctoa::@6 uctoa::@7
  [265] uctoa::buffer#15 = phi( uctoa::@7/uctoa::buffer#10, uctoa::@6/uctoa::buffer#4 )
  [265] uctoa::started#4 = phi( uctoa::@7/uctoa::started#2, uctoa::@6/1 )
  [265] uctoa::value#7 = phi( uctoa::@7/uctoa::value#3, uctoa::@6/uctoa::value#0 )
  [266] uctoa::digit#1 = ++ uctoa::digit#2
  to:uctoa::@1
uctoa::@5: scope:[uctoa]  from uctoa::@2 uctoa::@7
  [267] uctoa_append::buffer#0 = uctoa::buffer#10
  [268] uctoa_append::value#0 = uctoa::value#3
  [269] uctoa_append::sub#0 = uctoa::digit_value#0
  [270] call uctoa_append
  [271] uctoa_append::return#0 = uctoa_append::value#2
  to:uctoa::@6
uctoa::@6: scope:[uctoa]  from uctoa::@5
  [272] uctoa::value#0 = uctoa_append::return#0
  [273] uctoa::buffer#4 = ++ uctoa::buffer#10
  to:uctoa::@4

void ultoa(unsigned long value , char *buffer , char radix)
ultoa: scope:[ultoa]  from printf_slong::@2 printf_ulong::@1
  [274] ultoa::value#10 = phi( printf_slong::@2/printf_slong::uvalue#0, printf_ulong::@1/main::ul )
  to:ultoa::@1
ultoa::@1: scope:[ultoa]  from ultoa ultoa::@4
  [275] ultoa::buffer#10 = phi( ultoa::@4/ultoa::buffer#15, ultoa/(char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  [275] ultoa::started#2 = phi( ultoa::@4/ultoa::started#4, ultoa/0 )
  [275] ultoa::value#3 = phi( ultoa::@4/ultoa::value#7, ultoa/ultoa::value#10 )
  [275] ultoa::digit#2 = phi( ultoa::@4/ultoa::digit#1, ultoa/0 )
  [276] if(ultoa::digit#2<$a-1) goto ultoa::@2
  to:ultoa::@3
ultoa::@3: scope:[ultoa]  from ultoa::@1
  [277] ultoa::$11 = (char)ultoa::value#3
  [278] *ultoa::buffer#10 = DIGITS[ultoa::$11]
  [279] ultoa::buffer#3 = ++ ultoa::buffer#10
  [280] *ultoa::buffer#3 = 0
  to:ultoa::@return
ultoa::@return: scope:[ultoa]  from ultoa::@3
  [281] return 
  to:@return
ultoa::@2: scope:[ultoa]  from ultoa::@1
  [282] ultoa::$10 = ultoa::digit#2 << 2
  [283] ultoa::digit_value#0 = RADIX_DECIMAL_VALUES_LONG[ultoa::$10]
  [284] if(0!=ultoa::started#2) goto ultoa::@5
  to:ultoa::@7
ultoa::@7: scope:[ultoa]  from ultoa::@2
  [285] if(ultoa::value#3>=ultoa::digit_value#0) goto ultoa::@5
  to:ultoa::@4
ultoa::@4: scope:[ultoa]  from ultoa::@6 ultoa::@7
  [286] ultoa::buffer#15 = phi( ultoa::@7/ultoa::buffer#10, ultoa::@6/ultoa::buffer#4 )
  [286] ultoa::started#4 = phi( ultoa::@7/ultoa::started#2, ultoa::@6/1 )
  [286] ultoa::value#7 = phi( ultoa::@7/ultoa::value#3, ultoa::@6/ultoa::value#0 )
  [287] ultoa::digit#1 = ++ ultoa::digit#2
  to:ultoa::@1
ultoa::@5: scope:[ultoa]  from ultoa::@2 ultoa::@7
  [288] ultoa_append::buffer#0 = ultoa::buffer#10
  [289] ultoa_append::value#0 = ultoa::value#3
  [290] ultoa_append::sub#0 = ultoa::digit_value#0
  [291] call ultoa_append
  [292] ultoa_append::return#0 = ultoa_append::value#2
  to:ultoa::@6
ultoa::@6: scope:[ultoa]  from ultoa::@5
  [293] ultoa::value#0 = ultoa_append::return#0
  [294] ultoa::buffer#4 = ++ ultoa::buffer#10
  to:ultoa::@4

void * memcpy(void *destination , void *source , unsigned int num)
memcpy: scope:[memcpy]  from cscroll::@1 cscroll::@2
  [295] memcpy::destination#2 = phi( cscroll::@1/(void *)DEFAULT_SCREEN, cscroll::@2/(void *)COLORRAM )
  [295] memcpy::source#2 = phi( cscroll::@1/(void *)DEFAULT_SCREEN+$28, cscroll::@2/(void *)COLORRAM+$28 )
  [296] memcpy::src_end#0 = (char *)memcpy::source#2 + (unsigned int)$19*$28-$28
  [297] memcpy::src#4 = (char *)memcpy::source#2
  [298] memcpy::dst#4 = (char *)memcpy::destination#2
  to:memcpy::@1
memcpy::@1: scope:[memcpy]  from memcpy memcpy::@2
  [299] memcpy::dst#2 = phi( memcpy/memcpy::dst#4, memcpy::@2/memcpy::dst#1 )
  [299] memcpy::src#2 = phi( memcpy/memcpy::src#4, memcpy::@2/memcpy::src#1 )
  [300] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2
  to:memcpy::@return
memcpy::@return: scope:[memcpy]  from memcpy::@1
  [301] return 
  to:@return
memcpy::@2: scope:[memcpy]  from memcpy::@1
  [302] *memcpy::dst#2 = *memcpy::src#2
  [303] memcpy::dst#1 = ++ memcpy::dst#2
  [304] memcpy::src#1 = ++ memcpy::src#2
  to:memcpy::@1

void * memset(void *str , char c , unsigned int num)
memset: scope:[memset]  from cscroll::@3 cscroll::@4
  [305] memset::c#4 = phi( cscroll::@3/' ', cscroll::@4/LIGHT_BLUE )
  [305] memset::str#3 = phi( cscroll::@3/(void *)DEFAULT_SCREEN+(unsigned int)$19*$28-$28, cscroll::@4/(void *)COLORRAM+(unsigned int)$19*$28-$28 )
  to:memset::@1
memset::@1: scope:[memset]  from memset
  [306] memset::end#0 = (char *)memset::str#3 + $28
  [307] memset::dst#4 = (char *)memset::str#3
  to:memset::@2
memset::@2: scope:[memset]  from memset::@1 memset::@3
  [308] memset::dst#2 = phi( memset::@1/memset::dst#4, memset::@3/memset::dst#1 )
  [309] if(memset::dst#2!=memset::end#0) goto memset::@3
  to:memset::@return
memset::@return: scope:[memset]  from memset::@2
  [310] return 
  to:@return
memset::@3: scope:[memset]  from memset::@2
  [311] *memset::dst#2 = memset::c#4
  [312] memset::dst#1 = ++ memset::dst#2
  to:memset::@2

unsigned int utoa_append(char *buffer , unsigned int value , unsigned int sub)
utoa_append: scope:[utoa_append]  from utoa::@10
  [313] phi()
  to:utoa_append::@1
utoa_append::@1: scope:[utoa_append]  from utoa_append utoa_append::@2
  [314] utoa_append::digit#2 = phi( utoa_append/0, utoa_append::@2/utoa_append::digit#1 )
  [314] utoa_append::value#2 = phi( utoa_append/utoa_append::value#0, utoa_append::@2/utoa_append::value#1 )
  [315] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2
  to:utoa_append::@3
utoa_append::@3: scope:[utoa_append]  from utoa_append::@1
  [316] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2]
  to:utoa_append::@return
utoa_append::@return: scope:[utoa_append]  from utoa_append::@3
  [317] return 
  to:@return
utoa_append::@2: scope:[utoa_append]  from utoa_append::@1
  [318] utoa_append::digit#1 = ++ utoa_append::digit#2
  [319] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0
  to:utoa_append::@1

unsigned int strlen(char *str)
strlen: scope:[strlen]  from printf_number_buffer::@6
  [320] phi()
  to:strlen::@1
strlen::@1: scope:[strlen]  from strlen strlen::@2
  [321] strlen::len#2 = phi( strlen/0, strlen::@2/strlen::len#1 )
  [321] strlen::str#2 = phi( strlen/(char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS, strlen::@2/strlen::str#0 )
  [322] if(0!=*strlen::str#2) goto strlen::@2
  to:strlen::@return
strlen::@return: scope:[strlen]  from strlen::@1
  [323] return 
  to:@return
strlen::@2: scope:[strlen]  from strlen::@1
  [324] strlen::len#1 = ++ strlen::len#2
  [325] strlen::str#0 = ++ strlen::str#2
  to:strlen::@1

void printf_padding(void (*putc)(char) , char pad , char length)
printf_padding: scope:[printf_padding]  from printf_number_buffer::@10 printf_number_buffer::@12 printf_number_buffer::@8
  [326] printf_padding::putc#5 = phi( printf_number_buffer::@10/printf_padding::putc#1, printf_number_buffer::@12/printf_padding::putc#2, printf_number_buffer::@8/printf_padding::putc#0 )
  [326] printf_padding::pad#5 = phi( printf_number_buffer::@10/'0', printf_number_buffer::@12/' ', printf_number_buffer::@8/' ' )
  [326] printf_padding::length#4 = phi( printf_number_buffer::@10/printf_padding::length#1, printf_number_buffer::@12/printf_padding::length#2, printf_number_buffer::@8/printf_padding::length#0 )
  to:printf_padding::@1
printf_padding::@1: scope:[printf_padding]  from printf_padding printf_padding::@3
  [327] printf_padding::i#2 = phi( printf_padding/0, printf_padding::@3/printf_padding::i#1 )
  [328] if(printf_padding::i#2<printf_padding::length#4) goto printf_padding::@2
  to:printf_padding::@return
printf_padding::@return: scope:[printf_padding]  from printf_padding::@1
  [329] return 
  to:@return
printf_padding::@2: scope:[printf_padding]  from printf_padding::@1
  [330] stackpush(char) = printf_padding::pad#5
  [331] callexecute *printf_padding::putc#5 
  sideeffect stackpullpadding(1)
  to:printf_padding::@3
printf_padding::@3: scope:[printf_padding]  from printf_padding::@2
  [333] printf_padding::i#1 = ++ printf_padding::i#2
  to:printf_padding::@1

char * strupr(char *str)
strupr: scope:[strupr]  from printf_number_buffer::@11
  [334] phi()
  to:strupr::@1
strupr::@1: scope:[strupr]  from strupr strupr::@3
  [335] strupr::src#2 = phi( strupr/strupr::str#0, strupr::@3/strupr::src#1 )
  [336] if(0!=*strupr::src#2) goto strupr::@2
  to:strupr::@return
strupr::@return: scope:[strupr]  from strupr::@1
  [337] return 
  to:@return
strupr::@2: scope:[strupr]  from strupr::@1
  [338] toupper::ch#0 = *strupr::src#2
  [339] call toupper
  [340] toupper::return#3 = toupper::return#2
  to:strupr::@3
strupr::@3: scope:[strupr]  from strupr::@2
  [341] strupr::$0 = toupper::return#3
  [342] *strupr::src#2 = strupr::$0
  [343] strupr::src#1 = ++ strupr::src#2
  to:strupr::@1

char uctoa_append(char *buffer , char value , char sub)
uctoa_append: scope:[uctoa_append]  from uctoa::@5
  [344] phi()
  to:uctoa_append::@1
uctoa_append::@1: scope:[uctoa_append]  from uctoa_append uctoa_append::@2
  [345] uctoa_append::digit#2 = phi( uctoa_append/0, uctoa_append::@2/uctoa_append::digit#1 )
  [345] uctoa_append::value#2 = phi( uctoa_append/uctoa_append::value#0, uctoa_append::@2/uctoa_append::value#1 )
  [346] if(uctoa_append::value#2>=uctoa_append::sub#0) goto uctoa_append::@2
  to:uctoa_append::@3
uctoa_append::@3: scope:[uctoa_append]  from uctoa_append::@1
  [347] *uctoa_append::buffer#0 = DIGITS[uctoa_append::digit#2]
  to:uctoa_append::@return
uctoa_append::@return: scope:[uctoa_append]  from uctoa_append::@3
  [348] return 
  to:@return
uctoa_append::@2: scope:[uctoa_append]  from uctoa_append::@1
  [349] uctoa_append::digit#1 = ++ uctoa_append::digit#2
  [350] uctoa_append::value#1 = uctoa_append::value#2 - uctoa_append::sub#0
  to:uctoa_append::@1

unsigned long ultoa_append(char *buffer , unsigned long value , unsigned long sub)
ultoa_append: scope:[ultoa_append]  from ultoa::@5
  [351] phi()
  to:ultoa_append::@1
ultoa_append::@1: scope:[ultoa_append]  from ultoa_append ultoa_append::@2
  [352] ultoa_append::digit#2 = phi( ultoa_append/0, ultoa_append::@2/ultoa_append::digit#1 )
  [352] ultoa_append::value#2 = phi( ultoa_append/ultoa_append::value#0, ultoa_append::@2/ultoa_append::value#1 )
  [353] if(ultoa_append::value#2>=ultoa_append::sub#0) goto ultoa_append::@2
  to:ultoa_append::@3
ultoa_append::@3: scope:[ultoa_append]  from ultoa_append::@1
  [354] *ultoa_append::buffer#0 = DIGITS[ultoa_append::digit#2]
  to:ultoa_append::@return
ultoa_append::@return: scope:[ultoa_append]  from ultoa_append::@3
  [355] return 
  to:@return
ultoa_append::@2: scope:[ultoa_append]  from ultoa_append::@1
  [356] ultoa_append::digit#1 = ++ ultoa_append::digit#2
  [357] ultoa_append::value#1 = ultoa_append::value#2 - ultoa_append::sub#0
  to:ultoa_append::@1

char toupper(char ch)
toupper: scope:[toupper]  from strupr::@2
  [358] if(toupper::ch#0<'a') goto toupper::@return
  to:toupper::@2
toupper::@2: scope:[toupper]  from toupper
  [359] if(toupper::ch#0<='z') goto toupper::@1
  to:toupper::@return
toupper::@1: scope:[toupper]  from toupper::@2
  [360] toupper::return#0 = toupper::ch#0 + 'A'-'a'
  to:toupper::@return
toupper::@return: scope:[toupper]  from toupper toupper::@1 toupper::@2
  [361] toupper::return#2 = phi( toupper::@1/toupper::return#0, toupper/toupper::ch#0, toupper::@2/toupper::ch#0 )
  [362] return 
  to:@return
