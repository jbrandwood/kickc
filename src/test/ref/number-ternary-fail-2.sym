__constant char *HEAP_TOP = (char *) 40960
__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
void SolveMaze(char *maze , unsigned int width , unsigned int height)
char SolveMaze::$9 // reg byte a 101.0
unsigned int SolveMaze::forward
unsigned int SolveMaze::forward#3 // forward zp[2]:2 101.0
unsigned int SolveMaze::height
char *SolveMaze::maze
unsigned int SolveMaze::width
__constant unsigned int SolveMaze::x = 3
__constant unsigned int SolveMaze::y = 2
char *heap_head
void main()
__constant unsigned int main::height = (unsigned int)6*2+3
char *main::maze
__constant char *main::maze#1 = (char *)malloc::return#0 // maze
__constant unsigned int main::width = (unsigned int)$12*2+3
void * malloc(unsigned int size)
char *malloc::mem
__constant char *malloc::mem#0 = HEAP_TOP-malloc::size#0 // mem
void *malloc::return
__constant void *malloc::return#0 = (void *)malloc::mem#0 // return
unsigned int malloc::size
__constant unsigned int malloc::size#0 = main::width*main::height // size

zp[2]:2 [ SolveMaze::forward#3 ]
reg byte a [ SolveMaze::$9 ]
