(label) @1
(label) @begin
(label) @end
(byte*) BITMAP_GRAPHICS
(const byte*) BITMAP_GRAPHICS#0 BITMAP_GRAPHICS = (byte*) 24576
(byte*) BITMAP_SCREEN
(const byte*) BITMAP_SCREEN#0 BITMAP_SCREEN = (byte*) 23552
(byte) BLACK
(byte*) CIA2_PORT_A
(const byte*) CIA2_PORT_A#0 CIA2_PORT_A = (byte*) 56576
(byte*) CIA2_PORT_A_DDR
(const byte*) CIA2_PORT_A_DDR#0 CIA2_PORT_A_DDR = (byte*) 56578
(signed byte*) COS
(const signed byte*) COS#0 COS = (const signed byte[$140]) SIN#0+(byte) $40
(byte*) D011
(const byte*) D011#0 D011 = (byte*) 53265
(byte*) D018
(const byte*) D018#0 D018 = (byte*) 53272
(const byte) LINE_TO LINE_TO = (byte) 2
(const byte) MOVE_TO MOVE_TO = (byte) 0
(const byte) OFFSET_STRUCT_SEGMENT_TO OFFSET_STRUCT_SEGMENT_TO = (byte) 1
(const byte) OFFSET_STRUCT_SEGMENT_VIA OFFSET_STRUCT_SEGMENT_VIA = (byte) 5
(const byte) OFFSET_STRUCT_SPLINEVECTOR16_Y OFFSET_STRUCT_SPLINEVECTOR16_Y = (byte) 2
(byte*) PRINT_SCREEN
(const byte) RADIX::BINARY BINARY = (number) 2
(const byte) RADIX::DECIMAL DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL OCTAL = (number) 8
(byte*) RASTER
(const byte*) RASTER#0 RASTER = (byte*) 53266
(signed byte[$140]) SIN
(const signed byte[$140]) SIN#0 SIN = kickasm {{ .for(var i=0;i<$140;i++)
        .byte >round($7fff*sin(i*2*PI/256))
 }}
(const byte) SIZEOF_STRUCT_SEGMENT SIZEOF_STRUCT_SEGMENT = (byte) 9
(const byte) SIZEOF_STRUCT_SPLINEVECTOR16 SIZEOF_STRUCT_SPLINEVECTOR16 = (byte) 4
(struct SplineVector16[9]) SPLINE_8SEG
(const struct SplineVector16[9]) SPLINE_8SEG#0 SPLINE_8SEG = { fill( 9, 0) }
(const byte) SPLINE_TO SPLINE_TO = (byte) 1
(const byte) Segment::SegmentType::LINE_TO LINE_TO = (byte) 2
(const byte) Segment::SegmentType::MOVE_TO MOVE_TO = (byte) 0
(const byte) Segment::SegmentType::SPLINE_TO SPLINE_TO = (byte) 1
(struct SplineVector16) Segment::to
(byte) Segment::type
(struct SplineVector16) Segment::via
(signed word) SplineVector16::x
(signed word) SplineVector16::y
(signed dword) SplineVector32::x
(signed dword) SplineVector32::y
(byte) VIC_BMM
(const byte) VIC_BMM#0 VIC_BMM = (byte) $20
(byte) VIC_DEN
(const byte) VIC_DEN#0 VIC_DEN = (byte) $10
(byte) VIC_RSEL
(const byte) VIC_RSEL#0 VIC_RSEL = (byte) 8
(byte) WHITE
(const byte) WHITE#0 WHITE = (byte) 1
(word()) abs_u16((word) abs_u16::w)
(byte~) abs_u16::$0 reg byte a 4.0
(byte~) abs_u16::$1 reg byte a 4.0
(label) abs_u16::@1
(label) abs_u16::@return
(word) abs_u16::return
(word) abs_u16::return#0 return zp ZP_WORD:21 4.0
(word) abs_u16::return#1 return zp ZP_WORD:21 4.0
(word) abs_u16::return#2 return zp ZP_WORD:21 4.0
(word) abs_u16::return#4 return zp ZP_WORD:21 2.0
(word) abs_u16::w
(word) abs_u16::w#0 w zp ZP_WORD:21 4.0
(word) abs_u16::w#1 w zp ZP_WORD:21 4.0
(word) abs_u16::w#2 w zp ZP_WORD:21 2.5
(void()) bitmap_clear((byte) bitmap_clear::bgcol , (byte) bitmap_clear::fgcol)
(label) bitmap_clear::@1
(label) bitmap_clear::@return
(byte) bitmap_clear::bgcol
(byte) bitmap_clear::col
(const byte) bitmap_clear::col#0 col = (const byte) WHITE#0<<(byte) 4
(byte) bitmap_clear::fgcol
(byte*) bitmap_gfx
(void()) bitmap_init((byte*) bitmap_init::gfx , (byte*) bitmap_init::screen)
(byte~) bitmap_init::$4 reg byte a 22.0
(byte~) bitmap_init::$5 reg byte a 22.0
(byte~) bitmap_init::$6 reg byte a 22.0
(byte~) bitmap_init::$7 $7 zp ZP_BYTE:93 5.5
(label) bitmap_init::@1
(label) bitmap_init::@2
(label) bitmap_init::@3
(label) bitmap_init::@4
(label) bitmap_init::@5
(label) bitmap_init::@6
(label) bitmap_init::@return
(byte) bitmap_init::bits
(byte) bitmap_init::bits#1 reg byte a 11.0
(byte) bitmap_init::bits#3 reg byte a 16.5
(byte) bitmap_init::bits#4 reg byte a 7.333333333333333
(byte*) bitmap_init::gfx
(byte*) bitmap_init::screen
(byte) bitmap_init::x
(byte) bitmap_init::x#1 reg byte x 16.5
(byte) bitmap_init::x#2 reg byte x 5.5
(byte) bitmap_init::y
(byte) bitmap_init::y#1 reg byte x 16.5
(byte) bitmap_init::y#2 reg byte x 5.5
(byte*) bitmap_init::yoffs
(byte*) bitmap_init::yoffs#1 yoffs zp ZP_WORD:43 22.0
(byte*) bitmap_init::yoffs#2 yoffs zp ZP_WORD:43 6.875
(byte*) bitmap_init::yoffs#4 yoffs zp ZP_WORD:43 11.0
(void()) bitmap_line((word) bitmap_line::x1 , (word) bitmap_line::y1 , (word) bitmap_line::x2 , (word) bitmap_line::y2)
(label) bitmap_line::@1
(label) bitmap_line::@10
(label) bitmap_line::@11
(label) bitmap_line::@12
(label) bitmap_line::@13
(label) bitmap_line::@14
(label) bitmap_line::@15
(label) bitmap_line::@16
(label) bitmap_line::@17
(label) bitmap_line::@18
(label) bitmap_line::@2
(label) bitmap_line::@3
(label) bitmap_line::@4
(label) bitmap_line::@5
(label) bitmap_line::@6
(label) bitmap_line::@7
(label) bitmap_line::@8
(label) bitmap_line::@9
(label) bitmap_line::@return
(word) bitmap_line::dx
(word) bitmap_line::dx#0 dx zp ZP_WORD:61 75.275
(word) bitmap_line::dy
(word) bitmap_line::dy#0 dy zp ZP_WORD:21 83.6388888888889
(word) bitmap_line::e
(word) bitmap_line::e#0 e zp ZP_WORD:13 4.0
(word) bitmap_line::e#1 e zp ZP_WORD:13 1334.6666666666667
(word) bitmap_line::e#2 e zp ZP_WORD:13 2002.0
(word) bitmap_line::e#3 e zp ZP_WORD:13 400.79999999999995
(word) bitmap_line::e#6 e zp ZP_WORD:13 1501.5
(word) bitmap_line::e1
(word) bitmap_line::e1#0 e1 zp ZP_WORD:15 4.0
(word) bitmap_line::e1#1 e1 zp ZP_WORD:15 1334.6666666666667
(word) bitmap_line::e1#2 e1 zp ZP_WORD:15 2002.0
(word) bitmap_line::e1#3 e1 zp ZP_WORD:15 400.79999999999995
(word) bitmap_line::e1#6 e1 zp ZP_WORD:15 1501.5
(word) bitmap_line::sx
(word) bitmap_line::sx#0 sx zp ZP_WORD:63 66.80000000000001
(word) bitmap_line::sy
(word) bitmap_line::sy#0 sy zp ZP_WORD:19 77.07692307692308
(word) bitmap_line::x
(word) bitmap_line::x#0 x zp ZP_WORD:4 48.34782608695653
(word) bitmap_line::x#1 x zp ZP_WORD:4 1001.0
(word) bitmap_line::x#12 x zp ZP_WORD:4 2002.0
(word) bitmap_line::x#13 x zp ZP_WORD:4 572.2857142857142
(word) bitmap_line::x#15 x zp ZP_WORD:4 572.0
(word) bitmap_line::x#6 x zp ZP_WORD:4 1002.0
(word) bitmap_line::x#7 x zp ZP_WORD:4 751.25
(word) bitmap_line::x1
(word) bitmap_line::x1#0 x1 zp ZP_WORD:4 50.5
(word) bitmap_line::x1#1 x1 zp ZP_WORD:4 400.4
(word) bitmap_line::x2
(word) bitmap_line::x2#0 x2 zp ZP_WORD:9 101.0
(word) bitmap_line::x2#10 x2 zp ZP_WORD:9 65.84375
(word~) bitmap_line::x2#13 x2 zp ZP_WORD:9 1001.0
(word) bitmap_line::y
(word) bitmap_line::y#0 y zp ZP_WORD:6 50.45454545454547
(word) bitmap_line::y#1 y zp ZP_WORD:6 572.0
(word) bitmap_line::y#13 y zp ZP_WORD:6 2002.0
(word) bitmap_line::y#15 y zp ZP_WORD:6 429.2857142857143
(word) bitmap_line::y#2 y zp ZP_WORD:6 1001.0
(word) bitmap_line::y#4 y zp ZP_WORD:6 501.0
(word) bitmap_line::y#7 y zp ZP_WORD:6 2002.0
(word) bitmap_line::y1
(word) bitmap_line::y1#0 y1 zp ZP_WORD:6 67.33333333333333
(word) bitmap_line::y1#1 y1 zp ZP_WORD:6 500.5
(word) bitmap_line::y2
(word) bitmap_line::y2#0 y2 zp ZP_WORD:11 202.0
(word) bitmap_line::y2#11 y2 zp ZP_WORD:11 65.84375
(word~) bitmap_line::y2#13 y2 zp ZP_WORD:11 2002.0
(void()) bitmap_plot((word) bitmap_plot::x , (byte) bitmap_plot::y)
(word~) bitmap_plot::$1 $1 zp ZP_WORD:67 4.0
(byte~) bitmap_plot::$2 reg byte a 4.0
(label) bitmap_plot::@return
(byte*) bitmap_plot::plotter
(word) bitmap_plot::plotter#0 plotter zp ZP_WORD:65 1.0
(byte*) bitmap_plot::plotter#1 plotter zp ZP_WORD:65 3.0
(word) bitmap_plot::x
(word) bitmap_plot::x#0 x zp ZP_WORD:4 4.0
(word) bitmap_plot::x#1 x zp ZP_WORD:4 2002.0
(word) bitmap_plot::x#2 x zp ZP_WORD:4 4.0
(word) bitmap_plot::x#3 x zp ZP_WORD:4 2002.0
(word) bitmap_plot::x#4 x zp ZP_WORD:4 502.5
(byte) bitmap_plot::y
(byte) bitmap_plot::y#0 reg byte x 2.0
(byte) bitmap_plot::y#1 reg byte x 1001.0
(byte) bitmap_plot::y#2 reg byte x 2.0
(byte) bitmap_plot::y#3 reg byte x 1001.0
(byte) bitmap_plot::y#4 reg byte x 2010.0
(byte[$100]) bitmap_plot_bit
(const byte[$100]) bitmap_plot_bit#0 bitmap_plot_bit = { fill( $100, 0) }
(void()) bitmap_plot_spline_8seg()
(byte~) bitmap_plot_spline_8seg::$8 reg byte x 500.5
(byte~) bitmap_plot_spline_8seg::$9 reg byte x 1501.5
(label) bitmap_plot_spline_8seg::@1
(label) bitmap_plot_spline_8seg::@2
(label) bitmap_plot_spline_8seg::@return
(signed word) bitmap_plot_spline_8seg::current_x
(signed word) bitmap_plot_spline_8seg::current_x#0 current_x zp ZP_WORD:4 2.0
(signed word) bitmap_plot_spline_8seg::current_x#1 current_x zp ZP_WORD:4 500.5
(signed word) bitmap_plot_spline_8seg::current_x#2 current_x zp ZP_WORD:4 1003.0
(signed word) bitmap_plot_spline_8seg::current_y
(signed word) bitmap_plot_spline_8seg::current_y#0 current_y zp ZP_WORD:6 4.0
(signed word) bitmap_plot_spline_8seg::current_y#1 current_y zp ZP_WORD:6 667.3333333333334
(signed word) bitmap_plot_spline_8seg::current_y#2 current_y zp ZP_WORD:6 501.5
(byte) bitmap_plot_spline_8seg::n
(byte) bitmap_plot_spline_8seg::n#1 n zp ZP_BYTE:8 1501.5
(byte) bitmap_plot_spline_8seg::n#2 n zp ZP_BYTE:8 400.4
(byte[$100]) bitmap_plot_yhi
(const byte[$100]) bitmap_plot_yhi#0 bitmap_plot_yhi = { fill( $100, 0) }
(byte[$100]) bitmap_plot_ylo
(const byte[$100]) bitmap_plot_ylo#0 bitmap_plot_ylo = { fill( $100, 0) }
(byte*) bitmap_screen
(struct Segment[$16]) letter_c
(const struct Segment[$16]) letter_c#0 letter_c = { fill( $16, 0) }
(void()) main()
(label) main::@1
(label) main::@10
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::@8
(label) main::@9
(byte) main::angle
(byte) main::angle#1 angle zp ZP_BYTE:2 22.0
(byte) main::angle#2 angle zp ZP_BYTE:2 3.3000000000000003
(label) main::toD0181
(word~) main::toD0181_$0
(number~) main::toD0181_$1
(number~) main::toD0181_$2
(number~) main::toD0181_$3
(word~) main::toD0181_$4
(byte~) main::toD0181_$5
(number~) main::toD0181_$6
(number~) main::toD0181_$7
(number~) main::toD0181_$8
(byte*) main::toD0181_gfx
(byte) main::toD0181_return
(const byte) main::toD0181_return#0 toD0181_return = >(word)(const byte*) BITMAP_SCREEN#0&(word) $3fff*(byte) 4|>(word)(const byte*) BITMAP_GRAPHICS#0/(byte) 4&(byte) $f
(byte*) main::toD0181_screen
(label) main::vicSelectGfxBank1
(byte~) main::vicSelectGfxBank1_$0
(label) main::vicSelectGfxBank1_@1
(byte*) main::vicSelectGfxBank1_gfx
(label) main::vicSelectGfxBank1_toDd001
(word~) main::vicSelectGfxBank1_toDd001_$0
(byte~) main::vicSelectGfxBank1_toDd001_$1
(number~) main::vicSelectGfxBank1_toDd001_$2
(number~) main::vicSelectGfxBank1_toDd001_$3
(byte*) main::vicSelectGfxBank1_toDd001_gfx
(byte) main::vicSelectGfxBank1_toDd001_return
(const byte) main::vicSelectGfxBank1_toDd001_return#0 vicSelectGfxBank1_toDd001_return = (byte) 3^>(word)(const byte*) BITMAP_SCREEN#0/(byte) $40
(byte) main::w
(byte) main::w#1 reg byte x 151.5
(byte) main::w#4 reg byte x 734.6666666666666
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(label) memset::@1
(label) memset::@2
(label) memset::@return
(byte) memset::c
(byte) memset::c#3 reg byte x 12.625
(byte*) memset::dst
(byte*) memset::dst#1 dst zp ZP_WORD:41 151.5
(byte*) memset::dst#2 dst zp ZP_WORD:41 152.5
(byte*~) memset::dst#3 dst zp ZP_WORD:41 4.0
(byte*) memset::end
(byte*) memset::end#0 end zp ZP_WORD:39 17.166666666666664
(word) memset::num
(word) memset::num#2 num zp ZP_WORD:39 2.0
(void*) memset::return
(void*) memset::str
(void*) memset::str#3 str zp ZP_WORD:41
(signed dword()) mulf16s((signed word) mulf16s::a , (signed word) mulf16s::b)
(word~) mulf16s::$13 $13 zp ZP_WORD:91 4.0
(word~) mulf16s::$16 $16 zp ZP_WORD:89 4.0
(word~) mulf16s::$17 $17 zp ZP_WORD:91 4.0
(word~) mulf16s::$9 $9 zp ZP_WORD:89 4.0
(label) mulf16s::@1
(label) mulf16s::@2
(label) mulf16s::@3
(label) mulf16s::@4
(label) mulf16s::@5
(label) mulf16s::@return
(signed word) mulf16s::a
(signed word) mulf16s::a#0 a zp ZP_WORD:31 2.0
(signed word) mulf16s::a#1 a zp ZP_WORD:31 2.0
(signed word) mulf16s::a#2 a zp ZP_WORD:31 2.0
(signed word) mulf16s::a#3 a zp ZP_WORD:31 2.0
(signed word) mulf16s::a#4 a zp ZP_WORD:31 0.7692307692307693
(signed word) mulf16s::b
(signed word) mulf16s::b#0 b zp ZP_WORD:33 4.0
(signed word) mulf16s::b#1 b zp ZP_WORD:33 4.0
(signed word) mulf16s::b#2 b zp ZP_WORD:33 4.0
(signed word) mulf16s::b#3 b zp ZP_WORD:33 4.0
(signed word) mulf16s::b#4 b zp ZP_WORD:33 0.9090909090909092
(dword) mulf16s::m
(dword) mulf16s::m#0 m zp ZP_DWORD:35 2.0
(dword) mulf16s::m#1 m zp ZP_DWORD:35 4.0
(dword) mulf16s::m#2 m zp ZP_DWORD:35 4.0
(dword) mulf16s::m#4 m zp ZP_DWORD:35 4.0
(dword) mulf16s::m#5 m zp ZP_DWORD:35 2.5
(signed dword) mulf16s::return
(signed dword) mulf16s::return#0 return zp ZP_DWORD:35 1.6666666666666665
(signed dword) mulf16s::return#10 return zp ZP_DWORD:35 4.0
(signed dword) mulf16s::return#2 return zp ZP_DWORD:35 4.0
(signed dword) mulf16s::return#3 return zp ZP_DWORD:35 4.0
(signed dword) mulf16s::return#4 return zp ZP_DWORD:35 4.0
(dword()) mulf16u((word) mulf16u::a , (word) mulf16u::b)
(label) mulf16u::@return
(word) mulf16u::a
(word) mulf16u::a#0 a zp ZP_WORD:85 2.0
(word) mulf16u::b
(word) mulf16u::b#0 b zp ZP_WORD:87 2.0
(word*) mulf16u::memA
(const word*) mulf16u::memA#0 memA = (word*) 248
(word*) mulf16u::memB
(const word*) mulf16u::memB#0 memB = (word*) 250
(dword*) mulf16u::memR
(const dword*) mulf16u::memR#0 memR = (dword*) 252
(dword) mulf16u::return
(dword) mulf16u::return#0 return zp ZP_DWORD:35 1.3333333333333333
(dword) mulf16u::return#2 return zp ZP_DWORD:35 4.0
(void()) mulf_init()
(byte~) mulf_init::$10 reg byte a 22.0
(byte~) mulf_init::$11 reg byte a 22.0
(byte~) mulf_init::$7 reg byte a 22.0
(label) mulf_init::@1
(label) mulf_init::@2
(label) mulf_init::@3
(label) mulf_init::@4
(label) mulf_init::@5
(label) mulf_init::@6
(label) mulf_init::@7
(label) mulf_init::@return
(byte) mulf_init::c
(byte) mulf_init::c#1 reg byte x 2.357142857142857
(byte) mulf_init::c#2 reg byte x 22.0
(byte) mulf_init::dir
(byte) mulf_init::dir#2 dir zp ZP_BYTE:56 4.714285714285714
(byte) mulf_init::dir#3 dir zp ZP_BYTE:56 7.333333333333333
(word) mulf_init::sqr
(word) mulf_init::sqr#1 sqr zp ZP_WORD:50 7.333333333333333
(word) mulf_init::sqr#2 sqr zp ZP_WORD:50 22.0
(word) mulf_init::sqr#3 sqr zp ZP_WORD:50 9.166666666666666
(word) mulf_init::sqr#4 sqr zp ZP_WORD:50 6.6000000000000005
(byte*) mulf_init::sqr1_hi
(byte*) mulf_init::sqr1_hi#1 sqr1_hi zp ZP_WORD:47 5.5
(byte*) mulf_init::sqr1_hi#2 sqr1_hi zp ZP_WORD:47 3.0
(byte*) mulf_init::sqr1_lo
(byte*) mulf_init::sqr1_lo#1 sqr1_lo zp ZP_WORD:45 16.5
(byte*) mulf_init::sqr1_lo#2 sqr1_lo zp ZP_WORD:45 2.5384615384615383
(byte*) mulf_init::sqr2_hi
(byte*) mulf_init::sqr2_hi#1 sqr2_hi zp ZP_WORD:54 3.142857142857143
(byte*) mulf_init::sqr2_hi#2 sqr2_hi zp ZP_WORD:54 11.0
(byte*) mulf_init::sqr2_lo
(byte*) mulf_init::sqr2_lo#1 sqr2_lo zp ZP_WORD:52 16.5
(byte*) mulf_init::sqr2_lo#2 sqr2_lo zp ZP_WORD:52 4.125
(byte) mulf_init::x_2
(byte) mulf_init::x_2#1 x_2 zp ZP_BYTE:49 11.0
(byte) mulf_init::x_2#2 x_2 zp ZP_BYTE:49 4.888888888888889
(byte) mulf_init::x_2#3 x_2 zp ZP_BYTE:49 8.25
(byte) mulf_init::x_255
(byte) mulf_init::x_255#1 reg byte x 5.5
(byte) mulf_init::x_255#2 reg byte x 11.0
(byte[$200]) mulf_sqr1_hi
(const byte[$200]) mulf_sqr1_hi#0 mulf_sqr1_hi = { fill( $200, 0) }
(byte[$200]) mulf_sqr1_lo
(const byte[$200]) mulf_sqr1_lo#0 mulf_sqr1_lo = { fill( $200, 0) }
(byte[$200]) mulf_sqr2_hi
(const byte[$200]) mulf_sqr2_hi#0 mulf_sqr2_hi = { fill( $200, 0) }
(byte[$200]) mulf_sqr2_lo
(const byte[$200]) mulf_sqr2_lo#0 mulf_sqr2_lo = { fill( $200, 0) }
(struct SplineVector16()) rotate((signed word) rotate::vector_x , (signed word) rotate::vector_y , (byte) rotate::angle)
(signed dword~) rotate::$1 $1 zp ZP_DWORD:35 2.0
(signed word~) rotate::$10 $10 zp ZP_WORD:81 4.0
(signed dword~) rotate::$11 $11 zp ZP_DWORD:35 2.0
(signed word~) rotate::$12 $12 zp ZP_WORD:83 4.0
(signed word~) rotate::$13 $13 zp ZP_WORD:83 4.0
(byte~) rotate::$15 reg byte a 2.0
(byte~) rotate::$18 reg byte a 2.0
(signed word~) rotate::$2 $2 zp ZP_WORD:77 4.0
(signed dword~) rotate::$4 $4 zp ZP_DWORD:35 2.0
(signed word~) rotate::$5 $5 zp ZP_WORD:79 4.0
(signed dword~) rotate::$8 $8 zp ZP_DWORD:35 2.0
(signed word~) rotate::$9 $9 zp ZP_WORD:81 4.0
(label) rotate::@1
(label) rotate::@2
(label) rotate::@3
(label) rotate::@4
(label) rotate::@return
(byte) rotate::angle
(byte) rotate::angle#0 reg byte y 202.0
(byte) rotate::angle#1 reg byte y 202.0
(byte) rotate::angle#2 reg byte y 12.625
(signed word) rotate::cos_a
(signed word) rotate::cos_a#0 cos_a zp ZP_WORD:31 0.75
(struct SplineVector16) rotate::return
(signed word) rotate::return_x
(signed word) rotate::return_x#0 return_x zp ZP_WORD:23 101.0
(signed word) rotate::return_x#1 return_x zp ZP_WORD:23 101.0
(signed word) rotate::return_x#2 return_x zp ZP_WORD:23 34.0
(signed word) rotate::return_y
(signed word) rotate::return_y#0 return_y zp ZP_WORD:25 101.0
(signed word) rotate::return_y#1 return_y zp ZP_WORD:25 101.0
(signed word) rotate::return_y#2 return_y zp ZP_WORD:25 34.0
(signed word) rotate::rotated_x
(signed word) rotate::rotated_y
(signed word) rotate::sin_a
(signed word) rotate::sin_a#0 sin_a zp ZP_WORD:31 0.6666666666666666
(struct SplineVector16) rotate::vector
(signed word) rotate::vector_x
(signed word) rotate::vector_x#0 vector_x zp ZP_WORD:27 67.33333333333333
(signed word) rotate::vector_x#1 vector_x zp ZP_WORD:27 67.33333333333333
(signed word) rotate::vector_x#2 vector_x zp ZP_WORD:27 7.9230769230769225
(signed word) rotate::vector_y
(signed word) rotate::vector_y#0 vector_y zp ZP_WORD:29 101.0
(signed word) rotate::vector_y#1 vector_y zp ZP_WORD:29 101.0
(signed word) rotate::vector_y#2 vector_y zp ZP_WORD:29 11.444444444444443
(signed word) rotate::xr
(signed word) rotate::xr#0 xr zp ZP_WORD:77 0.25
(signed word) rotate::xr#1 xr zp ZP_WORD:77 0.4444444444444444
(signed word) rotate::yr
(signed word) rotate::yr#0 yr zp ZP_WORD:79 0.23529411764705882
(signed word) rotate::yr#1 yr zp ZP_WORD:79 1.3333333333333333
(word()) sgn_u16((word) sgn_u16::w)
(byte~) sgn_u16::$0 reg byte a 4.0
(byte~) sgn_u16::$1 reg byte a 4.0
(label) sgn_u16::@1
(label) sgn_u16::@return
(word) sgn_u16::return
(word) sgn_u16::return#0 return zp ZP_WORD:19 4.0
(word) sgn_u16::return#1 return zp ZP_WORD:19 4.0
(word) sgn_u16::return#4 return zp ZP_WORD:19 1.0
(word) sgn_u16::w
(word) sgn_u16::w#0 w zp ZP_WORD:17 4.0
(word) sgn_u16::w#1 w zp ZP_WORD:17 4.0
(word) sgn_u16::w#2 w zp ZP_WORD:17 6.0
(void()) show_letter((byte) show_letter::angle)
(struct SplineVector16~) show_letter::$2
(byte~) show_letter::$20 reg byte x 151.5
(byte~) show_letter::$21 reg byte x 151.5
(byte~) show_letter::$22 reg byte a 202.0
(byte) show_letter::$32 reg byte a 202.0
(byte) show_letter::$34 reg byte a 202.0
(byte) show_letter::$36 reg byte a 202.0
(struct SplineVector16~) show_letter::$7
(label) show_letter::@1
(label) show_letter::@2
(label) show_letter::@3
(label) show_letter::@4
(label) show_letter::@5
(label) show_letter::@6
(label) show_letter::@7
(label) show_letter::@8
(label) show_letter::@9
(label) show_letter::@return
(byte) show_letter::angle
(byte) show_letter::angle#0 angle zp ZP_BYTE:2 3.6724137931034484
(signed word) show_letter::current_x
(signed word) show_letter::current_x#10 current_x#10 zp ZP_WORD:57 7.76923076923077
(signed word~) show_letter::current_x#11 current_x zp ZP_WORD:4 101.0
(signed word) show_letter::current_x#4 current_x zp ZP_WORD:4 5.315789473684211
(signed word) show_letter::current_y
(signed word) show_letter::current_y#10 current_y#10 zp ZP_WORD:59 7.76923076923077
(signed word~) show_letter::current_y#11 current_y zp ZP_WORD:6 202.0
(signed word) show_letter::current_y#4 current_y zp ZP_WORD:6 5.05
(byte) show_letter::i
(byte) show_letter::i#1 i zp ZP_BYTE:3 75.75
(byte) show_letter::i#10 i zp ZP_BYTE:3 15.538461538461537
(signed word) show_letter::segment_to_x
(signed word) show_letter::segment_to_y
(byte) show_letter::segment_type
(byte) show_letter::segment_type#0 reg byte a 151.5
(signed word) show_letter::segment_via_x
(signed word) show_letter::segment_via_x#0 segment_via_x zp ZP_WORD:23 22.444444444444443
(signed word) show_letter::segment_via_y
(signed word) show_letter::segment_via_y#0 segment_via_y zp ZP_WORD:25 22.444444444444443
(signed word) show_letter::to_x
(signed word) show_letter::to_x#0 to_x zp ZP_WORD:27 101.0
(signed word) show_letter::to_x#1 to_x zp ZP_WORD:27 101.0
(signed word) show_letter::to_x#2 to_x#2 zp ZP_WORD:23 101.0
(signed word) show_letter::to_y
(signed word) show_letter::to_y#0 to_y zp ZP_WORD:29 101.0
(signed word) show_letter::to_y#1 to_y zp ZP_WORD:29 101.0
(signed word) show_letter::to_y#2 to_y#2 zp ZP_WORD:25 101.0
(signed word) show_letter::via_x
(signed word) show_letter::via_x#0 via_x zp ZP_WORD:27 101.0
(signed word) show_letter::via_x#1 via_x zp ZP_WORD:27 101.0
(signed word) show_letter::via_x#2 via_x#2 zp ZP_WORD:23 101.0
(signed word) show_letter::via_y
(signed word) show_letter::via_y#0 via_y zp ZP_WORD:29 101.0
(signed word) show_letter::via_y#1 via_y zp ZP_WORD:29 101.0
(signed word) show_letter::via_y#2 via_y#2 zp ZP_WORD:25 101.0
(void()) spline_8segB((signed word) spline_8segB::p0_x , (signed word) spline_8segB::p0_y , (signed word) spline_8segB::p1_x , (signed word) spline_8segB::p1_y , (signed word) spline_8segB::p2_x , (signed word) spline_8segB::p2_y)
(signed word~) spline_8segB::$0 $0 zp ZP_WORD:69 4.0
(signed word~) spline_8segB::$1 $1 zp ZP_WORD:69 4.0
(signed word~) spline_8segB::$10 $10 zp ZP_WORD:23 4.0
(signed word~) spline_8segB::$12 $12 zp ZP_WORD:25 4.0
(signed word~) spline_8segB::$18 $18 zp ZP_WORD:4 4.0
(signed word~) spline_8segB::$19 $19 zp ZP_WORD:4 1.3333333333333333
(signed word~) spline_8segB::$20 $20 zp ZP_WORD:6 4.0
(signed word~) spline_8segB::$21 $21 zp ZP_WORD:6 2.0
(signed word~) spline_8segB::$22 $22 zp ZP_WORD:73 2002.0
(signed word~) spline_8segB::$23 $23 zp ZP_WORD:73 500.5
(signed word~) spline_8segB::$24 $24 zp ZP_WORD:75 2002.0
(signed word~) spline_8segB::$25 $25 zp ZP_WORD:75 667.3333333333334
(signed word~) spline_8segB::$3 $3 zp ZP_WORD:71 4.0
(byte~) spline_8segB::$31 reg byte x 1501.5
(signed word~) spline_8segB::$4 $4 zp ZP_WORD:71 4.0
(signed word~) spline_8segB::$6 $6 zp ZP_WORD:23 4.0
(signed word~) spline_8segB::$8 $8 zp ZP_WORD:25 4.0
(label) spline_8segB::@1
(label) spline_8segB::@2
(label) spline_8segB::@return
(signed word) spline_8segB::a_x
(signed word) spline_8segB::a_x#0 a_x zp ZP_WORD:69 0.5
(signed word) spline_8segB::a_y
(signed word) spline_8segB::a_y#0 a_y zp ZP_WORD:71 0.6000000000000001
(signed word) spline_8segB::b_x
(signed word) spline_8segB::b_x#0 b_x zp ZP_WORD:23 1.3333333333333333
(signed word) spline_8segB::b_y
(signed word) spline_8segB::b_y#0 b_y zp ZP_WORD:25 1.3333333333333333
(signed word) spline_8segB::i_x
(signed word) spline_8segB::i_x#0 i_x zp ZP_WORD:23 0.5714285714285714
(signed word) spline_8segB::i_x#1 i_x zp ZP_WORD:23 500.5
(signed word) spline_8segB::i_x#2 i_x zp ZP_WORD:23 300.5
(signed word) spline_8segB::i_y
(signed word) spline_8segB::i_y#0 i_y zp ZP_WORD:25 0.8
(signed word) spline_8segB::i_y#1 i_y zp ZP_WORD:25 667.3333333333334
(signed word) spline_8segB::i_y#2 i_y zp ZP_WORD:25 273.1818181818182
(signed word) spline_8segB::j_x
(signed word) spline_8segB::j_x#0 j_x zp ZP_WORD:69 55.72222222222223
(signed word) spline_8segB::j_y
(signed word) spline_8segB::j_y#0 j_y zp ZP_WORD:71 59.0
(byte) spline_8segB::n
(byte) spline_8segB::n#1 reg byte y 1501.5
(byte) spline_8segB::n#2 reg byte y 250.25
(struct SplineVector16) spline_8segB::p0
(signed word) spline_8segB::p0_x
(signed word) spline_8segB::p0_x#0 p0_x zp ZP_WORD:4 4.863636363636363
(signed word) spline_8segB::p0_y
(signed word) spline_8segB::p0_y#0 p0_y zp ZP_WORD:6 4.863636363636363
(struct SplineVector16) spline_8segB::p1
(signed word) spline_8segB::p1_x
(signed word) spline_8segB::p1_x#0 p1_x zp ZP_WORD:23 10.499999999999998
(signed word) spline_8segB::p1_y
(signed word) spline_8segB::p1_y#0 p1_y zp ZP_WORD:25 9.545454545454545
(struct SplineVector16) spline_8segB::p2
(signed word) spline_8segB::p2_x
(signed word) spline_8segB::p2_x#0 p2_x zp ZP_WORD:57 34.33333333333333
(signed word) spline_8segB::p2_y
(signed word) spline_8segB::p2_y#0 p2_y zp ZP_WORD:59 20.599999999999998
(signed word) spline_8segB::p_x
(signed word) spline_8segB::p_x#0 p_x zp ZP_WORD:4 2.0
(signed word) spline_8segB::p_x#1 p_x zp ZP_WORD:4 334.0
(signed word) spline_8segB::p_x#2 p_x zp ZP_WORD:4 375.625
(signed word) spline_8segB::p_y
(signed word) spline_8segB::p_y#0 p_y zp ZP_WORD:6 4.0
(signed word) spline_8segB::p_y#1 p_y zp ZP_WORD:6 286.2857142857143
(signed word) spline_8segB::p_y#2 p_y zp ZP_WORD:6 333.8888888888889

zp ZP_BYTE:2 [ main::angle#2 main::angle#1 show_letter::angle#0 ]
reg byte x [ main::w#4 main::w#1 ]
zp ZP_BYTE:3 [ show_letter::i#10 show_letter::i#1 ]
zp ZP_WORD:4 [ show_letter::current_x#4 show_letter::current_x#11 bitmap_line::x#7 bitmap_line::x#6 bitmap_line::x#15 bitmap_line::x#13 bitmap_line::x#0 bitmap_line::x1#1 bitmap_line::x1#0 bitmap_line::x#12 bitmap_line::x#1 bitmap_plot::x#4 bitmap_plot::x#3 bitmap_plot::x#2 bitmap_plot::x#0 bitmap_plot::x#1 spline_8segB::p0_x#0 bitmap_plot_spline_8seg::current_x#2 bitmap_plot_spline_8seg::current_x#0 bitmap_plot_spline_8seg::current_x#1 spline_8segB::p_x#2 spline_8segB::p_x#0 spline_8segB::p_x#1 spline_8segB::$18 spline_8segB::$19 ]
zp ZP_WORD:6 [ show_letter::current_y#4 show_letter::current_y#11 bitmap_line::y#15 bitmap_line::y#7 bitmap_line::y#13 bitmap_line::y#4 bitmap_line::y#0 bitmap_line::y1#1 bitmap_line::y1#0 bitmap_line::y#1 bitmap_line::y#2 spline_8segB::p0_y#0 bitmap_plot_spline_8seg::current_y#2 bitmap_plot_spline_8seg::current_y#0 bitmap_plot_spline_8seg::current_y#1 spline_8segB::p_y#2 spline_8segB::p_y#0 spline_8segB::p_y#1 spline_8segB::$20 spline_8segB::$21 ]
zp ZP_BYTE:8 [ bitmap_plot_spline_8seg::n#2 bitmap_plot_spline_8seg::n#1 ]
zp ZP_WORD:9 [ bitmap_line::x2#10 bitmap_line::x2#13 bitmap_line::x2#0 ]
zp ZP_WORD:11 [ bitmap_line::y2#11 bitmap_line::y2#13 bitmap_line::y2#0 ]
zp ZP_WORD:13 [ bitmap_line::e#3 bitmap_line::e#0 bitmap_line::e#6 bitmap_line::e#1 bitmap_line::e#2 ]
zp ZP_WORD:15 [ bitmap_line::e1#3 bitmap_line::e1#6 bitmap_line::e1#0 bitmap_line::e1#2 bitmap_line::e1#1 ]
reg byte x [ bitmap_plot::y#4 bitmap_plot::y#3 bitmap_plot::y#2 bitmap_plot::y#0 bitmap_plot::y#1 ]
zp ZP_WORD:17 [ sgn_u16::w#2 sgn_u16::w#0 sgn_u16::w#1 ]
zp ZP_WORD:19 [ sgn_u16::return#4 sgn_u16::return#0 sgn_u16::return#1 bitmap_line::sy#0 ]
zp ZP_WORD:21 [ abs_u16::return#4 abs_u16::return#2 abs_u16::w#2 abs_u16::w#0 abs_u16::w#1 abs_u16::return#0 abs_u16::return#1 bitmap_line::dy#0 ]
reg byte y [ spline_8segB::n#2 spline_8segB::n#1 ]
zp ZP_WORD:23 [ spline_8segB::i_x#2 spline_8segB::i_x#0 spline_8segB::i_x#1 spline_8segB::$10 spline_8segB::$6 spline_8segB::b_x#0 show_letter::segment_via_x#0 spline_8segB::p1_x#0 rotate::return_x#0 show_letter::to_x#2 rotate::return_x#2 rotate::return_x#1 show_letter::via_x#2 ]
zp ZP_WORD:25 [ spline_8segB::i_y#2 spline_8segB::i_y#0 spline_8segB::i_y#1 spline_8segB::$12 spline_8segB::$8 spline_8segB::b_y#0 show_letter::segment_via_y#0 spline_8segB::p1_y#0 rotate::return_y#0 show_letter::to_y#2 rotate::return_y#2 rotate::return_y#1 show_letter::via_y#2 ]
reg byte y [ rotate::angle#2 rotate::angle#0 rotate::angle#1 ]
zp ZP_WORD:27 [ rotate::vector_x#2 rotate::vector_x#0 rotate::vector_x#1 show_letter::to_x#1 show_letter::via_x#1 show_letter::to_x#0 show_letter::via_x#0 ]
zp ZP_WORD:29 [ rotate::vector_y#2 rotate::vector_y#0 rotate::vector_y#1 show_letter::to_y#1 show_letter::via_y#1 show_letter::to_y#0 show_letter::via_y#0 ]
zp ZP_WORD:31 [ mulf16s::a#4 mulf16s::a#0 mulf16s::a#1 mulf16s::a#2 mulf16s::a#3 rotate::cos_a#0 rotate::sin_a#0 ]
zp ZP_WORD:33 [ mulf16s::b#4 mulf16s::b#0 mulf16s::b#1 mulf16s::b#2 mulf16s::b#3 ]
zp ZP_DWORD:35 [ mulf16s::m#4 mulf16s::m#5 mulf16s::m#1 mulf16s::m#0 mulf16s::m#2 mulf16u::return#2 mulf16s::return#0 mulf16s::return#2 rotate::$1 mulf16s::return#3 rotate::$4 mulf16s::return#4 rotate::$8 mulf16s::return#10 rotate::$11 mulf16u::return#0 ]
zp ZP_WORD:39 [ memset::num#2 memset::end#0 ]
zp ZP_WORD:41 [ memset::str#3 memset::dst#2 memset::dst#3 memset::dst#1 ]
reg byte x [ memset::c#3 ]
reg byte a [ bitmap_init::bits#3 bitmap_init::bits#4 bitmap_init::bits#1 ]
reg byte x [ bitmap_init::x#2 bitmap_init::x#1 ]
reg byte x [ bitmap_init::y#2 bitmap_init::y#1 ]
zp ZP_WORD:43 [ bitmap_init::yoffs#2 bitmap_init::yoffs#4 bitmap_init::yoffs#1 ]
reg byte x [ mulf_init::c#2 mulf_init::c#1 ]
zp ZP_WORD:45 [ mulf_init::sqr1_lo#2 mulf_init::sqr1_lo#1 ]
zp ZP_WORD:47 [ mulf_init::sqr1_hi#2 mulf_init::sqr1_hi#1 ]
zp ZP_BYTE:49 [ mulf_init::x_2#3 mulf_init::x_2#2 mulf_init::x_2#1 ]
zp ZP_WORD:50 [ mulf_init::sqr#3 mulf_init::sqr#4 mulf_init::sqr#1 mulf_init::sqr#2 ]
reg byte x [ mulf_init::x_255#2 mulf_init::x_255#1 ]
zp ZP_WORD:52 [ mulf_init::sqr2_lo#2 mulf_init::sqr2_lo#1 ]
zp ZP_WORD:54 [ mulf_init::sqr2_hi#2 mulf_init::sqr2_hi#1 ]
zp ZP_BYTE:56 [ mulf_init::dir#2 mulf_init::dir#3 ]
reg byte a [ show_letter::$32 ]
reg byte x [ show_letter::$20 ]
zp ZP_WORD:57 [ show_letter::current_x#10 spline_8segB::p2_x#0 ]
zp ZP_WORD:59 [ show_letter::current_y#10 spline_8segB::p2_y#0 ]
reg byte a [ show_letter::$34 ]
reg byte x [ show_letter::$21 ]
reg byte a [ show_letter::$36 ]
reg byte a [ show_letter::$22 ]
reg byte a [ show_letter::segment_type#0 ]
reg byte x [ bitmap_plot_spline_8seg::$8 ]
reg byte x [ bitmap_plot_spline_8seg::$9 ]
zp ZP_WORD:61 [ bitmap_line::dx#0 ]
zp ZP_WORD:63 [ bitmap_line::sx#0 ]
zp ZP_WORD:65 [ bitmap_plot::plotter#0 bitmap_plot::plotter#1 ]
zp ZP_WORD:67 [ bitmap_plot::$1 ]
reg byte a [ bitmap_plot::$2 ]
reg byte a [ sgn_u16::$0 ]
reg byte a [ sgn_u16::$1 ]
reg byte a [ abs_u16::$0 ]
reg byte a [ abs_u16::$1 ]
zp ZP_WORD:69 [ spline_8segB::$0 spline_8segB::$1 spline_8segB::a_x#0 spline_8segB::j_x#0 ]
zp ZP_WORD:71 [ spline_8segB::$3 spline_8segB::$4 spline_8segB::a_y#0 spline_8segB::j_y#0 ]
zp ZP_WORD:73 [ spline_8segB::$22 spline_8segB::$23 ]
zp ZP_WORD:75 [ spline_8segB::$24 spline_8segB::$25 ]
reg byte x [ spline_8segB::$31 ]
zp ZP_WORD:77 [ rotate::$2 rotate::xr#0 rotate::xr#1 ]
zp ZP_WORD:79 [ rotate::$5 rotate::yr#0 rotate::yr#1 ]
zp ZP_WORD:81 [ rotate::$9 rotate::$10 ]
zp ZP_WORD:83 [ rotate::$12 rotate::$13 ]
reg byte a [ rotate::$15 ]
reg byte a [ rotate::$18 ]
zp ZP_WORD:85 [ mulf16u::a#0 ]
zp ZP_WORD:87 [ mulf16u::b#0 ]
zp ZP_WORD:89 [ mulf16s::$9 mulf16s::$16 ]
zp ZP_WORD:91 [ mulf16s::$13 mulf16s::$17 ]
zp ZP_BYTE:93 [ bitmap_init::$7 ]
reg byte a [ bitmap_init::$4 ]
reg byte a [ bitmap_init::$5 ]
reg byte a [ bitmap_init::$6 ]
reg byte a [ mulf_init::$7 ]
reg byte a [ mulf_init::$10 ]
reg byte a [ mulf_init::$11 ]
