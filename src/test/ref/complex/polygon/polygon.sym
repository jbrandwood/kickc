const nomodify byte BLACK = 0
const nomodify byte BORDER_YPOS_BOTTOM = $fa
const nomodify byte* CANVAS1 = (byte*) 12288
const nomodify byte* CANVAS2 = (byte*) 14336
const nomodify struct MOS6526_CIA* CIA1 = (struct MOS6526_CIA*) 56320
const nomodify struct MOS6526_CIA* CIA2 = (struct MOS6526_CIA*) 56576
const nomodify dword* CIA2_TIMER_AB = (dword*) 56580
const nomodify byte CIA_INTERRUPT_CLEAR = $7f
const nomodify byte CIA_TIMER_CONTROL_B_COUNT_UNDERFLOW_A = $40
const nomodify byte CIA_TIMER_CONTROL_START = 1
const nomodify byte* COLS = (byte*) 55296
const nomodify byte* CONSOLE = (byte*) 1024
const byte* COSTAB = SINTAB+$40
const nomodify byte DARK_GREY = $b
const nomodify byte IRQ_RASTER = 1
const nomodify void()** KERNEL_IRQ = (void()**) 788
const nomodify byte* LINE_BUFFER = (byte*) 8192
const byte OFFSET_STRUCT_MOS6526_CIA_INTERRUPT = $d
const byte OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL = $e
const byte OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL = $f
const byte OFFSET_STRUCT_MOS6569_VICII_BG_COLOR = $21
const byte OFFSET_STRUCT_MOS6569_VICII_BORDER_COLOR = $20
const byte OFFSET_STRUCT_MOS6569_VICII_CONTROL1 = $11
const byte OFFSET_STRUCT_MOS6569_VICII_IRQ_ENABLE = $1a
const byte OFFSET_STRUCT_MOS6569_VICII_IRQ_STATUS = $19
const byte OFFSET_STRUCT_MOS6569_VICII_MEMORY = $18
const byte OFFSET_STRUCT_MOS6569_VICII_RASTER = $12
const nomodify byte* PETSCII = (byte*) 4096
const byte RADIX::BINARY = 2
const byte RADIX::DECIMAL = $a
const byte RADIX::HEXADECIMAL = $10
const byte RADIX::OCTAL = 8
const nomodify byte RED = 2
const nomodify byte* SCREEN = (byte*) 11264
const byte* SINTAB[$140]  = kickasm {{ .fill $200, round(63 + 63*sin(i*2*PI/$100))
 }}
const nomodify struct MOS6569_VICII* VICII = (struct MOS6569_VICII*) 53248
const nomodify byte WHITE = 1
void __start()
byte* __start::__init1_toD0181_gfx
byte __start::__init1_toD0181_return
const byte __start::__init1_toD0181_return#0 __init1_toD0181_return = >(word)SCREEN&$3fff*4|>(word)CANVAS2/4&$f
byte* __start::__init1_toD0181_screen
byte abs_u8(byte abs_u8::u)
byte~ abs_u8::$0 reg byte x 20002.0
byte abs_u8::return
byte abs_u8::return#0 reg byte a 2002.0
byte abs_u8::return#1 reg byte a 2002.0
byte abs_u8::return#2 reg byte a 20002.0
byte abs_u8::return#4 reg byte a 5501.0
byte abs_u8::u
byte abs_u8::u#0 reg byte a 2002.0
byte abs_u8::u#1 reg byte a 2002.0
byte abs_u8::u#2 reg byte a 10668.333333333332
volatile byte canvas_show_flag loadstore zp[1]:20 19.75
volatile byte canvas_show_memory loadstore zp[1]:19 2.9855072463768115
void clock_start()
void eorfill(byte* eorfill::line_buffer , byte* eorfill::canvas)
byte* eorfill::canvas
byte* eorfill::canvas#0 canvas zp[2]:32 551.0
byte eorfill::eor
byte eorfill::eor#0 reg byte a 150001.5
byte eorfill::eor#1 reg byte a 1000001.0
byte eorfill::eor#2 reg byte a 1050001.5
byte* eorfill::fill_column
byte* eorfill::fill_column#1 fill_column zp[2]:32 100001.0
byte* eorfill::fill_column#2 fill_column zp[2]:32 130100.5
byte* eorfill::line_buffer
byte* eorfill::line_column
byte* eorfill::line_column#1 line_column zp[2]:30 66667.33333333333
byte* eorfill::line_column#2 line_column zp[2]:30 144444.88888888888
byte eorfill::x
byte eorfill::x#1 reg byte x 200002.0
byte eorfill::x#2 reg byte x 27273.0
byte eorfill::y
byte eorfill::y#1 reg byte y 2000002.0
byte eorfill::y#2 reg byte y 1250001.25
__interrupt(rom_min_c64) void irq_bottom_1()
byte* irq_bottom_1::toD0181_gfx
byte irq_bottom_1::toD0181_return
const byte irq_bottom_1::toD0181_return#0 toD0181_return = >(word)CONSOLE&$3fff*4|>(word)PETSCII/4&$f
byte* irq_bottom_1::toD0181_screen
__interrupt(rom_sys_c64) void irq_bottom_2()
byte~ irq_bottom_2::$0 reg byte a 4.0
byte* irq_bottom_2::toD0181_gfx
byte irq_bottom_2::toD0181_return
const byte irq_bottom_2::toD0181_return#0 toD0181_return = >(word)SCREEN&$3fff*4|>(word)LINE_BUFFER/4&$f
byte* irq_bottom_2::toD0181_screen
byte kbhit()
const nomodify byte* kbhit::CIA1_PORT_A = (byte*) 56320
const nomodify byte* kbhit::CIA1_PORT_B = (byte*) 56321
byte kbhit::return
byte kbhit::return#0 reg byte a 4.333333333333333
byte kbhit::return#2 reg byte a 4.0
void line(byte* line::canvas , byte line::x1 , byte line::y1 , byte line::x2 , byte line::y2)
byte* line::canvas
byte line::dx
byte line::dx#0 dx zp[1]:25 19462.805970149253
byte line::dy
byte line::dy#0 dy zp[1]:26 22285.85714285714
byte line::e
byte line::e#0 e zp[1]:14 2002.0
byte line::e#1 e zp[1]:14 44444.88888888889
byte line::e#2 e zp[1]:14 200002.0
byte line::e#3 e zp[1]:14 100501.5
byte line::e#5 e zp[1]:14 150001.5
byte line::e1
byte line::e1#0 e1 zp[1]:15 2002.0
byte line::e1#1 e1 zp[1]:15 1033334.6666666666
byte line::e1#2 e1 zp[1]:15 28571.714285714286
byte line::e1#3 e1 zp[1]:15 1050502.0
byte line::e2
byte line::e2#0 e2 zp[1]:18 2002.0
byte line::e2#1 e2 zp[1]:18 133334.66666666666
byte line::e2#2 e2 zp[1]:18 200002.0
byte line::e2#3 e2 zp[1]:18 28714.714285714286
byte line::e2#7 e2 zp[1]:18 150001.5
byte~ line::plot1_$0 reg byte a 2002.0
byte~ line::plot1_$1 reg byte a 2002.0
byte~ line::plot1_$2 reg byte a 2002.0
byte* line::plot1_column
byte* line::plot1_column#0 plot1_column zp[2]:34 1501.5
byte line::plot1_x
byte line::plot1_y
byte~ line::plot2_$0 reg byte a 200002.0
byte~ line::plot2_$1 reg byte a 200002.0
byte~ line::plot2_$2 reg byte a 200002.0
byte* line::plot2_column
byte* line::plot2_column#0 plot2_column zp[2]:30 150001.5
byte line::plot2_x
byte line::plot2_y
byte line::plot2_y#0 plot2_y zp[1]:29 60000.600000000006
byte~ line::plot3_$0 reg byte a 2002.0
byte~ line::plot3_$1 reg byte a 2002.0
byte~ line::plot3_$2 reg byte a 2002.0
byte* line::plot3_column
byte* line::plot3_column#0 plot3_column zp[2]:32 1501.5
byte line::plot3_x
byte line::plot3_y
byte~ line::plot4_$0 reg byte a 200002.0
byte~ line::plot4_$1 reg byte a 200002.0
byte~ line::plot4_$2 reg byte a 200002.0
byte* line::plot4_column
byte* line::plot4_column#0 plot4_column zp[2]:36 150001.5
byte line::plot4_x
byte line::plot4_y
byte~ line::plot5_$0 reg byte a 200002.0
byte~ line::plot5_$1 reg byte a 200002.0
byte~ line::plot5_$2 reg byte a 200002.0
byte* line::plot5_column
byte* line::plot5_column#0 plot5_column zp[2]:38 150001.5
byte line::plot5_x
byte line::plot5_y
byte~ line::plot6_$0 reg byte a 2002.0
byte~ line::plot6_$1 reg byte a 2002.0
byte~ line::plot6_$2 reg byte a 2002.0
byte* line::plot6_column
byte* line::plot6_column#0 plot6_column zp[2]:40 1501.5
byte line::plot6_x
byte line::plot6_y
byte line::sx
byte line::sx#0 sx zp[1]:27 5135.6949152542375
byte line::sy
byte line::sy#0 sy zp[1]:28 23672.836363636365
byte line::x
byte line::x#0 x zp[1]:16 228.4375
byte line::x#1 x zp[1]:16 100001.0
byte line::x#10 x zp[1]:16 66834.16666666666
byte line::x#12 x zp[1]:16 30200.5
byte line::x#15 x zp[1]:16 50100.6
byte line::x#17 x zp[1]:16 60401.0
byte line::x#18 x zp[1]:16 550251.25
byte line::x#19 x zp[1]:16 62500.625
byte line::x1
byte line::x1#0 x1 zp[1]:16 50.5
byte line::x1#1 x1 zp[1]:16 50.5
byte line::x1#2 x1 zp[1]:16 50.5
byte line::x2
byte line::x2#0 x2 zp[1]:12 101.0
byte line::x2#1 x2 zp[1]:12 101.0
byte line::x2#15 x2 zp[1]:12 3612.625
byte line::x2#2 x2 zp[1]:12 101.0
byte line::y
byte line::y#0 y zp[1]:17 239.27777777777777
byte line::y#1 y zp[1]:17 1001.0
byte line::y#10 y zp[1]:17 23647.411764705877
byte line::y#11 y zp[1]:17 2101004.0
byte line::y#12 y zp[1]:17 209091.36363636365
byte line::y#13 y zp[1]:17 55667.33333333333
byte line::y#15 y zp[1]:17 50334.16666666667
byte line::y#17 y zp[1]:17 583.9166666666667
byte line::y#4 y zp[1]:17 100001.0
byte line::y#7 y zp[1]:17 201003.0
byte line::y1
byte line::y1#0 y1 zp[1]:17 67.33333333333333
byte line::y1#1 y1 zp[1]:17 67.33333333333333
byte line::y1#2 y1 zp[1]:17 67.33333333333333
byte line::y2
byte line::y2#0 y2 zp[1]:13 202.0
byte line::y2#1 y2 zp[1]:13 202.0
byte line::y2#10 y2 zp[1]:13 226.68421052631578
byte line::y2#13 y2 zp[1]:13 5666.833333333334
byte line::y2#2 y2 zp[1]:13 202.0
byte line::y2#3 y2 zp[1]:13 2002.0
void main()
byte main::c
byte main::c#1 reg byte x 1001.0
byte main::c#2 reg byte x 776.0
byte main::c#4 reg byte x 202.0
byte* main::canvas
word main::canvas#1 canvas zp[2]:10 20.2
byte* main::canvas#10 canvas zp[2]:10 8.911764705882353
byte* main::canvas#19 canvas zp[2]:10 202.0
byte* main::cols
byte* main::cols#1 cols zp[2]:3 67.33333333333333
byte* main::cols#5 cols zp[2]:3 133.66666666666669
byte main::p0_idx
byte main::p0_idx#1 p0_idx zp[1]:7 14.428571428571429
byte main::p0_idx#2 p0_idx zp[1]:7 15.538461538461538
byte main::p1_idx
byte main::p1_idx#1 p1_idx zp[1]:8 15.538461538461538
byte main::p1_idx#2 p1_idx zp[1]:8 14.962962962962964
byte main::p2_idx
byte main::p2_idx#1 p2_idx zp[1]:9 16.833333333333332
byte main::p2_idx#2 p2_idx zp[1]:9 14.428571428571429
byte* main::screen
byte* main::screen#1 screen zp[2]:5 101.0
byte* main::screen#5 screen zp[2]:5 120.3
byte* main::toD0181_gfx
byte main::toD0181_return
const byte main::toD0181_return#0 toD0181_return = >(word)SCREEN&$3fff*4|>(word)CANVAS1/4&$f
byte* main::toD0181_screen
byte* main::toD0182_gfx
byte main::toD0182_return
const byte main::toD0182_return#0 toD0182_return = >(word)SCREEN&$3fff*4|>(word)CANVAS2/4&$f
byte* main::toD0182_screen
byte main::x
byte main::x#1 reg byte y 2002.0
byte main::x#2 reg byte y 1001.0
byte main::x0
byte main::x0#0 x0 zp[1]:21 16.833333333333332
byte main::x1
byte main::x1#0 x1 zp[1]:12 33.666666666666664
byte main::x2
byte main::x2#0 x2 zp[1]:12 43.285714285714285
byte main::y
byte main::y#1 y zp[1]:2 202.0
byte main::y#2 y zp[1]:2 36.72727272727273
byte main::y0
byte main::y0#0 y0 zp[1]:22 16.833333333333332
byte main::y1
byte main::y1#0 y1 zp[1]:23 33.666666666666664
byte main::y2
byte main::y2#0 y2 zp[1]:24 43.285714285714285
void* memset(void* memset::str , byte memset::c , word memset::num)
byte memset::c
byte memset::c#6 reg byte x 12500.125
byte* memset::dst
byte* memset::dst#1 dst zp[2]:32 200002.0
byte* memset::dst#2 dst zp[2]:32 133668.3333333333
byte* memset::dst#4 dst zp[2]:32 2002.0
byte* memset::end
byte* memset::end#0 end zp[2]:30 16833.666666666664
word memset::num
word memset::num#4 num zp[2]:30 1001.0
void* memset::return
void* memset::str
void* memset::str#5 str zp[2]:32
const byte* plot_bit[8]  = { $80, $40, $20, $10, 8, 4, 2, 1 }
const byte** plot_column[$10]  = { LINE_BUFFER, LINE_BUFFER+1*$80, LINE_BUFFER+(word)2*$80, LINE_BUFFER+(word)3*$80, LINE_BUFFER+(word)4*$80, LINE_BUFFER+(word)5*$80, LINE_BUFFER+(word)6*$80, LINE_BUFFER+(word)7*$80, LINE_BUFFER+(word)8*$80, LINE_BUFFER+(word)9*$80, LINE_BUFFER+(word)$a*$80, LINE_BUFFER+(word)$b*$80, LINE_BUFFER+(word)$c*$80, LINE_BUFFER+(word)$d*$80, LINE_BUFFER+(word)$e*$80, LINE_BUFFER+(word)$f*$80 }
void setup_irq()
byte sgn_u8(byte sgn_u8::u)
byte~ sgn_u8::$0 reg byte a 20002.0
byte sgn_u8::return
byte sgn_u8::return#0 reg byte a 2002.0
byte sgn_u8::return#1 reg byte a 2002.0
byte sgn_u8::return#4 reg byte a 500.5
byte sgn_u8::u
byte sgn_u8::u#0 reg byte a 2002.0
byte sgn_u8::u#1 reg byte a 2002.0
byte sgn_u8::u#2 reg byte a 12003.0

zp[1]:2 [ main::y#2 main::y#1 ]
zp[2]:3 [ main::cols#5 main::cols#1 ]
zp[2]:5 [ main::screen#5 main::screen#1 ]
zp[1]:7 [ main::p0_idx#2 main::p0_idx#1 ]
zp[1]:8 [ main::p1_idx#2 main::p1_idx#1 ]
zp[1]:9 [ main::p2_idx#2 main::p2_idx#1 ]
zp[2]:10 [ main::canvas#10 main::canvas#19 main::canvas#1 ]
reg byte y [ main::x#2 main::x#1 ]
reg byte x [ main::c#2 main::c#4 main::c#1 ]
reg byte x [ memset::c#6 ]
zp[1]:12 [ line::x2#15 line::x2#0 line::x2#1 line::x2#2 main::x1#0 main::x2#0 ]
zp[1]:13 [ line::y2#13 line::y2#10 line::y2#0 line::y2#1 line::y2#2 line::y2#3 ]
zp[1]:14 [ line::e#3 line::e#0 line::e#5 line::e#2 line::e#1 ]
zp[1]:15 [ line::e1#3 line::e1#0 line::e1#1 line::e1#2 ]
zp[1]:16 [ line::x#10 line::x#12 line::x#18 line::x#15 line::x#0 line::x1#0 line::x1#1 line::x1#2 line::x#17 line::x#1 line::x#19 ]
zp[1]:17 [ line::y#13 line::y#15 line::y#11 line::y#7 line::y#17 line::y#0 line::y1#0 line::y1#1 line::y1#2 line::y#1 line::y#10 line::y#12 line::y#4 ]
zp[1]:18 [ line::e2#3 line::e2#7 line::e2#0 line::e2#2 line::e2#1 ]
reg byte x [ eorfill::x#2 eorfill::x#1 ]
reg byte y [ eorfill::y#2 eorfill::y#1 ]
reg byte a [ eorfill::eor#2 eorfill::eor#0 eorfill::eor#1 ]
reg byte a [ abs_u8::return#4 abs_u8::return#2 abs_u8::u#2 abs_u8::u#0 abs_u8::u#1 ]
reg byte a [ sgn_u8::u#2 sgn_u8::u#0 sgn_u8::u#1 ]
reg byte a [ sgn_u8::return#4 ]
zp[1]:19 [ canvas_show_memory ]
zp[1]:20 [ canvas_show_flag ]
reg byte a [ kbhit::return#2 ]
reg byte a [ irq_bottom_2::$0 ]
zp[1]:21 [ main::x0#0 ]
zp[1]:22 [ main::y0#0 ]
zp[1]:23 [ main::y1#0 ]
zp[1]:24 [ main::y2#0 ]
reg byte a [ kbhit::return#0 ]
reg byte a [ abs_u8::return#0 ]
zp[1]:25 [ line::dx#0 ]
reg byte a [ abs_u8::return#1 ]
zp[1]:26 [ line::dy#0 ]
reg byte a [ sgn_u8::return#0 ]
zp[1]:27 [ line::sx#0 ]
reg byte a [ sgn_u8::return#1 ]
zp[1]:28 [ line::sy#0 ]
zp[1]:29 [ line::plot2_y#0 ]
reg byte a [ line::plot2_$0 ]
reg byte a [ line::plot2_$2 ]
zp[2]:30 [ line::plot2_column#0 eorfill::line_column#2 eorfill::line_column#1 memset::num#4 memset::end#0 ]
reg byte a [ line::plot2_$1 ]
reg byte a [ line::plot3_$0 ]
reg byte a [ line::plot3_$2 ]
zp[2]:32 [ line::plot3_column#0 eorfill::fill_column#2 eorfill::canvas#0 eorfill::fill_column#1 memset::str#5 memset::dst#2 memset::dst#4 memset::dst#1 ]
reg byte a [ line::plot3_$1 ]
reg byte a [ line::plot1_$0 ]
reg byte a [ line::plot1_$2 ]
zp[2]:34 [ line::plot1_column#0 ]
reg byte a [ line::plot1_$1 ]
reg byte a [ line::plot4_$0 ]
reg byte a [ line::plot4_$2 ]
zp[2]:36 [ line::plot4_column#0 ]
reg byte a [ line::plot4_$1 ]
reg byte a [ line::plot5_$0 ]
reg byte a [ line::plot5_$2 ]
zp[2]:38 [ line::plot5_column#0 ]
reg byte a [ line::plot5_$1 ]
reg byte a [ line::plot6_$0 ]
reg byte a [ line::plot6_$2 ]
zp[2]:40 [ line::plot6_column#0 ]
reg byte a [ line::plot6_$1 ]
reg byte x [ abs_u8::$0 ]
reg byte a [ sgn_u8::$0 ]
