
(void()) main()
main: scope:[main]  from
  [0] phi()
  [1] call model_ma_mem 
  to:main::@1
main::@1: scope:[main]  from main
  [2] phi()
  [3] call model_ssa_zp 
  to:main::@return
main::@return: scope:[main]  from main::@1
  [4] return 
  to:@return

(void()) model_ma_mem()
model_ma_mem: scope:[model_ma_mem]  from main
  [5] (byte*) model_ma_mem::screen ← (byte*) 1024
  [6] (byte) model_ma_mem::i ← (byte) 0
  to:model_ma_mem::@1
model_ma_mem::@1: scope:[model_ma_mem]  from model_ma_mem model_ma_mem::@1
  [7] *((byte*) model_ma_mem::screen) ← (byte) 'a'
  [8] (byte*) model_ma_mem::screen ← ++ (byte*) model_ma_mem::screen
  [9] (byte) model_ma_mem::i ← ++ (byte) model_ma_mem::i
  [10] if((byte) model_ma_mem::i!=(byte) 6) goto model_ma_mem::@1
  to:model_ma_mem::@return
model_ma_mem::@return: scope:[model_ma_mem]  from model_ma_mem::@1
  [11] return 
  to:@return

(void()) model_ssa_zp()
model_ssa_zp: scope:[model_ssa_zp]  from main::@1
  [12] phi()
  to:model_ssa_zp::@1
model_ssa_zp::@1: scope:[model_ssa_zp]  from model_ssa_zp model_ssa_zp::@1
  [13] (byte) model_ssa_zp::i#2 ← phi( model_ssa_zp/(byte) 0 model_ssa_zp::@1/(byte) model_ssa_zp::i#1 )
  [13] (byte*) model_ssa_zp::screen#2 ← phi( model_ssa_zp/(byte*) 1064 model_ssa_zp::@1/(byte*) model_ssa_zp::screen#1 )
  [14] *((byte*) model_ssa_zp::screen#2) ← (byte) 'b'
  [15] (byte*) model_ssa_zp::screen#1 ← ++ (byte*) model_ssa_zp::screen#2
  [16] (byte) model_ssa_zp::i#1 ← ++ (byte) model_ssa_zp::i#2
  [17] if((byte) model_ssa_zp::i#1!=(byte) 6) goto model_ssa_zp::@1
  to:model_ssa_zp::@return
model_ssa_zp::@return: scope:[model_ssa_zp]  from model_ssa_zp::@1
  [18] return 
  to:@return
