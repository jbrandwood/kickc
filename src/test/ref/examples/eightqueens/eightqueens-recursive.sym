__constant char * const COLORRAM = (char *) 55296
__constant char * const DEFAULT_SCREEN = (char *) 1024
__constant char DIGITS[] = "0123456789abcdef"z
__constant const char LIGHT_BLUE = $e
__constant char OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
__constant unsigned int RADIX_DECIMAL_VALUES[] = { $2710, $3e8, $64, $a }
__constant unsigned long RADIX_DECIMAL_VALUES_LONG[] = { $3b9aca00, $5f5e100, $989680, $f4240, $186a0, $2710, $3e8, $64, $a }
__constant char RADIX_HEXADECIMAL_VALUES_CHAR[] = { $10 }
__constant char SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
__constant unsigned int STACK_BASE = $103
void __start()
__constant char board[$14] = { fill( $14, 0) }
void clrscr()
char clrscr::c
char clrscr::c#1 // c zp[1]:24 20002.0
char clrscr::c#2 // c zp[1]:24 12501.25
char clrscr::l
char clrscr::l#1 // l zp[1]:26 2002.0
char clrscr::l#2 // l zp[1]:26 333.6666666666667
char *clrscr::line_cols
char *clrscr::line_cols#1 // line_cols zp[2]:5 1001.0
char *clrscr::line_cols#5 // line_cols zp[2]:5 1500.375
char *clrscr::line_text
char *clrscr::line_text#1 // line_text zp[2]:20 667.3333333333334
char *clrscr::line_text#5 // line_text zp[2]:20 1714.7142857142858
void conio_c64_init()
__constant char * const conio_c64_init::BASIC_CURSOR_LINE = (char *) 214
char conio_c64_init::line
char conio_c64_init::line#0 // line zp[1]:46 11.0
char conio_c64_init::line#2 // line zp[1]:46 22.0
__loadstore char conio_cursor_x // zp[1]:47 45.0
__loadstore char conio_cursor_y // zp[1]:48 23.0
__loadstore char *conio_line_color // zp[2]:51 19.545454545454543
__loadstore char *conio_line_text // zp[2]:49 20.476190476190478
__loadstore unsigned long count // zp[4]:29 3.0303030303424248E10
__stackcall void cputc(char c)
__constant char cputc::OFFSET_STACK_C = 0
char cputc::c
char cputc::c#0 // c zp[1]:37 3.0
void cputln()
void cscroll()
char diff(char a , char b)
char diff::a
char diff::a#0 // a zp[1]:24 1.000000000001E12
char diff::a#1 // a zp[1]:24 1.000000000001E12
char diff::a#2 // a zp[1]:24 1.60000000000025E13
char diff::b
char diff::b#0 // b zp[1]:22 2.000000000002E12
char diff::b#1 // b zp[1]:22 2.000000000002E12
char diff::b#2 // b zp[1]:22 1.60000000000025E13
char diff::return
char diff::return#0 // return zp[1]:2 2.000000000002E12
char diff::return#1 // return_1 zp[1]:24 2.000000000002E12
char diff::return#2 // return_1 zp[1]:24 2.0000000000002E13
char diff::return#3 // return_1 zp[1]:24 2.0000000000002E13
char diff::return#4 // return_1 zp[1]:24 5.500000000001E12
void gotoxy(char x , char y)
char *gotoxy::$5 // zp[2]:44 202.0
char *gotoxy::$6 // zp[2]:40 202.0
unsigned int gotoxy::$7 // zp[2]:40 151.5
unsigned int gotoxy::$8 // zp[2]:42 202.0
unsigned int gotoxy::$9 // zp[2]:40 202.0
unsigned int gotoxy::line_offset
unsigned int gotoxy::line_offset#0 // line_offset zp[2]:40 101.0
char gotoxy::x
char gotoxy::y
char gotoxy::y#2 // y zp[1]:46 22.0
char gotoxy::y#4 // y zp[1]:46 71.0
char gotoxy::y#5 // y zp[1]:46 67.33333333333333
char legal(char row , char column)
char legal::$0 // zp[1]:18 2.000000000002E12
char legal::$3 // zp[1]:2 3.333333333336667E11
char legal::$4 // zp[1]:24 2.000000000002E12
char legal::column
char legal::column#0 // column zp[1]:7 1.6666666666683334E11
char legal::i
char legal::i#1 // i zp[1]:25 2.000000000002E12
char legal::i#2 // i zp[1]:25 4.0000000000039996E11
char legal::return
char legal::return#0 // return zp[1]:26 2.000000000002E12
char legal::return#4 // return zp[1]:26 3.333333333336667E11
char legal::row
char legal::row#0 // row zp[1]:23 1.5789473684226315E11
void main()
__constant char main::s[$29] = " - n queens problem using backtracking -"
__constant char main::s1[$13] = "
number of queens:"
__constant char main::s2[$e] = "

solutions: "
__constant char main::s3[3] = ".
"
void * memcpy(void *destination , void *source , unsigned int num)
void *memcpy::destination
void *memcpy::destination#2 // destination zp[2]:35
char *memcpy::dst
char *memcpy::dst#1 // dst zp[2]:35 10001.0
char *memcpy::dst#2 // dst zp[2]:35 10334.666666666666
char *memcpy::dst#4 // dst zp[2]:35 2002.0
unsigned int memcpy::num
void *memcpy::return
void *memcpy::source
void *memcpy::source#2 // source zp[2]:33
char *memcpy::src
char *memcpy::src#1 // src zp[2]:33 20002.0
char *memcpy::src#2 // src zp[2]:33 10251.25
char *memcpy::src#4 // src zp[2]:33 1001.0
char *memcpy::src_end
char *memcpy::src_end#0 // src_end zp[2]:38 1375.25
void * memset(void *str , char c , unsigned int num)
char memset::c
char memset::c#4 // c zp[1]:37 1428.7142857142858
char *memset::dst
char *memset::dst#1 // dst zp[2]:33 20002.0
char *memset::dst#2 // dst zp[2]:33 13668.333333333332
char *memset::dst#4 // dst zp[2]:33 2002.0
char *memset::end
char *memset::end#0 // end zp[2]:35 1833.6666666666665
unsigned int memset::num
void *memset::return
void *memset::str
void *memset::str#3 // str zp[2]:33
void print()
char print::i
char print::i#1 // i zp[1]:25 2.000000000002E12
char print::i#2 // i zp[1]:25 1.000000000001E12
char print::i1
char print::i1#1 // i1 zp[1]:25 2.000000000002E12
char print::i1#2 // i1 zp[1]:25 1.0000000000003572E12
char print::j
char print::j#1 // j zp[1]:24 2.0000000000002E13
char print::j#2 // j zp[1]:24 5.714285714286286E12
__constant char print::s[3] = "
#"
__constant char print::s1[4] = ":
 "
__constant char print::s2[2] = "
"
__constant char print::s3[2] = "Q"
__constant char print::s4[2] = "-"
__loadstore struct printf_buffer_number printf_buffer = {} // mem[12]
void printf_number_buffer(void (*putc)(char) , char buffer_sign , char *buffer_digits , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
unsigned int printf_number_buffer::$19 // zp[2]:12 1.00000000000001E14
struct printf_buffer_number printf_number_buffer::buffer
char *printf_number_buffer::buffer_digits
char printf_number_buffer::buffer_sign
char printf_number_buffer::buffer_sign#0 // buffer_sign zp[1]:2 202.0
char printf_number_buffer::buffer_sign#1 // buffer_sign zp[1]:2 202.0
char printf_number_buffer::buffer_sign#10 // buffer_sign zp[1]:2 1.476190476191457E13
char printf_number_buffer::buffer_sign#2 // buffer_sign zp[1]:2 2.0000000000002E13
struct printf_format_number printf_number_buffer::format
char printf_number_buffer::format_justify_left
char printf_number_buffer::format_justify_left#10 // format_justify_left zp[1]:23 6.060606060606121E12
char printf_number_buffer::format_min_length
char printf_number_buffer::format_min_length#3 // format_min_length zp[1]:22 1.00000000000001E13
char printf_number_buffer::format_radix
char printf_number_buffer::format_sign_always
char printf_number_buffer::format_upper_case
char printf_number_buffer::format_upper_case#10 // format_upper_case zp[1]:19 3.571428571428607E12
char printf_number_buffer::format_zero_padding
char printf_number_buffer::format_zero_padding#10 // format_zero_padding zp[1]:18 8.823529411764793E12
signed char printf_number_buffer::len
signed char printf_number_buffer::len#0 // len zp[1]:4 1.500000000000015E14
signed char printf_number_buffer::len#1 // len zp[1]:4 2.00000000000002E14
signed char printf_number_buffer::len#2 // len zp[1]:4 3.00000000000003E14
signed char printf_number_buffer::padding
signed char printf_number_buffer::padding#1 // padding zp[1]:22 1.00000000000001E14
signed char printf_number_buffer::padding#10 // padding zp[1]:22 1.6666666666666834E13
void (*printf_number_buffer::putc)(char)
void (*printf_number_buffer::putc#10)(char) // putc zp[2]:20 1.1111111111111223E13
void printf_padding(void (*putc)(char) , char pad , char length)
char printf_padding::i
char printf_padding::i#1 // i zp[1]:4 2.0E27
char printf_padding::i#2 // i zp[1]:4 1.0E27
char printf_padding::length
char printf_padding::length#0 // length zp[1]:7 2.00000000000002E14
char printf_padding::length#1 // length zp[1]:7 2.00000000000002E14
char printf_padding::length#2 // length zp[1]:7 2.00000000000002E14
char printf_padding::length#4 // length zp[1]:7 2.0000000000006E26
char printf_padding::pad
char printf_padding::pad#5 // pad zp[1]:3 1.6666666666666666E26
void (*printf_padding::putc)(char)
void (*printf_padding::putc#0)(char) // putc zp[2]:20 1.00000000000001E14
void (*printf_padding::putc#1)(char) // putc zp[2]:20 1.00000000000001E14
void (*printf_padding::putc#2)(char) // putc zp[2]:20 1.00000000000001E14
void (*printf_padding::putc#5)(char) // putc zp[2]:20 3.00000000000003E15
void printf_str(void (*putc)(char) , const char *s)
char printf_str::c
char printf_str::c#1 // c zp[1]:7 1.0E28
void (*printf_str::putc)(char)
void (*printf_str::putc#0)(char) // putc zp[2]:20 2.00000000000002E14
void (*printf_str::putc#12)(char) // putc zp[2]:20 1.00000000000001E15
const char *printf_str::s
const char *printf_str::s#0 // s zp[2]:5 1.0E28
const char *printf_str::s#11 // s zp[2]:5 1.5000000000000497E28
const char *printf_str::s#12 // s zp[2]:5 1.000000000000001E15
void printf_uchar(void (*putc)(char) , char uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_format_number printf_uchar::format
char printf_uchar::format_justify_left
char printf_uchar::format_min_length
char printf_uchar::format_radix
char printf_uchar::format_sign_always
char printf_uchar::format_upper_case
char printf_uchar::format_zero_padding
void (*printf_uchar::putc)(char)
char printf_uchar::uvalue
char printf_uchar::uvalue#0 // uvalue zp[1]:25 2.000000000002E12
char printf_uchar::uvalue#1 // uvalue zp[1]:25 2.000000000002E12
char printf_uchar::uvalue#2 // uvalue zp[1]:25 6.0000000000015E12
void printf_uint(void (*putc)(char) , unsigned int uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_format_number printf_uint::format
char printf_uint::format_justify_left
__constant char printf_uint::format_justify_left#0 = 0 // format_justify_left
char printf_uint::format_min_length
__constant char printf_uint::format_min_length#0 = 0 // format_min_length
char printf_uint::format_radix
char printf_uint::format_sign_always
char printf_uint::format_upper_case
__constant char printf_uint::format_upper_case#0 = 0 // format_upper_case
char printf_uint::format_zero_padding
__constant char printf_uint::format_zero_padding#0 = 0 // format_zero_padding
void (*printf_uint::putc)(char)
__constant void (*printf_uint::putc#0)(char) = &cputc // putc
unsigned int printf_uint::uvalue
__constant unsigned int printf_uint::uvalue#0 = 8 // uvalue
void printf_ulong(void (*putc)(char) , unsigned long uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_format_number printf_ulong::format
char printf_ulong::format_justify_left
char printf_ulong::format_min_length
char printf_ulong::format_radix
char printf_ulong::format_sign_always
char printf_ulong::format_upper_case
char printf_ulong::format_zero_padding
void (*printf_ulong::putc)(char)
unsigned long printf_ulong::uvalue
unsigned long printf_ulong::uvalue#0 // uvalue zp[4]:8 22.0
unsigned long printf_ulong::uvalue#1 // uvalue zp[4]:8 22.0
unsigned long printf_ulong::uvalue#2 // uvalue zp[4]:8 61.5
__stackcall void queen(char row)
char queen::$1 // zp[1]:26 2.000000000002E12
char queen::$4 // zp[1]:23 2.000000000002E12
__constant char queen::OFFSET_STACK_ROW = 0
__loadstore volatile char queen::column // zp[1]:27 2.9411764706505884E11
__loadstore volatile char queen::r // zp[1]:28 2.10526315795E11
char queen::row
char queen::row#0 // row zp[1]:25 202.0
unsigned int strlen(char *str)
unsigned int strlen::len
unsigned int strlen::len#1 // len zp[2]:12 1.0E27
unsigned int strlen::len#2 // len zp[2]:12 5.00000000000025E26
unsigned int strlen::return
unsigned int strlen::return#2 // return zp[2]:12 2.00000000000002E14
char *strlen::str
char *strlen::str#0 // str zp[2]:5 2.0E27
char *strlen::str#2 // str zp[2]:5 1.0E27
char * strupr(char *str)
char strupr::$0 // zp[1]:4 2.0E27
char *strupr::return
char *strupr::src
char *strupr::src#1 // src zp[2]:5 2.0E27
char *strupr::src#2 // src zp[2]:5 7.142857142857143E26
char *strupr::str
__constant char *strupr::str#0 = (char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS // str
char toupper(char ch)
char toupper::ch
char toupper::ch#0 // ch zp[1]:4 1.6999999999999998E28
char toupper::return
char toupper::return#0 // return zp[1]:4 2.0E28
char toupper::return#2 // return zp[1]:4 1.0333333333333333E28
char toupper::return#3 // return zp[1]:4 2.0E27
void uctoa(char value , char *buffer , char radix)
char *uctoa::buffer
char *uctoa::buffer#11 // buffer zp[2]:5 3.3333333333350004E25
char *uctoa::buffer#14 // buffer zp[2]:5 1.5000000000000002E26
char *uctoa::buffer#3 // buffer zp[2]:5 2.00000000000002E14
char *uctoa::buffer#4 // buffer zp[2]:5 2.0E26
char uctoa::digit
char uctoa::digit#1 // digit zp[1]:18 2.0E26
char uctoa::digit#2 // digit zp[1]:18 3.076923076923077E25
char uctoa::digit_value
char uctoa::digit_value#0 // digit_value zp[1]:4 6.000000000000001E25
char *uctoa::digit_values
char uctoa::max_digits
char uctoa::radix
char uctoa::started
char uctoa::started#2 // started zp[1]:19 6.000000000000001E25
char uctoa::started#4 // started zp[1]:19 1.0E26
char uctoa::value
char uctoa::value#0 // value zp[1]:2 1.0E26
char uctoa::value#1 // value zp[1]:2 5.5000000000001E13
char uctoa::value#2 // value zp[1]:2 6.666666666670001E25
char uctoa::value#6 // value zp[1]:2 1.5000000000000002E26
char uctoa_append(char *buffer , char value , char sub)
char *uctoa_append::buffer
char *uctoa_append::buffer#0 // buffer zp[2]:5 1.3750000000000001E26
char uctoa_append::digit
char uctoa_append::digit#1 // digit zp[1]:3 1.0E40
char uctoa_append::digit#2 // digit zp[1]:3 1.00000000000005E40
char uctoa_append::return
char uctoa_append::return#0 // return zp[1]:2 2.0E26
char uctoa_append::sub
char uctoa_append::sub#0 // sub zp[1]:4 3.33333333333335E39
char uctoa_append::value
char uctoa_append::value#0 // value zp[1]:2 3.666666666666667E26
char uctoa_append::value#1 // value zp[1]:2 2.0E40
char uctoa_append::value#2 // value zp[1]:2 5.0000000000001833E39
void ultoa(unsigned long value , char *buffer , char radix)
char ultoa::$10 // zp[1]:4 2.00000000000002E14
char ultoa::$11 // zp[1]:2 2002.0
char *ultoa::buffer
char *ultoa::buffer#11 // buffer zp[2]:20 2.8571428571571855E13
char *ultoa::buffer#14 // buffer zp[2]:20 1.500000000000015E14
char *ultoa::buffer#3 // buffer zp[2]:20 2002.0
char *ultoa::buffer#4 // buffer zp[2]:20 2.00000000000002E14
char ultoa::digit
char ultoa::digit#1 // digit zp[1]:22 2.00000000000002E14
char ultoa::digit#2 // digit zp[1]:22 2.8571428571428855E13
unsigned long ultoa::digit_value
unsigned long ultoa::digit_value#0 // digit_value zp[4]:14 6.000000000000059E13
unsigned long *ultoa::digit_values
char ultoa::max_digits
char ultoa::radix
char ultoa::started
char ultoa::started#2 // started zp[1]:23 5.00000000000005E13
char ultoa::started#4 // started zp[1]:23 1.00000000000001E14
unsigned long ultoa::value
unsigned long ultoa::value#0 // value zp[4]:8 1.00000000000001E14
unsigned long ultoa::value#1 // value zp[4]:8 551.0
unsigned long ultoa::value#2 // value zp[4]:8 5.714285714300071E13
unsigned long ultoa::value#6 // value zp[4]:8 1.500000000000015E14
unsigned long ultoa_append(char *buffer , unsigned long value , unsigned long sub)
char *ultoa_append::buffer
char *ultoa_append::buffer#0 // buffer zp[2]:20 1.3750000000000025E14
char ultoa_append::digit
char ultoa_append::digit#1 // digit zp[1]:7 1.0E27
char ultoa_append::digit#2 // digit zp[1]:7 1.0000000000005E27
unsigned long ultoa_append::return
unsigned long ultoa_append::return#0 // return zp[4]:8 2.00000000000002E14
unsigned long ultoa_append::sub
unsigned long ultoa_append::sub#0 // sub zp[4]:14 3.3333333333335E26
unsigned long ultoa_append::value
unsigned long ultoa_append::value#0 // value zp[4]:8 3.666666666666674E14
unsigned long ultoa_append::value#1 // value zp[4]:8 2.0E27
unsigned long ultoa_append::value#2 // value zp[4]:8 5.0000000000018335E26
void utoa(unsigned int value , char *buffer , char radix)
char utoa::$10 // zp[1]:18 20002.0
char utoa::$11 // zp[1]:25 2002.0
char *utoa::buffer
char *utoa::buffer#11 // buffer zp[2]:5 3000.4285714285716
char *utoa::buffer#14 // buffer zp[2]:5 15001.5
char *utoa::buffer#3 // buffer zp[2]:5 2002.0
char *utoa::buffer#4 // buffer zp[2]:5 20002.0
char utoa::digit
char utoa::digit#1 // digit zp[1]:24 20002.0
char utoa::digit#2 // digit zp[1]:24 2857.4285714285716
unsigned int utoa::digit_value
unsigned int utoa::digit_value#0 // digit_value zp[2]:12 6000.6
unsigned int *utoa::digit_values
char utoa::max_digits
__constant char utoa::max_digits#1 = 5 // max_digits
char utoa::radix
char utoa::started
char utoa::started#2 // started zp[1]:22 5000.5
char utoa::started#4 // started zp[1]:22 10001.0
unsigned int utoa::value
unsigned int utoa::value#0 // value zp[2]:20 10001.0
unsigned int utoa::value#2 // value zp[2]:20 5714.857142857143
unsigned int utoa::value#6 // value zp[2]:20 15001.5
unsigned int utoa_append(char *buffer , unsigned int value , unsigned int sub)
char *utoa_append::buffer
char *utoa_append::buffer#0 // buffer zp[2]:5 13750.25
char utoa_append::digit
char utoa_append::digit#1 // digit zp[1]:4 1.0000001E7
char utoa_append::digit#2 // digit zp[1]:4 1.00500015E7
unsigned int utoa_append::return
unsigned int utoa_append::return#0 // return zp[2]:20 20002.0
unsigned int utoa_append::sub
unsigned int utoa_append::sub#0 // sub zp[2]:12 3335000.5
unsigned int utoa_append::value
unsigned int utoa_append::value#0 // value zp[2]:20 36667.33333333333
unsigned int utoa_append::value#1 // value zp[2]:20 2.0000002E7
unsigned int utoa_append::value#2 // value zp[2]:20 5018334.166666666

zp[1]:46 [ conio_c64_init::line#2 conio_c64_init::line#0 gotoxy::y#5 gotoxy::y#4 gotoxy::y#2 ]
zp[1]:26 [ clrscr::l#2 clrscr::l#1 legal::return#4 legal::return#0 queen::$1 ]
zp[4]:8 [ printf_ulong::uvalue#2 printf_ulong::uvalue#0 printf_ulong::uvalue#1 ultoa::value#2 ultoa::value#6 ultoa::value#1 ultoa::value#0 ultoa_append::value#2 ultoa_append::value#0 ultoa_append::value#1 ultoa_append::return#0 ]
zp[1]:24 [ utoa::digit#2 utoa::digit#1 diff::a#2 diff::a#0 diff::a#1 diff::return#4 diff::return#2 diff::return#3 diff::return#1 legal::$4 clrscr::c#2 clrscr::c#1 print::j#2 print::j#1 ]
zp[1]:22 [ ultoa::digit#2 ultoa::digit#1 printf_number_buffer::format_min_length#3 printf_number_buffer::padding#10 printf_number_buffer::padding#1 utoa::started#2 utoa::started#4 diff::b#2 diff::b#0 diff::b#1 ]
zp[2]:20 [ ultoa::buffer#11 ultoa::buffer#14 ultoa::buffer#4 ultoa::buffer#3 ultoa_append::buffer#0 utoa::value#2 utoa::value#6 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 utoa_append::return#0 printf_str::putc#12 printf_str::putc#0 printf_number_buffer::putc#10 printf_padding::putc#5 printf_padding::putc#1 printf_padding::putc#2 printf_padding::putc#0 clrscr::line_text#5 clrscr::line_text#1 ]
zp[1]:19 [ uctoa::started#2 uctoa::started#4 printf_number_buffer::format_upper_case#10 ]
zp[2]:33 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
zp[2]:5 [ strupr::src#2 strupr::src#1 strlen::str#2 strlen::str#0 uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 uctoa::buffer#3 uctoa_append::buffer#0 utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 printf_str::s#11 printf_str::s#12 printf_str::s#0 clrscr::line_cols#5 clrscr::line_cols#1 ]
zp[1]:3 [ uctoa_append::digit#2 uctoa_append::digit#1 printf_padding::pad#5 ]
zp[1]:47 [ conio_cursor_x ]
zp[1]:48 [ conio_cursor_y ]
zp[2]:49 [ conio_line_text ]
zp[2]:51 [ conio_line_color ]
zp[4]:29 [ count ]
zp[1]:28 [ queen::r ]
zp[1]:27 [ queen::column ]
zp[1]:23 [ queen::$4 legal::row#0 ultoa::started#2 ultoa::started#4 printf_number_buffer::format_justify_left#10 ]
zp[1]:37 [ cputc::c#0 memset::c#4 ]
zp[2]:40 [ gotoxy::$7 gotoxy::$9 gotoxy::line_offset#0 gotoxy::$6 ]
zp[2]:42 [ gotoxy::$8 ]
zp[2]:44 [ gotoxy::$5 ]
zp[1]:7 [ printf_str::c#1 legal::column#0 ultoa_append::digit#2 ultoa_append::digit#1 printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ]
zp[1]:25 [ utoa::$11 queen::row#0 print::i#2 print::i#1 printf_uchar::uvalue#2 printf_uchar::uvalue#1 printf_uchar::uvalue#0 print::i1#2 print::i1#1 legal::i#2 legal::i#1 ]
zp[1]:18 [ utoa::$10 legal::$0 uctoa::digit#2 uctoa::digit#1 printf_number_buffer::format_zero_padding#10 ]
zp[2]:12 [ utoa::digit_value#0 utoa_append::sub#0 strlen::len#2 strlen::len#1 strlen::return#2 printf_number_buffer::$19 ]
zp[1]:2 [ ultoa::$11 diff::return#0 legal::$3 uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 uctoa_append::return#0 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ]
zp[4]:14 [ ultoa::digit_value#0 ultoa_append::sub#0 ]
zp[1]:4 [ uctoa::digit_value#0 uctoa_append::sub#0 ultoa::$10 utoa_append::digit#2 utoa_append::digit#1 printf_number_buffer::len#2 printf_number_buffer::len#0 printf_number_buffer::len#1 toupper::return#2 toupper::return#0 toupper::ch#0 toupper::return#3 strupr::$0 printf_padding::i#2 printf_padding::i#1 ]
zp[2]:38 [ memcpy::src_end#0 ]
zp[2]:35 [ memset::end#0 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
mem[12] [ printf_buffer ]
