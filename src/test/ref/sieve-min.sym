__constant const unsigned int COUNT = $4000
__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
__constant char * const SCREEN = (char *) 1024
__constant const char SQRT_COUNT = $80
void main()
char *main::$16 // zp[2]:12 22.0
unsigned int main::i
unsigned int main::i#10 // i_1 zp[2]:4 6.111111111111112
unsigned int main::i#12 // i zp[2]:10 24.6
unsigned int main::i#2 // i zp[2]:10 11.0
unsigned int main::i#3 // i_1 zp[2]:4 22.0
unsigned int main::j
unsigned int main::j#0 // j zp[2]:6 16.5
unsigned int main::j#1 // j zp[2]:6 202.0
unsigned int main::j#2 // j zp[2]:6 78.5
char *main::s
char *main::s#0 // s zp[2]:8 22.0
char *main::s#1 // s zp[2]:8 101.0
char *main::s#2 // s zp[2]:8 104.66666666666666
char *main::sieve_i
char *main::sieve_i#1 // sieve_i zp[2]:2 22.0
char *main::sieve_i#2 // sieve_i zp[2]:2 3.0
void * memset(void *str , char c , unsigned int num)
char memset::c
__constant char memset::c#0 = 0 // c
char *memset::dst
char *memset::dst#1 // dst zp[2]:12 202.0
char *memset::dst#2 // dst zp[2]:12 134.66666666666666
char *memset::end
__constant char *memset::end#0 = (char *)memset::str#0+COUNT // end
unsigned int memset::num
void *memset::return
void *memset::str
__constant void *memset::str#0 = (void *)sieve // str
void print_char(char ch)
char print_char::ch
char print_char::ch#0 // reg byte a 2002.0
char print_char::ch#1 // reg byte a 2002.0
char print_char::ch#3 // reg byte a 12003.0
char *print_char_cursor
char *print_char_cursor#20 // print_char_cursor zp[2]:10 11007.5
char *print_char_cursor#21 // print_char_cursor zp[2]:10 794.6428571428571
char *print_char_cursor#28 // print_char_cursor zp[2]:10 401.00000000000006
char *print_char_cursor#29 // print_char_cursor zp[2]:10 20.5
char *print_char_cursor#35 // print_char_cursor zp[2]:10 16.5
__constant const char print_hextab[] = "0123456789abcdef"z
char *print_line_cursor
char *print_screen
__constant char *print_screen#0 = (char *) 1024 // print_screen
void print_uchar(char b)
char print_uchar::$0 // reg byte a 2002.0
char print_uchar::$2 // reg byte x 2002.0
char print_uchar::b
char print_uchar::b#0 // reg byte x 202.0
char print_uchar::b#1 // reg byte x 202.0
char print_uchar::b#2 // reg byte x 551.0
void print_uint(unsigned int w)
unsigned int print_uint::w
unsigned int print_uint::w#0 // w zp[2]:4 71.0
__constant char *sieve = (char *) 4096

zp[2]:2 [ main::sieve_i#2 main::sieve_i#1 ]
zp[2]:4 [ main::i#10 main::i#3 print_uint::w#0 ]
zp[2]:6 [ main::j#2 main::j#1 main::j#0 ]
zp[2]:8 [ main::s#2 main::s#1 main::s#0 ]
reg byte a [ print_char::ch#3 print_char::ch#0 print_char::ch#1 ]
zp[2]:10 [ print_char_cursor#20 print_char_cursor#29 print_char_cursor#35 print_char_cursor#21 print_char_cursor#28 main::i#12 main::i#2 ]
reg byte x [ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ]
zp[2]:12 [ main::$16 memset::dst#2 memset::dst#1 ]
reg byte a [ print_uchar::$0 ]
reg byte x [ print_uchar::$2 ]
