@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()
main: scope:[main]  from @1
  [4] phi()
  [5] call incw1 
  to:main::@1
main::@1: scope:[main]  from main
  [6] phi()
  [7] call incw2 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [8] phi()
  [9] call incw1 
  to:main::@3
main::@3: scope:[main]  from main::@2
  [10] phi()
  [11] call incw2 
  to:main::@4
main::@4: scope:[main]  from main::@3
  [12] *((const word*) main::SCREEN#0) ← (word) w1#12
  [13] *((const word*) main::SCREEN#0+(byte/signed byte/word/signed word/dword/signed dword) 4) ← (word) w2#11
  to:main::@return
main::@return: scope:[main]  from main::@4
  [14] return 
  to:@return
incw2: scope:[incw2]  from main::@1 main::@3
  [15] (word) w2#10 ← phi( main::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 main::@3/(word) w2#11 )
  [16] (word) w2#11 ← ++ (word) w2#10
  to:incw2::@return
incw2::@return: scope:[incw2]  from incw2
  [17] return 
  to:@return
incw1: scope:[incw1]  from main main::@2
  [18] (word) w1#11 ← phi( main/(byte/signed byte/word/signed word/dword/signed dword) 0 main::@2/(word) w1#12 )
  [19] (word) w1#12 ← ++ (word) w1#11
  to:incw1::@return
incw1::@return: scope:[incw1]  from incw1
  [20] return 
  to:@return
