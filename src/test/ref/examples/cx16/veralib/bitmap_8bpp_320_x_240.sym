__constant const char BLACK = 0
__constant const char BLUE = 6
char CONIO_SCREEN_BANK
char CONIO_SCREEN_BANK#12 // CONIO_SCREEN_BANK zp[1]:132 625.0625
char CONIO_SCREEN_BANK#15 // CONIO_SCREEN_BANK_1 zp[1]:167 7.76056338028169
char *CONIO_SCREEN_TEXT
char *CONIO_SCREEN_TEXT#12 // CONIO_SCREEN_TEXT zp[2]:41 2.000018187272727E7
unsigned int CONIO_SCREEN_TEXT#17 // CONIO_SCREEN_TEXT_1 zp[2]:174 0.7318840579710145
__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
__constant char SIZEOF_POINTER = 2
__constant unsigned int STACK_BASE = $103
__constant const char VERA_ADDRSEL = 1
__constant char * const VERA_ADDRX_H = (char *) 40738
__constant char * const VERA_ADDRX_L = (char *) 40736
__constant char * const VERA_ADDRX_M = (char *) 40737
__constant char * const VERA_CTRL = (char *) 40741
__constant char * const VERA_DATA0 = (char *) 40739
__constant char * const VERA_DATA1 = (char *) 40740
__constant char * const VERA_DC_HSCALE = (char *) 40746
__constant char * const VERA_DC_VIDEO = (char *) 40745
__constant char * const VERA_DC_VSCALE = (char *) 40747
__constant const char VERA_INC_1 = $10
__constant char * const VERA_L0_CONFIG = (char *) 40749
__constant char * const VERA_L0_MAPBASE = (char *) 40750
__constant char * const VERA_L0_TILEBASE = (char *) 40751
__constant char * const VERA_L1_CONFIG = (char *) 40756
__constant char * const VERA_L1_MAPBASE = (char *) 40757
__constant char * const VERA_L1_TILEBASE = (char *) 40758
__constant const char VERA_LAYER0_ENABLE = $10
__constant const char VERA_LAYER1_ENABLE = $20
__constant const char VERA_LAYER_COLOR_DEPTH_1BPP = 0
__constant const char VERA_LAYER_COLOR_DEPTH_8BPP = 3
__constant const char VERA_LAYER_COLOR_DEPTH_MASK = 3
__constant const char VERA_LAYER_CONFIG_256C = 8
__constant const char VERA_LAYER_CONFIG_MODE_BITMAP = 4
__constant const unsigned int VERA_LAYER_HEIGHT[4] = { $20, $40, $80, $100 }
__constant const char VERA_LAYER_HEIGHT_128 = $80
__constant const char VERA_LAYER_HEIGHT_256 = $c0
__constant const char VERA_LAYER_HEIGHT_64 = $40
__constant const char VERA_LAYER_HEIGHT_MASK = $c0
__constant const char VERA_LAYER_TILEBASE_MASK = $fc
__constant const unsigned int VERA_LAYER_WIDTH[4] = { $20, $40, $80, $100 }
__constant const char VERA_LAYER_WIDTH_128 = $20
__constant const char VERA_LAYER_WIDTH_256 = $30
__constant const char VERA_LAYER_WIDTH_64 = $10
__constant const char VERA_LAYER_WIDTH_MASK = $30
__constant const char VERA_TILEBASE_HEIGHT_16 = 2
__constant const char VERA_TILEBASE_WIDTH_16 = 1
__constant const char WHITE = 1
__constant const char YELLOW = 7
__loadstore unsigned long __bitmap_address // zp[4]:168 4.06
__loadstore char __bitmap_color_depth // zp[1]:163 80.4074074074074
__loadstore char __bitmap_hscale // zp[1]:172 3.9102564102564106
__loadstore char __bitmap_layer // zp[1]:146 204.0
__constant const char __bitmap_plot_bitmask[$280] = { fill( $280, 0) }
__constant const char __bitmap_plot_bitshift[$280] = { fill( $280, 0) }
__constant const unsigned int __bitmap_plot_x[$280] = { fill( $280, 0) }
__constant const unsigned long __bitmap_plot_y[$1e0] = { fill( $1e0, 0) }
__loadstore char __bitmap_vscale // zp[1]:173 2.8732394366197185
void __start()
void bitmap_clear()
char bitmap_clear::$0 // reg byte a 202.0
char bitmap_clear::$1 // reg byte a 202.0
char bitmap_clear::$6 // reg byte a 202.0
char bitmap_clear::$7 // reg byte a 202.0
unsigned long bitmap_clear::count
unsigned long bitmap_clear::count#0 // count zp[4]:110 40.4
unsigned int bitmap_clear::hdelta
unsigned int bitmap_clear::hdelta#0 // hdelta zp[2]:153 202.0
char bitmap_clear::vbank
char bitmap_clear::vbank#0 // reg byte x 101.0
unsigned int bitmap_clear::vdelta
unsigned int bitmap_clear::vdelta#0 // vdelta zp[2]:157 33.666666666666664
void *bitmap_clear::vdest
unsigned int bitmap_clear::vdest#0 // vdest zp[2]:141 50.5
void bitmap_init(char layer , unsigned long address)
char bitmap_init::$0 // reg byte a 202.0
char bitmap_init::$1 // reg byte x 202.0
unsigned int bitmap_init::$10 // zp[2]:127 667.3333333333334
unsigned int bitmap_init::$13 // zp[2]:129 667.3333333333334
char bitmap_init::$2 // reg byte x 202.0
unsigned int bitmap_init::$23 // zp[2]:55 2002.0
unsigned int bitmap_init::$24 // zp[2]:57 2002.0
unsigned int bitmap_init::$25 // zp[2]:59 2002.0
unsigned int bitmap_init::$26 // zp[2]:61 2002.0
char bitmap_init::$27 // reg byte a 202.0
unsigned int bitmap_init::$28 // zp[2]:63 2002.0
const unsigned int *bitmap_init::$29 // zp[2]:55 2002.0
char bitmap_init::$3 // reg byte a 202.0
const char *bitmap_init::$30 // zp[2]:77 2002.0
const char *bitmap_init::$31 // zp[2]:79 2002.0
const unsigned int *bitmap_init::$32 // zp[2]:57 2002.0
const char *bitmap_init::$33 // zp[2]:81 2002.0
const char *bitmap_init::$34 // zp[2]:83 2002.0
const unsigned int *bitmap_init::$35 // zp[2]:59 2002.0
const char *bitmap_init::$36 // zp[2]:85 2002.0
const char *bitmap_init::$37 // zp[2]:87 2002.0
const unsigned int *bitmap_init::$38 // zp[2]:61 2002.0
const char *bitmap_init::$39 // zp[2]:89 2002.0
char bitmap_init::$4 // reg byte a 202.0
const char *bitmap_init::$40 // zp[2]:91 2002.0
const unsigned long *bitmap_init::$41 // zp[2]:63 2002.0
unsigned int bitmap_init::$7 // zp[2]:125 667.3333333333334
unsigned long bitmap_init::address
__constant unsigned long bitmap_init::address#0 = 0 // address
char bitmap_init::bitmask
char bitmap_init::bitmask#0 // bitmask zp[1]:31 101.0
char bitmap_init::bitmask#1 // bitmask zp[1]:31 2002.0
char bitmap_init::bitmask#10 // bitmask zp[1]:31 373.1818181818182
char bitmap_init::bitmask#11 // bitmask zp[1]:31 455.0
char bitmap_init::bitmask#12 // bitmask zp[1]:31 455.0
char bitmap_init::bitmask#13 // bitmask zp[1]:31 385.0
char bitmap_init::bitmask#16 // bitmask zp[1]:31 1001.0
char bitmap_init::bitmask#2 // bitmask zp[1]:31 2002.0
char bitmap_init::bitmask#3 // bitmask zp[1]:31 2002.0
char bitmap_init::bitmask#4 // bitmask zp[1]:31 2002.0
signed char bitmap_init::bitshift
signed char bitmap_init::bitshift#0 // bitshift zp[1]:30 202.0
signed char bitmap_init::bitshift#1 // bitshift zp[1]:30 1001.0
signed char bitmap_init::bitshift#10 // bitshift zp[1]:30 310.4
signed char bitmap_init::bitshift#11 // bitshift zp[1]:30 400.4
signed char bitmap_init::bitshift#12 // bitshift zp[1]:30 400.4
signed char bitmap_init::bitshift#13 // bitshift zp[1]:30 400.4
signed char bitmap_init::bitshift#14 // bitshift zp[1]:30 500.5
signed char bitmap_init::bitshift#2 // bitshift zp[1]:30 1001.0
signed char bitmap_init::bitshift#3 // bitshift zp[1]:30 1001.0
signed char bitmap_init::bitshift#4 // bitshift zp[1]:30 2002.0
unsigned int bitmap_init::hdelta
unsigned int bitmap_init::hdelta#0 // hdelta zp[2]:159 122.44444444444446
char bitmap_init::layer
__constant char bitmap_init::layer#0 = 0 // layer
char bitmap_init::vera_layer_get_color_depth1_$0 // reg byte a 202.0
char bitmap_init::vera_layer_get_color_depth1_$1 // reg byte a 202.0
char *bitmap_init::vera_layer_get_color_depth1_config
char *bitmap_init::vera_layer_get_color_depth1_config#0 // vera_layer_get_color_depth1_config zp[2]:151 202.0
char bitmap_init::vera_layer_get_color_depth1_layer
char bitmap_init::vera_layer_get_color_depth1_layer#0 // reg byte a 202.0
char bitmap_init::vera_layer_get_color_depth1_return
char bitmap_init::vera_layer_get_color_depth1_return#0 // reg byte a 202.0
char bitmap_init::vera_layer_get_color_depth1_return#1 // reg byte a 202.0
unsigned int bitmap_init::x
unsigned int bitmap_init::x#1 // x zp[2]:99 1501.5
unsigned int bitmap_init::x#10 // x zp[2]:99 353.29411764705884
unsigned int bitmap_init::y
unsigned int bitmap_init::y#1 // y zp[2]:6 1501.5
unsigned int bitmap_init::y#2 // y zp[2]:6 600.5999999999999
unsigned long bitmap_init::yoffs
unsigned long bitmap_init::yoffs#0 // yoffs zp[4]:102 202.0
unsigned long bitmap_init::yoffs#1 // yoffs zp[4]:102 667.3333333333334
unsigned long bitmap_init::yoffs#2 // yoffs zp[4]:102 776.0
void bitmap_line(unsigned int x0 , unsigned int x1 , unsigned int y0 , unsigned int y1 , char c)
char bitmap_line::c
char bitmap_line::c#0 // reg byte x 202.0
char bitmap_line::c#1 // reg byte x 2002.0
char bitmap_line::c#10 // reg byte x 1502.037037037037
unsigned int bitmap_line::x0
unsigned int bitmap_line::x0#0 // x0 zp[2]:10 8.782608695652174
unsigned int bitmap_line::x0#1 // x0 zp[2]:10 667.3333333333334
unsigned int bitmap_line::x0#10 // x0 zp[2]:10 4555.550000000001
unsigned int bitmap_line::x1
unsigned int bitmap_line::x1#0 // x1 zp[2]:8 11.882352941176471
unsigned int bitmap_line::x1#1 // x1 zp[2]:8 1001.0
unsigned int bitmap_line::x1#10 // x1 zp[2]:8 4555.550000000001
unsigned int bitmap_line::xd
unsigned int bitmap_line::xd#1 // xd zp[2]:32 3500.3500000000004
unsigned int bitmap_line::xd#2 // xd zp[2]:32 3500.3500000000004
unsigned int bitmap_line::y0
unsigned int bitmap_line::y0#0 // y0 zp[2]:2 18.363636363636363
unsigned int bitmap_line::y0#10 // y0 zp[2]:2 6005.6500000000015
unsigned int bitmap_line::y1
unsigned int bitmap_line::y1#0 // y1 zp[2]:49 40.4
unsigned int bitmap_line::y1#10 // y1 zp[2]:49 6005.6500000000015
unsigned int bitmap_line::yd
unsigned int bitmap_line::yd#1 // yd zp[2]:39 4444.888888888889
unsigned int bitmap_line::yd#10 // yd zp[2]:39 4444.888888888889
unsigned int bitmap_line::yd#11 // yd_1 zp[2]:37 4444.888888888889
unsigned int bitmap_line::yd#2 // yd_1 zp[2]:37 4444.888888888889
void bitmap_line_xdyd(unsigned int x , unsigned int y , unsigned int x1 , unsigned int xd , unsigned int yd , char c)
unsigned int bitmap_line_xdyd::$6 // zp[2]:14 2.00000002E8
char bitmap_line_xdyd::c
char bitmap_line_xdyd::c#0 // c zp[1]:30 20002.0
char bitmap_line_xdyd::c#1 // c zp[1]:30 20002.0
char bitmap_line_xdyd::c#3 // c zp[1]:30 6668000.2
unsigned int bitmap_line_xdyd::e
unsigned int bitmap_line_xdyd::e#0 // e zp[2]:6 200002.0
unsigned int bitmap_line_xdyd::e#1 // e zp[2]:6 1.3333333466666667E8
unsigned int bitmap_line_xdyd::e#2 // e zp[2]:6 2.00000002E8
unsigned int bitmap_line_xdyd::e#3 // e zp[2]:6 3.33500005E7
unsigned int bitmap_line_xdyd::e#6 // e zp[2]:6 1.00000001E8
unsigned int bitmap_line_xdyd::x
unsigned int bitmap_line_xdyd::x#0 // x zp[2]:28 3333.6666666666665
unsigned int bitmap_line_xdyd::x#1 // x zp[2]:28 3333.6666666666665
unsigned int bitmap_line_xdyd::x#2 // x zp[2]:28 3.7500000375E7
unsigned int bitmap_line_xdyd::x#3 // x zp[2]:28 6.00200008E7
unsigned int bitmap_line_xdyd::x#6 // x zp[2]:28 60001.5
unsigned int bitmap_line_xdyd::x1
unsigned int bitmap_line_xdyd::x1#0 // x1 zp[2]:10 5000.5
unsigned int bitmap_line_xdyd::x1#1 // x1 zp[2]:10 5000.5
unsigned int bitmap_line_xdyd::x1#6 // x1 zp[2]:10 6668000.2
unsigned int bitmap_line_xdyd::xd
unsigned int bitmap_line_xdyd::xd#0 // xd zp[2]:32 6667.333333333333
unsigned int bitmap_line_xdyd::xd#1 // xd zp[2]:32 6667.333333333333
unsigned int bitmap_line_xdyd::xd#5 // xd zp[2]:32 1.3334666933333334E7
unsigned int bitmap_line_xdyd::y
unsigned int bitmap_line_xdyd::y#0 // y zp[2]:2 4000.4
unsigned int bitmap_line_xdyd::y#1 // y zp[2]:2 4000.4
unsigned int bitmap_line_xdyd::y#2 // y zp[2]:2 1.00000001E8
unsigned int bitmap_line_xdyd::y#3 // y zp[2]:2 5.0012500625E7
unsigned int bitmap_line_xdyd::y#5 // y zp[2]:2 60001.5
unsigned int bitmap_line_xdyd::y#6 // y zp[2]:2 1.00000001E8
unsigned int bitmap_line_xdyd::yd
unsigned int bitmap_line_xdyd::yd#0 // yd zp[2]:39 10001.0
unsigned int bitmap_line_xdyd::yd#1 // yd zp[2]:39 10001.0
unsigned int bitmap_line_xdyd::yd#2 // yd zp[2]:39 6674666.933333334
void bitmap_line_xdyi(unsigned int x , unsigned int y , unsigned int x1 , unsigned int xd , unsigned int yd , char c)
unsigned int bitmap_line_xdyi::$6 // zp[2]:14 2.00000002E8
char bitmap_line_xdyi::c
char bitmap_line_xdyi::c#0 // c zp[1]:31 20002.0
char bitmap_line_xdyi::c#1 // c zp[1]:31 20002.0
char bitmap_line_xdyi::c#3 // c zp[1]:31 6668000.2
unsigned int bitmap_line_xdyi::e
unsigned int bitmap_line_xdyi::e#0 // e zp[2]:6 200002.0
unsigned int bitmap_line_xdyi::e#1 // e zp[2]:6 1.3333333466666667E8
unsigned int bitmap_line_xdyi::e#2 // e zp[2]:6 2.00000002E8
unsigned int bitmap_line_xdyi::e#3 // e zp[2]:6 3.33500005E7
unsigned int bitmap_line_xdyi::e#6 // e zp[2]:6 1.00000001E8
unsigned int bitmap_line_xdyi::x
unsigned int bitmap_line_xdyi::x#0 // x zp[2]:28 3333.6666666666665
unsigned int bitmap_line_xdyi::x#1 // x zp[2]:28 3333.6666666666665
unsigned int bitmap_line_xdyi::x#2 // x zp[2]:28 3.7500000375E7
unsigned int bitmap_line_xdyi::x#3 // x zp[2]:28 6.00200008E7
unsigned int bitmap_line_xdyi::x#6 // x zp[2]:28 60001.5
unsigned int bitmap_line_xdyi::x1
unsigned int bitmap_line_xdyi::x1#0 // x1 zp[2]:10 5000.5
unsigned int bitmap_line_xdyi::x1#1 // x1 zp[2]:10 5000.5
unsigned int bitmap_line_xdyi::x1#6 // x1 zp[2]:10 6668000.2
unsigned int bitmap_line_xdyi::xd
unsigned int bitmap_line_xdyi::xd#0 // xd zp[2]:32 6667.333333333333
unsigned int bitmap_line_xdyi::xd#1 // xd zp[2]:32 6667.333333333333
unsigned int bitmap_line_xdyi::xd#5 // xd zp[2]:32 1.3334666933333334E7
unsigned int bitmap_line_xdyi::y
unsigned int bitmap_line_xdyi::y#0 // y zp[2]:2 4000.4
unsigned int bitmap_line_xdyi::y#1 // y zp[2]:2 4000.4
unsigned int bitmap_line_xdyi::y#2 // y zp[2]:2 1.00000001E8
unsigned int bitmap_line_xdyi::y#3 // y zp[2]:2 5.0012500625E7
unsigned int bitmap_line_xdyi::y#5 // y zp[2]:2 60001.5
unsigned int bitmap_line_xdyi::y#6 // y zp[2]:2 1.00000001E8
unsigned int bitmap_line_xdyi::yd
unsigned int bitmap_line_xdyi::yd#0 // yd zp[2]:37 10001.0
unsigned int bitmap_line_xdyi::yd#1 // yd zp[2]:37 10001.0
unsigned int bitmap_line_xdyi::yd#2 // yd zp[2]:37 6674666.933333334
void bitmap_line_ydxd(unsigned int y , unsigned int x , unsigned int y1 , unsigned int yd , unsigned int xd , char c)
unsigned int bitmap_line_ydxd::$6 // zp[2]:14 2.00000002E8
char bitmap_line_ydxd::c
char bitmap_line_ydxd::c#0 // c zp[1]:30 20002.0
char bitmap_line_ydxd::c#1 // c zp[1]:30 20002.0
char bitmap_line_ydxd::c#3 // c zp[1]:30 6668000.2
unsigned int bitmap_line_ydxd::e
unsigned int bitmap_line_ydxd::e#0 // e zp[2]:6 200002.0
unsigned int bitmap_line_ydxd::e#1 // e zp[2]:6 1.3333333466666667E8
unsigned int bitmap_line_ydxd::e#2 // e zp[2]:6 2.00000002E8
unsigned int bitmap_line_ydxd::e#3 // e zp[2]:6 3.33500005E7
unsigned int bitmap_line_ydxd::e#6 // e zp[2]:6 1.00000001E8
unsigned int bitmap_line_ydxd::x
unsigned int bitmap_line_ydxd::x#0 // x zp[2]:10 4000.4
unsigned int bitmap_line_ydxd::x#1 // x zp[2]:10 4000.4
unsigned int bitmap_line_ydxd::x#2 // x zp[2]:10 1.00000001E8
unsigned int bitmap_line_ydxd::x#3 // x zp[2]:10 5.0012500625E7
unsigned int bitmap_line_ydxd::x#5 // x zp[2]:10 60001.5
unsigned int bitmap_line_ydxd::x#6 // x zp[2]:10 1.00000001E8
unsigned int bitmap_line_ydxd::xd
unsigned int bitmap_line_ydxd::xd#0 // xd zp[2]:32 10001.0
unsigned int bitmap_line_ydxd::xd#1 // xd zp[2]:32 10001.0
unsigned int bitmap_line_ydxd::xd#2 // xd zp[2]:32 6674666.933333334
unsigned int bitmap_line_ydxd::y
unsigned int bitmap_line_ydxd::y#0 // y zp[2]:4 3333.6666666666665
unsigned int bitmap_line_ydxd::y#1 // y zp[2]:4 3333.6666666666665
unsigned int bitmap_line_ydxd::y#2 // y zp[2]:4 6.00200008E7
unsigned int bitmap_line_ydxd::y#3 // y zp[2]:4 3.7500000375E7
unsigned int bitmap_line_ydxd::y#7 // y zp[2]:4 60001.5
unsigned int bitmap_line_ydxd::y1
unsigned int bitmap_line_ydxd::y1#0 // y1 zp[2]:2 5000.5
unsigned int bitmap_line_ydxd::y1#1 // y1 zp[2]:2 5000.5
unsigned int bitmap_line_ydxd::y1#6 // y1 zp[2]:2 6668000.2
unsigned int bitmap_line_ydxd::yd
unsigned int bitmap_line_ydxd::yd#0 // yd zp[2]:39 6667.333333333333
unsigned int bitmap_line_ydxd::yd#1 // yd zp[2]:39 6667.333333333333
unsigned int bitmap_line_ydxd::yd#5 // yd zp[2]:39 1.3334666933333334E7
void bitmap_line_ydxi(unsigned int y , unsigned int x , unsigned int y1 , unsigned int yd , unsigned int xd , char c)
unsigned int bitmap_line_ydxi::$6 // zp[2]:28 2.00000002E8
char bitmap_line_ydxi::c
char bitmap_line_ydxi::c#0 // c zp[1]:30 20002.0
char bitmap_line_ydxi::c#1 // c zp[1]:30 20002.0
char bitmap_line_ydxi::c#3 // c zp[1]:30 6668000.2
unsigned int bitmap_line_ydxi::e
unsigned int bitmap_line_ydxi::e#0 // e zp[2]:6 200002.0
unsigned int bitmap_line_ydxi::e#1 // e zp[2]:6 1.3333333466666667E8
unsigned int bitmap_line_ydxi::e#2 // e zp[2]:6 2.00000002E8
unsigned int bitmap_line_ydxi::e#3 // e zp[2]:6 3.33500005E7
unsigned int bitmap_line_ydxi::e#6 // e zp[2]:6 1.00000001E8
unsigned int bitmap_line_ydxi::x
unsigned int bitmap_line_ydxi::x#0 // x zp[2]:10 4000.4
unsigned int bitmap_line_ydxi::x#1 // x zp[2]:10 4000.4
unsigned int bitmap_line_ydxi::x#2 // x zp[2]:10 1.00000001E8
unsigned int bitmap_line_ydxi::x#3 // x zp[2]:10 5.0012500625E7
unsigned int bitmap_line_ydxi::x#5 // x zp[2]:10 60001.5
unsigned int bitmap_line_ydxi::x#6 // x zp[2]:10 1.00000001E8
unsigned int bitmap_line_ydxi::xd
unsigned int bitmap_line_ydxi::xd#0 // xd zp[2]:32 10001.0
unsigned int bitmap_line_ydxi::xd#1 // xd zp[2]:32 10001.0
unsigned int bitmap_line_ydxi::xd#2 // xd zp[2]:32 6674666.933333334
unsigned int bitmap_line_ydxi::y
unsigned int bitmap_line_ydxi::y#0 // y zp[2]:4 3333.6666666666665
unsigned int bitmap_line_ydxi::y#1 // y zp[2]:4 3333.6666666666665
unsigned int bitmap_line_ydxi::y#2 // y zp[2]:4 3.7500000375E7
unsigned int bitmap_line_ydxi::y#3 // y zp[2]:4 6.00200008E7
unsigned int bitmap_line_ydxi::y#6 // y zp[2]:4 60001.5
unsigned int bitmap_line_ydxi::y1
unsigned int bitmap_line_ydxi::y1#0 // y1 zp[2]:2 5000.5
unsigned int bitmap_line_ydxi::y1#1 // y1 zp[2]:2 5000.5
unsigned int bitmap_line_ydxi::y1#6 // y1 zp[2]:2 6668000.2
unsigned int bitmap_line_ydxi::yd
unsigned int bitmap_line_ydxi::yd#0 // yd zp[2]:37 6667.333333333333
unsigned int bitmap_line_ydxi::yd#1 // yd zp[2]:37 6667.333333333333
unsigned int bitmap_line_ydxi::yd#5 // yd zp[2]:37 1.3334666933333334E7
void bitmap_plot(unsigned int x , unsigned int y , char c)
unsigned int bitmap_plot::$10 // zp[2]:12 2.000000002E9
const unsigned int *bitmap_plot::$12 // zp[2]:14 1.000000001E9
const unsigned long *bitmap_plot::$13 // zp[2]:12 2.000000002E9
const char *bitmap_plot::$14 // zp[2]:20 2.000000002E9
const char *bitmap_plot::$15 // zp[2]:22 2.000000002E9
char bitmap_plot::$3 // reg byte x 2.000000002E9
char bitmap_plot::$6 // reg byte a 2.000000002E9
char bitmap_plot::$7 // reg byte a 2.000000002E9
char bitmap_plot::$8 // reg byte a 2.000000002E9
unsigned int bitmap_plot::$9 // zp[2]:14 2.000000002E9
char bitmap_plot::bitshift
char bitmap_plot::bitshift#0 // reg byte a 1.5000000015E9
char bitmap_plot::c
char bitmap_plot::c#0 // reg byte x 2.72727273E8
char bitmap_plot::c#1 // reg byte x 2.00000002E8
char bitmap_plot::c#2 // reg byte x 2.00000002E8
char bitmap_plot::c#3 // reg byte x 2.00000002E8
char bitmap_plot::c#4 // reg byte x 2.00000002E8
char bitmap_plot::c#5 // reg byte x 2.1818181872727272E8
unsigned long bitmap_plot::plot_x
unsigned long bitmap_plot::plot_x#0 // plot_x zp[4]:24 5.000000005E8
unsigned long bitmap_plot::plot_y
unsigned long bitmap_plot::plot_y#0 // plot_y zp[4]:16 2.000000002E9
unsigned long bitmap_plot::plotter
char bitmap_plot::vera_vram_address01_$0 // reg byte a 2.000000002E9
char bitmap_plot::vera_vram_address01_$1 // reg byte a 2.000000002E9
char bitmap_plot::vera_vram_address01_$3 // reg byte a 2.000000002E9
unsigned long bitmap_plot::vera_vram_address01_bankaddr
unsigned long bitmap_plot::vera_vram_address01_bankaddr#0 // vera_vram_address01_bankaddr zp[4]:24 3.63636364E8
char bitmap_plot::vera_vram_address01_incr
unsigned int bitmap_plot::x
unsigned int bitmap_plot::x#0 // x zp[2]:28 6.6666667333333336E7
unsigned int bitmap_plot::x#1 // x zp[2]:28 6.6666667333333336E7
unsigned int bitmap_plot::x#2 // x zp[2]:28 6.6666667333333336E7
unsigned int bitmap_plot::x#3 // x zp[2]:28 6.6666667333333336E7
unsigned int bitmap_plot::x#4 // x zp[2]:28 1.7000000035E8
unsigned int bitmap_plot::y
unsigned int bitmap_plot::y#0 // y zp[2]:4 1.00000001E8
unsigned int bitmap_plot::y#1 // y zp[2]:4 1.00000001E8
unsigned int bitmap_plot::y#2 // y zp[2]:4 1.00000001E8
unsigned int bitmap_plot::y#3 // y zp[2]:4 1.00000001E8
unsigned int bitmap_plot::y#4 // y zp[2]:4 3.5000000125E8
__constant const char bitmasks[5] = { $80, $c0, $f0, $ff }
__constant const signed char bitshifts[5] = { 7, 6, 4, 0 }
void clearline()
char clearline::$1 // reg byte a 2.00000002E8
char clearline::$2 // reg byte a 2.00000002E8
char clearline::$5 // reg byte a 2.00000002E8
char *clearline::addr
char *clearline::addr#0 // addr zp[2]:14 1.00000001E8
unsigned int clearline::c
unsigned int clearline::c#1 // c zp[2]:4 2.0000000002E10
unsigned int clearline::c#2 // c zp[2]:4 7.50000000075E9
char clearline::color
char clearline::color#0 // reg byte x 1.6833333336666665E9
void clrscr()
char clrscr::$0 // reg byte a 202.0
char clrscr::$1 // zp[1]:131 40.4
char clrscr::$2 // reg byte a 202.0
char clrscr::$5 // reg byte a 2002.0
char clrscr::$6 // reg byte a 2002.0
char clrscr::$7 // reg byte a 2002.0
char clrscr::$9 // reg byte a 202.0
char clrscr::c
char clrscr::c#1 // reg byte y 20002.0
char clrscr::c#2 // reg byte y 7500.75
char *clrscr::ch
char clrscr::color
char clrscr::color#0 // color zp[1]:131 594.2352941176471
char clrscr::l
char clrscr::l#1 // reg byte x 2002.0
char clrscr::l#2 // reg byte x 200.2
char *clrscr::line_text
char *clrscr::line_text#0 // line_text zp[2]:108 18.363636363636363
char *clrscr::line_text#1 // line_text zp[2]:108 1001.0
char *clrscr::line_text#2 // line_text zp[2]:108 293.2142857142857
__constant char conio_cursor_x[2] = { 0, 0 }
__constant char conio_cursor_y[2] = { 0, 0 }
__loadstore unsigned int conio_height // zp[2]:51 5624.185393258427
__constant unsigned int conio_line_text[2] = { 0, 0 }
__loadstore char conio_rowshift // zp[1]:43 5126904.086294416
__loadstore unsigned int conio_rowskip // zp[2]:44 4902456.401960785
__loadstore volatile char conio_screen_height // zp[1]:47 62827.3664921466
__loadstore char conio_screen_layer // zp[1]:46 1240329.689530686
__loadstore volatile char conio_screen_width // zp[1]:34 4.414101324229074E7
__constant char conio_scroll_enable[2] = { 1, 1 }
__loadstore unsigned int conio_width // zp[2]:161 111.69444444444444
void conio_x16_init()
__constant char * const conio_x16_init::BASIC_CURSOR_LINE = (char *) 214
char conio_x16_init::line
char conio_x16_init::line#0 // line zp[1]:164 2.1999999999999997
char conio_x16_init::line#1 // line zp[1]:164 22.0
char conio_x16_init::line#3 // line zp[1]:164 33.0
__stackcall void cputc(char c)
char cputc::$15 // reg byte a 20002.0
unsigned int cputc::$16 // zp[2]:39 20002.0
char cputc::$2 // reg byte a 20002.0
char cputc::$4 // reg byte a 20002.0
char cputc::$5 // reg byte a 20002.0
char cputc::$6 // reg byte a 20002.0
__constant char cputc::OFFSET_STACK_C = 0
char cputc::c
char cputc::c#0 // c zp[1]:101 1764.8823529411764
char cputc::color
char cputc::color#0 // reg byte x 1428.7142857142858
char *cputc::conio_addr
char *cputc::conio_addr#0 // conio_addr zp[2]:28 10001.0
char *cputc::conio_addr#1 // conio_addr zp[2]:28 6000.6
char cputc::scroll_enable
char cputc::scroll_enable#0 // reg byte a 20002.0
void cputln()
char cputln::$2 // reg byte a 200002.0
char cputln::$3 // reg byte a 200002.0
unsigned int cputln::temp
unsigned int cputln::temp#0 // temp zp[2]:8 200002.0
unsigned int cputln::temp#1 // temp zp[2]:8 100001.0
void cscroll()
unsigned int divr16u(unsigned int dividend , unsigned int divisor , unsigned int rem)
char divr16u::$1 // reg byte a 2000002.0
char divr16u::$2 // reg byte a 2000002.0
unsigned int divr16u::dividend
unsigned int divr16u::dividend#0 // dividend zp[2]:6 250000.25
unsigned int divr16u::dividend#1 // dividend zp[2]:6 3667.333333333333
unsigned int divr16u::dividend#2 // dividend zp[2]:6 430000.57142857136
unsigned int divr16u::divisor
unsigned int divr16u::divisor#0 // divisor zp[2]:28 117706.05882352941
char divr16u::i
char divr16u::i#1 // reg byte x 1500001.5
char divr16u::i#2 // reg byte x 153846.3076923077
unsigned int divr16u::quotient
unsigned int divr16u::quotient#1 // quotient zp[2]:37 1500001.5
unsigned int divr16u::quotient#2 // quotient zp[2]:37 1000001.0
unsigned int divr16u::quotient#3 // quotient zp[2]:37 250000.25
unsigned int divr16u::rem
unsigned int divr16u::rem#0 // rem zp[2]:32 750000.75
unsigned int divr16u::rem#1 // rem zp[2]:32 2000002.0
unsigned int divr16u::rem#10 // rem zp[2]:32 1003334.6666666666
unsigned int divr16u::rem#2 // rem zp[2]:32 2000002.0
unsigned int divr16u::rem#4 // rem zp[2]:32 2000002.0
unsigned int divr16u::rem#5 // rem zp[2]:32 1000001.0
unsigned int divr16u::return
unsigned int divr16u::return#0 // return zp[2]:37 1000001.0
void gotoxy(char x , char y)
char gotoxy::$5 // reg byte a 2.0000002E7
unsigned int gotoxy::$6 // zp[2]:35 2.0000002E7
unsigned int gotoxy::line_offset
unsigned int gotoxy::line_offset#0 // line_offset zp[2]:35 1.0000001E7
char gotoxy::x
char gotoxy::y
char gotoxy::y#1 // reg byte x 22.0
char gotoxy::y#10 // reg byte x 4000000.4
char gotoxy::y#2 // reg byte x 2000002.0
char gotoxy::y#7 // reg byte x 7000004.666666666
__constant unsigned int hdeltas[$10] = { 0, $50, $28, $14, 0, $a0, $50, $28, 0, $140, $a0, $50, 0, $280, $140, $a0 }
void insertup()
char insertup::$3 // reg byte a 2.000000002E9
char insertup::cy
char insertup::cy#0 // cy zp[1]:31 7.769230784615384E7
char insertup::i
char insertup::i#1 // reg byte x 2.000000002E9
char insertup::i#2 // reg byte x 4.000000004E8
unsigned int insertup::line
unsigned int insertup::line#0 // line zp[2]:10 2.000000002E9
char *insertup::start
char *insertup::start#0 // start zp[2]:10 1.000000001E9
char insertup::width
char insertup::width#0 // width zp[1]:30 8.416666683333334E7
char kbhit()
__constant char * const kbhit::GETIN = (char *) 65508
__constant char * const kbhit::IN_DEV = (char *) 650
__loadstore volatile char kbhit::ch // zp[1]:48 10001.0
__constant char * const kbhit::chptr = &kbhit::ch
char kbhit::return
char kbhit::return#0 // reg byte a 20002.0
char kbhit::return#1 // reg byte a 2775.75
char kbhit::return#2 // reg byte a 202.0
char kbhit::return#3 // reg byte a 2002.0
void main()
char main::$30 // reg byte a 202.0
unsigned int main::$40 // zp[2]:106 202.0
char main::$43 // reg byte a 2002.0
char main::bgcolor1_color
char main::bgcolor2_color
char main::bgcolor3_color
char main::color
char main::color#1 // color zp[1]:122 525.75
char main::color#2 // color zp[1]:122 344.8888888888889
__constant char main::s[$16] = "vera in bitmap mode,
"
__constant char main::s1[$1f] = "color depth 8 bits per pixel.
"
__constant char main::s2[$29] = "in this mode, it is possible to display
"
__constant char main::s3[$19] = "graphics in 256 colors.
"
__constant char main::s4[$10] = "press a key ..."
__constant char main::s5[$27] = "here you see all the colors possible.
"
char main::textcolor1_color
char main::textcolor2_color
char main::textcolor3_color
char main::textcolor4_color
char main::textcolor5_color
char main::vera_layer_show1_layer
unsigned int main::x
unsigned int main::x#1 // x zp[2]:116 701.0
unsigned int main::x#3 // x zp[2]:116 310.4
void memcpy_in_vram(char dest_bank , void *dest , char dest_increment , char src_bank , void *src , char src_increment , unsigned int num)
char memcpy_in_vram::$0 // reg byte a 2.0000000002E10
char memcpy_in_vram::$1 // reg byte a 2.0000000002E10
char memcpy_in_vram::$3 // reg byte a 2.0000000002E10
char memcpy_in_vram::$4 // reg byte a 2.0000000002E10
char memcpy_in_vram::$5 // reg byte a 2.0000000002E10
void *memcpy_in_vram::dest
void *memcpy_in_vram::dest#0 // dest zp[2]:10 6.666666673333334E8
void *memcpy_in_vram::dest#2 // dest zp[2]:10 2.1000000003000002E9
char memcpy_in_vram::dest_bank
char memcpy_in_vram::dest_bank#2 // reg byte y 8.333333334166666E8
char memcpy_in_vram::dest_increment
unsigned int memcpy_in_vram::i
unsigned int memcpy_in_vram::i#1 // i zp[2]:2 2.00000000002E11
unsigned int memcpy_in_vram::i#2 // i zp[2]:2 1.00000000001E11
unsigned int memcpy_in_vram::num
unsigned int memcpy_in_vram::num#0 // num zp[2]:8 1.000000001E9
unsigned int memcpy_in_vram::num#3 // num zp[2]:8 5.611111111222221E9
void *memcpy_in_vram::src
char *memcpy_in_vram::src#0 // src zp[2]:6 3.333333336666667E8
void *memcpy_in_vram::src#2 // src zp[2]:6 5.25000000075E9
void *memcpy_in_vram::src#3 // src zp[2]:6 2.000000002E9
char memcpy_in_vram::src_bank
char memcpy_in_vram::src_increment
void memset_vram(char vbank , void *vdest , char data , unsigned long num)
char memset_vram::$0 // reg byte a 2002.0
char memset_vram::$1 // reg byte a 2002.0
char memset_vram::$2 // reg byte a 2002.0
char memset_vram::data
__constant char memset_vram::data#0 = 0 // data
unsigned long memset_vram::i
unsigned long memset_vram::i#1 // i zp[4]:16 20002.0
unsigned long memset_vram::i#2 // i zp[4]:16 10001.0
unsigned long memset_vram::num
unsigned long memset_vram::num#0 // num zp[4]:110 841.8333333333333
char memset_vram::vbank
char memset_vram::vbank#0 // reg byte x 137.75
void *memset_vram::vdest
void *memset_vram::vdest#0 // vdest zp[2]:141 420.59999999999997
unsigned int modr16u(unsigned int dividend , unsigned int divisor , unsigned int rem)
unsigned int modr16u::dividend
unsigned int modr16u::dividend#0 // dividend zp[2]:6 202.0
unsigned int modr16u::dividend#1 // dividend zp[2]:6 202.0
unsigned int modr16u::dividend#2 // dividend zp[2]:6 202.0
unsigned int modr16u::dividend#3 // dividend zp[2]:6 202.0
unsigned int modr16u::dividend#4 // dividend zp[2]:6 1405.0
unsigned int modr16u::divisor
unsigned int modr16u::divisor#4 // divisor zp[2]:139 500.5
unsigned int modr16u::rem
unsigned int modr16u::return
unsigned int modr16u::return#0 // return zp[2]:114 234.16666666666669
unsigned int modr16u::return#10 // return zp[2]:114 202.0
unsigned int modr16u::return#2 // return zp[2]:114 202.0
unsigned int modr16u::return#3 // return zp[2]:114 202.0
unsigned int modr16u::return#4 // return zp[2]:114 202.0
unsigned long mul16u(unsigned int a , unsigned int b)
char mul16u::$1 // reg byte a 20002.0
unsigned int mul16u::a
unsigned int mul16u::a#0 // a zp[2]:6 367.33333333333337
unsigned int mul16u::a#1 // a zp[2]:6 10001.0
unsigned int mul16u::a#2 // a zp[2]:6 6834.166666666666
unsigned int mul16u::b
unsigned int mul16u::b#0 // b zp[2]:157 101.0
unsigned long mul16u::mb
unsigned long mul16u::mb#0 // mb zp[4]:24 2002.0
unsigned long mul16u::mb#1 // mb zp[4]:24 20002.0
unsigned long mul16u::mb#2 // mb zp[4]:24 4429.142857142857
unsigned long mul16u::res
unsigned long mul16u::res#1 // res zp[4]:16 20002.0
unsigned long mul16u::res#2 // res zp[4]:16 5017.333333333333
unsigned long mul16u::res#6 // res zp[4]:16 10001.0
unsigned long mul16u::return
unsigned long mul16u::return#0 // return zp[4]:110 202.0
void printf_str(void (*putc)(char) , const char *s)
char printf_str::c
char printf_str::c#1 // reg byte a 1001.0
void (*printf_str::putc)(char)
const char *printf_str::s
const char *printf_str::s#0 // s zp[2]:49 400.4
const char *printf_str::s#8 // s zp[2]:49 1552.0
const char *printf_str::s#9 // s zp[2]:49 101.0
unsigned int rand()
unsigned int rand::$0 // zp[2]:93 2002.0
unsigned int rand::$1 // zp[2]:95 2002.0
unsigned int rand::$2 // zp[2]:97 2002.0
unsigned int rand::return
unsigned int rand::return#0 // return zp[2]:106 215.14285714285714
unsigned int rand::return#10 // return zp[2]:106 202.0
unsigned int rand::return#11 // return zp[2]:106 202.0
unsigned int rand::return#12 // return zp[2]:106 202.0
unsigned int rand::return#2 // return zp[2]:106 202.0
unsigned int rand::return#3 // return zp[2]:106 202.0
unsigned int rand_state
unsigned int rand_state#0 // rand_state zp[2]:53 1501.5
unsigned int rand_state#1 // rand_state zp[2]:53 1501.5
unsigned int rand_state#13 // rand_state zp[2]:53 1253.5
unsigned int rand_state#14 // rand_state zp[2]:53 78.34375
unsigned int rand_state#23 // rand_state zp[2]:53 33.666666666666664
unsigned int rem16u
unsigned int rem16u#0 // rem16u zp[2]:65 3667.333333333333
void screenlayer(char layer)
unsigned int screenlayer::$2 // zp[2]:133 202.0
char screenlayer::$3 // reg byte a 202.0
unsigned int screenlayer::$4 // zp[2]:123 202.0
unsigned int screenlayer::$5 // zp[2]:135 202.0
char screenlayer::layer
char screenlayer::vera_layer_get_height1_$0 // reg byte a 202.0
char screenlayer::vera_layer_get_height1_$1 // reg byte a 202.0
char screenlayer::vera_layer_get_height1_$2 // reg byte a 202.0
char screenlayer::vera_layer_get_height1_$3 // reg byte a 202.0
char *screenlayer::vera_layer_get_height1_config
char *screenlayer::vera_layer_get_height1_config#0 // vera_layer_get_height1_config zp[2]:149 202.0
char screenlayer::vera_layer_get_height1_layer
char screenlayer::vera_layer_get_height1_layer#0 // reg byte a 202.0
unsigned int screenlayer::vera_layer_get_height1_return
unsigned int screenlayer::vera_layer_get_height1_return#0 // vera_layer_get_height1_return zp[2]:135 202.0
unsigned int screenlayer::vera_layer_get_height1_return#1 // vera_layer_get_height1_return zp[2]:135 202.0
char screenlayer::vera_layer_get_width1_$0 // reg byte a 202.0
char screenlayer::vera_layer_get_width1_$1 // reg byte a 202.0
char screenlayer::vera_layer_get_width1_$2 // reg byte a 202.0
char screenlayer::vera_layer_get_width1_$3 // reg byte a 202.0
char *screenlayer::vera_layer_get_width1_config
char *screenlayer::vera_layer_get_width1_config#0 // vera_layer_get_width1_config zp[2]:147 202.0
char screenlayer::vera_layer_get_width1_layer
char screenlayer::vera_layer_get_width1_layer#0 // reg byte a 202.0
unsigned int screenlayer::vera_layer_get_width1_return
unsigned int screenlayer::vera_layer_get_width1_return#0 // vera_layer_get_width1_return zp[2]:133 202.0
unsigned int screenlayer::vera_layer_get_width1_return#1 // vera_layer_get_width1_return zp[2]:133 202.0
void screensize(char *x , char *y)
char screensize::$1 // reg byte a 202.0
char screensize::$3 // reg byte a 202.0
char screensize::hscale
char screensize::hscale#0 // reg byte a 202.0
char screensize::vscale
char screensize::vscale#0 // reg byte a 202.0
char *screensize::x
__constant char *screensize::x#0 = &conio_screen_width // x
char *screensize::y
__constant char *screensize::y#0 = &conio_screen_height // y
__constant const unsigned int vdeltas[4] = { 0, $1e0, $f0, $a0 }
char vera_display_get_hscale()
__constant char vera_display_get_hscale::hscale[4] = { 0, $80, $40, $20 }
char vera_display_get_hscale::return
char vera_display_get_hscale::return#0 // reg byte x 3367.333333333333
char vera_display_get_hscale::return#2 // reg byte x 202.0
char vera_display_get_hscale::s
char vera_display_get_hscale::s#1 // reg byte x 15001.5
char vera_display_get_hscale::s#2 // reg byte x 20002.0
char vera_display_get_hscale::scale
__constant char vera_display_get_hscale::scale#0 = 0 // scale
char vera_display_get_vscale()
char vera_display_get_vscale::return
char vera_display_get_vscale::return#0 // reg byte x 3367.333333333333
char vera_display_get_vscale::return#2 // reg byte x 202.0
char vera_display_get_vscale::s
char vera_display_get_vscale::s#1 // reg byte x 15001.5
char vera_display_get_vscale::s#2 // reg byte x 20002.0
char vera_display_get_vscale::scale
__constant char vera_display_get_vscale::scale#0 = 0 // scale
__constant char vera_display_get_vscale::vscale[4] = { 0, $80, $40, $20 }
__constant char vera_layer_backcolor[2] = { BLUE, BLUE }
__constant char *vera_layer_config[2] = { VERA_L0_CONFIG, VERA_L1_CONFIG }
__constant char vera_layer_enable[2] = { VERA_LAYER0_ENABLE, VERA_LAYER1_ENABLE }
char vera_layer_get_backcolor(char layer)
char vera_layer_get_backcolor::layer
char vera_layer_get_backcolor::layer#0 // reg byte x 1102.0
char vera_layer_get_backcolor::return
char vera_layer_get_backcolor::return#0 // reg byte a 202.0
char vera_layer_get_backcolor::return#1 // reg byte a 367.33333333333337
char vera_layer_get_color(char layer)
char vera_layer_get_color::$0 // reg byte a 2.000000002E9
char vera_layer_get_color::$1 // reg byte a 2.000000002E9
char vera_layer_get_color::$3 // reg byte a 2.000000002E9
char *vera_layer_get_color::addr
char *vera_layer_get_color::addr#0 // addr zp[2]:8 2.000000002E9
char vera_layer_get_color::layer
char vera_layer_get_color::layer#0 // reg byte x 20002.0
char vera_layer_get_color::layer#1 // reg byte x 2.00000002E8
char vera_layer_get_color::layer#2 // reg byte x 6.833350010000001E8
char vera_layer_get_color::return
char vera_layer_get_color::return#0 // reg byte a 20002.0
char vera_layer_get_color::return#1 // reg byte a 2.000000002E9
char vera_layer_get_color::return#2 // reg byte a 2.000000002E9
char vera_layer_get_color::return#3 // reg byte a 5.25002501E8
char vera_layer_get_color::return#4 // reg byte a 2.00000002E8
char vera_layer_get_mapbase_bank(char layer)
char vera_layer_get_mapbase_bank::layer
char vera_layer_get_mapbase_bank::layer#0 // reg byte x 1102.0
char vera_layer_get_mapbase_bank::return
char vera_layer_get_mapbase_bank::return#0 // reg byte a 367.33333333333337
char vera_layer_get_mapbase_bank::return#2 // reg byte a 202.0
unsigned int vera_layer_get_mapbase_offset(char layer)
char vera_layer_get_mapbase_offset::$0 // reg byte a 2002.0
char vera_layer_get_mapbase_offset::layer
char vera_layer_get_mapbase_offset::layer#0 // reg byte a 1102.0
unsigned int vera_layer_get_mapbase_offset::return
unsigned int vera_layer_get_mapbase_offset::return#0 // return zp[2]:137 367.33333333333337
unsigned int vera_layer_get_mapbase_offset::return#2 // return zp[2]:137 202.0
char vera_layer_get_rowshift(char layer)
char vera_layer_get_rowshift::layer
char vera_layer_get_rowshift::layer#0 // reg byte x 1102.0
char vera_layer_get_rowshift::return
char vera_layer_get_rowshift::return#0 // reg byte a 367.33333333333337
char vera_layer_get_rowshift::return#2 // reg byte a 202.0
unsigned int vera_layer_get_rowskip(char layer)
char vera_layer_get_rowskip::$0 // reg byte a 2002.0
char vera_layer_get_rowskip::layer
char vera_layer_get_rowskip::layer#0 // reg byte a 1102.0
unsigned int vera_layer_get_rowskip::return
unsigned int vera_layer_get_rowskip::return#0 // return zp[2]:123 367.33333333333337
unsigned int vera_layer_get_rowskip::return#2 // return zp[2]:123 202.0
char vera_layer_get_textcolor(char layer)
char vera_layer_get_textcolor::layer
char vera_layer_get_textcolor::layer#0 // reg byte x 1102.0
char vera_layer_get_textcolor::return
char vera_layer_get_textcolor::return#0 // reg byte a 202.0
char vera_layer_get_textcolor::return#1 // reg byte a 367.33333333333337
__constant char *vera_layer_mapbase[2] = { VERA_L0_MAPBASE, VERA_L1_MAPBASE }
void vera_layer_mode_bitmap(char layer , unsigned long bitmap_address , unsigned int mapwidth , unsigned int color_depth)
unsigned long vera_layer_mode_bitmap::bitmap_address
__constant unsigned long vera_layer_mode_bitmap::bitmap_address#1 = 0 // bitmap_address
unsigned int vera_layer_mode_bitmap::color_depth
char vera_layer_mode_bitmap::config
__constant char vera_layer_mode_bitmap::config#11 = VERA_LAYER_COLOR_DEPTH_8BPP|VERA_LAYER_CONFIG_MODE_BITMAP // config
char vera_layer_mode_bitmap::layer
__constant char vera_layer_mode_bitmap::layer#0 = 0 // layer
unsigned int vera_layer_mode_bitmap::mapwidth
char vera_layer_mode_bitmap::tilebase
__constant char vera_layer_mode_bitmap::tilebase#1 = 0 // tilebase
void vera_layer_mode_text(char layer , unsigned long mapbase_address , unsigned long tilebase_address , unsigned int mapwidth , unsigned int mapheight , char tilewidth , char tileheight , unsigned int color_mode)
unsigned int vera_layer_mode_text::color_mode
char vera_layer_mode_text::layer
__constant char vera_layer_mode_text::layer#0 = 1 // layer
unsigned long vera_layer_mode_text::mapbase_address
__constant unsigned long vera_layer_mode_text::mapbase_address#0 = 0 // mapbase_address
unsigned int vera_layer_mode_text::mapheight
__constant unsigned int vera_layer_mode_text::mapheight#0 = $40 // mapheight
unsigned int vera_layer_mode_text::mapwidth
__constant unsigned int vera_layer_mode_text::mapwidth#0 = $80 // mapwidth
unsigned long vera_layer_mode_text::tilebase_address
__constant unsigned long vera_layer_mode_text::tilebase_address#0 = $f800 // tilebase_address
char vera_layer_mode_text::tileheight
__constant char vera_layer_mode_text::tileheight#0 = 8 // tileheight
char vera_layer_mode_text::tilewidth
__constant char vera_layer_mode_text::tilewidth#0 = 8 // tilewidth
void vera_layer_mode_tile(char layer , unsigned long mapbase_address , unsigned long tilebase_address , unsigned int mapwidth , unsigned int mapheight , char tilewidth , char tileheight , char color_depth)
unsigned int vera_layer_mode_tile::$1 // zp[2]:120 1001.0
char vera_layer_mode_tile::$11 // reg byte a 2002.0
char vera_layer_mode_tile::$12 // reg byte a 2002.0
char vera_layer_mode_tile::$13 // reg byte a 2002.0
char vera_layer_mode_tile::$14 // reg byte a 2002.0
char vera_layer_mode_tile::$17 // zp[1]:145 250.25
char vera_layer_mode_tile::$18 // zp[1]:143 273.0
char vera_layer_mode_tile::$2 // reg byte a 2002.0
unsigned int vera_layer_mode_tile::$6 // zp[2]:75 2002.0
char vera_layer_mode_tile::$7 // reg byte a 2002.0
char vera_layer_mode_tile::color_depth
char vera_layer_mode_tile::config
char vera_layer_mode_tile::config#10 // reg byte x 2002.0
char vera_layer_mode_tile::config#11 // reg byte x 2002.0
char vera_layer_mode_tile::config#12 // reg byte x 2002.0
char vera_layer_mode_tile::config#21 // reg byte x 1001.0
char vera_layer_mode_tile::config#25 // reg byte x 3003.0
char vera_layer_mode_tile::layer
char vera_layer_mode_tile::layer#10 // layer zp[1]:144 263.4210526315791
char vera_layer_mode_tile::mapbase
char vera_layer_mode_tile::mapbase#0 // reg byte x 1001.0
unsigned long vera_layer_mode_tile::mapbase_address
unsigned long vera_layer_mode_tile::mapbase_address#0 // mapbase_address zp[4]:67 2002.0
unsigned long vera_layer_mode_tile::mapbase_address#10 // mapbase_address zp[4]:67 111.22222222222223
unsigned int vera_layer_mode_tile::mapheight
unsigned int vera_layer_mode_tile::mapheight#10 // mapheight zp[2]:155 190.66666666666666
unsigned int vera_layer_mode_tile::mapwidth
unsigned int vera_layer_mode_tile::mapwidth#10 // mapwidth zp[2]:118 1001.0
char vera_layer_mode_tile::tilebase
char vera_layer_mode_tile::tilebase#0 // reg byte a 2002.0
char vera_layer_mode_tile::tilebase#1 // reg byte x 1334.6666666666667
char vera_layer_mode_tile::tilebase#10 // reg byte x 2002.0
char vera_layer_mode_tile::tilebase#12 // reg byte x 2002.0000000000002
char vera_layer_mode_tile::tilebase#3 // reg byte x 2002.0
char vera_layer_mode_tile::tilebase#5 // reg byte x 2002.0
unsigned long vera_layer_mode_tile::tilebase_address
unsigned long vera_layer_mode_tile::tilebase_address#0 // tilebase_address zp[4]:71 2002.0
unsigned long vera_layer_mode_tile::tilebase_address#10 // tilebase_address zp[4]:71 87.04347826086956
char vera_layer_mode_tile::tileheight
char vera_layer_mode_tile::tileheight#10 // tileheight zp[1]:166 37.074074074074076
char vera_layer_mode_tile::tilewidth
char vera_layer_mode_tile::tilewidth#10 // tilewidth zp[1]:165 40.04
__constant char vera_layer_rowshift[2] = { 0, 0 }
__constant unsigned int vera_layer_rowskip[2] = { 0, 0 }
char vera_layer_set_backcolor(char layer , char color)
char vera_layer_set_backcolor::color
char vera_layer_set_backcolor::color#4 // reg byte a 101.0
char vera_layer_set_backcolor::layer
char vera_layer_set_backcolor::layer#1 // reg byte x 22.0
char vera_layer_set_backcolor::layer#2 // reg byte x 22.0
char vera_layer_set_backcolor::layer#3 // reg byte x 22.0
char vera_layer_set_backcolor::layer#4 // reg byte x 134.0
char vera_layer_set_backcolor::old
char vera_layer_set_backcolor::return
void vera_layer_set_config(char layer , char config)
char vera_layer_set_config::$0 // reg byte a 20002.0
char *vera_layer_set_config::addr
char *vera_layer_set_config::addr#0 // addr zp[2]:35 20002.0
char vera_layer_set_config::config
char vera_layer_set_config::config#0 // reg byte x 2002.0
char vera_layer_set_config::config#2 // reg byte x 3667.333333333333
char vera_layer_set_config::layer
char vera_layer_set_config::layer#0 // reg byte a 1001.0
char vera_layer_set_config::layer#2 // reg byte a 11002.0
void vera_layer_set_mapbase(char layer , char mapbase)
char vera_layer_set_mapbase::$0 // reg byte a 20002.0
char *vera_layer_set_mapbase::addr
char *vera_layer_set_mapbase::addr#0 // addr zp[2]:35 20002.0
char vera_layer_set_mapbase::layer
char vera_layer_set_mapbase::layer#0 // reg byte a 1001.0
char vera_layer_set_mapbase::layer#3 // reg byte a 11002.0
char vera_layer_set_mapbase::mapbase
char vera_layer_set_mapbase::mapbase#0 // reg byte x 2002.0
char vera_layer_set_mapbase::mapbase#3 // reg byte x 3667.333333333333
void vera_layer_set_text_color_mode(char layer , char color_mode)
char *vera_layer_set_text_color_mode::addr
char *vera_layer_set_text_color_mode::addr#0 // addr zp[2]:35 2502.5
char vera_layer_set_text_color_mode::color_mode
char vera_layer_set_text_color_mode::layer
char vera_layer_set_textcolor(char layer , char color)
char vera_layer_set_textcolor::color
char vera_layer_set_textcolor::color#6 // reg byte a 101.0
char vera_layer_set_textcolor::layer
char vera_layer_set_textcolor::layer#1 // reg byte x 22.0
char vera_layer_set_textcolor::layer#2 // reg byte x 22.0
char vera_layer_set_textcolor::layer#3 // reg byte x 22.0
char vera_layer_set_textcolor::layer#4 // reg byte x 22.0
char vera_layer_set_textcolor::layer#5 // reg byte x 22.0
char vera_layer_set_textcolor::layer#6 // reg byte x 156.0
char vera_layer_set_textcolor::old
char vera_layer_set_textcolor::return
void vera_layer_set_tilebase(char layer , char tilebase)
char vera_layer_set_tilebase::$0 // reg byte a 20002.0
char *vera_layer_set_tilebase::addr
char *vera_layer_set_tilebase::addr#0 // addr zp[2]:35 20002.0
char vera_layer_set_tilebase::layer
char vera_layer_set_tilebase::layer#0 // reg byte a 1001.0
char vera_layer_set_tilebase::layer#2 // reg byte a 11002.0
char vera_layer_set_tilebase::tilebase
char vera_layer_set_tilebase::tilebase#0 // reg byte x 2002.0
char vera_layer_set_tilebase::tilebase#2 // reg byte x 3667.333333333333
__constant char vera_layer_textcolor[2] = { WHITE, WHITE }
__constant char *vera_layer_tilebase[2] = { VERA_L0_TILEBASE, VERA_L1_TILEBASE }
__constant unsigned long vera_mapbase_address[2] = { 0, 0 }
__constant char vera_mapbase_bank[2] = { 0, 0 }
__constant unsigned int vera_mapbase_offset[2] = { 0, 0 }
__constant unsigned long vera_tilebase_address[2] = { 0, 0 }
__constant char vera_tilebase_bank[2] = { 0, 0 }
__constant unsigned int vera_tilebase_offset[2] = { 0, 0 }

zp[1]:164 [ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ]
zp[2]:41 [ CONIO_SCREEN_TEXT#12 ]
zp[1]:132 [ CONIO_SCREEN_BANK#12 ]
zp[2]:116 [ main::x#3 main::x#1 ]
zp[1]:122 [ main::color#2 main::color#1 ]
reg byte x [ vera_layer_set_textcolor::layer#6 vera_layer_set_textcolor::layer#1 vera_layer_set_textcolor::layer#2 vera_layer_set_textcolor::layer#3 vera_layer_set_textcolor::layer#4 vera_layer_set_textcolor::layer#5 ]
reg byte a [ vera_layer_set_textcolor::color#6 ]
reg byte x [ vera_layer_set_backcolor::layer#4 vera_layer_set_backcolor::layer#1 vera_layer_set_backcolor::layer#2 vera_layer_set_backcolor::layer#3 ]
reg byte a [ vera_layer_set_backcolor::color#4 ]
reg byte a [ vera_layer_set_mapbase::layer#3 vera_layer_set_mapbase::layer#0 ]
reg byte x [ vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::mapbase#0 ]
reg byte x [ gotoxy::y#10 gotoxy::y#7 gotoxy::y#1 gotoxy::y#2 ]
reg byte x [ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ]
reg byte a [ vera_layer_get_color::return#3 vera_layer_get_color::return#1 vera_layer_get_color::return#2 ]
reg byte y [ memcpy_in_vram::dest_bank#2 ]
zp[2]:118 [ vera_layer_mode_tile::mapwidth#10 ]
zp[1]:144 [ vera_layer_mode_tile::layer#10 ]
zp[2]:155 [ vera_layer_mode_tile::mapheight#10 ]
zp[4]:67 [ vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::mapbase_address#0 ]
zp[4]:71 [ vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilebase_address#0 ]
zp[1]:165 [ vera_layer_mode_tile::tilewidth#10 ]
zp[1]:166 [ vera_layer_mode_tile::tileheight#10 ]
reg byte x [ vera_layer_mode_tile::config#25 vera_layer_mode_tile::config#21 vera_layer_mode_tile::config#10 vera_layer_mode_tile::config#11 vera_layer_mode_tile::config#12 ]
reg byte x [ vera_layer_mode_tile::tilebase#10 vera_layer_mode_tile::tilebase#12 vera_layer_mode_tile::tilebase#1 vera_layer_mode_tile::tilebase#3 vera_layer_mode_tile::tilebase#5 ]
reg byte x [ clrscr::l#2 clrscr::l#1 ]
zp[2]:108 [ clrscr::line_text#2 clrscr::line_text#1 clrscr::line_text#0 ]
reg byte y [ clrscr::c#2 clrscr::c#1 ]
zp[2]:99 [ bitmap_init::x#10 bitmap_init::x#1 ]
zp[4]:102 [ bitmap_init::yoffs#2 bitmap_init::yoffs#0 bitmap_init::yoffs#1 ]
zp[2]:10 [ bitmap_line::x0#10 bitmap_line::x0#0 bitmap_line::x0#1 bitmap_line_ydxi::x#3 bitmap_line_ydxi::x#5 bitmap_line_ydxi::x#1 bitmap_line_ydxi::x#0 bitmap_line_ydxi::x#6 bitmap_line_ydxi::x#2 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::x1#0 bitmap_line_ydxd::x#3 bitmap_line_ydxd::x#5 bitmap_line_ydxd::x#0 bitmap_line_ydxd::x#1 bitmap_line_ydxd::x#6 bitmap_line_ydxd::x#2 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x1#1 bitmap_line_xdyd::x1#0 memcpy_in_vram::dest#2 memcpy_in_vram::dest#0 insertup::start#0 insertup::line#0 ]
zp[2]:2 [ bitmap_line::y0#10 bitmap_line::y0#0 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::y1#0 bitmap_line_xdyi::y#3 bitmap_line_xdyi::y#5 bitmap_line_xdyi::y#1 bitmap_line_xdyi::y#0 bitmap_line_xdyi::y#6 bitmap_line_xdyi::y#2 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::y1#1 bitmap_line_xdyd::y#3 bitmap_line_xdyd::y#5 bitmap_line_xdyd::y#1 bitmap_line_xdyd::y#0 bitmap_line_xdyd::y#6 bitmap_line_xdyd::y#2 memcpy_in_vram::i#2 memcpy_in_vram::i#1 ]
zp[2]:49 [ bitmap_line::y1#10 bitmap_line::y1#0 printf_str::s#8 printf_str::s#9 printf_str::s#0 ]
reg byte x [ bitmap_line::c#10 bitmap_line::c#0 bitmap_line::c#1 ]
zp[2]:53 [ rand_state#13 rand_state#23 rand_state#14 rand_state#0 rand_state#1 ]
zp[2]:139 [ modr16u::divisor#4 ]
reg byte a [ vera_layer_set_config::layer#2 vera_layer_set_config::layer#0 ]
reg byte x [ vera_layer_set_config::config#2 vera_layer_set_config::config#0 ]
reg byte a [ vera_layer_set_tilebase::layer#2 vera_layer_set_tilebase::layer#0 ]
reg byte x [ vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::tilebase#0 ]
reg byte x [ vera_display_get_hscale::return#0 vera_display_get_hscale::s#2 vera_display_get_hscale::s#1 ]
reg byte x [ vera_display_get_vscale::return#0 vera_display_get_vscale::s#2 vera_display_get_vscale::s#1 ]
zp[2]:6 [ bitmap_line_xdyd::e#3 bitmap_line_xdyd::e#0 bitmap_line_xdyd::e#6 bitmap_line_xdyd::e#2 bitmap_line_xdyd::e#1 bitmap_line_ydxd::e#3 bitmap_line_ydxd::e#0 bitmap_line_ydxd::e#6 bitmap_line_ydxd::e#2 bitmap_line_ydxd::e#1 bitmap_line_xdyi::e#3 bitmap_line_xdyi::e#0 bitmap_line_xdyi::e#6 bitmap_line_xdyi::e#2 bitmap_line_xdyi::e#1 bitmap_line_ydxi::e#3 bitmap_line_ydxi::e#0 bitmap_line_ydxi::e#6 bitmap_line_ydxi::e#2 bitmap_line_ydxi::e#1 mul16u::a#2 mul16u::a#0 mul16u::a#1 modr16u::dividend#4 modr16u::dividend#0 modr16u::dividend#1 modr16u::dividend#2 modr16u::dividend#3 divr16u::dividend#2 divr16u::dividend#1 divr16u::dividend#0 bitmap_init::y#2 bitmap_init::y#1 memcpy_in_vram::src#2 memcpy_in_vram::src#3 memcpy_in_vram::src#0 ]
zp[2]:32 [ divr16u::rem#4 divr16u::rem#10 divr16u::rem#5 divr16u::rem#0 divr16u::rem#1 divr16u::rem#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::xd#1 bitmap_line_ydxi::xd#0 bitmap_line::xd#2 bitmap_line::xd#1 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::xd#1 bitmap_line_xdyi::xd#0 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::xd#0 bitmap_line_ydxd::xd#1 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::xd#1 bitmap_line_xdyd::xd#0 ]
zp[2]:37 [ divr16u::quotient#3 divr16u::return#0 divr16u::quotient#1 divr16u::quotient#2 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::yd#1 bitmap_line_ydxi::yd#0 bitmap_line::yd#2 bitmap_line::yd#11 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::yd#1 bitmap_line_xdyi::yd#0 ]
reg byte x [ divr16u::i#2 divr16u::i#1 ]
reg byte x [ insertup::i#2 insertup::i#1 ]
reg byte x [ bitmap_plot::c#0 bitmap_plot::$3 bitmap_plot::c#5 bitmap_plot::c#2 bitmap_plot::c#1 bitmap_plot::c#4 bitmap_plot::c#3 ]
zp[2]:4 [ clearline::c#2 clearline::c#1 bitmap_line_ydxi::y#3 bitmap_line_ydxi::y#6 bitmap_line_ydxi::y#1 bitmap_line_ydxi::y#0 bitmap_line_ydxi::y#2 bitmap_plot::y#4 bitmap_plot::y#1 bitmap_plot::y#0 bitmap_plot::y#3 bitmap_plot::y#2 bitmap_line_ydxd::y#2 bitmap_line_ydxd::y#7 bitmap_line_ydxd::y#0 bitmap_line_ydxd::y#1 bitmap_line_ydxd::y#3 ]
zp[1]:34 [ conio_screen_width ]
zp[1]:47 [ conio_screen_height ]
zp[1]:46 [ conio_screen_layer ]
zp[2]:161 [ conio_width ]
zp[2]:51 [ conio_height ]
zp[1]:43 [ conio_rowshift ]
zp[2]:44 [ conio_rowskip ]
zp[4]:168 [ __bitmap_address ]
zp[1]:146 [ __bitmap_layer ]
zp[1]:172 [ __bitmap_hscale ]
zp[1]:173 [ __bitmap_vscale ]
zp[1]:163 [ __bitmap_color_depth ]
zp[1]:101 [ cputc::c#0 ]
reg byte a [ vera_layer_get_color::return#0 ]
reg byte x [ cputc::color#0 ]
reg byte a [ cputc::$15 ]
reg byte a [ cputc::$2 ]
reg byte a [ cputc::$4 ]
reg byte a [ cputc::$5 ]
reg byte a [ cputc::$6 ]
reg byte a [ cputc::scroll_enable#0 ]
zp[2]:39 [ cputc::$16 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::yd#0 bitmap_line_ydxd::yd#1 bitmap_line::yd#1 bitmap_line::yd#10 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::yd#1 bitmap_line_xdyd::yd#0 ]
reg byte a [ kbhit::return#2 ]
reg byte a [ main::$30 ]
reg byte a [ kbhit::return#3 ]
reg byte a [ main::$43 ]
zp[2]:106 [ rand::return#2 rand::return#0 rand::return#3 rand::return#10 rand::return#11 rand::return#12 main::$40 ]
zp[2]:114 [ modr16u::return#2 modr16u::return#0 modr16u::return#3 modr16u::return#4 modr16u::return#10 ]
reg byte a [ screensize::hscale#0 ]
reg byte a [ screensize::$1 ]
reg byte a [ screensize::vscale#0 ]
reg byte a [ screensize::$3 ]
reg byte x [ vera_layer_get_mapbase_bank::layer#0 ]
reg byte a [ vera_layer_get_mapbase_bank::return#2 ]
zp[1]:167 [ CONIO_SCREEN_BANK#15 ]
reg byte a [ vera_layer_get_mapbase_offset::layer#0 ]
zp[2]:137 [ vera_layer_get_mapbase_offset::return#2 vera_layer_get_mapbase_offset::return#0 ]
zp[2]:174 [ CONIO_SCREEN_TEXT#17 ]
reg byte a [ screenlayer::vera_layer_get_width1_layer#0 ]
reg byte a [ screenlayer::vera_layer_get_width1_$2 ]
zp[2]:147 [ screenlayer::vera_layer_get_width1_config#0 ]
reg byte a [ screenlayer::vera_layer_get_width1_$0 ]
reg byte a [ screenlayer::vera_layer_get_width1_$1 ]
reg byte a [ screenlayer::vera_layer_get_width1_$3 ]
zp[2]:133 [ screenlayer::vera_layer_get_width1_return#0 screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 ]
reg byte x [ vera_layer_get_rowshift::layer#0 ]
reg byte a [ vera_layer_get_rowshift::return#2 ]
reg byte a [ screenlayer::$3 ]
reg byte a [ vera_layer_get_rowskip::layer#0 ]
zp[2]:123 [ vera_layer_get_rowskip::return#2 screenlayer::$4 vera_layer_get_rowskip::return#0 ]
reg byte a [ screenlayer::vera_layer_get_height1_layer#0 ]
reg byte a [ screenlayer::vera_layer_get_height1_$2 ]
zp[2]:149 [ screenlayer::vera_layer_get_height1_config#0 ]
reg byte a [ screenlayer::vera_layer_get_height1_$0 ]
reg byte a [ screenlayer::vera_layer_get_height1_$1 ]
reg byte a [ screenlayer::vera_layer_get_height1_$3 ]
zp[2]:135 [ screenlayer::vera_layer_get_height1_return#0 screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 ]
reg byte a [ vera_layer_set_mapbase::$0 ]
reg byte a [ gotoxy::$5 ]
reg byte a [ vera_layer_get_color::$3 ]
reg byte a [ vera_layer_get_color::$0 ]
reg byte a [ vera_layer_get_color::$1 ]
reg byte a [ cputln::$2 ]
zp[2]:8 [ cputln::temp#0 cputln::temp#1 vera_layer_get_color::addr#0 bitmap_line::x1#10 bitmap_line::x1#0 bitmap_line::x1#1 memcpy_in_vram::num#3 memcpy_in_vram::num#0 ]
reg byte a [ cputln::$3 ]
reg byte a [ memcpy_in_vram::$0 ]
reg byte a [ memcpy_in_vram::$1 ]
reg byte a [ memcpy_in_vram::$3 ]
reg byte a [ memcpy_in_vram::$4 ]
reg byte a [ memcpy_in_vram::$5 ]
reg byte a [ vera_layer_mode_tile::$14 ]
zp[2]:120 [ vera_layer_mode_tile::$1 ]
zp[1]:145 [ vera_layer_mode_tile::$17 ]
reg byte a [ vera_layer_mode_tile::$2 ]
zp[1]:143 [ vera_layer_mode_tile::$18 ]
reg byte x [ vera_layer_mode_tile::mapbase#0 ]
zp[2]:75 [ vera_layer_mode_tile::$6 ]
reg byte a [ vera_layer_mode_tile::$7 ]
reg byte a [ vera_layer_mode_tile::tilebase#0 ]
reg byte a [ vera_layer_mode_tile::$13 ]
reg byte a [ vera_layer_mode_tile::$12 ]
reg byte a [ vera_layer_mode_tile::$11 ]
reg byte x [ vera_layer_get_backcolor::layer#0 ]
reg byte a [ vera_layer_get_backcolor::return#0 ]
reg byte a [ clrscr::$0 ]
zp[1]:131 [ clrscr::$1 clrscr::color#0 ]
reg byte x [ vera_layer_get_textcolor::layer#0 ]
reg byte a [ vera_layer_get_textcolor::return#0 ]
reg byte a [ clrscr::$2 ]
reg byte a [ clrscr::$9 ]
reg byte a [ clrscr::$5 ]
reg byte a [ clrscr::$6 ]
reg byte a [ clrscr::$7 ]
reg byte a [ printf_str::c#1 ]
reg byte a [ bitmap_init::vera_layer_get_color_depth1_layer#0 ]
reg byte a [ bitmap_init::vera_layer_get_color_depth1_$1 ]
zp[2]:151 [ bitmap_init::vera_layer_get_color_depth1_config#0 ]
reg byte a [ bitmap_init::vera_layer_get_color_depth1_$0 ]
reg byte a [ bitmap_init::vera_layer_get_color_depth1_return#0 ]
reg byte a [ bitmap_init::vera_layer_get_color_depth1_return#1 ]
reg byte a [ bitmap_init::$0 ]
reg byte x [ vera_display_get_hscale::return#2 ]
reg byte x [ bitmap_init::$1 ]
reg byte x [ vera_display_get_vscale::return#2 ]
reg byte x [ bitmap_init::$2 ]
zp[2]:125 [ bitmap_init::$7 ]
zp[2]:55 [ bitmap_init::$23 bitmap_init::$29 ]
zp[2]:77 [ bitmap_init::$30 ]
zp[2]:79 [ bitmap_init::$31 ]
zp[2]:127 [ bitmap_init::$10 ]
zp[2]:57 [ bitmap_init::$24 bitmap_init::$32 ]
zp[2]:81 [ bitmap_init::$33 ]
zp[2]:83 [ bitmap_init::$34 ]
zp[2]:129 [ bitmap_init::$13 ]
zp[2]:59 [ bitmap_init::$25 bitmap_init::$35 ]
zp[2]:85 [ bitmap_init::$36 ]
zp[2]:87 [ bitmap_init::$37 ]
zp[2]:61 [ bitmap_init::$26 bitmap_init::$38 ]
zp[2]:89 [ bitmap_init::$39 ]
zp[2]:91 [ bitmap_init::$40 ]
reg byte a [ bitmap_init::$3 ]
reg byte a [ bitmap_init::$4 ]
reg byte a [ bitmap_init::$27 ]
zp[2]:159 [ bitmap_init::hdelta#0 ]
zp[2]:63 [ bitmap_init::$28 bitmap_init::$41 ]
reg byte a [ bitmap_clear::$6 ]
zp[2]:157 [ bitmap_clear::vdelta#0 mul16u::b#0 ]
reg byte a [ bitmap_clear::$0 ]
reg byte a [ bitmap_clear::$1 ]
reg byte a [ bitmap_clear::$7 ]
zp[2]:153 [ bitmap_clear::hdelta#0 ]
zp[4]:110 [ mul16u::return#0 bitmap_clear::count#0 memset_vram::num#0 ]
reg byte x [ bitmap_clear::vbank#0 ]
zp[2]:141 [ bitmap_clear::vdest#0 memset_vram::vdest#0 ]
reg byte x [ memset_vram::vbank#0 ]
zp[1]:48 [ kbhit::ch ]
reg byte a [ kbhit::return#0 ]
reg byte a [ kbhit::return#1 ]
zp[2]:93 [ rand::$0 ]
zp[2]:95 [ rand::$1 ]
zp[2]:97 [ rand::$2 ]
reg byte a [ vera_layer_get_mapbase_bank::return#0 ]
reg byte a [ vera_layer_get_mapbase_offset::$0 ]
reg byte a [ vera_layer_get_rowshift::return#0 ]
reg byte a [ vera_layer_get_rowskip::$0 ]
reg byte a [ vera_layer_set_config::$0 ]
reg byte a [ vera_layer_set_tilebase::$0 ]
zp[2]:35 [ vera_layer_set_tilebase::addr#0 vera_layer_set_config::addr#0 vera_layer_set_text_color_mode::addr#0 gotoxy::$6 gotoxy::line_offset#0 vera_layer_set_mapbase::addr#0 ]
reg byte a [ vera_layer_get_backcolor::return#1 ]
reg byte a [ vera_layer_get_textcolor::return#1 ]
reg byte a [ mul16u::$1 ]
reg byte a [ memset_vram::$0 ]
reg byte a [ memset_vram::$1 ]
reg byte a [ memset_vram::$2 ]
zp[2]:28 [ bitmap_line_ydxi::$6 divr16u::divisor#0 cputc::conio_addr#0 cputc::conio_addr#1 bitmap_line_xdyi::x#3 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line_xdyi::x#0 bitmap_line_xdyi::x#2 bitmap_plot::x#4 bitmap_plot::x#1 bitmap_plot::x#0 bitmap_plot::x#3 bitmap_plot::x#2 bitmap_line_xdyd::x#3 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::x#2 ]
reg byte a [ divr16u::$1 ]
reg byte a [ divr16u::$2 ]
zp[2]:65 [ rem16u#0 ]
zp[1]:31 [ insertup::cy#0 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line_xdyi::c#0 bitmap_init::bitmask#13 bitmap_init::bitmask#3 bitmap_init::bitmask#12 bitmap_init::bitmask#11 bitmap_init::bitmask#10 bitmap_init::bitmask#0 bitmap_init::bitmask#16 bitmap_init::bitmask#1 bitmap_init::bitmask#2 bitmap_init::bitmask#4 ]
zp[1]:30 [ insertup::width#0 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line_xdyd::c#0 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line_ydxd::c#1 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line_ydxi::c#0 bitmap_init::bitshift#13 bitmap_init::bitshift#3 bitmap_init::bitshift#12 bitmap_init::bitshift#11 bitmap_init::bitshift#10 bitmap_init::bitshift#0 bitmap_init::bitshift#14 bitmap_init::bitshift#1 bitmap_init::bitshift#2 bitmap_init::bitshift#4 ]
reg byte a [ insertup::$3 ]
zp[4]:24 [ bitmap_plot::plot_x#0 bitmap_plot::vera_vram_address01_bankaddr#0 mul16u::mb#2 mul16u::mb#0 mul16u::mb#1 ]
zp[2]:12 [ bitmap_plot::$10 bitmap_plot::$13 ]
zp[4]:16 [ bitmap_plot::plot_y#0 memset_vram::i#2 memset_vram::i#1 mul16u::res#2 mul16u::res#6 mul16u::res#1 ]
zp[2]:20 [ bitmap_plot::$14 ]
reg byte a [ bitmap_plot::bitshift#0 ]
reg byte a [ bitmap_plot::vera_vram_address01_$0 ]
reg byte a [ bitmap_plot::vera_vram_address01_$1 ]
reg byte a [ bitmap_plot::vera_vram_address01_$3 ]
zp[2]:22 [ bitmap_plot::$15 ]
reg byte a [ bitmap_plot::$6 ]
reg byte a [ bitmap_plot::$7 ]
reg byte a [ bitmap_plot::$8 ]
reg byte a [ clearline::$5 ]
zp[2]:14 [ clearline::addr#0 bitmap_line_xdyd::$6 bitmap_line_ydxd::$6 bitmap_line_xdyi::$6 bitmap_plot::$9 bitmap_plot::$12 ]
reg byte a [ clearline::$1 ]
reg byte a [ clearline::$2 ]
reg byte a [ vera_layer_get_color::return#4 ]
reg byte x [ clearline::color#0 ]
