
(void()) _start()
_start: scope:[_start]  from
  [0] phi()
  to:_start::_init1
_start::_init1: scope:[_start]  from _start
  [1] (byte) i ← (byte) 0
  to:_start::@1
_start::@1: scope:[_start]  from _start::_init1
  [2] phi()
  [3] call main 
  to:_start::@return
_start::@return: scope:[_start]  from _start::@1
  [4] return 
  to:@return

(void()) main()
main: scope:[main]  from _start::@1
  [5] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@1
  [6] (byte) main::a#2 ← phi( main/(byte) 0 main::@1/(byte) main::a#1 )
  [7] (byte) main::v#0 ← (byte) main::a#2 + (byte) 1
  [8] stackpush(byte) ← (byte) '0'
  [9] stackpush(byte) ← (byte) main::v#0
  [10] callexecute plus 
  sideeffect stackpullbytes((number) 1)
  [12] (byte) main::w#0 ← stackpull(byte)
  [13] (byte~) main::$2 ← (byte) main::w#0 + (byte) main::a#2
  [14] *((const nomodify byte*) SCREEN + (byte) i) ← (byte~) main::$2
  [15] (byte) main::a#1 ← ++ (byte) main::a#2
  [16] if((byte) main::a#1!=(byte) 2) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@1
  [17] return 
  to:@return

__stackcall (byte()) plus((byte) plus::a , (byte) plus::b)
plus: scope:[plus]  from
  [18] (byte) plus::a#0 ← stackidx(byte,(const byte) plus::OFFSET_STACK_A)
  [19] (byte) plus::b#0 ← stackidx(byte,(const byte) plus::OFFSET_STACK_B)
  [20] (byte) i ← ++ (byte) i
  [21] (byte) plus::return#0 ← (byte) plus::a#0 + (byte) plus::b#0
  to:plus::@return
plus::@return: scope:[plus]  from plus
  [22] stackidx(byte,(const byte) plus::OFFSET_STACK_RETURN) ← (byte) plus::return#0
  [23] return 
  to:@return
