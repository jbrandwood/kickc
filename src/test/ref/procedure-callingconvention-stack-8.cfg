@begin: scope:[]  from
  [0] (byte) val ← (byte) 0
  to:@1
@1: scope:[]  from @begin
  [1] callprepare main 
  [2] callexecute main 
  [3] callfinalize main 
  to:@end
@end: scope:[]  from @1
  [4] phi()

__stackcall (void()) printline()
printline: scope:[printline]  from
  [5] (byte) printline::i ← (byte) 0
  to:printline::@1
printline::@1: scope:[printline]  from printline printline::@2
  [6] if((byte) printline::i<(byte) $28) goto printline::@2
  to:printline::@return
printline::@return: scope:[printline]  from printline::@1
  [7] return 
  to:@return
printline::@2: scope:[printline]  from printline::@1
  [8] *((const byte*) SCREEN + (byte) printline::i) ← (byte) '*'
  [9] (byte) printline::i ← ++ (byte) printline::i
  to:printline::@1

__stackcall (void()) main()
main: scope:[main]  from
  [10] (byte) val ← (byte) '-'
  [11] callprepare printline 
  [12] callexecute printline 
  [13] callfinalize printline 
  [14] *((const byte*) SCREEN+(byte) $50) ← (byte) val
  to:main::@return
main::@return: scope:[main]  from main
  [15] return 
  to:@return
