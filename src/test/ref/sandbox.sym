(label) @1
(label) @begin
(label) @end
(void()) Print()
(label) Print::@return
(byte*) TIMEHI
(const byte*) TIMEHI#0 TIMEHI = (byte*) 161
(byte*) TIMELO
(const byte*) TIMELO#0 TIMELO = (byte*) 162
(byte*) VICBANK
(const byte*) VICBANK#0 VICBANK = (byte*) 53272
(word()) append((byte*) append::dst , (word) append::value , (word) append::sub)
(label) append::@1
(label) append::@2
(label) append::@return
(byte*) append::dst
(byte*) append::dst#1 dst zp ZP_WORD:21 2.0
(byte*) append::dst#2 dst zp ZP_WORD:21 2.0
(byte*) append::dst#3 dst zp ZP_WORD:21 2.0
(byte*) append::dst#4 dst zp ZP_WORD:21 335.0
(word) append::return
(word) append::return#10 return zp ZP_WORD:19 4.0
(word) append::return#2 return zp ZP_WORD:19 4.0
(word) append::return#3 return zp ZP_WORD:19 4.0
(word) append::return#4 return zp ZP_WORD:19 4.0
(word) append::sub
(word) append::sub#6 sub zp ZP_WORD:23 333.6666666666667
(word) append::value
(word) append::value#0 value zp ZP_WORD:19 2002.0
(word) append::value#1 value zp ZP_WORD:19 4.0
(word) append::value#2 value zp ZP_WORD:19 4.0
(word) append::value#3 value zp ZP_WORD:19 4.0
(word) append::value#4 value zp ZP_WORD:19 4.0
(word) append::value#5 value zp ZP_WORD:19 376.625
(word) append::value#8 value zp ZP_WORD:19 5.0
(word()) div10((word) div10::val)
(word~) div10::$0 $0 zp ZP_WORD:33 4.0
(word~) div10::$2 $2 zp ZP_WORD:35 4.0
(word~) div10::$3 $3 zp ZP_WORD:4 4.0
(word~) div10::$4 $4 zp ZP_WORD:37 4.0
(word~) div10::$5 $5 zp ZP_WORD:37 4.0
(label) div10::@return
(word) div10::return
(word) div10::return#0 return zp ZP_WORD:4 34.33333333333333
(word) div10::return#2 return zp ZP_WORD:4 202.0
(word) div10::val
(word) div10::val#0 val zp ZP_WORD:33 3.0
(word) div10::val#1 val#1 zp ZP_WORD:35 3.0
(word) div10::val#2 val#2 zp ZP_WORD:4 2.0
(word) div10::val#3 val#3 zp ZP_WORD:4 4.0
(word) div10::val#4 val#4 zp ZP_WORD:2 103.0
(word()) div16u((word) div16u::dividend , (word) div16u::divisor)
(label) div16u::@1
(label) div16u::@return
(word) div16u::dividend
(word) div16u::dividend#0 dividend zp ZP_WORD:2 103.0
(word) div16u::divisor
(const word) div16u::divisor#0 divisor = (byte) $a
(word) div16u::return
(word) div16u::return#0 return zp ZP_WORD:4 34.33333333333333
(word) div16u::return#2 return zp ZP_WORD:4 202.0
(word()) divr16u((word) divr16u::dividend , (word) divr16u::divisor , (word) divr16u::rem)
(byte~) divr16u::$1 reg byte a 2002.0
(byte~) divr16u::$2 reg byte a 2002.0
(label) divr16u::@1
(label) divr16u::@2
(label) divr16u::@3
(label) divr16u::@4
(label) divr16u::@5
(label) divr16u::@return
(word) divr16u::dividend
(word) divr16u::dividend#0 dividend zp ZP_WORD:27 250.25
(word) divr16u::dividend#1 dividend zp ZP_WORD:27 2.0
(word) divr16u::dividend#2 dividend zp ZP_WORD:27 429.2857142857143
(word) divr16u::divisor
(byte) divr16u::i
(byte) divr16u::i#1 reg byte x 1501.5
(byte) divr16u::i#2 reg byte x 154.0
(word) divr16u::quotient
(word) divr16u::quotient#1 quotient zp ZP_WORD:4 1501.5
(word) divr16u::quotient#2 quotient zp ZP_WORD:4 1001.0
(word) divr16u::quotient#3 quotient zp ZP_WORD:4 250.25
(word) divr16u::rem
(word) divr16u::rem#0 rem zp ZP_WORD:25 750.75
(word) divr16u::rem#1 rem zp ZP_WORD:25 2002.0
(word) divr16u::rem#2 rem zp ZP_WORD:25 2002.0
(word) divr16u::rem#4 rem zp ZP_WORD:25 2002.0
(word) divr16u::rem#5 rem zp ZP_WORD:25 1001.0
(word) divr16u::rem#9 rem zp ZP_WORD:25 1001.0
(word) divr16u::return
(word) divr16u::return#0 return zp ZP_WORD:4 601.0
(word) divr16u::return#2 return zp ZP_WORD:4 4.0
(signed word()) main()
(word~) main::$11 $11 zp ZP_WORD:6 22.0
(word~) main::$12 $12 zp ZP_WORD:6 11.0
(word~) main::$13 $13 zp ZP_WORD:31 22.0
(word~) main::$2 $2 zp ZP_WORD:6 22.0
(word~) main::$3 $3 zp ZP_WORD:6 11.0
(word~) main::$4 $4 zp ZP_WORD:29 22.0
(label) main::@1
(label) main::@10
(label) main::@11
(label) main::@12
(label) main::@13
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::@8
(label) main::@9
(label) main::@return
(signed word) main::return
(const string) main::str str = (string) "200 DIV16U: %5d,%4d IN %04d FRAMESm@"
(const string) main::str1 str1 = (string) "200 DIV10 : %5d,%4d IN %04d FRAMESm@"
(word) main::u
(word) main::u#11 u zp ZP_WORD:2 7.05263157894737
(word) main::u#15 u zp ZP_WORD:2 7.05263157894737
(word) main::u#2 u zp ZP_WORD:2 7.333333333333333
(word) main::u#4 u zp ZP_WORD:2 7.333333333333333
(word) main::v
(word) main::v#1 v zp ZP_WORD:4 14.0
(word) main::v#2 v zp ZP_WORD:4 14.0
(byte()) myprintf((byte*) myprintf::dst , (byte*) myprintf::str , (word) myprintf::w1 , (word) myprintf::w2 , (word) myprintf::w3)
(byte~) myprintf::$17 reg byte a 202.0
(byte~) myprintf::$18 reg byte a 202.0
(byte~) myprintf::$23 reg byte a 101.0
(byte~) myprintf::$24 reg byte a 202.0
(byte~) myprintf::$25 reg byte a 202.0
(byte~) myprintf::$30 reg byte a 101.0
(byte~) myprintf::$31 reg byte a 202.0
(byte~) myprintf::$41 reg byte a 1001.0
(byte~) myprintf::$49 reg byte a 202.0
(label) myprintf::@1
(label) myprintf::@10
(label) myprintf::@11
(label) myprintf::@12
(label) myprintf::@13
(label) myprintf::@14
(label) myprintf::@15
(label) myprintf::@16
(label) myprintf::@17
(label) myprintf::@18
(label) myprintf::@19
(label) myprintf::@2
(label) myprintf::@20
(label) myprintf::@21
(label) myprintf::@22
(label) myprintf::@23
(label) myprintf::@24
(label) myprintf::@25
(label) myprintf::@26
(label) myprintf::@27
(label) myprintf::@28
(label) myprintf::@29
(label) myprintf::@3
(label) myprintf::@30
(label) myprintf::@31
(label) myprintf::@32
(label) myprintf::@33
(label) myprintf::@34
(label) myprintf::@35
(label) myprintf::@36
(label) myprintf::@37
(label) myprintf::@38
(label) myprintf::@39
(label) myprintf::@4
(label) myprintf::@40
(label) myprintf::@41
(label) myprintf::@42
(label) myprintf::@43
(label) myprintf::@5
(label) myprintf::@6
(label) myprintf::@7
(label) myprintf::@8
(label) myprintf::@9
(label) myprintf::@return
(byte) myprintf::b
(byte) myprintf::b#1 reg byte x 126.25000000000003
(byte) myprintf::b#15 reg byte x 75.75
(byte) myprintf::b#16 reg byte x 75.75
(byte) myprintf::b#17 b zp ZP_BYTE:16 248.31999999999996
(byte) myprintf::b#25 reg byte x 303.0
(byte) myprintf::b#5 b zp ZP_BYTE:16 2002.0
(byte) myprintf::b#6 reg byte x 202.0
(byte) myprintf::bArg
(byte) myprintf::bArg#1 bArg zp ZP_BYTE:11 202.0
(byte) myprintf::bArg#10 bArg zp ZP_BYTE:11 235.66666666666663
(byte) myprintf::bArg#12 bArg zp ZP_BYTE:11 12.283783783783784
(byte) myprintf::bDigits
(byte) myprintf::bDigits#1 bDigits zp ZP_BYTE:18 202.0
(byte) myprintf::bDigits#10 bDigits zp ZP_BYTE:18 350.5
(byte) myprintf::bDigits#14 bDigits zp ZP_BYTE:18 22.44444444444444
(byte) myprintf::bDigits#16 bDigits zp ZP_BYTE:18 175.625
(byte) myprintf::bDigits#2 bDigits zp ZP_BYTE:18 2002.0
(byte) myprintf::bDigits#24 bDigits zp ZP_BYTE:18 201.99999999999997
(byte) myprintf::bDigits#25 bDigits zp ZP_BYTE:18 1506.0
(byte) myprintf::bDigits#3 bDigits zp ZP_BYTE:18 2002.0
(byte) myprintf::bDigits#8 bDigits zp ZP_BYTE:18 701.0
(byte) myprintf::bFormat
(byte) myprintf::bFormat#10 bFormat zp ZP_BYTE:10 40.4
(byte) myprintf::bFormat#4 bFormat zp ZP_BYTE:10 168.33333333333331
(byte) myprintf::bLeadZero
(byte) myprintf::bLeadZero#10 bLeadZero zp ZP_BYTE:15 22.147058823529413
(byte) myprintf::bLeadZero#18 bLeadZero zp ZP_BYTE:15 168.33333333333331
(byte) myprintf::bLen
(byte) myprintf::bLen#1 bLen zp ZP_BYTE:17 202.0
(byte) myprintf::bLen#10 reg byte y 37.875
(byte) myprintf::bLen#11 bLen zp ZP_BYTE:17 620.8
(byte) myprintf::bLen#12 bLen zp ZP_BYTE:17 1552.0
(byte) myprintf::bLen#13 bLen zp ZP_BYTE:17 1552.0
(byte) myprintf::bLen#14 bLen zp ZP_BYTE:17 33.666666666666664
(byte) myprintf::bLen#23 bLen zp ZP_BYTE:17 1203.0
(byte) myprintf::bLen#24 bLen zp ZP_BYTE:17 440.79999999999995
(byte) myprintf::bLen#28 bLen zp ZP_BYTE:17 1506.0
(byte) myprintf::bLen#3 bLen zp ZP_BYTE:17 202.0
(byte) myprintf::bLen#4 bLen zp ZP_BYTE:17 1001.0
(byte) myprintf::bLen#6 bLen zp ZP_BYTE:17 1001.0
(byte) myprintf::bLen#7 bLen zp ZP_BYTE:17 202.0
(byte) myprintf::bTrailing
(byte) myprintf::bTrailing#10 bTrailing zp ZP_BYTE:14 10.397058823529413
(byte) myprintf::bTrailing#21 bTrailing zp ZP_BYTE:14 168.33333333333331
(byte[6]) myprintf::buf6
(const byte[6]) myprintf::buf6#0 buf6 = { fill( 6, 0) }
(byte) myprintf::digit
(byte) myprintf::digit#2 reg byte x 1501.5
(byte) myprintf::digit#3 reg byte x 1001.0
(byte*) myprintf::dst
(byte) myprintf::return
(byte) myprintf::return#0 return zp ZP_BYTE:17 236.3333333333333
(byte*) myprintf::str
(byte*) myprintf::str#0 str zp ZP_WORD:8 151.5
(byte*) myprintf::str#10 str zp ZP_WORD:8 4.0131578947368425
(byte*) myprintf::str#5 str zp ZP_WORD:8 2.0
(word) myprintf::w
(word) myprintf::w#10 w zp ZP_WORD:12 10.397058823529413
(word) myprintf::w#17 w zp ZP_WORD:12 235.66666666666663
(word) myprintf::w#21 w zp ZP_WORD:12 202.0
(word~) myprintf::w#49 w zp ZP_WORD:12 202.0
(word~) myprintf::w#50 w zp ZP_WORD:12 202.0
(word~) myprintf::w#51 w zp ZP_WORD:12 202.0
(word) myprintf::w1
(word) myprintf::w1#0 w1 zp ZP_WORD:2 11.0
(word) myprintf::w1#1 w1 zp ZP_WORD:2 11.0
(word) myprintf::w1#6 w1 zp ZP_WORD:2 1.5569620253164556
(word) myprintf::w2
(word) myprintf::w2#0 w2 zp ZP_WORD:4 22.0
(word) myprintf::w2#1 w2 zp ZP_WORD:4 22.0
(word) myprintf::w2#7 w2 zp ZP_WORD:4 1.5569620253164556
(word) myprintf::w3
(word) myprintf::w3#0 w3 zp ZP_WORD:6 7.333333333333333
(word) myprintf::w3#1 w3 zp ZP_WORD:6 7.333333333333333
(word) myprintf::w3#7 w3 zp ZP_WORD:6 1.5569620253164556
(byte[$64]) strTemp
(const byte[$64]) strTemp#0 strTemp = { fill( $64, 0) }
(void()) utoa((word) utoa::value , (byte*) utoa::dst)
(byte~) utoa::$16 reg byte a 4.0
(byte~) utoa::$17 reg byte a 4.0
(label) utoa::@1
(label) utoa::@10
(label) utoa::@11
(label) utoa::@12
(label) utoa::@13
(label) utoa::@14
(label) utoa::@15
(label) utoa::@16
(label) utoa::@2
(label) utoa::@3
(label) utoa::@4
(label) utoa::@5
(label) utoa::@6
(label) utoa::@7
(label) utoa::@8
(label) utoa::@9
(label) utoa::@return
(byte) utoa::bStarted
(byte) utoa::bStarted#5 reg byte x 1.3333333333333333
(byte) utoa::bStarted#6 reg byte x 2.0
(byte) utoa::bStarted#7 reg byte x 4.0
(byte*) utoa::dst
(byte*) utoa::dst#1 dst zp ZP_WORD:21 4.0
(byte*) utoa::dst#10 dst zp ZP_WORD:21 1.25
(byte*) utoa::dst#12 dst zp ZP_WORD:21 2.0
(byte*) utoa::dst#13 dst zp ZP_WORD:21 1.25
(byte*) utoa::dst#16 dst zp ZP_WORD:21 0.75
(byte*) utoa::dst#2 dst zp ZP_WORD:21 4.0
(byte*) utoa::dst#3 dst zp ZP_WORD:21 4.0
(byte*) utoa::dst#4 dst zp ZP_WORD:21 4.0
(word) utoa::value
(word) utoa::value#0 value zp ZP_WORD:19 4.0
(word) utoa::value#1 value zp ZP_WORD:19 2.0
(word) utoa::value#10 value zp ZP_WORD:19 2.5
(word) utoa::value#11 value zp ZP_WORD:19 2.5
(word) utoa::value#12 value zp ZP_WORD:19 4.0
(word) utoa::value#2 value zp ZP_WORD:19 2.0
(word) utoa::value#3 value zp ZP_WORD:19 2.0
(word) utoa::value#4 value zp ZP_WORD:19 35.66666666666666
(word) utoa::value#6 value zp ZP_WORD:19 2.5
(byte*) zp1
(const byte*) zp1#0 zp1 = (byte*) 97
(byte*) zp2
(const byte*) zp2#0 zp2 = (byte*) 98

zp ZP_WORD:2 [ main::u#11 main::u#2 myprintf::w1#6 myprintf::w1#0 myprintf::w1#1 div16u::dividend#0 main::u#15 main::u#4 div10::val#4 ]
zp ZP_WORD:4 [ myprintf::w2#7 myprintf::w2#0 myprintf::w2#1 main::v#1 main::v#2 div16u::return#2 div16u::return#0 div10::return#2 div10::return#0 divr16u::quotient#3 divr16u::return#0 divr16u::quotient#1 divr16u::quotient#2 divr16u::return#2 div10::$3 div10::val#2 div10::val#3 ]
zp ZP_WORD:6 [ myprintf::w3#7 myprintf::w3#0 myprintf::w3#1 main::$3 main::$12 main::$2 main::$11 ]
zp ZP_WORD:8 [ myprintf::str#10 myprintf::str#5 myprintf::str#0 ]
zp ZP_BYTE:10 [ myprintf::bFormat#10 myprintf::bFormat#4 ]
zp ZP_BYTE:11 [ myprintf::bArg#12 myprintf::bArg#10 myprintf::bArg#1 ]
zp ZP_WORD:12 [ myprintf::w#10 myprintf::w#17 myprintf::w#21 myprintf::w#49 myprintf::w#50 myprintf::w#51 ]
zp ZP_BYTE:14 [ myprintf::bTrailing#10 myprintf::bTrailing#21 ]
zp ZP_BYTE:15 [ myprintf::bLeadZero#10 myprintf::bLeadZero#18 ]
reg byte a [ myprintf::$23 ]
reg byte a [ myprintf::$30 ]
zp ZP_BYTE:16 [ myprintf::b#17 myprintf::b#5 ]
reg byte x [ myprintf::digit#3 myprintf::digit#2 ]
zp ZP_BYTE:17 [ myprintf::bLen#11 myprintf::bLen#13 myprintf::bLen#12 myprintf::bLen#23 myprintf::bLen#14 myprintf::return#0 myprintf::bLen#28 myprintf::bLen#7 myprintf::bLen#3 myprintf::bLen#24 myprintf::bLen#6 myprintf::bLen#1 myprintf::bLen#4 ]
zp ZP_BYTE:18 [ myprintf::bDigits#10 myprintf::bDigits#8 myprintf::bDigits#14 myprintf::bDigits#24 myprintf::bDigits#25 myprintf::bDigits#1 myprintf::bDigits#16 myprintf::bDigits#3 myprintf::bDigits#2 ]
reg byte a [ myprintf::$41 ]
reg byte x [ myprintf::b#25 myprintf::b#1 myprintf::b#6 ]
reg byte x [ utoa::bStarted#7 utoa::bStarted#6 utoa::bStarted#5 ]
zp ZP_WORD:19 [ utoa::value#12 utoa::value#3 utoa::value#10 utoa::value#2 utoa::value#11 utoa::value#6 utoa::value#4 utoa::value#0 utoa::value#1 append::value#5 append::value#8 append::value#1 append::value#2 append::value#3 append::value#4 append::value#0 append::return#10 append::return#4 append::return#3 append::return#2 ]
zp ZP_WORD:21 [ utoa::dst#12 utoa::dst#4 utoa::dst#13 utoa::dst#2 utoa::dst#10 utoa::dst#16 utoa::dst#1 append::dst#4 append::dst#1 append::dst#2 append::dst#3 utoa::dst#3 ]
zp ZP_WORD:23 [ append::sub#6 ]
zp ZP_WORD:25 [ divr16u::rem#4 divr16u::rem#9 divr16u::rem#5 divr16u::rem#0 divr16u::rem#1 divr16u::rem#2 ]
zp ZP_WORD:27 [ divr16u::dividend#2 divr16u::dividend#1 divr16u::dividend#0 ]
reg byte x [ divr16u::i#2 divr16u::i#1 ]
zp ZP_WORD:29 [ main::$4 ]
zp ZP_WORD:31 [ main::$13 ]
reg byte a [ myprintf::$17 ]
reg byte a [ myprintf::$18 ]
reg byte x [ myprintf::b#15 ]
reg byte a [ myprintf::$24 ]
reg byte y [ myprintf::bLen#10 ]
reg byte a [ myprintf::$25 ]
reg byte x [ myprintf::b#16 ]
reg byte a [ myprintf::$31 ]
reg byte a [ myprintf::$49 ]
reg byte a [ utoa::$16 ]
reg byte a [ utoa::$17 ]
zp ZP_WORD:33 [ div10::$0 div10::val#0 ]
zp ZP_WORD:35 [ div10::$2 div10::val#1 ]
zp ZP_WORD:37 [ div10::$4 div10::$5 ]
reg byte a [ divr16u::$1 ]
reg byte a [ divr16u::$2 ]
