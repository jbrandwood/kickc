Inlined call call mulf8s_prepare mulf8s::a 
Inlined call call __init 

CONTROL FLOW GRAPH SSA

void* memset(void* memset::str , byte memset::c , word memset::num)
memset: scope:[memset]  from print_cls
  memset::c#4 = phi( print_cls/memset::c#0 )
  memset::str#3 = phi( print_cls/memset::str#0 )
  memset::num#1 = phi( print_cls/memset::num#0 )
  memset::$0 = memset::num#1 > 0
  memset::$1 = ! memset::$0
  if(memset::$1) goto memset::@1
  to:memset::@2
memset::@1: scope:[memset]  from memset memset::@3
  memset::str#1 = phi( memset/memset::str#3, memset::@3/memset::str#4 )
  memset::return#0 = memset::str#1
  to:memset::@return
memset::@2: scope:[memset]  from memset
  memset::c#3 = phi( memset/memset::c#4 )
  memset::num#2 = phi( memset/memset::num#1 )
  memset::str#2 = phi( memset/memset::str#3 )
  memset::$4 = (byte*)memset::str#2
  memset::$2 = memset::$4 + memset::num#2
  memset::end#0 = memset::$2
  memset::dst#0 = ((byte*)) memset::str#2
  to:memset::@3
memset::@3: scope:[memset]  from memset::@2 memset::@4
  memset::c#2 = phi( memset::@2/memset::c#3, memset::@4/memset::c#1 )
  memset::str#4 = phi( memset::@2/memset::str#2, memset::@4/memset::str#5 )
  memset::end#1 = phi( memset::@2/memset::end#0, memset::@4/memset::end#2 )
  memset::dst#2 = phi( memset::@2/memset::dst#0, memset::@4/memset::dst#1 )
  memset::$3 = memset::dst#2 != memset::end#1
  if(memset::$3) goto memset::@4
  to:memset::@1
memset::@4: scope:[memset]  from memset::@3
  memset::str#5 = phi( memset::@3/memset::str#4 )
  memset::end#2 = phi( memset::@3/memset::end#1 )
  memset::dst#3 = phi( memset::@3/memset::dst#2 )
  memset::c#1 = phi( memset::@3/memset::c#2 )
  *memset::dst#3 = memset::c#1
  memset::dst#1 = ++ memset::dst#3
  to:memset::@3
memset::@return: scope:[memset]  from memset::@1
  memset::return#3 = phi( memset::@1/memset::return#0 )
  memset::return#1 = memset::return#3
  return 
  to:@return

void print_str(byte* print_str::str)
print_str: scope:[print_str]  from mul16s_compare::@1 mul16s_compare::@16 mul16s_error mul16s_error::@2 mul16s_error::@4 mul16s_error::@6 mul16s_error::@8 mul16u_compare::@1 mul16u_compare::@16 mul16u_error mul16u_error::@2 mul16u_error::@4 mul16u_error::@6 mul16u_error::@8
  print_char_cursor#157 = phi( mul16s_compare::@1/print_char_cursor#152, mul16s_compare::@16/print_char_cursor#50, mul16s_error/print_char_cursor#155, mul16s_error::@2/print_char_cursor#54, mul16s_error::@4/print_char_cursor#56, mul16s_error::@6/print_char_cursor#58, mul16s_error::@8/print_char_cursor#60, mul16u_compare::@1/print_char_cursor#148, mul16u_compare::@16/print_char_cursor#32, mul16u_error/print_char_cursor#151, mul16u_error::@2/print_char_cursor#36, mul16u_error::@4/print_char_cursor#38, mul16u_error::@6/print_char_cursor#40, mul16u_error::@8/print_char_cursor#42 )
  print_str::str#18 = phi( mul16s_compare::@1/print_str::str#8, mul16s_compare::@16/print_str::str#9, mul16s_error/print_str::str#10, mul16s_error::@2/print_str::str#11, mul16s_error::@4/print_str::str#12, mul16s_error::@6/print_str::str#13, mul16s_error::@8/print_str::str#14, mul16u_compare::@1/print_str::str#1, mul16u_compare::@16/print_str::str#2, mul16u_error/print_str::str#3, mul16u_error::@2/print_str::str#4, mul16u_error::@4/print_str::str#5, mul16u_error::@6/print_str::str#6, mul16u_error::@8/print_str::str#7 )
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@3
  print_char_cursor#135 = phi( print_str/print_char_cursor#157, print_str::@3/print_char_cursor#0 )
  print_str::str#15 = phi( print_str/print_str::str#18, print_str::@3/print_str::str#0 )
  print_str::$1 = 0 != *print_str::str#15
  if(print_str::$1) goto print_str::@2
  to:print_str::@return
print_str::@2: scope:[print_str]  from print_str::@1
  print_char_cursor#134 = phi( print_str::@1/print_char_cursor#135 )
  print_str::str#16 = phi( print_str::@1/print_str::str#15 )
  print_char::ch#0 = *print_str::str#16
  call print_char 
  to:print_str::@3
print_str::@3: scope:[print_str]  from print_str::@2
  print_str::str#17 = phi( print_str::@2/print_str::str#16 )
  print_char_cursor#68 = phi( print_str::@2/print_char_cursor#22 )
  print_char_cursor#0 = print_char_cursor#68
  print_str::str#0 = ++ print_str::str#17
  to:print_str::@1
print_str::@return: scope:[print_str]  from print_str::@1
  print_char_cursor#69 = phi( print_str::@1/print_char_cursor#135 )
  print_char_cursor#1 = print_char_cursor#69
  return 
  to:@return

void print_ln()
print_ln: scope:[print_ln]  from mul16s_compare::@10 mul16s_compare::@17 mul16s_error::@10 mul16u_compare::@10 mul16u_compare::@17 mul16u_error::@10
  print_char_cursor#136 = phi( mul16s_compare::@10/print_char_cursor#154, mul16s_compare::@17/print_char_cursor#51, mul16s_error::@10/print_char_cursor#62, mul16u_compare::@10/print_char_cursor#150, mul16u_compare::@17/print_char_cursor#33, mul16u_error::@10/print_char_cursor#44 )
  print_line_cursor#45 = phi( mul16s_compare::@10/print_line_cursor#53, mul16s_compare::@17/print_line_cursor#54, mul16s_error::@10/print_line_cursor#55, mul16u_compare::@10/print_line_cursor#49, mul16u_compare::@17/print_line_cursor#50, mul16u_error::@10/print_line_cursor#51 )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  print_char_cursor#70 = phi( print_ln/print_char_cursor#136, print_ln::@1/print_char_cursor#70 )
  print_line_cursor#23 = phi( print_ln/print_line_cursor#45, print_ln::@1/print_line_cursor#0 )
  print_ln::$0 = print_line_cursor#23 + $28
  print_line_cursor#0 = print_ln::$0
  print_ln::$1 = print_line_cursor#0 < print_char_cursor#70
  if(print_ln::$1) goto print_ln::@1
  to:print_ln::@2
print_ln::@2: scope:[print_ln]  from print_ln::@1
  print_line_cursor#24 = phi( print_ln::@1/print_line_cursor#0 )
  print_char_cursor#2 = print_line_cursor#24
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@2
  print_char_cursor#71 = phi( print_ln::@2/print_char_cursor#2 )
  print_line_cursor#25 = phi( print_ln::@2/print_line_cursor#24 )
  print_line_cursor#1 = print_line_cursor#25
  print_char_cursor#3 = print_char_cursor#71
  return 
  to:@return

void print_sint(signed word print_sint::w)
print_sint: scope:[print_sint]  from mul16s_error::@1 mul16s_error::@3
  print_char_cursor#158 = phi( mul16s_error::@1/print_char_cursor#53, mul16s_error::@3/print_char_cursor#55 )
  print_sint::w#3 = phi( mul16s_error::@1/print_sint::w#1, mul16s_error::@3/print_sint::w#2 )
  print_sint::$0 = print_sint::w#3 < 0
  if(print_sint::$0) goto print_sint::@1
  to:print_sint::@3
print_sint::@1: scope:[print_sint]  from print_sint
  print_sint::w#6 = phi( print_sint/print_sint::w#3 )
  print_char_cursor#137 = phi( print_sint/print_char_cursor#158 )
  print_char::ch#1 = '-'
  call print_char 
  to:print_sint::@4
print_sint::@4: scope:[print_sint]  from print_sint::@1
  print_sint::w#4 = phi( print_sint::@1/print_sint::w#6 )
  print_char_cursor#72 = phi( print_sint::@1/print_char_cursor#22 )
  print_char_cursor#4 = print_char_cursor#72
  print_sint::$4 = - print_sint::w#4
  print_sint::w#0 = print_sint::$4
  to:print_sint::@2
print_sint::@3: scope:[print_sint]  from print_sint
  print_sint::w#8 = phi( print_sint/print_sint::w#3 )
  print_char_cursor#138 = phi( print_sint/print_char_cursor#158 )
  print_char::ch#2 = ' '
  call print_char 
  to:print_sint::@5
print_sint::@5: scope:[print_sint]  from print_sint::@3
  print_sint::w#7 = phi( print_sint::@3/print_sint::w#8 )
  print_char_cursor#73 = phi( print_sint::@3/print_char_cursor#22 )
  print_char_cursor#5 = print_char_cursor#73
  to:print_sint::@2
print_sint::@2: scope:[print_sint]  from print_sint::@4 print_sint::@5
  print_char_cursor#139 = phi( print_sint::@4/print_char_cursor#4, print_sint::@5/print_char_cursor#5 )
  print_sint::w#5 = phi( print_sint::@4/print_sint::w#0, print_sint::@5/print_sint::w#7 )
  print_uint::w#0 = (word)print_sint::w#5
  call print_uint 
  to:print_sint::@6
print_sint::@6: scope:[print_sint]  from print_sint::@2
  print_char_cursor#74 = phi( print_sint::@2/print_char_cursor#10 )
  print_char_cursor#6 = print_char_cursor#74
  to:print_sint::@return
print_sint::@return: scope:[print_sint]  from print_sint::@6
  print_char_cursor#75 = phi( print_sint::@6/print_char_cursor#6 )
  print_char_cursor#7 = print_char_cursor#75
  return 
  to:@return

void print_uint(word print_uint::w)
print_uint: scope:[print_uint]  from mul16u_error::@1 mul16u_error::@3 print_sint::@2 print_ulong print_ulong::@1
  print_char_cursor#140 = phi( mul16u_error::@1/print_char_cursor#35, mul16u_error::@3/print_char_cursor#37, print_sint::@2/print_char_cursor#139, print_ulong/print_char_cursor#141, print_ulong::@1/print_char_cursor#11 )
  print_uint::w#5 = phi( mul16u_error::@1/print_uint::w#3, mul16u_error::@3/print_uint::w#4, print_sint::@2/print_uint::w#0, print_ulong/print_uint::w#1, print_ulong::@1/print_uint::w#2 )
  print_uint::$0 = > print_uint::w#5
  print_uchar::b#0 = print_uint::$0
  call print_uchar 
  to:print_uint::@1
print_uint::@1: scope:[print_uint]  from print_uint
  print_uint::w#6 = phi( print_uint/print_uint::w#5 )
  print_char_cursor#76 = phi( print_uint/print_char_cursor#20 )
  print_char_cursor#8 = print_char_cursor#76
  print_uint::$2 = < print_uint::w#6
  print_uchar::b#1 = print_uint::$2
  call print_uchar 
  to:print_uint::@2
print_uint::@2: scope:[print_uint]  from print_uint::@1
  print_char_cursor#77 = phi( print_uint::@1/print_char_cursor#20 )
  print_char_cursor#9 = print_char_cursor#77
  to:print_uint::@return
print_uint::@return: scope:[print_uint]  from print_uint::@2
  print_char_cursor#78 = phi( print_uint::@2/print_char_cursor#9 )
  print_char_cursor#10 = print_char_cursor#78
  return 
  to:@return

void print_ulong(dword print_ulong::dw)
print_ulong: scope:[print_ulong]  from mul16u_error::@5 mul16u_error::@7 mul16u_error::@9 print_slong::@2
  print_char_cursor#141 = phi( mul16u_error::@5/print_char_cursor#39, mul16u_error::@7/print_char_cursor#41, mul16u_error::@9/print_char_cursor#43, print_slong::@2/print_char_cursor#144 )
  print_ulong::dw#4 = phi( mul16u_error::@5/print_ulong::dw#1, mul16u_error::@7/print_ulong::dw#2, mul16u_error::@9/print_ulong::dw#3, print_slong::@2/print_ulong::dw#0 )
  print_ulong::$0 = > print_ulong::dw#4
  print_uint::w#1 = print_ulong::$0
  call print_uint 
  to:print_ulong::@1
print_ulong::@1: scope:[print_ulong]  from print_ulong
  print_ulong::dw#5 = phi( print_ulong/print_ulong::dw#4 )
  print_char_cursor#79 = phi( print_ulong/print_char_cursor#10 )
  print_char_cursor#11 = print_char_cursor#79
  print_ulong::$2 = < print_ulong::dw#5
  print_uint::w#2 = print_ulong::$2
  call print_uint 
  to:print_ulong::@2
print_ulong::@2: scope:[print_ulong]  from print_ulong::@1
  print_char_cursor#80 = phi( print_ulong::@1/print_char_cursor#10 )
  print_char_cursor#12 = print_char_cursor#80
  to:print_ulong::@return
print_ulong::@return: scope:[print_ulong]  from print_ulong::@2
  print_char_cursor#81 = phi( print_ulong::@2/print_char_cursor#12 )
  print_char_cursor#13 = print_char_cursor#81
  return 
  to:@return

void print_slong(signed dword print_slong::dw)
print_slong: scope:[print_slong]  from mul16s_error::@5 mul16s_error::@7 mul16s_error::@9
  print_char_cursor#159 = phi( mul16s_error::@5/print_char_cursor#57, mul16s_error::@7/print_char_cursor#59, mul16s_error::@9/print_char_cursor#61 )
  print_slong::dw#4 = phi( mul16s_error::@5/print_slong::dw#1, mul16s_error::@7/print_slong::dw#2, mul16s_error::@9/print_slong::dw#3 )
  print_slong::$0 = print_slong::dw#4 < 0
  if(print_slong::$0) goto print_slong::@1
  to:print_slong::@3
print_slong::@1: scope:[print_slong]  from print_slong
  print_slong::dw#7 = phi( print_slong/print_slong::dw#4 )
  print_char_cursor#142 = phi( print_slong/print_char_cursor#159 )
  print_char::ch#3 = '-'
  call print_char 
  to:print_slong::@4
print_slong::@4: scope:[print_slong]  from print_slong::@1
  print_slong::dw#5 = phi( print_slong::@1/print_slong::dw#7 )
  print_char_cursor#82 = phi( print_slong::@1/print_char_cursor#22 )
  print_char_cursor#14 = print_char_cursor#82
  print_slong::$4 = - print_slong::dw#5
  print_slong::dw#0 = print_slong::$4
  to:print_slong::@2
print_slong::@3: scope:[print_slong]  from print_slong
  print_slong::dw#9 = phi( print_slong/print_slong::dw#4 )
  print_char_cursor#143 = phi( print_slong/print_char_cursor#159 )
  print_char::ch#4 = ' '
  call print_char 
  to:print_slong::@5
print_slong::@5: scope:[print_slong]  from print_slong::@3
  print_slong::dw#8 = phi( print_slong::@3/print_slong::dw#9 )
  print_char_cursor#83 = phi( print_slong::@3/print_char_cursor#22 )
  print_char_cursor#15 = print_char_cursor#83
  to:print_slong::@2
print_slong::@2: scope:[print_slong]  from print_slong::@4 print_slong::@5
  print_char_cursor#144 = phi( print_slong::@4/print_char_cursor#14, print_slong::@5/print_char_cursor#15 )
  print_slong::dw#6 = phi( print_slong::@4/print_slong::dw#0, print_slong::@5/print_slong::dw#8 )
  print_ulong::dw#0 = (dword)print_slong::dw#6
  call print_ulong 
  to:print_slong::@6
print_slong::@6: scope:[print_slong]  from print_slong::@2
  print_char_cursor#84 = phi( print_slong::@2/print_char_cursor#13 )
  print_char_cursor#16 = print_char_cursor#84
  to:print_slong::@return
print_slong::@return: scope:[print_slong]  from print_slong::@6
  print_char_cursor#85 = phi( print_slong::@6/print_char_cursor#16 )
  print_char_cursor#17 = print_char_cursor#85
  return 
  to:@return

void print_uchar(byte print_uchar::b)
print_uchar: scope:[print_uchar]  from print_uint print_uint::@1
  print_char_cursor#145 = phi( print_uint/print_char_cursor#140, print_uint::@1/print_char_cursor#8 )
  print_uchar::b#2 = phi( print_uint/print_uchar::b#0, print_uint::@1/print_uchar::b#1 )
  print_uchar::$0 = print_uchar::b#2 >> 4
  print_char::ch#5 = print_hextab[print_uchar::$0]
  call print_char 
  to:print_uchar::@1
print_uchar::@1: scope:[print_uchar]  from print_uchar
  print_uchar::b#3 = phi( print_uchar/print_uchar::b#2 )
  print_char_cursor#86 = phi( print_uchar/print_char_cursor#22 )
  print_char_cursor#18 = print_char_cursor#86
  print_uchar::$2 = print_uchar::b#3 & $f
  print_char::ch#6 = print_hextab[print_uchar::$2]
  call print_char 
  to:print_uchar::@2
print_uchar::@2: scope:[print_uchar]  from print_uchar::@1
  print_char_cursor#87 = phi( print_uchar::@1/print_char_cursor#22 )
  print_char_cursor#19 = print_char_cursor#87
  to:print_uchar::@return
print_uchar::@return: scope:[print_uchar]  from print_uchar::@2
  print_char_cursor#88 = phi( print_uchar::@2/print_char_cursor#19 )
  print_char_cursor#20 = print_char_cursor#88
  return 
  to:@return

void print_char(byte print_char::ch)
print_char: scope:[print_char]  from print_sint::@1 print_sint::@3 print_slong::@1 print_slong::@3 print_str::@2 print_uchar print_uchar::@1
  print_char_cursor#89 = phi( print_sint::@1/print_char_cursor#137, print_sint::@3/print_char_cursor#138, print_slong::@1/print_char_cursor#142, print_slong::@3/print_char_cursor#143, print_str::@2/print_char_cursor#134, print_uchar/print_char_cursor#145, print_uchar::@1/print_char_cursor#18 )
  print_char::ch#7 = phi( print_sint::@1/print_char::ch#1, print_sint::@3/print_char::ch#2, print_slong::@1/print_char::ch#3, print_slong::@3/print_char::ch#4, print_str::@2/print_char::ch#0, print_uchar/print_char::ch#5, print_uchar::@1/print_char::ch#6 )
  *print_char_cursor#89 = print_char::ch#7
  print_char_cursor#21 = ++ print_char_cursor#89
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  print_char_cursor#90 = phi( print_char/print_char_cursor#21 )
  print_char_cursor#22 = print_char_cursor#90
  return 
  to:@return

void print_cls()
print_cls: scope:[print_cls]  from main
  print_screen#2 = phi( main/print_screen#5 )
  memset::str#0 = (void*)print_screen#2
  memset::c#0 = ' '
  memset::num#0 = $3e8
  call memset 
  memset::return#2 = memset::return#1
  to:print_cls::@1
print_cls::@1: scope:[print_cls]  from print_cls
  print_screen#3 = phi( print_cls/print_screen#2 )
  print_line_cursor#2 = print_screen#3
  print_char_cursor#23 = print_line_cursor#2
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls::@1
  print_char_cursor#91 = phi( print_cls::@1/print_char_cursor#23 )
  print_line_cursor#26 = phi( print_cls::@1/print_line_cursor#2 )
  print_line_cursor#3 = print_line_cursor#26
  print_char_cursor#24 = print_char_cursor#91
  return 
  to:@return

dword mul16u(word mul16u::a , word mul16u::b)
mul16u: scope:[mul16u]  from mul16s mul16u_compare::@12
  mul16u::a#6 = phi( mul16s/mul16u::a#1, mul16u_compare::@12/mul16u::a#2 )
  mul16u::b#2 = phi( mul16s/mul16u::b#0, mul16u_compare::@12/mul16u::b#1 )
  mul16u::res#0 = 0
  mul16u::mb#0 = (dword)mul16u::b#2
  to:mul16u::@1
mul16u::@1: scope:[mul16u]  from mul16u mul16u::@4
  mul16u::mb#5 = phi( mul16u/mul16u::mb#0, mul16u::@4/mul16u::mb#1 )
  mul16u::res#4 = phi( mul16u/mul16u::res#0, mul16u::@4/mul16u::res#6 )
  mul16u::a#3 = phi( mul16u/mul16u::a#6, mul16u::@4/mul16u::a#0 )
  mul16u::$0 = mul16u::a#3 != 0
  if(mul16u::$0) goto mul16u::@2
  to:mul16u::@3
mul16u::@2: scope:[mul16u]  from mul16u::@1
  mul16u::res#5 = phi( mul16u::@1/mul16u::res#4 )
  mul16u::mb#4 = phi( mul16u::@1/mul16u::mb#5 )
  mul16u::a#4 = phi( mul16u::@1/mul16u::a#3 )
  mul16u::$1 = mul16u::a#4 & 1
  mul16u::$2 = mul16u::$1 != 0
  mul16u::$3 = ! mul16u::$2
  if(mul16u::$3) goto mul16u::@4
  to:mul16u::@5
mul16u::@3: scope:[mul16u]  from mul16u::@1
  mul16u::res#2 = phi( mul16u::@1/mul16u::res#4 )
  mul16u::return#0 = mul16u::res#2
  to:mul16u::@return
mul16u::@4: scope:[mul16u]  from mul16u::@2 mul16u::@5
  mul16u::res#6 = phi( mul16u::@2/mul16u::res#5, mul16u::@5/mul16u::res#1 )
  mul16u::mb#2 = phi( mul16u::@2/mul16u::mb#4, mul16u::@5/mul16u::mb#3 )
  mul16u::a#5 = phi( mul16u::@2/mul16u::a#4, mul16u::@5/mul16u::a#7 )
  mul16u::$5 = mul16u::a#5 >> 1
  mul16u::a#0 = mul16u::$5
  mul16u::$6 = mul16u::mb#2 << 1
  mul16u::mb#1 = mul16u::$6
  to:mul16u::@1
mul16u::@5: scope:[mul16u]  from mul16u::@2
  mul16u::a#7 = phi( mul16u::@2/mul16u::a#4 )
  mul16u::mb#3 = phi( mul16u::@2/mul16u::mb#4 )
  mul16u::res#3 = phi( mul16u::@2/mul16u::res#5 )
  mul16u::$4 = mul16u::res#3 + mul16u::mb#3
  mul16u::res#1 = mul16u::$4
  to:mul16u::@4
mul16u::@return: scope:[mul16u]  from mul16u::@3
  mul16u::return#4 = phi( mul16u::@3/mul16u::return#0 )
  mul16u::return#1 = mul16u::return#4
  return 
  to:@return

signed dword mul16s(signed word mul16s::a , signed word mul16s::b)
mul16s: scope:[mul16s]  from mul16s_compare::@12
  mul16s::b#1 = phi( mul16s_compare::@12/mul16s::b#0 )
  mul16s::a#1 = phi( mul16s_compare::@12/mul16s::a#0 )
  mul16u::a#1 = (word)mul16s::a#1
  mul16u::b#0 = (word)mul16s::b#1
  call mul16u 
  mul16u::return#2 = mul16u::return#1
  to:mul16s::@5
mul16s::@5: scope:[mul16s]  from mul16s
  mul16s::b#4 = phi( mul16s/mul16s::b#1 )
  mul16s::a#2 = phi( mul16s/mul16s::a#1 )
  mul16u::return#5 = phi( mul16s/mul16u::return#2 )
  mul16s::$0 = mul16u::return#5
  mul16s::m#0 = mul16s::$0
  mul16s::$1 = mul16s::a#2 < 0
  mul16s::$2 = ! mul16s::$1
  if(mul16s::$2) goto mul16s::@1
  to:mul16s::@3
mul16s::@1: scope:[mul16s]  from mul16s::@3 mul16s::@5
  mul16s::a#4 = phi( mul16s::@3/mul16s::a#5, mul16s::@5/mul16s::a#2 )
  mul16s::m#6 = phi( mul16s::@3/mul16s::m#1, mul16s::@5/mul16s::m#0 )
  mul16s::b#2 = phi( mul16s::@3/mul16s::b#3, mul16s::@5/mul16s::b#4 )
  mul16s::$3 = mul16s::b#2 < 0
  mul16s::$4 = ! mul16s::$3
  if(mul16s::$4) goto mul16s::@2
  to:mul16s::@4
mul16s::@3: scope:[mul16s]  from mul16s::@5
  mul16s::a#5 = phi( mul16s::@5/mul16s::a#2 )
  mul16s::b#3 = phi( mul16s::@5/mul16s::b#4 )
  mul16s::m#3 = phi( mul16s::@5/mul16s::m#0 )
  mul16s::$6 = > mul16s::m#3
  mul16s::$13 = (word)mul16s::b#3
  mul16s::$7 = mul16s::$6 - mul16s::$13
  mul16s::$11 = mul16s::$7
  mul16s::m#1 = mul16s::m#3 hi= mul16s::$11
  to:mul16s::@1
mul16s::@2: scope:[mul16s]  from mul16s::@1 mul16s::@4
  mul16s::m#4 = phi( mul16s::@1/mul16s::m#6, mul16s::@4/mul16s::m#2 )
  mul16s::return#0 = (signed dword)mul16s::m#4
  to:mul16s::@return
mul16s::@4: scope:[mul16s]  from mul16s::@1
  mul16s::a#3 = phi( mul16s::@1/mul16s::a#4 )
  mul16s::m#5 = phi( mul16s::@1/mul16s::m#6 )
  mul16s::$9 = > mul16s::m#5
  mul16s::$14 = (word)mul16s::a#3
  mul16s::$10 = mul16s::$9 - mul16s::$14
  mul16s::$12 = mul16s::$10
  mul16s::m#2 = mul16s::m#5 hi= mul16s::$12
  to:mul16s::@2
mul16s::@return: scope:[mul16s]  from mul16s::@2
  mul16s::return#3 = phi( mul16s::@2/mul16s::return#0 )
  mul16s::return#1 = mul16s::return#3
  return 
  to:@return

void mulf_init()
mulf_init: scope:[mulf_init]  from main::@1
  mulf_init::sqr#0 = 0
  mulf_init::x_2#0 = 0
  mulf_init::c#0 = 0
  mulf_init::sqr1_hi#0 = mulf_sqr1_hi+1
  mulf_init::sqr1_lo#0 = mulf_sqr1_lo+1
  to:mulf_init::@1
mulf_init::@1: scope:[mulf_init]  from mulf_init mulf_init::@4
  mulf_init::x_2#5 = phi( mulf_init/mulf_init::x_2#0, mulf_init::@4/mulf_init::x_2#2 )
  mulf_init::sqr1_hi#5 = phi( mulf_init/mulf_init::sqr1_hi#0, mulf_init::@4/mulf_init::sqr1_hi#1 )
  mulf_init::sqr#6 = phi( mulf_init/mulf_init::sqr#0, mulf_init::@4/mulf_init::sqr#1 )
  mulf_init::c#3 = phi( mulf_init/mulf_init::c#0, mulf_init::@4/mulf_init::c#4 )
  mulf_init::sqr1_lo#2 = phi( mulf_init/mulf_init::sqr1_lo#0, mulf_init::@4/mulf_init::sqr1_lo#1 )
  mulf_init::$0 = mulf_init::sqr1_lo#2 != mulf_sqr1_lo+$200
  if(mulf_init::$0) goto mulf_init::@2
  to:mulf_init::@3
mulf_init::@2: scope:[mulf_init]  from mulf_init::@1
  mulf_init::x_2#4 = phi( mulf_init::@1/mulf_init::x_2#5 )
  mulf_init::sqr1_hi#3 = phi( mulf_init::@1/mulf_init::sqr1_hi#5 )
  mulf_init::sqr1_lo#4 = phi( mulf_init::@1/mulf_init::sqr1_lo#2 )
  mulf_init::sqr#5 = phi( mulf_init::@1/mulf_init::sqr#6 )
  mulf_init::c#2 = phi( mulf_init::@1/mulf_init::c#3 )
  mulf_init::c#1 = ++ mulf_init::c#2
  mulf_init::$1 = mulf_init::c#1 & 1
  mulf_init::$2 = mulf_init::$1 == 0
  mulf_init::$3 = ! mulf_init::$2
  if(mulf_init::$3) goto mulf_init::@4
  to:mulf_init::@5
mulf_init::@3: scope:[mulf_init]  from mulf_init::@1
  mulf_init::x_255#0 = (byte)-1
  mulf_init::dir#0 = $ff
  mulf_init::sqr2_hi#0 = mulf_sqr2_hi
  mulf_init::sqr2_lo#0 = mulf_sqr2_lo
  to:mulf_init::@6
mulf_init::@4: scope:[mulf_init]  from mulf_init::@2 mulf_init::@5
  mulf_init::c#4 = phi( mulf_init::@2/mulf_init::c#1, mulf_init::@5/mulf_init::c#5 )
  mulf_init::x_2#2 = phi( mulf_init::@2/mulf_init::x_2#4, mulf_init::@5/mulf_init::x_2#1 )
  mulf_init::sqr1_hi#2 = phi( mulf_init::@2/mulf_init::sqr1_hi#3, mulf_init::@5/mulf_init::sqr1_hi#4 )
  mulf_init::sqr1_lo#3 = phi( mulf_init::@2/mulf_init::sqr1_lo#4, mulf_init::@5/mulf_init::sqr1_lo#5 )
  mulf_init::sqr#3 = phi( mulf_init::@2/mulf_init::sqr#5, mulf_init::@5/mulf_init::sqr#2 )
  mulf_init::$4 = < mulf_init::sqr#3
  *mulf_init::sqr1_lo#3 = mulf_init::$4
  mulf_init::$5 = > mulf_init::sqr#3
  *mulf_init::sqr1_hi#2 = mulf_init::$5
  mulf_init::sqr1_hi#1 = ++ mulf_init::sqr1_hi#2
  mulf_init::$6 = mulf_init::sqr#3 + mulf_init::x_2#2
  mulf_init::sqr#1 = mulf_init::$6
  mulf_init::sqr1_lo#1 = ++ mulf_init::sqr1_lo#3
  to:mulf_init::@1
mulf_init::@5: scope:[mulf_init]  from mulf_init::@2
  mulf_init::c#5 = phi( mulf_init::@2/mulf_init::c#1 )
  mulf_init::sqr1_hi#4 = phi( mulf_init::@2/mulf_init::sqr1_hi#3 )
  mulf_init::sqr1_lo#5 = phi( mulf_init::@2/mulf_init::sqr1_lo#4 )
  mulf_init::sqr#4 = phi( mulf_init::@2/mulf_init::sqr#5 )
  mulf_init::x_2#3 = phi( mulf_init::@2/mulf_init::x_2#4 )
  mulf_init::x_2#1 = ++ mulf_init::x_2#3
  mulf_init::sqr#2 = ++ mulf_init::sqr#4
  to:mulf_init::@4
mulf_init::@6: scope:[mulf_init]  from mulf_init::@3 mulf_init::@9
  mulf_init::dir#3 = phi( mulf_init::@3/mulf_init::dir#0, mulf_init::@9/mulf_init::dir#4 )
  mulf_init::sqr2_hi#3 = phi( mulf_init::@3/mulf_init::sqr2_hi#0, mulf_init::@9/mulf_init::sqr2_hi#4 )
  mulf_init::x_255#3 = phi( mulf_init::@3/mulf_init::x_255#0, mulf_init::@9/mulf_init::x_255#4 )
  mulf_init::sqr2_lo#2 = phi( mulf_init::@3/mulf_init::sqr2_lo#0, mulf_init::@9/mulf_init::sqr2_lo#1 )
  mulf_init::$7 = mulf_init::sqr2_lo#2 != mulf_sqr2_lo+$1ff
  if(mulf_init::$7) goto mulf_init::@7
  to:mulf_init::@8
mulf_init::@7: scope:[mulf_init]  from mulf_init::@6
  mulf_init::dir#2 = phi( mulf_init::@6/mulf_init::dir#3 )
  mulf_init::sqr2_hi#2 = phi( mulf_init::@6/mulf_init::sqr2_hi#3 )
  mulf_init::sqr2_lo#3 = phi( mulf_init::@6/mulf_init::sqr2_lo#2 )
  mulf_init::x_255#2 = phi( mulf_init::@6/mulf_init::x_255#3 )
  *mulf_init::sqr2_lo#3 = mulf_sqr1_lo[mulf_init::x_255#2]
  *mulf_init::sqr2_hi#2 = mulf_sqr1_hi[mulf_init::x_255#2]
  mulf_init::sqr2_hi#1 = ++ mulf_init::sqr2_hi#2
  mulf_init::$8 = mulf_init::x_255#2 + mulf_init::dir#2
  mulf_init::x_255#1 = mulf_init::$8
  mulf_init::$9 = mulf_init::x_255#1 == 0
  mulf_init::$10 = ! mulf_init::$9
  if(mulf_init::$10) goto mulf_init::@9
  to:mulf_init::@10
mulf_init::@8: scope:[mulf_init]  from mulf_init::@6
  *(mulf_sqr2_lo+$1ff) = *(mulf_sqr1_lo+$100)
  *(mulf_sqr2_hi+$1ff) = *(mulf_sqr1_hi+$100)
  to:mulf_init::@return
mulf_init::@9: scope:[mulf_init]  from mulf_init::@10 mulf_init::@7
  mulf_init::dir#4 = phi( mulf_init::@10/mulf_init::dir#1, mulf_init::@7/mulf_init::dir#2 )
  mulf_init::sqr2_hi#4 = phi( mulf_init::@10/mulf_init::sqr2_hi#5, mulf_init::@7/mulf_init::sqr2_hi#1 )
  mulf_init::x_255#4 = phi( mulf_init::@10/mulf_init::x_255#5, mulf_init::@7/mulf_init::x_255#1 )
  mulf_init::sqr2_lo#4 = phi( mulf_init::@10/mulf_init::sqr2_lo#5, mulf_init::@7/mulf_init::sqr2_lo#3 )
  mulf_init::sqr2_lo#1 = ++ mulf_init::sqr2_lo#4
  to:mulf_init::@6
mulf_init::@10: scope:[mulf_init]  from mulf_init::@7
  mulf_init::sqr2_hi#5 = phi( mulf_init::@7/mulf_init::sqr2_hi#1 )
  mulf_init::x_255#5 = phi( mulf_init::@7/mulf_init::x_255#1 )
  mulf_init::sqr2_lo#5 = phi( mulf_init::@7/mulf_init::sqr2_lo#3 )
  mulf_init::dir#1 = 1
  to:mulf_init::@9
mulf_init::@return: scope:[mulf_init]  from mulf_init::@8
  return 
  to:@return

dword mulf16u(word mulf16u::a , word mulf16u::b)
mulf16u: scope:[mulf16u]  from mul16u_compare::@13 mulf16s
  mulf16u::b#2 = phi( mul16u_compare::@13/mulf16u::b#1, mulf16s/mulf16u::b#0 )
  mulf16u::a#2 = phi( mul16u_compare::@13/mulf16u::a#1, mulf16s/mulf16u::a#0 )
  *mulf16u::memA = mulf16u::a#2
  *mulf16u::memB = mulf16u::b#2
  asm { ldamemA stasm1a+1 stasm3a+1 stasm5a+1 stasm7a+1 eor#$ff stasm2a+1 stasm4a+1 stasm6a+1 stasm8a+1 ldamemA+1 stasm1b+1 stasm3b+1 stasm5b+1 stasm7b+1 eor#$ff stasm2b+1 stasm4b+1 stasm6b+1 stasm8b+1 ldxmemB sec sm1a: ldamulf_sqr1_lo,x sm2a: sbcmulf_sqr2_lo,x stamemR+0 sm3a: ldamulf_sqr1_hi,x sm4a: sbcmulf_sqr2_hi,x sta_AA+1 sec sm1b: ldamulf_sqr1_lo,x sm2b: sbcmulf_sqr2_lo,x sta_cc+1 sm3b: ldamulf_sqr1_hi,x sm4b: sbcmulf_sqr2_hi,x sta_CC+1 ldxmemB+1 sec sm5a: ldamulf_sqr1_lo,x sm6a: sbcmulf_sqr2_lo,x sta_bb+1 sm7a: ldamulf_sqr1_hi,x sm8a: sbcmulf_sqr2_hi,x sta_BB+1 sec sm5b: ldamulf_sqr1_lo,x sm6b: sbcmulf_sqr2_lo,x sta_dd+1 sm7b: ldamulf_sqr1_hi,x sm8b: sbcmulf_sqr2_hi,x stamemR+3 clc _AA: lda#0 _bb: adc#0 stamemR+1 _BB: lda#0 _CC: adc#0 stamemR+2 bcc!+ incmemR+3 clc !: _cc: lda#0 adcmemR+1 stamemR+1 _dd: lda#0 adcmemR+2 stamemR+2 bcc!+ incmemR+3 !:  }
  mulf16u::return#0 = *mulf16u::memR
  to:mulf16u::@return
mulf16u::@return: scope:[mulf16u]  from mulf16u
  mulf16u::return#4 = phi( mulf16u/mulf16u::return#0 )
  mulf16u::return#1 = mulf16u::return#4
  return 
  to:@return

signed dword mulf16s(signed word mulf16s::a , signed word mulf16s::b)
mulf16s: scope:[mulf16s]  from mul16s_compare::@13
  mulf16s::b#1 = phi( mul16s_compare::@13/mulf16s::b#0 )
  mulf16s::a#1 = phi( mul16s_compare::@13/mulf16s::a#0 )
  mulf16u::a#0 = (word)mulf16s::a#1
  mulf16u::b#0 = (word)mulf16s::b#1
  call mulf16u 
  mulf16u::return#2 = mulf16u::return#1
  to:mulf16s::@5
mulf16s::@5: scope:[mulf16s]  from mulf16s
  mulf16s::b#4 = phi( mulf16s/mulf16s::b#1 )
  mulf16s::a#2 = phi( mulf16s/mulf16s::a#1 )
  mulf16u::return#5 = phi( mulf16s/mulf16u::return#2 )
  mulf16s::$0 = mulf16u::return#5
  mulf16s::m#0 = mulf16s::$0
  mulf16s::$1 = mulf16s::a#2 < 0
  mulf16s::$2 = ! mulf16s::$1
  if(mulf16s::$2) goto mulf16s::@1
  to:mulf16s::@3
mulf16s::@1: scope:[mulf16s]  from mulf16s::@3 mulf16s::@5
  mulf16s::a#4 = phi( mulf16s::@3/mulf16s::a#5, mulf16s::@5/mulf16s::a#2 )
  mulf16s::m#6 = phi( mulf16s::@3/mulf16s::m#1, mulf16s::@5/mulf16s::m#0 )
  mulf16s::b#2 = phi( mulf16s::@3/mulf16s::b#3, mulf16s::@5/mulf16s::b#4 )
  mulf16s::$3 = mulf16s::b#2 < 0
  mulf16s::$4 = ! mulf16s::$3
  if(mulf16s::$4) goto mulf16s::@2
  to:mulf16s::@4
mulf16s::@3: scope:[mulf16s]  from mulf16s::@5
  mulf16s::a#5 = phi( mulf16s::@5/mulf16s::a#2 )
  mulf16s::b#3 = phi( mulf16s::@5/mulf16s::b#4 )
  mulf16s::m#3 = phi( mulf16s::@5/mulf16s::m#0 )
  mulf16s::$6 = > mulf16s::m#3
  mulf16s::$13 = (word)mulf16s::b#3
  mulf16s::$7 = mulf16s::$6 - mulf16s::$13
  mulf16s::$11 = mulf16s::$7
  mulf16s::m#1 = mulf16s::m#3 hi= mulf16s::$11
  to:mulf16s::@1
mulf16s::@2: scope:[mulf16s]  from mulf16s::@1 mulf16s::@4
  mulf16s::m#4 = phi( mulf16s::@1/mulf16s::m#6, mulf16s::@4/mulf16s::m#2 )
  mulf16s::return#0 = (signed dword)mulf16s::m#4
  to:mulf16s::@return
mulf16s::@4: scope:[mulf16s]  from mulf16s::@1
  mulf16s::a#3 = phi( mulf16s::@1/mulf16s::a#4 )
  mulf16s::m#5 = phi( mulf16s::@1/mulf16s::m#6 )
  mulf16s::$9 = > mulf16s::m#5
  mulf16s::$14 = (word)mulf16s::a#3
  mulf16s::$10 = mulf16s::$9 - mulf16s::$14
  mulf16s::$12 = mulf16s::$10
  mulf16s::m#2 = mulf16s::m#5 hi= mulf16s::$12
  to:mulf16s::@2
mulf16s::@return: scope:[mulf16s]  from mulf16s::@2
  mulf16s::return#3 = phi( mulf16s::@2/mulf16s::return#0 )
  mulf16s::return#1 = mulf16s::return#3
  return 
  to:@return

void main()
main: scope:[main]  from __start::@1
  print_char_cursor#146 = phi( __start::@1/print_char_cursor#156 )
  print_line_cursor#46 = phi( __start::@1/print_line_cursor#56 )
  print_screen#5 = phi( __start::@1/print_screen#7 )
  *BG_COLOR = 5
  call print_cls 
  to:main::@1
main::@1: scope:[main]  from main
  print_char_cursor#92 = phi( main/print_char_cursor#24 )
  print_line_cursor#27 = phi( main/print_line_cursor#3 )
  print_line_cursor#4 = print_line_cursor#27
  print_char_cursor#25 = print_char_cursor#92
  call mulf_init 
  to:main::@2
main::@2: scope:[main]  from main::@1
  print_line_cursor#47 = phi( main::@1/print_line_cursor#4 )
  print_char_cursor#147 = phi( main::@1/print_char_cursor#25 )
  call mul16u_compare 
  to:main::@3
main::@3: scope:[main]  from main::@2
  print_line_cursor#28 = phi( main::@2/print_line_cursor#9 )
  print_char_cursor#93 = phi( main::@2/print_char_cursor#31 )
  print_char_cursor#26 = print_char_cursor#93
  print_line_cursor#5 = print_line_cursor#28
  call mul16s_compare 
  to:main::@4
main::@4: scope:[main]  from main::@3
  print_line_cursor#29 = phi( main::@3/print_line_cursor#15 )
  print_char_cursor#94 = phi( main::@3/print_char_cursor#49 )
  print_char_cursor#27 = print_char_cursor#94
  print_line_cursor#6 = print_line_cursor#29
  to:main::@return
main::@return: scope:[main]  from main::@4
  print_char_cursor#95 = phi( main::@4/print_char_cursor#27 )
  print_line_cursor#30 = phi( main::@4/print_line_cursor#6 )
  print_line_cursor#7 = print_line_cursor#30
  print_char_cursor#28 = print_char_cursor#95
  return 
  to:@return

dword muls16u(word muls16u::a , word muls16u::b)
muls16u: scope:[muls16u]  from mul16u_compare::@2
  muls16u::b#4 = phi( mul16u_compare::@2/muls16u::b#0 )
  muls16u::a#1 = phi( mul16u_compare::@2/muls16u::a#0 )
  muls16u::m#0 = 0
  muls16u::$0 = muls16u::a#1 != 0
  muls16u::$1 = ! muls16u::$0
  if(muls16u::$1) goto muls16u::@1
  to:muls16u::@2
muls16u::@1: scope:[muls16u]  from muls16u muls16u::@3
  muls16u::m#2 = phi( muls16u/muls16u::m#0, muls16u::@3/muls16u::m#4 )
  muls16u::return#0 = muls16u::m#2
  to:muls16u::@return
muls16u::@2: scope:[muls16u]  from muls16u
  muls16u::b#3 = phi( muls16u/muls16u::b#4 )
  muls16u::m#5 = phi( muls16u/muls16u::m#0 )
  muls16u::a#3 = phi( muls16u/muls16u::a#1 )
  muls16u::i#0 = 0
  to:muls16u::@3
muls16u::@3: scope:[muls16u]  from muls16u::@2 muls16u::@4
  muls16u::b#2 = phi( muls16u::@2/muls16u::b#3, muls16u::@4/muls16u::b#1 )
  muls16u::m#4 = phi( muls16u::@2/muls16u::m#5, muls16u::@4/muls16u::m#1 )
  muls16u::a#2 = phi( muls16u::@2/muls16u::a#3, muls16u::@4/muls16u::a#4 )
  muls16u::i#2 = phi( muls16u::@2/muls16u::i#0, muls16u::@4/muls16u::i#1 )
  muls16u::$2 = muls16u::i#2 != muls16u::a#2
  if(muls16u::$2) goto muls16u::@4
  to:muls16u::@1
muls16u::@4: scope:[muls16u]  from muls16u::@3
  muls16u::a#4 = phi( muls16u::@3/muls16u::a#2 )
  muls16u::i#3 = phi( muls16u::@3/muls16u::i#2 )
  muls16u::b#1 = phi( muls16u::@3/muls16u::b#2 )
  muls16u::m#3 = phi( muls16u::@3/muls16u::m#4 )
  muls16u::$3 = muls16u::m#3 + muls16u::b#1
  muls16u::m#1 = muls16u::$3
  muls16u::i#1 = ++ muls16u::i#3
  to:muls16u::@3
muls16u::@return: scope:[muls16u]  from muls16u::@1
  muls16u::return#3 = phi( muls16u::@1/muls16u::return#0 )
  muls16u::return#1 = muls16u::return#3
  return 
  to:@return

signed dword muls16s(signed word muls16s::a , signed word muls16s::b)
muls16s: scope:[muls16s]  from mul16s_compare::@2
  muls16s::b#7 = phi( mul16s_compare::@2/muls16s::b#0 )
  muls16s::a#1 = phi( mul16s_compare::@2/muls16s::a#0 )
  muls16s::m#0 = 0
  muls16s::$0 = muls16s::a#1 < 0
  if(muls16s::$0) goto muls16s::@1
  to:muls16s::@3
muls16s::@1: scope:[muls16s]  from muls16s
  muls16s::b#6 = phi( muls16s/muls16s::b#7 )
  muls16s::m#10 = phi( muls16s/muls16s::m#0 )
  muls16s::a#7 = phi( muls16s/muls16s::a#1 )
  muls16s::i#0 = 0
  to:muls16s::@7
muls16s::@3: scope:[muls16s]  from muls16s
  muls16s::b#8 = phi( muls16s/muls16s::b#7 )
  muls16s::m#7 = phi( muls16s/muls16s::m#0 )
  muls16s::a#2 = phi( muls16s/muls16s::a#1 )
  muls16s::$1 = muls16s::a#2 > 0
  muls16s::$2 = ! muls16s::$1
  if(muls16s::$2) goto muls16s::@2
  to:muls16s::@4
muls16s::@4: scope:[muls16s]  from muls16s::@3
  muls16s::b#5 = phi( muls16s::@3/muls16s::b#8 )
  muls16s::m#9 = phi( muls16s::@3/muls16s::m#7 )
  muls16s::a#5 = phi( muls16s::@3/muls16s::a#2 )
  muls16s::j#0 = 0
  to:muls16s::@5
muls16s::@5: scope:[muls16s]  from muls16s::@4 muls16s::@6
  muls16s::b#3 = phi( muls16s::@4/muls16s::b#5, muls16s::@6/muls16s::b#1 )
  muls16s::m#6 = phi( muls16s::@4/muls16s::m#9, muls16s::@6/muls16s::m#1 )
  muls16s::a#3 = phi( muls16s::@4/muls16s::a#5, muls16s::@6/muls16s::a#6 )
  muls16s::j#2 = phi( muls16s::@4/muls16s::j#0, muls16s::@6/muls16s::j#1 )
  muls16s::$3 = muls16s::j#2 != muls16s::a#3
  if(muls16s::$3) goto muls16s::@6
  to:muls16s::@2
muls16s::@6: scope:[muls16s]  from muls16s::@5
  muls16s::a#6 = phi( muls16s::@5/muls16s::a#3 )
  muls16s::j#3 = phi( muls16s::@5/muls16s::j#2 )
  muls16s::b#1 = phi( muls16s::@5/muls16s::b#3 )
  muls16s::m#3 = phi( muls16s::@5/muls16s::m#6 )
  muls16s::$4 = muls16s::m#3 + muls16s::b#1
  muls16s::m#1 = muls16s::$4
  muls16s::j#1 = ++ muls16s::j#3
  to:muls16s::@5
muls16s::@2: scope:[muls16s]  from muls16s::@3 muls16s::@5 muls16s::@7
  muls16s::m#4 = phi( muls16s::@3/muls16s::m#7, muls16s::@5/muls16s::m#6, muls16s::@7/muls16s::m#8 )
  muls16s::return#0 = muls16s::m#4
  to:muls16s::@return
muls16s::@7: scope:[muls16s]  from muls16s::@1 muls16s::@8
  muls16s::b#4 = phi( muls16s::@1/muls16s::b#6, muls16s::@8/muls16s::b#2 )
  muls16s::m#8 = phi( muls16s::@1/muls16s::m#10, muls16s::@8/muls16s::m#2 )
  muls16s::a#4 = phi( muls16s::@1/muls16s::a#7, muls16s::@8/muls16s::a#8 )
  muls16s::i#2 = phi( muls16s::@1/muls16s::i#0, muls16s::@8/muls16s::i#1 )
  muls16s::$5 = muls16s::i#2 != muls16s::a#4
  if(muls16s::$5) goto muls16s::@8
  to:muls16s::@2
muls16s::@8: scope:[muls16s]  from muls16s::@7
  muls16s::a#8 = phi( muls16s::@7/muls16s::a#4 )
  muls16s::i#3 = phi( muls16s::@7/muls16s::i#2 )
  muls16s::b#2 = phi( muls16s::@7/muls16s::b#4 )
  muls16s::m#5 = phi( muls16s::@7/muls16s::m#8 )
  muls16s::$6 = muls16s::m#5 - muls16s::b#2
  muls16s::m#2 = muls16s::$6
  muls16s::i#1 = -- muls16s::i#3
  to:muls16s::@7
muls16s::@return: scope:[muls16s]  from muls16s::@2
  muls16s::return#3 = phi( muls16s::@2/muls16s::return#0 )
  muls16s::return#1 = muls16s::return#3
  return 
  to:@return

void mul16u_compare()
mul16u_compare: scope:[mul16u_compare]  from main::@2
  print_line_cursor#97 = phi( main::@2/print_line_cursor#47 )
  print_char_cursor#160 = phi( main::@2/print_char_cursor#147 )
  mul16u_compare::a#0 = 0
  mul16u_compare::b#0 = 0
  mul16u_compare::i#0 = 0
  to:mul16u_compare::@1
mul16u_compare::@1: scope:[mul16u_compare]  from mul16u_compare mul16u_compare::@9
  print_line_cursor#93 = phi( mul16u_compare/print_line_cursor#97, mul16u_compare::@9/print_line_cursor#58 )
  mul16u_compare::i#13 = phi( mul16u_compare/mul16u_compare::i#0, mul16u_compare::@9/mul16u_compare::i#1 )
  mul16u_compare::b#9 = phi( mul16u_compare/mul16u_compare::b#0, mul16u_compare::@9/mul16u_compare::b#12 )
  mul16u_compare::a#9 = phi( mul16u_compare/mul16u_compare::a#0, mul16u_compare::@9/mul16u_compare::a#12 )
  print_char_cursor#148 = phi( mul16u_compare/print_char_cursor#160, mul16u_compare::@9/print_char_cursor#161 )
  print_str::str#1 = mul16u_compare::str
  call print_str 
  to:mul16u_compare::@11
mul16u_compare::@11: scope:[mul16u_compare]  from mul16u_compare::@1
  print_line_cursor#89 = phi( mul16u_compare::@1/print_line_cursor#93 )
  mul16u_compare::i#12 = phi( mul16u_compare::@1/mul16u_compare::i#13 )
  mul16u_compare::b#6 = phi( mul16u_compare::@1/mul16u_compare::b#9 )
  mul16u_compare::a#6 = phi( mul16u_compare::@1/mul16u_compare::a#9 )
  print_char_cursor#96 = phi( mul16u_compare::@1/print_char_cursor#1 )
  print_char_cursor#29 = print_char_cursor#96
  mul16u_compare::j#0 = 0
  to:mul16u_compare::@2
mul16u_compare::@2: scope:[mul16u_compare]  from mul16u_compare::@11 mul16u_compare::@5
  print_line_cursor#85 = phi( mul16u_compare::@11/print_line_cursor#89, mul16u_compare::@5/print_line_cursor#65 )
  print_char_cursor#180 = phi( mul16u_compare::@11/print_char_cursor#29, mul16u_compare::@5/print_char_cursor#168 )
  mul16u_compare::i#11 = phi( mul16u_compare::@11/mul16u_compare::i#12, mul16u_compare::@5/mul16u_compare::i#3 )
  mul16u_compare::j#10 = phi( mul16u_compare::@11/mul16u_compare::j#0, mul16u_compare::@5/mul16u_compare::j#1 )
  mul16u_compare::b#2 = phi( mul16u_compare::@11/mul16u_compare::b#6, mul16u_compare::@5/mul16u_compare::b#7 )
  mul16u_compare::a#2 = phi( mul16u_compare::@11/mul16u_compare::a#6, mul16u_compare::@5/mul16u_compare::a#7 )
  mul16u_compare::$4 = mul16u_compare::a#2 + $d2b
  mul16u_compare::a#1 = mul16u_compare::$4
  mul16u_compare::$5 = mul16u_compare::b#2 + $ffd
  mul16u_compare::b#1 = mul16u_compare::$5
  muls16u::a#0 = mul16u_compare::a#1
  muls16u::b#0 = mul16u_compare::b#1
  call muls16u 
  muls16u::return#2 = muls16u::return#1
  to:mul16u_compare::@12
mul16u_compare::@12: scope:[mul16u_compare]  from mul16u_compare::@2
  print_line_cursor#81 = phi( mul16u_compare::@2/print_line_cursor#85 )
  print_char_cursor#178 = phi( mul16u_compare::@2/print_char_cursor#180 )
  mul16u_compare::i#10 = phi( mul16u_compare::@2/mul16u_compare::i#11 )
  mul16u_compare::j#9 = phi( mul16u_compare::@2/mul16u_compare::j#10 )
  mul16u_compare::b#3 = phi( mul16u_compare::@2/mul16u_compare::b#1 )
  mul16u_compare::a#3 = phi( mul16u_compare::@2/mul16u_compare::a#1 )
  muls16u::return#4 = phi( mul16u_compare::@2/muls16u::return#2 )
  mul16u_compare::$6 = muls16u::return#4
  mul16u_compare::ms#0 = mul16u_compare::$6
  mul16u::a#2 = mul16u_compare::a#3
  mul16u::b#1 = mul16u_compare::b#3
  call mul16u 
  mul16u::return#3 = mul16u::return#1
  to:mul16u_compare::@13
mul16u_compare::@13: scope:[mul16u_compare]  from mul16u_compare::@12
  print_line_cursor#77 = phi( mul16u_compare::@12/print_line_cursor#81 )
  print_char_cursor#176 = phi( mul16u_compare::@12/print_char_cursor#178 )
  mul16u_compare::i#9 = phi( mul16u_compare::@12/mul16u_compare::i#10 )
  mul16u_compare::j#8 = phi( mul16u_compare::@12/mul16u_compare::j#9 )
  mul16u_compare::ms#4 = phi( mul16u_compare::@12/mul16u_compare::ms#0 )
  mul16u_compare::b#4 = phi( mul16u_compare::@12/mul16u_compare::b#3 )
  mul16u_compare::a#4 = phi( mul16u_compare::@12/mul16u_compare::a#3 )
  mul16u::return#6 = phi( mul16u_compare::@12/mul16u::return#3 )
  mul16u_compare::$7 = mul16u::return#6
  mul16u_compare::mn#0 = mul16u_compare::$7
  mulf16u::a#1 = mul16u_compare::a#4
  mulf16u::b#1 = mul16u_compare::b#4
  call mulf16u 
  mulf16u::return#3 = mulf16u::return#1
  to:mul16u_compare::@14
mul16u_compare::@14: scope:[mul16u_compare]  from mul16u_compare::@13
  print_line_cursor#71 = phi( mul16u_compare::@13/print_line_cursor#77 )
  print_char_cursor#172 = phi( mul16u_compare::@13/print_char_cursor#176 )
  mul16u_compare::i#7 = phi( mul16u_compare::@13/mul16u_compare::i#9 )
  mul16u_compare::b#13 = phi( mul16u_compare::@13/mul16u_compare::b#4 )
  mul16u_compare::a#13 = phi( mul16u_compare::@13/mul16u_compare::a#4 )
  mul16u_compare::j#6 = phi( mul16u_compare::@13/mul16u_compare::j#8 )
  mul16u_compare::mn#3 = phi( mul16u_compare::@13/mul16u_compare::mn#0 )
  mul16u_compare::ms#1 = phi( mul16u_compare::@13/mul16u_compare::ms#4 )
  mulf16u::return#6 = phi( mul16u_compare::@13/mulf16u::return#3 )
  mul16u_compare::$8 = mulf16u::return#6
  mul16u_compare::mf#0 = mul16u_compare::$8
  mul16u_compare::ok#0 = 1
  mul16u_compare::$9 = mul16u_compare::ms#1 != mul16u_compare::mf#0
  mul16u_compare::$10 = ! mul16u_compare::$9
  if(mul16u_compare::$10) goto mul16u_compare::@3
  to:mul16u_compare::@6
mul16u_compare::@3: scope:[mul16u_compare]  from mul16u_compare::@14 mul16u_compare::@6
  print_line_cursor#63 = phi( mul16u_compare::@14/print_line_cursor#71, mul16u_compare::@6/print_line_cursor#72 )
  print_char_cursor#166 = phi( mul16u_compare::@14/print_char_cursor#172, mul16u_compare::@6/print_char_cursor#173 )
  mul16u_compare::i#5 = phi( mul16u_compare::@14/mul16u_compare::i#7, mul16u_compare::@6/mul16u_compare::i#8 )
  mul16u_compare::mf#3 = phi( mul16u_compare::@14/mul16u_compare::mf#0, mul16u_compare::@6/mul16u_compare::mf#5 )
  mul16u_compare::b#10 = phi( mul16u_compare::@14/mul16u_compare::b#13, mul16u_compare::@6/mul16u_compare::b#14 )
  mul16u_compare::a#10 = phi( mul16u_compare::@14/mul16u_compare::a#13, mul16u_compare::@6/mul16u_compare::a#14 )
  mul16u_compare::j#4 = phi( mul16u_compare::@14/mul16u_compare::j#6, mul16u_compare::@6/mul16u_compare::j#7 )
  mul16u_compare::ok#4 = phi( mul16u_compare::@14/mul16u_compare::ok#0, mul16u_compare::@6/mul16u_compare::ok#1 )
  mul16u_compare::mn#1 = phi( mul16u_compare::@14/mul16u_compare::mn#3, mul16u_compare::@6/mul16u_compare::mn#4 )
  mul16u_compare::ms#2 = phi( mul16u_compare::@14/mul16u_compare::ms#1, mul16u_compare::@6/mul16u_compare::ms#5 )
  mul16u_compare::$11 = mul16u_compare::ms#2 != mul16u_compare::mn#1
  mul16u_compare::$12 = ! mul16u_compare::$11
  if(mul16u_compare::$12) goto mul16u_compare::@4
  to:mul16u_compare::@7
mul16u_compare::@6: scope:[mul16u_compare]  from mul16u_compare::@14
  print_line_cursor#72 = phi( mul16u_compare::@14/print_line_cursor#71 )
  print_char_cursor#173 = phi( mul16u_compare::@14/print_char_cursor#172 )
  mul16u_compare::i#8 = phi( mul16u_compare::@14/mul16u_compare::i#7 )
  mul16u_compare::mf#5 = phi( mul16u_compare::@14/mul16u_compare::mf#0 )
  mul16u_compare::b#14 = phi( mul16u_compare::@14/mul16u_compare::b#13 )
  mul16u_compare::a#14 = phi( mul16u_compare::@14/mul16u_compare::a#13 )
  mul16u_compare::j#7 = phi( mul16u_compare::@14/mul16u_compare::j#6 )
  mul16u_compare::mn#4 = phi( mul16u_compare::@14/mul16u_compare::mn#3 )
  mul16u_compare::ms#5 = phi( mul16u_compare::@14/mul16u_compare::ms#1 )
  mul16u_compare::ok#1 = 0
  to:mul16u_compare::@3
mul16u_compare::@4: scope:[mul16u_compare]  from mul16u_compare::@3 mul16u_compare::@7
  print_line_cursor#57 = phi( mul16u_compare::@3/print_line_cursor#63, mul16u_compare::@7/print_line_cursor#64 )
  print_char_cursor#162 = phi( mul16u_compare::@3/print_char_cursor#166, mul16u_compare::@7/print_char_cursor#167 )
  mul16u_compare::i#4 = phi( mul16u_compare::@3/mul16u_compare::i#5, mul16u_compare::@7/mul16u_compare::i#6 )
  mul16u_compare::mf#2 = phi( mul16u_compare::@3/mul16u_compare::mf#3, mul16u_compare::@7/mul16u_compare::mf#4 )
  mul16u_compare::mn#5 = phi( mul16u_compare::@3/mul16u_compare::mn#1, mul16u_compare::@7/mul16u_compare::mn#6 )
  mul16u_compare::ms#6 = phi( mul16u_compare::@3/mul16u_compare::ms#2, mul16u_compare::@7/mul16u_compare::ms#7 )
  mul16u_compare::b#8 = phi( mul16u_compare::@3/mul16u_compare::b#10, mul16u_compare::@7/mul16u_compare::b#11 )
  mul16u_compare::a#8 = phi( mul16u_compare::@3/mul16u_compare::a#10, mul16u_compare::@7/mul16u_compare::a#11 )
  mul16u_compare::j#3 = phi( mul16u_compare::@3/mul16u_compare::j#4, mul16u_compare::@7/mul16u_compare::j#5 )
  mul16u_compare::ok#3 = phi( mul16u_compare::@3/mul16u_compare::ok#4, mul16u_compare::@7/mul16u_compare::ok#2 )
  mul16u_compare::$13 = mul16u_compare::ok#3 == 0
  mul16u_compare::$14 = ! mul16u_compare::$13
  if(mul16u_compare::$14) goto mul16u_compare::@5
  to:mul16u_compare::@8
mul16u_compare::@7: scope:[mul16u_compare]  from mul16u_compare::@3
  print_line_cursor#64 = phi( mul16u_compare::@3/print_line_cursor#63 )
  print_char_cursor#167 = phi( mul16u_compare::@3/print_char_cursor#166 )
  mul16u_compare::i#6 = phi( mul16u_compare::@3/mul16u_compare::i#5 )
  mul16u_compare::mf#4 = phi( mul16u_compare::@3/mul16u_compare::mf#3 )
  mul16u_compare::mn#6 = phi( mul16u_compare::@3/mul16u_compare::mn#1 )
  mul16u_compare::ms#7 = phi( mul16u_compare::@3/mul16u_compare::ms#2 )
  mul16u_compare::b#11 = phi( mul16u_compare::@3/mul16u_compare::b#10 )
  mul16u_compare::a#11 = phi( mul16u_compare::@3/mul16u_compare::a#10 )
  mul16u_compare::j#5 = phi( mul16u_compare::@3/mul16u_compare::j#4 )
  mul16u_compare::ok#2 = 0
  to:mul16u_compare::@4
mul16u_compare::@5: scope:[mul16u_compare]  from mul16u_compare::@4
  print_line_cursor#65 = phi( mul16u_compare::@4/print_line_cursor#57 )
  print_char_cursor#168 = phi( mul16u_compare::@4/print_char_cursor#162 )
  mul16u_compare::i#3 = phi( mul16u_compare::@4/mul16u_compare::i#4 )
  mul16u_compare::b#7 = phi( mul16u_compare::@4/mul16u_compare::b#8 )
  mul16u_compare::a#7 = phi( mul16u_compare::@4/mul16u_compare::a#8 )
  mul16u_compare::j#2 = phi( mul16u_compare::@4/mul16u_compare::j#3 )
  mul16u_compare::j#1 = mul16u_compare::j#2 + rangenext(0,$f)
  mul16u_compare::$16 = mul16u_compare::j#1 != rangelast(0,$f)
  if(mul16u_compare::$16) goto mul16u_compare::@2
  to:mul16u_compare::@9
mul16u_compare::@8: scope:[mul16u_compare]  from mul16u_compare::@4
  print_line_cursor#48 = phi( mul16u_compare::@4/print_line_cursor#57 )
  print_char_cursor#149 = phi( mul16u_compare::@4/print_char_cursor#162 )
  mul16u_compare::mf#1 = phi( mul16u_compare::@4/mul16u_compare::mf#2 )
  mul16u_compare::mn#2 = phi( mul16u_compare::@4/mul16u_compare::mn#5 )
  mul16u_compare::ms#3 = phi( mul16u_compare::@4/mul16u_compare::ms#6 )
  mul16u_compare::b#5 = phi( mul16u_compare::@4/mul16u_compare::b#8 )
  mul16u_compare::a#5 = phi( mul16u_compare::@4/mul16u_compare::a#8 )
  *BG_COLOR = 2
  mul16u_error::a#0 = mul16u_compare::a#5
  mul16u_error::b#0 = mul16u_compare::b#5
  mul16u_error::ms#0 = mul16u_compare::ms#3
  mul16u_error::mn#0 = mul16u_compare::mn#2
  mul16u_error::mf#0 = mul16u_compare::mf#1
  call mul16u_error 
  to:mul16u_compare::@15
mul16u_compare::@15: scope:[mul16u_compare]  from mul16u_compare::@8
  print_line_cursor#31 = phi( mul16u_compare::@8/print_line_cursor#13 )
  print_char_cursor#97 = phi( mul16u_compare::@8/print_char_cursor#46 )
  print_char_cursor#30 = print_char_cursor#97
  print_line_cursor#8 = print_line_cursor#31
  to:mul16u_compare::@return
mul16u_compare::@return: scope:[mul16u_compare]  from mul16u_compare::@15 mul16u_compare::@18
  print_line_cursor#32 = phi( mul16u_compare::@15/print_line_cursor#8, mul16u_compare::@18/print_line_cursor#11 )
  print_char_cursor#98 = phi( mul16u_compare::@15/print_char_cursor#30, mul16u_compare::@18/print_char_cursor#34 )
  print_char_cursor#31 = print_char_cursor#98
  print_line_cursor#9 = print_line_cursor#32
  return 
  to:@return
mul16u_compare::@9: scope:[mul16u_compare]  from mul16u_compare::@5
  mul16u_compare::b#12 = phi( mul16u_compare::@5/mul16u_compare::b#7 )
  mul16u_compare::a#12 = phi( mul16u_compare::@5/mul16u_compare::a#7 )
  print_line_cursor#58 = phi( mul16u_compare::@5/print_line_cursor#65 )
  print_char_cursor#161 = phi( mul16u_compare::@5/print_char_cursor#168 )
  mul16u_compare::i#2 = phi( mul16u_compare::@5/mul16u_compare::i#3 )
  mul16u_compare::i#1 = mul16u_compare::i#2 + rangenext(0,$f)
  mul16u_compare::$17 = mul16u_compare::i#1 != rangelast(0,$f)
  if(mul16u_compare::$17) goto mul16u_compare::@1
  to:mul16u_compare::@10
mul16u_compare::@10: scope:[mul16u_compare]  from mul16u_compare::@9
  print_char_cursor#150 = phi( mul16u_compare::@9/print_char_cursor#161 )
  print_line_cursor#49 = phi( mul16u_compare::@9/print_line_cursor#58 )
  call print_ln 
  to:mul16u_compare::@16
mul16u_compare::@16: scope:[mul16u_compare]  from mul16u_compare::@10
  print_char_cursor#99 = phi( mul16u_compare::@10/print_char_cursor#3 )
  print_line_cursor#33 = phi( mul16u_compare::@10/print_line_cursor#1 )
  print_line_cursor#10 = print_line_cursor#33
  print_char_cursor#32 = print_char_cursor#99
  print_str::str#2 = mul16u_compare::str1
  call print_str 
  to:mul16u_compare::@17
mul16u_compare::@17: scope:[mul16u_compare]  from mul16u_compare::@16
  print_line_cursor#50 = phi( mul16u_compare::@16/print_line_cursor#10 )
  print_char_cursor#100 = phi( mul16u_compare::@16/print_char_cursor#1 )
  print_char_cursor#33 = print_char_cursor#100
  call print_ln 
  to:mul16u_compare::@18
mul16u_compare::@18: scope:[mul16u_compare]  from mul16u_compare::@17
  print_char_cursor#101 = phi( mul16u_compare::@17/print_char_cursor#3 )
  print_line_cursor#34 = phi( mul16u_compare::@17/print_line_cursor#1 )
  print_line_cursor#11 = print_line_cursor#34
  print_char_cursor#34 = print_char_cursor#101
  to:mul16u_compare::@return

void mul16u_error(word mul16u_error::a , word mul16u_error::b , dword mul16u_error::ms , dword mul16u_error::mn , dword mul16u_error::mf)
mul16u_error: scope:[mul16u_error]  from mul16u_compare::@8
  print_line_cursor#101 = phi( mul16u_compare::@8/print_line_cursor#48 )
  mul16u_error::mf#10 = phi( mul16u_compare::@8/mul16u_error::mf#0 )
  mul16u_error::mn#8 = phi( mul16u_compare::@8/mul16u_error::mn#0 )
  mul16u_error::ms#6 = phi( mul16u_compare::@8/mul16u_error::ms#0 )
  mul16u_error::b#4 = phi( mul16u_compare::@8/mul16u_error::b#0 )
  mul16u_error::a#2 = phi( mul16u_compare::@8/mul16u_error::a#0 )
  print_char_cursor#151 = phi( mul16u_compare::@8/print_char_cursor#149 )
  print_str::str#3 = mul16u_error::str
  call print_str 
  to:mul16u_error::@1
mul16u_error::@1: scope:[mul16u_error]  from mul16u_error
  print_line_cursor#98 = phi( mul16u_error/print_line_cursor#101 )
  mul16u_error::mf#9 = phi( mul16u_error/mul16u_error::mf#10 )
  mul16u_error::mn#7 = phi( mul16u_error/mul16u_error::mn#8 )
  mul16u_error::ms#5 = phi( mul16u_error/mul16u_error::ms#6 )
  mul16u_error::b#3 = phi( mul16u_error/mul16u_error::b#4 )
  mul16u_error::a#1 = phi( mul16u_error/mul16u_error::a#2 )
  print_char_cursor#102 = phi( mul16u_error/print_char_cursor#1 )
  print_char_cursor#35 = print_char_cursor#102
  print_uint::w#3 = mul16u_error::a#1
  call print_uint 
  to:mul16u_error::@2
mul16u_error::@2: scope:[mul16u_error]  from mul16u_error::@1
  print_line_cursor#94 = phi( mul16u_error::@1/print_line_cursor#98 )
  mul16u_error::mf#8 = phi( mul16u_error::@1/mul16u_error::mf#9 )
  mul16u_error::mn#6 = phi( mul16u_error::@1/mul16u_error::mn#7 )
  mul16u_error::ms#4 = phi( mul16u_error::@1/mul16u_error::ms#5 )
  mul16u_error::b#2 = phi( mul16u_error::@1/mul16u_error::b#3 )
  print_char_cursor#103 = phi( mul16u_error::@1/print_char_cursor#10 )
  print_char_cursor#36 = print_char_cursor#103
  print_str::str#4 = mul16u_error::str1
  call print_str 
  to:mul16u_error::@3
mul16u_error::@3: scope:[mul16u_error]  from mul16u_error::@2
  print_line_cursor#90 = phi( mul16u_error::@2/print_line_cursor#94 )
  mul16u_error::mf#7 = phi( mul16u_error::@2/mul16u_error::mf#8 )
  mul16u_error::mn#5 = phi( mul16u_error::@2/mul16u_error::mn#6 )
  mul16u_error::ms#3 = phi( mul16u_error::@2/mul16u_error::ms#4 )
  mul16u_error::b#1 = phi( mul16u_error::@2/mul16u_error::b#2 )
  print_char_cursor#104 = phi( mul16u_error::@2/print_char_cursor#1 )
  print_char_cursor#37 = print_char_cursor#104
  print_uint::w#4 = mul16u_error::b#1
  call print_uint 
  to:mul16u_error::@4
mul16u_error::@4: scope:[mul16u_error]  from mul16u_error::@3
  print_line_cursor#86 = phi( mul16u_error::@3/print_line_cursor#90 )
  mul16u_error::mf#6 = phi( mul16u_error::@3/mul16u_error::mf#7 )
  mul16u_error::mn#4 = phi( mul16u_error::@3/mul16u_error::mn#5 )
  mul16u_error::ms#2 = phi( mul16u_error::@3/mul16u_error::ms#3 )
  print_char_cursor#105 = phi( mul16u_error::@3/print_char_cursor#10 )
  print_char_cursor#38 = print_char_cursor#105
  print_str::str#5 = mul16u_error::str2
  call print_str 
  to:mul16u_error::@5
mul16u_error::@5: scope:[mul16u_error]  from mul16u_error::@4
  print_line_cursor#82 = phi( mul16u_error::@4/print_line_cursor#86 )
  mul16u_error::mf#5 = phi( mul16u_error::@4/mul16u_error::mf#6 )
  mul16u_error::mn#3 = phi( mul16u_error::@4/mul16u_error::mn#4 )
  mul16u_error::ms#1 = phi( mul16u_error::@4/mul16u_error::ms#2 )
  print_char_cursor#106 = phi( mul16u_error::@4/print_char_cursor#1 )
  print_char_cursor#39 = print_char_cursor#106
  print_ulong::dw#1 = mul16u_error::ms#1
  call print_ulong 
  to:mul16u_error::@6
mul16u_error::@6: scope:[mul16u_error]  from mul16u_error::@5
  print_line_cursor#78 = phi( mul16u_error::@5/print_line_cursor#82 )
  mul16u_error::mf#4 = phi( mul16u_error::@5/mul16u_error::mf#5 )
  mul16u_error::mn#2 = phi( mul16u_error::@5/mul16u_error::mn#3 )
  print_char_cursor#107 = phi( mul16u_error::@5/print_char_cursor#13 )
  print_char_cursor#40 = print_char_cursor#107
  print_str::str#6 = mul16u_error::str3
  call print_str 
  to:mul16u_error::@7
mul16u_error::@7: scope:[mul16u_error]  from mul16u_error::@6
  print_line_cursor#73 = phi( mul16u_error::@6/print_line_cursor#78 )
  mul16u_error::mf#3 = phi( mul16u_error::@6/mul16u_error::mf#4 )
  mul16u_error::mn#1 = phi( mul16u_error::@6/mul16u_error::mn#2 )
  print_char_cursor#108 = phi( mul16u_error::@6/print_char_cursor#1 )
  print_char_cursor#41 = print_char_cursor#108
  print_ulong::dw#2 = mul16u_error::mn#1
  call print_ulong 
  to:mul16u_error::@8
mul16u_error::@8: scope:[mul16u_error]  from mul16u_error::@7
  print_line_cursor#66 = phi( mul16u_error::@7/print_line_cursor#73 )
  mul16u_error::mf#2 = phi( mul16u_error::@7/mul16u_error::mf#3 )
  print_char_cursor#109 = phi( mul16u_error::@7/print_char_cursor#13 )
  print_char_cursor#42 = print_char_cursor#109
  print_str::str#7 = mul16u_error::str4
  call print_str 
  to:mul16u_error::@9
mul16u_error::@9: scope:[mul16u_error]  from mul16u_error::@8
  print_line_cursor#59 = phi( mul16u_error::@8/print_line_cursor#66 )
  mul16u_error::mf#1 = phi( mul16u_error::@8/mul16u_error::mf#2 )
  print_char_cursor#110 = phi( mul16u_error::@8/print_char_cursor#1 )
  print_char_cursor#43 = print_char_cursor#110
  print_ulong::dw#3 = mul16u_error::mf#1
  call print_ulong 
  to:mul16u_error::@10
mul16u_error::@10: scope:[mul16u_error]  from mul16u_error::@9
  print_line_cursor#51 = phi( mul16u_error::@9/print_line_cursor#59 )
  print_char_cursor#111 = phi( mul16u_error::@9/print_char_cursor#13 )
  print_char_cursor#44 = print_char_cursor#111
  call print_ln 
  to:mul16u_error::@11
mul16u_error::@11: scope:[mul16u_error]  from mul16u_error::@10
  print_char_cursor#112 = phi( mul16u_error::@10/print_char_cursor#3 )
  print_line_cursor#35 = phi( mul16u_error::@10/print_line_cursor#1 )
  print_line_cursor#12 = print_line_cursor#35
  print_char_cursor#45 = print_char_cursor#112
  to:mul16u_error::@return
mul16u_error::@return: scope:[mul16u_error]  from mul16u_error::@11
  print_line_cursor#36 = phi( mul16u_error::@11/print_line_cursor#12 )
  print_char_cursor#113 = phi( mul16u_error::@11/print_char_cursor#45 )
  print_char_cursor#46 = print_char_cursor#113
  print_line_cursor#13 = print_line_cursor#36
  return 
  to:@return

void mul16s_compare()
mul16s_compare: scope:[mul16s_compare]  from main::@3
  print_line_cursor#99 = phi( main::@3/print_line_cursor#5 )
  print_char_cursor#163 = phi( main::@3/print_char_cursor#26 )
  mul16s_compare::a#0 = -$7fff
  mul16s_compare::b#0 = -$7fff
  mul16s_compare::i#0 = 0
  to:mul16s_compare::@1
mul16s_compare::@1: scope:[mul16s_compare]  from mul16s_compare mul16s_compare::@9
  print_line_cursor#95 = phi( mul16s_compare/print_line_cursor#99, mul16s_compare::@9/print_line_cursor#61 )
  mul16s_compare::i#13 = phi( mul16s_compare/mul16s_compare::i#0, mul16s_compare::@9/mul16s_compare::i#1 )
  mul16s_compare::b#9 = phi( mul16s_compare/mul16s_compare::b#0, mul16s_compare::@9/mul16s_compare::b#12 )
  mul16s_compare::a#9 = phi( mul16s_compare/mul16s_compare::a#0, mul16s_compare::@9/mul16s_compare::a#12 )
  print_char_cursor#152 = phi( mul16s_compare/print_char_cursor#163, mul16s_compare::@9/print_char_cursor#164 )
  print_str::str#8 = mul16s_compare::str
  call print_str 
  to:mul16s_compare::@11
mul16s_compare::@11: scope:[mul16s_compare]  from mul16s_compare::@1
  print_line_cursor#91 = phi( mul16s_compare::@1/print_line_cursor#95 )
  mul16s_compare::i#12 = phi( mul16s_compare::@1/mul16s_compare::i#13 )
  mul16s_compare::b#6 = phi( mul16s_compare::@1/mul16s_compare::b#9 )
  mul16s_compare::a#6 = phi( mul16s_compare::@1/mul16s_compare::a#9 )
  print_char_cursor#114 = phi( mul16s_compare::@1/print_char_cursor#1 )
  print_char_cursor#47 = print_char_cursor#114
  mul16s_compare::j#0 = 0
  to:mul16s_compare::@2
mul16s_compare::@2: scope:[mul16s_compare]  from mul16s_compare::@11 mul16s_compare::@5
  print_line_cursor#87 = phi( mul16s_compare::@11/print_line_cursor#91, mul16s_compare::@5/print_line_cursor#69 )
  print_char_cursor#181 = phi( mul16s_compare::@11/print_char_cursor#47, mul16s_compare::@5/print_char_cursor#171 )
  mul16s_compare::i#11 = phi( mul16s_compare::@11/mul16s_compare::i#12, mul16s_compare::@5/mul16s_compare::i#3 )
  mul16s_compare::j#10 = phi( mul16s_compare::@11/mul16s_compare::j#0, mul16s_compare::@5/mul16s_compare::j#1 )
  mul16s_compare::b#2 = phi( mul16s_compare::@11/mul16s_compare::b#6, mul16s_compare::@5/mul16s_compare::b#7 )
  mul16s_compare::a#2 = phi( mul16s_compare::@11/mul16s_compare::a#6, mul16s_compare::@5/mul16s_compare::a#7 )
  mul16s_compare::$4 = mul16s_compare::a#2 + $d2b
  mul16s_compare::a#1 = mul16s_compare::$4
  mul16s_compare::$5 = mul16s_compare::b#2 + $ffd
  mul16s_compare::b#1 = mul16s_compare::$5
  muls16s::a#0 = mul16s_compare::a#1
  muls16s::b#0 = mul16s_compare::b#1
  call muls16s 
  muls16s::return#2 = muls16s::return#1
  to:mul16s_compare::@12
mul16s_compare::@12: scope:[mul16s_compare]  from mul16s_compare::@2
  print_line_cursor#83 = phi( mul16s_compare::@2/print_line_cursor#87 )
  print_char_cursor#179 = phi( mul16s_compare::@2/print_char_cursor#181 )
  mul16s_compare::i#10 = phi( mul16s_compare::@2/mul16s_compare::i#11 )
  mul16s_compare::j#9 = phi( mul16s_compare::@2/mul16s_compare::j#10 )
  mul16s_compare::b#3 = phi( mul16s_compare::@2/mul16s_compare::b#1 )
  mul16s_compare::a#3 = phi( mul16s_compare::@2/mul16s_compare::a#1 )
  muls16s::return#4 = phi( mul16s_compare::@2/muls16s::return#2 )
  mul16s_compare::$6 = muls16s::return#4
  mul16s_compare::ms#0 = mul16s_compare::$6
  mul16s::a#0 = mul16s_compare::a#3
  mul16s::b#0 = mul16s_compare::b#3
  call mul16s 
  mul16s::return#2 = mul16s::return#1
  to:mul16s_compare::@13
mul16s_compare::@13: scope:[mul16s_compare]  from mul16s_compare::@12
  print_line_cursor#79 = phi( mul16s_compare::@12/print_line_cursor#83 )
  print_char_cursor#177 = phi( mul16s_compare::@12/print_char_cursor#179 )
  mul16s_compare::i#9 = phi( mul16s_compare::@12/mul16s_compare::i#10 )
  mul16s_compare::j#8 = phi( mul16s_compare::@12/mul16s_compare::j#9 )
  mul16s_compare::ms#4 = phi( mul16s_compare::@12/mul16s_compare::ms#0 )
  mul16s_compare::b#4 = phi( mul16s_compare::@12/mul16s_compare::b#3 )
  mul16s_compare::a#4 = phi( mul16s_compare::@12/mul16s_compare::a#3 )
  mul16s::return#4 = phi( mul16s_compare::@12/mul16s::return#2 )
  mul16s_compare::$7 = mul16s::return#4
  mul16s_compare::mn#0 = mul16s_compare::$7
  mulf16s::a#0 = mul16s_compare::a#4
  mulf16s::b#0 = mul16s_compare::b#4
  call mulf16s 
  mulf16s::return#2 = mulf16s::return#1
  to:mul16s_compare::@14
mul16s_compare::@14: scope:[mul16s_compare]  from mul16s_compare::@13
  print_line_cursor#74 = phi( mul16s_compare::@13/print_line_cursor#79 )
  print_char_cursor#174 = phi( mul16s_compare::@13/print_char_cursor#177 )
  mul16s_compare::i#7 = phi( mul16s_compare::@13/mul16s_compare::i#9 )
  mul16s_compare::b#13 = phi( mul16s_compare::@13/mul16s_compare::b#4 )
  mul16s_compare::a#13 = phi( mul16s_compare::@13/mul16s_compare::a#4 )
  mul16s_compare::j#6 = phi( mul16s_compare::@13/mul16s_compare::j#8 )
  mul16s_compare::mn#3 = phi( mul16s_compare::@13/mul16s_compare::mn#0 )
  mul16s_compare::ms#1 = phi( mul16s_compare::@13/mul16s_compare::ms#4 )
  mulf16s::return#4 = phi( mul16s_compare::@13/mulf16s::return#2 )
  mul16s_compare::$8 = mulf16s::return#4
  mul16s_compare::mf#0 = mul16s_compare::$8
  mul16s_compare::ok#0 = 1
  mul16s_compare::$9 = mul16s_compare::ms#1 != mul16s_compare::mf#0
  mul16s_compare::$10 = ! mul16s_compare::$9
  if(mul16s_compare::$10) goto mul16s_compare::@3
  to:mul16s_compare::@6
mul16s_compare::@3: scope:[mul16s_compare]  from mul16s_compare::@14 mul16s_compare::@6
  print_line_cursor#67 = phi( mul16s_compare::@14/print_line_cursor#74, mul16s_compare::@6/print_line_cursor#75 )
  print_char_cursor#169 = phi( mul16s_compare::@14/print_char_cursor#174, mul16s_compare::@6/print_char_cursor#175 )
  mul16s_compare::i#5 = phi( mul16s_compare::@14/mul16s_compare::i#7, mul16s_compare::@6/mul16s_compare::i#8 )
  mul16s_compare::mf#3 = phi( mul16s_compare::@14/mul16s_compare::mf#0, mul16s_compare::@6/mul16s_compare::mf#5 )
  mul16s_compare::b#10 = phi( mul16s_compare::@14/mul16s_compare::b#13, mul16s_compare::@6/mul16s_compare::b#14 )
  mul16s_compare::a#10 = phi( mul16s_compare::@14/mul16s_compare::a#13, mul16s_compare::@6/mul16s_compare::a#14 )
  mul16s_compare::j#4 = phi( mul16s_compare::@14/mul16s_compare::j#6, mul16s_compare::@6/mul16s_compare::j#7 )
  mul16s_compare::ok#4 = phi( mul16s_compare::@14/mul16s_compare::ok#0, mul16s_compare::@6/mul16s_compare::ok#1 )
  mul16s_compare::mn#1 = phi( mul16s_compare::@14/mul16s_compare::mn#3, mul16s_compare::@6/mul16s_compare::mn#4 )
  mul16s_compare::ms#2 = phi( mul16s_compare::@14/mul16s_compare::ms#1, mul16s_compare::@6/mul16s_compare::ms#5 )
  mul16s_compare::$11 = mul16s_compare::ms#2 != mul16s_compare::mn#1
  mul16s_compare::$12 = ! mul16s_compare::$11
  if(mul16s_compare::$12) goto mul16s_compare::@4
  to:mul16s_compare::@7
mul16s_compare::@6: scope:[mul16s_compare]  from mul16s_compare::@14
  print_line_cursor#75 = phi( mul16s_compare::@14/print_line_cursor#74 )
  print_char_cursor#175 = phi( mul16s_compare::@14/print_char_cursor#174 )
  mul16s_compare::i#8 = phi( mul16s_compare::@14/mul16s_compare::i#7 )
  mul16s_compare::mf#5 = phi( mul16s_compare::@14/mul16s_compare::mf#0 )
  mul16s_compare::b#14 = phi( mul16s_compare::@14/mul16s_compare::b#13 )
  mul16s_compare::a#14 = phi( mul16s_compare::@14/mul16s_compare::a#13 )
  mul16s_compare::j#7 = phi( mul16s_compare::@14/mul16s_compare::j#6 )
  mul16s_compare::mn#4 = phi( mul16s_compare::@14/mul16s_compare::mn#3 )
  mul16s_compare::ms#5 = phi( mul16s_compare::@14/mul16s_compare::ms#1 )
  mul16s_compare::ok#1 = 0
  to:mul16s_compare::@3
mul16s_compare::@4: scope:[mul16s_compare]  from mul16s_compare::@3 mul16s_compare::@7
  print_line_cursor#60 = phi( mul16s_compare::@3/print_line_cursor#67, mul16s_compare::@7/print_line_cursor#68 )
  print_char_cursor#165 = phi( mul16s_compare::@3/print_char_cursor#169, mul16s_compare::@7/print_char_cursor#170 )
  mul16s_compare::i#4 = phi( mul16s_compare::@3/mul16s_compare::i#5, mul16s_compare::@7/mul16s_compare::i#6 )
  mul16s_compare::mf#2 = phi( mul16s_compare::@3/mul16s_compare::mf#3, mul16s_compare::@7/mul16s_compare::mf#4 )
  mul16s_compare::mn#5 = phi( mul16s_compare::@3/mul16s_compare::mn#1, mul16s_compare::@7/mul16s_compare::mn#6 )
  mul16s_compare::ms#6 = phi( mul16s_compare::@3/mul16s_compare::ms#2, mul16s_compare::@7/mul16s_compare::ms#7 )
  mul16s_compare::b#8 = phi( mul16s_compare::@3/mul16s_compare::b#10, mul16s_compare::@7/mul16s_compare::b#11 )
  mul16s_compare::a#8 = phi( mul16s_compare::@3/mul16s_compare::a#10, mul16s_compare::@7/mul16s_compare::a#11 )
  mul16s_compare::j#3 = phi( mul16s_compare::@3/mul16s_compare::j#4, mul16s_compare::@7/mul16s_compare::j#5 )
  mul16s_compare::ok#3 = phi( mul16s_compare::@3/mul16s_compare::ok#4, mul16s_compare::@7/mul16s_compare::ok#2 )
  mul16s_compare::$13 = mul16s_compare::ok#3 == 0
  mul16s_compare::$14 = ! mul16s_compare::$13
  if(mul16s_compare::$14) goto mul16s_compare::@5
  to:mul16s_compare::@8
mul16s_compare::@7: scope:[mul16s_compare]  from mul16s_compare::@3
  print_line_cursor#68 = phi( mul16s_compare::@3/print_line_cursor#67 )
  print_char_cursor#170 = phi( mul16s_compare::@3/print_char_cursor#169 )
  mul16s_compare::i#6 = phi( mul16s_compare::@3/mul16s_compare::i#5 )
  mul16s_compare::mf#4 = phi( mul16s_compare::@3/mul16s_compare::mf#3 )
  mul16s_compare::mn#6 = phi( mul16s_compare::@3/mul16s_compare::mn#1 )
  mul16s_compare::ms#7 = phi( mul16s_compare::@3/mul16s_compare::ms#2 )
  mul16s_compare::b#11 = phi( mul16s_compare::@3/mul16s_compare::b#10 )
  mul16s_compare::a#11 = phi( mul16s_compare::@3/mul16s_compare::a#10 )
  mul16s_compare::j#5 = phi( mul16s_compare::@3/mul16s_compare::j#4 )
  mul16s_compare::ok#2 = 0
  to:mul16s_compare::@4
mul16s_compare::@5: scope:[mul16s_compare]  from mul16s_compare::@4
  print_line_cursor#69 = phi( mul16s_compare::@4/print_line_cursor#60 )
  print_char_cursor#171 = phi( mul16s_compare::@4/print_char_cursor#165 )
  mul16s_compare::i#3 = phi( mul16s_compare::@4/mul16s_compare::i#4 )
  mul16s_compare::b#7 = phi( mul16s_compare::@4/mul16s_compare::b#8 )
  mul16s_compare::a#7 = phi( mul16s_compare::@4/mul16s_compare::a#8 )
  mul16s_compare::j#2 = phi( mul16s_compare::@4/mul16s_compare::j#3 )
  mul16s_compare::j#1 = mul16s_compare::j#2 + rangenext(0,$f)
  mul16s_compare::$16 = mul16s_compare::j#1 != rangelast(0,$f)
  if(mul16s_compare::$16) goto mul16s_compare::@2
  to:mul16s_compare::@9
mul16s_compare::@8: scope:[mul16s_compare]  from mul16s_compare::@4
  print_line_cursor#52 = phi( mul16s_compare::@4/print_line_cursor#60 )
  print_char_cursor#153 = phi( mul16s_compare::@4/print_char_cursor#165 )
  mul16s_compare::mf#1 = phi( mul16s_compare::@4/mul16s_compare::mf#2 )
  mul16s_compare::mn#2 = phi( mul16s_compare::@4/mul16s_compare::mn#5 )
  mul16s_compare::ms#3 = phi( mul16s_compare::@4/mul16s_compare::ms#6 )
  mul16s_compare::b#5 = phi( mul16s_compare::@4/mul16s_compare::b#8 )
  mul16s_compare::a#5 = phi( mul16s_compare::@4/mul16s_compare::a#8 )
  *BG_COLOR = 2
  mul16s_error::a#0 = mul16s_compare::a#5
  mul16s_error::b#0 = mul16s_compare::b#5
  mul16s_error::ms#0 = mul16s_compare::ms#3
  mul16s_error::mn#0 = mul16s_compare::mn#2
  mul16s_error::mf#0 = mul16s_compare::mf#1
  call mul16s_error 
  to:mul16s_compare::@15
mul16s_compare::@15: scope:[mul16s_compare]  from mul16s_compare::@8
  print_line_cursor#37 = phi( mul16s_compare::@8/print_line_cursor#19 )
  print_char_cursor#115 = phi( mul16s_compare::@8/print_char_cursor#64 )
  print_char_cursor#48 = print_char_cursor#115
  print_line_cursor#14 = print_line_cursor#37
  to:mul16s_compare::@return
mul16s_compare::@return: scope:[mul16s_compare]  from mul16s_compare::@15 mul16s_compare::@18
  print_line_cursor#38 = phi( mul16s_compare::@15/print_line_cursor#14, mul16s_compare::@18/print_line_cursor#17 )
  print_char_cursor#116 = phi( mul16s_compare::@15/print_char_cursor#48, mul16s_compare::@18/print_char_cursor#52 )
  print_char_cursor#49 = print_char_cursor#116
  print_line_cursor#15 = print_line_cursor#38
  return 
  to:@return
mul16s_compare::@9: scope:[mul16s_compare]  from mul16s_compare::@5
  mul16s_compare::b#12 = phi( mul16s_compare::@5/mul16s_compare::b#7 )
  mul16s_compare::a#12 = phi( mul16s_compare::@5/mul16s_compare::a#7 )
  print_line_cursor#61 = phi( mul16s_compare::@5/print_line_cursor#69 )
  print_char_cursor#164 = phi( mul16s_compare::@5/print_char_cursor#171 )
  mul16s_compare::i#2 = phi( mul16s_compare::@5/mul16s_compare::i#3 )
  mul16s_compare::i#1 = mul16s_compare::i#2 + rangenext(0,$f)
  mul16s_compare::$17 = mul16s_compare::i#1 != rangelast(0,$f)
  if(mul16s_compare::$17) goto mul16s_compare::@1
  to:mul16s_compare::@10
mul16s_compare::@10: scope:[mul16s_compare]  from mul16s_compare::@9
  print_char_cursor#154 = phi( mul16s_compare::@9/print_char_cursor#164 )
  print_line_cursor#53 = phi( mul16s_compare::@9/print_line_cursor#61 )
  call print_ln 
  to:mul16s_compare::@16
mul16s_compare::@16: scope:[mul16s_compare]  from mul16s_compare::@10
  print_char_cursor#117 = phi( mul16s_compare::@10/print_char_cursor#3 )
  print_line_cursor#39 = phi( mul16s_compare::@10/print_line_cursor#1 )
  print_line_cursor#16 = print_line_cursor#39
  print_char_cursor#50 = print_char_cursor#117
  print_str::str#9 = mul16s_compare::str1
  call print_str 
  to:mul16s_compare::@17
mul16s_compare::@17: scope:[mul16s_compare]  from mul16s_compare::@16
  print_line_cursor#54 = phi( mul16s_compare::@16/print_line_cursor#16 )
  print_char_cursor#118 = phi( mul16s_compare::@16/print_char_cursor#1 )
  print_char_cursor#51 = print_char_cursor#118
  call print_ln 
  to:mul16s_compare::@18
mul16s_compare::@18: scope:[mul16s_compare]  from mul16s_compare::@17
  print_char_cursor#119 = phi( mul16s_compare::@17/print_char_cursor#3 )
  print_line_cursor#40 = phi( mul16s_compare::@17/print_line_cursor#1 )
  print_line_cursor#17 = print_line_cursor#40
  print_char_cursor#52 = print_char_cursor#119
  to:mul16s_compare::@return

void mul16s_error(signed word mul16s_error::a , signed word mul16s_error::b , signed dword mul16s_error::ms , signed dword mul16s_error::mn , signed dword mul16s_error::mf)
mul16s_error: scope:[mul16s_error]  from mul16s_compare::@8
  print_line_cursor#102 = phi( mul16s_compare::@8/print_line_cursor#52 )
  mul16s_error::mf#10 = phi( mul16s_compare::@8/mul16s_error::mf#0 )
  mul16s_error::mn#8 = phi( mul16s_compare::@8/mul16s_error::mn#0 )
  mul16s_error::ms#6 = phi( mul16s_compare::@8/mul16s_error::ms#0 )
  mul16s_error::b#4 = phi( mul16s_compare::@8/mul16s_error::b#0 )
  mul16s_error::a#2 = phi( mul16s_compare::@8/mul16s_error::a#0 )
  print_char_cursor#155 = phi( mul16s_compare::@8/print_char_cursor#153 )
  print_str::str#10 = mul16s_error::str
  call print_str 
  to:mul16s_error::@1
mul16s_error::@1: scope:[mul16s_error]  from mul16s_error
  print_line_cursor#100 = phi( mul16s_error/print_line_cursor#102 )
  mul16s_error::mf#9 = phi( mul16s_error/mul16s_error::mf#10 )
  mul16s_error::mn#7 = phi( mul16s_error/mul16s_error::mn#8 )
  mul16s_error::ms#5 = phi( mul16s_error/mul16s_error::ms#6 )
  mul16s_error::b#3 = phi( mul16s_error/mul16s_error::b#4 )
  mul16s_error::a#1 = phi( mul16s_error/mul16s_error::a#2 )
  print_char_cursor#120 = phi( mul16s_error/print_char_cursor#1 )
  print_char_cursor#53 = print_char_cursor#120
  print_sint::w#1 = mul16s_error::a#1
  call print_sint 
  to:mul16s_error::@2
mul16s_error::@2: scope:[mul16s_error]  from mul16s_error::@1
  print_line_cursor#96 = phi( mul16s_error::@1/print_line_cursor#100 )
  mul16s_error::mf#8 = phi( mul16s_error::@1/mul16s_error::mf#9 )
  mul16s_error::mn#6 = phi( mul16s_error::@1/mul16s_error::mn#7 )
  mul16s_error::ms#4 = phi( mul16s_error::@1/mul16s_error::ms#5 )
  mul16s_error::b#2 = phi( mul16s_error::@1/mul16s_error::b#3 )
  print_char_cursor#121 = phi( mul16s_error::@1/print_char_cursor#7 )
  print_char_cursor#54 = print_char_cursor#121
  print_str::str#11 = mul16s_error::str1
  call print_str 
  to:mul16s_error::@3
mul16s_error::@3: scope:[mul16s_error]  from mul16s_error::@2
  print_line_cursor#92 = phi( mul16s_error::@2/print_line_cursor#96 )
  mul16s_error::mf#7 = phi( mul16s_error::@2/mul16s_error::mf#8 )
  mul16s_error::mn#5 = phi( mul16s_error::@2/mul16s_error::mn#6 )
  mul16s_error::ms#3 = phi( mul16s_error::@2/mul16s_error::ms#4 )
  mul16s_error::b#1 = phi( mul16s_error::@2/mul16s_error::b#2 )
  print_char_cursor#122 = phi( mul16s_error::@2/print_char_cursor#1 )
  print_char_cursor#55 = print_char_cursor#122
  print_sint::w#2 = mul16s_error::b#1
  call print_sint 
  to:mul16s_error::@4
mul16s_error::@4: scope:[mul16s_error]  from mul16s_error::@3
  print_line_cursor#88 = phi( mul16s_error::@3/print_line_cursor#92 )
  mul16s_error::mf#6 = phi( mul16s_error::@3/mul16s_error::mf#7 )
  mul16s_error::mn#4 = phi( mul16s_error::@3/mul16s_error::mn#5 )
  mul16s_error::ms#2 = phi( mul16s_error::@3/mul16s_error::ms#3 )
  print_char_cursor#123 = phi( mul16s_error::@3/print_char_cursor#7 )
  print_char_cursor#56 = print_char_cursor#123
  print_str::str#12 = mul16s_error::str2
  call print_str 
  to:mul16s_error::@5
mul16s_error::@5: scope:[mul16s_error]  from mul16s_error::@4
  print_line_cursor#84 = phi( mul16s_error::@4/print_line_cursor#88 )
  mul16s_error::mf#5 = phi( mul16s_error::@4/mul16s_error::mf#6 )
  mul16s_error::mn#3 = phi( mul16s_error::@4/mul16s_error::mn#4 )
  mul16s_error::ms#1 = phi( mul16s_error::@4/mul16s_error::ms#2 )
  print_char_cursor#124 = phi( mul16s_error::@4/print_char_cursor#1 )
  print_char_cursor#57 = print_char_cursor#124
  print_slong::dw#1 = mul16s_error::ms#1
  call print_slong 
  to:mul16s_error::@6
mul16s_error::@6: scope:[mul16s_error]  from mul16s_error::@5
  print_line_cursor#80 = phi( mul16s_error::@5/print_line_cursor#84 )
  mul16s_error::mf#4 = phi( mul16s_error::@5/mul16s_error::mf#5 )
  mul16s_error::mn#2 = phi( mul16s_error::@5/mul16s_error::mn#3 )
  print_char_cursor#125 = phi( mul16s_error::@5/print_char_cursor#17 )
  print_char_cursor#58 = print_char_cursor#125
  print_str::str#13 = mul16s_error::str3
  call print_str 
  to:mul16s_error::@7
mul16s_error::@7: scope:[mul16s_error]  from mul16s_error::@6
  print_line_cursor#76 = phi( mul16s_error::@6/print_line_cursor#80 )
  mul16s_error::mf#3 = phi( mul16s_error::@6/mul16s_error::mf#4 )
  mul16s_error::mn#1 = phi( mul16s_error::@6/mul16s_error::mn#2 )
  print_char_cursor#126 = phi( mul16s_error::@6/print_char_cursor#1 )
  print_char_cursor#59 = print_char_cursor#126
  print_slong::dw#2 = mul16s_error::mn#1
  call print_slong 
  to:mul16s_error::@8
mul16s_error::@8: scope:[mul16s_error]  from mul16s_error::@7
  print_line_cursor#70 = phi( mul16s_error::@7/print_line_cursor#76 )
  mul16s_error::mf#2 = phi( mul16s_error::@7/mul16s_error::mf#3 )
  print_char_cursor#127 = phi( mul16s_error::@7/print_char_cursor#17 )
  print_char_cursor#60 = print_char_cursor#127
  print_str::str#14 = mul16s_error::str4
  call print_str 
  to:mul16s_error::@9
mul16s_error::@9: scope:[mul16s_error]  from mul16s_error::@8
  print_line_cursor#62 = phi( mul16s_error::@8/print_line_cursor#70 )
  mul16s_error::mf#1 = phi( mul16s_error::@8/mul16s_error::mf#2 )
  print_char_cursor#128 = phi( mul16s_error::@8/print_char_cursor#1 )
  print_char_cursor#61 = print_char_cursor#128
  print_slong::dw#3 = mul16s_error::mf#1
  call print_slong 
  to:mul16s_error::@10
mul16s_error::@10: scope:[mul16s_error]  from mul16s_error::@9
  print_line_cursor#55 = phi( mul16s_error::@9/print_line_cursor#62 )
  print_char_cursor#129 = phi( mul16s_error::@9/print_char_cursor#17 )
  print_char_cursor#62 = print_char_cursor#129
  call print_ln 
  to:mul16s_error::@11
mul16s_error::@11: scope:[mul16s_error]  from mul16s_error::@10
  print_char_cursor#130 = phi( mul16s_error::@10/print_char_cursor#3 )
  print_line_cursor#41 = phi( mul16s_error::@10/print_line_cursor#1 )
  print_line_cursor#18 = print_line_cursor#41
  print_char_cursor#63 = print_char_cursor#130
  to:mul16s_error::@return
mul16s_error::@return: scope:[mul16s_error]  from mul16s_error::@11
  print_line_cursor#42 = phi( mul16s_error::@11/print_line_cursor#18 )
  print_char_cursor#131 = phi( mul16s_error::@11/print_char_cursor#63 )
  print_char_cursor#64 = print_char_cursor#131
  print_line_cursor#19 = print_line_cursor#42
  return 
  to:@return

void __start()
__start: scope:[__start]  from
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  print_screen#0 = (byte*)$400
  print_line_cursor#20 = print_screen#0
  print_char_cursor#65 = print_line_cursor#20
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  print_screen#7 = phi( __start::__init1/print_screen#0 )
  print_char_cursor#156 = phi( __start::__init1/print_char_cursor#65 )
  print_line_cursor#56 = phi( __start::__init1/print_line_cursor#20 )
  call main 
  to:__start::@2
__start::@2: scope:[__start]  from __start::@1
  print_screen#6 = phi( __start::@1/print_screen#7 )
  print_char_cursor#132 = phi( __start::@1/print_char_cursor#28 )
  print_line_cursor#43 = phi( __start::@1/print_line_cursor#7 )
  print_line_cursor#21 = print_line_cursor#43
  print_char_cursor#66 = print_char_cursor#132
  to:__start::@return
__start::@return: scope:[__start]  from __start::@2
  print_char_cursor#133 = phi( __start::@2/print_char_cursor#66 )
  print_line_cursor#44 = phi( __start::@2/print_line_cursor#21 )
  print_screen#4 = phi( __start::@2/print_screen#6 )
  print_screen#1 = print_screen#4
  print_line_cursor#22 = print_line_cursor#44
  print_char_cursor#67 = print_char_cursor#133
  return 
  to:@return

SYMBOL TABLE SSA
const byte* BG_COLOR = (byte*)$d021
const byte RADIX::BINARY = 2
const byte RADIX::DECIMAL = $a
const byte RADIX::HEXADECIMAL = $10
const byte RADIX::OCTAL = 8
void __start()
label __start::@1
label __start::@2
label __start::@return
label __start::__init1
void main()
label main::@1
label main::@2
label main::@3
label main::@4
label main::@return
void* memset(void* memset::str , byte memset::c , word memset::num)
bool~ memset::$0
bool~ memset::$1
byte*~ memset::$2
bool~ memset::$3
byte*~ memset::$4
label memset::@1
label memset::@2
label memset::@3
label memset::@4
label memset::@return
byte memset::c
byte memset::c#0
byte memset::c#1
byte memset::c#2
byte memset::c#3
byte memset::c#4
byte* memset::dst
byte* memset::dst#0
byte* memset::dst#1
byte* memset::dst#2
byte* memset::dst#3
byte* memset::end
byte* memset::end#0
byte* memset::end#1
byte* memset::end#2
word memset::num
word memset::num#0
word memset::num#1
word memset::num#2
void* memset::return
void* memset::return#0
void* memset::return#1
void* memset::return#2
void* memset::return#3
void* memset::str
void* memset::str#0
void* memset::str#1
void* memset::str#2
void* memset::str#3
void* memset::str#4
void* memset::str#5
signed dword mul16s(signed word mul16s::a , signed word mul16s::b)
dword~ mul16s::$0
bool~ mul16s::$1
word~ mul16s::$10
word~ mul16s::$11
word~ mul16s::$12
word~ mul16s::$13
word~ mul16s::$14
bool~ mul16s::$2
bool~ mul16s::$3
bool~ mul16s::$4
word~ mul16s::$6
word~ mul16s::$7
word~ mul16s::$9
label mul16s::@1
label mul16s::@2
label mul16s::@3
label mul16s::@4
label mul16s::@5
label mul16s::@return
signed word mul16s::a
signed word mul16s::a#0
signed word mul16s::a#1
signed word mul16s::a#2
signed word mul16s::a#3
signed word mul16s::a#4
signed word mul16s::a#5
signed word mul16s::b
signed word mul16s::b#0
signed word mul16s::b#1
signed word mul16s::b#2
signed word mul16s::b#3
signed word mul16s::b#4
dword mul16s::m
dword mul16s::m#0
dword mul16s::m#1
dword mul16s::m#2
dword mul16s::m#3
dword mul16s::m#4
dword mul16s::m#5
dword mul16s::m#6
signed dword mul16s::return
signed dword mul16s::return#0
signed dword mul16s::return#1
signed dword mul16s::return#2
signed dword mul16s::return#3
signed dword mul16s::return#4
void mul16s_compare()
bool~ mul16s_compare::$10
bool~ mul16s_compare::$11
bool~ mul16s_compare::$12
bool~ mul16s_compare::$13
bool~ mul16s_compare::$14
bool~ mul16s_compare::$16
bool~ mul16s_compare::$17
number~ mul16s_compare::$4
number~ mul16s_compare::$5
signed dword~ mul16s_compare::$6
signed dword~ mul16s_compare::$7
signed dword~ mul16s_compare::$8
bool~ mul16s_compare::$9
label mul16s_compare::@1
label mul16s_compare::@10
label mul16s_compare::@11
label mul16s_compare::@12
label mul16s_compare::@13
label mul16s_compare::@14
label mul16s_compare::@15
label mul16s_compare::@16
label mul16s_compare::@17
label mul16s_compare::@18
label mul16s_compare::@2
label mul16s_compare::@3
label mul16s_compare::@4
label mul16s_compare::@5
label mul16s_compare::@6
label mul16s_compare::@7
label mul16s_compare::@8
label mul16s_compare::@9
label mul16s_compare::@return
signed word mul16s_compare::a
signed word mul16s_compare::a#0
signed word mul16s_compare::a#1
signed word mul16s_compare::a#10
signed word mul16s_compare::a#11
signed word mul16s_compare::a#12
signed word mul16s_compare::a#13
signed word mul16s_compare::a#14
signed word mul16s_compare::a#2
signed word mul16s_compare::a#3
signed word mul16s_compare::a#4
signed word mul16s_compare::a#5
signed word mul16s_compare::a#6
signed word mul16s_compare::a#7
signed word mul16s_compare::a#8
signed word mul16s_compare::a#9
signed word mul16s_compare::b
signed word mul16s_compare::b#0
signed word mul16s_compare::b#1
signed word mul16s_compare::b#10
signed word mul16s_compare::b#11
signed word mul16s_compare::b#12
signed word mul16s_compare::b#13
signed word mul16s_compare::b#14
signed word mul16s_compare::b#2
signed word mul16s_compare::b#3
signed word mul16s_compare::b#4
signed word mul16s_compare::b#5
signed word mul16s_compare::b#6
signed word mul16s_compare::b#7
signed word mul16s_compare::b#8
signed word mul16s_compare::b#9
byte mul16s_compare::i
byte mul16s_compare::i#0
byte mul16s_compare::i#1
byte mul16s_compare::i#10
byte mul16s_compare::i#11
byte mul16s_compare::i#12
byte mul16s_compare::i#13
byte mul16s_compare::i#2
byte mul16s_compare::i#3
byte mul16s_compare::i#4
byte mul16s_compare::i#5
byte mul16s_compare::i#6
byte mul16s_compare::i#7
byte mul16s_compare::i#8
byte mul16s_compare::i#9
byte mul16s_compare::j
byte mul16s_compare::j#0
byte mul16s_compare::j#1
byte mul16s_compare::j#10
byte mul16s_compare::j#2
byte mul16s_compare::j#3
byte mul16s_compare::j#4
byte mul16s_compare::j#5
byte mul16s_compare::j#6
byte mul16s_compare::j#7
byte mul16s_compare::j#8
byte mul16s_compare::j#9
signed dword mul16s_compare::mf
signed dword mul16s_compare::mf#0
signed dword mul16s_compare::mf#1
signed dword mul16s_compare::mf#2
signed dword mul16s_compare::mf#3
signed dword mul16s_compare::mf#4
signed dword mul16s_compare::mf#5
signed dword mul16s_compare::mn
signed dword mul16s_compare::mn#0
signed dword mul16s_compare::mn#1
signed dword mul16s_compare::mn#2
signed dword mul16s_compare::mn#3
signed dword mul16s_compare::mn#4
signed dword mul16s_compare::mn#5
signed dword mul16s_compare::mn#6
signed dword mul16s_compare::ms
signed dword mul16s_compare::ms#0
signed dword mul16s_compare::ms#1
signed dword mul16s_compare::ms#2
signed dword mul16s_compare::ms#3
signed dword mul16s_compare::ms#4
signed dword mul16s_compare::ms#5
signed dword mul16s_compare::ms#6
signed dword mul16s_compare::ms#7
byte mul16s_compare::ok
byte mul16s_compare::ok#0
byte mul16s_compare::ok#1
byte mul16s_compare::ok#2
byte mul16s_compare::ok#3
byte mul16s_compare::ok#4
const byte* mul16s_compare::str[2]  = "."
const byte* mul16s_compare::str1[$24]  = "signed word multiply results match!"
void mul16s_error(signed word mul16s_error::a , signed word mul16s_error::b , signed dword mul16s_error::ms , signed dword mul16s_error::mn , signed dword mul16s_error::mf)
label mul16s_error::@1
label mul16s_error::@10
label mul16s_error::@11
label mul16s_error::@2
label mul16s_error::@3
label mul16s_error::@4
label mul16s_error::@5
label mul16s_error::@6
label mul16s_error::@7
label mul16s_error::@8
label mul16s_error::@9
label mul16s_error::@return
signed word mul16s_error::a
signed word mul16s_error::a#0
signed word mul16s_error::a#1
signed word mul16s_error::a#2
signed word mul16s_error::b
signed word mul16s_error::b#0
signed word mul16s_error::b#1
signed word mul16s_error::b#2
signed word mul16s_error::b#3
signed word mul16s_error::b#4
signed dword mul16s_error::mf
signed dword mul16s_error::mf#0
signed dword mul16s_error::mf#1
signed dword mul16s_error::mf#10
signed dword mul16s_error::mf#2
signed dword mul16s_error::mf#3
signed dword mul16s_error::mf#4
signed dword mul16s_error::mf#5
signed dword mul16s_error::mf#6
signed dword mul16s_error::mf#7
signed dword mul16s_error::mf#8
signed dword mul16s_error::mf#9
signed dword mul16s_error::mn
signed dword mul16s_error::mn#0
signed dword mul16s_error::mn#1
signed dword mul16s_error::mn#2
signed dword mul16s_error::mn#3
signed dword mul16s_error::mn#4
signed dword mul16s_error::mn#5
signed dword mul16s_error::mn#6
signed dword mul16s_error::mn#7
signed dword mul16s_error::mn#8
signed dword mul16s_error::ms
signed dword mul16s_error::ms#0
signed dword mul16s_error::ms#1
signed dword mul16s_error::ms#2
signed dword mul16s_error::ms#3
signed dword mul16s_error::ms#4
signed dword mul16s_error::ms#5
signed dword mul16s_error::ms#6
const byte* mul16s_error::str[$1f]  = "signed word multiply mismatch "
const byte* mul16s_error::str1[2]  = "*"
const byte* mul16s_error::str2[7]  = " slow:"
const byte* mul16s_error::str3[$b]  = " / normal:"
const byte* mul16s_error::str4[9]  = " / fast:"
dword mul16u(word mul16u::a , word mul16u::b)
bool~ mul16u::$0
number~ mul16u::$1
bool~ mul16u::$2
bool~ mul16u::$3
dword~ mul16u::$4
word~ mul16u::$5
dword~ mul16u::$6
label mul16u::@1
label mul16u::@2
label mul16u::@3
label mul16u::@4
label mul16u::@5
label mul16u::@return
word mul16u::a
word mul16u::a#0
word mul16u::a#1
word mul16u::a#2
word mul16u::a#3
word mul16u::a#4
word mul16u::a#5
word mul16u::a#6
word mul16u::a#7
word mul16u::b
word mul16u::b#0
word mul16u::b#1
word mul16u::b#2
dword mul16u::mb
dword mul16u::mb#0
dword mul16u::mb#1
dword mul16u::mb#2
dword mul16u::mb#3
dword mul16u::mb#4
dword mul16u::mb#5
dword mul16u::res
dword mul16u::res#0
dword mul16u::res#1
dword mul16u::res#2
dword mul16u::res#3
dword mul16u::res#4
dword mul16u::res#5
dword mul16u::res#6
dword mul16u::return
dword mul16u::return#0
dword mul16u::return#1
dword mul16u::return#2
dword mul16u::return#3
dword mul16u::return#4
dword mul16u::return#5
dword mul16u::return#6
void mul16u_compare()
bool~ mul16u_compare::$10
bool~ mul16u_compare::$11
bool~ mul16u_compare::$12
bool~ mul16u_compare::$13
bool~ mul16u_compare::$14
bool~ mul16u_compare::$16
bool~ mul16u_compare::$17
number~ mul16u_compare::$4
number~ mul16u_compare::$5
dword~ mul16u_compare::$6
dword~ mul16u_compare::$7
dword~ mul16u_compare::$8
bool~ mul16u_compare::$9
label mul16u_compare::@1
label mul16u_compare::@10
label mul16u_compare::@11
label mul16u_compare::@12
label mul16u_compare::@13
label mul16u_compare::@14
label mul16u_compare::@15
label mul16u_compare::@16
label mul16u_compare::@17
label mul16u_compare::@18
label mul16u_compare::@2
label mul16u_compare::@3
label mul16u_compare::@4
label mul16u_compare::@5
label mul16u_compare::@6
label mul16u_compare::@7
label mul16u_compare::@8
label mul16u_compare::@9
label mul16u_compare::@return
word mul16u_compare::a
word mul16u_compare::a#0
word mul16u_compare::a#1
word mul16u_compare::a#10
word mul16u_compare::a#11
word mul16u_compare::a#12
word mul16u_compare::a#13
word mul16u_compare::a#14
word mul16u_compare::a#2
word mul16u_compare::a#3
word mul16u_compare::a#4
word mul16u_compare::a#5
word mul16u_compare::a#6
word mul16u_compare::a#7
word mul16u_compare::a#8
word mul16u_compare::a#9
word mul16u_compare::b
word mul16u_compare::b#0
word mul16u_compare::b#1
word mul16u_compare::b#10
word mul16u_compare::b#11
word mul16u_compare::b#12
word mul16u_compare::b#13
word mul16u_compare::b#14
word mul16u_compare::b#2
word mul16u_compare::b#3
word mul16u_compare::b#4
word mul16u_compare::b#5
word mul16u_compare::b#6
word mul16u_compare::b#7
word mul16u_compare::b#8
word mul16u_compare::b#9
byte mul16u_compare::i
byte mul16u_compare::i#0
byte mul16u_compare::i#1
byte mul16u_compare::i#10
byte mul16u_compare::i#11
byte mul16u_compare::i#12
byte mul16u_compare::i#13
byte mul16u_compare::i#2
byte mul16u_compare::i#3
byte mul16u_compare::i#4
byte mul16u_compare::i#5
byte mul16u_compare::i#6
byte mul16u_compare::i#7
byte mul16u_compare::i#8
byte mul16u_compare::i#9
byte mul16u_compare::j
byte mul16u_compare::j#0
byte mul16u_compare::j#1
byte mul16u_compare::j#10
byte mul16u_compare::j#2
byte mul16u_compare::j#3
byte mul16u_compare::j#4
byte mul16u_compare::j#5
byte mul16u_compare::j#6
byte mul16u_compare::j#7
byte mul16u_compare::j#8
byte mul16u_compare::j#9
dword mul16u_compare::mf
dword mul16u_compare::mf#0
dword mul16u_compare::mf#1
dword mul16u_compare::mf#2
dword mul16u_compare::mf#3
dword mul16u_compare::mf#4
dword mul16u_compare::mf#5
dword mul16u_compare::mn
dword mul16u_compare::mn#0
dword mul16u_compare::mn#1
dword mul16u_compare::mn#2
dword mul16u_compare::mn#3
dword mul16u_compare::mn#4
dword mul16u_compare::mn#5
dword mul16u_compare::mn#6
dword mul16u_compare::ms
dword mul16u_compare::ms#0
dword mul16u_compare::ms#1
dword mul16u_compare::ms#2
dword mul16u_compare::ms#3
dword mul16u_compare::ms#4
dword mul16u_compare::ms#5
dword mul16u_compare::ms#6
dword mul16u_compare::ms#7
byte mul16u_compare::ok
byte mul16u_compare::ok#0
byte mul16u_compare::ok#1
byte mul16u_compare::ok#2
byte mul16u_compare::ok#3
byte mul16u_compare::ok#4
const byte* mul16u_compare::str[2]  = "."
const byte* mul16u_compare::str1[$1d]  = "word multiply results match!"
void mul16u_error(word mul16u_error::a , word mul16u_error::b , dword mul16u_error::ms , dword mul16u_error::mn , dword mul16u_error::mf)
label mul16u_error::@1
label mul16u_error::@10
label mul16u_error::@11
label mul16u_error::@2
label mul16u_error::@3
label mul16u_error::@4
label mul16u_error::@5
label mul16u_error::@6
label mul16u_error::@7
label mul16u_error::@8
label mul16u_error::@9
label mul16u_error::@return
word mul16u_error::a
word mul16u_error::a#0
word mul16u_error::a#1
word mul16u_error::a#2
word mul16u_error::b
word mul16u_error::b#0
word mul16u_error::b#1
word mul16u_error::b#2
word mul16u_error::b#3
word mul16u_error::b#4
dword mul16u_error::mf
dword mul16u_error::mf#0
dword mul16u_error::mf#1
dword mul16u_error::mf#10
dword mul16u_error::mf#2
dword mul16u_error::mf#3
dword mul16u_error::mf#4
dword mul16u_error::mf#5
dword mul16u_error::mf#6
dword mul16u_error::mf#7
dword mul16u_error::mf#8
dword mul16u_error::mf#9
dword mul16u_error::mn
dword mul16u_error::mn#0
dword mul16u_error::mn#1
dword mul16u_error::mn#2
dword mul16u_error::mn#3
dword mul16u_error::mn#4
dword mul16u_error::mn#5
dword mul16u_error::mn#6
dword mul16u_error::mn#7
dword mul16u_error::mn#8
dword mul16u_error::ms
dword mul16u_error::ms#0
dword mul16u_error::ms#1
dword mul16u_error::ms#2
dword mul16u_error::ms#3
dword mul16u_error::ms#4
dword mul16u_error::ms#5
dword mul16u_error::ms#6
const byte* mul16u_error::str[$13]  = "multiply mismatch "
const byte* mul16u_error::str1[2]  = "*"
const byte* mul16u_error::str2[7]  = " slow:"
const byte* mul16u_error::str3[$b]  = " / normal:"
const byte* mul16u_error::str4[9]  = " / fast:"
signed dword mulf16s(signed word mulf16s::a , signed word mulf16s::b)
dword~ mulf16s::$0
bool~ mulf16s::$1
word~ mulf16s::$10
word~ mulf16s::$11
word~ mulf16s::$12
word~ mulf16s::$13
word~ mulf16s::$14
bool~ mulf16s::$2
bool~ mulf16s::$3
bool~ mulf16s::$4
word~ mulf16s::$6
word~ mulf16s::$7
word~ mulf16s::$9
label mulf16s::@1
label mulf16s::@2
label mulf16s::@3
label mulf16s::@4
label mulf16s::@5
label mulf16s::@return
signed word mulf16s::a
signed word mulf16s::a#0
signed word mulf16s::a#1
signed word mulf16s::a#2
signed word mulf16s::a#3
signed word mulf16s::a#4
signed word mulf16s::a#5
signed word mulf16s::b
signed word mulf16s::b#0
signed word mulf16s::b#1
signed word mulf16s::b#2
signed word mulf16s::b#3
signed word mulf16s::b#4
dword mulf16s::m
dword mulf16s::m#0
dword mulf16s::m#1
dword mulf16s::m#2
dword mulf16s::m#3
dword mulf16s::m#4
dword mulf16s::m#5
dword mulf16s::m#6
signed dword mulf16s::return
signed dword mulf16s::return#0
signed dword mulf16s::return#1
signed dword mulf16s::return#2
signed dword mulf16s::return#3
signed dword mulf16s::return#4
dword mulf16u(word mulf16u::a , word mulf16u::b)
label mulf16u::@return
word mulf16u::a
word mulf16u::a#0
word mulf16u::a#1
word mulf16u::a#2
word mulf16u::b
word mulf16u::b#0
word mulf16u::b#1
word mulf16u::b#2
const nomodify word* mulf16u::memA = (word*)$f8
const nomodify word* mulf16u::memB = (word*)$fa
const nomodify dword* mulf16u::memR = (dword*)$fc
dword mulf16u::return
dword mulf16u::return#0
dword mulf16u::return#1
dword mulf16u::return#2
dword mulf16u::return#3
dword mulf16u::return#4
dword mulf16u::return#5
dword mulf16u::return#6
void mulf_init()
bool~ mulf_init::$0
number~ mulf_init::$1
bool~ mulf_init::$10
bool~ mulf_init::$2
bool~ mulf_init::$3
byte~ mulf_init::$4
byte~ mulf_init::$5
word~ mulf_init::$6
bool~ mulf_init::$7
byte~ mulf_init::$8
bool~ mulf_init::$9
label mulf_init::@1
label mulf_init::@10
label mulf_init::@2
label mulf_init::@3
label mulf_init::@4
label mulf_init::@5
label mulf_init::@6
label mulf_init::@7
label mulf_init::@8
label mulf_init::@9
label mulf_init::@return
byte mulf_init::c
byte mulf_init::c#0
byte mulf_init::c#1
byte mulf_init::c#2
byte mulf_init::c#3
byte mulf_init::c#4
byte mulf_init::c#5
byte mulf_init::dir
byte mulf_init::dir#0
byte mulf_init::dir#1
byte mulf_init::dir#2
byte mulf_init::dir#3
byte mulf_init::dir#4
word mulf_init::sqr
word mulf_init::sqr#0
word mulf_init::sqr#1
word mulf_init::sqr#2
word mulf_init::sqr#3
word mulf_init::sqr#4
word mulf_init::sqr#5
word mulf_init::sqr#6
byte* mulf_init::sqr1_hi
byte* mulf_init::sqr1_hi#0
byte* mulf_init::sqr1_hi#1
byte* mulf_init::sqr1_hi#2
byte* mulf_init::sqr1_hi#3
byte* mulf_init::sqr1_hi#4
byte* mulf_init::sqr1_hi#5
byte* mulf_init::sqr1_lo
byte* mulf_init::sqr1_lo#0
byte* mulf_init::sqr1_lo#1
byte* mulf_init::sqr1_lo#2
byte* mulf_init::sqr1_lo#3
byte* mulf_init::sqr1_lo#4
byte* mulf_init::sqr1_lo#5
byte* mulf_init::sqr2_hi
byte* mulf_init::sqr2_hi#0
byte* mulf_init::sqr2_hi#1
byte* mulf_init::sqr2_hi#2
byte* mulf_init::sqr2_hi#3
byte* mulf_init::sqr2_hi#4
byte* mulf_init::sqr2_hi#5
byte* mulf_init::sqr2_lo
byte* mulf_init::sqr2_lo#0
byte* mulf_init::sqr2_lo#1
byte* mulf_init::sqr2_lo#2
byte* mulf_init::sqr2_lo#3
byte* mulf_init::sqr2_lo#4
byte* mulf_init::sqr2_lo#5
byte mulf_init::x_2
byte mulf_init::x_2#0
byte mulf_init::x_2#1
byte mulf_init::x_2#2
byte mulf_init::x_2#3
byte mulf_init::x_2#4
byte mulf_init::x_2#5
byte mulf_init::x_255
byte mulf_init::x_255#0
byte mulf_init::x_255#1
byte mulf_init::x_255#2
byte mulf_init::x_255#3
byte mulf_init::x_255#4
byte mulf_init::x_255#5
const byte* mulf_sqr1_hi[$200]  = { fill( $200, 0) }
const byte* mulf_sqr1_lo[$200]  = { fill( $200, 0) }
const byte* mulf_sqr2_hi[$200]  = { fill( $200, 0) }
const byte* mulf_sqr2_lo[$200]  = { fill( $200, 0) }
signed dword muls16s(signed word muls16s::a , signed word muls16s::b)
bool~ muls16s::$0
bool~ muls16s::$1
bool~ muls16s::$2
bool~ muls16s::$3
signed dword~ muls16s::$4
bool~ muls16s::$5
signed dword~ muls16s::$6
label muls16s::@1
label muls16s::@2
label muls16s::@3
label muls16s::@4
label muls16s::@5
label muls16s::@6
label muls16s::@7
label muls16s::@8
label muls16s::@return
signed word muls16s::a
signed word muls16s::a#0
signed word muls16s::a#1
signed word muls16s::a#2
signed word muls16s::a#3
signed word muls16s::a#4
signed word muls16s::a#5
signed word muls16s::a#6
signed word muls16s::a#7
signed word muls16s::a#8
signed word muls16s::b
signed word muls16s::b#0
signed word muls16s::b#1
signed word muls16s::b#2
signed word muls16s::b#3
signed word muls16s::b#4
signed word muls16s::b#5
signed word muls16s::b#6
signed word muls16s::b#7
signed word muls16s::b#8
signed word muls16s::i
signed word muls16s::i#0
signed word muls16s::i#1
signed word muls16s::i#2
signed word muls16s::i#3
signed word muls16s::j
signed word muls16s::j#0
signed word muls16s::j#1
signed word muls16s::j#2
signed word muls16s::j#3
signed dword muls16s::m
signed dword muls16s::m#0
signed dword muls16s::m#1
signed dword muls16s::m#10
signed dword muls16s::m#2
signed dword muls16s::m#3
signed dword muls16s::m#4
signed dword muls16s::m#5
signed dword muls16s::m#6
signed dword muls16s::m#7
signed dword muls16s::m#8
signed dword muls16s::m#9
signed dword muls16s::return
signed dword muls16s::return#0
signed dword muls16s::return#1
signed dword muls16s::return#2
signed dword muls16s::return#3
signed dword muls16s::return#4
dword muls16u(word muls16u::a , word muls16u::b)
bool~ muls16u::$0
bool~ muls16u::$1
bool~ muls16u::$2
dword~ muls16u::$3
label muls16u::@1
label muls16u::@2
label muls16u::@3
label muls16u::@4
label muls16u::@return
word muls16u::a
word muls16u::a#0
word muls16u::a#1
word muls16u::a#2
word muls16u::a#3
word muls16u::a#4
word muls16u::b
word muls16u::b#0
word muls16u::b#1
word muls16u::b#2
word muls16u::b#3
word muls16u::b#4
word muls16u::i
word muls16u::i#0
word muls16u::i#1
word muls16u::i#2
word muls16u::i#3
dword muls16u::m
dword muls16u::m#0
dword muls16u::m#1
dword muls16u::m#2
dword muls16u::m#3
dword muls16u::m#4
dword muls16u::m#5
dword muls16u::return
dword muls16u::return#0
dword muls16u::return#1
dword muls16u::return#2
dword muls16u::return#3
dword muls16u::return#4
void print_char(byte print_char::ch)
label print_char::@return
byte print_char::ch
byte print_char::ch#0
byte print_char::ch#1
byte print_char::ch#2
byte print_char::ch#3
byte print_char::ch#4
byte print_char::ch#5
byte print_char::ch#6
byte print_char::ch#7
byte* print_char_cursor
byte* print_char_cursor#0
byte* print_char_cursor#1
byte* print_char_cursor#10
byte* print_char_cursor#100
byte* print_char_cursor#101
byte* print_char_cursor#102
byte* print_char_cursor#103
byte* print_char_cursor#104
byte* print_char_cursor#105
byte* print_char_cursor#106
byte* print_char_cursor#107
byte* print_char_cursor#108
byte* print_char_cursor#109
byte* print_char_cursor#11
byte* print_char_cursor#110
byte* print_char_cursor#111
byte* print_char_cursor#112
byte* print_char_cursor#113
byte* print_char_cursor#114
byte* print_char_cursor#115
byte* print_char_cursor#116
byte* print_char_cursor#117
byte* print_char_cursor#118
byte* print_char_cursor#119
byte* print_char_cursor#12
byte* print_char_cursor#120
byte* print_char_cursor#121
byte* print_char_cursor#122
byte* print_char_cursor#123
byte* print_char_cursor#124
byte* print_char_cursor#125
byte* print_char_cursor#126
byte* print_char_cursor#127
byte* print_char_cursor#128
byte* print_char_cursor#129
byte* print_char_cursor#13
byte* print_char_cursor#130
byte* print_char_cursor#131
byte* print_char_cursor#132
byte* print_char_cursor#133
byte* print_char_cursor#134
byte* print_char_cursor#135
byte* print_char_cursor#136
byte* print_char_cursor#137
byte* print_char_cursor#138
byte* print_char_cursor#139
byte* print_char_cursor#14
byte* print_char_cursor#140
byte* print_char_cursor#141
byte* print_char_cursor#142
byte* print_char_cursor#143
byte* print_char_cursor#144
byte* print_char_cursor#145
byte* print_char_cursor#146
byte* print_char_cursor#147
byte* print_char_cursor#148
byte* print_char_cursor#149
byte* print_char_cursor#15
byte* print_char_cursor#150
byte* print_char_cursor#151
byte* print_char_cursor#152
byte* print_char_cursor#153
byte* print_char_cursor#154
byte* print_char_cursor#155
byte* print_char_cursor#156
byte* print_char_cursor#157
byte* print_char_cursor#158
byte* print_char_cursor#159
byte* print_char_cursor#16
byte* print_char_cursor#160
byte* print_char_cursor#161
byte* print_char_cursor#162
byte* print_char_cursor#163
byte* print_char_cursor#164
byte* print_char_cursor#165
byte* print_char_cursor#166
byte* print_char_cursor#167
byte* print_char_cursor#168
byte* print_char_cursor#169
byte* print_char_cursor#17
byte* print_char_cursor#170
byte* print_char_cursor#171
byte* print_char_cursor#172
byte* print_char_cursor#173
byte* print_char_cursor#174
byte* print_char_cursor#175
byte* print_char_cursor#176
byte* print_char_cursor#177
byte* print_char_cursor#178
byte* print_char_cursor#179
byte* print_char_cursor#18
byte* print_char_cursor#180
byte* print_char_cursor#181
byte* print_char_cursor#19
byte* print_char_cursor#2
byte* print_char_cursor#20
byte* print_char_cursor#21
byte* print_char_cursor#22
byte* print_char_cursor#23
byte* print_char_cursor#24
byte* print_char_cursor#25
byte* print_char_cursor#26
byte* print_char_cursor#27
byte* print_char_cursor#28
byte* print_char_cursor#29
byte* print_char_cursor#3
byte* print_char_cursor#30
byte* print_char_cursor#31
byte* print_char_cursor#32
byte* print_char_cursor#33
byte* print_char_cursor#34
byte* print_char_cursor#35
byte* print_char_cursor#36
byte* print_char_cursor#37
byte* print_char_cursor#38
byte* print_char_cursor#39
byte* print_char_cursor#4
byte* print_char_cursor#40
byte* print_char_cursor#41
byte* print_char_cursor#42
byte* print_char_cursor#43
byte* print_char_cursor#44
byte* print_char_cursor#45
byte* print_char_cursor#46
byte* print_char_cursor#47
byte* print_char_cursor#48
byte* print_char_cursor#49
byte* print_char_cursor#5
byte* print_char_cursor#50
byte* print_char_cursor#51
byte* print_char_cursor#52
byte* print_char_cursor#53
byte* print_char_cursor#54
byte* print_char_cursor#55
byte* print_char_cursor#56
byte* print_char_cursor#57
byte* print_char_cursor#58
byte* print_char_cursor#59
byte* print_char_cursor#6
byte* print_char_cursor#60
byte* print_char_cursor#61
byte* print_char_cursor#62
byte* print_char_cursor#63
byte* print_char_cursor#64
byte* print_char_cursor#65
byte* print_char_cursor#66
byte* print_char_cursor#67
byte* print_char_cursor#68
byte* print_char_cursor#69
byte* print_char_cursor#7
byte* print_char_cursor#70
byte* print_char_cursor#71
byte* print_char_cursor#72
byte* print_char_cursor#73
byte* print_char_cursor#74
byte* print_char_cursor#75
byte* print_char_cursor#76
byte* print_char_cursor#77
byte* print_char_cursor#78
byte* print_char_cursor#79
byte* print_char_cursor#8
byte* print_char_cursor#80
byte* print_char_cursor#81
byte* print_char_cursor#82
byte* print_char_cursor#83
byte* print_char_cursor#84
byte* print_char_cursor#85
byte* print_char_cursor#86
byte* print_char_cursor#87
byte* print_char_cursor#88
byte* print_char_cursor#89
byte* print_char_cursor#9
byte* print_char_cursor#90
byte* print_char_cursor#91
byte* print_char_cursor#92
byte* print_char_cursor#93
byte* print_char_cursor#94
byte* print_char_cursor#95
byte* print_char_cursor#96
byte* print_char_cursor#97
byte* print_char_cursor#98
byte* print_char_cursor#99
void print_cls()
label print_cls::@1
label print_cls::@return
const to_nomodify byte* print_hextab[]  = "0123456789abcdef"z
byte* print_line_cursor
byte* print_line_cursor#0
byte* print_line_cursor#1
byte* print_line_cursor#10
byte* print_line_cursor#100
byte* print_line_cursor#101
byte* print_line_cursor#102
byte* print_line_cursor#11
byte* print_line_cursor#12
byte* print_line_cursor#13
byte* print_line_cursor#14
byte* print_line_cursor#15
byte* print_line_cursor#16
byte* print_line_cursor#17
byte* print_line_cursor#18
byte* print_line_cursor#19
byte* print_line_cursor#2
byte* print_line_cursor#20
byte* print_line_cursor#21
byte* print_line_cursor#22
byte* print_line_cursor#23
byte* print_line_cursor#24
byte* print_line_cursor#25
byte* print_line_cursor#26
byte* print_line_cursor#27
byte* print_line_cursor#28
byte* print_line_cursor#29
byte* print_line_cursor#3
byte* print_line_cursor#30
byte* print_line_cursor#31
byte* print_line_cursor#32
byte* print_line_cursor#33
byte* print_line_cursor#34
byte* print_line_cursor#35
byte* print_line_cursor#36
byte* print_line_cursor#37
byte* print_line_cursor#38
byte* print_line_cursor#39
byte* print_line_cursor#4
byte* print_line_cursor#40
byte* print_line_cursor#41
byte* print_line_cursor#42
byte* print_line_cursor#43
byte* print_line_cursor#44
byte* print_line_cursor#45
byte* print_line_cursor#46
byte* print_line_cursor#47
byte* print_line_cursor#48
byte* print_line_cursor#49
byte* print_line_cursor#5
byte* print_line_cursor#50
byte* print_line_cursor#51
byte* print_line_cursor#52
byte* print_line_cursor#53
byte* print_line_cursor#54
byte* print_line_cursor#55
byte* print_line_cursor#56
byte* print_line_cursor#57
byte* print_line_cursor#58
byte* print_line_cursor#59
byte* print_line_cursor#6
byte* print_line_cursor#60
byte* print_line_cursor#61
byte* print_line_cursor#62
byte* print_line_cursor#63
byte* print_line_cursor#64
byte* print_line_cursor#65
byte* print_line_cursor#66
byte* print_line_cursor#67
byte* print_line_cursor#68
byte* print_line_cursor#69
byte* print_line_cursor#7
byte* print_line_cursor#70
byte* print_line_cursor#71
byte* print_line_cursor#72
byte* print_line_cursor#73
byte* print_line_cursor#74
byte* print_line_cursor#75
byte* print_line_cursor#76
byte* print_line_cursor#77
byte* print_line_cursor#78
byte* print_line_cursor#79
byte* print_line_cursor#8
byte* print_line_cursor#80
byte* print_line_cursor#81
byte* print_line_cursor#82
byte* print_line_cursor#83
byte* print_line_cursor#84
byte* print_line_cursor#85
byte* print_line_cursor#86
byte* print_line_cursor#87
byte* print_line_cursor#88
byte* print_line_cursor#89
byte* print_line_cursor#9
byte* print_line_cursor#90
byte* print_line_cursor#91
byte* print_line_cursor#92
byte* print_line_cursor#93
byte* print_line_cursor#94
byte* print_line_cursor#95
byte* print_line_cursor#96
byte* print_line_cursor#97
byte* print_line_cursor#98
byte* print_line_cursor#99
void print_ln()
byte*~ print_ln::$0
bool~ print_ln::$1
label print_ln::@1
label print_ln::@2
label print_ln::@return
byte* print_screen
byte* print_screen#0
byte* print_screen#1
byte* print_screen#2
byte* print_screen#3
byte* print_screen#4
byte* print_screen#5
byte* print_screen#6
byte* print_screen#7
void print_sint(signed word print_sint::w)
bool~ print_sint::$0
signed word~ print_sint::$4
label print_sint::@1
label print_sint::@2
label print_sint::@3
label print_sint::@4
label print_sint::@5
label print_sint::@6
label print_sint::@return
signed word print_sint::w
signed word print_sint::w#0
signed word print_sint::w#1
signed word print_sint::w#2
signed word print_sint::w#3
signed word print_sint::w#4
signed word print_sint::w#5
signed word print_sint::w#6
signed word print_sint::w#7
signed word print_sint::w#8
void print_slong(signed dword print_slong::dw)
bool~ print_slong::$0
signed dword~ print_slong::$4
label print_slong::@1
label print_slong::@2
label print_slong::@3
label print_slong::@4
label print_slong::@5
label print_slong::@6
label print_slong::@return
signed dword print_slong::dw
signed dword print_slong::dw#0
signed dword print_slong::dw#1
signed dword print_slong::dw#2
signed dword print_slong::dw#3
signed dword print_slong::dw#4
signed dword print_slong::dw#5
signed dword print_slong::dw#6
signed dword print_slong::dw#7
signed dword print_slong::dw#8
signed dword print_slong::dw#9
void print_str(byte* print_str::str)
bool~ print_str::$1
label print_str::@1
label print_str::@2
label print_str::@3
label print_str::@return
byte* print_str::str
byte* print_str::str#0
byte* print_str::str#1
byte* print_str::str#10
byte* print_str::str#11
byte* print_str::str#12
byte* print_str::str#13
byte* print_str::str#14
byte* print_str::str#15
byte* print_str::str#16
byte* print_str::str#17
byte* print_str::str#18
byte* print_str::str#2
byte* print_str::str#3
byte* print_str::str#4
byte* print_str::str#5
byte* print_str::str#6
byte* print_str::str#7
byte* print_str::str#8
byte* print_str::str#9
void print_uchar(byte print_uchar::b)
byte~ print_uchar::$0
number~ print_uchar::$2
label print_uchar::@1
label print_uchar::@2
label print_uchar::@return
byte print_uchar::b
byte print_uchar::b#0
byte print_uchar::b#1
byte print_uchar::b#2
byte print_uchar::b#3
void print_uint(word print_uint::w)
byte~ print_uint::$0
byte~ print_uint::$2
label print_uint::@1
label print_uint::@2
label print_uint::@return
word print_uint::w
word print_uint::w#0
word print_uint::w#1
word print_uint::w#2
word print_uint::w#3
word print_uint::w#4
word print_uint::w#5
word print_uint::w#6
void print_ulong(dword print_ulong::dw)
word~ print_ulong::$0
word~ print_ulong::$2
label print_ulong::@1
label print_ulong::@2
label print_ulong::@return
dword print_ulong::dw
dword print_ulong::dw#0
dword print_ulong::dw#1
dword print_ulong::dw#2
dword print_ulong::dw#3
dword print_ulong::dw#4
dword print_ulong::dw#5

Adding number conversion cast (unumber) 0 in memset::$0 = memset::num#1 > 0
Adding number conversion cast (unumber) 0 in print_str::$1 = 0 != *print_str::str#15
Adding number conversion cast (unumber) $28 in print_ln::$0 = print_line_cursor#23 + $28
Adding number conversion cast (snumber) 0 in print_sint::$0 = print_sint::w#3 < 0
Adding number conversion cast (snumber) 0 in print_slong::$0 = print_slong::dw#4 < 0
Adding number conversion cast (unumber) 4 in print_uchar::$0 = print_uchar::b#2 >> 4
Adding number conversion cast (unumber) $f in print_uchar::$2 = print_uchar::b#3 & $f
Adding number conversion cast (unumber) print_uchar::$2 in print_uchar::$2 = print_uchar::b#3 & (unumber)$f
Adding number conversion cast (unumber) $3e8 in memset::num#0 = $3e8
Adding number conversion cast (unumber) 0 in mul16u::$0 = mul16u::a#3 != 0
Adding number conversion cast (unumber) 1 in mul16u::$1 = mul16u::a#4 & 1
Adding number conversion cast (unumber) mul16u::$1 in mul16u::$1 = mul16u::a#4 & (unumber)1
Adding number conversion cast (unumber) 0 in mul16u::$2 = mul16u::$1 != 0
Adding number conversion cast (unumber) 1 in mul16u::$5 = mul16u::a#5 >> 1
Adding number conversion cast (unumber) 1 in mul16u::$6 = mul16u::mb#2 << 1
Adding number conversion cast (snumber) 0 in mul16s::$1 = mul16s::a#2 < 0
Adding number conversion cast (snumber) 0 in mul16s::$3 = mul16s::b#2 < 0
Adding number conversion cast (unumber) 1 in mulf_init::sqr1_hi#0 = mulf_sqr1_hi+1
Adding number conversion cast (unumber) 1 in mulf_init::sqr1_lo#0 = mulf_sqr1_lo+1
Adding number conversion cast (unumber) $200 in mulf_init::$0 = mulf_init::sqr1_lo#2 != mulf_sqr1_lo+$200
Adding number conversion cast (unumber) 1 in mulf_init::$1 = mulf_init::c#1 & 1
Adding number conversion cast (unumber) mulf_init::$1 in mulf_init::$1 = mulf_init::c#1 & (unumber)1
Adding number conversion cast (unumber) 0 in mulf_init::$2 = mulf_init::$1 == 0
Adding number conversion cast (unumber) $1ff in mulf_init::$7 = mulf_init::sqr2_lo#2 != mulf_sqr2_lo+$1ff
Adding number conversion cast (unumber) 0 in mulf_init::$9 = mulf_init::x_255#1 == 0
Adding number conversion cast (unumber) $100 in *(mulf_sqr2_lo+$1ff) = *(mulf_sqr1_lo+$100)
Adding number conversion cast (unumber) $1ff in *(mulf_sqr2_lo+$1ff) = *(mulf_sqr1_lo+(unumber)$100)
Adding number conversion cast (unumber) $100 in *(mulf_sqr2_hi+$1ff) = *(mulf_sqr1_hi+$100)
Adding number conversion cast (unumber) $1ff in *(mulf_sqr2_hi+$1ff) = *(mulf_sqr1_hi+(unumber)$100)
Adding number conversion cast (unumber) 1 in mulf_init::dir#1 = 1
Adding number conversion cast (snumber) 0 in mulf16s::$1 = mulf16s::a#2 < 0
Adding number conversion cast (snumber) 0 in mulf16s::$3 = mulf16s::b#2 < 0
Adding number conversion cast (unumber) 5 in *BG_COLOR = 5
Adding number conversion cast (unumber) 0 in muls16u::$0 = muls16u::a#1 != 0
Adding number conversion cast (snumber) 0 in muls16s::$0 = muls16s::a#1 < 0
Adding number conversion cast (snumber) 0 in muls16s::$1 = muls16s::a#2 > 0
Adding number conversion cast (unumber) $d2b in mul16u_compare::$4 = mul16u_compare::a#2 + $d2b
Adding number conversion cast (unumber) mul16u_compare::$4 in mul16u_compare::$4 = mul16u_compare::a#2 + (unumber)$d2b
Adding number conversion cast (unumber) $ffd in mul16u_compare::$5 = mul16u_compare::b#2 + $ffd
Adding number conversion cast (unumber) mul16u_compare::$5 in mul16u_compare::$5 = mul16u_compare::b#2 + (unumber)$ffd
Adding number conversion cast (unumber) 0 in mul16u_compare::ok#1 = 0
Adding number conversion cast (unumber) 0 in mul16u_compare::$13 = mul16u_compare::ok#3 == 0
Adding number conversion cast (unumber) 0 in mul16u_compare::ok#2 = 0
Adding number conversion cast (unumber) 2 in *BG_COLOR = 2
Adding number conversion cast (snumber) $d2b in mul16s_compare::$4 = mul16s_compare::a#2 + $d2b
Adding number conversion cast (snumber) mul16s_compare::$4 in mul16s_compare::$4 = mul16s_compare::a#2 + (snumber)$d2b
Adding number conversion cast (snumber) $ffd in mul16s_compare::$5 = mul16s_compare::b#2 + $ffd
Adding number conversion cast (snumber) mul16s_compare::$5 in mul16s_compare::$5 = mul16s_compare::b#2 + (snumber)$ffd
Adding number conversion cast (unumber) 0 in mul16s_compare::ok#1 = 0
Adding number conversion cast (unumber) 0 in mul16s_compare::$13 = mul16s_compare::ok#3 == 0
Adding number conversion cast (unumber) 0 in mul16s_compare::ok#2 = 0
Adding number conversion cast (unumber) 2 in *BG_COLOR = 2
Successful SSA optimization PassNAddNumberTypeConversions
Inlining cast memset::dst#0 = (byte*)memset::str#2
Inlining cast memset::num#0 = (unumber)$3e8
Inlining cast mulf_init::dir#1 = (unumber)1
Inlining cast *BG_COLOR = (unumber)5
Inlining cast mul16u_compare::ok#1 = (unumber)0
Inlining cast mul16u_compare::ok#2 = (unumber)0
Inlining cast *BG_COLOR = (unumber)2
Inlining cast mul16s_compare::ok#1 = (unumber)0
Inlining cast mul16s_compare::ok#2 = (unumber)0
Inlining cast *BG_COLOR = (unumber)2
Successful SSA optimization Pass2InlineCast
Simplifying constant pointer cast (word*) 248
Simplifying constant pointer cast (word*) 250
Simplifying constant pointer cast (dword*) 252
Simplifying constant pointer cast (byte*) 53281
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 4
Simplifying constant integer cast $f
Simplifying constant integer cast $3e8
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast $200
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast -1
Simplifying constant integer cast $1ff
Simplifying constant integer cast 0
Simplifying constant integer cast $100
Simplifying constant integer cast $1ff
Simplifying constant integer cast $100
Simplifying constant integer cast $1ff
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 5
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $d2b
Simplifying constant integer cast $ffd
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 2
Simplifying constant integer cast $d2b
Simplifying constant integer cast $ffd
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 2
Simplifying constant pointer cast (byte*) 1024
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type 0
Finalized unsigned number type 0
Finalized unsigned number type $28
Finalized signed number type 0
Finalized signed number type 0
Finalized unsigned number type 4
Finalized unsigned number type $f
Finalized unsigned number type $3e8
Finalized unsigned number type 0
Finalized unsigned number type 1
Finalized unsigned number type 0
Finalized unsigned number type 1
Finalized unsigned number type 1
Finalized signed number type 0
Finalized signed number type 0
Finalized unsigned number type 1
Finalized unsigned number type 1
Finalized unsigned number type $200
Finalized unsigned number type 1
Finalized unsigned number type 0
Finalized unsigned number type $1ff
Finalized unsigned number type 0
Finalized unsigned number type $100
Finalized unsigned number type $1ff
Finalized unsigned number type $100
Finalized unsigned number type $1ff
Finalized unsigned number type 1
Finalized signed number type 0
Finalized signed number type 0
Finalized unsigned number type 5
Finalized unsigned number type 0
Finalized signed number type 0
Finalized signed number type 0
Finalized unsigned number type $d2b
Finalized unsigned number type $ffd
Finalized unsigned number type 0
Finalized unsigned number type 0
Finalized unsigned number type 0
Finalized unsigned number type 2
Finalized signed number type $d2b
Finalized signed number type $ffd
Finalized unsigned number type 0
Finalized unsigned number type 0
Finalized unsigned number type 0
Finalized unsigned number type 2
Successful SSA optimization PassNFinalizeNumberTypeConversions
Inferred type updated to byte in print_uchar::$2 = print_uchar::b#3 & $f
Inferred type updated to byte in mul16u::$1 = mul16u::a#4 & 1
Inferred type updated to byte in mulf_init::$1 = mulf_init::c#1 & 1
Inferred type updated to word in mul16u_compare::$4 = mul16u_compare::a#2 + $d2b
Inferred type updated to word in mul16u_compare::$5 = mul16u_compare::b#2 + $ffd
Inferred type updated to signed word in mul16s_compare::$4 = mul16s_compare::a#2 + $d2b
Inferred type updated to signed word in mul16s_compare::$5 = mul16s_compare::b#2 + $ffd
Inversing boolean not [2] memset::$1 = memset::num#1 <= 0 from [1] memset::$0 = memset::num#1 > 0
Inversing boolean not [161] mul16u::$3 = mul16u::$1 == 0 from [160] mul16u::$2 = mul16u::$1 != 0
Inversing boolean not [185] mul16s::$2 = mul16s::a#2 >= 0 from [184] mul16s::$1 = mul16s::a#2 < 0
Inversing boolean not [189] mul16s::$4 = mul16s::b#2 >= 0 from [188] mul16s::$3 = mul16s::b#2 < 0
Inversing boolean not [220] mulf_init::$3 = mulf_init::$1 != 0 from [219] mulf_init::$2 = mulf_init::$1 == 0
Inversing boolean not [248] mulf_init::$10 = mulf_init::x_255#1 != 0 from [247] mulf_init::$9 = mulf_init::x_255#1 == 0
Inversing boolean not [274] mulf16s::$2 = mulf16s::a#2 >= 0 from [273] mulf16s::$1 = mulf16s::a#2 < 0
Inversing boolean not [278] mulf16s::$4 = mulf16s::b#2 >= 0 from [277] mulf16s::$3 = mulf16s::b#2 < 0
Inversing boolean not [320] muls16u::$1 = muls16u::a#1 == 0 from [319] muls16u::$0 = muls16u::a#1 != 0
Inversing boolean not [344] muls16s::$2 = muls16s::a#2 <= 0 from [343] muls16s::$1 = muls16s::a#2 > 0
Inversing boolean not [405] mul16u_compare::$10 = mul16u_compare::ms#1 == mul16u_compare::mf#0 from [404] mul16u_compare::$9 = mul16u_compare::ms#1 != mul16u_compare::mf#0
Inversing boolean not [409] mul16u_compare::$12 = mul16u_compare::ms#2 == mul16u_compare::mn#1 from [408] mul16u_compare::$11 = mul16u_compare::ms#2 != mul16u_compare::mn#1
Inversing boolean not [415] mul16u_compare::$14 = mul16u_compare::ok#3 != 0 from [414] mul16u_compare::$13 = mul16u_compare::ok#3 == 0
Inversing boolean not [542] mul16s_compare::$10 = mul16s_compare::ms#1 == mul16s_compare::mf#0 from [541] mul16s_compare::$9 = mul16s_compare::ms#1 != mul16s_compare::mf#0
Inversing boolean not [546] mul16s_compare::$12 = mul16s_compare::ms#2 == mul16s_compare::mn#1 from [545] mul16s_compare::$11 = mul16s_compare::ms#2 != mul16s_compare::mn#1
Inversing boolean not [552] mul16s_compare::$14 = mul16s_compare::ok#3 != 0 from [551] mul16s_compare::$13 = mul16s_compare::ok#3 == 0
Successful SSA optimization Pass2UnaryNotSimplification
Alias memset::return#0 = memset::str#1 memset::return#3 memset::return#1 
Alias memset::str#2 = memset::str#3 
Alias memset::num#1 = memset::num#2 
Alias memset::c#3 = memset::c#4 
Alias memset::end#0 = memset::$2 
Alias memset::c#1 = memset::c#2 
Alias memset::dst#2 = memset::dst#3 
Alias memset::end#1 = memset::end#2 
Alias memset::str#4 = memset::str#5 
Alias print_str::str#15 = print_str::str#16 print_str::str#17 
Alias print_char_cursor#1 = print_char_cursor#134 print_char_cursor#135 print_char_cursor#69 
Alias print_char_cursor#0 = print_char_cursor#68 
Alias print_line_cursor#0 = print_ln::$0 print_line_cursor#24 print_char_cursor#2 print_line_cursor#25 print_char_cursor#71 print_line_cursor#1 print_char_cursor#3 
Alias print_char_cursor#137 = print_char_cursor#158 print_char_cursor#138 
Alias print_sint::w#3 = print_sint::w#6 print_sint::w#4 print_sint::w#8 print_sint::w#7 
Alias print_char_cursor#4 = print_char_cursor#72 
Alias print_sint::w#0 = print_sint::$4 
Alias print_char_cursor#5 = print_char_cursor#73 
Alias print_char_cursor#6 = print_char_cursor#74 print_char_cursor#75 print_char_cursor#7 
Alias print_uchar::b#0 = print_uint::$0 
Alias print_uint::w#5 = print_uint::w#6 
Alias print_char_cursor#76 = print_char_cursor#8 
Alias print_uchar::b#1 = print_uint::$2 
Alias print_char_cursor#10 = print_char_cursor#9 print_char_cursor#77 print_char_cursor#78 
Alias print_uint::w#1 = print_ulong::$0 
Alias print_ulong::dw#4 = print_ulong::dw#5 
Alias print_char_cursor#11 = print_char_cursor#79 
Alias print_uint::w#2 = print_ulong::$2 
Alias print_char_cursor#12 = print_char_cursor#80 print_char_cursor#81 print_char_cursor#13 
Alias print_char_cursor#142 = print_char_cursor#159 print_char_cursor#143 
Alias print_slong::dw#4 = print_slong::dw#7 print_slong::dw#5 print_slong::dw#9 print_slong::dw#8 
Alias print_char_cursor#14 = print_char_cursor#82 
Alias print_slong::dw#0 = print_slong::$4 
Alias print_char_cursor#15 = print_char_cursor#83 
Alias print_char_cursor#16 = print_char_cursor#84 print_char_cursor#85 print_char_cursor#17 
Alias print_uchar::b#2 = print_uchar::b#3 
Alias print_char_cursor#18 = print_char_cursor#86 
Alias print_char_cursor#19 = print_char_cursor#87 print_char_cursor#88 print_char_cursor#20 
Alias print_char_cursor#21 = print_char_cursor#90 print_char_cursor#22 
Alias print_line_cursor#2 = print_screen#3 print_screen#2 print_char_cursor#23 print_line_cursor#26 print_char_cursor#91 print_line_cursor#3 print_char_cursor#24 
Alias mul16u::a#3 = mul16u::a#4 mul16u::a#7 
Alias mul16u::mb#3 = mul16u::mb#4 mul16u::mb#5 
Alias mul16u::res#2 = mul16u::res#5 mul16u::res#4 mul16u::return#0 mul16u::res#3 mul16u::return#4 mul16u::return#1 
Alias mul16u::a#0 = mul16u::$5 
Alias mul16u::mb#1 = mul16u::$6 
Alias mul16u::res#1 = mul16u::$4 
Alias mul16u::return#2 = mul16u::return#5 
Alias mul16s::a#1 = mul16s::a#2 mul16s::a#5 
Alias mul16s::b#1 = mul16s::b#4 mul16s::b#3 
Alias mul16s::m#0 = mul16s::$0 mul16s::m#3 
Alias mul16s::$11 = mul16s::$7 
Alias mul16s::m#5 = mul16s::m#6 
Alias mul16s::a#3 = mul16s::a#4 
Alias mul16s::$12 = mul16s::$10 
Alias mul16s::return#0 = mul16s::return#3 mul16s::return#1 
Alias mulf_init::c#2 = mulf_init::c#3 
Alias mulf_init::sqr#4 = mulf_init::sqr#5 mulf_init::sqr#6 
Alias mulf_init::sqr1_lo#2 = mulf_init::sqr1_lo#4 mulf_init::sqr1_lo#5 
Alias mulf_init::sqr1_hi#3 = mulf_init::sqr1_hi#5 mulf_init::sqr1_hi#4 
Alias mulf_init::x_2#3 = mulf_init::x_2#4 mulf_init::x_2#5 
Alias mulf_init::sqr#1 = mulf_init::$6 
Alias mulf_init::c#1 = mulf_init::c#5 
Alias mulf_init::x_255#2 = mulf_init::x_255#3 
Alias mulf_init::sqr2_lo#2 = mulf_init::sqr2_lo#3 mulf_init::sqr2_lo#5 
Alias mulf_init::sqr2_hi#2 = mulf_init::sqr2_hi#3 
Alias mulf_init::dir#2 = mulf_init::dir#3 
Alias mulf_init::x_255#1 = mulf_init::$8 mulf_init::x_255#5 
Alias mulf_init::sqr2_hi#1 = mulf_init::sqr2_hi#5 
Alias mulf16u::return#0 = mulf16u::return#4 mulf16u::return#1 
Alias mulf16u::return#2 = mulf16u::return#5 
Alias mulf16s::a#1 = mulf16s::a#2 mulf16s::a#5 
Alias mulf16s::b#1 = mulf16s::b#4 mulf16s::b#3 
Alias mulf16s::m#0 = mulf16s::$0 mulf16s::m#3 
Alias mulf16s::$11 = mulf16s::$7 
Alias mulf16s::m#5 = mulf16s::m#6 
Alias mulf16s::a#3 = mulf16s::a#4 
Alias mulf16s::$12 = mulf16s::$10 
Alias mulf16s::return#0 = mulf16s::return#3 mulf16s::return#1 
Alias print_line_cursor#27 = print_line_cursor#4 print_line_cursor#47 
Alias print_char_cursor#147 = print_char_cursor#25 print_char_cursor#92 
Alias print_char_cursor#26 = print_char_cursor#93 
Alias print_line_cursor#28 = print_line_cursor#5 
Alias print_char_cursor#27 = print_char_cursor#94 print_char_cursor#95 print_char_cursor#28 
Alias print_line_cursor#29 = print_line_cursor#6 print_line_cursor#30 print_line_cursor#7 
Alias muls16u::return#0 = muls16u::m#2 muls16u::return#3 muls16u::return#1 
Alias muls16u::a#1 = muls16u::a#3 
Alias muls16u::m#0 = muls16u::m#5 
Alias muls16u::b#3 = muls16u::b#4 
Alias muls16u::m#3 = muls16u::m#4 
Alias muls16u::b#1 = muls16u::b#2 
Alias muls16u::i#2 = muls16u::i#3 
Alias muls16u::a#2 = muls16u::a#4 
Alias muls16u::m#1 = muls16u::$3 
Alias muls16s::a#1 = muls16s::a#7 muls16s::a#2 muls16s::a#5 
Alias muls16s::m#0 = muls16s::m#10 muls16s::m#7 muls16s::m#9 
Alias muls16s::b#5 = muls16s::b#6 muls16s::b#7 muls16s::b#8 
Alias muls16s::m#3 = muls16s::m#6 
Alias muls16s::b#1 = muls16s::b#3 
Alias muls16s::j#2 = muls16s::j#3 
Alias muls16s::a#3 = muls16s::a#6 
Alias muls16s::m#1 = muls16s::$4 
Alias muls16s::return#0 = muls16s::m#4 muls16s::return#3 muls16s::return#1 
Alias muls16s::m#5 = muls16s::m#8 
Alias muls16s::b#2 = muls16s::b#4 
Alias muls16s::i#2 = muls16s::i#3 
Alias muls16s::a#4 = muls16s::a#8 
Alias muls16s::m#2 = muls16s::$6 
Alias mul16u_compare::a#6 = mul16u_compare::a#9 
Alias mul16u_compare::b#6 = mul16u_compare::b#9 
Alias mul16u_compare::i#12 = mul16u_compare::i#13 
Alias print_line_cursor#89 = print_line_cursor#93 
Alias print_char_cursor#29 = print_char_cursor#96 
Alias mul16u_compare::a#1 = mul16u_compare::$4 mul16u_compare::a#3 mul16u_compare::a#4 mul16u_compare::a#13 mul16u_compare::a#14 
Alias mul16u_compare::b#1 = mul16u_compare::$5 mul16u_compare::b#3 mul16u_compare::b#4 mul16u_compare::b#13 mul16u_compare::b#14 
Alias muls16u::return#2 = muls16u::return#4 
Alias mul16u_compare::j#10 = mul16u_compare::j#9 mul16u_compare::j#8 mul16u_compare::j#6 mul16u_compare::j#7 
Alias mul16u_compare::i#10 = mul16u_compare::i#11 mul16u_compare::i#9 mul16u_compare::i#7 mul16u_compare::i#8 
Alias print_char_cursor#172 = print_char_cursor#178 print_char_cursor#180 print_char_cursor#176 print_char_cursor#173 
Alias print_line_cursor#71 = print_line_cursor#81 print_line_cursor#85 print_line_cursor#77 print_line_cursor#72 
Alias mul16u_compare::ms#0 = mul16u_compare::$6 mul16u_compare::ms#4 mul16u_compare::ms#1 mul16u_compare::ms#5 
Alias mul16u::return#3 = mul16u::return#6 
Alias mul16u_compare::mn#0 = mul16u_compare::$7 mul16u_compare::mn#3 mul16u_compare::mn#4 
Alias mulf16u::return#3 = mulf16u::return#6 
Alias mul16u_compare::mf#0 = mul16u_compare::$8 mul16u_compare::mf#5 
Alias mul16u_compare::j#4 = mul16u_compare::j#5 
Alias mul16u_compare::a#10 = mul16u_compare::a#11 
Alias mul16u_compare::b#10 = mul16u_compare::b#11 
Alias mul16u_compare::ms#2 = mul16u_compare::ms#7 
Alias mul16u_compare::mn#1 = mul16u_compare::mn#6 
Alias mul16u_compare::mf#3 = mul16u_compare::mf#4 
Alias mul16u_compare::i#5 = mul16u_compare::i#6 
Alias print_char_cursor#166 = print_char_cursor#167 
Alias print_line_cursor#63 = print_line_cursor#64 
Alias mul16u_compare::j#2 = mul16u_compare::j#3 
Alias mul16u_compare::a#12 = mul16u_compare::a#7 mul16u_compare::a#8 mul16u_compare::a#5 
Alias mul16u_compare::b#12 = mul16u_compare::b#7 mul16u_compare::b#8 mul16u_compare::b#5 
Alias mul16u_compare::i#2 = mul16u_compare::i#3 mul16u_compare::i#4 
Alias print_char_cursor#149 = print_char_cursor#168 print_char_cursor#162 print_char_cursor#161 print_char_cursor#150 
Alias print_line_cursor#48 = print_line_cursor#65 print_line_cursor#57 print_line_cursor#58 print_line_cursor#49 
Alias mul16u_compare::ms#3 = mul16u_compare::ms#6 
Alias mul16u_compare::mn#2 = mul16u_compare::mn#5 
Alias mul16u_compare::mf#1 = mul16u_compare::mf#2 
Alias print_char_cursor#30 = print_char_cursor#97 
Alias print_line_cursor#31 = print_line_cursor#8 
Alias print_char_cursor#31 = print_char_cursor#98 
Alias print_line_cursor#32 = print_line_cursor#9 
Alias print_line_cursor#10 = print_line_cursor#33 print_line_cursor#50 
Alias print_char_cursor#32 = print_char_cursor#99 
Alias print_char_cursor#100 = print_char_cursor#33 
Alias print_line_cursor#11 = print_line_cursor#34 
Alias print_char_cursor#101 = print_char_cursor#34 
Alias mul16u_error::a#1 = mul16u_error::a#2 
Alias mul16u_error::b#1 = mul16u_error::b#3 mul16u_error::b#4 mul16u_error::b#2 
Alias mul16u_error::ms#1 = mul16u_error::ms#5 mul16u_error::ms#6 mul16u_error::ms#4 mul16u_error::ms#3 mul16u_error::ms#2 
Alias mul16u_error::mn#1 = mul16u_error::mn#7 mul16u_error::mn#8 mul16u_error::mn#6 mul16u_error::mn#5 mul16u_error::mn#4 mul16u_error::mn#3 mul16u_error::mn#2 
Alias mul16u_error::mf#1 = mul16u_error::mf#9 mul16u_error::mf#10 mul16u_error::mf#8 mul16u_error::mf#7 mul16u_error::mf#6 mul16u_error::mf#5 mul16u_error::mf#4 mul16u_error::mf#3 mul16u_error::mf#2 
Alias print_line_cursor#101 = print_line_cursor#98 print_line_cursor#94 print_line_cursor#90 print_line_cursor#86 print_line_cursor#82 print_line_cursor#78 print_line_cursor#73 print_line_cursor#66 print_line_cursor#59 print_line_cursor#51 
Alias print_char_cursor#102 = print_char_cursor#35 
Alias print_char_cursor#103 = print_char_cursor#36 
Alias print_char_cursor#104 = print_char_cursor#37 
Alias print_char_cursor#105 = print_char_cursor#38 
Alias print_char_cursor#106 = print_char_cursor#39 
Alias print_char_cursor#107 = print_char_cursor#40 
Alias print_char_cursor#108 = print_char_cursor#41 
Alias print_char_cursor#109 = print_char_cursor#42 
Alias print_char_cursor#110 = print_char_cursor#43 
Alias print_char_cursor#111 = print_char_cursor#44 
Alias print_line_cursor#12 = print_line_cursor#35 print_line_cursor#36 print_line_cursor#13 
Alias print_char_cursor#112 = print_char_cursor#45 print_char_cursor#113 print_char_cursor#46 
Alias mul16s_compare::a#6 = mul16s_compare::a#9 
Alias mul16s_compare::b#6 = mul16s_compare::b#9 
Alias mul16s_compare::i#12 = mul16s_compare::i#13 
Alias print_line_cursor#91 = print_line_cursor#95 
Alias print_char_cursor#114 = print_char_cursor#47 
Alias mul16s_compare::a#1 = mul16s_compare::$4 mul16s_compare::a#3 mul16s_compare::a#4 mul16s_compare::a#13 mul16s_compare::a#14 
Alias mul16s_compare::b#1 = mul16s_compare::$5 mul16s_compare::b#3 mul16s_compare::b#4 mul16s_compare::b#13 mul16s_compare::b#14 
Alias muls16s::return#2 = muls16s::return#4 
Alias mul16s_compare::j#10 = mul16s_compare::j#9 mul16s_compare::j#8 mul16s_compare::j#6 mul16s_compare::j#7 
Alias mul16s_compare::i#10 = mul16s_compare::i#11 mul16s_compare::i#9 mul16s_compare::i#7 mul16s_compare::i#8 
Alias print_char_cursor#174 = print_char_cursor#179 print_char_cursor#181 print_char_cursor#177 print_char_cursor#175 
Alias print_line_cursor#74 = print_line_cursor#83 print_line_cursor#87 print_line_cursor#79 print_line_cursor#75 
Alias mul16s_compare::ms#0 = mul16s_compare::$6 mul16s_compare::ms#4 mul16s_compare::ms#1 mul16s_compare::ms#5 
Alias mul16s::return#2 = mul16s::return#4 
Alias mul16s_compare::mn#0 = mul16s_compare::$7 mul16s_compare::mn#3 mul16s_compare::mn#4 
Alias mulf16s::return#2 = mulf16s::return#4 
Alias mul16s_compare::mf#0 = mul16s_compare::$8 mul16s_compare::mf#5 
Alias mul16s_compare::j#4 = mul16s_compare::j#5 
Alias mul16s_compare::a#10 = mul16s_compare::a#11 
Alias mul16s_compare::b#10 = mul16s_compare::b#11 
Alias mul16s_compare::ms#2 = mul16s_compare::ms#7 
Alias mul16s_compare::mn#1 = mul16s_compare::mn#6 
Alias mul16s_compare::mf#3 = mul16s_compare::mf#4 
Alias mul16s_compare::i#5 = mul16s_compare::i#6 
Alias print_char_cursor#169 = print_char_cursor#170 
Alias print_line_cursor#67 = print_line_cursor#68 
Alias mul16s_compare::j#2 = mul16s_compare::j#3 
Alias mul16s_compare::a#12 = mul16s_compare::a#7 mul16s_compare::a#8 mul16s_compare::a#5 
Alias mul16s_compare::b#12 = mul16s_compare::b#7 mul16s_compare::b#8 mul16s_compare::b#5 
Alias mul16s_compare::i#2 = mul16s_compare::i#3 mul16s_compare::i#4 
Alias print_char_cursor#153 = print_char_cursor#171 print_char_cursor#165 print_char_cursor#164 print_char_cursor#154 
Alias print_line_cursor#52 = print_line_cursor#69 print_line_cursor#60 print_line_cursor#61 print_line_cursor#53 
Alias mul16s_compare::ms#3 = mul16s_compare::ms#6 
Alias mul16s_compare::mn#2 = mul16s_compare::mn#5 
Alias mul16s_compare::mf#1 = mul16s_compare::mf#2 
Alias print_char_cursor#115 = print_char_cursor#48 
Alias print_line_cursor#14 = print_line_cursor#37 
Alias print_char_cursor#116 = print_char_cursor#49 
Alias print_line_cursor#15 = print_line_cursor#38 
Alias print_line_cursor#16 = print_line_cursor#39 print_line_cursor#54 
Alias print_char_cursor#117 = print_char_cursor#50 
Alias print_char_cursor#118 = print_char_cursor#51 
Alias print_line_cursor#17 = print_line_cursor#40 
Alias print_char_cursor#119 = print_char_cursor#52 
Alias mul16s_error::a#1 = mul16s_error::a#2 
Alias mul16s_error::b#1 = mul16s_error::b#3 mul16s_error::b#4 mul16s_error::b#2 
Alias mul16s_error::ms#1 = mul16s_error::ms#5 mul16s_error::ms#6 mul16s_error::ms#4 mul16s_error::ms#3 mul16s_error::ms#2 
Alias mul16s_error::mn#1 = mul16s_error::mn#7 mul16s_error::mn#8 mul16s_error::mn#6 mul16s_error::mn#5 mul16s_error::mn#4 mul16s_error::mn#3 mul16s_error::mn#2 
Alias mul16s_error::mf#1 = mul16s_error::mf#9 mul16s_error::mf#10 mul16s_error::mf#8 mul16s_error::mf#7 mul16s_error::mf#6 mul16s_error::mf#5 mul16s_error::mf#4 mul16s_error::mf#3 mul16s_error::mf#2 
Alias print_line_cursor#100 = print_line_cursor#102 print_line_cursor#96 print_line_cursor#92 print_line_cursor#88 print_line_cursor#84 print_line_cursor#80 print_line_cursor#76 print_line_cursor#70 print_line_cursor#62 print_line_cursor#55 
Alias print_char_cursor#120 = print_char_cursor#53 
Alias print_char_cursor#121 = print_char_cursor#54 
Alias print_char_cursor#122 = print_char_cursor#55 
Alias print_char_cursor#123 = print_char_cursor#56 
Alias print_char_cursor#124 = print_char_cursor#57 
Alias print_char_cursor#125 = print_char_cursor#58 
Alias print_char_cursor#126 = print_char_cursor#59 
Alias print_char_cursor#127 = print_char_cursor#60 
Alias print_char_cursor#128 = print_char_cursor#61 
Alias print_char_cursor#129 = print_char_cursor#62 
Alias print_line_cursor#18 = print_line_cursor#41 print_line_cursor#42 print_line_cursor#19 
Alias print_char_cursor#130 = print_char_cursor#63 print_char_cursor#131 print_char_cursor#64 
Alias print_screen#0 = print_line_cursor#20 print_char_cursor#65 print_line_cursor#56 print_char_cursor#156 print_screen#7 print_screen#6 print_screen#4 print_screen#1 
Alias print_line_cursor#21 = print_line_cursor#43 print_line_cursor#44 print_line_cursor#22 
Alias print_char_cursor#132 = print_char_cursor#66 print_char_cursor#133 print_char_cursor#67 
Successful SSA optimization Pass2AliasElimination
Alias mul16u::a#3 = mul16u::a#5 
Alias mul16u::mb#2 = mul16u::mb#3 
Alias mul16s::b#1 = mul16s::b#2 
Alias mul16s::a#1 = mul16s::a#3 
Alias mulf_init::sqr1_lo#2 = mulf_init::sqr1_lo#3 
Alias mulf_init::sqr1_hi#2 = mulf_init::sqr1_hi#3 
Alias mulf_init::c#1 = mulf_init::c#4 
Alias mulf_init::sqr2_lo#2 = mulf_init::sqr2_lo#4 
Alias mulf_init::x_255#1 = mulf_init::x_255#4 
Alias mulf_init::sqr2_hi#1 = mulf_init::sqr2_hi#4 
Alias mulf16s::b#1 = mulf16s::b#2 
Alias mulf16s::a#1 = mulf16s::a#3 
Alias mul16u_compare::ms#0 = mul16u_compare::ms#2 mul16u_compare::ms#3 
Alias mul16u_compare::mn#0 = mul16u_compare::mn#1 mul16u_compare::mn#2 
Alias mul16u_compare::j#10 = mul16u_compare::j#4 mul16u_compare::j#2 
Alias mul16u_compare::a#1 = mul16u_compare::a#10 mul16u_compare::a#12 
Alias mul16u_compare::b#1 = mul16u_compare::b#10 mul16u_compare::b#12 
Alias mul16u_compare::mf#0 = mul16u_compare::mf#3 mul16u_compare::mf#1 
Alias mul16u_compare::i#10 = mul16u_compare::i#5 mul16u_compare::i#2 
Alias print_char_cursor#149 = print_char_cursor#166 print_char_cursor#172 
Alias print_line_cursor#48 = print_line_cursor#63 print_line_cursor#71 
Alias mul16s_compare::ms#0 = mul16s_compare::ms#2 mul16s_compare::ms#3 
Alias mul16s_compare::mn#0 = mul16s_compare::mn#1 mul16s_compare::mn#2 
Alias mul16s_compare::j#10 = mul16s_compare::j#4 mul16s_compare::j#2 
Alias mul16s_compare::a#1 = mul16s_compare::a#10 mul16s_compare::a#12 
Alias mul16s_compare::b#1 = mul16s_compare::b#10 mul16s_compare::b#12 
Alias mul16s_compare::mf#0 = mul16s_compare::mf#3 mul16s_compare::mf#1 
Alias mul16s_compare::i#10 = mul16s_compare::i#5 mul16s_compare::i#2 
Alias print_char_cursor#153 = print_char_cursor#169 print_char_cursor#174 
Alias print_line_cursor#52 = print_line_cursor#67 print_line_cursor#74 
Successful SSA optimization Pass2AliasElimination
Identical Phi Values memset::num#1 memset::num#0
Identical Phi Values memset::str#2 memset::str#0
Identical Phi Values memset::c#3 memset::c#0
Identical Phi Values memset::end#1 memset::end#0
Identical Phi Values memset::str#4 memset::str#2
Identical Phi Values memset::c#1 memset::c#3
Identical Phi Values print_char_cursor#0 print_char_cursor#21
Identical Phi Values print_char_cursor#70 print_char_cursor#136
Identical Phi Values print_char_cursor#4 print_char_cursor#21
Identical Phi Values print_char_cursor#5 print_char_cursor#21
Identical Phi Values print_char_cursor#6 print_char_cursor#10
Identical Phi Values print_char_cursor#76 print_char_cursor#19
Identical Phi Values print_char_cursor#10 print_char_cursor#19
Identical Phi Values print_char_cursor#11 print_char_cursor#10
Identical Phi Values print_char_cursor#12 print_char_cursor#10
Identical Phi Values print_char_cursor#14 print_char_cursor#21
Identical Phi Values print_char_cursor#15 print_char_cursor#21
Identical Phi Values print_char_cursor#16 print_char_cursor#12
Identical Phi Values print_char_cursor#18 print_char_cursor#21
Identical Phi Values print_char_cursor#19 print_char_cursor#21
Identical Phi Values print_line_cursor#2 print_screen#5
Identical Phi Values mul16s::a#1 mul16s::a#0
Identical Phi Values mul16s::b#1 mul16s::b#0
Identical Phi Values mulf16s::a#1 mulf16s::a#0
Identical Phi Values mulf16s::b#1 mulf16s::b#0
Identical Phi Values print_screen#5 print_screen#0
Identical Phi Values print_line_cursor#46 print_screen#0
Identical Phi Values print_char_cursor#146 print_screen#0
Identical Phi Values print_line_cursor#27 print_line_cursor#2
Identical Phi Values print_char_cursor#147 print_line_cursor#2
Identical Phi Values print_char_cursor#26 print_char_cursor#31
Identical Phi Values print_line_cursor#28 print_line_cursor#32
Identical Phi Values print_char_cursor#27 print_char_cursor#116
Identical Phi Values print_line_cursor#29 print_line_cursor#15
Identical Phi Values muls16u::a#1 muls16u::a#0
Identical Phi Values muls16u::b#3 muls16u::b#0
Identical Phi Values muls16u::a#2 muls16u::a#1
Identical Phi Values muls16u::b#1 muls16u::b#3
Identical Phi Values muls16s::a#1 muls16s::a#0
Identical Phi Values muls16s::b#5 muls16s::b#0
Identical Phi Values muls16s::a#3 muls16s::a#1
Identical Phi Values muls16s::b#1 muls16s::b#5
Identical Phi Values muls16s::a#4 muls16s::a#1
Identical Phi Values muls16s::b#2 muls16s::b#5
Identical Phi Values print_char_cursor#160 print_char_cursor#147
Identical Phi Values print_line_cursor#97 print_line_cursor#27
Identical Phi Values print_char_cursor#29 print_char_cursor#1
Identical Phi Values mul16u_compare::i#10 mul16u_compare::i#12
Identical Phi Values print_char_cursor#149 print_char_cursor#29
Identical Phi Values print_line_cursor#48 print_line_cursor#89
Identical Phi Values print_char_cursor#30 print_char_cursor#112
Identical Phi Values print_line_cursor#31 print_line_cursor#12
Identical Phi Values print_line_cursor#10 print_line_cursor#0
Identical Phi Values print_char_cursor#32 print_line_cursor#0
Identical Phi Values print_char_cursor#100 print_char_cursor#1
Identical Phi Values print_line_cursor#11 print_line_cursor#0
Identical Phi Values print_char_cursor#101 print_line_cursor#0
Identical Phi Values print_char_cursor#151 print_char_cursor#149
Identical Phi Values mul16u_error::a#1 mul16u_error::a#0
Identical Phi Values mul16u_error::b#1 mul16u_error::b#0
Identical Phi Values mul16u_error::ms#1 mul16u_error::ms#0
Identical Phi Values mul16u_error::mn#1 mul16u_error::mn#0
Identical Phi Values mul16u_error::mf#1 mul16u_error::mf#0
Identical Phi Values print_line_cursor#101 print_line_cursor#48
Identical Phi Values print_char_cursor#102 print_char_cursor#1
Identical Phi Values print_char_cursor#103 print_char_cursor#10
Identical Phi Values print_char_cursor#104 print_char_cursor#1
Identical Phi Values print_char_cursor#105 print_char_cursor#10
Identical Phi Values print_char_cursor#106 print_char_cursor#1
Identical Phi Values print_char_cursor#107 print_char_cursor#12
Identical Phi Values print_char_cursor#108 print_char_cursor#1
Identical Phi Values print_char_cursor#109 print_char_cursor#12
Identical Phi Values print_char_cursor#110 print_char_cursor#1
Identical Phi Values print_char_cursor#111 print_char_cursor#12
Identical Phi Values print_line_cursor#12 print_line_cursor#0
Identical Phi Values print_char_cursor#112 print_line_cursor#0
Identical Phi Values print_char_cursor#163 print_char_cursor#26
Identical Phi Values print_line_cursor#99 print_line_cursor#28
Identical Phi Values print_char_cursor#114 print_char_cursor#1
Identical Phi Values mul16s_compare::i#10 mul16s_compare::i#12
Identical Phi Values print_char_cursor#153 print_char_cursor#114
Identical Phi Values print_line_cursor#52 print_line_cursor#91
Identical Phi Values print_char_cursor#115 print_char_cursor#130
Identical Phi Values print_line_cursor#14 print_line_cursor#18
Identical Phi Values print_line_cursor#16 print_line_cursor#0
Identical Phi Values print_char_cursor#117 print_line_cursor#0
Identical Phi Values print_char_cursor#118 print_char_cursor#1
Identical Phi Values print_line_cursor#17 print_line_cursor#0
Identical Phi Values print_char_cursor#119 print_line_cursor#0
Identical Phi Values print_char_cursor#155 print_char_cursor#153
Identical Phi Values mul16s_error::a#1 mul16s_error::a#0
Identical Phi Values mul16s_error::b#1 mul16s_error::b#0
Identical Phi Values mul16s_error::ms#1 mul16s_error::ms#0
Identical Phi Values mul16s_error::mn#1 mul16s_error::mn#0
Identical Phi Values mul16s_error::mf#1 mul16s_error::mf#0
Identical Phi Values print_line_cursor#100 print_line_cursor#52
Identical Phi Values print_char_cursor#120 print_char_cursor#1
Identical Phi Values print_char_cursor#121 print_char_cursor#6
Identical Phi Values print_char_cursor#122 print_char_cursor#1
Identical Phi Values print_char_cursor#123 print_char_cursor#6
Identical Phi Values print_char_cursor#124 print_char_cursor#1
Identical Phi Values print_char_cursor#125 print_char_cursor#16
Identical Phi Values print_char_cursor#126 print_char_cursor#1
Identical Phi Values print_char_cursor#127 print_char_cursor#16
Identical Phi Values print_char_cursor#128 print_char_cursor#1
Identical Phi Values print_char_cursor#129 print_char_cursor#16
Identical Phi Values print_line_cursor#18 print_line_cursor#0
Identical Phi Values print_char_cursor#130 print_line_cursor#0
Identical Phi Values print_line_cursor#21 print_line_cursor#29
Identical Phi Values print_char_cursor#132 print_char_cursor#27
Successful SSA optimization Pass2IdenticalPhiElimination
Identical Phi Values memset::return#0 memset::str#0
Identical Phi Values print_char_cursor#137 print_char_cursor#1
Identical Phi Values print_char_cursor#139 print_char_cursor#21
Identical Phi Values print_char_cursor#142 print_char_cursor#1
Identical Phi Values print_char_cursor#144 print_char_cursor#21
Identical Phi Values print_line_cursor#89 print_screen#0
Identical Phi Values print_char_cursor#31 print_line_cursor#0
Identical Phi Values print_line_cursor#32 print_line_cursor#0
Identical Phi Values print_line_cursor#91 print_line_cursor#32
Identical Phi Values print_char_cursor#116 print_line_cursor#0
Identical Phi Values print_line_cursor#15 print_line_cursor#0
Successful SSA optimization Pass2IdenticalPhiElimination
Simple Condition memset::$1 [2] if(memset::num#0<=0) goto memset::@1
Simple Condition memset::$3 [9] if(memset::dst#2!=memset::end#0) goto memset::@4
Simple Condition print_str::$1 [16] if(0!=*print_str::str#15) goto print_str::@2
Simple Condition print_ln::$1 [26] if(print_line_cursor#0<print_char_cursor#136) goto print_ln::@1
Simple Condition print_sint::$0 [30] if(print_sint::w#3<0) goto print_sint::@1
Simple Condition print_slong::$0 [61] if(print_slong::dw#4<0) goto print_slong::@1
Simple Condition mul16u::$0 [100] if(mul16u::a#3!=0) goto mul16u::@2
Simple Condition mul16u::$3 [103] if(mul16u::$1==0) goto mul16u::@4
Simple Condition mul16s::$2 [116] if(mul16s::a#0>=0) goto mul16s::@1
Simple Condition mul16s::$4 [119] if(mul16s::b#0>=0) goto mul16s::@2
Simple Condition mulf_init::$0 [138] if(mulf_init::sqr1_lo#2!=mulf_sqr1_lo+$200) goto mulf_init::@2
Simple Condition mulf_init::$3 [142] if(mulf_init::$1!=0) goto mulf_init::@4
Simple Condition mulf_init::$7 [159] if(mulf_init::sqr2_lo#2!=mulf_sqr2_lo+$1ff) goto mulf_init::@7
Simple Condition mulf_init::$10 [165] if(mulf_init::x_255#1!=0) goto mulf_init::@9
Simple Condition mulf16s::$2 [185] if(mulf16s::a#0>=0) goto mulf16s::@1
Simple Condition mulf16s::$4 [188] if(mulf16s::b#0>=0) goto mulf16s::@2
Simple Condition muls16u::$1 [213] if(muls16u::a#0==0) goto muls16u::@1
Simple Condition muls16u::$2 [218] if(muls16u::i#2!=muls16u::a#0) goto muls16u::@4
Simple Condition muls16s::$0 [225] if(muls16s::a#0<0) goto muls16s::@1
Simple Condition muls16s::$2 [228] if(muls16s::a#0<=0) goto muls16s::@2
Simple Condition muls16s::$3 [232] if(muls16s::j#2!=muls16s::a#0) goto muls16s::@6
Simple Condition muls16s::$5 [238] if(muls16s::i#2!=muls16s::a#0) goto muls16s::@8
Simple Condition mul16u_compare::$10 [271] if(mul16u_compare::ms#0==mul16u_compare::mf#0) goto mul16u_compare::@3
Simple Condition mul16u_compare::$12 [274] if(mul16u_compare::ms#0==mul16u_compare::mn#0) goto mul16u_compare::@4
Simple Condition mul16u_compare::$14 [278] if(mul16u_compare::ok#3!=0) goto mul16u_compare::@5
Simple Condition mul16u_compare::$16 [282] if(mul16u_compare::j#1!=rangelast(0,$f)) goto mul16u_compare::@2
Simple Condition mul16u_compare::$17 [295] if(mul16u_compare::i#1!=rangelast(0,$f)) goto mul16u_compare::@1
Simple Condition mul16s_compare::$10 [366] if(mul16s_compare::ms#0==mul16s_compare::mf#0) goto mul16s_compare::@3
Simple Condition mul16s_compare::$12 [369] if(mul16s_compare::ms#0==mul16s_compare::mn#0) goto mul16s_compare::@4
Simple Condition mul16s_compare::$14 [373] if(mul16s_compare::ok#3!=0) goto mul16s_compare::@5
Simple Condition mul16s_compare::$16 [377] if(mul16s_compare::j#1!=rangelast(0,$f)) goto mul16s_compare::@2
Simple Condition mul16s_compare::$17 [390] if(mul16s_compare::i#1!=rangelast(0,$f)) goto mul16s_compare::@1
Successful SSA optimization Pass2ConditionalJumpSimplification
Constant print_char::ch#1 = '-'
Constant print_char::ch#2 = ' '
Constant print_char::ch#3 = '-'
Constant print_char::ch#4 = ' '
Constant memset::c#0 = ' '
Constant memset::num#0 = $3e8
Constant mul16u::res#0 = 0
Constant mulf_init::sqr#0 = 0
Constant mulf_init::x_2#0 = 0
Constant mulf_init::c#0 = 0
Constant mulf_init::sqr1_hi#0 = mulf_sqr1_hi+1
Constant mulf_init::sqr1_lo#0 = mulf_sqr1_lo+1
Constant mulf_init::x_255#0 = -1
Constant mulf_init::dir#0 = $ff
Constant mulf_init::sqr2_hi#0 = mulf_sqr2_hi
Constant mulf_init::sqr2_lo#0 = mulf_sqr2_lo
Constant mulf_init::dir#1 = 1
Constant muls16u::m#0 = 0
Constant muls16u::i#0 = 0
Constant muls16s::m#0 = 0
Constant muls16s::i#0 = 0
Constant muls16s::j#0 = 0
Constant mul16u_compare::a#0 = 0
Constant mul16u_compare::b#0 = 0
Constant mul16u_compare::i#0 = 0
Constant print_str::str#1 = mul16u_compare::str
Constant mul16u_compare::j#0 = 0
Constant mul16u_compare::ok#0 = 1
Constant mul16u_compare::ok#1 = 0
Constant mul16u_compare::ok#2 = 0
Constant print_str::str#2 = mul16u_compare::str1
Constant print_str::str#3 = mul16u_error::str
Constant print_str::str#4 = mul16u_error::str1
Constant print_str::str#5 = mul16u_error::str2
Constant print_str::str#6 = mul16u_error::str3
Constant print_str::str#7 = mul16u_error::str4
Constant mul16s_compare::a#0 = -$7fff
Constant mul16s_compare::b#0 = -$7fff
Constant mul16s_compare::i#0 = 0
Constant print_str::str#8 = mul16s_compare::str
Constant mul16s_compare::j#0 = 0
Constant mul16s_compare::ok#0 = 1
Constant mul16s_compare::ok#1 = 0
Constant mul16s_compare::ok#2 = 0
Constant print_str::str#9 = mul16s_compare::str1
Constant print_str::str#10 = mul16s_error::str
Constant print_str::str#11 = mul16s_error::str1
Constant print_str::str#12 = mul16s_error::str2
Constant print_str::str#13 = mul16s_error::str3
Constant print_str::str#14 = mul16s_error::str4
Constant print_screen#0 = (byte*) 1024
Successful SSA optimization Pass2ConstantIdentification
Constant memset::str#0 = (void*)print_screen#0
Successful SSA optimization Pass2ConstantIdentification
Constant memset::$4 = (byte*)memset::str#0
Constant memset::dst#0 = (byte*)memset::str#0
Constant memset::return#2 = memset::str#0
Successful SSA optimization Pass2ConstantIdentification
if() condition always false - eliminating [2] if(memset::num#0<=0) goto memset::@1
Successful SSA optimization Pass2ConstantIfs
Consolidated constant strings into str
Consolidated constant strings into str1
Consolidated constant strings into str2
Consolidated constant strings into str3
Consolidated constant strings into str4
Successful SSA optimization Pass2ConstantStringConsolidation
Resolved ranged next value [280] mul16u_compare::j#1 = ++ mul16u_compare::j#10 to ++
Resolved ranged comparison value [282] if(mul16u_compare::j#1!=rangelast(0,$f)) goto mul16u_compare::@2 to $10
Resolved ranged next value [293] mul16u_compare::i#1 = ++ mul16u_compare::i#12 to ++
Resolved ranged comparison value [295] if(mul16u_compare::i#1!=rangelast(0,$f)) goto mul16u_compare::@1 to $10
Resolved ranged next value [375] mul16s_compare::j#1 = ++ mul16s_compare::j#10 to ++
Resolved ranged comparison value [377] if(mul16s_compare::j#1!=rangelast(0,$f)) goto mul16s_compare::@2 to $10
Resolved ranged next value [388] mul16s_compare::i#1 = ++ mul16s_compare::i#12 to ++
Resolved ranged comparison value [390] if(mul16s_compare::i#1!=rangelast(0,$f)) goto mul16s_compare::@1 to $10
Eliminating unused constant memset::return#2
Successful SSA optimization PassNEliminateUnusedVars
Removing unused procedure __start
Removing unused procedure block __start
Removing unused procedure block __start::__init1
Removing unused procedure block __start::@1
Removing unused procedure block __start::@2
Removing unused procedure block __start::@return
Successful SSA optimization PassNEliminateEmptyStart
Adding number conversion cast (unumber) $10 in [195] if(mul16u_compare::j#1!=$10) goto mul16u_compare::@2
Adding number conversion cast (unumber) $10 in [205] if(mul16u_compare::i#1!=$10) goto mul16u_compare::@1
Adding number conversion cast (unumber) $10 in [252] if(mul16s_compare::j#1!=$10) goto mul16s_compare::@2
Adding number conversion cast (unumber) $10 in [262] if(mul16s_compare::i#1!=$10) goto mul16s_compare::@1
Successful SSA optimization PassNAddNumberTypeConversions
Simplifying constant integer cast $10
Simplifying constant integer cast $10
Simplifying constant integer cast $10
Simplifying constant integer cast $10
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type $10
Finalized unsigned number type $10
Finalized unsigned number type $10
Finalized unsigned number type $10
Successful SSA optimization PassNFinalizeNumberTypeConversions
Constant right-side identified [0] memset::end#0 = memset::$4 + memset::num#0
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant memset::end#0 = memset::$4+memset::num#0
Successful SSA optimization Pass2ConstantIdentification
Inlining Noop Cast [81] mul16s::$13 = (word)mul16s::b#0 keeping mul16s::b#0
Inlining Noop Cast [87] mul16s::$14 = (word)mul16s::a#0 keeping mul16s::a#0
Inlining Noop Cast [133] mulf16s::$13 = (word)mulf16s::b#0 keeping mulf16s::b#0
Inlining Noop Cast [139] mulf16s::$14 = (word)mulf16s::a#0 keeping mulf16s::a#0
Successful SSA optimization Pass2NopCastInlining
Inlining constant with var siblings memset::dst#0
Inlining constant with var siblings print_str::str#1
Inlining constant with var siblings print_str::str#2
Inlining constant with var siblings print_str::str#3
Inlining constant with var siblings print_str::str#4
Inlining constant with var siblings print_str::str#5
Inlining constant with var siblings print_str::str#6
Inlining constant with var siblings print_str::str#7
Inlining constant with var siblings print_str::str#8
Inlining constant with var siblings print_str::str#9
Inlining constant with var siblings print_str::str#10
Inlining constant with var siblings print_str::str#11
Inlining constant with var siblings print_str::str#12
Inlining constant with var siblings print_str::str#13
Inlining constant with var siblings print_str::str#14
Inlining constant with var siblings print_char::ch#1
Inlining constant with var siblings print_char::ch#2
Inlining constant with var siblings print_char::ch#3
Inlining constant with var siblings print_char::ch#4
Inlining constant with var siblings mul16u::res#0
Inlining constant with var siblings mulf_init::sqr#0
Inlining constant with var siblings mulf_init::x_2#0
Inlining constant with var siblings mulf_init::c#0
Inlining constant with var siblings mulf_init::sqr1_hi#0
Inlining constant with var siblings mulf_init::sqr1_lo#0
Inlining constant with var siblings mulf_init::x_255#0
Inlining constant with var siblings mulf_init::dir#0
Inlining constant with var siblings mulf_init::sqr2_hi#0
Inlining constant with var siblings mulf_init::sqr2_lo#0
Inlining constant with var siblings mulf_init::dir#1
Inlining constant with var siblings muls16u::m#0
Inlining constant with var siblings muls16u::i#0
Inlining constant with var siblings muls16s::m#0
Inlining constant with var siblings muls16s::i#0
Inlining constant with var siblings muls16s::j#0
Inlining constant with var siblings mul16u_compare::a#0
Inlining constant with var siblings mul16u_compare::b#0
Inlining constant with var siblings mul16u_compare::i#0
Inlining constant with var siblings mul16u_compare::j#0
Inlining constant with var siblings mul16u_compare::ok#0
Inlining constant with var siblings mul16u_compare::ok#1
Inlining constant with var siblings mul16u_compare::ok#2
Inlining constant with var siblings mul16s_compare::a#0
Inlining constant with var siblings mul16s_compare::b#0
Inlining constant with var siblings mul16s_compare::i#0
Inlining constant with var siblings mul16s_compare::j#0
Inlining constant with var siblings mul16s_compare::ok#0
Inlining constant with var siblings mul16s_compare::ok#1
Inlining constant with var siblings mul16s_compare::ok#2
Constant inlined mulf_init::sqr2_lo#0 = mulf_sqr2_lo
Constant inlined mul16u_error::str1 = str1
Constant inlined mul16u_error::str3 = str3
Constant inlined mulf_init::sqr2_hi#0 = mulf_sqr2_hi
Constant inlined mul16u_error::str2 = str2
Constant inlined mul16u_error::str4 = str4
Constant inlined muls16s::j#0 = 0
Constant inlined mul16u_compare::ok#0 = 1
Constant inlined mulf_init::dir#1 = 1
Constant inlined mulf_init::dir#0 = $ff
Constant inlined muls16u::i#0 = 0
Constant inlined mul16u_compare::ok#2 = 0
Constant inlined mul16u_compare::ok#1 = 0
Constant inlined mul16s_error::str1 = str1
Constant inlined muls16u::m#0 = 0
Constant inlined mul16s_compare::a#0 = -$7fff
Constant inlined mulf_init::x_255#0 = -1
Constant inlined mul16s_error::str4 = str4
Constant inlined mul16s_error::str3 = str3
Constant inlined mul16s_error::str2 = str2
Constant inlined mulf_init::x_2#0 = 0
Constant inlined mul16u_compare::a#0 = 0
Constant inlined mul16s_compare::j#0 = 0
Constant inlined mul16u_compare::j#0 = 0
Constant inlined print_str::str#9 = mul16s_compare::str1
Constant inlined mulf_init::sqr1_hi#0 = mulf_sqr1_hi+1
Constant inlined mulf_init::sqr1_lo#0 = mulf_sqr1_lo+1
Constant inlined print_str::str#4 = str1
Constant inlined print_str::str#3 = mul16u_error::str
Constant inlined print_str::str#2 = mul16u_compare::str1
Constant inlined memset::dst#0 = (byte*)memset::str#0
Constant inlined print_str::str#1 = str
Constant inlined print_str::str#8 = str
Constant inlined print_str::str#7 = str4
Constant inlined print_str::str#6 = str3
Constant inlined print_str::str#5 = str2
Constant inlined mulf_init::c#0 = 0
Constant inlined muls16s::i#0 = 0
Constant inlined mul16s_compare::str = str
Constant inlined print_str::str#13 = str3
Constant inlined print_str::str#12 = str2
Constant inlined print_str::str#11 = str1
Constant inlined print_str::str#10 = mul16s_error::str
Constant inlined muls16s::m#0 = 0
Constant inlined mul16s_compare::ok#0 = 1
Constant inlined mul16s_compare::ok#1 = 0
Constant inlined print_str::str#14 = str4
Constant inlined mul16s_compare::ok#2 = 0
Constant inlined memset::$4 = (byte*)memset::str#0
Constant inlined mul16u::res#0 = 0
Constant inlined mul16s_compare::b#0 = -$7fff
Constant inlined mul16u_compare::b#0 = 0
Constant inlined mul16s_compare::i#0 = 0
Constant inlined mulf_init::sqr#0 = 0
Constant inlined mul16u_compare::i#0 = 0
Constant inlined print_char::ch#3 = '-'
Constant inlined print_char::ch#2 = ' '
Constant inlined print_char::ch#4 = ' '
Constant inlined print_char::ch#1 = '-'
Constant inlined mul16u_compare::str = str
Successful SSA optimization Pass2ConstantInlining
Added new block during phi lifting print_ln::@3(between print_ln::@1 and print_ln::@1)
Added new block during phi lifting mul16u::@6(between mul16u::@2 and mul16u::@4)
Added new block during phi lifting mul16s::@6(between mul16s::@5 and mul16s::@1)
Added new block during phi lifting mul16s::@7(between mul16s::@1 and mul16s::@2)
Added new block during phi lifting mulf_init::@11(between mulf_init::@2 and mulf_init::@4)
Added new block during phi lifting mulf_init::@12(between mulf_init::@7 and mulf_init::@9)
Added new block during phi lifting mulf16s::@6(between mulf16s::@5 and mulf16s::@1)
Added new block during phi lifting mulf16s::@7(between mulf16s::@1 and mulf16s::@2)
Added new block during phi lifting muls16u::@5(between muls16u::@3 and muls16u::@1)
Added new block during phi lifting muls16s::@9(between muls16s::@5 and muls16s::@2)
Added new block during phi lifting muls16s::@10(between muls16s::@7 and muls16s::@2)
Added new block during phi lifting mul16u_compare::@19(between mul16u_compare::@9 and mul16u_compare::@1)
Added new block during phi lifting mul16u_compare::@20(between mul16u_compare::@5 and mul16u_compare::@2)
Added new block during phi lifting mul16u_compare::@21(between mul16u_compare::@3 and mul16u_compare::@4)
Added new block during phi lifting mul16s_compare::@19(between mul16s_compare::@9 and mul16s_compare::@1)
Added new block during phi lifting mul16s_compare::@20(between mul16s_compare::@5 and mul16s_compare::@2)
Added new block during phi lifting mul16s_compare::@21(between mul16s_compare::@3 and mul16s_compare::@4)
Adding NOP phi() at start of main::@1
Adding NOP phi() at start of main::@2
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@4
Adding NOP phi() at start of print_cls
Adding NOP phi() at start of print_cls::@1
Adding NOP phi() at start of mulf_init
Adding NOP phi() at start of mulf_init::@3
Adding NOP phi() at start of mulf_init::@10
Adding NOP phi() at start of mul16u_compare
Adding NOP phi() at start of mul16u_compare::@6
Adding NOP phi() at start of mul16u_compare::@7
Adding NOP phi() at start of mul16u_compare::@15
Adding NOP phi() at start of mul16u_compare::@18
Adding NOP phi() at start of mul16s_compare::@6
Adding NOP phi() at start of mul16s_compare::@7
Adding NOP phi() at start of mul16s_compare::@15
Adding NOP phi() at start of mul16s_compare::@18
Adding NOP phi() at start of memset
Adding NOP phi() at start of memset::@2
Adding NOP phi() at start of memset::@1
Adding NOP phi() at start of muls16u::@2
Adding NOP phi() at start of mul16u::@3
Adding NOP phi() at start of mul16u_error::@11
Adding NOP phi() at start of print_ln::@2
Adding NOP phi() at start of muls16s::@4
Adding NOP phi() at start of muls16s::@1
Adding NOP phi() at start of mul16s_error::@11
Adding NOP phi() at start of print_uint::@2
Adding NOP phi() at start of print_ulong::@2
Adding NOP phi() at start of print_sint::@6
Adding NOP phi() at start of print_slong::@6
Adding NOP phi() at start of print_uchar::@2
CALL GRAPH
Calls in [main] to print_cls:1 mulf_init:3 mul16u_compare:5 mul16s_compare:7 
Calls in [print_cls] to memset:11 
Calls in [mul16u_compare] to print_str:61 muls16u:69 mul16u:76 mulf16u:83 mul16u_error:99 print_ln:107 print_str:109 print_ln:112 
Calls in [mul16s_compare] to print_str:125 muls16s:133 mul16s:138 mulf16s:143 mul16s_error:159 print_ln:168 print_str:170 print_ln:173 
Calls in [print_str] to print_char:201 
Calls in [mul16u_error] to print_str:242 print_uint:246 print_str:248 print_uint:252 print_str:254 print_ulong:258 print_str:260 print_ulong:264 print_str:266 print_ulong:270 print_ln:272 
Calls in [mul16s] to mul16u:307 
Calls in [mulf16s] to mulf16u:330 
Calls in [mul16s_error] to print_str:350 print_sint:353 print_str:355 print_sint:358 print_str:360 print_slong:363 print_str:365 print_slong:368 print_str:370 print_slong:373 print_ln:376 
Calls in [print_uint] to print_uchar:387 print_uchar:391 
Calls in [print_ulong] to print_uint:398 print_uint:402 
Calls in [print_sint] to print_char:408 print_uint:414 print_char:418 
Calls in [print_slong] to print_char:424 print_ulong:430 print_char:434 
Calls in [print_uchar] to print_char:442 print_char:447 

Created 70 initial phi equivalence classes
Coalesced [31] mulf_init::sqr2_lo#6 = mulf_init::sqr2_lo#1
Coalesced [32] mulf_init::x_255#6 = mulf_init::x_255#1
Coalesced [33] mulf_init::sqr2_hi#6 = mulf_init::sqr2_hi#1
Coalesced [34] mulf_init::dir#5 = mulf_init::dir#4
Coalesced (already) [35] mulf_init::dir#6 = mulf_init::dir#2
Coalesced [41] mulf_init::sqr#9 = mulf_init::sqr#2
Coalesced [42] mulf_init::x_2#8 = mulf_init::x_2#1
Coalesced [51] mulf_init::sqr1_lo#6 = mulf_init::sqr1_lo#1
Coalesced [52] mulf_init::c#6 = mulf_init::c#1
Coalesced [53] mulf_init::sqr#7 = mulf_init::sqr#1
Coalesced [54] mulf_init::sqr1_hi#6 = mulf_init::sqr1_hi#1
Coalesced [55] mulf_init::x_2#6 = mulf_init::x_2#2
Coalesced [56] mulf_init::sqr#8 = mulf_init::sqr#4
Coalesced (already) [57] mulf_init::x_2#7 = mulf_init::x_2#3
Coalesced [60] print_char_cursor#189 = print_char_cursor#148
Coalesced [62] mul16u_compare::a#16 = mul16u_compare::a#6
Coalesced [63] mul16u_compare::b#16 = mul16u_compare::b#6
Coalesced [74] mul16u::b#4 = mul16u::b#1
Coalesced [75] mul16u::a#9 = mul16u::a#2
Coalesced [81] mulf16u::a#3 = mulf16u::a#1
Coalesced [82] mulf16u::b#3 = mulf16u::b#1
Coalesced [106] print_char_cursor#201 = print_char_cursor#1
Not coalescing [108] print_char_cursor#190 = print_line_cursor#0
Coalesced [110] print_line_cursor#106 = print_line_cursor#0
Coalesced (already) [111] print_char_cursor#202 = print_char_cursor#1
Coalesced [114] print_char_cursor#222 = print_char_cursor#1
Coalesced [115] mul16u_compare::a#15 = mul16u_compare::a#1
Coalesced [116] mul16u_compare::b#15 = mul16u_compare::b#1
Coalesced [117] mul16u_compare::i#14 = mul16u_compare::i#1
Coalesced (already) [118] mul16u_compare::a#17 = mul16u_compare::a#1
Coalesced (already) [119] mul16u_compare::b#17 = mul16u_compare::b#1
Coalesced [120] mul16u_compare::j#11 = mul16u_compare::j#1
Coalesced [121] mul16u_compare::ok#5 = mul16u_compare::ok#4
Not coalescing [122] print_char_cursor#223 = print_line_cursor#0
Coalesced [124] print_char_cursor#182 = print_char_cursor#152
Coalesced [126] mul16s_compare::a#16 = mul16s_compare::a#6
Coalesced [127] mul16s_compare::b#16 = mul16s_compare::b#6
Coalesced (already) [166] print_line_cursor#103 = print_line_cursor#0
Coalesced (already) [167] print_char_cursor#198 = print_char_cursor#1
Not coalescing [169] print_char_cursor#183 = print_line_cursor#0
Coalesced (already) [171] print_line_cursor#104 = print_line_cursor#0
Coalesced (already) [172] print_char_cursor#199 = print_char_cursor#1
Coalesced (already) [175] print_char_cursor#224 = print_char_cursor#1
Coalesced [176] mul16s_compare::a#15 = mul16s_compare::a#1
Coalesced [177] mul16s_compare::b#15 = mul16s_compare::b#1
Coalesced [178] mul16s_compare::i#14 = mul16s_compare::i#1
Coalesced (already) [179] mul16s_compare::a#17 = mul16s_compare::a#1
Coalesced (already) [180] mul16s_compare::b#17 = mul16s_compare::b#1
Coalesced [181] mul16s_compare::j#11 = mul16s_compare::j#1
Coalesced [182] mul16s_compare::ok#5 = mul16s_compare::ok#4
Coalesced [191] memset::dst#4 = memset::dst#1
Coalesced [193] print_str::str#19 = print_str::str#18
Coalesced (already) [194] print_char_cursor#196 = print_char_cursor#157
Coalesced [199] print_char::ch#8 = print_char::ch#0
Coalesced [200] print_char_cursor#219 = print_char_cursor#1
Coalesced [203] print_str::str#20 = print_str::str#0
Coalesced [204] print_char_cursor#197 = print_char_cursor#21
Coalesced [209] muls16u::return#5 = muls16u::m#3
Coalesced [214] muls16u::i#4 = muls16u::i#1
Coalesced [215] muls16u::m#6 = muls16u::m#1
Coalesced [218] mul16u::a#10 = mul16u::a#6
Coalesced [219] mul16u::mb#6 = mul16u::mb#0
Coalesced [227] mul16u::res#9 = mul16u::res#1
Coalesced [231] mul16u::a#11 = mul16u::a#0
Coalesced [232] mul16u::res#7 = mul16u::res#6
Coalesced [233] mul16u::mb#7 = mul16u::mb#1
Coalesced (already) [234] mul16u::res#8 = mul16u::res#2
Coalesced (already) [241] print_char_cursor#191 = print_char_cursor#1
Coalesced [244] print_uint::w#7 = print_uint::w#3
Coalesced [245] print_char_cursor#204 = print_char_cursor#1
Coalesced (already) [247] print_char_cursor#192 = print_char_cursor#21
Coalesced [250] print_uint::w#8 = print_uint::w#4
Coalesced (already) [251] print_char_cursor#205 = print_char_cursor#1
Coalesced (already) [253] print_char_cursor#193 = print_char_cursor#21
Coalesced [256] print_ulong::dw#6 = print_ulong::dw#1
Coalesced [257] print_char_cursor#209 = print_char_cursor#1
Coalesced (already) [259] print_char_cursor#194 = print_char_cursor#21
Coalesced [262] print_ulong::dw#7 = print_ulong::dw#2
Coalesced (already) [263] print_char_cursor#210 = print_char_cursor#1
Coalesced (already) [265] print_char_cursor#195 = print_char_cursor#21
Coalesced [268] print_ulong::dw#8 = print_ulong::dw#3
Coalesced (already) [269] print_char_cursor#211 = print_char_cursor#1
Coalesced (already) [271] print_char_cursor#203 = print_char_cursor#21
Coalesced [276] print_line_cursor#107 = print_line_cursor#45
Coalesced (already) [282] print_line_cursor#108 = print_line_cursor#0
Coalesced [288] muls16s::return#5 = muls16s::m#3
Coalesced [293] muls16s::j#4 = muls16s::j#1
Coalesced [294] muls16s::m#11 = muls16s::m#1
Coalesced [298] muls16s::return#6 = muls16s::m#5
Coalesced [301] muls16s::i#4 = muls16s::i#1
Coalesced [302] muls16s::m#12 = muls16s::m#2
Coalesced [305] mul16u::b#3 = mul16u::b#0
Coalesced [306] mul16u::a#8 = mul16u::a#1
Coalesced [314] mul16s::m#7 = mul16s::m#1
Coalesced [320] mul16s::m#10 = mul16s::m#2
Coalesced [324] mul16s::m#9 = mul16s::m#5
Coalesced [325] mul16s::m#8 = mul16s::m#0
Coalesced [328] mulf16u::a#4 = mulf16u::a#0
Coalesced [329] mulf16u::b#4 = mulf16u::b#0
Coalesced [337] mulf16s::m#7 = mulf16s::m#1
Coalesced [343] mulf16s::m#10 = mulf16s::m#2
Coalesced [347] mulf16s::m#9 = mulf16s::m#5
Coalesced [348] mulf16s::m#8 = mulf16s::m#0
Coalesced (already) [349] print_char_cursor#184 = print_char_cursor#1
Coalesced [352] print_sint::w#9 = print_sint::w#1
Coalesced (already) [354] print_char_cursor#185 = print_char_cursor#21
Coalesced [357] print_sint::w#10 = print_sint::w#2
Coalesced (already) [359] print_char_cursor#186 = print_char_cursor#21
Coalesced [362] print_slong::dw#10 = print_slong::dw#1
Coalesced (already) [364] print_char_cursor#187 = print_char_cursor#21
Coalesced [367] print_slong::dw#11 = print_slong::dw#2
Coalesced (already) [369] print_char_cursor#188 = print_char_cursor#21
Coalesced [372] print_slong::dw#12 = print_slong::dw#3
Coalesced (already) [374] print_line_cursor#105 = print_line_cursor#0
Coalesced (already) [375] print_char_cursor#200 = print_char_cursor#21
Coalesced [385] print_uchar::b#4 = print_uchar::b#0
Coalesced [386] print_char_cursor#213 = print_char_cursor#140
Coalesced [389] print_uchar::b#5 = print_uchar::b#1
Coalesced (already) [390] print_char_cursor#214 = print_char_cursor#21
Coalesced [396] print_uint::w#10 = print_uint::w#1
Coalesced (already) [397] print_char_cursor#207 = print_char_cursor#141
Coalesced [400] print_uint::w#11 = print_uint::w#2
Coalesced (already) [401] print_char_cursor#208 = print_char_cursor#21
Coalesced (already) [407] print_char_cursor#216 = print_char_cursor#1
Coalesced [409] print_sint::w#12 = print_sint::w#3
Coalesced [412] print_uint::w#9 = print_uint::w#0
Coalesced (already) [413] print_char_cursor#206 = print_char_cursor#21
Coalesced (already) [417] print_char_cursor#215 = print_char_cursor#1
Coalesced [420] print_sint::w#11 = print_sint::w#0
Coalesced (already) [423] print_char_cursor#218 = print_char_cursor#1
Coalesced [425] print_slong::dw#14 = print_slong::dw#4
Coalesced [428] print_ulong::dw#9 = print_ulong::dw#0
Coalesced (already) [429] print_char_cursor#212 = print_char_cursor#21
Coalesced (already) [433] print_char_cursor#217 = print_char_cursor#1
Coalesced [436] print_slong::dw#13 = print_slong::dw#0
Coalesced [440] print_char::ch#9 = print_char::ch#5
Coalesced (already) [441] print_char_cursor#220 = print_char_cursor#145
Coalesced [445] print_char::ch#10 = print_char::ch#6
Coalesced (already) [446] print_char_cursor#221 = print_char_cursor#21
Coalesced down to 42 phi equivalence classes
Culled Empty Block label main::@4
Culled Empty Block label print_cls::@1
Culled Empty Block label mulf_init::@3
Culled Empty Block label mulf_init::@10
Culled Empty Block label mulf_init::@11
Culled Empty Block label mul16u_compare::@11
Culled Empty Block label mul16u_compare::@7
Culled Empty Block label mul16u_compare::@15
Culled Empty Block label mul16u_compare::@18
Culled Empty Block label mul16u_compare::@19
Culled Empty Block label mul16u_compare::@20
Culled Empty Block label mul16s_compare::@11
Culled Empty Block label mul16s_compare::@7
Culled Empty Block label mul16s_compare::@15
Culled Empty Block label mul16s_compare::@18
Culled Empty Block label mul16s_compare::@19
Culled Empty Block label mul16s_compare::@20
Culled Empty Block label memset::@2
Culled Empty Block label memset::@1
Culled Empty Block label muls16u::@2
Culled Empty Block label muls16u::@5
Culled Empty Block label mul16u::@3
Culled Empty Block label mul16u::@6
Culled Empty Block label mul16u_error::@11
Culled Empty Block label print_ln::@2
Culled Empty Block label print_ln::@3
Culled Empty Block label muls16s::@4
Culled Empty Block label muls16s::@9
Culled Empty Block label muls16s::@1
Culled Empty Block label muls16s::@10
Culled Empty Block label mul16s::@7
Culled Empty Block label mul16s::@6
Culled Empty Block label mulf16s::@7
Culled Empty Block label mulf16s::@6
Culled Empty Block label mul16s_error::@11
Culled Empty Block label print_uint::@2
Culled Empty Block label print_ulong::@2
Culled Empty Block label print_sint::@5
Culled Empty Block label print_sint::@6
Culled Empty Block label print_slong::@5
Culled Empty Block label print_slong::@6
Culled Empty Block label print_uchar::@2
Renumbering block memset::@3 to memset::@1
Renumbering block memset::@4 to memset::@2
Renumbering block mul16u::@4 to mul16u::@3
Renumbering block mul16u::@5 to mul16u::@4
Renumbering block mulf_init::@4 to mulf_init::@3
Renumbering block mulf_init::@5 to mulf_init::@4
Renumbering block mulf_init::@6 to mulf_init::@5
Renumbering block mulf_init::@7 to mulf_init::@6
Renumbering block mulf_init::@8 to mulf_init::@7
Renumbering block mulf_init::@9 to mulf_init::@8
Renumbering block mulf_init::@12 to mulf_init::@9
Renumbering block muls16u::@3 to muls16u::@2
Renumbering block muls16u::@4 to muls16u::@3
Renumbering block muls16s::@2 to muls16s::@1
Renumbering block muls16s::@3 to muls16s::@2
Renumbering block muls16s::@5 to muls16s::@3
Renumbering block muls16s::@6 to muls16s::@4
Renumbering block muls16s::@7 to muls16s::@5
Renumbering block muls16s::@8 to muls16s::@6
Renumbering block mul16u_compare::@8 to mul16u_compare::@7
Renumbering block mul16u_compare::@9 to mul16u_compare::@8
Renumbering block mul16u_compare::@10 to mul16u_compare::@9
Renumbering block mul16u_compare::@12 to mul16u_compare::@10
Renumbering block mul16u_compare::@13 to mul16u_compare::@11
Renumbering block mul16u_compare::@14 to mul16u_compare::@12
Renumbering block mul16u_compare::@16 to mul16u_compare::@13
Renumbering block mul16u_compare::@17 to mul16u_compare::@14
Renumbering block mul16u_compare::@21 to mul16u_compare::@15
Renumbering block mul16s_compare::@8 to mul16s_compare::@7
Renumbering block mul16s_compare::@9 to mul16s_compare::@8
Renumbering block mul16s_compare::@10 to mul16s_compare::@9
Renumbering block mul16s_compare::@12 to mul16s_compare::@10
Renumbering block mul16s_compare::@13 to mul16s_compare::@11
Renumbering block mul16s_compare::@14 to mul16s_compare::@12
Renumbering block mul16s_compare::@16 to mul16s_compare::@13
Renumbering block mul16s_compare::@17 to mul16s_compare::@14
Renumbering block mul16s_compare::@21 to mul16s_compare::@15
Adding NOP phi() at start of main::@1
Adding NOP phi() at start of main::@2
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of print_cls
Adding NOP phi() at start of mulf_init
Adding NOP phi() at start of mulf_init::@9
Adding NOP phi() at start of mul16u_compare
Adding NOP phi() at start of mul16u_compare::@6
Adding NOP phi() at start of mul16u_compare::@15
Adding NOP phi() at start of mul16u_compare::@9
Adding NOP phi() at start of mul16u_compare::@14
Adding NOP phi() at start of mul16s_compare::@6
Adding NOP phi() at start of mul16s_compare::@15
Adding NOP phi() at start of mul16s_compare::@9
Adding NOP phi() at start of mul16s_compare::@14
Adding NOP phi() at start of memset
Adding NOP phi() at start of mul16u_error
Adding NOP phi() at start of mul16u_error::@2
Adding NOP phi() at start of mul16u_error::@4
Adding NOP phi() at start of mul16u_error::@6
Adding NOP phi() at start of mul16u_error::@8
Adding NOP phi() at start of mul16u_error::@10
Adding NOP phi() at start of mul16s_error
Adding NOP phi() at start of mul16s_error::@2
Adding NOP phi() at start of mul16s_error::@4
Adding NOP phi() at start of mul16s_error::@6
Adding NOP phi() at start of mul16s_error::@8
Adding NOP phi() at start of mul16s_error::@10
Adding NOP phi() at start of print_sint::@3
Adding NOP phi() at start of print_sint::@1
Adding NOP phi() at start of print_slong::@3
Adding NOP phi() at start of print_slong::@1

FINAL CONTROL FLOW GRAPH

void main()
main: scope:[main]  from
  [0] *BG_COLOR = 5
  [1] call print_cls 
  to:main::@1
main::@1: scope:[main]  from main
  [2] phi()
  [3] call mulf_init 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [4] phi()
  [5] call mul16u_compare 
  to:main::@3
main::@3: scope:[main]  from main::@2
  [6] phi()
  [7] call mul16s_compare 
  to:main::@return
main::@return: scope:[main]  from main::@3
  [8] return 
  to:@return

void print_cls()
print_cls: scope:[print_cls]  from main
  [9] phi()
  [10] call memset 
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls
  [11] return 
  to:@return

void mulf_init()
mulf_init: scope:[mulf_init]  from main::@1
  [12] phi()
  to:mulf_init::@1
mulf_init::@1: scope:[mulf_init]  from mulf_init mulf_init::@3
  [13] mulf_init::x_2#3 = phi( mulf_init/0, mulf_init::@3/mulf_init::x_2#2 )
  [13] mulf_init::sqr1_hi#2 = phi( mulf_init/mulf_sqr1_hi+1, mulf_init::@3/mulf_init::sqr1_hi#1 )
  [13] mulf_init::sqr#4 = phi( mulf_init/0, mulf_init::@3/mulf_init::sqr#1 )
  [13] mulf_init::c#2 = phi( mulf_init/0, mulf_init::@3/mulf_init::c#1 )
  [13] mulf_init::sqr1_lo#2 = phi( mulf_init/mulf_sqr1_lo+1, mulf_init::@3/mulf_init::sqr1_lo#1 )
  [14] if(mulf_init::sqr1_lo#2!=mulf_sqr1_lo+$200) goto mulf_init::@2
  to:mulf_init::@5
mulf_init::@5: scope:[mulf_init]  from mulf_init::@1 mulf_init::@8
  [15] mulf_init::dir#2 = phi( mulf_init::@1/$ff, mulf_init::@8/mulf_init::dir#4 )
  [15] mulf_init::sqr2_hi#2 = phi( mulf_init::@1/mulf_sqr2_hi, mulf_init::@8/mulf_init::sqr2_hi#1 )
  [15] mulf_init::x_255#2 = phi( mulf_init::@1/-1, mulf_init::@8/mulf_init::x_255#1 )
  [15] mulf_init::sqr2_lo#2 = phi( mulf_init::@1/mulf_sqr2_lo, mulf_init::@8/mulf_init::sqr2_lo#1 )
  [16] if(mulf_init::sqr2_lo#2!=mulf_sqr2_lo+$1ff) goto mulf_init::@6
  to:mulf_init::@7
mulf_init::@7: scope:[mulf_init]  from mulf_init::@5
  [17] *(mulf_sqr2_lo+$1ff) = *(mulf_sqr1_lo+$100)
  [18] *(mulf_sqr2_hi+$1ff) = *(mulf_sqr1_hi+$100)
  to:mulf_init::@return
mulf_init::@return: scope:[mulf_init]  from mulf_init::@7
  [19] return 
  to:@return
mulf_init::@6: scope:[mulf_init]  from mulf_init::@5
  [20] *mulf_init::sqr2_lo#2 = mulf_sqr1_lo[mulf_init::x_255#2]
  [21] *mulf_init::sqr2_hi#2 = mulf_sqr1_hi[mulf_init::x_255#2]
  [22] mulf_init::sqr2_hi#1 = ++ mulf_init::sqr2_hi#2
  [23] mulf_init::x_255#1 = mulf_init::x_255#2 + mulf_init::dir#2
  [24] if(mulf_init::x_255#1!=0) goto mulf_init::@9
  to:mulf_init::@8
mulf_init::@9: scope:[mulf_init]  from mulf_init::@6
  [25] phi()
  to:mulf_init::@8
mulf_init::@8: scope:[mulf_init]  from mulf_init::@6 mulf_init::@9
  [26] mulf_init::dir#4 = phi( mulf_init::@6/1, mulf_init::@9/mulf_init::dir#2 )
  [27] mulf_init::sqr2_lo#1 = ++ mulf_init::sqr2_lo#2
  to:mulf_init::@5
mulf_init::@2: scope:[mulf_init]  from mulf_init::@1
  [28] mulf_init::c#1 = ++ mulf_init::c#2
  [29] mulf_init::$1 = mulf_init::c#1 & 1
  [30] if(mulf_init::$1!=0) goto mulf_init::@3
  to:mulf_init::@4
mulf_init::@4: scope:[mulf_init]  from mulf_init::@2
  [31] mulf_init::x_2#1 = ++ mulf_init::x_2#3
  [32] mulf_init::sqr#2 = ++ mulf_init::sqr#4
  to:mulf_init::@3
mulf_init::@3: scope:[mulf_init]  from mulf_init::@2 mulf_init::@4
  [33] mulf_init::x_2#2 = phi( mulf_init::@2/mulf_init::x_2#3, mulf_init::@4/mulf_init::x_2#1 )
  [33] mulf_init::sqr#3 = phi( mulf_init::@2/mulf_init::sqr#4, mulf_init::@4/mulf_init::sqr#2 )
  [34] mulf_init::$4 = < mulf_init::sqr#3
  [35] *mulf_init::sqr1_lo#2 = mulf_init::$4
  [36] mulf_init::$5 = > mulf_init::sqr#3
  [37] *mulf_init::sqr1_hi#2 = mulf_init::$5
  [38] mulf_init::sqr1_hi#1 = ++ mulf_init::sqr1_hi#2
  [39] mulf_init::sqr#1 = mulf_init::sqr#3 + mulf_init::x_2#2
  [40] mulf_init::sqr1_lo#1 = ++ mulf_init::sqr1_lo#2
  to:mulf_init::@1

void mul16u_compare()
mul16u_compare: scope:[mul16u_compare]  from main::@2
  [41] phi()
  to:mul16u_compare::@1
mul16u_compare::@1: scope:[mul16u_compare]  from mul16u_compare mul16u_compare::@8
  [42] mul16u_compare::i#12 = phi( mul16u_compare/0, mul16u_compare::@8/mul16u_compare::i#1 )
  [42] mul16u_compare::b#6 = phi( mul16u_compare/0, mul16u_compare::@8/mul16u_compare::b#1 )
  [42] mul16u_compare::a#6 = phi( mul16u_compare/0, mul16u_compare::@8/mul16u_compare::a#1 )
  [42] print_char_cursor#148 = phi( mul16u_compare/print_screen#0, mul16u_compare::@8/print_char_cursor#1 )
  [43] call print_str 
  to:mul16u_compare::@2
mul16u_compare::@2: scope:[mul16u_compare]  from mul16u_compare::@1 mul16u_compare::@5
  [44] mul16u_compare::j#10 = phi( mul16u_compare::@1/0, mul16u_compare::@5/mul16u_compare::j#1 )
  [44] mul16u_compare::b#2 = phi( mul16u_compare::@1/mul16u_compare::b#6, mul16u_compare::@5/mul16u_compare::b#1 )
  [44] mul16u_compare::a#2 = phi( mul16u_compare::@1/mul16u_compare::a#6, mul16u_compare::@5/mul16u_compare::a#1 )
  [45] mul16u_compare::a#1 = mul16u_compare::a#2 + $d2b
  [46] mul16u_compare::b#1 = mul16u_compare::b#2 + $ffd
  [47] muls16u::a#0 = mul16u_compare::a#1
  [48] muls16u::b#0 = mul16u_compare::b#1
  [49] call muls16u 
  [50] muls16u::return#2 = muls16u::return#0
  to:mul16u_compare::@10
mul16u_compare::@10: scope:[mul16u_compare]  from mul16u_compare::@2
  [51] mul16u_compare::ms#0 = muls16u::return#2
  [52] mul16u::a#2 = mul16u_compare::a#1
  [53] mul16u::b#1 = mul16u_compare::b#1
  [54] call mul16u 
  [55] mul16u::return#3 = mul16u::res#2
  to:mul16u_compare::@11
mul16u_compare::@11: scope:[mul16u_compare]  from mul16u_compare::@10
  [56] mul16u_compare::mn#0 = mul16u::return#3
  [57] mulf16u::a#1 = mul16u_compare::a#1
  [58] mulf16u::b#1 = mul16u_compare::b#1
  [59] call mulf16u 
  [60] mulf16u::return#3 = mulf16u::return#0
  to:mul16u_compare::@12
mul16u_compare::@12: scope:[mul16u_compare]  from mul16u_compare::@11
  [61] mul16u_compare::mf#0 = mulf16u::return#3
  [62] if(mul16u_compare::ms#0==mul16u_compare::mf#0) goto mul16u_compare::@3
  to:mul16u_compare::@6
mul16u_compare::@6: scope:[mul16u_compare]  from mul16u_compare::@12
  [63] phi()
  to:mul16u_compare::@3
mul16u_compare::@3: scope:[mul16u_compare]  from mul16u_compare::@12 mul16u_compare::@6
  [64] mul16u_compare::ok#4 = phi( mul16u_compare::@12/1, mul16u_compare::@6/0 )
  [65] if(mul16u_compare::ms#0==mul16u_compare::mn#0) goto mul16u_compare::@15
  to:mul16u_compare::@4
mul16u_compare::@15: scope:[mul16u_compare]  from mul16u_compare::@3
  [66] phi()
  to:mul16u_compare::@4
mul16u_compare::@4: scope:[mul16u_compare]  from mul16u_compare::@15 mul16u_compare::@3
  [67] mul16u_compare::ok#3 = phi( mul16u_compare::@15/mul16u_compare::ok#4, mul16u_compare::@3/0 )
  [68] if(mul16u_compare::ok#3!=0) goto mul16u_compare::@5
  to:mul16u_compare::@7
mul16u_compare::@7: scope:[mul16u_compare]  from mul16u_compare::@4
  [69] *BG_COLOR = 2
  [70] mul16u_error::a#0 = mul16u_compare::a#1
  [71] mul16u_error::b#0 = mul16u_compare::b#1
  [72] mul16u_error::ms#0 = mul16u_compare::ms#0
  [73] mul16u_error::mn#0 = mul16u_compare::mn#0
  [74] mul16u_error::mf#0 = mul16u_compare::mf#0
  [75] call mul16u_error 
  to:mul16u_compare::@return
mul16u_compare::@return: scope:[mul16u_compare]  from mul16u_compare::@14 mul16u_compare::@7
  [76] return 
  to:@return
mul16u_compare::@5: scope:[mul16u_compare]  from mul16u_compare::@4
  [77] mul16u_compare::j#1 = ++ mul16u_compare::j#10
  [78] if(mul16u_compare::j#1!=$10) goto mul16u_compare::@2
  to:mul16u_compare::@8
mul16u_compare::@8: scope:[mul16u_compare]  from mul16u_compare::@5
  [79] mul16u_compare::i#1 = ++ mul16u_compare::i#12
  [80] if(mul16u_compare::i#1!=$10) goto mul16u_compare::@1
  to:mul16u_compare::@9
mul16u_compare::@9: scope:[mul16u_compare]  from mul16u_compare::@8
  [81] phi()
  [82] call print_ln 
  to:mul16u_compare::@13
mul16u_compare::@13: scope:[mul16u_compare]  from mul16u_compare::@9
  [83] print_char_cursor#190 = print_line_cursor#0
  [84] call print_str 
  to:mul16u_compare::@14
mul16u_compare::@14: scope:[mul16u_compare]  from mul16u_compare::@13
  [85] phi()
  [86] call print_ln 
  to:mul16u_compare::@return

void mul16s_compare()
mul16s_compare: scope:[mul16s_compare]  from main::@3
  [87] print_char_cursor#223 = print_line_cursor#0
  to:mul16s_compare::@1
mul16s_compare::@1: scope:[mul16s_compare]  from mul16s_compare mul16s_compare::@8
  [88] mul16s_compare::i#12 = phi( mul16s_compare/0, mul16s_compare::@8/mul16s_compare::i#1 )
  [88] mul16s_compare::b#6 = phi( mul16s_compare/-$7fff, mul16s_compare::@8/mul16s_compare::b#1 )
  [88] mul16s_compare::a#6 = phi( mul16s_compare/-$7fff, mul16s_compare::@8/mul16s_compare::a#1 )
  [88] print_char_cursor#152 = phi( mul16s_compare/print_char_cursor#223, mul16s_compare::@8/print_char_cursor#1 )
  [89] call print_str 
  to:mul16s_compare::@2
mul16s_compare::@2: scope:[mul16s_compare]  from mul16s_compare::@1 mul16s_compare::@5
  [90] mul16s_compare::j#10 = phi( mul16s_compare::@1/0, mul16s_compare::@5/mul16s_compare::j#1 )
  [90] mul16s_compare::b#2 = phi( mul16s_compare::@1/mul16s_compare::b#6, mul16s_compare::@5/mul16s_compare::b#1 )
  [90] mul16s_compare::a#2 = phi( mul16s_compare::@1/mul16s_compare::a#6, mul16s_compare::@5/mul16s_compare::a#1 )
  [91] mul16s_compare::a#1 = mul16s_compare::a#2 + $d2b
  [92] mul16s_compare::b#1 = mul16s_compare::b#2 + $ffd
  [93] muls16s::a#0 = mul16s_compare::a#1
  [94] muls16s::b#0 = mul16s_compare::b#1
  [95] call muls16s 
  [96] muls16s::return#2 = muls16s::return#0
  to:mul16s_compare::@10
mul16s_compare::@10: scope:[mul16s_compare]  from mul16s_compare::@2
  [97] mul16s_compare::ms#0 = muls16s::return#2
  [98] mul16s::a#0 = mul16s_compare::a#1
  [99] mul16s::b#0 = mul16s_compare::b#1
  [100] call mul16s 
  [101] mul16s::return#2 = mul16s::return#0
  to:mul16s_compare::@11
mul16s_compare::@11: scope:[mul16s_compare]  from mul16s_compare::@10
  [102] mul16s_compare::mn#0 = mul16s::return#2
  [103] mulf16s::a#0 = mul16s_compare::a#1
  [104] mulf16s::b#0 = mul16s_compare::b#1
  [105] call mulf16s 
  [106] mulf16s::return#2 = mulf16s::return#0
  to:mul16s_compare::@12
mul16s_compare::@12: scope:[mul16s_compare]  from mul16s_compare::@11
  [107] mul16s_compare::mf#0 = mulf16s::return#2
  [108] if(mul16s_compare::ms#0==mul16s_compare::mf#0) goto mul16s_compare::@3
  to:mul16s_compare::@6
mul16s_compare::@6: scope:[mul16s_compare]  from mul16s_compare::@12
  [109] phi()
  to:mul16s_compare::@3
mul16s_compare::@3: scope:[mul16s_compare]  from mul16s_compare::@12 mul16s_compare::@6
  [110] mul16s_compare::ok#4 = phi( mul16s_compare::@12/1, mul16s_compare::@6/0 )
  [111] if(mul16s_compare::ms#0==mul16s_compare::mn#0) goto mul16s_compare::@15
  to:mul16s_compare::@4
mul16s_compare::@15: scope:[mul16s_compare]  from mul16s_compare::@3
  [112] phi()
  to:mul16s_compare::@4
mul16s_compare::@4: scope:[mul16s_compare]  from mul16s_compare::@15 mul16s_compare::@3
  [113] mul16s_compare::ok#3 = phi( mul16s_compare::@15/mul16s_compare::ok#4, mul16s_compare::@3/0 )
  [114] if(mul16s_compare::ok#3!=0) goto mul16s_compare::@5
  to:mul16s_compare::@7
mul16s_compare::@7: scope:[mul16s_compare]  from mul16s_compare::@4
  [115] *BG_COLOR = 2
  [116] mul16s_error::a#0 = mul16s_compare::a#1
  [117] mul16s_error::b#0 = mul16s_compare::b#1
  [118] mul16s_error::ms#0 = mul16s_compare::ms#0
  [119] mul16s_error::mn#0 = mul16s_compare::mn#0
  [120] mul16s_error::mf#0 = mul16s_compare::mf#0
  [121] call mul16s_error 
  to:mul16s_compare::@return
mul16s_compare::@return: scope:[mul16s_compare]  from mul16s_compare::@14 mul16s_compare::@7
  [122] return 
  to:@return
mul16s_compare::@5: scope:[mul16s_compare]  from mul16s_compare::@4
  [123] mul16s_compare::j#1 = ++ mul16s_compare::j#10
  [124] if(mul16s_compare::j#1!=$10) goto mul16s_compare::@2
  to:mul16s_compare::@8
mul16s_compare::@8: scope:[mul16s_compare]  from mul16s_compare::@5
  [125] mul16s_compare::i#1 = ++ mul16s_compare::i#12
  [126] if(mul16s_compare::i#1!=$10) goto mul16s_compare::@1
  to:mul16s_compare::@9
mul16s_compare::@9: scope:[mul16s_compare]  from mul16s_compare::@8
  [127] phi()
  [128] call print_ln 
  to:mul16s_compare::@13
mul16s_compare::@13: scope:[mul16s_compare]  from mul16s_compare::@9
  [129] print_char_cursor#183 = print_line_cursor#0
  [130] call print_str 
  to:mul16s_compare::@14
mul16s_compare::@14: scope:[mul16s_compare]  from mul16s_compare::@13
  [131] phi()
  [132] call print_ln 
  to:mul16s_compare::@return

void* memset(void* memset::str , byte memset::c , word memset::num)
memset: scope:[memset]  from print_cls
  [133] phi()
  to:memset::@1
memset::@1: scope:[memset]  from memset memset::@2
  [134] memset::dst#2 = phi( memset/(byte*)memset::str#0, memset::@2/memset::dst#1 )
  [135] if(memset::dst#2!=memset::end#0) goto memset::@2
  to:memset::@return
memset::@return: scope:[memset]  from memset::@1
  [136] return 
  to:@return
memset::@2: scope:[memset]  from memset::@1
  [137] *memset::dst#2 = memset::c#0
  [138] memset::dst#1 = ++ memset::dst#2
  to:memset::@1

void print_str(byte* print_str::str)
print_str: scope:[print_str]  from mul16s_compare::@1 mul16s_compare::@13 mul16s_error mul16s_error::@2 mul16s_error::@4 mul16s_error::@6 mul16s_error::@8 mul16u_compare::@1 mul16u_compare::@13 mul16u_error mul16u_error::@2 mul16u_error::@4 mul16u_error::@6 mul16u_error::@8
  [139] print_char_cursor#157 = phi( mul16s_compare::@1/print_char_cursor#152, mul16s_compare::@13/print_char_cursor#183, mul16s_error/print_char_cursor#1, mul16s_error::@2/print_char_cursor#21, mul16s_error::@4/print_char_cursor#21, mul16s_error::@6/print_char_cursor#21, mul16s_error::@8/print_char_cursor#21, mul16u_compare::@1/print_char_cursor#148, mul16u_compare::@13/print_char_cursor#190, mul16u_error/print_char_cursor#1, mul16u_error::@2/print_char_cursor#21, mul16u_error::@4/print_char_cursor#21, mul16u_error::@6/print_char_cursor#21, mul16u_error::@8/print_char_cursor#21 )
  [139] print_str::str#18 = phi( mul16s_compare::@1/str, mul16s_compare::@13/mul16s_compare::str1, mul16s_error/mul16s_error::str, mul16s_error::@2/str1, mul16s_error::@4/str2, mul16s_error::@6/str3, mul16s_error::@8/str4, mul16u_compare::@1/str, mul16u_compare::@13/mul16u_compare::str1, mul16u_error/mul16u_error::str, mul16u_error::@2/str1, mul16u_error::@4/str2, mul16u_error::@6/str3, mul16u_error::@8/str4 )
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@3
  [140] print_char_cursor#1 = phi( print_str/print_char_cursor#157, print_str::@3/print_char_cursor#21 )
  [140] print_str::str#15 = phi( print_str/print_str::str#18, print_str::@3/print_str::str#0 )
  [141] if(0!=*print_str::str#15) goto print_str::@2
  to:print_str::@return
print_str::@return: scope:[print_str]  from print_str::@1
  [142] return 
  to:@return
print_str::@2: scope:[print_str]  from print_str::@1
  [143] print_char::ch#0 = *print_str::str#15
  [144] call print_char 
  to:print_str::@3
print_str::@3: scope:[print_str]  from print_str::@2
  [145] print_str::str#0 = ++ print_str::str#15
  to:print_str::@1

dword muls16u(word muls16u::a , word muls16u::b)
muls16u: scope:[muls16u]  from mul16u_compare::@2
  [146] if(muls16u::a#0==0) goto muls16u::@1
  to:muls16u::@2
muls16u::@2: scope:[muls16u]  from muls16u muls16u::@3
  [147] muls16u::m#3 = phi( muls16u/0, muls16u::@3/muls16u::m#1 )
  [147] muls16u::i#2 = phi( muls16u/0, muls16u::@3/muls16u::i#1 )
  [148] if(muls16u::i#2!=muls16u::a#0) goto muls16u::@3
  to:muls16u::@1
muls16u::@1: scope:[muls16u]  from muls16u muls16u::@2
  [149] muls16u::return#0 = phi( muls16u/0, muls16u::@2/muls16u::m#3 )
  to:muls16u::@return
muls16u::@return: scope:[muls16u]  from muls16u::@1
  [150] return 
  to:@return
muls16u::@3: scope:[muls16u]  from muls16u::@2
  [151] muls16u::m#1 = muls16u::m#3 + muls16u::b#0
  [152] muls16u::i#1 = ++ muls16u::i#2
  to:muls16u::@2

dword mul16u(word mul16u::a , word mul16u::b)
mul16u: scope:[mul16u]  from mul16s mul16u_compare::@10
  [153] mul16u::a#6 = phi( mul16s/mul16u::a#1, mul16u_compare::@10/mul16u::a#2 )
  [153] mul16u::b#2 = phi( mul16s/mul16u::b#0, mul16u_compare::@10/mul16u::b#1 )
  [154] mul16u::mb#0 = (dword)mul16u::b#2
  to:mul16u::@1
mul16u::@1: scope:[mul16u]  from mul16u mul16u::@3
  [155] mul16u::mb#2 = phi( mul16u/mul16u::mb#0, mul16u::@3/mul16u::mb#1 )
  [155] mul16u::res#2 = phi( mul16u/0, mul16u::@3/mul16u::res#6 )
  [155] mul16u::a#3 = phi( mul16u/mul16u::a#6, mul16u::@3/mul16u::a#0 )
  [156] if(mul16u::a#3!=0) goto mul16u::@2
  to:mul16u::@return
mul16u::@return: scope:[mul16u]  from mul16u::@1
  [157] return 
  to:@return
mul16u::@2: scope:[mul16u]  from mul16u::@1
  [158] mul16u::$1 = mul16u::a#3 & 1
  [159] if(mul16u::$1==0) goto mul16u::@3
  to:mul16u::@4
mul16u::@4: scope:[mul16u]  from mul16u::@2
  [160] mul16u::res#1 = mul16u::res#2 + mul16u::mb#2
  to:mul16u::@3
mul16u::@3: scope:[mul16u]  from mul16u::@2 mul16u::@4
  [161] mul16u::res#6 = phi( mul16u::@2/mul16u::res#2, mul16u::@4/mul16u::res#1 )
  [162] mul16u::a#0 = mul16u::a#3 >> 1
  [163] mul16u::mb#1 = mul16u::mb#2 << 1
  to:mul16u::@1

dword mulf16u(word mulf16u::a , word mulf16u::b)
mulf16u: scope:[mulf16u]  from mul16u_compare::@11 mulf16s
  [164] mulf16u::b#2 = phi( mul16u_compare::@11/mulf16u::b#1, mulf16s/mulf16u::b#0 )
  [164] mulf16u::a#2 = phi( mul16u_compare::@11/mulf16u::a#1, mulf16s/mulf16u::a#0 )
  [165] *mulf16u::memA = mulf16u::a#2
  [166] *mulf16u::memB = mulf16u::b#2
  asm { ldamemA stasm1a+1 stasm3a+1 stasm5a+1 stasm7a+1 eor#$ff stasm2a+1 stasm4a+1 stasm6a+1 stasm8a+1 ldamemA+1 stasm1b+1 stasm3b+1 stasm5b+1 stasm7b+1 eor#$ff stasm2b+1 stasm4b+1 stasm6b+1 stasm8b+1 ldxmemB sec sm1a: ldamulf_sqr1_lo,x sm2a: sbcmulf_sqr2_lo,x stamemR+0 sm3a: ldamulf_sqr1_hi,x sm4a: sbcmulf_sqr2_hi,x sta_AA+1 sec sm1b: ldamulf_sqr1_lo,x sm2b: sbcmulf_sqr2_lo,x sta_cc+1 sm3b: ldamulf_sqr1_hi,x sm4b: sbcmulf_sqr2_hi,x sta_CC+1 ldxmemB+1 sec sm5a: ldamulf_sqr1_lo,x sm6a: sbcmulf_sqr2_lo,x sta_bb+1 sm7a: ldamulf_sqr1_hi,x sm8a: sbcmulf_sqr2_hi,x sta_BB+1 sec sm5b: ldamulf_sqr1_lo,x sm6b: sbcmulf_sqr2_lo,x sta_dd+1 sm7b: ldamulf_sqr1_hi,x sm8b: sbcmulf_sqr2_hi,x stamemR+3 clc _AA: lda#0 _bb: adc#0 stamemR+1 _BB: lda#0 _CC: adc#0 stamemR+2 bcc!+ incmemR+3 clc !: _cc: lda#0 adcmemR+1 stamemR+1 _dd: lda#0 adcmemR+2 stamemR+2 bcc!+ incmemR+3 !:  }
  [168] mulf16u::return#0 = *mulf16u::memR
  to:mulf16u::@return
mulf16u::@return: scope:[mulf16u]  from mulf16u
  [169] return 
  to:@return

void mul16u_error(word mul16u_error::a , word mul16u_error::b , dword mul16u_error::ms , dword mul16u_error::mn , dword mul16u_error::mf)
mul16u_error: scope:[mul16u_error]  from mul16u_compare::@7
  [170] phi()
  [171] call print_str 
  to:mul16u_error::@1
mul16u_error::@1: scope:[mul16u_error]  from mul16u_error
  [172] print_uint::w#3 = mul16u_error::a#0
  [173] call print_uint 
  to:mul16u_error::@2
mul16u_error::@2: scope:[mul16u_error]  from mul16u_error::@1
  [174] phi()
  [175] call print_str 
  to:mul16u_error::@3
mul16u_error::@3: scope:[mul16u_error]  from mul16u_error::@2
  [176] print_uint::w#4 = mul16u_error::b#0
  [177] call print_uint 
  to:mul16u_error::@4
mul16u_error::@4: scope:[mul16u_error]  from mul16u_error::@3
  [178] phi()
  [179] call print_str 
  to:mul16u_error::@5
mul16u_error::@5: scope:[mul16u_error]  from mul16u_error::@4
  [180] print_ulong::dw#1 = mul16u_error::ms#0
  [181] call print_ulong 
  to:mul16u_error::@6
mul16u_error::@6: scope:[mul16u_error]  from mul16u_error::@5
  [182] phi()
  [183] call print_str 
  to:mul16u_error::@7
mul16u_error::@7: scope:[mul16u_error]  from mul16u_error::@6
  [184] print_ulong::dw#2 = mul16u_error::mn#0
  [185] call print_ulong 
  to:mul16u_error::@8
mul16u_error::@8: scope:[mul16u_error]  from mul16u_error::@7
  [186] phi()
  [187] call print_str 
  to:mul16u_error::@9
mul16u_error::@9: scope:[mul16u_error]  from mul16u_error::@8
  [188] print_ulong::dw#3 = mul16u_error::mf#0
  [189] call print_ulong 
  to:mul16u_error::@10
mul16u_error::@10: scope:[mul16u_error]  from mul16u_error::@9
  [190] phi()
  [191] call print_ln 
  to:mul16u_error::@return
mul16u_error::@return: scope:[mul16u_error]  from mul16u_error::@10
  [192] return 
  to:@return

void print_ln()
print_ln: scope:[print_ln]  from mul16s_compare::@14 mul16s_compare::@9 mul16s_error::@10 mul16u_compare::@14 mul16u_compare::@9 mul16u_error::@10
  [193] print_char_cursor#136 = phi( mul16s_compare::@9/print_char_cursor#1, mul16s_compare::@14/print_char_cursor#1, mul16s_error::@10/print_char_cursor#21, mul16u_compare::@9/print_char_cursor#1, mul16u_compare::@14/print_char_cursor#1, mul16u_error::@10/print_char_cursor#21 )
  [193] print_line_cursor#45 = phi( mul16s_compare::@9/print_line_cursor#0, mul16s_compare::@14/print_line_cursor#0, mul16s_error::@10/print_line_cursor#0, mul16u_compare::@9/print_screen#0, mul16u_compare::@14/print_line_cursor#0, mul16u_error::@10/print_screen#0 )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  [194] print_line_cursor#23 = phi( print_ln/print_line_cursor#45, print_ln::@1/print_line_cursor#0 )
  [195] print_line_cursor#0 = print_line_cursor#23 + $28
  [196] if(print_line_cursor#0<print_char_cursor#136) goto print_ln::@1
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@1
  [197] return 
  to:@return

signed dword muls16s(signed word muls16s::a , signed word muls16s::b)
muls16s: scope:[muls16s]  from mul16s_compare::@2
  [198] if(muls16s::a#0<0) goto muls16s::@5
  to:muls16s::@2
muls16s::@2: scope:[muls16s]  from muls16s
  [199] if(muls16s::a#0<=0) goto muls16s::@1
  to:muls16s::@3
muls16s::@3: scope:[muls16s]  from muls16s::@2 muls16s::@4
  [200] muls16s::m#3 = phi( muls16s::@2/0, muls16s::@4/muls16s::m#1 )
  [200] muls16s::j#2 = phi( muls16s::@2/0, muls16s::@4/muls16s::j#1 )
  [201] if(muls16s::j#2!=muls16s::a#0) goto muls16s::@4
  to:muls16s::@1
muls16s::@1: scope:[muls16s]  from muls16s::@2 muls16s::@3 muls16s::@5
  [202] muls16s::return#0 = phi( muls16s::@2/0, muls16s::@3/muls16s::m#3, muls16s::@5/muls16s::m#5 )
  to:muls16s::@return
muls16s::@return: scope:[muls16s]  from muls16s::@1
  [203] return 
  to:@return
muls16s::@4: scope:[muls16s]  from muls16s::@3
  [204] muls16s::m#1 = muls16s::m#3 + muls16s::b#0
  [205] muls16s::j#1 = ++ muls16s::j#2
  to:muls16s::@3
muls16s::@5: scope:[muls16s]  from muls16s muls16s::@6
  [206] muls16s::m#5 = phi( muls16s/0, muls16s::@6/muls16s::m#2 )
  [206] muls16s::i#2 = phi( muls16s/0, muls16s::@6/muls16s::i#1 )
  [207] if(muls16s::i#2!=muls16s::a#0) goto muls16s::@6
  to:muls16s::@1
muls16s::@6: scope:[muls16s]  from muls16s::@5
  [208] muls16s::m#2 = muls16s::m#5 - muls16s::b#0
  [209] muls16s::i#1 = -- muls16s::i#2
  to:muls16s::@5

signed dword mul16s(signed word mul16s::a , signed word mul16s::b)
mul16s: scope:[mul16s]  from mul16s_compare::@10
  [210] mul16u::a#1 = (word)mul16s::a#0
  [211] mul16u::b#0 = (word)mul16s::b#0
  [212] call mul16u 
  [213] mul16u::return#2 = mul16u::res#2
  to:mul16s::@5
mul16s::@5: scope:[mul16s]  from mul16s
  [214] mul16s::m#0 = mul16u::return#2
  [215] if(mul16s::a#0>=0) goto mul16s::@1
  to:mul16s::@3
mul16s::@3: scope:[mul16s]  from mul16s::@5
  [216] mul16s::$6 = > mul16s::m#0
  [217] mul16s::$11 = mul16s::$6 - (word)mul16s::b#0
  [218] mul16s::m#1 = mul16s::m#0 hi= mul16s::$11
  to:mul16s::@1
mul16s::@1: scope:[mul16s]  from mul16s::@3 mul16s::@5
  [219] mul16s::m#5 = phi( mul16s::@3/mul16s::m#1, mul16s::@5/mul16s::m#0 )
  [220] if(mul16s::b#0>=0) goto mul16s::@2
  to:mul16s::@4
mul16s::@4: scope:[mul16s]  from mul16s::@1
  [221] mul16s::$9 = > mul16s::m#5
  [222] mul16s::$12 = mul16s::$9 - (word)mul16s::a#0
  [223] mul16s::m#2 = mul16s::m#5 hi= mul16s::$12
  to:mul16s::@2
mul16s::@2: scope:[mul16s]  from mul16s::@1 mul16s::@4
  [224] mul16s::m#4 = phi( mul16s::@1/mul16s::m#5, mul16s::@4/mul16s::m#2 )
  [225] mul16s::return#0 = (signed dword)mul16s::m#4
  to:mul16s::@return
mul16s::@return: scope:[mul16s]  from mul16s::@2
  [226] return 
  to:@return

signed dword mulf16s(signed word mulf16s::a , signed word mulf16s::b)
mulf16s: scope:[mulf16s]  from mul16s_compare::@11
  [227] mulf16u::a#0 = (word)mulf16s::a#0
  [228] mulf16u::b#0 = (word)mulf16s::b#0
  [229] call mulf16u 
  [230] mulf16u::return#2 = mulf16u::return#0
  to:mulf16s::@5
mulf16s::@5: scope:[mulf16s]  from mulf16s
  [231] mulf16s::m#0 = mulf16u::return#2
  [232] if(mulf16s::a#0>=0) goto mulf16s::@1
  to:mulf16s::@3
mulf16s::@3: scope:[mulf16s]  from mulf16s::@5
  [233] mulf16s::$6 = > mulf16s::m#0
  [234] mulf16s::$11 = mulf16s::$6 - (word)mulf16s::b#0
  [235] mulf16s::m#1 = mulf16s::m#0 hi= mulf16s::$11
  to:mulf16s::@1
mulf16s::@1: scope:[mulf16s]  from mulf16s::@3 mulf16s::@5
  [236] mulf16s::m#5 = phi( mulf16s::@3/mulf16s::m#1, mulf16s::@5/mulf16s::m#0 )
  [237] if(mulf16s::b#0>=0) goto mulf16s::@2
  to:mulf16s::@4
mulf16s::@4: scope:[mulf16s]  from mulf16s::@1
  [238] mulf16s::$9 = > mulf16s::m#5
  [239] mulf16s::$12 = mulf16s::$9 - (word)mulf16s::a#0
  [240] mulf16s::m#2 = mulf16s::m#5 hi= mulf16s::$12
  to:mulf16s::@2
mulf16s::@2: scope:[mulf16s]  from mulf16s::@1 mulf16s::@4
  [241] mulf16s::m#4 = phi( mulf16s::@1/mulf16s::m#5, mulf16s::@4/mulf16s::m#2 )
  [242] mulf16s::return#0 = (signed dword)mulf16s::m#4
  to:mulf16s::@return
mulf16s::@return: scope:[mulf16s]  from mulf16s::@2
  [243] return 
  to:@return

void mul16s_error(signed word mul16s_error::a , signed word mul16s_error::b , signed dword mul16s_error::ms , signed dword mul16s_error::mn , signed dword mul16s_error::mf)
mul16s_error: scope:[mul16s_error]  from mul16s_compare::@7
  [244] phi()
  [245] call print_str 
  to:mul16s_error::@1
mul16s_error::@1: scope:[mul16s_error]  from mul16s_error
  [246] print_sint::w#1 = mul16s_error::a#0
  [247] call print_sint 
  to:mul16s_error::@2
mul16s_error::@2: scope:[mul16s_error]  from mul16s_error::@1
  [248] phi()
  [249] call print_str 
  to:mul16s_error::@3
mul16s_error::@3: scope:[mul16s_error]  from mul16s_error::@2
  [250] print_sint::w#2 = mul16s_error::b#0
  [251] call print_sint 
  to:mul16s_error::@4
mul16s_error::@4: scope:[mul16s_error]  from mul16s_error::@3
  [252] phi()
  [253] call print_str 
  to:mul16s_error::@5
mul16s_error::@5: scope:[mul16s_error]  from mul16s_error::@4
  [254] print_slong::dw#1 = mul16s_error::ms#0
  [255] call print_slong 
  to:mul16s_error::@6
mul16s_error::@6: scope:[mul16s_error]  from mul16s_error::@5
  [256] phi()
  [257] call print_str 
  to:mul16s_error::@7
mul16s_error::@7: scope:[mul16s_error]  from mul16s_error::@6
  [258] print_slong::dw#2 = mul16s_error::mn#0
  [259] call print_slong 
  to:mul16s_error::@8
mul16s_error::@8: scope:[mul16s_error]  from mul16s_error::@7
  [260] phi()
  [261] call print_str 
  to:mul16s_error::@9
mul16s_error::@9: scope:[mul16s_error]  from mul16s_error::@8
  [262] print_slong::dw#3 = mul16s_error::mf#0
  [263] call print_slong 
  to:mul16s_error::@10
mul16s_error::@10: scope:[mul16s_error]  from mul16s_error::@9
  [264] phi()
  [265] call print_ln 
  to:mul16s_error::@return
mul16s_error::@return: scope:[mul16s_error]  from mul16s_error::@10
  [266] return 
  to:@return

void print_char(byte print_char::ch)
print_char: scope:[print_char]  from print_sint::@1 print_sint::@3 print_slong::@1 print_slong::@3 print_str::@2 print_uchar print_uchar::@1
  [267] print_char_cursor#89 = phi( print_sint::@1/print_char_cursor#1, print_sint::@3/print_char_cursor#1, print_slong::@1/print_char_cursor#1, print_slong::@3/print_char_cursor#1, print_str::@2/print_char_cursor#1, print_uchar/print_char_cursor#145, print_uchar::@1/print_char_cursor#21 )
  [267] print_char::ch#7 = phi( print_sint::@1/'-', print_sint::@3/' ', print_slong::@1/'-', print_slong::@3/' ', print_str::@2/print_char::ch#0, print_uchar/print_char::ch#5, print_uchar::@1/print_char::ch#6 )
  [268] *print_char_cursor#89 = print_char::ch#7
  [269] print_char_cursor#21 = ++ print_char_cursor#89
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  [270] return 
  to:@return

void print_uint(word print_uint::w)
print_uint: scope:[print_uint]  from mul16u_error::@1 mul16u_error::@3 print_sint::@2 print_ulong print_ulong::@1
  [271] print_char_cursor#140 = phi( mul16u_error::@1/print_char_cursor#1, mul16u_error::@3/print_char_cursor#1, print_sint::@2/print_char_cursor#21, print_ulong/print_char_cursor#141, print_ulong::@1/print_char_cursor#21 )
  [271] print_uint::w#5 = phi( mul16u_error::@1/print_uint::w#3, mul16u_error::@3/print_uint::w#4, print_sint::@2/print_uint::w#0, print_ulong/print_uint::w#1, print_ulong::@1/print_uint::w#2 )
  [272] print_uchar::b#0 = > print_uint::w#5
  [273] call print_uchar 
  to:print_uint::@1
print_uint::@1: scope:[print_uint]  from print_uint
  [274] print_uchar::b#1 = < print_uint::w#5
  [275] call print_uchar 
  to:print_uint::@return
print_uint::@return: scope:[print_uint]  from print_uint::@1
  [276] return 
  to:@return

void print_ulong(dword print_ulong::dw)
print_ulong: scope:[print_ulong]  from mul16u_error::@5 mul16u_error::@7 mul16u_error::@9 print_slong::@2
  [277] print_char_cursor#141 = phi( mul16u_error::@5/print_char_cursor#1, mul16u_error::@7/print_char_cursor#1, mul16u_error::@9/print_char_cursor#1, print_slong::@2/print_char_cursor#21 )
  [277] print_ulong::dw#4 = phi( mul16u_error::@5/print_ulong::dw#1, mul16u_error::@7/print_ulong::dw#2, mul16u_error::@9/print_ulong::dw#3, print_slong::@2/print_ulong::dw#0 )
  [278] print_uint::w#1 = > print_ulong::dw#4
  [279] call print_uint 
  to:print_ulong::@1
print_ulong::@1: scope:[print_ulong]  from print_ulong
  [280] print_uint::w#2 = < print_ulong::dw#4
  [281] call print_uint 
  to:print_ulong::@return
print_ulong::@return: scope:[print_ulong]  from print_ulong::@1
  [282] return 
  to:@return

void print_sint(signed word print_sint::w)
print_sint: scope:[print_sint]  from mul16s_error::@1 mul16s_error::@3
  [283] print_sint::w#3 = phi( mul16s_error::@1/print_sint::w#1, mul16s_error::@3/print_sint::w#2 )
  [284] if(print_sint::w#3<0) goto print_sint::@1
  to:print_sint::@3
print_sint::@3: scope:[print_sint]  from print_sint
  [285] phi()
  [286] call print_char 
  to:print_sint::@2
print_sint::@2: scope:[print_sint]  from print_sint::@3 print_sint::@4
  [287] print_sint::w#5 = phi( print_sint::@4/print_sint::w#0, print_sint::@3/print_sint::w#3 )
  [288] print_uint::w#0 = (word)print_sint::w#5
  [289] call print_uint 
  to:print_sint::@return
print_sint::@return: scope:[print_sint]  from print_sint::@2
  [290] return 
  to:@return
print_sint::@1: scope:[print_sint]  from print_sint
  [291] phi()
  [292] call print_char 
  to:print_sint::@4
print_sint::@4: scope:[print_sint]  from print_sint::@1
  [293] print_sint::w#0 = - print_sint::w#3
  to:print_sint::@2

void print_slong(signed dword print_slong::dw)
print_slong: scope:[print_slong]  from mul16s_error::@5 mul16s_error::@7 mul16s_error::@9
  [294] print_slong::dw#4 = phi( mul16s_error::@5/print_slong::dw#1, mul16s_error::@7/print_slong::dw#2, mul16s_error::@9/print_slong::dw#3 )
  [295] if(print_slong::dw#4<0) goto print_slong::@1
  to:print_slong::@3
print_slong::@3: scope:[print_slong]  from print_slong
  [296] phi()
  [297] call print_char 
  to:print_slong::@2
print_slong::@2: scope:[print_slong]  from print_slong::@3 print_slong::@4
  [298] print_slong::dw#6 = phi( print_slong::@4/print_slong::dw#0, print_slong::@3/print_slong::dw#4 )
  [299] print_ulong::dw#0 = (dword)print_slong::dw#6
  [300] call print_ulong 
  to:print_slong::@return
print_slong::@return: scope:[print_slong]  from print_slong::@2
  [301] return 
  to:@return
print_slong::@1: scope:[print_slong]  from print_slong
  [302] phi()
  [303] call print_char 
  to:print_slong::@4
print_slong::@4: scope:[print_slong]  from print_slong::@1
  [304] print_slong::dw#0 = - print_slong::dw#4
  to:print_slong::@2

void print_uchar(byte print_uchar::b)
print_uchar: scope:[print_uchar]  from print_uint print_uint::@1
  [305] print_char_cursor#145 = phi( print_uint/print_char_cursor#140, print_uint::@1/print_char_cursor#21 )
  [305] print_uchar::b#2 = phi( print_uint/print_uchar::b#0, print_uint::@1/print_uchar::b#1 )
  [306] print_uchar::$0 = print_uchar::b#2 >> 4
  [307] print_char::ch#5 = print_hextab[print_uchar::$0]
  [308] call print_char 
  to:print_uchar::@1
print_uchar::@1: scope:[print_uchar]  from print_uchar
  [309] print_uchar::$2 = print_uchar::b#2 & $f
  [310] print_char::ch#6 = print_hextab[print_uchar::$2]
  [311] call print_char 
  to:print_uchar::@return
print_uchar::@return: scope:[print_uchar]  from print_uchar::@1
  [312] return 
  to:@return


VARIABLE REGISTER WEIGHTS
void main()
void* memset(void* memset::str , byte memset::c , word memset::num)
byte memset::c
byte* memset::dst
byte* memset::dst#1 2002.0
byte* memset::dst#2 1334.6666666666667
byte* memset::end
word memset::num
void* memset::return
void* memset::str
signed dword mul16s(signed word mul16s::a , signed word mul16s::b)
word~ mul16s::$11 20002.0
word~ mul16s::$12 20002.0
word~ mul16s::$6 20002.0
word~ mul16s::$9 20002.0
signed word mul16s::a
signed word mul16s::a#0 785.8571428571429
signed word mul16s::b
signed word mul16s::b#0 1000.1818181818181
dword mul16s::m
dword mul16s::m#0 10001.0
dword mul16s::m#1 20002.0
dword mul16s::m#2 20002.0
dword mul16s::m#4 20002.0
dword mul16s::m#5 12501.25
signed dword mul16s::return
signed dword mul16s::return#0 3667.333333333333
signed dword mul16s::return#2 2002.0
void mul16s_compare()
signed word mul16s_compare::a
signed word mul16s_compare::a#1 176.44827586206898
signed word mul16s_compare::a#2 2103.0
signed word mul16s_compare::a#6 101.0
signed word mul16s_compare::b
signed word mul16s_compare::b#1 176.44827586206898
signed word mul16s_compare::b#2 1051.5
signed word mul16s_compare::b#6 101.0
byte mul16s_compare::i
byte mul16s_compare::i#1 151.5
byte mul16s_compare::i#12 6.9655172413793105
byte mul16s_compare::j
byte mul16s_compare::j#1 1501.5
byte mul16s_compare::j#10 80.08
signed dword mul16s_compare::mf
signed dword mul16s_compare::mf#0 154.84615384615384
signed dword mul16s_compare::mn
signed dword mul16s_compare::mn#0 118.41176470588235
signed dword mul16s_compare::ms
signed dword mul16s_compare::ms#0 143.52380952380952
byte mul16s_compare::ok
byte mul16s_compare::ok#3 2002.0
byte mul16s_compare::ok#4 333.6666666666667
void mul16s_error(signed word mul16s_error::a , signed word mul16s_error::b , signed dword mul16s_error::ms , signed dword mul16s_error::mn , signed dword mul16s_error::mf)
signed word mul16s_error::a
signed word mul16s_error::a#0 16.0
signed word mul16s_error::b
signed word mul16s_error::b#0 11.2
signed dword mul16s_error::mf
signed dword mul16s_error::mf#0 5.894736842105264
signed dword mul16s_error::mn
signed dword mul16s_error::mn#0 7.0
signed dword mul16s_error::ms
signed dword mul16s_error::ms#0 8.615384615384615
dword mul16u(word mul16u::a , word mul16u::b)
byte~ mul16u::$1 2.00000002E8
word mul16u::a
word mul16u::a#0 1.00000001E8
word mul16u::a#1 10001.0
word mul16u::a#2 1001.0
word mul16u::a#3 6.668333416666667E7
word mul16u::a#6 55501.5
word mul16u::b
word mul16u::b#0 20002.0
word mul16u::b#1 2002.0
word mul16u::b#2 11002.0
dword mul16u::mb
dword mul16u::mb#0 200002.0
dword mul16u::mb#1 2.00000002E8
dword mul16u::mb#2 4.287142914285715E7
dword mul16u::res
dword mul16u::res#1 2.00000002E8
dword mul16u::res#2 4.2858715E7
dword mul16u::res#6 1.00000001E8
dword mul16u::return
dword mul16u::return#2 20002.0
dword mul16u::return#3 2002.0
void mul16u_compare()
word mul16u_compare::a
word mul16u_compare::a#1 176.44827586206898
word mul16u_compare::a#2 2103.0
word mul16u_compare::a#6 101.0
word mul16u_compare::b
word mul16u_compare::b#1 176.44827586206898
word mul16u_compare::b#2 1051.5
word mul16u_compare::b#6 101.0
byte mul16u_compare::i
byte mul16u_compare::i#1 151.5
byte mul16u_compare::i#12 6.9655172413793105
byte mul16u_compare::j
byte mul16u_compare::j#1 1501.5
byte mul16u_compare::j#10 80.08
dword mul16u_compare::mf
dword mul16u_compare::mf#0 154.84615384615384
dword mul16u_compare::mn
dword mul16u_compare::mn#0 118.41176470588235
dword mul16u_compare::ms
dword mul16u_compare::ms#0 143.52380952380952
byte mul16u_compare::ok
byte mul16u_compare::ok#3 2002.0
byte mul16u_compare::ok#4 333.6666666666667
void mul16u_error(word mul16u_error::a , word mul16u_error::b , dword mul16u_error::ms , dword mul16u_error::mn , dword mul16u_error::mf)
word mul16u_error::a
word mul16u_error::a#0 16.0
word mul16u_error::b
word mul16u_error::b#0 11.2
dword mul16u_error::mf
dword mul16u_error::mf#0 5.894736842105264
dword mul16u_error::mn
dword mul16u_error::mn#0 7.0
dword mul16u_error::ms
dword mul16u_error::ms#0 8.615384615384615
signed dword mulf16s(signed word mulf16s::a , signed word mulf16s::b)
word~ mulf16s::$11 20002.0
word~ mulf16s::$12 20002.0
word~ mulf16s::$6 20002.0
word~ mulf16s::$9 20002.0
signed word mulf16s::a
signed word mulf16s::a#0 785.8571428571429
signed word mulf16s::b
signed word mulf16s::b#0 1000.1818181818181
dword mulf16s::m
dword mulf16s::m#0 10001.0
dword mulf16s::m#1 20002.0
dword mulf16s::m#2 20002.0
dword mulf16s::m#4 20002.0
dword mulf16s::m#5 12501.25
signed dword mulf16s::return
signed dword mulf16s::return#0 3667.333333333333
signed dword mulf16s::return#2 2002.0
dword mulf16u(word mulf16u::a , word mulf16u::b)
word mulf16u::a
word mulf16u::a#0 10001.0
word mulf16u::a#1 1001.0
word mulf16u::a#2 111003.0
word mulf16u::b
word mulf16u::b#0 20002.0
word mulf16u::b#1 2002.0
word mulf16u::b#2 55501.5
dword mulf16u::return
dword mulf16u::return#0 27750.75
dword mulf16u::return#2 20002.0
dword mulf16u::return#3 2002.0
void mulf_init()
byte~ mulf_init::$1 202.0
byte~ mulf_init::$4 202.0
byte~ mulf_init::$5 202.0
byte mulf_init::c
byte mulf_init::c#1 23.307692307692307
byte mulf_init::c#2 101.0
byte mulf_init::dir
byte mulf_init::dir#2 37.875
byte mulf_init::dir#4 101.0
word mulf_init::sqr
word mulf_init::sqr#1 101.0
word mulf_init::sqr#2 202.0
word mulf_init::sqr#3 84.16666666666666
word mulf_init::sqr#4 50.5
byte* mulf_init::sqr1_hi
byte* mulf_init::sqr1_hi#1 67.33333333333333
byte* mulf_init::sqr1_hi#2 25.25
byte* mulf_init::sqr1_lo
byte* mulf_init::sqr1_lo#1 202.0
byte* mulf_init::sqr1_lo#2 28.857142857142858
byte* mulf_init::sqr2_hi
byte* mulf_init::sqr2_hi#1 33.666666666666664
byte* mulf_init::sqr2_hi#2 75.75
byte* mulf_init::sqr2_lo
byte* mulf_init::sqr2_lo#1 202.0
byte* mulf_init::sqr2_lo#2 44.888888888888886
byte mulf_init::x_2
byte mulf_init::x_2#1 101.0
byte mulf_init::x_2#2 50.5
byte mulf_init::x_2#3 60.599999999999994
byte mulf_init::x_255
byte mulf_init::x_255#1 60.599999999999994
byte mulf_init::x_255#2 80.8
signed dword muls16s(signed word muls16s::a , signed word muls16s::b)
signed word muls16s::a
signed word muls16s::a#0 1668417.0833333333
signed word muls16s::b
signed word muls16s::b#0 1818273.0
signed word muls16s::i
signed word muls16s::i#1 2.0000002E7
signed word muls16s::i#2 1.0000001E7
signed word muls16s::j
signed word muls16s::j#1 2.0000002E7
signed word muls16s::j#2 1.0000001E7
signed dword muls16s::m
signed dword muls16s::m#1 1.0000001E7
signed dword muls16s::m#2 1.0000001E7
signed dword muls16s::m#3 1.50000015E7
signed dword muls16s::m#5 1.50000015E7
signed dword muls16s::return
signed dword muls16s::return#0 6667001.0
signed dword muls16s::return#2 2002.0
dword muls16u(word muls16u::a , word muls16u::b)
word muls16u::a
word muls16u::a#0 1430143.2857142857
word muls16u::b
word muls16u::b#0 1666833.6666666665
word muls16u::i
word muls16u::i#1 2.0000002E7
word muls16u::i#2 1.0000001E7
dword muls16u::m
dword muls16u::m#1 1.0000001E7
dword muls16u::m#3 1.50000015E7
dword muls16u::return
dword muls16u::return#0 3333667.333333333
dword muls16u::return#2 2002.0
void print_char(byte print_char::ch)
byte print_char::ch
byte print_char::ch#0 200002.0
byte print_char::ch#5 2000002.0
byte print_char::ch#6 2000002.0
byte print_char::ch#7 1.2100004E7
byte* print_char_cursor
byte* print_char_cursor#1 1838.928571428572
byte* print_char_cursor#136 2561.75
byte* print_char_cursor#140 60603.0
byte* print_char_cursor#141 5652.5
byte* print_char_cursor#145 400001.00000000006
byte* print_char_cursor#148 202.0
byte* print_char_cursor#152 213.0
byte* print_char_cursor#157 2235.0
byte* print_char_cursor#183 22.0
byte* print_char_cursor#190 22.0
byte* print_char_cursor#21 219863.07843137256
byte* print_char_cursor#223 22.0
byte* print_char_cursor#89 1.10520045E7
void print_cls()
byte* print_line_cursor
byte* print_line_cursor#0 386.7948717948718
byte* print_line_cursor#23 21003.0
byte* print_line_cursor#45 1135.0
void print_ln()
byte* print_screen
void print_sint(signed word print_sint::w)
signed word print_sint::w
signed word print_sint::w#0 2002.0
signed word print_sint::w#1 202.0
signed word print_sint::w#2 202.0
signed word print_sint::w#3 534.1666666666667
signed word print_sint::w#5 2002.0
void print_slong(signed dword print_slong::dw)
signed dword print_slong::dw
signed dword print_slong::dw#0 2002.0
signed dword print_slong::dw#1 202.0
signed dword print_slong::dw#2 202.0
signed dword print_slong::dw#3 202.0
signed dword print_slong::dw#4 551.0
signed dword print_slong::dw#6 2002.0
void print_str(byte* print_str::str)
byte* print_str::str
byte* print_str::str#0 200002.0
byte* print_str::str#15 100251.25
byte* print_str::str#18 1001.0
void print_uchar(byte print_uchar::b)
byte~ print_uchar::$0 2000002.0
byte~ print_uchar::$2 2000002.0
byte print_uchar::b
byte print_uchar::b#0 200002.0
byte print_uchar::b#1 200002.0
byte print_uchar::b#2 550001.0
void print_uint(word print_uint::w)
word print_uint::w
word print_uint::w#0 2002.0
word print_uint::w#1 20002.0
word print_uint::w#2 20002.0
word print_uint::w#3 202.0
word print_uint::w#4 202.0
word print_uint::w#5 73735.66666666666
void print_ulong(dword print_ulong::dw)
dword print_ulong::dw
dword print_ulong::dw#0 2002.0
dword print_ulong::dw#1 202.0
dword print_ulong::dw#2 202.0
dword print_ulong::dw#3 202.0
dword print_ulong::dw#4 7102.0

Initial phi equivalence classes
[ mulf_init::sqr1_lo#2 mulf_init::sqr1_lo#1 ]
[ mulf_init::c#2 mulf_init::c#1 ]
[ mulf_init::sqr1_hi#2 mulf_init::sqr1_hi#1 ]
[ mulf_init::x_2#3 mulf_init::x_2#2 mulf_init::x_2#1 ]
[ mulf_init::sqr2_lo#2 mulf_init::sqr2_lo#1 ]
[ mulf_init::x_255#2 mulf_init::x_255#1 ]
[ mulf_init::sqr2_hi#2 mulf_init::sqr2_hi#1 ]
[ mulf_init::dir#2 mulf_init::dir#4 ]
[ mulf_init::sqr#3 mulf_init::sqr#4 mulf_init::sqr#1 mulf_init::sqr#2 ]
[ mul16u_compare::i#12 mul16u_compare::i#1 ]
[ mul16u_compare::a#2 mul16u_compare::a#6 mul16u_compare::a#1 ]
[ mul16u_compare::b#2 mul16u_compare::b#6 mul16u_compare::b#1 ]
[ mul16u_compare::j#10 mul16u_compare::j#1 ]
[ mul16u_compare::ok#3 mul16u_compare::ok#4 ]
[ mul16s_compare::i#12 mul16s_compare::i#1 ]
[ mul16s_compare::a#2 mul16s_compare::a#6 mul16s_compare::a#1 ]
[ mul16s_compare::b#2 mul16s_compare::b#6 mul16s_compare::b#1 ]
[ mul16s_compare::j#10 mul16s_compare::j#1 ]
[ mul16s_compare::ok#3 mul16s_compare::ok#4 ]
[ memset::dst#2 memset::dst#1 ]
[ print_str::str#15 print_str::str#18 print_str::str#0 ]
[ muls16u::i#2 muls16u::i#1 ]
[ muls16u::return#0 muls16u::m#3 muls16u::m#1 ]
[ mul16u::b#2 mul16u::b#0 mul16u::b#1 ]
[ mul16u::a#3 mul16u::a#6 mul16u::a#1 mul16u::a#2 mul16u::a#0 ]
[ mul16u::res#2 mul16u::res#6 mul16u::res#1 ]
[ mul16u::mb#2 mul16u::mb#0 mul16u::mb#1 ]
[ mulf16u::a#2 mulf16u::a#1 mulf16u::a#0 ]
[ mulf16u::b#2 mulf16u::b#1 mulf16u::b#0 ]
[ print_line_cursor#23 print_line_cursor#45 print_line_cursor#0 ]
[ muls16s::j#2 muls16s::j#1 ]
[ muls16s::return#0 muls16s::m#3 muls16s::m#1 muls16s::m#5 muls16s::m#2 ]
[ muls16s::i#2 muls16s::i#1 ]
[ mul16s::m#4 mul16s::m#5 mul16s::m#1 mul16s::m#0 mul16s::m#2 ]
[ mulf16s::m#4 mulf16s::m#5 mulf16s::m#1 mulf16s::m#0 mulf16s::m#2 ]
[ print_char::ch#7 print_char::ch#0 print_char::ch#5 print_char::ch#6 ]
[ print_uint::w#5 print_uint::w#3 print_uint::w#4 print_uint::w#0 print_uint::w#1 print_uint::w#2 ]
[ print_char_cursor#140 print_char_cursor#89 print_char_cursor#136 print_char_cursor#157 print_char_cursor#152 print_char_cursor#223 print_char_cursor#148 print_char_cursor#1 print_char_cursor#183 print_char_cursor#21 print_char_cursor#190 print_char_cursor#145 print_char_cursor#141 ]
[ print_ulong::dw#4 print_ulong::dw#1 print_ulong::dw#2 print_ulong::dw#3 print_ulong::dw#0 ]
[ print_sint::w#5 print_sint::w#0 print_sint::w#3 print_sint::w#1 print_sint::w#2 ]
[ print_slong::dw#6 print_slong::dw#0 print_slong::dw#4 print_slong::dw#1 print_slong::dw#2 print_slong::dw#3 ]
[ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ]
Added variable mulf_init::$1 to live range equivalence class [ mulf_init::$1 ]
Added variable mulf_init::$4 to live range equivalence class [ mulf_init::$4 ]
Added variable mulf_init::$5 to live range equivalence class [ mulf_init::$5 ]
Added variable muls16u::a#0 to live range equivalence class [ muls16u::a#0 ]
Added variable muls16u::b#0 to live range equivalence class [ muls16u::b#0 ]
Added variable muls16u::return#2 to live range equivalence class [ muls16u::return#2 ]
Added variable mul16u_compare::ms#0 to live range equivalence class [ mul16u_compare::ms#0 ]
Added variable mul16u::return#3 to live range equivalence class [ mul16u::return#3 ]
Added variable mul16u_compare::mn#0 to live range equivalence class [ mul16u_compare::mn#0 ]
Added variable mulf16u::return#3 to live range equivalence class [ mulf16u::return#3 ]
Added variable mul16u_compare::mf#0 to live range equivalence class [ mul16u_compare::mf#0 ]
Added variable mul16u_error::a#0 to live range equivalence class [ mul16u_error::a#0 ]
Added variable mul16u_error::b#0 to live range equivalence class [ mul16u_error::b#0 ]
Added variable mul16u_error::ms#0 to live range equivalence class [ mul16u_error::ms#0 ]
Added variable mul16u_error::mn#0 to live range equivalence class [ mul16u_error::mn#0 ]
Added variable mul16u_error::mf#0 to live range equivalence class [ mul16u_error::mf#0 ]
Added variable muls16s::a#0 to live range equivalence class [ muls16s::a#0 ]
Added variable muls16s::b#0 to live range equivalence class [ muls16s::b#0 ]
Added variable muls16s::return#2 to live range equivalence class [ muls16s::return#2 ]
Added variable mul16s_compare::ms#0 to live range equivalence class [ mul16s_compare::ms#0 ]
Added variable mul16s::a#0 to live range equivalence class [ mul16s::a#0 ]
Added variable mul16s::b#0 to live range equivalence class [ mul16s::b#0 ]
Added variable mul16s::return#2 to live range equivalence class [ mul16s::return#2 ]
Added variable mul16s_compare::mn#0 to live range equivalence class [ mul16s_compare::mn#0 ]
Added variable mulf16s::a#0 to live range equivalence class [ mulf16s::a#0 ]
Added variable mulf16s::b#0 to live range equivalence class [ mulf16s::b#0 ]
Added variable mulf16s::return#2 to live range equivalence class [ mulf16s::return#2 ]
Added variable mul16s_compare::mf#0 to live range equivalence class [ mul16s_compare::mf#0 ]
Added variable mul16s_error::a#0 to live range equivalence class [ mul16s_error::a#0 ]
Added variable mul16s_error::b#0 to live range equivalence class [ mul16s_error::b#0 ]
Added variable mul16s_error::ms#0 to live range equivalence class [ mul16s_error::ms#0 ]
Added variable mul16s_error::mn#0 to live range equivalence class [ mul16s_error::mn#0 ]
Added variable mul16s_error::mf#0 to live range equivalence class [ mul16s_error::mf#0 ]
Added variable mul16u::$1 to live range equivalence class [ mul16u::$1 ]
Added variable mulf16u::return#0 to live range equivalence class [ mulf16u::return#0 ]
Added variable mul16u::return#2 to live range equivalence class [ mul16u::return#2 ]
Added variable mul16s::$6 to live range equivalence class [ mul16s::$6 ]
Added variable mul16s::$11 to live range equivalence class [ mul16s::$11 ]
Added variable mul16s::$9 to live range equivalence class [ mul16s::$9 ]
Added variable mul16s::$12 to live range equivalence class [ mul16s::$12 ]
Added variable mul16s::return#0 to live range equivalence class [ mul16s::return#0 ]
Added variable mulf16u::return#2 to live range equivalence class [ mulf16u::return#2 ]
Added variable mulf16s::$6 to live range equivalence class [ mulf16s::$6 ]
Added variable mulf16s::$11 to live range equivalence class [ mulf16s::$11 ]
Added variable mulf16s::$9 to live range equivalence class [ mulf16s::$9 ]
Added variable mulf16s::$12 to live range equivalence class [ mulf16s::$12 ]
Added variable mulf16s::return#0 to live range equivalence class [ mulf16s::return#0 ]
Added variable print_uchar::$0 to live range equivalence class [ print_uchar::$0 ]
Added variable print_uchar::$2 to live range equivalence class [ print_uchar::$2 ]
Complete equivalence classes
[ mulf_init::sqr1_lo#2 mulf_init::sqr1_lo#1 ]
[ mulf_init::c#2 mulf_init::c#1 ]
[ mulf_init::sqr1_hi#2 mulf_init::sqr1_hi#1 ]
[ mulf_init::x_2#3 mulf_init::x_2#2 mulf_init::x_2#1 ]
[ mulf_init::sqr2_lo#2 mulf_init::sqr2_lo#1 ]
[ mulf_init::x_255#2 mulf_init::x_255#1 ]
[ mulf_init::sqr2_hi#2 mulf_init::sqr2_hi#1 ]
[ mulf_init::dir#2 mulf_init::dir#4 ]
[ mulf_init::sqr#3 mulf_init::sqr#4 mulf_init::sqr#1 mulf_init::sqr#2 ]
[ mul16u_compare::i#12 mul16u_compare::i#1 ]
[ mul16u_compare::a#2 mul16u_compare::a#6 mul16u_compare::a#1 ]
[ mul16u_compare::b#2 mul16u_compare::b#6 mul16u_compare::b#1 ]
[ mul16u_compare::j#10 mul16u_compare::j#1 ]
[ mul16u_compare::ok#3 mul16u_compare::ok#4 ]
[ mul16s_compare::i#12 mul16s_compare::i#1 ]
[ mul16s_compare::a#2 mul16s_compare::a#6 mul16s_compare::a#1 ]
[ mul16s_compare::b#2 mul16s_compare::b#6 mul16s_compare::b#1 ]
[ mul16s_compare::j#10 mul16s_compare::j#1 ]
[ mul16s_compare::ok#3 mul16s_compare::ok#4 ]
[ memset::dst#2 memset::dst#1 ]
[ print_str::str#15 print_str::str#18 print_str::str#0 ]
[ muls16u::i#2 muls16u::i#1 ]
[ muls16u::return#0 muls16u::m#3 muls16u::m#1 ]
[ mul16u::b#2 mul16u::b#0 mul16u::b#1 ]
[ mul16u::a#3 mul16u::a#6 mul16u::a#1 mul16u::a#2 mul16u::a#0 ]
[ mul16u::res#2 mul16u::res#6 mul16u::res#1 ]
[ mul16u::mb#2 mul16u::mb#0 mul16u::mb#1 ]
[ mulf16u::a#2 mulf16u::a#1 mulf16u::a#0 ]
[ mulf16u::b#2 mulf16u::b#1 mulf16u::b#0 ]
[ print_line_cursor#23 print_line_cursor#45 print_line_cursor#0 ]
[ muls16s::j#2 muls16s::j#1 ]
[ muls16s::return#0 muls16s::m#3 muls16s::m#1 muls16s::m#5 muls16s::m#2 ]
[ muls16s::i#2 muls16s::i#1 ]
[ mul16s::m#4 mul16s::m#5 mul16s::m#1 mul16s::m#0 mul16s::m#2 ]
[ mulf16s::m#4 mulf16s::m#5 mulf16s::m#1 mulf16s::m#0 mulf16s::m#2 ]
[ print_char::ch#7 print_char::ch#0 print_char::ch#5 print_char::ch#6 ]
[ print_uint::w#5 print_uint::w#3 print_uint::w#4 print_uint::w#0 print_uint::w#1 print_uint::w#2 ]
[ print_char_cursor#140 print_char_cursor#89 print_char_cursor#136 print_char_cursor#157 print_char_cursor#152 print_char_cursor#223 print_char_cursor#148 print_char_cursor#1 print_char_cursor#183 print_char_cursor#21 print_char_cursor#190 print_char_cursor#145 print_char_cursor#141 ]
[ print_ulong::dw#4 print_ulong::dw#1 print_ulong::dw#2 print_ulong::dw#3 print_ulong::dw#0 ]
[ print_sint::w#5 print_sint::w#0 print_sint::w#3 print_sint::w#1 print_sint::w#2 ]
[ print_slong::dw#6 print_slong::dw#0 print_slong::dw#4 print_slong::dw#1 print_slong::dw#2 print_slong::dw#3 ]
[ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ]
[ mulf_init::$1 ]
[ mulf_init::$4 ]
[ mulf_init::$5 ]
[ muls16u::a#0 ]
[ muls16u::b#0 ]
[ muls16u::return#2 ]
[ mul16u_compare::ms#0 ]
[ mul16u::return#3 ]
[ mul16u_compare::mn#0 ]
[ mulf16u::return#3 ]
[ mul16u_compare::mf#0 ]
[ mul16u_error::a#0 ]
[ mul16u_error::b#0 ]
[ mul16u_error::ms#0 ]
[ mul16u_error::mn#0 ]
[ mul16u_error::mf#0 ]
[ muls16s::a#0 ]
[ muls16s::b#0 ]
[ muls16s::return#2 ]
[ mul16s_compare::ms#0 ]
[ mul16s::a#0 ]
[ mul16s::b#0 ]
[ mul16s::return#2 ]
[ mul16s_compare::mn#0 ]
[ mulf16s::a#0 ]
[ mulf16s::b#0 ]
[ mulf16s::return#2 ]
[ mul16s_compare::mf#0 ]
[ mul16s_error::a#0 ]
[ mul16s_error::b#0 ]
[ mul16s_error::ms#0 ]
[ mul16s_error::mn#0 ]
[ mul16s_error::mf#0 ]
[ mul16u::$1 ]
[ mulf16u::return#0 ]
[ mul16u::return#2 ]
[ mul16s::$6 ]
[ mul16s::$11 ]
[ mul16s::$9 ]
[ mul16s::$12 ]
[ mul16s::return#0 ]
[ mulf16u::return#2 ]
[ mulf16s::$6 ]
[ mulf16s::$11 ]
[ mulf16s::$9 ]
[ mulf16s::$12 ]
[ mulf16s::return#0 ]
[ print_uchar::$0 ]
[ print_uchar::$2 ]
Allocated zp[2]:2 [ mulf_init::sqr1_lo#2 mulf_init::sqr1_lo#1 ]
Allocated zp[1]:4 [ mulf_init::c#2 mulf_init::c#1 ]
Allocated zp[2]:5 [ mulf_init::sqr1_hi#2 mulf_init::sqr1_hi#1 ]
Allocated zp[1]:7 [ mulf_init::x_2#3 mulf_init::x_2#2 mulf_init::x_2#1 ]
Allocated zp[2]:8 [ mulf_init::sqr2_lo#2 mulf_init::sqr2_lo#1 ]
Allocated zp[1]:10 [ mulf_init::x_255#2 mulf_init::x_255#1 ]
Allocated zp[2]:11 [ mulf_init::sqr2_hi#2 mulf_init::sqr2_hi#1 ]
Allocated zp[1]:13 [ mulf_init::dir#2 mulf_init::dir#4 ]
Allocated zp[2]:14 [ mulf_init::sqr#3 mulf_init::sqr#4 mulf_init::sqr#1 mulf_init::sqr#2 ]
Allocated zp[1]:16 [ mul16u_compare::i#12 mul16u_compare::i#1 ]
Allocated zp[2]:17 [ mul16u_compare::a#2 mul16u_compare::a#6 mul16u_compare::a#1 ]
Allocated zp[2]:19 [ mul16u_compare::b#2 mul16u_compare::b#6 mul16u_compare::b#1 ]
Allocated zp[1]:21 [ mul16u_compare::j#10 mul16u_compare::j#1 ]
Allocated zp[1]:22 [ mul16u_compare::ok#3 mul16u_compare::ok#4 ]
Allocated zp[1]:23 [ mul16s_compare::i#12 mul16s_compare::i#1 ]
Allocated zp[2]:24 [ mul16s_compare::a#2 mul16s_compare::a#6 mul16s_compare::a#1 ]
Allocated zp[2]:26 [ mul16s_compare::b#2 mul16s_compare::b#6 mul16s_compare::b#1 ]
Allocated zp[1]:28 [ mul16s_compare::j#10 mul16s_compare::j#1 ]
Allocated zp[1]:29 [ mul16s_compare::ok#3 mul16s_compare::ok#4 ]
Allocated zp[2]:30 [ memset::dst#2 memset::dst#1 ]
Allocated zp[2]:32 [ print_str::str#15 print_str::str#18 print_str::str#0 ]
Allocated zp[2]:34 [ muls16u::i#2 muls16u::i#1 ]
Allocated zp[4]:36 [ muls16u::return#0 muls16u::m#3 muls16u::m#1 ]
Allocated zp[2]:40 [ mul16u::b#2 mul16u::b#0 mul16u::b#1 ]
Allocated zp[2]:42 [ mul16u::a#3 mul16u::a#6 mul16u::a#1 mul16u::a#2 mul16u::a#0 ]
Allocated zp[4]:44 [ mul16u::res#2 mul16u::res#6 mul16u::res#1 ]
Allocated zp[4]:48 [ mul16u::mb#2 mul16u::mb#0 mul16u::mb#1 ]
Allocated zp[2]:52 [ mulf16u::a#2 mulf16u::a#1 mulf16u::a#0 ]
Allocated zp[2]:54 [ mulf16u::b#2 mulf16u::b#1 mulf16u::b#0 ]
Allocated zp[2]:56 [ print_line_cursor#23 print_line_cursor#45 print_line_cursor#0 ]
Allocated zp[2]:58 [ muls16s::j#2 muls16s::j#1 ]
Allocated zp[4]:60 [ muls16s::return#0 muls16s::m#3 muls16s::m#1 muls16s::m#5 muls16s::m#2 ]
Allocated zp[2]:64 [ muls16s::i#2 muls16s::i#1 ]
Allocated zp[4]:66 [ mul16s::m#4 mul16s::m#5 mul16s::m#1 mul16s::m#0 mul16s::m#2 ]
Allocated zp[4]:70 [ mulf16s::m#4 mulf16s::m#5 mulf16s::m#1 mulf16s::m#0 mulf16s::m#2 ]
Allocated zp[1]:74 [ print_char::ch#7 print_char::ch#0 print_char::ch#5 print_char::ch#6 ]
Allocated zp[2]:75 [ print_uint::w#5 print_uint::w#3 print_uint::w#4 print_uint::w#0 print_uint::w#1 print_uint::w#2 ]
Allocated zp[2]:77 [ print_char_cursor#140 print_char_cursor#89 print_char_cursor#136 print_char_cursor#157 print_char_cursor#152 print_char_cursor#223 print_char_cursor#148 print_char_cursor#1 print_char_cursor#183 print_char_cursor#21 print_char_cursor#190 print_char_cursor#145 print_char_cursor#141 ]
Allocated zp[4]:79 [ print_ulong::dw#4 print_ulong::dw#1 print_ulong::dw#2 print_ulong::dw#3 print_ulong::dw#0 ]
Allocated zp[2]:83 [ print_sint::w#5 print_sint::w#0 print_sint::w#3 print_sint::w#1 print_sint::w#2 ]
Allocated zp[4]:85 [ print_slong::dw#6 print_slong::dw#0 print_slong::dw#4 print_slong::dw#1 print_slong::dw#2 print_slong::dw#3 ]
Allocated zp[1]:89 [ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ]
Allocated zp[1]:90 [ mulf_init::$1 ]
Allocated zp[1]:91 [ mulf_init::$4 ]
Allocated zp[1]:92 [ mulf_init::$5 ]
Allocated zp[2]:93 [ muls16u::a#0 ]
Allocated zp[2]:95 [ muls16u::b#0 ]
Allocated zp[4]:97 [ muls16u::return#2 ]
Allocated zp[4]:101 [ mul16u_compare::ms#0 ]
Allocated zp[4]:105 [ mul16u::return#3 ]
Allocated zp[4]:109 [ mul16u_compare::mn#0 ]
Allocated zp[4]:113 [ mulf16u::return#3 ]
Allocated zp[4]:117 [ mul16u_compare::mf#0 ]
Allocated zp[2]:121 [ mul16u_error::a#0 ]
Allocated zp[2]:123 [ mul16u_error::b#0 ]
Allocated zp[4]:125 [ mul16u_error::ms#0 ]
Allocated zp[4]:129 [ mul16u_error::mn#0 ]
Allocated zp[4]:133 [ mul16u_error::mf#0 ]
Allocated zp[2]:137 [ muls16s::a#0 ]
Allocated zp[2]:139 [ muls16s::b#0 ]
Allocated zp[4]:141 [ muls16s::return#2 ]
Allocated zp[4]:145 [ mul16s_compare::ms#0 ]
Allocated zp[2]:149 [ mul16s::a#0 ]
Allocated zp[2]:151 [ mul16s::b#0 ]
Allocated zp[4]:153 [ mul16s::return#2 ]
Allocated zp[4]:157 [ mul16s_compare::mn#0 ]
Allocated zp[2]:161 [ mulf16s::a#0 ]
Allocated zp[2]:163 [ mulf16s::b#0 ]
Allocated zp[4]:165 [ mulf16s::return#2 ]
Allocated zp[4]:169 [ mul16s_compare::mf#0 ]
Allocated zp[2]:173 [ mul16s_error::a#0 ]
Allocated zp[2]:175 [ mul16s_error::b#0 ]
Allocated zp[4]:177 [ mul16s_error::ms#0 ]
Allocated zp[4]:181 [ mul16s_error::mn#0 ]
Allocated zp[4]:185 [ mul16s_error::mf#0 ]
Allocated zp[1]:189 [ mul16u::$1 ]
Allocated zp[4]:190 [ mulf16u::return#0 ]
Allocated zp[4]:194 [ mul16u::return#2 ]
Allocated zp[2]:198 [ mul16s::$6 ]
Allocated zp[2]:200 [ mul16s::$11 ]
Allocated zp[2]:202 [ mul16s::$9 ]
Allocated zp[2]:204 [ mul16s::$12 ]
Allocated zp[4]:206 [ mul16s::return#0 ]
Allocated zp[4]:210 [ mulf16u::return#2 ]
Allocated zp[2]:214 [ mulf16s::$6 ]
Allocated zp[2]:216 [ mulf16s::$11 ]
Allocated zp[2]:218 [ mulf16s::$9 ]
Allocated zp[2]:220 [ mulf16s::$12 ]
Allocated zp[4]:222 [ mulf16s::return#0 ]
Allocated zp[1]:226 [ print_uchar::$0 ]
Allocated zp[1]:227 [ print_uchar::$2 ]
REGISTER UPLIFT POTENTIAL REGISTERS
Statement [0] *BG_COLOR = 5 [ ] (  [ ] { }  ) always clobbers reg byte a 
Statement [14] if(mulf_init::sqr1_lo#2!=mulf_sqr1_lo+$200) goto mulf_init::@2 [ mulf_init::sqr1_lo#2 mulf_init::c#2 mulf_init::sqr#4 mulf_init::sqr1_hi#2 mulf_init::x_2#3 ] ( mulf_init:3 [ mulf_init::sqr1_lo#2 mulf_init::c#2 mulf_init::sqr#4 mulf_init::sqr1_hi#2 mulf_init::x_2#3 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:4 [ mulf_init::c#2 mulf_init::c#1 ]
Removing always clobbered register reg byte a as potential for zp[1]:7 [ mulf_init::x_2#3 mulf_init::x_2#2 mulf_init::x_2#1 ]
Statement [16] if(mulf_init::sqr2_lo#2!=mulf_sqr2_lo+$1ff) goto mulf_init::@6 [ mulf_init::sqr2_lo#2 mulf_init::x_255#2 mulf_init::sqr2_hi#2 mulf_init::dir#2 ] ( mulf_init:3 [ mulf_init::sqr2_lo#2 mulf_init::x_255#2 mulf_init::sqr2_hi#2 mulf_init::dir#2 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:10 [ mulf_init::x_255#2 mulf_init::x_255#1 ]
Removing always clobbered register reg byte a as potential for zp[1]:13 [ mulf_init::dir#2 mulf_init::dir#4 ]
Statement [17] *(mulf_sqr2_lo+$1ff) = *(mulf_sqr1_lo+$100) [ ] ( mulf_init:3 [ ] { }  ) always clobbers reg byte a 
Statement [18] *(mulf_sqr2_hi+$1ff) = *(mulf_sqr1_hi+$100) [ ] ( mulf_init:3 [ ] { }  ) always clobbers reg byte a 
Statement [20] *mulf_init::sqr2_lo#2 = mulf_sqr1_lo[mulf_init::x_255#2] [ mulf_init::sqr2_lo#2 mulf_init::x_255#2 mulf_init::sqr2_hi#2 mulf_init::dir#2 ] ( mulf_init:3 [ mulf_init::sqr2_lo#2 mulf_init::x_255#2 mulf_init::sqr2_hi#2 mulf_init::dir#2 ] { }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:10 [ mulf_init::x_255#2 mulf_init::x_255#1 ]
Removing always clobbered register reg byte y as potential for zp[1]:13 [ mulf_init::dir#2 mulf_init::dir#4 ]
Statement [21] *mulf_init::sqr2_hi#2 = mulf_sqr1_hi[mulf_init::x_255#2] [ mulf_init::sqr2_lo#2 mulf_init::x_255#2 mulf_init::sqr2_hi#2 mulf_init::dir#2 ] ( mulf_init:3 [ mulf_init::sqr2_lo#2 mulf_init::x_255#2 mulf_init::sqr2_hi#2 mulf_init::dir#2 ] { }  ) always clobbers reg byte a reg byte y 
Statement [23] mulf_init::x_255#1 = mulf_init::x_255#2 + mulf_init::dir#2 [ mulf_init::sqr2_lo#2 mulf_init::dir#2 mulf_init::x_255#1 mulf_init::sqr2_hi#1 ] ( mulf_init:3 [ mulf_init::sqr2_lo#2 mulf_init::dir#2 mulf_init::x_255#1 mulf_init::sqr2_hi#1 ] { }  ) always clobbers reg byte a 
Statement [29] mulf_init::$1 = mulf_init::c#1 & 1 [ mulf_init::sqr1_lo#2 mulf_init::sqr#4 mulf_init::sqr1_hi#2 mulf_init::x_2#3 mulf_init::c#1 mulf_init::$1 ] ( mulf_init:3 [ mulf_init::sqr1_lo#2 mulf_init::sqr#4 mulf_init::sqr1_hi#2 mulf_init::x_2#3 mulf_init::c#1 mulf_init::$1 ] { }  ) always clobbers reg byte a 
Statement [35] *mulf_init::sqr1_lo#2 = mulf_init::$4 [ mulf_init::sqr1_lo#2 mulf_init::sqr1_hi#2 mulf_init::c#1 mulf_init::x_2#2 mulf_init::sqr#3 ] ( mulf_init:3 [ mulf_init::sqr1_lo#2 mulf_init::sqr1_hi#2 mulf_init::c#1 mulf_init::x_2#2 mulf_init::sqr#3 ] { }  ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:4 [ mulf_init::c#2 mulf_init::c#1 ]
Removing always clobbered register reg byte y as potential for zp[1]:7 [ mulf_init::x_2#3 mulf_init::x_2#2 mulf_init::x_2#1 ]
Statement [37] *mulf_init::sqr1_hi#2 = mulf_init::$5 [ mulf_init::sqr1_lo#2 mulf_init::sqr1_hi#2 mulf_init::c#1 mulf_init::x_2#2 mulf_init::sqr#3 ] ( mulf_init:3 [ mulf_init::sqr1_lo#2 mulf_init::sqr1_hi#2 mulf_init::c#1 mulf_init::x_2#2 mulf_init::sqr#3 ] { }  ) always clobbers reg byte y 
Statement [39] mulf_init::sqr#1 = mulf_init::sqr#3 + mulf_init::x_2#2 [ mulf_init::sqr1_lo#2 mulf_init::c#1 mulf_init::sqr#1 mulf_init::sqr1_hi#1 mulf_init::x_2#2 ] ( mulf_init:3 [ mulf_init::sqr1_lo#2 mulf_init::c#1 mulf_init::sqr#1 mulf_init::sqr1_hi#1 mulf_init::x_2#2 ] { }  ) always clobbers reg byte a 
Statement [45] mul16u_compare::a#1 = mul16u_compare::a#2 + $d2b [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#2 mul16u_compare::j#10 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#2 mul16u_compare::j#10 ] { { muls16u::a#0 = mul16u_compare::a#1 } { muls16u::b#0 = mul16u_compare::b#1 } { muls16u::return#0 = muls16u::return#2 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:16 [ mul16u_compare::i#12 mul16u_compare::i#1 ]
Removing always clobbered register reg byte a as potential for zp[1]:21 [ mul16u_compare::j#10 mul16u_compare::j#1 ]
Statement [46] mul16u_compare::b#1 = mul16u_compare::b#2 + $ffd [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 ] { { muls16u::a#0 = mul16u_compare::a#1 } { muls16u::b#0 = mul16u_compare::b#1 } { muls16u::return#0 = muls16u::return#2 } }  ) always clobbers reg byte a 
Statement [47] muls16u::a#0 = mul16u_compare::a#1 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 muls16u::a#0 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 muls16u::a#0 ] { { muls16u::a#0 = mul16u_compare::a#1 } { muls16u::b#0 = mul16u_compare::b#1 } { muls16u::return#0 = muls16u::return#2 } }  ) always clobbers reg byte a 
Statement [48] muls16u::b#0 = mul16u_compare::b#1 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 muls16u::a#0 muls16u::b#0 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 muls16u::a#0 muls16u::b#0 ] { { muls16u::a#0 = mul16u_compare::a#1 } { muls16u::b#0 = mul16u_compare::b#1 } { muls16u::return#0 = muls16u::return#2 } }  ) always clobbers reg byte a 
Statement [50] muls16u::return#2 = muls16u::return#0 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 muls16u::return#2 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 muls16u::return#2 ] { { muls16u::a#0 = mul16u_compare::a#1 } { muls16u::b#0 = mul16u_compare::b#1 } { muls16u::return#0 = muls16u::return#2 } }  ) always clobbers reg byte a 
Statement [51] mul16u_compare::ms#0 = muls16u::return#2 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 ] { { mul16u::b#1 = mul16u::b#2 mul16u_compare::b#1 } { mul16u::a#2 = mul16u::a#6 mul16u_compare::a#1 } { mul16u::return#3 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [52] mul16u::a#2 = mul16u_compare::a#1 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u::a#2 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u::a#2 ] { { mul16u::b#1 = mul16u::b#2 mul16u_compare::b#1 } { mul16u::a#2 = mul16u::a#6 mul16u_compare::a#1 } { mul16u::return#3 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [53] mul16u::b#1 = mul16u_compare::b#1 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u::a#2 mul16u::b#1 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u::a#2 mul16u::b#1 ] { { mul16u::b#1 = mul16u::b#2 mul16u_compare::b#1 } { mul16u::a#2 = mul16u::a#6 mul16u_compare::a#1 } { mul16u::return#3 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [55] mul16u::return#3 = mul16u::res#2 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u::return#3 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u::return#3 ] { { mul16u::b#1 = mul16u::b#2 mul16u_compare::b#1 } { mul16u::a#2 = mul16u::a#6 mul16u_compare::a#1 } { mul16u::return#3 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [56] mul16u_compare::mn#0 = mul16u::return#3 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 ] { { mulf16u::a#1 = mulf16u::a#2 mul16u_compare::a#1 } { mulf16u::b#1 = mulf16u::b#2 mul16u_compare::b#1 } { mulf16u::return#0 = mulf16u::return#3 } }  ) always clobbers reg byte a 
Statement [57] mulf16u::a#1 = mul16u_compare::a#1 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mulf16u::a#1 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mulf16u::a#1 ] { { mulf16u::a#1 = mulf16u::a#2 mul16u_compare::a#1 } { mulf16u::b#1 = mulf16u::b#2 mul16u_compare::b#1 } { mulf16u::return#0 = mulf16u::return#3 } }  ) always clobbers reg byte a 
Statement [58] mulf16u::b#1 = mul16u_compare::b#1 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mulf16u::a#1 mulf16u::b#1 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mulf16u::a#1 mulf16u::b#1 ] { { mulf16u::a#1 = mulf16u::a#2 mul16u_compare::a#1 } { mulf16u::b#1 = mulf16u::b#2 mul16u_compare::b#1 } { mulf16u::return#0 = mulf16u::return#3 } }  ) always clobbers reg byte a 
Statement [60] mulf16u::return#3 = mulf16u::return#0 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mulf16u::return#3 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mulf16u::return#3 ] { { mulf16u::a#1 = mulf16u::a#2 mul16u_compare::a#1 } { mulf16u::b#1 = mulf16u::b#2 mul16u_compare::b#1 } { mulf16u::return#0 = mulf16u::return#3 } }  ) always clobbers reg byte a 
Statement [61] mul16u_compare::mf#0 = mulf16u::return#3 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mul16u_compare::mf#0 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mul16u_compare::mf#0 ] { }  ) always clobbers reg byte a 
Statement [62] if(mul16u_compare::ms#0==mul16u_compare::mf#0) goto mul16u_compare::@3 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mul16u_compare::mf#0 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mul16u_compare::mf#0 ] { }  ) always clobbers reg byte a 
Statement [65] if(mul16u_compare::ms#0==mul16u_compare::mn#0) goto mul16u_compare::@15 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mul16u_compare::mf#0 mul16u_compare::ok#4 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mul16u_compare::mf#0 mul16u_compare::ok#4 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:22 [ mul16u_compare::ok#3 mul16u_compare::ok#4 ]
Statement [69] *BG_COLOR = 2 [ print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::ms#0 mul16u_compare::mn#0 mul16u_compare::mf#0 ] ( mul16u_compare:5 [ print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::ms#0 mul16u_compare::mn#0 mul16u_compare::mf#0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [70] mul16u_error::a#0 = mul16u_compare::a#1 [ print_char_cursor#1 mul16u_compare::b#1 mul16u_compare::ms#0 mul16u_compare::mn#0 mul16u_compare::mf#0 mul16u_error::a#0 ] ( mul16u_compare:5 [ print_char_cursor#1 mul16u_compare::b#1 mul16u_compare::ms#0 mul16u_compare::mn#0 mul16u_compare::mf#0 mul16u_error::a#0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [71] mul16u_error::b#0 = mul16u_compare::b#1 [ print_char_cursor#1 mul16u_compare::ms#0 mul16u_compare::mn#0 mul16u_compare::mf#0 mul16u_error::a#0 mul16u_error::b#0 ] ( mul16u_compare:5 [ print_char_cursor#1 mul16u_compare::ms#0 mul16u_compare::mn#0 mul16u_compare::mf#0 mul16u_error::a#0 mul16u_error::b#0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [72] mul16u_error::ms#0 = mul16u_compare::ms#0 [ print_char_cursor#1 mul16u_compare::mn#0 mul16u_compare::mf#0 mul16u_error::a#0 mul16u_error::b#0 mul16u_error::ms#0 ] ( mul16u_compare:5 [ print_char_cursor#1 mul16u_compare::mn#0 mul16u_compare::mf#0 mul16u_error::a#0 mul16u_error::b#0 mul16u_error::ms#0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [73] mul16u_error::mn#0 = mul16u_compare::mn#0 [ print_char_cursor#1 mul16u_compare::mf#0 mul16u_error::a#0 mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 ] ( mul16u_compare:5 [ print_char_cursor#1 mul16u_compare::mf#0 mul16u_error::a#0 mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [74] mul16u_error::mf#0 = mul16u_compare::mf#0 [ print_char_cursor#1 mul16u_error::a#0 mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 ] ( mul16u_compare:5 [ print_char_cursor#1 mul16u_error::a#0 mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [83] print_char_cursor#190 = print_line_cursor#0 [ print_char_cursor#190 print_line_cursor#0 ] ( mul16u_compare:5 [ print_char_cursor#190 print_line_cursor#0 ] { { print_char_cursor#157 = print_char_cursor#190 } }  ) always clobbers reg byte a 
Statement [87] print_char_cursor#223 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#223 ] ( mul16s_compare:7 [ print_line_cursor#0 print_char_cursor#223 ] { }  ) always clobbers reg byte a 
Statement [91] mul16s_compare::a#1 = mul16s_compare::a#2 + $d2b [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#2 mul16s_compare::j#10 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#2 mul16s_compare::j#10 ] { { muls16s::a#0 = mul16s_compare::a#1 } { muls16s::b#0 = mul16s_compare::b#1 } { muls16s::return#0 = muls16s::return#2 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:23 [ mul16s_compare::i#12 mul16s_compare::i#1 ]
Removing always clobbered register reg byte a as potential for zp[1]:28 [ mul16s_compare::j#10 mul16s_compare::j#1 ]
Statement [92] mul16s_compare::b#1 = mul16s_compare::b#2 + $ffd [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 ] { { muls16s::a#0 = mul16s_compare::a#1 } { muls16s::b#0 = mul16s_compare::b#1 } { muls16s::return#0 = muls16s::return#2 } }  ) always clobbers reg byte a 
Statement [93] muls16s::a#0 = mul16s_compare::a#1 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::a#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::a#0 ] { { muls16s::a#0 = mul16s_compare::a#1 } { muls16s::b#0 = mul16s_compare::b#1 } { muls16s::return#0 = muls16s::return#2 } }  ) always clobbers reg byte a 
Statement [94] muls16s::b#0 = mul16s_compare::b#1 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::a#0 muls16s::b#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::a#0 muls16s::b#0 ] { { muls16s::a#0 = mul16s_compare::a#1 } { muls16s::b#0 = mul16s_compare::b#1 } { muls16s::return#0 = muls16s::return#2 } }  ) always clobbers reg byte a 
Statement [96] muls16s::return#2 = muls16s::return#0 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::return#2 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::return#2 ] { { muls16s::a#0 = mul16s_compare::a#1 } { muls16s::b#0 = mul16s_compare::b#1 } { muls16s::return#0 = muls16s::return#2 } }  ) always clobbers reg byte a 
Statement [97] mul16s_compare::ms#0 = muls16s::return#2 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [98] mul16s::a#0 = mul16s_compare::a#1 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [99] mul16s::b#0 = mul16s_compare::b#1 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [101] mul16s::return#2 = mul16s::return#0 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::return#2 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::return#2 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [102] mul16s_compare::mn#0 = mul16s::return#2 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [103] mulf16s::a#0 = mul16s_compare::a#1 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [104] mulf16s::b#0 = mul16s_compare::b#1 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [106] mulf16s::return#2 = mulf16s::return#0 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::return#2 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::return#2 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [107] mul16s_compare::mf#0 = mulf16s::return#2 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mul16s_compare::mf#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mul16s_compare::mf#0 ] { }  ) always clobbers reg byte a 
Statement [108] if(mul16s_compare::ms#0==mul16s_compare::mf#0) goto mul16s_compare::@3 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mul16s_compare::mf#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mul16s_compare::mf#0 ] { }  ) always clobbers reg byte a 
Statement [111] if(mul16s_compare::ms#0==mul16s_compare::mn#0) goto mul16s_compare::@15 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mul16s_compare::mf#0 mul16s_compare::ok#4 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mul16s_compare::mf#0 mul16s_compare::ok#4 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:29 [ mul16s_compare::ok#3 mul16s_compare::ok#4 ]
Statement [115] *BG_COLOR = 2 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::ms#0 mul16s_compare::mn#0 mul16s_compare::mf#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::ms#0 mul16s_compare::mn#0 mul16s_compare::mf#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [116] mul16s_error::a#0 = mul16s_compare::a#1 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::b#1 mul16s_compare::ms#0 mul16s_compare::mn#0 mul16s_compare::mf#0 mul16s_error::a#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::b#1 mul16s_compare::ms#0 mul16s_compare::mn#0 mul16s_compare::mf#0 mul16s_error::a#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [117] mul16s_error::b#0 = mul16s_compare::b#1 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::ms#0 mul16s_compare::mn#0 mul16s_compare::mf#0 mul16s_error::a#0 mul16s_error::b#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::ms#0 mul16s_compare::mn#0 mul16s_compare::mf#0 mul16s_error::a#0 mul16s_error::b#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [118] mul16s_error::ms#0 = mul16s_compare::ms#0 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::mn#0 mul16s_compare::mf#0 mul16s_error::a#0 mul16s_error::b#0 mul16s_error::ms#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::mn#0 mul16s_compare::mf#0 mul16s_error::a#0 mul16s_error::b#0 mul16s_error::ms#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [119] mul16s_error::mn#0 = mul16s_compare::mn#0 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::mf#0 mul16s_error::a#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::mf#0 mul16s_error::a#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [120] mul16s_error::mf#0 = mul16s_compare::mf#0 [ print_char_cursor#1 print_line_cursor#0 mul16s_error::a#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_error::a#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [129] print_char_cursor#183 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#183 ] ( mul16s_compare:7 [ print_line_cursor#0 print_char_cursor#183 ] { { print_char_cursor#157 = print_char_cursor#183 } }  ) always clobbers reg byte a 
Statement [135] if(memset::dst#2!=memset::end#0) goto memset::@2 [ memset::dst#2 ] ( print_cls:1::memset:10 [ memset::dst#2 ] { }  ) always clobbers reg byte a 
Statement [137] *memset::dst#2 = memset::c#0 [ memset::dst#2 ] ( print_cls:1::memset:10 [ memset::dst#2 ] { }  ) always clobbers reg byte a reg byte y 
Statement [141] if(0!=*print_str::str#15) goto print_str::@2 [ print_char_cursor#1 print_str::str#15 ] ( mul16u_compare:5::print_str:43 [ mul16u_compare::a#6 mul16u_compare::b#6 mul16u_compare::i#12 print_char_cursor#1 print_str::str#15 ] { { print_char_cursor#148 = print_char_cursor#157 } }  mul16u_compare:5::print_str:84 [ print_line_cursor#0 print_char_cursor#1 print_str::str#15 ] { { print_char_cursor#157 = print_char_cursor#190 } }  mul16s_compare:7::print_str:89 [ print_line_cursor#0 mul16s_compare::a#6 mul16s_compare::b#6 mul16s_compare::i#12 print_char_cursor#1 print_str::str#15 ] { { print_char_cursor#152 = print_char_cursor#157 } }  mul16s_compare:7::print_str:130 [ print_line_cursor#0 print_char_cursor#1 print_str::str#15 ] { { print_char_cursor#157 = print_char_cursor#183 } }  mul16u_compare:5::mul16u_error:75::print_str:171 [ mul16u_error::a#0 mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#1 print_str::str#15 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#157 } }  mul16u_compare:5::mul16u_error:75::print_str:175 [ mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#1 print_str::str#15 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } }  mul16u_compare:5::mul16u_error:75::print_str:179 [ mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#1 print_str::str#15 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } }  mul16u_compare:5::mul16u_error:75::print_str:183 [ mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#1 print_str::str#15 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } }  mul16u_compare:5::mul16u_error:75::print_str:187 [ mul16u_error::mf#0 print_char_cursor#1 print_str::str#15 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } }  mul16s_compare:7::mul16s_error:121::print_str:245 [ print_line_cursor#0 mul16s_error::a#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#1 print_str::str#15 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#157 } }  mul16s_compare:7::mul16s_error:121::print_str:249 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#1 print_str::str#15 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } }  mul16s_compare:7::mul16s_error:121::print_str:253 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#1 print_str::str#15 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } }  mul16s_compare:7::mul16s_error:121::print_str:257 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#1 print_str::str#15 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } }  mul16s_compare:7::mul16s_error:121::print_str:261 [ print_line_cursor#0 mul16s_error::mf#0 print_char_cursor#1 print_str::str#15 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:16 [ mul16u_compare::i#12 mul16u_compare::i#1 ]
Removing always clobbered register reg byte y as potential for zp[1]:23 [ mul16s_compare::i#12 mul16s_compare::i#1 ]
Statement [143] print_char::ch#0 = *print_str::str#15 [ print_char_cursor#1 print_str::str#15 print_char::ch#0 ] ( mul16u_compare:5::print_str:43 [ mul16u_compare::a#6 mul16u_compare::b#6 mul16u_compare::i#12 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { print_char_cursor#148 = print_char_cursor#157 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16u_compare:5::print_str:84 [ print_line_cursor#0 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { print_char_cursor#157 = print_char_cursor#190 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::print_str:89 [ print_line_cursor#0 mul16s_compare::a#6 mul16s_compare::b#6 mul16s_compare::i#12 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { print_char_cursor#152 = print_char_cursor#157 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::print_str:130 [ print_line_cursor#0 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { print_char_cursor#157 = print_char_cursor#183 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_str:171 [ mul16u_error::a#0 mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#157 print_char_cursor#89 } { print_char::ch#0 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_str:175 [ mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_str:179 [ mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_str:183 [ mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_str:187 [ mul16u_error::mf#0 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_str:245 [ print_line_cursor#0 mul16s_error::a#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#157 print_char_cursor#89 } { print_char::ch#0 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_str:249 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_str:253 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_str:257 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_str:261 [ print_line_cursor#0 mul16s_error::mf#0 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  ) always clobbers reg byte a reg byte y 
Statement [146] if(muls16u::a#0==0) goto muls16u::@1 [ muls16u::a#0 muls16u::b#0 ] ( mul16u_compare:5::muls16u:49 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 muls16u::a#0 muls16u::b#0 ] { { muls16u::a#0 = mul16u_compare::a#1 } { muls16u::b#0 = mul16u_compare::b#1 } { muls16u::return#0 = muls16u::return#2 } }  ) always clobbers reg byte a 
Statement [148] if(muls16u::i#2!=muls16u::a#0) goto muls16u::@3 [ muls16u::a#0 muls16u::b#0 muls16u::i#2 muls16u::m#3 ] ( mul16u_compare:5::muls16u:49 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 muls16u::a#0 muls16u::b#0 muls16u::i#2 muls16u::m#3 ] { { muls16u::a#0 = mul16u_compare::a#1 } { muls16u::b#0 = mul16u_compare::b#1 } { muls16u::return#0 = muls16u::return#2 } }  ) always clobbers reg byte a 
Statement [151] muls16u::m#1 = muls16u::m#3 + muls16u::b#0 [ muls16u::a#0 muls16u::b#0 muls16u::i#2 muls16u::m#1 ] ( mul16u_compare:5::muls16u:49 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 muls16u::a#0 muls16u::b#0 muls16u::i#2 muls16u::m#1 ] { { muls16u::a#0 = mul16u_compare::a#1 } { muls16u::b#0 = mul16u_compare::b#1 } { muls16u::return#0 = muls16u::return#2 } }  ) always clobbers reg byte a 
Statement [154] mul16u::mb#0 = (dword)mul16u::b#2 [ mul16u::a#6 mul16u::mb#0 ] ( mul16u_compare:5::mul16u:54 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u::a#6 mul16u::mb#0 ] { { mul16u::b#1 = mul16u::b#2 mul16u_compare::b#1 } { mul16u::a#2 = mul16u::a#6 mul16u_compare::a#1 } { mul16u::return#3 = mul16u::res#2 } }  mul16s_compare:7::mul16s:100::mul16u:212 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 mul16u::a#6 mul16u::mb#0 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } { mul16u::b#0 = mul16u::b#2 } { mul16u::a#1 = mul16u::a#6 } { mul16u::return#2 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [156] if(mul16u::a#3!=0) goto mul16u::@2 [ mul16u::res#2 mul16u::a#3 mul16u::mb#2 ] ( mul16u_compare:5::mul16u:54 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u::res#2 mul16u::a#3 mul16u::mb#2 ] { { mul16u::b#1 = mul16u::b#2 mul16u_compare::b#1 } { mul16u::a#2 = mul16u::a#6 mul16u_compare::a#1 } { mul16u::return#3 = mul16u::res#2 } }  mul16s_compare:7::mul16s:100::mul16u:212 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 mul16u::res#2 mul16u::a#3 mul16u::mb#2 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } { mul16u::b#0 = mul16u::b#2 } { mul16u::a#1 = mul16u::a#6 } { mul16u::return#2 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [158] mul16u::$1 = mul16u::a#3 & 1 [ mul16u::res#2 mul16u::a#3 mul16u::mb#2 mul16u::$1 ] ( mul16u_compare:5::mul16u:54 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u::res#2 mul16u::a#3 mul16u::mb#2 mul16u::$1 ] { { mul16u::b#1 = mul16u::b#2 mul16u_compare::b#1 } { mul16u::a#2 = mul16u::a#6 mul16u_compare::a#1 } { mul16u::return#3 = mul16u::res#2 } }  mul16s_compare:7::mul16s:100::mul16u:212 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 mul16u::res#2 mul16u::a#3 mul16u::mb#2 mul16u::$1 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } { mul16u::b#0 = mul16u::b#2 } { mul16u::a#1 = mul16u::a#6 } { mul16u::return#2 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [160] mul16u::res#1 = mul16u::res#2 + mul16u::mb#2 [ mul16u::a#3 mul16u::mb#2 mul16u::res#1 ] ( mul16u_compare:5::mul16u:54 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u::a#3 mul16u::mb#2 mul16u::res#1 ] { { mul16u::b#1 = mul16u::b#2 mul16u_compare::b#1 } { mul16u::a#2 = mul16u::a#6 mul16u_compare::a#1 } { mul16u::return#3 = mul16u::res#2 } }  mul16s_compare:7::mul16s:100::mul16u:212 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 mul16u::a#3 mul16u::mb#2 mul16u::res#1 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } { mul16u::b#0 = mul16u::b#2 } { mul16u::a#1 = mul16u::a#6 } { mul16u::return#2 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [165] *mulf16u::memA = mulf16u::a#2 [ mulf16u::b#2 ] ( mul16u_compare:5::mulf16u:59 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mulf16u::b#2 ] { { mulf16u::a#1 = mulf16u::a#2 mul16u_compare::a#1 } { mulf16u::b#1 = mulf16u::b#2 mul16u_compare::b#1 } { mulf16u::return#0 = mulf16u::return#3 } }  mul16s_compare:7::mulf16s:105::mulf16u:229 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 mulf16u::b#2 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } { mulf16u::a#0 = mulf16u::a#2 } { mulf16u::b#0 = mulf16u::b#2 } { mulf16u::return#0 = mulf16u::return#2 } }  ) always clobbers reg byte a 
Statement [166] *mulf16u::memB = mulf16u::b#2 [ ] ( mul16u_compare:5::mulf16u:59 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 ] { { mulf16u::a#1 = mulf16u::a#2 mul16u_compare::a#1 } { mulf16u::b#1 = mulf16u::b#2 mul16u_compare::b#1 } { mulf16u::return#0 = mulf16u::return#3 } }  mul16s_compare:7::mulf16s:105::mulf16u:229 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } { mulf16u::a#0 = mulf16u::a#2 } { mulf16u::b#0 = mulf16u::b#2 } { mulf16u::return#0 = mulf16u::return#2 } }  ) always clobbers reg byte a 
Statement asm { ldamemA stasm1a+1 stasm3a+1 stasm5a+1 stasm7a+1 eor#$ff stasm2a+1 stasm4a+1 stasm6a+1 stasm8a+1 ldamemA+1 stasm1b+1 stasm3b+1 stasm5b+1 stasm7b+1 eor#$ff stasm2b+1 stasm4b+1 stasm6b+1 stasm8b+1 ldxmemB sec sm1a: ldamulf_sqr1_lo,x sm2a: sbcmulf_sqr2_lo,x stamemR+0 sm3a: ldamulf_sqr1_hi,x sm4a: sbcmulf_sqr2_hi,x sta_AA+1 sec sm1b: ldamulf_sqr1_lo,x sm2b: sbcmulf_sqr2_lo,x sta_cc+1 sm3b: ldamulf_sqr1_hi,x sm4b: sbcmulf_sqr2_hi,x sta_CC+1 ldxmemB+1 sec sm5a: ldamulf_sqr1_lo,x sm6a: sbcmulf_sqr2_lo,x sta_bb+1 sm7a: ldamulf_sqr1_hi,x sm8a: sbcmulf_sqr2_hi,x sta_BB+1 sec sm5b: ldamulf_sqr1_lo,x sm6b: sbcmulf_sqr2_lo,x sta_dd+1 sm7b: ldamulf_sqr1_hi,x sm8b: sbcmulf_sqr2_hi,x stamemR+3 clc _AA: lda#0 _bb: adc#0 stamemR+1 _BB: lda#0 _CC: adc#0 stamemR+2 bcc!+ incmemR+3 clc !: _cc: lda#0 adcmemR+1 stamemR+1 _dd: lda#0 adcmemR+2 stamemR+2 bcc!+ incmemR+3 !:  } always clobbers reg byte a reg byte x 
Removing always clobbered register reg byte x as potential for zp[1]:16 [ mul16u_compare::i#12 mul16u_compare::i#1 ]
Removing always clobbered register reg byte x as potential for zp[1]:21 [ mul16u_compare::j#10 mul16u_compare::j#1 ]
Removing always clobbered register reg byte x as potential for zp[1]:23 [ mul16s_compare::i#12 mul16s_compare::i#1 ]
Removing always clobbered register reg byte x as potential for zp[1]:28 [ mul16s_compare::j#10 mul16s_compare::j#1 ]
Statement [168] mulf16u::return#0 = *mulf16u::memR [ mulf16u::return#0 ] ( mul16u_compare:5::mulf16u:59 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mulf16u::return#0 ] { { mulf16u::a#1 = mulf16u::a#2 mul16u_compare::a#1 } { mulf16u::b#1 = mulf16u::b#2 mul16u_compare::b#1 } { mulf16u::return#0 = mulf16u::return#3 } }  mul16s_compare:7::mulf16s:105::mulf16u:229 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 mulf16u::return#0 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } { mulf16u::a#0 = mulf16u::a#2 } { mulf16u::b#0 = mulf16u::b#2 } { mulf16u::return#0 = mulf16u::return#2 } }  ) always clobbers reg byte a 
Statement [172] print_uint::w#3 = mul16u_error::a#0 [ print_char_cursor#1 mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#3 ] ( mul16u_compare:5::mul16u_error:75 [ print_char_cursor#1 mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#3 ] { { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#3 = print_uint::w#5 mul16u_error::a#0 mul16u_compare::a#1 } { print_char_cursor#1 = print_char_cursor#140 } }  ) always clobbers reg byte a 
Statement [176] print_uint::w#4 = mul16u_error::b#0 [ print_char_cursor#1 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#4 ] ( mul16u_compare:5::mul16u_error:75 [ print_char_cursor#1 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#4 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#4 = print_uint::w#5 mul16u_error::b#0 mul16u_compare::b#1 } { print_char_cursor#1 = print_char_cursor#140 } }  ) always clobbers reg byte a 
Statement [180] print_ulong::dw#1 = mul16u_error::ms#0 [ print_char_cursor#1 mul16u_error::mn#0 mul16u_error::mf#0 print_ulong::dw#1 ] ( mul16u_compare:5::mul16u_error:75 [ print_char_cursor#1 mul16u_error::mn#0 mul16u_error::mf#0 print_ulong::dw#1 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 } }  ) always clobbers reg byte a 
Statement [184] print_ulong::dw#2 = mul16u_error::mn#0 [ print_char_cursor#1 mul16u_error::mf#0 print_ulong::dw#2 ] ( mul16u_compare:5::mul16u_error:75 [ print_char_cursor#1 mul16u_error::mf#0 print_ulong::dw#2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 } }  ) always clobbers reg byte a 
Statement [188] print_ulong::dw#3 = mul16u_error::mf#0 [ print_char_cursor#1 print_ulong::dw#3 ] ( mul16u_compare:5::mul16u_error:75 [ print_char_cursor#1 print_ulong::dw#3 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 } }  ) always clobbers reg byte a 
Statement [195] print_line_cursor#0 = print_line_cursor#23 + $28 [ print_line_cursor#0 print_char_cursor#136 ] ( mul16u_compare:5::print_ln:82 [ print_line_cursor#0 print_char_cursor#136 ] { { print_char_cursor#1 = print_char_cursor#136 } }  mul16u_compare:5::print_ln:86 [ print_line_cursor#0 print_char_cursor#136 ] { { print_line_cursor#0 = print_line_cursor#45 } { print_char_cursor#1 = print_char_cursor#136 } }  mul16s_compare:7::print_ln:128 [ print_line_cursor#0 print_char_cursor#136 ] { { print_line_cursor#0 = print_line_cursor#45 } { print_char_cursor#1 = print_char_cursor#136 } }  mul16s_compare:7::print_ln:132 [ print_line_cursor#0 print_char_cursor#136 ] { { print_line_cursor#0 = print_line_cursor#45 } { print_char_cursor#1 = print_char_cursor#136 } }  mul16u_compare:5::mul16u_error:75::print_ln:191 [ print_line_cursor#0 print_char_cursor#136 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#136 = print_char_cursor#21 } }  mul16s_compare:7::mul16s_error:121::print_ln:265 [ print_line_cursor#0 print_char_cursor#136 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_line_cursor#0 = print_line_cursor#45 } { print_char_cursor#136 = print_char_cursor#21 } }  ) always clobbers reg byte a 
Statement [196] if(print_line_cursor#0<print_char_cursor#136) goto print_ln::@1 [ print_line_cursor#0 print_char_cursor#136 ] ( mul16u_compare:5::print_ln:82 [ print_line_cursor#0 print_char_cursor#136 ] { { print_char_cursor#1 = print_char_cursor#136 } }  mul16u_compare:5::print_ln:86 [ print_line_cursor#0 print_char_cursor#136 ] { { print_line_cursor#0 = print_line_cursor#45 } { print_char_cursor#1 = print_char_cursor#136 } }  mul16s_compare:7::print_ln:128 [ print_line_cursor#0 print_char_cursor#136 ] { { print_line_cursor#0 = print_line_cursor#45 } { print_char_cursor#1 = print_char_cursor#136 } }  mul16s_compare:7::print_ln:132 [ print_line_cursor#0 print_char_cursor#136 ] { { print_line_cursor#0 = print_line_cursor#45 } { print_char_cursor#1 = print_char_cursor#136 } }  mul16u_compare:5::mul16u_error:75::print_ln:191 [ print_line_cursor#0 print_char_cursor#136 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#136 = print_char_cursor#21 } }  mul16s_compare:7::mul16s_error:121::print_ln:265 [ print_line_cursor#0 print_char_cursor#136 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_line_cursor#0 = print_line_cursor#45 } { print_char_cursor#136 = print_char_cursor#21 } }  ) always clobbers reg byte a 
Statement [198] if(muls16s::a#0<0) goto muls16s::@5 [ muls16s::a#0 muls16s::b#0 ] ( mul16s_compare:7::muls16s:95 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::a#0 muls16s::b#0 ] { { muls16s::a#0 = mul16s_compare::a#1 } { muls16s::b#0 = mul16s_compare::b#1 } { muls16s::return#0 = muls16s::return#2 } }  ) always clobbers reg byte a 
Statement [199] if(muls16s::a#0<=0) goto muls16s::@1 [ muls16s::a#0 muls16s::b#0 ] ( mul16s_compare:7::muls16s:95 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::a#0 muls16s::b#0 ] { { muls16s::a#0 = mul16s_compare::a#1 } { muls16s::b#0 = mul16s_compare::b#1 } { muls16s::return#0 = muls16s::return#2 } }  ) always clobbers reg byte a 
Statement [201] if(muls16s::j#2!=muls16s::a#0) goto muls16s::@4 [ muls16s::a#0 muls16s::b#0 muls16s::j#2 muls16s::m#3 ] ( mul16s_compare:7::muls16s:95 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::a#0 muls16s::b#0 muls16s::j#2 muls16s::m#3 ] { { muls16s::a#0 = mul16s_compare::a#1 } { muls16s::b#0 = mul16s_compare::b#1 } { muls16s::return#0 = muls16s::return#2 } }  ) always clobbers reg byte a 
Statement [204] muls16s::m#1 = muls16s::m#3 + muls16s::b#0 [ muls16s::a#0 muls16s::b#0 muls16s::j#2 muls16s::m#1 ] ( mul16s_compare:7::muls16s:95 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::a#0 muls16s::b#0 muls16s::j#2 muls16s::m#1 ] { { muls16s::a#0 = mul16s_compare::a#1 } { muls16s::b#0 = mul16s_compare::b#1 } { muls16s::return#0 = muls16s::return#2 } }  ) always clobbers reg byte a 
Statement [207] if(muls16s::i#2!=muls16s::a#0) goto muls16s::@6 [ muls16s::a#0 muls16s::b#0 muls16s::m#5 muls16s::i#2 ] ( mul16s_compare:7::muls16s:95 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::a#0 muls16s::b#0 muls16s::m#5 muls16s::i#2 ] { { muls16s::a#0 = mul16s_compare::a#1 } { muls16s::b#0 = mul16s_compare::b#1 } { muls16s::return#0 = muls16s::return#2 } }  ) always clobbers reg byte a 
Statement [208] muls16s::m#2 = muls16s::m#5 - muls16s::b#0 [ muls16s::a#0 muls16s::b#0 muls16s::i#2 muls16s::m#2 ] ( mul16s_compare:7::muls16s:95 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::a#0 muls16s::b#0 muls16s::i#2 muls16s::m#2 ] { { muls16s::a#0 = mul16s_compare::a#1 } { muls16s::b#0 = mul16s_compare::b#1 } { muls16s::return#0 = muls16s::return#2 } }  ) always clobbers reg byte a 
Statement [209] muls16s::i#1 = -- muls16s::i#2 [ muls16s::a#0 muls16s::b#0 muls16s::i#1 muls16s::m#2 ] ( mul16s_compare:7::muls16s:95 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::a#0 muls16s::b#0 muls16s::i#1 muls16s::m#2 ] { { muls16s::a#0 = mul16s_compare::a#1 } { muls16s::b#0 = mul16s_compare::b#1 } { muls16s::return#0 = muls16s::return#2 } }  ) always clobbers reg byte a 
Statement [210] mul16u::a#1 = (word)mul16s::a#0 [ mul16s::a#0 mul16s::b#0 mul16u::a#1 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 mul16u::a#1 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } { mul16u::b#0 = mul16u::b#2 } { mul16u::a#1 = mul16u::a#6 } { mul16u::return#2 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [211] mul16u::b#0 = (word)mul16s::b#0 [ mul16s::a#0 mul16s::b#0 mul16u::b#0 mul16u::a#1 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 mul16u::b#0 mul16u::a#1 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } { mul16u::b#0 = mul16u::b#2 } { mul16u::a#1 = mul16u::a#6 } { mul16u::return#2 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [213] mul16u::return#2 = mul16u::res#2 [ mul16s::a#0 mul16s::b#0 mul16u::return#2 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 mul16u::return#2 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } { mul16u::b#0 = mul16u::b#2 } { mul16u::a#1 = mul16u::a#6 } { mul16u::return#2 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [214] mul16s::m#0 = mul16u::return#2 [ mul16s::a#0 mul16s::b#0 mul16s::m#0 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 mul16s::m#0 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [215] if(mul16s::a#0>=0) goto mul16s::@1 [ mul16s::a#0 mul16s::b#0 mul16s::m#0 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 mul16s::m#0 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [216] mul16s::$6 = > mul16s::m#0 [ mul16s::a#0 mul16s::b#0 mul16s::m#0 mul16s::$6 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 mul16s::m#0 mul16s::$6 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [217] mul16s::$11 = mul16s::$6 - (word)mul16s::b#0 [ mul16s::a#0 mul16s::b#0 mul16s::m#0 mul16s::$11 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 mul16s::m#0 mul16s::$11 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [218] mul16s::m#1 = mul16s::m#0 hi= mul16s::$11 [ mul16s::a#0 mul16s::b#0 mul16s::m#1 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 mul16s::m#1 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [220] if(mul16s::b#0>=0) goto mul16s::@2 [ mul16s::a#0 mul16s::m#5 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::m#5 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [221] mul16s::$9 = > mul16s::m#5 [ mul16s::a#0 mul16s::m#5 mul16s::$9 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::m#5 mul16s::$9 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [222] mul16s::$12 = mul16s::$9 - (word)mul16s::a#0 [ mul16s::m#5 mul16s::$12 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::m#5 mul16s::$12 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [223] mul16s::m#2 = mul16s::m#5 hi= mul16s::$12 [ mul16s::m#2 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::m#2 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [225] mul16s::return#0 = (signed dword)mul16s::m#4 [ mul16s::return#0 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::return#0 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [227] mulf16u::a#0 = (word)mulf16s::a#0 [ mulf16s::a#0 mulf16s::b#0 mulf16u::a#0 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 mulf16u::a#0 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } { mulf16u::a#0 = mulf16u::a#2 } { mulf16u::b#0 = mulf16u::b#2 } { mulf16u::return#0 = mulf16u::return#2 } }  ) always clobbers reg byte a 
Statement [228] mulf16u::b#0 = (word)mulf16s::b#0 [ mulf16s::a#0 mulf16s::b#0 mulf16u::a#0 mulf16u::b#0 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 mulf16u::a#0 mulf16u::b#0 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } { mulf16u::a#0 = mulf16u::a#2 } { mulf16u::b#0 = mulf16u::b#2 } { mulf16u::return#0 = mulf16u::return#2 } }  ) always clobbers reg byte a 
Statement [230] mulf16u::return#2 = mulf16u::return#0 [ mulf16s::a#0 mulf16s::b#0 mulf16u::return#2 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 mulf16u::return#2 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } { mulf16u::a#0 = mulf16u::a#2 } { mulf16u::b#0 = mulf16u::b#2 } { mulf16u::return#0 = mulf16u::return#2 } }  ) always clobbers reg byte a 
Statement [231] mulf16s::m#0 = mulf16u::return#2 [ mulf16s::a#0 mulf16s::b#0 mulf16s::m#0 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 mulf16s::m#0 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [232] if(mulf16s::a#0>=0) goto mulf16s::@1 [ mulf16s::a#0 mulf16s::b#0 mulf16s::m#0 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 mulf16s::m#0 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [233] mulf16s::$6 = > mulf16s::m#0 [ mulf16s::a#0 mulf16s::b#0 mulf16s::m#0 mulf16s::$6 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 mulf16s::m#0 mulf16s::$6 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [234] mulf16s::$11 = mulf16s::$6 - (word)mulf16s::b#0 [ mulf16s::a#0 mulf16s::b#0 mulf16s::m#0 mulf16s::$11 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 mulf16s::m#0 mulf16s::$11 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [235] mulf16s::m#1 = mulf16s::m#0 hi= mulf16s::$11 [ mulf16s::a#0 mulf16s::b#0 mulf16s::m#1 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 mulf16s::m#1 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [237] if(mulf16s::b#0>=0) goto mulf16s::@2 [ mulf16s::a#0 mulf16s::m#5 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::m#5 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [238] mulf16s::$9 = > mulf16s::m#5 [ mulf16s::a#0 mulf16s::m#5 mulf16s::$9 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::m#5 mulf16s::$9 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [239] mulf16s::$12 = mulf16s::$9 - (word)mulf16s::a#0 [ mulf16s::m#5 mulf16s::$12 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::m#5 mulf16s::$12 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [240] mulf16s::m#2 = mulf16s::m#5 hi= mulf16s::$12 [ mulf16s::m#2 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::m#2 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [242] mulf16s::return#0 = (signed dword)mulf16s::m#4 [ mulf16s::return#0 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::return#0 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [246] print_sint::w#1 = mul16s_error::a#0 [ print_char_cursor#1 print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_sint::w#1 ] ( mul16s_compare:7::mul16s_error:121 [ print_char_cursor#1 print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_sint::w#1 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } }  ) always clobbers reg byte a 
Statement [250] print_sint::w#2 = mul16s_error::b#0 [ print_char_cursor#1 print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_sint::w#2 ] ( mul16s_compare:7::mul16s_error:121 [ print_char_cursor#1 print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_sint::w#2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } }  ) always clobbers reg byte a 
Statement [254] print_slong::dw#1 = mul16s_error::ms#0 [ print_char_cursor#1 print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_slong::dw#1 ] ( mul16s_compare:7::mul16s_error:121 [ print_char_cursor#1 print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_slong::dw#1 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } }  ) always clobbers reg byte a 
Statement [258] print_slong::dw#2 = mul16s_error::mn#0 [ print_char_cursor#1 print_line_cursor#0 mul16s_error::mf#0 print_slong::dw#2 ] ( mul16s_compare:7::mul16s_error:121 [ print_char_cursor#1 print_line_cursor#0 mul16s_error::mf#0 print_slong::dw#2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } }  ) always clobbers reg byte a 
Statement [262] print_slong::dw#3 = mul16s_error::mf#0 [ print_char_cursor#1 print_line_cursor#0 print_slong::dw#3 ] ( mul16s_compare:7::mul16s_error:121 [ print_char_cursor#1 print_line_cursor#0 print_slong::dw#3 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [268] *print_char_cursor#89 = print_char::ch#7 [ print_char_cursor#89 ] ( mul16u_compare:5::print_str:43::print_char:144 [ mul16u_compare::a#6 mul16u_compare::b#6 mul16u_compare::i#12 print_str::str#15 print_char_cursor#89 ] { { print_char_cursor#148 = print_char_cursor#157 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16u_compare:5::print_str:84::print_char:144 [ print_line_cursor#0 print_str::str#15 print_char_cursor#89 ] { { print_char_cursor#157 = print_char_cursor#190 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::print_str:89::print_char:144 [ print_line_cursor#0 mul16s_compare::a#6 mul16s_compare::b#6 mul16s_compare::i#12 print_str::str#15 print_char_cursor#89 ] { { print_char_cursor#152 = print_char_cursor#157 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::print_str:130::print_char:144 [ print_line_cursor#0 print_str::str#15 print_char_cursor#89 ] { { print_char_cursor#157 = print_char_cursor#183 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_str:171::print_char:144 [ mul16u_error::a#0 mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_str::str#15 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#157 print_char_cursor#89 } { print_char::ch#0 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_str:175::print_char:144 [ mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_str::str#15 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_str:179::print_char:144 [ mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_str::str#15 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_str:183::print_char:144 [ mul16u_error::mn#0 mul16u_error::mf#0 print_str::str#15 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_str:187::print_char:144 [ mul16u_error::mf#0 print_str::str#15 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_str:245::print_char:144 [ print_line_cursor#0 mul16s_error::a#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_str::str#15 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#157 print_char_cursor#89 } { print_char::ch#0 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_str:249::print_char:144 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_str::str#15 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_str:253::print_char:144 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_str::str#15 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_str:257::print_char:144 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_str::str#15 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_str:261::print_char:144 [ print_line_cursor#0 mul16s_error::mf#0 print_str::str#15 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_sint:247::print_char:286 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_sint::w#3 print_char_cursor#89 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_sint:251::print_char:286 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_sint::w#3 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_sint:247::print_char:292 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_sint::w#3 print_char_cursor#89 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_sint:251::print_char:292 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_sint::w#3 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_char:297 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_slong::dw#4 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_char:297 [ print_line_cursor#0 mul16s_error::mf#0 print_slong::dw#4 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_char:297 [ print_line_cursor#0 print_slong::dw#4 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_char:303 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_slong::dw#4 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_char:303 [ print_line_cursor#0 mul16s_error::mf#0 print_slong::dw#4 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_char:303 [ print_line_cursor#0 print_slong::dw#4 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_uint:173::print_uchar:273::print_char:308 [ mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#3 = print_uint::w#5 mul16u_error::a#0 mul16u_compare::a#1 } { print_char_cursor#1 = print_char_cursor#140 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_uint:177::print_uchar:273::print_char:308 [ mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#4 = print_uint::w#5 mul16u_error::b#0 mul16u_compare::b#1 } { print_char_cursor#1 = print_char_cursor#140 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:279::print_uchar:273::print_char:308 [ mul16u_error::mn#0 mul16u_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:279::print_uchar:273::print_char:308 [ mul16u_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:279::print_uchar:273::print_char:308 [ print_ulong::dw#4 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:279::print_uchar:273::print_char:308 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:279::print_uchar:273::print_char:308 [ print_line_cursor#0 mul16s_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:279::print_uchar:273::print_char:308 [ print_line_cursor#0 print_ulong::dw#4 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:281::print_uchar:273::print_char:308 [ mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:281::print_uchar:273::print_char:308 [ mul16u_error::mf#0 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:281::print_uchar:273::print_char:308 [ print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:281::print_uchar:273::print_char:308 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:281::print_uchar:273::print_char:308 [ print_line_cursor#0 mul16s_error::mf#0 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:281::print_uchar:273::print_char:308 [ print_line_cursor#0 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:247::print_uint:289::print_uchar:273::print_char:308 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:251::print_uint:289::print_uchar:273::print_char:308 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_uint:173::print_uchar:275::print_char:308 [ mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#3 = print_uint::w#5 mul16u_error::a#0 mul16u_compare::a#1 } { print_char_cursor#1 = print_char_cursor#140 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_uint:177::print_uchar:275::print_char:308 [ mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#4 = print_uint::w#5 mul16u_error::b#0 mul16u_compare::b#1 } { print_char_cursor#1 = print_char_cursor#140 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:279::print_uchar:275::print_char:308 [ mul16u_error::mn#0 mul16u_error::mf#0 print_ulong::dw#4 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:279::print_uchar:275::print_char:308 [ mul16u_error::mf#0 print_ulong::dw#4 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:279::print_uchar:275::print_char:308 [ print_ulong::dw#4 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:279::print_uchar:275::print_char:308 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_ulong::dw#4 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:279::print_uchar:275::print_char:308 [ print_line_cursor#0 mul16s_error::mf#0 print_ulong::dw#4 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:279::print_uchar:275::print_char:308 [ print_line_cursor#0 print_ulong::dw#4 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:281::print_uchar:275::print_char:308 [ mul16u_error::mn#0 mul16u_error::mf#0 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:281::print_uchar:275::print_char:308 [ mul16u_error::mf#0 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:281::print_uchar:275::print_char:308 [ print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:281::print_uchar:275::print_char:308 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:281::print_uchar:275::print_char:308 [ print_line_cursor#0 mul16s_error::mf#0 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:281::print_uchar:275::print_char:308 [ print_line_cursor#0 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:247::print_uint:289::print_uchar:275::print_char:308 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:251::print_uint:289::print_uchar:275::print_char:308 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_uint:173::print_uchar:273::print_char:311 [ mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#5 print_char_cursor#89 ] { { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#3 = print_uint::w#5 mul16u_error::a#0 mul16u_compare::a#1 } { print_char_cursor#1 = print_char_cursor#140 print_char_cursor#145 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } { print_char_cursor#21 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_uint:177::print_uchar:273::print_char:311 [ mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#5 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#4 = print_uint::w#5 mul16u_error::b#0 mul16u_compare::b#1 } { print_char_cursor#1 = print_char_cursor#140 print_char_cursor#145 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } { print_char_cursor#21 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:279::print_uchar:273::print_char:311 [ mul16u_error::mn#0 mul16u_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 print_char_cursor#145 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } { print_char_cursor#21 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:279::print_uchar:273::print_char:311 [ mul16u_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 print_char_cursor#145 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } { print_char_cursor#21 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:279::print_uchar:273::print_char:311 [ print_ulong::dw#4 print_uint::w#5 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 print_char_cursor#145 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } { print_char_cursor#21 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:279::print_uchar:273::print_char:311 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:279::print_uchar:273::print_char:311 [ print_line_cursor#0 mul16s_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:279::print_uchar:273::print_char:311 [ print_line_cursor#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:281::print_uchar:273::print_char:311 [ mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#5 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:281::print_uchar:273::print_char:311 [ mul16u_error::mf#0 print_uint::w#5 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:281::print_uchar:273::print_char:311 [ print_uint::w#5 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:281::print_uchar:273::print_char:311 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#5 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:281::print_uchar:273::print_char:311 [ print_line_cursor#0 mul16s_error::mf#0 print_uint::w#5 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:281::print_uchar:273::print_char:311 [ print_line_cursor#0 print_uint::w#5 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:247::print_uint:289::print_uchar:273::print_char:311 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#5 print_char_cursor#89 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:251::print_uint:289::print_uchar:273::print_char:311 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#5 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_uint:173::print_uchar:275::print_char:311 [ mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#89 ] { { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#3 = print_uint::w#5 mul16u_error::a#0 mul16u_compare::a#1 } { print_char_cursor#1 = print_char_cursor#140 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_uint:177::print_uchar:275::print_char:311 [ mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#4 = print_uint::w#5 mul16u_error::b#0 mul16u_compare::b#1 } { print_char_cursor#1 = print_char_cursor#140 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:279::print_uchar:275::print_char:311 [ mul16u_error::mn#0 mul16u_error::mf#0 print_ulong::dw#4 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:279::print_uchar:275::print_char:311 [ mul16u_error::mf#0 print_ulong::dw#4 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:279::print_uchar:275::print_char:311 [ print_ulong::dw#4 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:279::print_uchar:275::print_char:311 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_ulong::dw#4 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:279::print_uchar:275::print_char:311 [ print_line_cursor#0 mul16s_error::mf#0 print_ulong::dw#4 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:279::print_uchar:275::print_char:311 [ print_line_cursor#0 print_ulong::dw#4 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:281::print_uchar:275::print_char:311 [ mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:281::print_uchar:275::print_char:311 [ mul16u_error::mf#0 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:281::print_uchar:275::print_char:311 [ print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:281::print_uchar:275::print_char:311 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:281::print_uchar:275::print_char:311 [ print_line_cursor#0 mul16s_error::mf#0 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:281::print_uchar:275::print_char:311 [ print_line_cursor#0 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:247::print_uint:289::print_uchar:275::print_char:311 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#89 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:251::print_uint:289::print_uchar:275::print_char:311 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:89 [ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ]
Statement [278] print_uint::w#1 = > print_ulong::dw#4 [ print_uint::w#1 print_char_cursor#141 print_ulong::dw#4 ] ( mul16u_compare:5::mul16u_error:75::print_ulong:181 [ mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#1 print_char_cursor#141 print_ulong::dw#4 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185 [ mul16u_error::mf#0 print_uint::w#1 print_char_cursor#141 print_ulong::dw#4 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189 [ print_uint::w#1 print_char_cursor#141 print_ulong::dw#4 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#1 print_char_cursor#141 print_ulong::dw#4 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 } { print_uint::w#1 = print_uint::w#5 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300 [ print_line_cursor#0 mul16s_error::mf#0 print_uint::w#1 print_char_cursor#141 print_ulong::dw#4 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 } { print_uint::w#1 = print_uint::w#5 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300 [ print_line_cursor#0 print_uint::w#1 print_char_cursor#141 print_ulong::dw#4 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 } { print_uint::w#1 = print_uint::w#5 } }  ) always clobbers reg byte a 
Statement [280] print_uint::w#2 = < print_ulong::dw#4 [ print_char_cursor#21 print_uint::w#2 ] ( mul16u_compare:5::mul16u_error:75::print_ulong:181 [ mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#21 print_uint::w#2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185 [ mul16u_error::mf#0 print_char_cursor#21 print_uint::w#2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189 [ print_char_cursor#21 print_uint::w#2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#21 print_uint::w#2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 } { print_uint::w#2 = print_uint::w#5 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300 [ print_line_cursor#0 mul16s_error::mf#0 print_char_cursor#21 print_uint::w#2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 } { print_uint::w#2 = print_uint::w#5 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300 [ print_line_cursor#0 print_char_cursor#21 print_uint::w#2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 } { print_uint::w#2 = print_uint::w#5 } }  ) always clobbers reg byte a 
Statement [284] if(print_sint::w#3<0) goto print_sint::@1 [ print_char_cursor#1 print_sint::w#3 ] ( mul16s_compare:7::mul16s_error:121::print_sint:247 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#1 print_sint::w#3 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } }  mul16s_compare:7::mul16s_error:121::print_sint:251 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#1 print_sint::w#3 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } }  ) always clobbers reg byte a 
Statement [288] print_uint::w#0 = (word)print_sint::w#5 [ print_char_cursor#21 print_uint::w#0 ] ( mul16s_compare:7::mul16s_error:121::print_sint:247 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#21 print_uint::w#0 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 } }  mul16s_compare:7::mul16s_error:121::print_sint:251 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#21 print_uint::w#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 } }  ) always clobbers reg byte a 
Statement [293] print_sint::w#0 = - print_sint::w#3 [ print_char_cursor#21 print_sint::w#0 ] ( mul16s_compare:7::mul16s_error:121::print_sint:247 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#21 print_sint::w#0 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } }  mul16s_compare:7::mul16s_error:121::print_sint:251 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#21 print_sint::w#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } }  ) always clobbers reg byte a 
Statement [295] if(print_slong::dw#4<0) goto print_slong::@1 [ print_char_cursor#1 print_slong::dw#4 ] ( mul16s_compare:7::mul16s_error:121::print_slong:255 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#1 print_slong::dw#4 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } }  mul16s_compare:7::mul16s_error:121::print_slong:259 [ print_line_cursor#0 mul16s_error::mf#0 print_char_cursor#1 print_slong::dw#4 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } }  mul16s_compare:7::mul16s_error:121::print_slong:263 [ print_line_cursor#0 print_char_cursor#1 print_slong::dw#4 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [299] print_ulong::dw#0 = (dword)print_slong::dw#6 [ print_char_cursor#21 print_ulong::dw#0 ] ( mul16s_compare:7::mul16s_error:121::print_slong:255 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#21 print_ulong::dw#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#141 = print_char_cursor#21 } }  mul16s_compare:7::mul16s_error:121::print_slong:259 [ print_line_cursor#0 mul16s_error::mf#0 print_char_cursor#21 print_ulong::dw#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#141 = print_char_cursor#21 } }  mul16s_compare:7::mul16s_error:121::print_slong:263 [ print_line_cursor#0 print_char_cursor#21 print_ulong::dw#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#141 = print_char_cursor#21 } }  ) always clobbers reg byte a 
Statement [304] print_slong::dw#0 = - print_slong::dw#4 [ print_char_cursor#21 print_slong::dw#0 ] ( mul16s_compare:7::mul16s_error:121::print_slong:255 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#21 print_slong::dw#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } }  mul16s_compare:7::mul16s_error:121::print_slong:259 [ print_line_cursor#0 mul16s_error::mf#0 print_char_cursor#21 print_slong::dw#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } }  mul16s_compare:7::mul16s_error:121::print_slong:263 [ print_line_cursor#0 print_char_cursor#21 print_slong::dw#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [306] print_uchar::$0 = print_uchar::b#2 >> 4 [ print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] ( mul16u_compare:5::mul16u_error:75::print_uint:173::print_uchar:273 [ mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#3 = print_uint::w#5 mul16u_error::a#0 mul16u_compare::a#1 } { print_char_cursor#1 = print_char_cursor#140 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_uint:177::print_uchar:273 [ mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#4 = print_uint::w#5 mul16u_error::b#0 mul16u_compare::b#1 } { print_char_cursor#1 = print_char_cursor#140 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:279::print_uchar:273 [ mul16u_error::mn#0 mul16u_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:279::print_uchar:273 [ mul16u_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:279::print_uchar:273 [ print_ulong::dw#4 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:279::print_uchar:273 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:279::print_uchar:273 [ print_line_cursor#0 mul16s_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:279::print_uchar:273 [ print_line_cursor#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:281::print_uchar:273 [ mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:281::print_uchar:273 [ mul16u_error::mf#0 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:281::print_uchar:273 [ print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:281::print_uchar:273 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:281::print_uchar:273 [ print_line_cursor#0 mul16s_error::mf#0 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:281::print_uchar:273 [ print_line_cursor#0 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:247::print_uint:289::print_uchar:273 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:251::print_uint:289::print_uchar:273 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_uint:173::print_uchar:275 [ mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#3 = print_uint::w#5 mul16u_error::a#0 mul16u_compare::a#1 } { print_char_cursor#1 = print_char_cursor#140 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_uint:177::print_uchar:275 [ mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#4 = print_uint::w#5 mul16u_error::b#0 mul16u_compare::b#1 } { print_char_cursor#1 = print_char_cursor#140 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:279::print_uchar:275 [ mul16u_error::mn#0 mul16u_error::mf#0 print_ulong::dw#4 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:279::print_uchar:275 [ mul16u_error::mf#0 print_ulong::dw#4 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:279::print_uchar:275 [ print_ulong::dw#4 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:279::print_uchar:275 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_ulong::dw#4 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:279::print_uchar:275 [ print_line_cursor#0 mul16s_error::mf#0 print_ulong::dw#4 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:279::print_uchar:275 [ print_line_cursor#0 print_ulong::dw#4 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:281::print_uchar:275 [ mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:281::print_uchar:275 [ mul16u_error::mf#0 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:281::print_uchar:275 [ print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:281::print_uchar:275 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:281::print_uchar:275 [ print_line_cursor#0 mul16s_error::mf#0 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:281::print_uchar:275 [ print_line_cursor#0 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:247::print_uint:289::print_uchar:275 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:251::print_uint:289::print_uchar:275 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:89 [ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ]
Statement [309] print_uchar::$2 = print_uchar::b#2 & $f [ print_char_cursor#21 print_uchar::$2 ] ( mul16u_compare:5::mul16u_error:75::print_uint:173::print_uchar:273 [ mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#3 = print_uint::w#5 mul16u_error::a#0 mul16u_compare::a#1 } { print_char_cursor#1 = print_char_cursor#140 print_char_cursor#145 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } { print_char_cursor#21 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_uint:177::print_uchar:273 [ mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#4 = print_uint::w#5 mul16u_error::b#0 mul16u_compare::b#1 } { print_char_cursor#1 = print_char_cursor#140 print_char_cursor#145 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } { print_char_cursor#21 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:279::print_uchar:273 [ mul16u_error::mn#0 mul16u_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 print_char_cursor#145 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } { print_char_cursor#21 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:279::print_uchar:273 [ mul16u_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 print_char_cursor#145 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } { print_char_cursor#21 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:279::print_uchar:273 [ print_ulong::dw#4 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 print_char_cursor#145 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } { print_char_cursor#21 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:279::print_uchar:273 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:279::print_uchar:273 [ print_line_cursor#0 mul16s_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:279::print_uchar:273 [ print_line_cursor#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:281::print_uchar:273 [ mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:281::print_uchar:273 [ mul16u_error::mf#0 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:281::print_uchar:273 [ print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:281::print_uchar:273 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:281::print_uchar:273 [ print_line_cursor#0 mul16s_error::mf#0 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:281::print_uchar:273 [ print_line_cursor#0 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:247::print_uint:289::print_uchar:273 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:251::print_uint:289::print_uchar:273 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_uint:173::print_uchar:275 [ mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#3 = print_uint::w#5 mul16u_error::a#0 mul16u_compare::a#1 } { print_char_cursor#1 = print_char_cursor#140 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_uint:177::print_uchar:275 [ mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#4 = print_uint::w#5 mul16u_error::b#0 mul16u_compare::b#1 } { print_char_cursor#1 = print_char_cursor#140 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:279::print_uchar:275 [ mul16u_error::mn#0 mul16u_error::mf#0 print_ulong::dw#4 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:279::print_uchar:275 [ mul16u_error::mf#0 print_ulong::dw#4 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:279::print_uchar:275 [ print_ulong::dw#4 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:279::print_uchar:275 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_ulong::dw#4 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:279::print_uchar:275 [ print_line_cursor#0 mul16s_error::mf#0 print_ulong::dw#4 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:279::print_uchar:275 [ print_line_cursor#0 print_ulong::dw#4 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:281::print_uchar:275 [ mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:281::print_uchar:275 [ mul16u_error::mf#0 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:281::print_uchar:275 [ print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:281::print_uchar:275 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:281::print_uchar:275 [ print_line_cursor#0 mul16s_error::mf#0 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:281::print_uchar:275 [ print_line_cursor#0 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:247::print_uint:289::print_uchar:275 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:251::print_uint:289::print_uchar:275 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  ) always clobbers reg byte a 
Statement [0] *BG_COLOR = 5 [ ] (  [ ] { }  ) always clobbers reg byte a 
Statement [14] if(mulf_init::sqr1_lo#2!=mulf_sqr1_lo+$200) goto mulf_init::@2 [ mulf_init::sqr1_lo#2 mulf_init::c#2 mulf_init::sqr#4 mulf_init::sqr1_hi#2 mulf_init::x_2#3 ] ( mulf_init:3 [ mulf_init::sqr1_lo#2 mulf_init::c#2 mulf_init::sqr#4 mulf_init::sqr1_hi#2 mulf_init::x_2#3 ] { }  ) always clobbers reg byte a 
Statement [16] if(mulf_init::sqr2_lo#2!=mulf_sqr2_lo+$1ff) goto mulf_init::@6 [ mulf_init::sqr2_lo#2 mulf_init::x_255#2 mulf_init::sqr2_hi#2 mulf_init::dir#2 ] ( mulf_init:3 [ mulf_init::sqr2_lo#2 mulf_init::x_255#2 mulf_init::sqr2_hi#2 mulf_init::dir#2 ] { }  ) always clobbers reg byte a 
Statement [17] *(mulf_sqr2_lo+$1ff) = *(mulf_sqr1_lo+$100) [ ] ( mulf_init:3 [ ] { }  ) always clobbers reg byte a 
Statement [18] *(mulf_sqr2_hi+$1ff) = *(mulf_sqr1_hi+$100) [ ] ( mulf_init:3 [ ] { }  ) always clobbers reg byte a 
Statement [20] *mulf_init::sqr2_lo#2 = mulf_sqr1_lo[mulf_init::x_255#2] [ mulf_init::sqr2_lo#2 mulf_init::x_255#2 mulf_init::sqr2_hi#2 mulf_init::dir#2 ] ( mulf_init:3 [ mulf_init::sqr2_lo#2 mulf_init::x_255#2 mulf_init::sqr2_hi#2 mulf_init::dir#2 ] { }  ) always clobbers reg byte a reg byte y 
Statement [21] *mulf_init::sqr2_hi#2 = mulf_sqr1_hi[mulf_init::x_255#2] [ mulf_init::sqr2_lo#2 mulf_init::x_255#2 mulf_init::sqr2_hi#2 mulf_init::dir#2 ] ( mulf_init:3 [ mulf_init::sqr2_lo#2 mulf_init::x_255#2 mulf_init::sqr2_hi#2 mulf_init::dir#2 ] { }  ) always clobbers reg byte a reg byte y 
Statement [23] mulf_init::x_255#1 = mulf_init::x_255#2 + mulf_init::dir#2 [ mulf_init::sqr2_lo#2 mulf_init::dir#2 mulf_init::x_255#1 mulf_init::sqr2_hi#1 ] ( mulf_init:3 [ mulf_init::sqr2_lo#2 mulf_init::dir#2 mulf_init::x_255#1 mulf_init::sqr2_hi#1 ] { }  ) always clobbers reg byte a 
Statement [29] mulf_init::$1 = mulf_init::c#1 & 1 [ mulf_init::sqr1_lo#2 mulf_init::sqr#4 mulf_init::sqr1_hi#2 mulf_init::x_2#3 mulf_init::c#1 mulf_init::$1 ] ( mulf_init:3 [ mulf_init::sqr1_lo#2 mulf_init::sqr#4 mulf_init::sqr1_hi#2 mulf_init::x_2#3 mulf_init::c#1 mulf_init::$1 ] { }  ) always clobbers reg byte a 
Statement [35] *mulf_init::sqr1_lo#2 = mulf_init::$4 [ mulf_init::sqr1_lo#2 mulf_init::sqr1_hi#2 mulf_init::c#1 mulf_init::x_2#2 mulf_init::sqr#3 ] ( mulf_init:3 [ mulf_init::sqr1_lo#2 mulf_init::sqr1_hi#2 mulf_init::c#1 mulf_init::x_2#2 mulf_init::sqr#3 ] { }  ) always clobbers reg byte y 
Statement [37] *mulf_init::sqr1_hi#2 = mulf_init::$5 [ mulf_init::sqr1_lo#2 mulf_init::sqr1_hi#2 mulf_init::c#1 mulf_init::x_2#2 mulf_init::sqr#3 ] ( mulf_init:3 [ mulf_init::sqr1_lo#2 mulf_init::sqr1_hi#2 mulf_init::c#1 mulf_init::x_2#2 mulf_init::sqr#3 ] { }  ) always clobbers reg byte y 
Statement [39] mulf_init::sqr#1 = mulf_init::sqr#3 + mulf_init::x_2#2 [ mulf_init::sqr1_lo#2 mulf_init::c#1 mulf_init::sqr#1 mulf_init::sqr1_hi#1 mulf_init::x_2#2 ] ( mulf_init:3 [ mulf_init::sqr1_lo#2 mulf_init::c#1 mulf_init::sqr#1 mulf_init::sqr1_hi#1 mulf_init::x_2#2 ] { }  ) always clobbers reg byte a 
Statement [45] mul16u_compare::a#1 = mul16u_compare::a#2 + $d2b [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#2 mul16u_compare::j#10 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#2 mul16u_compare::j#10 ] { { muls16u::a#0 = mul16u_compare::a#1 } { muls16u::b#0 = mul16u_compare::b#1 } { muls16u::return#0 = muls16u::return#2 } }  ) always clobbers reg byte a 
Statement [46] mul16u_compare::b#1 = mul16u_compare::b#2 + $ffd [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 ] { { muls16u::a#0 = mul16u_compare::a#1 } { muls16u::b#0 = mul16u_compare::b#1 } { muls16u::return#0 = muls16u::return#2 } }  ) always clobbers reg byte a 
Statement [47] muls16u::a#0 = mul16u_compare::a#1 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 muls16u::a#0 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 muls16u::a#0 ] { { muls16u::a#0 = mul16u_compare::a#1 } { muls16u::b#0 = mul16u_compare::b#1 } { muls16u::return#0 = muls16u::return#2 } }  ) always clobbers reg byte a 
Statement [48] muls16u::b#0 = mul16u_compare::b#1 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 muls16u::a#0 muls16u::b#0 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 muls16u::a#0 muls16u::b#0 ] { { muls16u::a#0 = mul16u_compare::a#1 } { muls16u::b#0 = mul16u_compare::b#1 } { muls16u::return#0 = muls16u::return#2 } }  ) always clobbers reg byte a 
Statement [50] muls16u::return#2 = muls16u::return#0 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 muls16u::return#2 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 muls16u::return#2 ] { { muls16u::a#0 = mul16u_compare::a#1 } { muls16u::b#0 = mul16u_compare::b#1 } { muls16u::return#0 = muls16u::return#2 } }  ) always clobbers reg byte a 
Statement [51] mul16u_compare::ms#0 = muls16u::return#2 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 ] { { mul16u::b#1 = mul16u::b#2 mul16u_compare::b#1 } { mul16u::a#2 = mul16u::a#6 mul16u_compare::a#1 } { mul16u::return#3 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [52] mul16u::a#2 = mul16u_compare::a#1 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u::a#2 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u::a#2 ] { { mul16u::b#1 = mul16u::b#2 mul16u_compare::b#1 } { mul16u::a#2 = mul16u::a#6 mul16u_compare::a#1 } { mul16u::return#3 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [53] mul16u::b#1 = mul16u_compare::b#1 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u::a#2 mul16u::b#1 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u::a#2 mul16u::b#1 ] { { mul16u::b#1 = mul16u::b#2 mul16u_compare::b#1 } { mul16u::a#2 = mul16u::a#6 mul16u_compare::a#1 } { mul16u::return#3 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [55] mul16u::return#3 = mul16u::res#2 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u::return#3 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u::return#3 ] { { mul16u::b#1 = mul16u::b#2 mul16u_compare::b#1 } { mul16u::a#2 = mul16u::a#6 mul16u_compare::a#1 } { mul16u::return#3 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [56] mul16u_compare::mn#0 = mul16u::return#3 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 ] { { mulf16u::a#1 = mulf16u::a#2 mul16u_compare::a#1 } { mulf16u::b#1 = mulf16u::b#2 mul16u_compare::b#1 } { mulf16u::return#0 = mulf16u::return#3 } }  ) always clobbers reg byte a 
Statement [57] mulf16u::a#1 = mul16u_compare::a#1 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mulf16u::a#1 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mulf16u::a#1 ] { { mulf16u::a#1 = mulf16u::a#2 mul16u_compare::a#1 } { mulf16u::b#1 = mulf16u::b#2 mul16u_compare::b#1 } { mulf16u::return#0 = mulf16u::return#3 } }  ) always clobbers reg byte a 
Statement [58] mulf16u::b#1 = mul16u_compare::b#1 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mulf16u::a#1 mulf16u::b#1 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mulf16u::a#1 mulf16u::b#1 ] { { mulf16u::a#1 = mulf16u::a#2 mul16u_compare::a#1 } { mulf16u::b#1 = mulf16u::b#2 mul16u_compare::b#1 } { mulf16u::return#0 = mulf16u::return#3 } }  ) always clobbers reg byte a 
Statement [60] mulf16u::return#3 = mulf16u::return#0 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mulf16u::return#3 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mulf16u::return#3 ] { { mulf16u::a#1 = mulf16u::a#2 mul16u_compare::a#1 } { mulf16u::b#1 = mulf16u::b#2 mul16u_compare::b#1 } { mulf16u::return#0 = mulf16u::return#3 } }  ) always clobbers reg byte a 
Statement [61] mul16u_compare::mf#0 = mulf16u::return#3 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mul16u_compare::mf#0 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mul16u_compare::mf#0 ] { }  ) always clobbers reg byte a 
Statement [62] if(mul16u_compare::ms#0==mul16u_compare::mf#0) goto mul16u_compare::@3 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mul16u_compare::mf#0 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mul16u_compare::mf#0 ] { }  ) always clobbers reg byte a 
Statement [65] if(mul16u_compare::ms#0==mul16u_compare::mn#0) goto mul16u_compare::@15 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mul16u_compare::mf#0 mul16u_compare::ok#4 ] ( mul16u_compare:5 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mul16u_compare::mf#0 mul16u_compare::ok#4 ] { }  ) always clobbers reg byte a 
Statement [69] *BG_COLOR = 2 [ print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::ms#0 mul16u_compare::mn#0 mul16u_compare::mf#0 ] ( mul16u_compare:5 [ print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::ms#0 mul16u_compare::mn#0 mul16u_compare::mf#0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [70] mul16u_error::a#0 = mul16u_compare::a#1 [ print_char_cursor#1 mul16u_compare::b#1 mul16u_compare::ms#0 mul16u_compare::mn#0 mul16u_compare::mf#0 mul16u_error::a#0 ] ( mul16u_compare:5 [ print_char_cursor#1 mul16u_compare::b#1 mul16u_compare::ms#0 mul16u_compare::mn#0 mul16u_compare::mf#0 mul16u_error::a#0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [71] mul16u_error::b#0 = mul16u_compare::b#1 [ print_char_cursor#1 mul16u_compare::ms#0 mul16u_compare::mn#0 mul16u_compare::mf#0 mul16u_error::a#0 mul16u_error::b#0 ] ( mul16u_compare:5 [ print_char_cursor#1 mul16u_compare::ms#0 mul16u_compare::mn#0 mul16u_compare::mf#0 mul16u_error::a#0 mul16u_error::b#0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [72] mul16u_error::ms#0 = mul16u_compare::ms#0 [ print_char_cursor#1 mul16u_compare::mn#0 mul16u_compare::mf#0 mul16u_error::a#0 mul16u_error::b#0 mul16u_error::ms#0 ] ( mul16u_compare:5 [ print_char_cursor#1 mul16u_compare::mn#0 mul16u_compare::mf#0 mul16u_error::a#0 mul16u_error::b#0 mul16u_error::ms#0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [73] mul16u_error::mn#0 = mul16u_compare::mn#0 [ print_char_cursor#1 mul16u_compare::mf#0 mul16u_error::a#0 mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 ] ( mul16u_compare:5 [ print_char_cursor#1 mul16u_compare::mf#0 mul16u_error::a#0 mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [74] mul16u_error::mf#0 = mul16u_compare::mf#0 [ print_char_cursor#1 mul16u_error::a#0 mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 ] ( mul16u_compare:5 [ print_char_cursor#1 mul16u_error::a#0 mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [80] if(mul16u_compare::i#1!=$10) goto mul16u_compare::@1 [ print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::i#1 ] ( mul16u_compare:5 [ print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::i#1 ] { }  ) always clobbers reg byte a 
Statement [83] print_char_cursor#190 = print_line_cursor#0 [ print_char_cursor#190 print_line_cursor#0 ] ( mul16u_compare:5 [ print_char_cursor#190 print_line_cursor#0 ] { { print_char_cursor#157 = print_char_cursor#190 } }  ) always clobbers reg byte a 
Statement [87] print_char_cursor#223 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#223 ] ( mul16s_compare:7 [ print_line_cursor#0 print_char_cursor#223 ] { }  ) always clobbers reg byte a 
Statement [91] mul16s_compare::a#1 = mul16s_compare::a#2 + $d2b [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#2 mul16s_compare::j#10 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#2 mul16s_compare::j#10 ] { { muls16s::a#0 = mul16s_compare::a#1 } { muls16s::b#0 = mul16s_compare::b#1 } { muls16s::return#0 = muls16s::return#2 } }  ) always clobbers reg byte a 
Statement [92] mul16s_compare::b#1 = mul16s_compare::b#2 + $ffd [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 ] { { muls16s::a#0 = mul16s_compare::a#1 } { muls16s::b#0 = mul16s_compare::b#1 } { muls16s::return#0 = muls16s::return#2 } }  ) always clobbers reg byte a 
Statement [93] muls16s::a#0 = mul16s_compare::a#1 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::a#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::a#0 ] { { muls16s::a#0 = mul16s_compare::a#1 } { muls16s::b#0 = mul16s_compare::b#1 } { muls16s::return#0 = muls16s::return#2 } }  ) always clobbers reg byte a 
Statement [94] muls16s::b#0 = mul16s_compare::b#1 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::a#0 muls16s::b#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::a#0 muls16s::b#0 ] { { muls16s::a#0 = mul16s_compare::a#1 } { muls16s::b#0 = mul16s_compare::b#1 } { muls16s::return#0 = muls16s::return#2 } }  ) always clobbers reg byte a 
Statement [96] muls16s::return#2 = muls16s::return#0 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::return#2 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::return#2 ] { { muls16s::a#0 = mul16s_compare::a#1 } { muls16s::b#0 = mul16s_compare::b#1 } { muls16s::return#0 = muls16s::return#2 } }  ) always clobbers reg byte a 
Statement [97] mul16s_compare::ms#0 = muls16s::return#2 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [98] mul16s::a#0 = mul16s_compare::a#1 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [99] mul16s::b#0 = mul16s_compare::b#1 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [101] mul16s::return#2 = mul16s::return#0 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::return#2 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::return#2 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [102] mul16s_compare::mn#0 = mul16s::return#2 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [103] mulf16s::a#0 = mul16s_compare::a#1 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [104] mulf16s::b#0 = mul16s_compare::b#1 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [106] mulf16s::return#2 = mulf16s::return#0 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::return#2 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::return#2 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [107] mul16s_compare::mf#0 = mulf16s::return#2 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mul16s_compare::mf#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mul16s_compare::mf#0 ] { }  ) always clobbers reg byte a 
Statement [108] if(mul16s_compare::ms#0==mul16s_compare::mf#0) goto mul16s_compare::@3 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mul16s_compare::mf#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mul16s_compare::mf#0 ] { }  ) always clobbers reg byte a 
Statement [111] if(mul16s_compare::ms#0==mul16s_compare::mn#0) goto mul16s_compare::@15 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mul16s_compare::mf#0 mul16s_compare::ok#4 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mul16s_compare::mf#0 mul16s_compare::ok#4 ] { }  ) always clobbers reg byte a 
Statement [115] *BG_COLOR = 2 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::ms#0 mul16s_compare::mn#0 mul16s_compare::mf#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::ms#0 mul16s_compare::mn#0 mul16s_compare::mf#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [116] mul16s_error::a#0 = mul16s_compare::a#1 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::b#1 mul16s_compare::ms#0 mul16s_compare::mn#0 mul16s_compare::mf#0 mul16s_error::a#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::b#1 mul16s_compare::ms#0 mul16s_compare::mn#0 mul16s_compare::mf#0 mul16s_error::a#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [117] mul16s_error::b#0 = mul16s_compare::b#1 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::ms#0 mul16s_compare::mn#0 mul16s_compare::mf#0 mul16s_error::a#0 mul16s_error::b#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::ms#0 mul16s_compare::mn#0 mul16s_compare::mf#0 mul16s_error::a#0 mul16s_error::b#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [118] mul16s_error::ms#0 = mul16s_compare::ms#0 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::mn#0 mul16s_compare::mf#0 mul16s_error::a#0 mul16s_error::b#0 mul16s_error::ms#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::mn#0 mul16s_compare::mf#0 mul16s_error::a#0 mul16s_error::b#0 mul16s_error::ms#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [119] mul16s_error::mn#0 = mul16s_compare::mn#0 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::mf#0 mul16s_error::a#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::mf#0 mul16s_error::a#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [120] mul16s_error::mf#0 = mul16s_compare::mf#0 [ print_char_cursor#1 print_line_cursor#0 mul16s_error::a#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_error::a#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [126] if(mul16s_compare::i#1!=$10) goto mul16s_compare::@1 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::i#1 ] ( mul16s_compare:7 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::i#1 ] { }  ) always clobbers reg byte a 
Statement [129] print_char_cursor#183 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#183 ] ( mul16s_compare:7 [ print_line_cursor#0 print_char_cursor#183 ] { { print_char_cursor#157 = print_char_cursor#183 } }  ) always clobbers reg byte a 
Statement [135] if(memset::dst#2!=memset::end#0) goto memset::@2 [ memset::dst#2 ] ( print_cls:1::memset:10 [ memset::dst#2 ] { }  ) always clobbers reg byte a 
Statement [137] *memset::dst#2 = memset::c#0 [ memset::dst#2 ] ( print_cls:1::memset:10 [ memset::dst#2 ] { }  ) always clobbers reg byte a reg byte y 
Statement [141] if(0!=*print_str::str#15) goto print_str::@2 [ print_char_cursor#1 print_str::str#15 ] ( mul16u_compare:5::print_str:43 [ mul16u_compare::a#6 mul16u_compare::b#6 mul16u_compare::i#12 print_char_cursor#1 print_str::str#15 ] { { print_char_cursor#148 = print_char_cursor#157 } }  mul16u_compare:5::print_str:84 [ print_line_cursor#0 print_char_cursor#1 print_str::str#15 ] { { print_char_cursor#157 = print_char_cursor#190 } }  mul16s_compare:7::print_str:89 [ print_line_cursor#0 mul16s_compare::a#6 mul16s_compare::b#6 mul16s_compare::i#12 print_char_cursor#1 print_str::str#15 ] { { print_char_cursor#152 = print_char_cursor#157 } }  mul16s_compare:7::print_str:130 [ print_line_cursor#0 print_char_cursor#1 print_str::str#15 ] { { print_char_cursor#157 = print_char_cursor#183 } }  mul16u_compare:5::mul16u_error:75::print_str:171 [ mul16u_error::a#0 mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#1 print_str::str#15 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#157 } }  mul16u_compare:5::mul16u_error:75::print_str:175 [ mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#1 print_str::str#15 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } }  mul16u_compare:5::mul16u_error:75::print_str:179 [ mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#1 print_str::str#15 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } }  mul16u_compare:5::mul16u_error:75::print_str:183 [ mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#1 print_str::str#15 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } }  mul16u_compare:5::mul16u_error:75::print_str:187 [ mul16u_error::mf#0 print_char_cursor#1 print_str::str#15 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } }  mul16s_compare:7::mul16s_error:121::print_str:245 [ print_line_cursor#0 mul16s_error::a#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#1 print_str::str#15 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#157 } }  mul16s_compare:7::mul16s_error:121::print_str:249 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#1 print_str::str#15 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } }  mul16s_compare:7::mul16s_error:121::print_str:253 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#1 print_str::str#15 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } }  mul16s_compare:7::mul16s_error:121::print_str:257 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#1 print_str::str#15 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } }  mul16s_compare:7::mul16s_error:121::print_str:261 [ print_line_cursor#0 mul16s_error::mf#0 print_char_cursor#1 print_str::str#15 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } }  ) always clobbers reg byte a reg byte y 
Statement [143] print_char::ch#0 = *print_str::str#15 [ print_char_cursor#1 print_str::str#15 print_char::ch#0 ] ( mul16u_compare:5::print_str:43 [ mul16u_compare::a#6 mul16u_compare::b#6 mul16u_compare::i#12 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { print_char_cursor#148 = print_char_cursor#157 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16u_compare:5::print_str:84 [ print_line_cursor#0 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { print_char_cursor#157 = print_char_cursor#190 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::print_str:89 [ print_line_cursor#0 mul16s_compare::a#6 mul16s_compare::b#6 mul16s_compare::i#12 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { print_char_cursor#152 = print_char_cursor#157 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::print_str:130 [ print_line_cursor#0 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { print_char_cursor#157 = print_char_cursor#183 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_str:171 [ mul16u_error::a#0 mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#157 print_char_cursor#89 } { print_char::ch#0 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_str:175 [ mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_str:179 [ mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_str:183 [ mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_str:187 [ mul16u_error::mf#0 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_str:245 [ print_line_cursor#0 mul16s_error::a#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#157 print_char_cursor#89 } { print_char::ch#0 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_str:249 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_str:253 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_str:257 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_str:261 [ print_line_cursor#0 mul16s_error::mf#0 print_char_cursor#1 print_str::str#15 print_char::ch#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  ) always clobbers reg byte a reg byte y 
Statement [146] if(muls16u::a#0==0) goto muls16u::@1 [ muls16u::a#0 muls16u::b#0 ] ( mul16u_compare:5::muls16u:49 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 muls16u::a#0 muls16u::b#0 ] { { muls16u::a#0 = mul16u_compare::a#1 } { muls16u::b#0 = mul16u_compare::b#1 } { muls16u::return#0 = muls16u::return#2 } }  ) always clobbers reg byte a 
Statement [148] if(muls16u::i#2!=muls16u::a#0) goto muls16u::@3 [ muls16u::a#0 muls16u::b#0 muls16u::i#2 muls16u::m#3 ] ( mul16u_compare:5::muls16u:49 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 muls16u::a#0 muls16u::b#0 muls16u::i#2 muls16u::m#3 ] { { muls16u::a#0 = mul16u_compare::a#1 } { muls16u::b#0 = mul16u_compare::b#1 } { muls16u::return#0 = muls16u::return#2 } }  ) always clobbers reg byte a 
Statement [151] muls16u::m#1 = muls16u::m#3 + muls16u::b#0 [ muls16u::a#0 muls16u::b#0 muls16u::i#2 muls16u::m#1 ] ( mul16u_compare:5::muls16u:49 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 muls16u::a#0 muls16u::b#0 muls16u::i#2 muls16u::m#1 ] { { muls16u::a#0 = mul16u_compare::a#1 } { muls16u::b#0 = mul16u_compare::b#1 } { muls16u::return#0 = muls16u::return#2 } }  ) always clobbers reg byte a 
Statement [154] mul16u::mb#0 = (dword)mul16u::b#2 [ mul16u::a#6 mul16u::mb#0 ] ( mul16u_compare:5::mul16u:54 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u::a#6 mul16u::mb#0 ] { { mul16u::b#1 = mul16u::b#2 mul16u_compare::b#1 } { mul16u::a#2 = mul16u::a#6 mul16u_compare::a#1 } { mul16u::return#3 = mul16u::res#2 } }  mul16s_compare:7::mul16s:100::mul16u:212 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 mul16u::a#6 mul16u::mb#0 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } { mul16u::b#0 = mul16u::b#2 } { mul16u::a#1 = mul16u::a#6 } { mul16u::return#2 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [156] if(mul16u::a#3!=0) goto mul16u::@2 [ mul16u::res#2 mul16u::a#3 mul16u::mb#2 ] ( mul16u_compare:5::mul16u:54 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u::res#2 mul16u::a#3 mul16u::mb#2 ] { { mul16u::b#1 = mul16u::b#2 mul16u_compare::b#1 } { mul16u::a#2 = mul16u::a#6 mul16u_compare::a#1 } { mul16u::return#3 = mul16u::res#2 } }  mul16s_compare:7::mul16s:100::mul16u:212 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 mul16u::res#2 mul16u::a#3 mul16u::mb#2 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } { mul16u::b#0 = mul16u::b#2 } { mul16u::a#1 = mul16u::a#6 } { mul16u::return#2 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [158] mul16u::$1 = mul16u::a#3 & 1 [ mul16u::res#2 mul16u::a#3 mul16u::mb#2 mul16u::$1 ] ( mul16u_compare:5::mul16u:54 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u::res#2 mul16u::a#3 mul16u::mb#2 mul16u::$1 ] { { mul16u::b#1 = mul16u::b#2 mul16u_compare::b#1 } { mul16u::a#2 = mul16u::a#6 mul16u_compare::a#1 } { mul16u::return#3 = mul16u::res#2 } }  mul16s_compare:7::mul16s:100::mul16u:212 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 mul16u::res#2 mul16u::a#3 mul16u::mb#2 mul16u::$1 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } { mul16u::b#0 = mul16u::b#2 } { mul16u::a#1 = mul16u::a#6 } { mul16u::return#2 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [160] mul16u::res#1 = mul16u::res#2 + mul16u::mb#2 [ mul16u::a#3 mul16u::mb#2 mul16u::res#1 ] ( mul16u_compare:5::mul16u:54 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u::a#3 mul16u::mb#2 mul16u::res#1 ] { { mul16u::b#1 = mul16u::b#2 mul16u_compare::b#1 } { mul16u::a#2 = mul16u::a#6 mul16u_compare::a#1 } { mul16u::return#3 = mul16u::res#2 } }  mul16s_compare:7::mul16s:100::mul16u:212 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 mul16u::a#3 mul16u::mb#2 mul16u::res#1 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } { mul16u::b#0 = mul16u::b#2 } { mul16u::a#1 = mul16u::a#6 } { mul16u::return#2 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [165] *mulf16u::memA = mulf16u::a#2 [ mulf16u::b#2 ] ( mul16u_compare:5::mulf16u:59 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mulf16u::b#2 ] { { mulf16u::a#1 = mulf16u::a#2 mul16u_compare::a#1 } { mulf16u::b#1 = mulf16u::b#2 mul16u_compare::b#1 } { mulf16u::return#0 = mulf16u::return#3 } }  mul16s_compare:7::mulf16s:105::mulf16u:229 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 mulf16u::b#2 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } { mulf16u::a#0 = mulf16u::a#2 } { mulf16u::b#0 = mulf16u::b#2 } { mulf16u::return#0 = mulf16u::return#2 } }  ) always clobbers reg byte a 
Statement [166] *mulf16u::memB = mulf16u::b#2 [ ] ( mul16u_compare:5::mulf16u:59 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 ] { { mulf16u::a#1 = mulf16u::a#2 mul16u_compare::a#1 } { mulf16u::b#1 = mulf16u::b#2 mul16u_compare::b#1 } { mulf16u::return#0 = mulf16u::return#3 } }  mul16s_compare:7::mulf16s:105::mulf16u:229 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } { mulf16u::a#0 = mulf16u::a#2 } { mulf16u::b#0 = mulf16u::b#2 } { mulf16u::return#0 = mulf16u::return#2 } }  ) always clobbers reg byte a 
Statement asm { ldamemA stasm1a+1 stasm3a+1 stasm5a+1 stasm7a+1 eor#$ff stasm2a+1 stasm4a+1 stasm6a+1 stasm8a+1 ldamemA+1 stasm1b+1 stasm3b+1 stasm5b+1 stasm7b+1 eor#$ff stasm2b+1 stasm4b+1 stasm6b+1 stasm8b+1 ldxmemB sec sm1a: ldamulf_sqr1_lo,x sm2a: sbcmulf_sqr2_lo,x stamemR+0 sm3a: ldamulf_sqr1_hi,x sm4a: sbcmulf_sqr2_hi,x sta_AA+1 sec sm1b: ldamulf_sqr1_lo,x sm2b: sbcmulf_sqr2_lo,x sta_cc+1 sm3b: ldamulf_sqr1_hi,x sm4b: sbcmulf_sqr2_hi,x sta_CC+1 ldxmemB+1 sec sm5a: ldamulf_sqr1_lo,x sm6a: sbcmulf_sqr2_lo,x sta_bb+1 sm7a: ldamulf_sqr1_hi,x sm8a: sbcmulf_sqr2_hi,x sta_BB+1 sec sm5b: ldamulf_sqr1_lo,x sm6b: sbcmulf_sqr2_lo,x sta_dd+1 sm7b: ldamulf_sqr1_hi,x sm8b: sbcmulf_sqr2_hi,x stamemR+3 clc _AA: lda#0 _bb: adc#0 stamemR+1 _BB: lda#0 _CC: adc#0 stamemR+2 bcc!+ incmemR+3 clc !: _cc: lda#0 adcmemR+1 stamemR+1 _dd: lda#0 adcmemR+2 stamemR+2 bcc!+ incmemR+3 !:  } always clobbers reg byte a reg byte x 
Statement [168] mulf16u::return#0 = *mulf16u::memR [ mulf16u::return#0 ] ( mul16u_compare:5::mulf16u:59 [ mul16u_compare::i#12 print_char_cursor#1 mul16u_compare::a#1 mul16u_compare::b#1 mul16u_compare::j#10 mul16u_compare::ms#0 mul16u_compare::mn#0 mulf16u::return#0 ] { { mulf16u::a#1 = mulf16u::a#2 mul16u_compare::a#1 } { mulf16u::b#1 = mulf16u::b#2 mul16u_compare::b#1 } { mulf16u::return#0 = mulf16u::return#3 } }  mul16s_compare:7::mulf16s:105::mulf16u:229 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 mulf16u::return#0 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } { mulf16u::a#0 = mulf16u::a#2 } { mulf16u::b#0 = mulf16u::b#2 } { mulf16u::return#0 = mulf16u::return#2 } }  ) always clobbers reg byte a 
Statement [172] print_uint::w#3 = mul16u_error::a#0 [ print_char_cursor#1 mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#3 ] ( mul16u_compare:5::mul16u_error:75 [ print_char_cursor#1 mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#3 ] { { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#3 = print_uint::w#5 mul16u_error::a#0 mul16u_compare::a#1 } { print_char_cursor#1 = print_char_cursor#140 } }  ) always clobbers reg byte a 
Statement [176] print_uint::w#4 = mul16u_error::b#0 [ print_char_cursor#1 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#4 ] ( mul16u_compare:5::mul16u_error:75 [ print_char_cursor#1 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#4 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#4 = print_uint::w#5 mul16u_error::b#0 mul16u_compare::b#1 } { print_char_cursor#1 = print_char_cursor#140 } }  ) always clobbers reg byte a 
Statement [180] print_ulong::dw#1 = mul16u_error::ms#0 [ print_char_cursor#1 mul16u_error::mn#0 mul16u_error::mf#0 print_ulong::dw#1 ] ( mul16u_compare:5::mul16u_error:75 [ print_char_cursor#1 mul16u_error::mn#0 mul16u_error::mf#0 print_ulong::dw#1 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 } }  ) always clobbers reg byte a 
Statement [184] print_ulong::dw#2 = mul16u_error::mn#0 [ print_char_cursor#1 mul16u_error::mf#0 print_ulong::dw#2 ] ( mul16u_compare:5::mul16u_error:75 [ print_char_cursor#1 mul16u_error::mf#0 print_ulong::dw#2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 } }  ) always clobbers reg byte a 
Statement [188] print_ulong::dw#3 = mul16u_error::mf#0 [ print_char_cursor#1 print_ulong::dw#3 ] ( mul16u_compare:5::mul16u_error:75 [ print_char_cursor#1 print_ulong::dw#3 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 } }  ) always clobbers reg byte a 
Statement [195] print_line_cursor#0 = print_line_cursor#23 + $28 [ print_line_cursor#0 print_char_cursor#136 ] ( mul16u_compare:5::print_ln:82 [ print_line_cursor#0 print_char_cursor#136 ] { { print_char_cursor#1 = print_char_cursor#136 } }  mul16u_compare:5::print_ln:86 [ print_line_cursor#0 print_char_cursor#136 ] { { print_line_cursor#0 = print_line_cursor#45 } { print_char_cursor#1 = print_char_cursor#136 } }  mul16s_compare:7::print_ln:128 [ print_line_cursor#0 print_char_cursor#136 ] { { print_line_cursor#0 = print_line_cursor#45 } { print_char_cursor#1 = print_char_cursor#136 } }  mul16s_compare:7::print_ln:132 [ print_line_cursor#0 print_char_cursor#136 ] { { print_line_cursor#0 = print_line_cursor#45 } { print_char_cursor#1 = print_char_cursor#136 } }  mul16u_compare:5::mul16u_error:75::print_ln:191 [ print_line_cursor#0 print_char_cursor#136 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#136 = print_char_cursor#21 } }  mul16s_compare:7::mul16s_error:121::print_ln:265 [ print_line_cursor#0 print_char_cursor#136 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_line_cursor#0 = print_line_cursor#45 } { print_char_cursor#136 = print_char_cursor#21 } }  ) always clobbers reg byte a 
Statement [196] if(print_line_cursor#0<print_char_cursor#136) goto print_ln::@1 [ print_line_cursor#0 print_char_cursor#136 ] ( mul16u_compare:5::print_ln:82 [ print_line_cursor#0 print_char_cursor#136 ] { { print_char_cursor#1 = print_char_cursor#136 } }  mul16u_compare:5::print_ln:86 [ print_line_cursor#0 print_char_cursor#136 ] { { print_line_cursor#0 = print_line_cursor#45 } { print_char_cursor#1 = print_char_cursor#136 } }  mul16s_compare:7::print_ln:128 [ print_line_cursor#0 print_char_cursor#136 ] { { print_line_cursor#0 = print_line_cursor#45 } { print_char_cursor#1 = print_char_cursor#136 } }  mul16s_compare:7::print_ln:132 [ print_line_cursor#0 print_char_cursor#136 ] { { print_line_cursor#0 = print_line_cursor#45 } { print_char_cursor#1 = print_char_cursor#136 } }  mul16u_compare:5::mul16u_error:75::print_ln:191 [ print_line_cursor#0 print_char_cursor#136 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#136 = print_char_cursor#21 } }  mul16s_compare:7::mul16s_error:121::print_ln:265 [ print_line_cursor#0 print_char_cursor#136 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_line_cursor#0 = print_line_cursor#45 } { print_char_cursor#136 = print_char_cursor#21 } }  ) always clobbers reg byte a 
Statement [198] if(muls16s::a#0<0) goto muls16s::@5 [ muls16s::a#0 muls16s::b#0 ] ( mul16s_compare:7::muls16s:95 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::a#0 muls16s::b#0 ] { { muls16s::a#0 = mul16s_compare::a#1 } { muls16s::b#0 = mul16s_compare::b#1 } { muls16s::return#0 = muls16s::return#2 } }  ) always clobbers reg byte a 
Statement [199] if(muls16s::a#0<=0) goto muls16s::@1 [ muls16s::a#0 muls16s::b#0 ] ( mul16s_compare:7::muls16s:95 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::a#0 muls16s::b#0 ] { { muls16s::a#0 = mul16s_compare::a#1 } { muls16s::b#0 = mul16s_compare::b#1 } { muls16s::return#0 = muls16s::return#2 } }  ) always clobbers reg byte a 
Statement [201] if(muls16s::j#2!=muls16s::a#0) goto muls16s::@4 [ muls16s::a#0 muls16s::b#0 muls16s::j#2 muls16s::m#3 ] ( mul16s_compare:7::muls16s:95 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::a#0 muls16s::b#0 muls16s::j#2 muls16s::m#3 ] { { muls16s::a#0 = mul16s_compare::a#1 } { muls16s::b#0 = mul16s_compare::b#1 } { muls16s::return#0 = muls16s::return#2 } }  ) always clobbers reg byte a 
Statement [204] muls16s::m#1 = muls16s::m#3 + muls16s::b#0 [ muls16s::a#0 muls16s::b#0 muls16s::j#2 muls16s::m#1 ] ( mul16s_compare:7::muls16s:95 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::a#0 muls16s::b#0 muls16s::j#2 muls16s::m#1 ] { { muls16s::a#0 = mul16s_compare::a#1 } { muls16s::b#0 = mul16s_compare::b#1 } { muls16s::return#0 = muls16s::return#2 } }  ) always clobbers reg byte a 
Statement [207] if(muls16s::i#2!=muls16s::a#0) goto muls16s::@6 [ muls16s::a#0 muls16s::b#0 muls16s::m#5 muls16s::i#2 ] ( mul16s_compare:7::muls16s:95 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::a#0 muls16s::b#0 muls16s::m#5 muls16s::i#2 ] { { muls16s::a#0 = mul16s_compare::a#1 } { muls16s::b#0 = mul16s_compare::b#1 } { muls16s::return#0 = muls16s::return#2 } }  ) always clobbers reg byte a 
Statement [208] muls16s::m#2 = muls16s::m#5 - muls16s::b#0 [ muls16s::a#0 muls16s::b#0 muls16s::i#2 muls16s::m#2 ] ( mul16s_compare:7::muls16s:95 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::a#0 muls16s::b#0 muls16s::i#2 muls16s::m#2 ] { { muls16s::a#0 = mul16s_compare::a#1 } { muls16s::b#0 = mul16s_compare::b#1 } { muls16s::return#0 = muls16s::return#2 } }  ) always clobbers reg byte a 
Statement [209] muls16s::i#1 = -- muls16s::i#2 [ muls16s::a#0 muls16s::b#0 muls16s::i#1 muls16s::m#2 ] ( mul16s_compare:7::muls16s:95 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 muls16s::a#0 muls16s::b#0 muls16s::i#1 muls16s::m#2 ] { { muls16s::a#0 = mul16s_compare::a#1 } { muls16s::b#0 = mul16s_compare::b#1 } { muls16s::return#0 = muls16s::return#2 } }  ) always clobbers reg byte a 
Statement [210] mul16u::a#1 = (word)mul16s::a#0 [ mul16s::a#0 mul16s::b#0 mul16u::a#1 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 mul16u::a#1 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } { mul16u::b#0 = mul16u::b#2 } { mul16u::a#1 = mul16u::a#6 } { mul16u::return#2 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [211] mul16u::b#0 = (word)mul16s::b#0 [ mul16s::a#0 mul16s::b#0 mul16u::b#0 mul16u::a#1 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 mul16u::b#0 mul16u::a#1 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } { mul16u::b#0 = mul16u::b#2 } { mul16u::a#1 = mul16u::a#6 } { mul16u::return#2 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [213] mul16u::return#2 = mul16u::res#2 [ mul16s::a#0 mul16s::b#0 mul16u::return#2 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 mul16u::return#2 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } { mul16u::b#0 = mul16u::b#2 } { mul16u::a#1 = mul16u::a#6 } { mul16u::return#2 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [214] mul16s::m#0 = mul16u::return#2 [ mul16s::a#0 mul16s::b#0 mul16s::m#0 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 mul16s::m#0 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [215] if(mul16s::a#0>=0) goto mul16s::@1 [ mul16s::a#0 mul16s::b#0 mul16s::m#0 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 mul16s::m#0 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [216] mul16s::$6 = > mul16s::m#0 [ mul16s::a#0 mul16s::b#0 mul16s::m#0 mul16s::$6 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 mul16s::m#0 mul16s::$6 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [217] mul16s::$11 = mul16s::$6 - (word)mul16s::b#0 [ mul16s::a#0 mul16s::b#0 mul16s::m#0 mul16s::$11 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 mul16s::m#0 mul16s::$11 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [218] mul16s::m#1 = mul16s::m#0 hi= mul16s::$11 [ mul16s::a#0 mul16s::b#0 mul16s::m#1 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::b#0 mul16s::m#1 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [220] if(mul16s::b#0>=0) goto mul16s::@2 [ mul16s::a#0 mul16s::m#5 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::m#5 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [221] mul16s::$9 = > mul16s::m#5 [ mul16s::a#0 mul16s::m#5 mul16s::$9 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::a#0 mul16s::m#5 mul16s::$9 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [222] mul16s::$12 = mul16s::$9 - (word)mul16s::a#0 [ mul16s::m#5 mul16s::$12 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::m#5 mul16s::$12 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [223] mul16s::m#2 = mul16s::m#5 hi= mul16s::$12 [ mul16s::m#2 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::m#2 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [225] mul16s::return#0 = (signed dword)mul16s::m#4 [ mul16s::return#0 ] ( mul16s_compare:7::mul16s:100 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s::return#0 ] { { mul16s::a#0 = mul16s_compare::a#1 } { mul16s::b#0 = mul16s_compare::b#1 } { mul16s::return#0 = mul16s::return#2 } }  ) always clobbers reg byte a 
Statement [227] mulf16u::a#0 = (word)mulf16s::a#0 [ mulf16s::a#0 mulf16s::b#0 mulf16u::a#0 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 mulf16u::a#0 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } { mulf16u::a#0 = mulf16u::a#2 } { mulf16u::b#0 = mulf16u::b#2 } { mulf16u::return#0 = mulf16u::return#2 } }  ) always clobbers reg byte a 
Statement [228] mulf16u::b#0 = (word)mulf16s::b#0 [ mulf16s::a#0 mulf16s::b#0 mulf16u::a#0 mulf16u::b#0 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 mulf16u::a#0 mulf16u::b#0 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } { mulf16u::a#0 = mulf16u::a#2 } { mulf16u::b#0 = mulf16u::b#2 } { mulf16u::return#0 = mulf16u::return#2 } }  ) always clobbers reg byte a 
Statement [230] mulf16u::return#2 = mulf16u::return#0 [ mulf16s::a#0 mulf16s::b#0 mulf16u::return#2 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 mulf16u::return#2 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } { mulf16u::a#0 = mulf16u::a#2 } { mulf16u::b#0 = mulf16u::b#2 } { mulf16u::return#0 = mulf16u::return#2 } }  ) always clobbers reg byte a 
Statement [231] mulf16s::m#0 = mulf16u::return#2 [ mulf16s::a#0 mulf16s::b#0 mulf16s::m#0 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 mulf16s::m#0 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [232] if(mulf16s::a#0>=0) goto mulf16s::@1 [ mulf16s::a#0 mulf16s::b#0 mulf16s::m#0 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 mulf16s::m#0 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [233] mulf16s::$6 = > mulf16s::m#0 [ mulf16s::a#0 mulf16s::b#0 mulf16s::m#0 mulf16s::$6 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 mulf16s::m#0 mulf16s::$6 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [234] mulf16s::$11 = mulf16s::$6 - (word)mulf16s::b#0 [ mulf16s::a#0 mulf16s::b#0 mulf16s::m#0 mulf16s::$11 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 mulf16s::m#0 mulf16s::$11 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [235] mulf16s::m#1 = mulf16s::m#0 hi= mulf16s::$11 [ mulf16s::a#0 mulf16s::b#0 mulf16s::m#1 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::b#0 mulf16s::m#1 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [237] if(mulf16s::b#0>=0) goto mulf16s::@2 [ mulf16s::a#0 mulf16s::m#5 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::m#5 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [238] mulf16s::$9 = > mulf16s::m#5 [ mulf16s::a#0 mulf16s::m#5 mulf16s::$9 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::a#0 mulf16s::m#5 mulf16s::$9 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [239] mulf16s::$12 = mulf16s::$9 - (word)mulf16s::a#0 [ mulf16s::m#5 mulf16s::$12 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::m#5 mulf16s::$12 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [240] mulf16s::m#2 = mulf16s::m#5 hi= mulf16s::$12 [ mulf16s::m#2 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::m#2 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [242] mulf16s::return#0 = (signed dword)mulf16s::m#4 [ mulf16s::return#0 ] ( mul16s_compare:7::mulf16s:105 [ print_char_cursor#1 print_line_cursor#0 mul16s_compare::i#12 mul16s_compare::a#1 mul16s_compare::b#1 mul16s_compare::j#10 mul16s_compare::ms#0 mul16s_compare::mn#0 mulf16s::return#0 ] { { mulf16s::a#0 = mul16s_compare::a#1 } { mulf16s::b#0 = mul16s_compare::b#1 } { mulf16s::return#0 = mulf16s::return#2 } }  ) always clobbers reg byte a 
Statement [246] print_sint::w#1 = mul16s_error::a#0 [ print_char_cursor#1 print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_sint::w#1 ] ( mul16s_compare:7::mul16s_error:121 [ print_char_cursor#1 print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_sint::w#1 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } }  ) always clobbers reg byte a 
Statement [250] print_sint::w#2 = mul16s_error::b#0 [ print_char_cursor#1 print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_sint::w#2 ] ( mul16s_compare:7::mul16s_error:121 [ print_char_cursor#1 print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_sint::w#2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } }  ) always clobbers reg byte a 
Statement [254] print_slong::dw#1 = mul16s_error::ms#0 [ print_char_cursor#1 print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_slong::dw#1 ] ( mul16s_compare:7::mul16s_error:121 [ print_char_cursor#1 print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_slong::dw#1 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } }  ) always clobbers reg byte a 
Statement [258] print_slong::dw#2 = mul16s_error::mn#0 [ print_char_cursor#1 print_line_cursor#0 mul16s_error::mf#0 print_slong::dw#2 ] ( mul16s_compare:7::mul16s_error:121 [ print_char_cursor#1 print_line_cursor#0 mul16s_error::mf#0 print_slong::dw#2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } }  ) always clobbers reg byte a 
Statement [262] print_slong::dw#3 = mul16s_error::mf#0 [ print_char_cursor#1 print_line_cursor#0 print_slong::dw#3 ] ( mul16s_compare:7::mul16s_error:121 [ print_char_cursor#1 print_line_cursor#0 print_slong::dw#3 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [268] *print_char_cursor#89 = print_char::ch#7 [ print_char_cursor#89 ] ( mul16u_compare:5::print_str:43::print_char:144 [ mul16u_compare::a#6 mul16u_compare::b#6 mul16u_compare::i#12 print_str::str#15 print_char_cursor#89 ] { { print_char_cursor#148 = print_char_cursor#157 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16u_compare:5::print_str:84::print_char:144 [ print_line_cursor#0 print_str::str#15 print_char_cursor#89 ] { { print_char_cursor#157 = print_char_cursor#190 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::print_str:89::print_char:144 [ print_line_cursor#0 mul16s_compare::a#6 mul16s_compare::b#6 mul16s_compare::i#12 print_str::str#15 print_char_cursor#89 ] { { print_char_cursor#152 = print_char_cursor#157 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::print_str:130::print_char:144 [ print_line_cursor#0 print_str::str#15 print_char_cursor#89 ] { { print_char_cursor#157 = print_char_cursor#183 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_str:171::print_char:144 [ mul16u_error::a#0 mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_str::str#15 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#157 print_char_cursor#89 } { print_char::ch#0 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_str:175::print_char:144 [ mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_str::str#15 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_str:179::print_char:144 [ mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_str::str#15 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_str:183::print_char:144 [ mul16u_error::mn#0 mul16u_error::mf#0 print_str::str#15 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_str:187::print_char:144 [ mul16u_error::mf#0 print_str::str#15 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_str:245::print_char:144 [ print_line_cursor#0 mul16s_error::a#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_str::str#15 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#157 print_char_cursor#89 } { print_char::ch#0 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_str:249::print_char:144 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_str::str#15 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_str:253::print_char:144 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_str::str#15 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_str:257::print_char:144 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_str::str#15 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_str:261::print_char:144 [ print_line_cursor#0 mul16s_error::mf#0 print_str::str#15 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_char_cursor#157 = print_char_cursor#21 } { print_char::ch#0 = print_char::ch#7 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_sint:247::print_char:286 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_sint::w#3 print_char_cursor#89 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_sint:251::print_char:286 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_sint::w#3 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_sint:247::print_char:292 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_sint::w#3 print_char_cursor#89 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_sint:251::print_char:292 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_sint::w#3 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_char:297 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_slong::dw#4 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_char:297 [ print_line_cursor#0 mul16s_error::mf#0 print_slong::dw#4 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_char:297 [ print_line_cursor#0 print_slong::dw#4 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_char:303 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_slong::dw#4 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_char:303 [ print_line_cursor#0 mul16s_error::mf#0 print_slong::dw#4 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_char:303 [ print_line_cursor#0 print_slong::dw#4 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_uint:173::print_uchar:273::print_char:308 [ mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#3 = print_uint::w#5 mul16u_error::a#0 mul16u_compare::a#1 } { print_char_cursor#1 = print_char_cursor#140 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_uint:177::print_uchar:273::print_char:308 [ mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#4 = print_uint::w#5 mul16u_error::b#0 mul16u_compare::b#1 } { print_char_cursor#1 = print_char_cursor#140 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:279::print_uchar:273::print_char:308 [ mul16u_error::mn#0 mul16u_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:279::print_uchar:273::print_char:308 [ mul16u_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:279::print_uchar:273::print_char:308 [ print_ulong::dw#4 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:279::print_uchar:273::print_char:308 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:279::print_uchar:273::print_char:308 [ print_line_cursor#0 mul16s_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:279::print_uchar:273::print_char:308 [ print_line_cursor#0 print_ulong::dw#4 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:281::print_uchar:273::print_char:308 [ mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:281::print_uchar:273::print_char:308 [ mul16u_error::mf#0 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:281::print_uchar:273::print_char:308 [ print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:281::print_uchar:273::print_char:308 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:281::print_uchar:273::print_char:308 [ print_line_cursor#0 mul16s_error::mf#0 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:281::print_uchar:273::print_char:308 [ print_line_cursor#0 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:247::print_uint:289::print_uchar:273::print_char:308 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:251::print_uint:289::print_uchar:273::print_char:308 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#5 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_uint:173::print_uchar:275::print_char:308 [ mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#3 = print_uint::w#5 mul16u_error::a#0 mul16u_compare::a#1 } { print_char_cursor#1 = print_char_cursor#140 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_uint:177::print_uchar:275::print_char:308 [ mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#4 = print_uint::w#5 mul16u_error::b#0 mul16u_compare::b#1 } { print_char_cursor#1 = print_char_cursor#140 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:279::print_uchar:275::print_char:308 [ mul16u_error::mn#0 mul16u_error::mf#0 print_ulong::dw#4 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:279::print_uchar:275::print_char:308 [ mul16u_error::mf#0 print_ulong::dw#4 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:279::print_uchar:275::print_char:308 [ print_ulong::dw#4 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:279::print_uchar:275::print_char:308 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_ulong::dw#4 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:279::print_uchar:275::print_char:308 [ print_line_cursor#0 mul16s_error::mf#0 print_ulong::dw#4 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:279::print_uchar:275::print_char:308 [ print_line_cursor#0 print_ulong::dw#4 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:281::print_uchar:275::print_char:308 [ mul16u_error::mn#0 mul16u_error::mf#0 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:281::print_uchar:275::print_char:308 [ mul16u_error::mf#0 print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:281::print_uchar:275::print_char:308 [ print_uchar::b#2 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:281::print_uchar:275::print_char:308 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:281::print_uchar:275::print_char:308 [ print_line_cursor#0 mul16s_error::mf#0 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:281::print_uchar:275::print_char:308 [ print_line_cursor#0 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:247::print_uint:289::print_uchar:275::print_char:308 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:251::print_uint:289::print_uchar:275::print_char:308 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uchar::b#2 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_uint:173::print_uchar:273::print_char:311 [ mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#5 print_char_cursor#89 ] { { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#3 = print_uint::w#5 mul16u_error::a#0 mul16u_compare::a#1 } { print_char_cursor#1 = print_char_cursor#140 print_char_cursor#145 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } { print_char_cursor#21 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_uint:177::print_uchar:273::print_char:311 [ mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#5 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#4 = print_uint::w#5 mul16u_error::b#0 mul16u_compare::b#1 } { print_char_cursor#1 = print_char_cursor#140 print_char_cursor#145 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } { print_char_cursor#21 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:279::print_uchar:273::print_char:311 [ mul16u_error::mn#0 mul16u_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 print_char_cursor#145 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } { print_char_cursor#21 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:279::print_uchar:273::print_char:311 [ mul16u_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 print_char_cursor#145 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } { print_char_cursor#21 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:279::print_uchar:273::print_char:311 [ print_ulong::dw#4 print_uint::w#5 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 print_char_cursor#145 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } { print_char_cursor#21 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:279::print_uchar:273::print_char:311 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:279::print_uchar:273::print_char:311 [ print_line_cursor#0 mul16s_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:279::print_uchar:273::print_char:311 [ print_line_cursor#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:281::print_uchar:273::print_char:311 [ mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#5 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:281::print_uchar:273::print_char:311 [ mul16u_error::mf#0 print_uint::w#5 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:281::print_uchar:273::print_char:311 [ print_uint::w#5 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:281::print_uchar:273::print_char:311 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#5 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:281::print_uchar:273::print_char:311 [ print_line_cursor#0 mul16s_error::mf#0 print_uint::w#5 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:281::print_uchar:273::print_char:311 [ print_line_cursor#0 print_uint::w#5 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:247::print_uint:289::print_uchar:273::print_char:311 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#5 print_char_cursor#89 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:251::print_uint:289::print_uchar:273::print_char:311 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#5 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_uint:173::print_uchar:275::print_char:311 [ mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#89 ] { { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#3 = print_uint::w#5 mul16u_error::a#0 mul16u_compare::a#1 } { print_char_cursor#1 = print_char_cursor#140 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_uint:177::print_uchar:275::print_char:311 [ mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#4 = print_uint::w#5 mul16u_error::b#0 mul16u_compare::b#1 } { print_char_cursor#1 = print_char_cursor#140 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:279::print_uchar:275::print_char:311 [ mul16u_error::mn#0 mul16u_error::mf#0 print_ulong::dw#4 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:279::print_uchar:275::print_char:311 [ mul16u_error::mf#0 print_ulong::dw#4 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:279::print_uchar:275::print_char:311 [ print_ulong::dw#4 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:279::print_uchar:275::print_char:311 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_ulong::dw#4 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:279::print_uchar:275::print_char:311 [ print_line_cursor#0 mul16s_error::mf#0 print_ulong::dw#4 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:279::print_uchar:275::print_char:311 [ print_line_cursor#0 print_ulong::dw#4 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:281::print_uchar:275::print_char:311 [ mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:281::print_uchar:275::print_char:311 [ mul16u_error::mf#0 print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:281::print_uchar:275::print_char:311 [ print_char_cursor#89 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:281::print_uchar:275::print_char:311 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:281::print_uchar:275::print_char:311 [ print_line_cursor#0 mul16s_error::mf#0 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:281::print_uchar:275::print_char:311 [ print_line_cursor#0 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:247::print_uint:289::print_uchar:275::print_char:311 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#89 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:251::print_uint:289::print_uchar:275::print_char:311 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#89 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  ) always clobbers reg byte y 
Statement [278] print_uint::w#1 = > print_ulong::dw#4 [ print_uint::w#1 print_char_cursor#141 print_ulong::dw#4 ] ( mul16u_compare:5::mul16u_error:75::print_ulong:181 [ mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#1 print_char_cursor#141 print_ulong::dw#4 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185 [ mul16u_error::mf#0 print_uint::w#1 print_char_cursor#141 print_ulong::dw#4 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189 [ print_uint::w#1 print_char_cursor#141 print_ulong::dw#4 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#1 print_char_cursor#141 print_ulong::dw#4 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 } { print_uint::w#1 = print_uint::w#5 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300 [ print_line_cursor#0 mul16s_error::mf#0 print_uint::w#1 print_char_cursor#141 print_ulong::dw#4 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 } { print_uint::w#1 = print_uint::w#5 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300 [ print_line_cursor#0 print_uint::w#1 print_char_cursor#141 print_ulong::dw#4 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 } { print_uint::w#1 = print_uint::w#5 } }  ) always clobbers reg byte a 
Statement [280] print_uint::w#2 = < print_ulong::dw#4 [ print_char_cursor#21 print_uint::w#2 ] ( mul16u_compare:5::mul16u_error:75::print_ulong:181 [ mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#21 print_uint::w#2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185 [ mul16u_error::mf#0 print_char_cursor#21 print_uint::w#2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189 [ print_char_cursor#21 print_uint::w#2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#21 print_uint::w#2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 } { print_uint::w#2 = print_uint::w#5 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300 [ print_line_cursor#0 mul16s_error::mf#0 print_char_cursor#21 print_uint::w#2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 } { print_uint::w#2 = print_uint::w#5 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300 [ print_line_cursor#0 print_char_cursor#21 print_uint::w#2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 } { print_uint::w#2 = print_uint::w#5 } }  ) always clobbers reg byte a 
Statement [284] if(print_sint::w#3<0) goto print_sint::@1 [ print_char_cursor#1 print_sint::w#3 ] ( mul16s_compare:7::mul16s_error:121::print_sint:247 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#1 print_sint::w#3 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } }  mul16s_compare:7::mul16s_error:121::print_sint:251 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#1 print_sint::w#3 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } }  ) always clobbers reg byte a 
Statement [288] print_uint::w#0 = (word)print_sint::w#5 [ print_char_cursor#21 print_uint::w#0 ] ( mul16s_compare:7::mul16s_error:121::print_sint:247 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#21 print_uint::w#0 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 } }  mul16s_compare:7::mul16s_error:121::print_sint:251 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#21 print_uint::w#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 } }  ) always clobbers reg byte a 
Statement [293] print_sint::w#0 = - print_sint::w#3 [ print_char_cursor#21 print_sint::w#0 ] ( mul16s_compare:7::mul16s_error:121::print_sint:247 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#21 print_sint::w#0 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } }  mul16s_compare:7::mul16s_error:121::print_sint:251 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#21 print_sint::w#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } }  ) always clobbers reg byte a 
Statement [295] if(print_slong::dw#4<0) goto print_slong::@1 [ print_char_cursor#1 print_slong::dw#4 ] ( mul16s_compare:7::mul16s_error:121::print_slong:255 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#1 print_slong::dw#4 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } }  mul16s_compare:7::mul16s_error:121::print_slong:259 [ print_line_cursor#0 mul16s_error::mf#0 print_char_cursor#1 print_slong::dw#4 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } }  mul16s_compare:7::mul16s_error:121::print_slong:263 [ print_line_cursor#0 print_char_cursor#1 print_slong::dw#4 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [299] print_ulong::dw#0 = (dword)print_slong::dw#6 [ print_char_cursor#21 print_ulong::dw#0 ] ( mul16s_compare:7::mul16s_error:121::print_slong:255 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#21 print_ulong::dw#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#141 = print_char_cursor#21 } }  mul16s_compare:7::mul16s_error:121::print_slong:259 [ print_line_cursor#0 mul16s_error::mf#0 print_char_cursor#21 print_ulong::dw#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#141 = print_char_cursor#21 } }  mul16s_compare:7::mul16s_error:121::print_slong:263 [ print_line_cursor#0 print_char_cursor#21 print_ulong::dw#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#141 = print_char_cursor#21 } }  ) always clobbers reg byte a 
Statement [304] print_slong::dw#0 = - print_slong::dw#4 [ print_char_cursor#21 print_slong::dw#0 ] ( mul16s_compare:7::mul16s_error:121::print_slong:255 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#21 print_slong::dw#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } }  mul16s_compare:7::mul16s_error:121::print_slong:259 [ print_line_cursor#0 mul16s_error::mf#0 print_char_cursor#21 print_slong::dw#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } }  mul16s_compare:7::mul16s_error:121::print_slong:263 [ print_line_cursor#0 print_char_cursor#21 print_slong::dw#0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } }  ) always clobbers reg byte a 
Statement [306] print_uchar::$0 = print_uchar::b#2 >> 4 [ print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] ( mul16u_compare:5::mul16u_error:75::print_uint:173::print_uchar:273 [ mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#3 = print_uint::w#5 mul16u_error::a#0 mul16u_compare::a#1 } { print_char_cursor#1 = print_char_cursor#140 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_uint:177::print_uchar:273 [ mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#4 = print_uint::w#5 mul16u_error::b#0 mul16u_compare::b#1 } { print_char_cursor#1 = print_char_cursor#140 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:279::print_uchar:273 [ mul16u_error::mn#0 mul16u_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:279::print_uchar:273 [ mul16u_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:279::print_uchar:273 [ print_ulong::dw#4 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:279::print_uchar:273 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:279::print_uchar:273 [ print_line_cursor#0 mul16s_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:279::print_uchar:273 [ print_line_cursor#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:281::print_uchar:273 [ mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:281::print_uchar:273 [ mul16u_error::mf#0 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:281::print_uchar:273 [ print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:281::print_uchar:273 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:281::print_uchar:273 [ print_line_cursor#0 mul16s_error::mf#0 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:281::print_uchar:273 [ print_line_cursor#0 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:247::print_uint:289::print_uchar:273 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:251::print_uint:289::print_uchar:273 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#5 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_uint:173::print_uchar:275 [ mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#3 = print_uint::w#5 mul16u_error::a#0 mul16u_compare::a#1 } { print_char_cursor#1 = print_char_cursor#140 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_uint:177::print_uchar:275 [ mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#4 = print_uint::w#5 mul16u_error::b#0 mul16u_compare::b#1 } { print_char_cursor#1 = print_char_cursor#140 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:279::print_uchar:275 [ mul16u_error::mn#0 mul16u_error::mf#0 print_ulong::dw#4 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:279::print_uchar:275 [ mul16u_error::mf#0 print_ulong::dw#4 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:279::print_uchar:275 [ print_ulong::dw#4 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:279::print_uchar:275 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_ulong::dw#4 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:279::print_uchar:275 [ print_line_cursor#0 mul16s_error::mf#0 print_ulong::dw#4 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:279::print_uchar:275 [ print_line_cursor#0 print_ulong::dw#4 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:281::print_uchar:275 [ mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:281::print_uchar:275 [ mul16u_error::mf#0 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:281::print_uchar:275 [ print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:281::print_uchar:275 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:281::print_uchar:275 [ print_line_cursor#0 mul16s_error::mf#0 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:281::print_uchar:275 [ print_line_cursor#0 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:247::print_uint:289::print_uchar:275 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:251::print_uint:289::print_uchar:275 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#145 print_uchar::b#2 print_uchar::$0 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#5 = print_char::ch#7 } }  ) always clobbers reg byte a 
Statement [309] print_uchar::$2 = print_uchar::b#2 & $f [ print_char_cursor#21 print_uchar::$2 ] ( mul16u_compare:5::mul16u_error:75::print_uint:173::print_uchar:273 [ mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#3 = print_uint::w#5 mul16u_error::a#0 mul16u_compare::a#1 } { print_char_cursor#1 = print_char_cursor#140 print_char_cursor#145 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } { print_char_cursor#21 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_uint:177::print_uchar:273 [ mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#4 = print_uint::w#5 mul16u_error::b#0 mul16u_compare::b#1 } { print_char_cursor#1 = print_char_cursor#140 print_char_cursor#145 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } { print_char_cursor#21 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:279::print_uchar:273 [ mul16u_error::mn#0 mul16u_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 print_char_cursor#145 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } { print_char_cursor#21 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:279::print_uchar:273 [ mul16u_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 print_char_cursor#145 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } { print_char_cursor#21 = print_char_cursor#89 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:279::print_uchar:273 [ print_ulong::dw#4 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 print_char_cursor#145 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } { print_char_cursor#21 = print_char_cursor#89 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:279::print_uchar:273 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:279::print_uchar:273 [ print_line_cursor#0 mul16s_error::mf#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:279::print_uchar:273 [ print_line_cursor#0 print_ulong::dw#4 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:281::print_uchar:273 [ mul16u_error::mn#0 mul16u_error::mf#0 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:281::print_uchar:273 [ mul16u_error::mf#0 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:281::print_uchar:273 [ print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:281::print_uchar:273 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:281::print_uchar:273 [ print_line_cursor#0 mul16s_error::mf#0 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:281::print_uchar:273 [ print_line_cursor#0 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:247::print_uint:289::print_uchar:273 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:251::print_uint:289::print_uchar:273 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_uint::w#5 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#0 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_uint:173::print_uchar:275 [ mul16u_error::b#0 mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#3 = print_uint::w#5 mul16u_error::a#0 mul16u_compare::a#1 } { print_char_cursor#1 = print_char_cursor#140 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_uint:177::print_uchar:275 [ mul16u_error::ms#0 mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_uint::w#4 = print_uint::w#5 mul16u_error::b#0 mul16u_compare::b#1 } { print_char_cursor#1 = print_char_cursor#140 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:279::print_uchar:275 [ mul16u_error::mn#0 mul16u_error::mf#0 print_ulong::dw#4 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:279::print_uchar:275 [ mul16u_error::mf#0 print_ulong::dw#4 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:279::print_uchar:275 [ print_ulong::dw#4 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 print_char_cursor#140 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char_cursor#145 = print_char_cursor#21 print_char_cursor#89 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:279::print_uchar:275 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_ulong::dw#4 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:279::print_uchar:275 [ print_line_cursor#0 mul16s_error::mf#0 print_ulong::dw#4 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:279::print_uchar:275 [ print_line_cursor#0 print_ulong::dw#4 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#1 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:181::print_uint:281::print_uchar:275 [ mul16u_error::mn#0 mul16u_error::mf#0 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#1 = print_ulong::dw#4 mul16u_error::ms#0 mul16u_compare::ms#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:185::print_uint:281::print_uchar:275 [ mul16u_error::mf#0 print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mf#0 = mul16u_compare::mf#0 } { print_ulong::dw#2 = print_ulong::dw#4 mul16u_error::mn#0 mul16u_compare::mn#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16u_compare:5::mul16u_error:75::print_ulong:189::print_uint:281::print_uchar:275 [ print_char_cursor#21 print_uchar::$2 ] { { mul16u_error::a#0 = mul16u_compare::a#1 } { mul16u_error::b#0 = mul16u_compare::b#1 } { mul16u_error::ms#0 = mul16u_compare::ms#0 } { mul16u_error::mn#0 = mul16u_compare::mn#0 } { print_ulong::dw#3 = print_ulong::dw#4 mul16u_error::mf#0 mul16u_compare::mf#0 } { print_char_cursor#1 = print_char_cursor#141 } { print_uint::w#2 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:255::print_ulong:300::print_uint:281::print_uchar:275 [ print_line_cursor#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#1 = print_slong::dw#4 mul16s_error::ms#0 mul16s_compare::ms#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:259::print_ulong:300::print_uint:281::print_uchar:275 [ print_line_cursor#0 mul16s_error::mf#0 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_slong::dw#2 = print_slong::dw#4 mul16s_error::mn#0 mul16s_compare::mn#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_slong:263::print_ulong:300::print_uint:281::print_uchar:275 [ print_line_cursor#0 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { print_slong::dw#3 = print_slong::dw#4 mul16s_error::mf#0 mul16s_compare::mf#0 } { print_ulong::dw#0 = print_ulong::dw#4 } { print_char_cursor#140 = print_char_cursor#141 print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:247::print_uint:289::print_uchar:275 [ print_line_cursor#0 mul16s_error::b#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::b#0 = mul16s_compare::b#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#1 = print_sint::w#3 mul16s_error::a#0 mul16s_compare::a#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  mul16s_compare:7::mul16s_error:121::print_sint:251::print_uint:289::print_uchar:275 [ print_line_cursor#0 mul16s_error::ms#0 mul16s_error::mn#0 mul16s_error::mf#0 print_char_cursor#21 print_uchar::$2 ] { { mul16s_error::a#0 = mul16s_compare::a#1 } { mul16s_error::ms#0 = mul16s_compare::ms#0 } { mul16s_error::mn#0 = mul16s_compare::mn#0 } { mul16s_error::mf#0 = mul16s_compare::mf#0 } { print_sint::w#2 = print_sint::w#3 mul16s_error::b#0 mul16s_compare::b#1 } { print_uint::w#0 = print_uint::w#5 } { print_char_cursor#140 = print_char_cursor#21 print_char_cursor#145 print_char_cursor#89 } { print_uchar::b#1 = print_uchar::b#2 } { print_char::ch#6 = print_char::ch#7 } }  ) always clobbers reg byte a 
Potential registers zp[2]:2 [ mulf_init::sqr1_lo#2 mulf_init::sqr1_lo#1 ] : zp[2]:2 , 
Potential registers zp[1]:4 [ mulf_init::c#2 mulf_init::c#1 ] : zp[1]:4 , reg byte x , 
Potential registers zp[2]:5 [ mulf_init::sqr1_hi#2 mulf_init::sqr1_hi#1 ] : zp[2]:5 , 
Potential registers zp[1]:7 [ mulf_init::x_2#3 mulf_init::x_2#2 mulf_init::x_2#1 ] : zp[1]:7 , reg byte x , 
Potential registers zp[2]:8 [ mulf_init::sqr2_lo#2 mulf_init::sqr2_lo#1 ] : zp[2]:8 , 
Potential registers zp[1]:10 [ mulf_init::x_255#2 mulf_init::x_255#1 ] : zp[1]:10 , reg byte x , 
Potential registers zp[2]:11 [ mulf_init::sqr2_hi#2 mulf_init::sqr2_hi#1 ] : zp[2]:11 , 
Potential registers zp[1]:13 [ mulf_init::dir#2 mulf_init::dir#4 ] : zp[1]:13 , reg byte x , 
Potential registers zp[2]:14 [ mulf_init::sqr#3 mulf_init::sqr#4 mulf_init::sqr#1 mulf_init::sqr#2 ] : zp[2]:14 , 
Potential registers zp[1]:16 [ mul16u_compare::i#12 mul16u_compare::i#1 ] : zp[1]:16 , 
Potential registers zp[2]:17 [ mul16u_compare::a#2 mul16u_compare::a#6 mul16u_compare::a#1 ] : zp[2]:17 , 
Potential registers zp[2]:19 [ mul16u_compare::b#2 mul16u_compare::b#6 mul16u_compare::b#1 ] : zp[2]:19 , 
Potential registers zp[1]:21 [ mul16u_compare::j#10 mul16u_compare::j#1 ] : zp[1]:21 , reg byte y , 
Potential registers zp[1]:22 [ mul16u_compare::ok#3 mul16u_compare::ok#4 ] : zp[1]:22 , reg byte x , reg byte y , 
Potential registers zp[1]:23 [ mul16s_compare::i#12 mul16s_compare::i#1 ] : zp[1]:23 , 
Potential registers zp[2]:24 [ mul16s_compare::a#2 mul16s_compare::a#6 mul16s_compare::a#1 ] : zp[2]:24 , 
Potential registers zp[2]:26 [ mul16s_compare::b#2 mul16s_compare::b#6 mul16s_compare::b#1 ] : zp[2]:26 , 
Potential registers zp[1]:28 [ mul16s_compare::j#10 mul16s_compare::j#1 ] : zp[1]:28 , reg byte y , 
Potential registers zp[1]:29 [ mul16s_compare::ok#3 mul16s_compare::ok#4 ] : zp[1]:29 , reg byte x , reg byte y , 
Potential registers zp[2]:30 [ memset::dst#2 memset::dst#1 ] : zp[2]:30 , 
Potential registers zp[2]:32 [ print_str::str#15 print_str::str#18 print_str::str#0 ] : zp[2]:32 , 
Potential registers zp[2]:34 [ muls16u::i#2 muls16u::i#1 ] : zp[2]:34 , 
Potential registers zp[4]:36 [ muls16u::return#0 muls16u::m#3 muls16u::m#1 ] : zp[4]:36 , 
Potential registers zp[2]:40 [ mul16u::b#2 mul16u::b#0 mul16u::b#1 ] : zp[2]:40 , 
Potential registers zp[2]:42 [ mul16u::a#3 mul16u::a#6 mul16u::a#1 mul16u::a#2 mul16u::a#0 ] : zp[2]:42 , 
Potential registers zp[4]:44 [ mul16u::res#2 mul16u::res#6 mul16u::res#1 ] : zp[4]:44 , 
Potential registers zp[4]:48 [ mul16u::mb#2 mul16u::mb#0 mul16u::mb#1 ] : zp[4]:48 , 
Potential registers zp[2]:52 [ mulf16u::a#2 mulf16u::a#1 mulf16u::a#0 ] : zp[2]:52 , 
Potential registers zp[2]:54 [ mulf16u::b#2 mulf16u::b#1 mulf16u::b#0 ] : zp[2]:54 , 
Potential registers zp[2]:56 [ print_line_cursor#23 print_line_cursor#45 print_line_cursor#0 ] : zp[2]:56 , 
Potential registers zp[2]:58 [ muls16s::j#2 muls16s::j#1 ] : zp[2]:58 , 
Potential registers zp[4]:60 [ muls16s::return#0 muls16s::m#3 muls16s::m#1 muls16s::m#5 muls16s::m#2 ] : zp[4]:60 , 
Potential registers zp[2]:64 [ muls16s::i#2 muls16s::i#1 ] : zp[2]:64 , 
Potential registers zp[4]:66 [ mul16s::m#4 mul16s::m#5 mul16s::m#1 mul16s::m#0 mul16s::m#2 ] : zp[4]:66 , 
Potential registers zp[4]:70 [ mulf16s::m#4 mulf16s::m#5 mulf16s::m#1 mulf16s::m#0 mulf16s::m#2 ] : zp[4]:70 , 
Potential registers zp[1]:74 [ print_char::ch#7 print_char::ch#0 print_char::ch#5 print_char::ch#6 ] : zp[1]:74 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:75 [ print_uint::w#5 print_uint::w#3 print_uint::w#4 print_uint::w#0 print_uint::w#1 print_uint::w#2 ] : zp[2]:75 , 
Potential registers zp[2]:77 [ print_char_cursor#140 print_char_cursor#89 print_char_cursor#136 print_char_cursor#157 print_char_cursor#152 print_char_cursor#223 print_char_cursor#148 print_char_cursor#1 print_char_cursor#183 print_char_cursor#21 print_char_cursor#190 print_char_cursor#145 print_char_cursor#141 ] : zp[2]:77 , 
Potential registers zp[4]:79 [ print_ulong::dw#4 print_ulong::dw#1 print_ulong::dw#2 print_ulong::dw#3 print_ulong::dw#0 ] : zp[4]:79 , 
Potential registers zp[2]:83 [ print_sint::w#5 print_sint::w#0 print_sint::w#3 print_sint::w#1 print_sint::w#2 ] : zp[2]:83 , 
Potential registers zp[4]:85 [ print_slong::dw#6 print_slong::dw#0 print_slong::dw#4 print_slong::dw#1 print_slong::dw#2 print_slong::dw#3 ] : zp[4]:85 , 
Potential registers zp[1]:89 [ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ] : zp[1]:89 , reg byte x , 
Potential registers zp[1]:90 [ mulf_init::$1 ] : zp[1]:90 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:91 [ mulf_init::$4 ] : zp[1]:91 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:92 [ mulf_init::$5 ] : zp[1]:92 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:93 [ muls16u::a#0 ] : zp[2]:93 , 
Potential registers zp[2]:95 [ muls16u::b#0 ] : zp[2]:95 , 
Potential registers zp[4]:97 [ muls16u::return#2 ] : zp[4]:97 , 
Potential registers zp[4]:101 [ mul16u_compare::ms#0 ] : zp[4]:101 , 
Potential registers zp[4]:105 [ mul16u::return#3 ] : zp[4]:105 , 
Potential registers zp[4]:109 [ mul16u_compare::mn#0 ] : zp[4]:109 , 
Potential registers zp[4]:113 [ mulf16u::return#3 ] : zp[4]:113 , 
Potential registers zp[4]:117 [ mul16u_compare::mf#0 ] : zp[4]:117 , 
Potential registers zp[2]:121 [ mul16u_error::a#0 ] : zp[2]:121 , 
Potential registers zp[2]:123 [ mul16u_error::b#0 ] : zp[2]:123 , 
Potential registers zp[4]:125 [ mul16u_error::ms#0 ] : zp[4]:125 , 
Potential registers zp[4]:129 [ mul16u_error::mn#0 ] : zp[4]:129 , 
Potential registers zp[4]:133 [ mul16u_error::mf#0 ] : zp[4]:133 , 
Potential registers zp[2]:137 [ muls16s::a#0 ] : zp[2]:137 , 
Potential registers zp[2]:139 [ muls16s::b#0 ] : zp[2]:139 , 
Potential registers zp[4]:141 [ muls16s::return#2 ] : zp[4]:141 , 
Potential registers zp[4]:145 [ mul16s_compare::ms#0 ] : zp[4]:145 , 
Potential registers zp[2]:149 [ mul16s::a#0 ] : zp[2]:149 , 
Potential registers zp[2]:151 [ mul16s::b#0 ] : zp[2]:151 , 
Potential registers zp[4]:153 [ mul16s::return#2 ] : zp[4]:153 , 
Potential registers zp[4]:157 [ mul16s_compare::mn#0 ] : zp[4]:157 , 
Potential registers zp[2]:161 [ mulf16s::a#0 ] : zp[2]:161 , 
Potential registers zp[2]:163 [ mulf16s::b#0 ] : zp[2]:163 , 
Potential registers zp[4]:165 [ mulf16s::return#2 ] : zp[4]:165 , 
Potential registers zp[4]:169 [ mul16s_compare::mf#0 ] : zp[4]:169 , 
Potential registers zp[2]:173 [ mul16s_error::a#0 ] : zp[2]:173 , 
Potential registers zp[2]:175 [ mul16s_error::b#0 ] : zp[2]:175 , 
Potential registers zp[4]:177 [ mul16s_error::ms#0 ] : zp[4]:177 , 
Potential registers zp[4]:181 [ mul16s_error::mn#0 ] : zp[4]:181 , 
Potential registers zp[4]:185 [ mul16s_error::mf#0 ] : zp[4]:185 , 
Potential registers zp[1]:189 [ mul16u::$1 ] : zp[1]:189 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[4]:190 [ mulf16u::return#0 ] : zp[4]:190 , 
Potential registers zp[4]:194 [ mul16u::return#2 ] : zp[4]:194 , 
Potential registers zp[2]:198 [ mul16s::$6 ] : zp[2]:198 , 
Potential registers zp[2]:200 [ mul16s::$11 ] : zp[2]:200 , 
Potential registers zp[2]:202 [ mul16s::$9 ] : zp[2]:202 , 
Potential registers zp[2]:204 [ mul16s::$12 ] : zp[2]:204 , 
Potential registers zp[4]:206 [ mul16s::return#0 ] : zp[4]:206 , 
Potential registers zp[4]:210 [ mulf16u::return#2 ] : zp[4]:210 , 
Potential registers zp[2]:214 [ mulf16s::$6 ] : zp[2]:214 , 
Potential registers zp[2]:216 [ mulf16s::$11 ] : zp[2]:216 , 
Potential registers zp[2]:218 [ mulf16s::$9 ] : zp[2]:218 , 
Potential registers zp[2]:220 [ mulf16s::$12 ] : zp[2]:220 , 
Potential registers zp[4]:222 [ mulf16s::return#0 ] : zp[4]:222 , 
Potential registers zp[1]:226 [ print_uchar::$0 ] : zp[1]:226 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:227 [ print_uchar::$2 ] : zp[1]:227 , reg byte a , reg byte x , reg byte y , 

REGISTER UPLIFT SCOPES
Uplift Scope [mul16u] 342,858,718: zp[4]:44 [ mul16u::res#2 mul16u::res#6 mul16u::res#1 ] 243,071,433.14: zp[4]:48 [ mul16u::mb#2 mul16u::mb#0 mul16u::mb#1 ] 200,000,002: zp[1]:189 [ mul16u::$1 ] 166,749,838.67: zp[2]:42 [ mul16u::a#3 mul16u::a#6 mul16u::a#1 mul16u::a#2 mul16u::a#0 ] 33,006: zp[2]:40 [ mul16u::b#2 mul16u::b#0 mul16u::b#1 ] 20,002: zp[4]:194 [ mul16u::return#2 ] 2,002: zp[4]:105 [ mul16u::return#3 ] 
Uplift Scope [muls16s] 56,667,006: zp[4]:60 [ muls16s::return#0 muls16s::m#3 muls16s::m#1 muls16s::m#5 muls16s::m#2 ] 30,000,003: zp[2]:58 [ muls16s::j#2 muls16s::j#1 ] 30,000,003: zp[2]:64 [ muls16s::i#2 muls16s::i#1 ] 1,818,273: zp[2]:139 [ muls16s::b#0 ] 1,668,417.08: zp[2]:137 [ muls16s::a#0 ] 2,002: zp[4]:141 [ muls16s::return#2 ] 
Uplift Scope [muls16u] 30,000,003: zp[2]:34 [ muls16u::i#2 muls16u::i#1 ] 28,333,669.83: zp[4]:36 [ muls16u::return#0 muls16u::m#3 muls16u::m#1 ] 1,666,833.67: zp[2]:95 [ muls16u::b#0 ] 1,430,143.29: zp[2]:93 [ muls16u::a#0 ] 2,002: zp[4]:97 [ muls16u::return#2 ] 
Uplift Scope [print_char] 16,300,010: zp[1]:74 [ print_char::ch#7 print_char::ch#0 print_char::ch#5 print_char::ch#6 ] 
Uplift Scope [] 11,745,240.76: zp[2]:77 [ print_char_cursor#140 print_char_cursor#89 print_char_cursor#136 print_char_cursor#157 print_char_cursor#152 print_char_cursor#223 print_char_cursor#148 print_char_cursor#1 print_char_cursor#183 print_char_cursor#21 print_char_cursor#190 print_char_cursor#145 print_char_cursor#141 ] 22,524.79: zp[2]:56 [ print_line_cursor#23 print_line_cursor#45 print_line_cursor#0 ] 
Uplift Scope [print_uchar] 2,000,002: zp[1]:226 [ print_uchar::$0 ] 2,000,002: zp[1]:227 [ print_uchar::$2 ] 950,005: zp[1]:89 [ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ] 
Uplift Scope [print_str] 301,254.25: zp[2]:32 [ print_str::str#15 print_str::str#18 print_str::str#0 ] 
Uplift Scope [mulf16u] 122,005: zp[2]:52 [ mulf16u::a#2 mulf16u::a#1 mulf16u::a#0 ] 77,505.5: zp[2]:54 [ mulf16u::b#2 mulf16u::b#1 mulf16u::b#0 ] 27,750.75: zp[4]:190 [ mulf16u::return#0 ] 20,002: zp[4]:210 [ mulf16u::return#2 ] 2,002: zp[4]:113 [ mulf16u::return#3 ] 
Uplift Scope [mul16s] 82,508.25: zp[4]:66 [ mul16s::m#4 mul16s::m#5 mul16s::m#1 mul16s::m#0 mul16s::m#2 ] 20,002: zp[2]:198 [ mul16s::$6 ] 20,002: zp[2]:200 [ mul16s::$11 ] 20,002: zp[2]:202 [ mul16s::$9 ] 20,002: zp[2]:204 [ mul16s::$12 ] 3,667.33: zp[4]:206 [ mul16s::return#0 ] 2,002: zp[4]:153 [ mul16s::return#2 ] 1,000.18: zp[2]:151 [ mul16s::b#0 ] 785.86: zp[2]:149 [ mul16s::a#0 ] 
Uplift Scope [mulf16s] 82,508.25: zp[4]:70 [ mulf16s::m#4 mulf16s::m#5 mulf16s::m#1 mulf16s::m#0 mulf16s::m#2 ] 20,002: zp[2]:214 [ mulf16s::$6 ] 20,002: zp[2]:216 [ mulf16s::$11 ] 20,002: zp[2]:218 [ mulf16s::$9 ] 20,002: zp[2]:220 [ mulf16s::$12 ] 3,667.33: zp[4]:222 [ mulf16s::return#0 ] 2,002: zp[4]:165 [ mulf16s::return#2 ] 1,000.18: zp[2]:163 [ mulf16s::b#0 ] 785.86: zp[2]:161 [ mulf16s::a#0 ] 
Uplift Scope [print_uint] 116,145.67: zp[2]:75 [ print_uint::w#5 print_uint::w#3 print_uint::w#4 print_uint::w#0 print_uint::w#1 print_uint::w#2 ] 
Uplift Scope [print_ulong] 9,710: zp[4]:79 [ print_ulong::dw#4 print_ulong::dw#1 print_ulong::dw#2 print_ulong::dw#3 print_ulong::dw#0 ] 
Uplift Scope [mul16u_compare] 2,380.45: zp[2]:17 [ mul16u_compare::a#2 mul16u_compare::a#6 mul16u_compare::a#1 ] 2,335.67: zp[1]:22 [ mul16u_compare::ok#3 mul16u_compare::ok#4 ] 1,581.58: zp[1]:21 [ mul16u_compare::j#10 mul16u_compare::j#1 ] 1,328.95: zp[2]:19 [ mul16u_compare::b#2 mul16u_compare::b#6 mul16u_compare::b#1 ] 158.47: zp[1]:16 [ mul16u_compare::i#12 mul16u_compare::i#1 ] 154.85: zp[4]:117 [ mul16u_compare::mf#0 ] 143.52: zp[4]:101 [ mul16u_compare::ms#0 ] 118.41: zp[4]:109 [ mul16u_compare::mn#0 ] 
Uplift Scope [mul16s_compare] 2,380.45: zp[2]:24 [ mul16s_compare::a#2 mul16s_compare::a#6 mul16s_compare::a#1 ] 2,335.67: zp[1]:29 [ mul16s_compare::ok#3 mul16s_compare::ok#4 ] 1,581.58: zp[1]:28 [ mul16s_compare::j#10 mul16s_compare::j#1 ] 1,328.95: zp[2]:26 [ mul16s_compare::b#2 mul16s_compare::b#6 mul16s_compare::b#1 ] 158.47: zp[1]:23 [ mul16s_compare::i#12 mul16s_compare::i#1 ] 154.85: zp[4]:169 [ mul16s_compare::mf#0 ] 143.52: zp[4]:145 [ mul16s_compare::ms#0 ] 118.41: zp[4]:157 [ mul16s_compare::mn#0 ] 
Uplift Scope [print_slong] 5,161: zp[4]:85 [ print_slong::dw#6 print_slong::dw#0 print_slong::dw#4 print_slong::dw#1 print_slong::dw#2 print_slong::dw#3 ] 
Uplift Scope [print_sint] 4,942.17: zp[2]:83 [ print_sint::w#5 print_sint::w#0 print_sint::w#3 print_sint::w#1 print_sint::w#2 ] 
Uplift Scope [memset] 3,336.67: zp[2]:30 [ memset::dst#2 memset::dst#1 ] 
Uplift Scope [mulf_init] 437.67: zp[2]:14 [ mulf_init::sqr#3 mulf_init::sqr#4 mulf_init::sqr#1 mulf_init::sqr#2 ] 246.89: zp[2]:8 [ mulf_init::sqr2_lo#2 mulf_init::sqr2_lo#1 ] 230.86: zp[2]:2 [ mulf_init::sqr1_lo#2 mulf_init::sqr1_lo#1 ] 212.1: zp[1]:7 [ mulf_init::x_2#3 mulf_init::x_2#2 mulf_init::x_2#1 ] 202: zp[1]:90 [ mulf_init::$1 ] 202: zp[1]:91 [ mulf_init::$4 ] 202: zp[1]:92 [ mulf_init::$5 ] 141.4: zp[1]:10 [ mulf_init::x_255#2 mulf_init::x_255#1 ] 138.88: zp[1]:13 [ mulf_init::dir#2 mulf_init::dir#4 ] 124.31: zp[1]:4 [ mulf_init::c#2 mulf_init::c#1 ] 109.42: zp[2]:11 [ mulf_init::sqr2_hi#2 mulf_init::sqr2_hi#1 ] 92.58: zp[2]:5 [ mulf_init::sqr1_hi#2 mulf_init::sqr1_hi#1 ] 
Uplift Scope [mul16u_error] 16: zp[2]:121 [ mul16u_error::a#0 ] 11.2: zp[2]:123 [ mul16u_error::b#0 ] 8.62: zp[4]:125 [ mul16u_error::ms#0 ] 7: zp[4]:129 [ mul16u_error::mn#0 ] 5.89: zp[4]:133 [ mul16u_error::mf#0 ] 
Uplift Scope [mul16s_error] 16: zp[2]:173 [ mul16s_error::a#0 ] 11.2: zp[2]:175 [ mul16s_error::b#0 ] 8.62: zp[4]:177 [ mul16s_error::ms#0 ] 7: zp[4]:181 [ mul16s_error::mn#0 ] 5.89: zp[4]:185 [ mul16s_error::mf#0 ] 
Uplift Scope [RADIX] 
Uplift Scope [print_ln] 
Uplift Scope [print_cls] 
Uplift Scope [main] 

Uplifting [mul16u] best 557186 combination zp[4]:44 [ mul16u::res#2 mul16u::res#6 mul16u::res#1 ] zp[4]:48 [ mul16u::mb#2 mul16u::mb#0 mul16u::mb#1 ] reg byte a [ mul16u::$1 ] zp[2]:42 [ mul16u::a#3 mul16u::a#6 mul16u::a#1 mul16u::a#2 mul16u::a#0 ] zp[2]:40 [ mul16u::b#2 mul16u::b#0 mul16u::b#1 ] zp[4]:194 [ mul16u::return#2 ] zp[4]:105 [ mul16u::return#3 ] 
Uplifting [muls16s] best 557186 combination zp[4]:60 [ muls16s::return#0 muls16s::m#3 muls16s::m#1 muls16s::m#5 muls16s::m#2 ] zp[2]:58 [ muls16s::j#2 muls16s::j#1 ] zp[2]:64 [ muls16s::i#2 muls16s::i#1 ] zp[2]:139 [ muls16s::b#0 ] zp[2]:137 [ muls16s::a#0 ] zp[4]:141 [ muls16s::return#2 ] 
Uplifting [muls16u] best 557186 combination zp[2]:34 [ muls16u::i#2 muls16u::i#1 ] zp[4]:36 [ muls16u::return#0 muls16u::m#3 muls16u::m#1 ] zp[2]:95 [ muls16u::b#0 ] zp[2]:93 [ muls16u::a#0 ] zp[4]:97 [ muls16u::return#2 ] 
Uplifting [print_char] best 556865 combination reg byte a [ print_char::ch#7 print_char::ch#0 print_char::ch#5 print_char::ch#6 ] 
Uplifting [] best 556865 combination zp[2]:77 [ print_char_cursor#140 print_char_cursor#89 print_char_cursor#136 print_char_cursor#157 print_char_cursor#152 print_char_cursor#223 print_char_cursor#148 print_char_cursor#1 print_char_cursor#183 print_char_cursor#21 print_char_cursor#190 print_char_cursor#145 print_char_cursor#141 ] zp[2]:56 [ print_line_cursor#23 print_line_cursor#45 print_line_cursor#0 ] 
Uplifting [print_uchar] best 556847 combination reg byte a [ print_uchar::$0 ] reg byte x [ print_uchar::$2 ] reg byte x [ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ] 
Uplifting [print_str] best 556847 combination zp[2]:32 [ print_str::str#15 print_str::str#18 print_str::str#0 ] 
Uplifting [mulf16u] best 556847 combination zp[2]:52 [ mulf16u::a#2 mulf16u::a#1 mulf16u::a#0 ] zp[2]:54 [ mulf16u::b#2 mulf16u::b#1 mulf16u::b#0 ] zp[4]:190 [ mulf16u::return#0 ] zp[4]:210 [ mulf16u::return#2 ] zp[4]:113 [ mulf16u::return#3 ] 
Uplifting [mul16s] best 556847 combination zp[4]:66 [ mul16s::m#4 mul16s::m#5 mul16s::m#1 mul16s::m#0 mul16s::m#2 ] zp[2]:198 [ mul16s::$6 ] zp[2]:200 [ mul16s::$11 ] zp[2]:202 [ mul16s::$9 ] zp[2]:204 [ mul16s::$12 ] zp[4]:206 [ mul16s::return#0 ] zp[4]:153 [ mul16s::return#2 ] zp[2]:151 [ mul16s::b#0 ] zp[2]:149 [ mul16s::a#0 ] 
Uplifting [mulf16s] best 556847 combination zp[4]:70 [ mulf16s::m#4 mulf16s::m#5 mulf16s::m#1 mulf16s::m#0 mulf16s::m#2 ] zp[2]:214 [ mulf16s::$6 ] zp[2]:216 [ mulf16s::$11 ] zp[2]:218 [ mulf16s::$9 ] zp[2]:220 [ mulf16s::$12 ] zp[4]:222 [ mulf16s::return#0 ] zp[4]:165 [ mulf16s::return#2 ] zp[2]:163 [ mulf16s::b#0 ] zp[2]:161 [ mulf16s::a#0 ] 
Uplifting [print_uint] best 556847 combination zp[2]:75 [ print_uint::w#5 print_uint::w#3 print_uint::w#4 print_uint::w#0 print_uint::w#1 print_uint::w#2 ] 
Uplifting [print_ulong] best 556847 combination zp[4]:79 [ print_ulong::dw#4 print_ulong::dw#1 print_ulong::dw#2 print_ulong::dw#3 print_ulong::dw#0 ] 
Uplifting [mul16u_compare] best 554747 combination zp[2]:17 [ mul16u_compare::a#2 mul16u_compare::a#6 mul16u_compare::a#1 ] reg byte x [ mul16u_compare::ok#3 mul16u_compare::ok#4 ] reg byte y [ mul16u_compare::j#10 mul16u_compare::j#1 ] zp[2]:19 [ mul16u_compare::b#2 mul16u_compare::b#6 mul16u_compare::b#1 ] zp[1]:16 [ mul16u_compare::i#12 mul16u_compare::i#1 ] zp[4]:117 [ mul16u_compare::mf#0 ] zp[4]:101 [ mul16u_compare::ms#0 ] zp[4]:109 [ mul16u_compare::mn#0 ] 
Uplifting [mul16s_compare] best 552647 combination zp[2]:24 [ mul16s_compare::a#2 mul16s_compare::a#6 mul16s_compare::a#1 ] reg byte x [ mul16s_compare::ok#3 mul16s_compare::ok#4 ] reg byte y [ mul16s_compare::j#10 mul16s_compare::j#1 ] zp[2]:26 [ mul16s_compare::b#2 mul16s_compare::b#6 mul16s_compare::b#1 ] zp[1]:23 [ mul16s_compare::i#12 mul16s_compare::i#1 ] zp[4]:169 [ mul16s_compare::mf#0 ] zp[4]:145 [ mul16s_compare::ms#0 ] zp[4]:157 [ mul16s_compare::mn#0 ] 
Uplifting [print_slong] best 552647 combination zp[4]:85 [ print_slong::dw#6 print_slong::dw#0 print_slong::dw#4 print_slong::dw#1 print_slong::dw#2 print_slong::dw#3 ] 
Uplifting [print_sint] best 552647 combination zp[2]:83 [ print_sint::w#5 print_sint::w#0 print_sint::w#3 print_sint::w#1 print_sint::w#2 ] 
Uplifting [memset] best 552647 combination zp[2]:30 [ memset::dst#2 memset::dst#1 ] 
Uplifting [mulf_init] best 552397 combination zp[2]:14 [ mulf_init::sqr#3 mulf_init::sqr#4 mulf_init::sqr#1 mulf_init::sqr#2 ] zp[2]:8 [ mulf_init::sqr2_lo#2 mulf_init::sqr2_lo#1 ] zp[2]:2 [ mulf_init::sqr1_lo#2 mulf_init::sqr1_lo#1 ] reg byte x [ mulf_init::x_2#3 mulf_init::x_2#2 mulf_init::x_2#1 ] reg byte a [ mulf_init::$1 ] reg byte a [ mulf_init::$4 ] reg byte a [ mulf_init::$5 ] zp[1]:10 [ mulf_init::x_255#2 mulf_init::x_255#1 ] zp[1]:13 [ mulf_init::dir#2 mulf_init::dir#4 ] zp[1]:4 [ mulf_init::c#2 mulf_init::c#1 ] zp[2]:11 [ mulf_init::sqr2_hi#2 mulf_init::sqr2_hi#1 ] zp[2]:5 [ mulf_init::sqr1_hi#2 mulf_init::sqr1_hi#1 ] 
Limited combination testing to 100 combinations of 1024 possible.
Uplifting [mul16u_error] best 552397 combination zp[2]:121 [ mul16u_error::a#0 ] zp[2]:123 [ mul16u_error::b#0 ] zp[4]:125 [ mul16u_error::ms#0 ] zp[4]:129 [ mul16u_error::mn#0 ] zp[4]:133 [ mul16u_error::mf#0 ] 
Uplifting [mul16s_error] best 552397 combination zp[2]:173 [ mul16s_error::a#0 ] zp[2]:175 [ mul16s_error::b#0 ] zp[4]:177 [ mul16s_error::ms#0 ] zp[4]:181 [ mul16s_error::mn#0 ] zp[4]:185 [ mul16s_error::mf#0 ] 
Uplifting [RADIX] best 552397 combination 
Uplifting [print_ln] best 552397 combination 
Uplifting [print_cls] best 552397 combination 
Uplifting [main] best 552397 combination 
Attempting to uplift remaining variables inzp[1]:16 [ mul16u_compare::i#12 mul16u_compare::i#1 ]
Uplifting [mul16u_compare] best 552397 combination zp[1]:16 [ mul16u_compare::i#12 mul16u_compare::i#1 ] 
Attempting to uplift remaining variables inzp[1]:23 [ mul16s_compare::i#12 mul16s_compare::i#1 ]
Uplifting [mul16s_compare] best 552397 combination zp[1]:23 [ mul16s_compare::i#12 mul16s_compare::i#1 ] 
Attempting to uplift remaining variables inzp[1]:10 [ mulf_init::x_255#2 mulf_init::x_255#1 ]
Uplifting [mulf_init] best 552257 combination reg byte x [ mulf_init::x_255#2 mulf_init::x_255#1 ] 
Attempting to uplift remaining variables inzp[1]:13 [ mulf_init::dir#2 mulf_init::dir#4 ]
Uplifting [mulf_init] best 552257 combination zp[1]:13 [ mulf_init::dir#2 mulf_init::dir#4 ] 
Attempting to uplift remaining variables inzp[1]:4 [ mulf_init::c#2 mulf_init::c#1 ]
Uplifting [mulf_init] best 552257 combination zp[1]:4 [ mulf_init::c#2 mulf_init::c#1 ] 
Coalescing zero page register [ zp[2]:17 [ mul16u_compare::a#2 mul16u_compare::a#6 mul16u_compare::a#1 ] ] with [ zp[2]:52 [ mulf16u::a#2 mulf16u::a#1 mulf16u::a#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:17 [ mul16u_compare::a#2 mul16u_compare::a#6 mul16u_compare::a#1 mulf16u::a#2 mulf16u::a#1 mulf16u::a#0 ] ] with [ zp[2]:93 [ muls16u::a#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:17 [ mul16u_compare::a#2 mul16u_compare::a#6 mul16u_compare::a#1 mulf16u::a#2 mulf16u::a#1 mulf16u::a#0 muls16u::a#0 ] ] with [ zp[2]:121 [ mul16u_error::a#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:19 [ mul16u_compare::b#2 mul16u_compare::b#6 mul16u_compare::b#1 ] ] with [ zp[2]:40 [ mul16u::b#2 mul16u::b#0 mul16u::b#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:19 [ mul16u_compare::b#2 mul16u_compare::b#6 mul16u_compare::b#1 mul16u::b#2 mul16u::b#0 mul16u::b#1 ] ] with [ zp[2]:54 [ mulf16u::b#2 mulf16u::b#1 mulf16u::b#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:19 [ mul16u_compare::b#2 mul16u_compare::b#6 mul16u_compare::b#1 mul16u::b#2 mul16u::b#0 mul16u::b#1 mulf16u::b#2 mulf16u::b#1 mulf16u::b#0 ] ] with [ zp[2]:95 [ muls16u::b#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:19 [ mul16u_compare::b#2 mul16u_compare::b#6 mul16u_compare::b#1 mul16u::b#2 mul16u::b#0 mul16u::b#1 mulf16u::b#2 mulf16u::b#1 mulf16u::b#0 muls16u::b#0 ] ] with [ zp[2]:123 [ mul16u_error::b#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:24 [ mul16s_compare::a#2 mul16s_compare::a#6 mul16s_compare::a#1 ] ] with [ zp[2]:137 [ muls16s::a#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:24 [ mul16s_compare::a#2 mul16s_compare::a#6 mul16s_compare::a#1 muls16s::a#0 ] ] with [ zp[2]:149 [ mul16s::a#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:24 [ mul16s_compare::a#2 mul16s_compare::a#6 mul16s_compare::a#1 muls16s::a#0 mul16s::a#0 ] ] with [ zp[2]:161 [ mulf16s::a#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:24 [ mul16s_compare::a#2 mul16s_compare::a#6 mul16s_compare::a#1 muls16s::a#0 mul16s::a#0 mulf16s::a#0 ] ] with [ zp[2]:173 [ mul16s_error::a#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:26 [ mul16s_compare::b#2 mul16s_compare::b#6 mul16s_compare::b#1 ] ] with [ zp[2]:139 [ muls16s::b#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:26 [ mul16s_compare::b#2 mul16s_compare::b#6 mul16s_compare::b#1 muls16s::b#0 ] ] with [ zp[2]:151 [ mul16s::b#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:26 [ mul16s_compare::b#2 mul16s_compare::b#6 mul16s_compare::b#1 muls16s::b#0 mul16s::b#0 ] ] with [ zp[2]:163 [ mulf16s::b#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:26 [ mul16s_compare::b#2 mul16s_compare::b#6 mul16s_compare::b#1 muls16s::b#0 mul16s::b#0 mulf16s::b#0 ] ] with [ zp[2]:175 [ mul16s_error::b#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:36 [ muls16u::return#0 muls16u::m#3 muls16u::m#1 ] ] with [ zp[4]:97 [ muls16u::return#2 ] ] - score: 1
Coalescing zero page register [ zp[4]:44 [ mul16u::res#2 mul16u::res#6 mul16u::res#1 ] ] with [ zp[4]:105 [ mul16u::return#3 ] ] - score: 1
Coalescing zero page register [ zp[4]:44 [ mul16u::res#2 mul16u::res#6 mul16u::res#1 mul16u::return#3 ] ] with [ zp[4]:194 [ mul16u::return#2 ] ] - score: 1
Coalescing zero page register [ zp[4]:60 [ muls16s::return#0 muls16s::m#3 muls16s::m#1 muls16s::m#5 muls16s::m#2 ] ] with [ zp[4]:141 [ muls16s::return#2 ] ] - score: 1
Coalescing zero page register [ zp[4]:66 [ mul16s::m#4 mul16s::m#5 mul16s::m#1 mul16s::m#0 mul16s::m#2 ] ] with [ zp[4]:206 [ mul16s::return#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:70 [ mulf16s::m#4 mulf16s::m#5 mulf16s::m#1 mulf16s::m#0 mulf16s::m#2 ] ] with [ zp[4]:210 [ mulf16u::return#2 ] ] - score: 1
Coalescing zero page register [ zp[4]:70 [ mulf16s::m#4 mulf16s::m#5 mulf16s::m#1 mulf16s::m#0 mulf16s::m#2 mulf16u::return#2 ] ] with [ zp[4]:222 [ mulf16s::return#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:75 [ print_uint::w#5 print_uint::w#3 print_uint::w#4 print_uint::w#0 print_uint::w#1 print_uint::w#2 ] ] with [ zp[2]:83 [ print_sint::w#5 print_sint::w#0 print_sint::w#3 print_sint::w#1 print_sint::w#2 ] ] - score: 1
Coalescing zero page register [ zp[4]:79 [ print_ulong::dw#4 print_ulong::dw#1 print_ulong::dw#2 print_ulong::dw#3 print_ulong::dw#0 ] ] with [ zp[4]:85 [ print_slong::dw#6 print_slong::dw#0 print_slong::dw#4 print_slong::dw#1 print_slong::dw#2 print_slong::dw#3 ] ] - score: 1
Coalescing zero page register [ zp[4]:79 [ print_ulong::dw#4 print_ulong::dw#1 print_ulong::dw#2 print_ulong::dw#3 print_ulong::dw#0 print_slong::dw#6 print_slong::dw#0 print_slong::dw#4 print_slong::dw#1 print_slong::dw#2 print_slong::dw#3 ] ] with [ zp[4]:125 [ mul16u_error::ms#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:109 [ mul16u_compare::mn#0 ] ] with [ zp[4]:129 [ mul16u_error::mn#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:113 [ mulf16u::return#3 ] ] with [ zp[4]:117 [ mul16u_compare::mf#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:113 [ mulf16u::return#3 mul16u_compare::mf#0 ] ] with [ zp[4]:190 [ mulf16u::return#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:145 [ mul16s_compare::ms#0 ] ] with [ zp[4]:177 [ mul16s_error::ms#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:153 [ mul16s::return#2 ] ] with [ zp[4]:157 [ mul16s_compare::mn#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:165 [ mulf16s::return#2 ] ] with [ zp[4]:169 [ mul16s_compare::mf#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:198 [ mul16s::$6 ] ] with [ zp[2]:200 [ mul16s::$11 ] ] - score: 1
Coalescing zero page register [ zp[2]:202 [ mul16s::$9 ] ] with [ zp[2]:204 [ mul16s::$12 ] ] - score: 1
Coalescing zero page register [ zp[2]:214 [ mulf16s::$6 ] ] with [ zp[2]:216 [ mulf16s::$11 ] ] - score: 1
Coalescing zero page register [ zp[2]:218 [ mulf16s::$9 ] ] with [ zp[2]:220 [ mulf16s::$12 ] ] - score: 1
Coalescing zero page register [ zp[2]:17 [ mul16u_compare::a#2 mul16u_compare::a#6 mul16u_compare::a#1 mulf16u::a#2 mulf16u::a#1 mulf16u::a#0 muls16u::a#0 mul16u_error::a#0 ] ] with [ zp[2]:75 [ print_uint::w#5 print_uint::w#3 print_uint::w#4 print_uint::w#0 print_uint::w#1 print_uint::w#2 print_sint::w#5 print_sint::w#0 print_sint::w#3 print_sint::w#1 print_sint::w#2 ] ] - score: 1
Coalescing zero page register [ zp[4]:36 [ muls16u::return#0 muls16u::m#3 muls16u::m#1 muls16u::return#2 ] ] with [ zp[4]:101 [ mul16u_compare::ms#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:44 [ mul16u::res#2 mul16u::res#6 mul16u::res#1 mul16u::return#3 mul16u::return#2 ] ] with [ zp[4]:66 [ mul16s::m#4 mul16s::m#5 mul16s::m#1 mul16s::m#0 mul16s::m#2 mul16s::return#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:44 [ mul16u::res#2 mul16u::res#6 mul16u::res#1 mul16u::return#3 mul16u::return#2 mul16s::m#4 mul16s::m#5 mul16s::m#1 mul16s::m#0 mul16s::m#2 mul16s::return#0 ] ] with [ zp[4]:109 [ mul16u_compare::mn#0 mul16u_error::mn#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:60 [ muls16s::return#0 muls16s::m#3 muls16s::m#1 muls16s::m#5 muls16s::m#2 muls16s::return#2 ] ] with [ zp[4]:145 [ mul16s_compare::ms#0 mul16s_error::ms#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:70 [ mulf16s::m#4 mulf16s::m#5 mulf16s::m#1 mulf16s::m#0 mulf16s::m#2 mulf16u::return#2 mulf16s::return#0 ] ] with [ zp[4]:113 [ mulf16u::return#3 mul16u_compare::mf#0 mulf16u::return#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:70 [ mulf16s::m#4 mulf16s::m#5 mulf16s::m#1 mulf16s::m#0 mulf16s::m#2 mulf16u::return#2 mulf16s::return#0 mulf16u::return#3 mul16u_compare::mf#0 mulf16u::return#0 ] ] with [ zp[4]:165 [ mulf16s::return#2 mul16s_compare::mf#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:153 [ mul16s::return#2 mul16s_compare::mn#0 ] ] with [ zp[4]:181 [ mul16s_error::mn#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:36 [ muls16u::return#0 muls16u::m#3 muls16u::m#1 muls16u::return#2 mul16u_compare::ms#0 ] ] with [ zp[4]:79 [ print_ulong::dw#4 print_ulong::dw#1 print_ulong::dw#2 print_ulong::dw#3 print_ulong::dw#0 print_slong::dw#6 print_slong::dw#0 print_slong::dw#4 print_slong::dw#1 print_slong::dw#2 print_slong::dw#3 mul16u_error::ms#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:44 [ mul16u::res#2 mul16u::res#6 mul16u::res#1 mul16u::return#3 mul16u::return#2 mul16s::m#4 mul16s::m#5 mul16s::m#1 mul16s::m#0 mul16s::m#2 mul16s::return#0 mul16u_compare::mn#0 mul16u_error::mn#0 ] ] with [ zp[4]:153 [ mul16s::return#2 mul16s_compare::mn#0 mul16s_error::mn#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:70 [ mulf16s::m#4 mulf16s::m#5 mulf16s::m#1 mulf16s::m#0 mulf16s::m#2 mulf16u::return#2 mulf16s::return#0 mulf16u::return#3 mul16u_compare::mf#0 mulf16u::return#0 mulf16s::return#2 mul16s_compare::mf#0 ] ] with [ zp[4]:133 [ mul16u_error::mf#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:70 [ mulf16s::m#4 mulf16s::m#5 mulf16s::m#1 mulf16s::m#0 mulf16s::m#2 mulf16u::return#2 mulf16s::return#0 mulf16u::return#3 mul16u_compare::mf#0 mulf16u::return#0 mulf16s::return#2 mul16s_compare::mf#0 mul16u_error::mf#0 ] ] with [ zp[4]:185 [ mul16s_error::mf#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:36 [ muls16u::return#0 muls16u::m#3 muls16u::m#1 muls16u::return#2 mul16u_compare::ms#0 print_ulong::dw#4 print_ulong::dw#1 print_ulong::dw#2 print_ulong::dw#3 print_ulong::dw#0 print_slong::dw#6 print_slong::dw#0 print_slong::dw#4 print_slong::dw#1 print_slong::dw#2 print_slong::dw#3 mul16u_error::ms#0 ] ] with [ zp[4]:60 [ muls16s::return#0 muls16s::m#3 muls16s::m#1 muls16s::m#5 muls16s::m#2 muls16s::return#2 mul16s_compare::ms#0 mul16s_error::ms#0 ] ] - score: 1
Coalescing zero page register [ zp[1]:16 [ mul16u_compare::i#12 mul16u_compare::i#1 ] ] with [ zp[1]:4 [ mulf_init::c#2 mulf_init::c#1 ] ]
Coalescing zero page register [ zp[2]:17 [ mul16u_compare::a#2 mul16u_compare::a#6 mul16u_compare::a#1 mulf16u::a#2 mulf16u::a#1 mulf16u::a#0 muls16u::a#0 mul16u_error::a#0 print_uint::w#5 print_uint::w#3 print_uint::w#4 print_uint::w#0 print_uint::w#1 print_uint::w#2 print_sint::w#5 print_sint::w#0 print_sint::w#3 print_sint::w#1 print_sint::w#2 ] ] with [ zp[2]:2 [ mulf_init::sqr1_lo#2 mulf_init::sqr1_lo#1 ] ]
Coalescing zero page register [ zp[2]:19 [ mul16u_compare::b#2 mul16u_compare::b#6 mul16u_compare::b#1 mul16u::b#2 mul16u::b#0 mul16u::b#1 mulf16u::b#2 mulf16u::b#1 mulf16u::b#0 muls16u::b#0 mul16u_error::b#0 ] ] with [ zp[2]:5 [ mulf_init::sqr1_hi#2 mulf_init::sqr1_hi#1 ] ]
Coalescing zero page register [ zp[1]:23 [ mul16s_compare::i#12 mul16s_compare::i#1 ] ] with [ zp[1]:13 [ mulf_init::dir#2 mulf_init::dir#4 ] ]
Coalescing zero page register [ zp[2]:24 [ mul16s_compare::a#2 mul16s_compare::a#6 mul16s_compare::a#1 muls16s::a#0 mul16s::a#0 mulf16s::a#0 mul16s_error::a#0 ] ] with [ zp[2]:8 [ mulf_init::sqr2_lo#2 mulf_init::sqr2_lo#1 ] ]
Coalescing zero page register [ zp[2]:26 [ mul16s_compare::b#2 mul16s_compare::b#6 mul16s_compare::b#1 muls16s::b#0 mul16s::b#0 mulf16s::b#0 mul16s_error::b#0 ] ] with [ zp[2]:11 [ mulf_init::sqr2_hi#2 mulf_init::sqr2_hi#1 ] ]
Coalescing zero page register [ zp[2]:30 [ memset::dst#2 memset::dst#1 ] ] with [ zp[2]:14 [ mulf_init::sqr#3 mulf_init::sqr#4 mulf_init::sqr#1 mulf_init::sqr#2 ] ]
Coalescing zero page register [ zp[2]:34 [ muls16u::i#2 muls16u::i#1 ] ] with [ zp[2]:32 [ print_str::str#15 print_str::str#18 print_str::str#0 ] ]
Coalescing zero page register [ zp[2]:58 [ muls16s::j#2 muls16s::j#1 ] ] with [ zp[2]:42 [ mul16u::a#3 mul16u::a#6 mul16u::a#1 mul16u::a#2 mul16u::a#0 ] ]
Coalescing zero page register [ zp[4]:70 [ mulf16s::m#4 mulf16s::m#5 mulf16s::m#1 mulf16s::m#0 mulf16s::m#2 mulf16u::return#2 mulf16s::return#0 mulf16u::return#3 mul16u_compare::mf#0 mulf16u::return#0 mulf16s::return#2 mul16s_compare::mf#0 mul16u_error::mf#0 mul16s_error::mf#0 ] ] with [ zp[4]:48 [ mul16u::mb#2 mul16u::mb#0 mul16u::mb#1 ] ]
Coalescing zero page register [ zp[2]:198 [ mul16s::$6 mul16s::$11 ] ] with [ zp[2]:64 [ muls16s::i#2 muls16s::i#1 ] ]
Coalescing zero page register [ zp[2]:214 [ mulf16s::$6 mulf16s::$11 ] ] with [ zp[2]:202 [ mul16s::$9 mul16s::$12 ] ]
Coalescing zero page register [ zp[2]:34 [ muls16u::i#2 muls16u::i#1 print_str::str#15 print_str::str#18 print_str::str#0 ] ] with [ zp[2]:30 [ memset::dst#2 memset::dst#1 mulf_init::sqr#3 mulf_init::sqr#4 mulf_init::sqr#1 mulf_init::sqr#2 ] ]
Coalescing zero page register [ zp[2]:198 [ mul16s::$6 mul16s::$11 muls16s::i#2 muls16s::i#1 ] ] with [ zp[2]:17 [ mul16u_compare::a#2 mul16u_compare::a#6 mul16u_compare::a#1 mulf16u::a#2 mulf16u::a#1 mulf16u::a#0 muls16u::a#0 mul16u_error::a#0 print_uint::w#5 print_uint::w#3 print_uint::w#4 print_uint::w#0 print_uint::w#1 print_uint::w#2 print_sint::w#5 print_sint::w#0 print_sint::w#3 print_sint::w#1 print_sint::w#2 mulf_init::sqr1_lo#2 mulf_init::sqr1_lo#1 ] ]
Coalescing zero page register [ zp[2]:214 [ mulf16s::$6 mulf16s::$11 mul16s::$9 mul16s::$12 ] ] with [ zp[2]:19 [ mul16u_compare::b#2 mul16u_compare::b#6 mul16u_compare::b#1 mul16u::b#2 mul16u::b#0 mul16u::b#1 mulf16u::b#2 mulf16u::b#1 mulf16u::b#0 muls16u::b#0 mul16u_error::b#0 mulf_init::sqr1_hi#2 mulf_init::sqr1_hi#1 ] ]
Coalescing zero page register [ zp[2]:218 [ mulf16s::$9 mulf16s::$12 ] ] with [ zp[2]:58 [ muls16s::j#2 muls16s::j#1 mul16u::a#3 mul16u::a#6 mul16u::a#1 mul16u::a#2 mul16u::a#0 ] ]
Coalescing zero page register [ zp[2]:218 [ mulf16s::$9 mulf16s::$12 muls16s::j#2 muls16s::j#1 mul16u::a#3 mul16u::a#6 mul16u::a#1 mul16u::a#2 mul16u::a#0 ] ] with [ zp[2]:34 [ muls16u::i#2 muls16u::i#1 print_str::str#15 print_str::str#18 print_str::str#0 memset::dst#2 memset::dst#1 mulf_init::sqr#3 mulf_init::sqr#4 mulf_init::sqr#1 mulf_init::sqr#2 ] ]
Allocated (was zp[1]:16) zp[1]:2 [ mul16u_compare::i#12 mul16u_compare::i#1 mulf_init::c#2 mulf_init::c#1 ]
Allocated (was zp[1]:23) zp[1]:3 [ mul16s_compare::i#12 mul16s_compare::i#1 mulf_init::dir#2 mulf_init::dir#4 ]
Allocated (was zp[2]:24) zp[2]:4 [ mul16s_compare::a#2 mul16s_compare::a#6 mul16s_compare::a#1 muls16s::a#0 mul16s::a#0 mulf16s::a#0 mul16s_error::a#0 mulf_init::sqr2_lo#2 mulf_init::sqr2_lo#1 ]
Allocated (was zp[2]:26) zp[2]:6 [ mul16s_compare::b#2 mul16s_compare::b#6 mul16s_compare::b#1 muls16s::b#0 mul16s::b#0 mulf16s::b#0 mul16s_error::b#0 mulf_init::sqr2_hi#2 mulf_init::sqr2_hi#1 ]
Allocated (was zp[4]:36) zp[4]:8 [ muls16u::return#0 muls16u::m#3 muls16u::m#1 muls16u::return#2 mul16u_compare::ms#0 print_ulong::dw#4 print_ulong::dw#1 print_ulong::dw#2 print_ulong::dw#3 print_ulong::dw#0 print_slong::dw#6 print_slong::dw#0 print_slong::dw#4 print_slong::dw#1 print_slong::dw#2 print_slong::dw#3 mul16u_error::ms#0 muls16s::return#0 muls16s::m#3 muls16s::m#1 muls16s::m#5 muls16s::m#2 muls16s::return#2 mul16s_compare::ms#0 mul16s_error::ms#0 ]
Allocated (was zp[4]:44) zp[4]:12 [ mul16u::res#2 mul16u::res#6 mul16u::res#1 mul16u::return#3 mul16u::return#2 mul16s::m#4 mul16s::m#5 mul16s::m#1 mul16s::m#0 mul16s::m#2 mul16s::return#0 mul16u_compare::mn#0 mul16u_error::mn#0 mul16s::return#2 mul16s_compare::mn#0 mul16s_error::mn#0 ]
Allocated (was zp[2]:56) zp[2]:16 [ print_line_cursor#23 print_line_cursor#45 print_line_cursor#0 ]
Allocated (was zp[4]:70) zp[4]:18 [ mulf16s::m#4 mulf16s::m#5 mulf16s::m#1 mulf16s::m#0 mulf16s::m#2 mulf16u::return#2 mulf16s::return#0 mulf16u::return#3 mul16u_compare::mf#0 mulf16u::return#0 mulf16s::return#2 mul16s_compare::mf#0 mul16u_error::mf#0 mul16s_error::mf#0 mul16u::mb#2 mul16u::mb#0 mul16u::mb#1 ]
Allocated (was zp[2]:77) zp[2]:22 [ print_char_cursor#140 print_char_cursor#89 print_char_cursor#136 print_char_cursor#157 print_char_cursor#152 print_char_cursor#223 print_char_cursor#148 print_char_cursor#1 print_char_cursor#183 print_char_cursor#21 print_char_cursor#190 print_char_cursor#145 print_char_cursor#141 ]
Allocated (was zp[2]:198) zp[2]:24 [ mul16s::$6 mul16s::$11 muls16s::i#2 muls16s::i#1 mul16u_compare::a#2 mul16u_compare::a#6 mul16u_compare::a#1 mulf16u::a#2 mulf16u::a#1 mulf16u::a#0 muls16u::a#0 mul16u_error::a#0 print_uint::w#5 print_uint::w#3 print_uint::w#4 print_uint::w#0 print_uint::w#1 print_uint::w#2 print_sint::w#5 print_sint::w#0 print_sint::w#3 print_sint::w#1 print_sint::w#2 mulf_init::sqr1_lo#2 mulf_init::sqr1_lo#1 ]
Allocated (was zp[2]:214) zp[2]:26 [ mulf16s::$6 mulf16s::$11 mul16s::$9 mul16s::$12 mul16u_compare::b#2 mul16u_compare::b#6 mul16u_compare::b#1 mul16u::b#2 mul16u::b#0 mul16u::b#1 mulf16u::b#2 mulf16u::b#1 mulf16u::b#0 muls16u::b#0 mul16u_error::b#0 mulf_init::sqr1_hi#2 mulf_init::sqr1_hi#1 ]
Allocated (was zp[2]:218) zp[2]:28 [ mulf16s::$9 mulf16s::$12 muls16s::j#2 muls16s::j#1 mul16u::a#3 mul16u::a#6 mul16u::a#1 mul16u::a#2 mul16u::a#0 muls16u::i#2 muls16u::i#1 print_str::str#15 print_str::str#18 print_str::str#0 memset::dst#2 memset::dst#1 mulf_init::sqr#3 mulf_init::sqr#4 mulf_init::sqr#1 mulf_init::sqr#2 ]

ASSEMBLER BEFORE OPTIMIZATION
  // File Comments
// Test the fast multiplication library
  // Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
  // Global Constants & labels
  .label BG_COLOR = $d021
  .label print_screen = $400
  .label print_char_cursor = $16
  .label print_line_cursor = $10
  // main
main: {
    // [0] *BG_COLOR = 5 -- _deref_pbuc1=vbuc2 
    lda #5
    sta BG_COLOR
    // [1] call print_cls 
    // [9] phi from main to print_cls [phi:main->print_cls]
  print_cls_from_main:
    jsr print_cls
    // [2] phi from main to main::@1 [phi:main->main::@1]
  __b1_from_main:
    jmp __b1
    // main::@1
  __b1:
    // [3] call mulf_init 
    // [12] phi from main::@1 to mulf_init [phi:main::@1->mulf_init]
  mulf_init_from___b1:
    jsr mulf_init
    // [4] phi from main::@1 to main::@2 [phi:main::@1->main::@2]
  __b2_from___b1:
    jmp __b2
    // main::@2
  __b2:
    // [5] call mul16u_compare 
    // [41] phi from main::@2 to mul16u_compare [phi:main::@2->mul16u_compare]
  mul16u_compare_from___b2:
    jsr mul16u_compare
    // [6] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  __b3_from___b2:
    jmp __b3
    // main::@3
  __b3:
    // [7] call mul16s_compare 
    jsr mul16s_compare
    jmp __breturn
    // main::@return
  __breturn:
    // [8] return 
    rts
}
  // print_cls
// Clear the screen. Also resets current line/char cursor.
print_cls: {
    // [10] call memset 
    // [133] phi from print_cls to memset [phi:print_cls->memset]
  memset_from_print_cls:
    jsr memset
    jmp __breturn
    // print_cls::@return
  __breturn:
    // [11] return 
    rts
}
  // mulf_init
// Initialize the mulf_sqr multiplication tables with f(x)=int(x*x/4)
mulf_init: {
    // x/2
    .label c = 2
    // Counter used for determining x%2==0
    .label sqr1_hi = $1a
    // Fill mulf_sqr1 = f(x) = int(x*x/4): If f(x) = x*x/4 then f(x+1) = f(x) + x/2 + 1/4
    .label sqr = $1c
    .label sqr1_lo = $18
    // Decrease or increase x_255 - initially we decrease
    .label sqr2_hi = 6
    .label sqr2_lo = 4
    //Start with g(0)=f(255)
    .label dir = 3
    // [13] phi from mulf_init to mulf_init::@1 [phi:mulf_init->mulf_init::@1]
  __b1_from_mulf_init:
    // [13] phi mulf_init::x_2#3 = 0 [phi:mulf_init->mulf_init::@1#0] -- vbuxx=vbuc1 
    ldx #0
    // [13] phi mulf_init::sqr1_hi#2 = mulf_sqr1_hi+1 [phi:mulf_init->mulf_init::@1#1] -- pbuz1=pbuc1 
    lda #<mulf_sqr1_hi+1
    sta.z sqr1_hi
    lda #>mulf_sqr1_hi+1
    sta.z sqr1_hi+1
    // [13] phi mulf_init::sqr#4 = 0 [phi:mulf_init->mulf_init::@1#2] -- vwuz1=vwuc1 
    lda #<0
    sta.z sqr
    lda #>0
    sta.z sqr+1
    // [13] phi mulf_init::c#2 = 0 [phi:mulf_init->mulf_init::@1#3] -- vbuz1=vbuc1 
    lda #0
    sta.z c
    // [13] phi mulf_init::sqr1_lo#2 = mulf_sqr1_lo+1 [phi:mulf_init->mulf_init::@1#4] -- pbuz1=pbuc1 
    lda #<mulf_sqr1_lo+1
    sta.z sqr1_lo
    lda #>mulf_sqr1_lo+1
    sta.z sqr1_lo+1
    jmp __b1
    // mulf_init::@1
  __b1:
    // [14] if(mulf_init::sqr1_lo#2!=mulf_sqr1_lo+$200) goto mulf_init::@2 -- pbuz1_neq_pbuc1_then_la1 
    lda.z sqr1_lo+1
    cmp #>mulf_sqr1_lo+$200
    bne __b2
    lda.z sqr1_lo
    cmp #<mulf_sqr1_lo+$200
    bne __b2
    // [15] phi from mulf_init::@1 to mulf_init::@5 [phi:mulf_init::@1->mulf_init::@5]
  __b5_from___b1:
    // [15] phi mulf_init::dir#2 = $ff [phi:mulf_init::@1->mulf_init::@5#0] -- vbuz1=vbuc1 
    lda #$ff
    sta.z dir
    // [15] phi mulf_init::sqr2_hi#2 = mulf_sqr2_hi [phi:mulf_init::@1->mulf_init::@5#1] -- pbuz1=pbuc1 
    lda #<mulf_sqr2_hi
    sta.z sqr2_hi
    lda #>mulf_sqr2_hi
    sta.z sqr2_hi+1
    // [15] phi mulf_init::x_255#2 = -1 [phi:mulf_init::@1->mulf_init::@5#2] -- vbuxx=vbuc1 
    ldx #-1
    // [15] phi mulf_init::sqr2_lo#2 = mulf_sqr2_lo [phi:mulf_init::@1->mulf_init::@5#3] -- pbuz1=pbuc1 
    lda #<mulf_sqr2_lo
    sta.z sqr2_lo
    lda #>mulf_sqr2_lo
    sta.z sqr2_lo+1
    jmp __b5
    // mulf_init::@5
  __b5:
    // [16] if(mulf_init::sqr2_lo#2!=mulf_sqr2_lo+$1ff) goto mulf_init::@6 -- pbuz1_neq_pbuc1_then_la1 
    lda.z sqr2_lo+1
    cmp #>mulf_sqr2_lo+$1ff
    bne __b6
    lda.z sqr2_lo
    cmp #<mulf_sqr2_lo+$1ff
    bne __b6
    jmp __b7
    // mulf_init::@7
  __b7:
    // [17] *(mulf_sqr2_lo+$1ff) = *(mulf_sqr1_lo+$100) -- _deref_pbuc1=_deref_pbuc2 
    // Set the very last value g(511) = f(256)
    lda mulf_sqr1_lo+$100
    sta mulf_sqr2_lo+$1ff
    // [18] *(mulf_sqr2_hi+$1ff) = *(mulf_sqr1_hi+$100) -- _deref_pbuc1=_deref_pbuc2 
    lda mulf_sqr1_hi+$100
    sta mulf_sqr2_hi+$1ff
    jmp __breturn
    // mulf_init::@return
  __breturn:
    // [19] return 
    rts
    // mulf_init::@6
  __b6:
    // [20] *mulf_init::sqr2_lo#2 = mulf_sqr1_lo[mulf_init::x_255#2] -- _deref_pbuz1=pbuc1_derefidx_vbuxx 
    lda mulf_sqr1_lo,x
    ldy #0
    sta (sqr2_lo),y
    // [21] *mulf_init::sqr2_hi#2 = mulf_sqr1_hi[mulf_init::x_255#2] -- _deref_pbuz1=pbuc1_derefidx_vbuxx 
    lda mulf_sqr1_hi,x
    ldy #0
    sta (sqr2_hi),y
    // [22] mulf_init::sqr2_hi#1 = ++ mulf_init::sqr2_hi#2 -- pbuz1=_inc_pbuz1 
    inc.z sqr2_hi
    bne !+
    inc.z sqr2_hi+1
  !:
    // [23] mulf_init::x_255#1 = mulf_init::x_255#2 + mulf_init::dir#2 -- vbuxx=vbuxx_plus_vbuz1 
    txa
    clc
    adc.z dir
    tax
    // [24] if(mulf_init::x_255#1!=0) goto mulf_init::@9 -- vbuxx_neq_0_then_la1 
    cpx #0
    bne __b9_from___b6
    // [26] phi from mulf_init::@6 to mulf_init::@8 [phi:mulf_init::@6->mulf_init::@8]
  __b8_from___b6:
    // [26] phi mulf_init::dir#4 = 1 [phi:mulf_init::@6->mulf_init::@8#0] -- vbuz1=vbuc1 
    lda #1
    sta.z dir
    jmp __b8
    // [25] phi from mulf_init::@6 to mulf_init::@9 [phi:mulf_init::@6->mulf_init::@9]
  __b9_from___b6:
    jmp __b9
    // mulf_init::@9
  __b9:
    // [26] phi from mulf_init::@9 to mulf_init::@8 [phi:mulf_init::@9->mulf_init::@8]
  __b8_from___b9:
    // [26] phi mulf_init::dir#4 = mulf_init::dir#2 [phi:mulf_init::@9->mulf_init::@8#0] -- register_copy 
    jmp __b8
    // mulf_init::@8
  __b8:
    // [27] mulf_init::sqr2_lo#1 = ++ mulf_init::sqr2_lo#2 -- pbuz1=_inc_pbuz1 
    inc.z sqr2_lo
    bne !+
    inc.z sqr2_lo+1
  !:
    // [15] phi from mulf_init::@8 to mulf_init::@5 [phi:mulf_init::@8->mulf_init::@5]
  __b5_from___b8:
    // [15] phi mulf_init::dir#2 = mulf_init::dir#4 [phi:mulf_init::@8->mulf_init::@5#0] -- register_copy 
    // [15] phi mulf_init::sqr2_hi#2 = mulf_init::sqr2_hi#1 [phi:mulf_init::@8->mulf_init::@5#1] -- register_copy 
    // [15] phi mulf_init::x_255#2 = mulf_init::x_255#1 [phi:mulf_init::@8->mulf_init::@5#2] -- register_copy 
    // [15] phi mulf_init::sqr2_lo#2 = mulf_init::sqr2_lo#1 [phi:mulf_init::@8->mulf_init::@5#3] -- register_copy 
    jmp __b5
    // mulf_init::@2
  __b2:
    // [28] mulf_init::c#1 = ++ mulf_init::c#2 -- vbuz1=_inc_vbuz1 
    inc.z c
    // [29] mulf_init::$1 = mulf_init::c#1 & 1 -- vbuaa=vbuz1_band_vbuc1 
    lda #1
    and.z c
    // [30] if(mulf_init::$1!=0) goto mulf_init::@3 -- vbuaa_neq_0_then_la1 
    cmp #0
    bne __b3_from___b2
    jmp __b4
    // mulf_init::@4
  __b4:
    // [31] mulf_init::x_2#1 = ++ mulf_init::x_2#3 -- vbuxx=_inc_vbuxx 
    inx
    // [32] mulf_init::sqr#2 = ++ mulf_init::sqr#4 -- vwuz1=_inc_vwuz1 
    inc.z sqr
    bne !+
    inc.z sqr+1
  !:
    // [33] phi from mulf_init::@2 mulf_init::@4 to mulf_init::@3 [phi:mulf_init::@2/mulf_init::@4->mulf_init::@3]
  __b3_from___b2:
  __b3_from___b4:
    // [33] phi mulf_init::x_2#2 = mulf_init::x_2#3 [phi:mulf_init::@2/mulf_init::@4->mulf_init::@3#0] -- register_copy 
    // [33] phi mulf_init::sqr#3 = mulf_init::sqr#4 [phi:mulf_init::@2/mulf_init::@4->mulf_init::@3#1] -- register_copy 
    jmp __b3
    // mulf_init::@3
  __b3:
    // [34] mulf_init::$4 = < mulf_init::sqr#3 -- vbuaa=_lo_vwuz1 
    lda.z sqr
    // [35] *mulf_init::sqr1_lo#2 = mulf_init::$4 -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (sqr1_lo),y
    // [36] mulf_init::$5 = > mulf_init::sqr#3 -- vbuaa=_hi_vwuz1 
    lda.z sqr+1
    // [37] *mulf_init::sqr1_hi#2 = mulf_init::$5 -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (sqr1_hi),y
    // [38] mulf_init::sqr1_hi#1 = ++ mulf_init::sqr1_hi#2 -- pbuz1=_inc_pbuz1 
    inc.z sqr1_hi
    bne !+
    inc.z sqr1_hi+1
  !:
    // [39] mulf_init::sqr#1 = mulf_init::sqr#3 + mulf_init::x_2#2 -- vwuz1=vwuz1_plus_vbuxx 
    txa
    clc
    adc.z sqr
    sta.z sqr
    bcc !+
    inc.z sqr+1
  !:
    // [40] mulf_init::sqr1_lo#1 = ++ mulf_init::sqr1_lo#2 -- pbuz1=_inc_pbuz1 
    inc.z sqr1_lo
    bne !+
    inc.z sqr1_lo+1
  !:
    // [13] phi from mulf_init::@3 to mulf_init::@1 [phi:mulf_init::@3->mulf_init::@1]
  __b1_from___b3:
    // [13] phi mulf_init::x_2#3 = mulf_init::x_2#2 [phi:mulf_init::@3->mulf_init::@1#0] -- register_copy 
    // [13] phi mulf_init::sqr1_hi#2 = mulf_init::sqr1_hi#1 [phi:mulf_init::@3->mulf_init::@1#1] -- register_copy 
    // [13] phi mulf_init::sqr#4 = mulf_init::sqr#1 [phi:mulf_init::@3->mulf_init::@1#2] -- register_copy 
    // [13] phi mulf_init::c#2 = mulf_init::c#1 [phi:mulf_init::@3->mulf_init::@1#3] -- register_copy 
    // [13] phi mulf_init::sqr1_lo#2 = mulf_init::sqr1_lo#1 [phi:mulf_init::@3->mulf_init::@1#4] -- register_copy 
    jmp __b1
}
  // mul16u_compare
// Perform many possible word multiplications (slow and fast) and compare the results
mul16u_compare: {
    .label a = $18
    .label b = $1a
    .label ms = 8
    .label mn = $c
    .label mf = $12
    .label i = 2
    // [42] phi from mul16u_compare to mul16u_compare::@1 [phi:mul16u_compare->mul16u_compare::@1]
  __b1_from_mul16u_compare:
    // [42] phi mul16u_compare::i#12 = 0 [phi:mul16u_compare->mul16u_compare::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta.z i
    // [42] phi mul16u_compare::b#6 = 0 [phi:mul16u_compare->mul16u_compare::@1#1] -- vwuz1=vwuc1 
    lda #<0
    sta.z b
    lda #>0
    sta.z b+1
    // [42] phi mul16u_compare::a#6 = 0 [phi:mul16u_compare->mul16u_compare::@1#2] -- vwuz1=vwuc1 
    lda #<0
    sta.z a
    lda #>0
    sta.z a+1
    // [42] phi print_char_cursor#148 = print_screen#0 [phi:mul16u_compare->mul16u_compare::@1#3] -- pbuz1=pbuc1 
    lda #<print_screen
    sta.z print_char_cursor
    lda #>print_screen
    sta.z print_char_cursor+1
    jmp __b1
    // [42] phi from mul16u_compare::@8 to mul16u_compare::@1 [phi:mul16u_compare::@8->mul16u_compare::@1]
  __b1_from___b8:
    // [42] phi mul16u_compare::i#12 = mul16u_compare::i#1 [phi:mul16u_compare::@8->mul16u_compare::@1#0] -- register_copy 
    // [42] phi mul16u_compare::b#6 = mul16u_compare::b#1 [phi:mul16u_compare::@8->mul16u_compare::@1#1] -- register_copy 
    // [42] phi mul16u_compare::a#6 = mul16u_compare::a#1 [phi:mul16u_compare::@8->mul16u_compare::@1#2] -- register_copy 
    // [42] phi print_char_cursor#148 = print_char_cursor#1 [phi:mul16u_compare::@8->mul16u_compare::@1#3] -- register_copy 
    jmp __b1
    // mul16u_compare::@1
  __b1:
    // [43] call print_str 
    // [139] phi from mul16u_compare::@1 to print_str [phi:mul16u_compare::@1->print_str]
  print_str_from___b1:
    // [139] phi print_char_cursor#157 = print_char_cursor#148 [phi:mul16u_compare::@1->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = str [phi:mul16u_compare::@1->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    // [44] phi from mul16u_compare::@1 to mul16u_compare::@2 [phi:mul16u_compare::@1->mul16u_compare::@2]
  __b2_from___b1:
    // [44] phi mul16u_compare::j#10 = 0 [phi:mul16u_compare::@1->mul16u_compare::@2#0] -- vbuyy=vbuc1 
    ldy #0
    // [44] phi mul16u_compare::b#2 = mul16u_compare::b#6 [phi:mul16u_compare::@1->mul16u_compare::@2#1] -- register_copy 
    // [44] phi mul16u_compare::a#2 = mul16u_compare::a#6 [phi:mul16u_compare::@1->mul16u_compare::@2#2] -- register_copy 
    jmp __b2
    // [44] phi from mul16u_compare::@5 to mul16u_compare::@2 [phi:mul16u_compare::@5->mul16u_compare::@2]
  __b2_from___b5:
    // [44] phi mul16u_compare::j#10 = mul16u_compare::j#1 [phi:mul16u_compare::@5->mul16u_compare::@2#0] -- register_copy 
    // [44] phi mul16u_compare::b#2 = mul16u_compare::b#1 [phi:mul16u_compare::@5->mul16u_compare::@2#1] -- register_copy 
    // [44] phi mul16u_compare::a#2 = mul16u_compare::a#1 [phi:mul16u_compare::@5->mul16u_compare::@2#2] -- register_copy 
    jmp __b2
    // mul16u_compare::@2
  __b2:
    // [45] mul16u_compare::a#1 = mul16u_compare::a#2 + $d2b -- vwuz1=vwuz1_plus_vwuc1 
    clc
    lda.z a
    adc #<$d2b
    sta.z a
    lda.z a+1
    adc #>$d2b
    sta.z a+1
    // [46] mul16u_compare::b#1 = mul16u_compare::b#2 + $ffd -- vwuz1=vwuz1_plus_vwuc1 
    clc
    lda.z b
    adc #<$ffd
    sta.z b
    lda.z b+1
    adc #>$ffd
    sta.z b+1
    // [47] muls16u::a#0 = mul16u_compare::a#1
    // [48] muls16u::b#0 = mul16u_compare::b#1
    // [49] call muls16u 
    jsr muls16u
    // [50] muls16u::return#2 = muls16u::return#0
    jmp __b10
    // mul16u_compare::@10
  __b10:
    // [51] mul16u_compare::ms#0 = muls16u::return#2
    // [52] mul16u::a#2 = mul16u_compare::a#1 -- vwuz1=vwuz2 
    lda.z a
    sta.z mul16u.a
    lda.z a+1
    sta.z mul16u.a+1
    // [53] mul16u::b#1 = mul16u_compare::b#1
    // [54] call mul16u 
    // [153] phi from mul16u_compare::@10 to mul16u [phi:mul16u_compare::@10->mul16u]
  mul16u_from___b10:
    // [153] phi mul16u::a#6 = mul16u::a#2 [phi:mul16u_compare::@10->mul16u#0] -- register_copy 
    // [153] phi mul16u::b#2 = mul16u::b#1 [phi:mul16u_compare::@10->mul16u#1] -- register_copy 
    jsr mul16u
    // [55] mul16u::return#3 = mul16u::res#2
    jmp __b11
    // mul16u_compare::@11
  __b11:
    // [56] mul16u_compare::mn#0 = mul16u::return#3
    // [57] mulf16u::a#1 = mul16u_compare::a#1
    // [58] mulf16u::b#1 = mul16u_compare::b#1
    // [59] call mulf16u 
    // [164] phi from mul16u_compare::@11 to mulf16u [phi:mul16u_compare::@11->mulf16u]
  mulf16u_from___b11:
    // [164] phi mulf16u::b#2 = mulf16u::b#1 [phi:mul16u_compare::@11->mulf16u#0] -- register_copy 
    // [164] phi mulf16u::a#2 = mulf16u::a#1 [phi:mul16u_compare::@11->mulf16u#1] -- register_copy 
    jsr mulf16u
    // [60] mulf16u::return#3 = mulf16u::return#0
    jmp __b12
    // mul16u_compare::@12
  __b12:
    // [61] mul16u_compare::mf#0 = mulf16u::return#3
    // [62] if(mul16u_compare::ms#0==mul16u_compare::mf#0) goto mul16u_compare::@3 -- vduz1_eq_vduz2_then_la1 
    lda.z ms
    cmp.z mf
    bne !+
    lda.z ms+1
    cmp.z mf+1
    bne !+
    lda.z ms+2
    cmp.z mf+2
    bne !+
    lda.z ms+3
    cmp.z mf+3
    beq __b3_from___b12
  !:
    // [63] phi from mul16u_compare::@12 to mul16u_compare::@6 [phi:mul16u_compare::@12->mul16u_compare::@6]
  __b6_from___b12:
    jmp __b6
    // mul16u_compare::@6
  __b6:
    // [64] phi from mul16u_compare::@6 to mul16u_compare::@3 [phi:mul16u_compare::@6->mul16u_compare::@3]
  __b3_from___b6:
    // [64] phi mul16u_compare::ok#4 = 0 [phi:mul16u_compare::@6->mul16u_compare::@3#0] -- vbuxx=vbuc1 
    ldx #0
    jmp __b3
    // [64] phi from mul16u_compare::@12 to mul16u_compare::@3 [phi:mul16u_compare::@12->mul16u_compare::@3]
  __b3_from___b12:
    // [64] phi mul16u_compare::ok#4 = 1 [phi:mul16u_compare::@12->mul16u_compare::@3#0] -- vbuxx=vbuc1 
    ldx #1
    jmp __b3
    // mul16u_compare::@3
  __b3:
    // [65] if(mul16u_compare::ms#0==mul16u_compare::mn#0) goto mul16u_compare::@15 -- vduz1_eq_vduz2_then_la1 
    lda.z ms
    cmp.z mn
    bne !+
    lda.z ms+1
    cmp.z mn+1
    bne !+
    lda.z ms+2
    cmp.z mn+2
    bne !+
    lda.z ms+3
    cmp.z mn+3
    beq __b15_from___b3
  !:
    // [67] phi from mul16u_compare::@3 to mul16u_compare::@4 [phi:mul16u_compare::@3->mul16u_compare::@4]
  __b4_from___b3:
    // [67] phi mul16u_compare::ok#3 = 0 [phi:mul16u_compare::@3->mul16u_compare::@4#0] -- vbuxx=vbuc1 
    ldx #0
    jmp __b4
    // [66] phi from mul16u_compare::@3 to mul16u_compare::@15 [phi:mul16u_compare::@3->mul16u_compare::@15]
  __b15_from___b3:
    jmp __b15
    // mul16u_compare::@15
  __b15:
    // [67] phi from mul16u_compare::@15 to mul16u_compare::@4 [phi:mul16u_compare::@15->mul16u_compare::@4]
  __b4_from___b15:
    // [67] phi mul16u_compare::ok#3 = mul16u_compare::ok#4 [phi:mul16u_compare::@15->mul16u_compare::@4#0] -- register_copy 
    jmp __b4
    // mul16u_compare::@4
  __b4:
    // [68] if(mul16u_compare::ok#3!=0) goto mul16u_compare::@5 -- vbuxx_neq_0_then_la1 
    cpx #0
    bne __b5
    jmp __b7
    // mul16u_compare::@7
  __b7:
    // [69] *BG_COLOR = 2 -- _deref_pbuc1=vbuc2 
    lda #2
    sta BG_COLOR
    // [70] mul16u_error::a#0 = mul16u_compare::a#1
    // [71] mul16u_error::b#0 = mul16u_compare::b#1
    // [72] mul16u_error::ms#0 = mul16u_compare::ms#0
    // [73] mul16u_error::mn#0 = mul16u_compare::mn#0
    // [74] mul16u_error::mf#0 = mul16u_compare::mf#0
    // [75] call mul16u_error 
    // [170] phi from mul16u_compare::@7 to mul16u_error [phi:mul16u_compare::@7->mul16u_error]
  mul16u_error_from___b7:
    jsr mul16u_error
    jmp __breturn
    // mul16u_compare::@return
  __breturn:
    // [76] return 
    rts
    // mul16u_compare::@5
  __b5:
    // [77] mul16u_compare::j#1 = ++ mul16u_compare::j#10 -- vbuyy=_inc_vbuyy 
    iny
    // [78] if(mul16u_compare::j#1!=$10) goto mul16u_compare::@2 -- vbuyy_neq_vbuc1_then_la1 
    cpy #$10
    bne __b2_from___b5
    jmp __b8
    // mul16u_compare::@8
  __b8:
    // [79] mul16u_compare::i#1 = ++ mul16u_compare::i#12 -- vbuz1=_inc_vbuz1 
    inc.z i
    // [80] if(mul16u_compare::i#1!=$10) goto mul16u_compare::@1 -- vbuz1_neq_vbuc1_then_la1 
    lda #$10
    cmp.z i
    bne __b1_from___b8
    // [81] phi from mul16u_compare::@8 to mul16u_compare::@9 [phi:mul16u_compare::@8->mul16u_compare::@9]
  __b9_from___b8:
    jmp __b9
    // mul16u_compare::@9
  __b9:
    // [82] call print_ln 
    // [193] phi from mul16u_compare::@9 to print_ln [phi:mul16u_compare::@9->print_ln]
  print_ln_from___b9:
    // [193] phi print_char_cursor#136 = print_char_cursor#1 [phi:mul16u_compare::@9->print_ln#0] -- register_copy 
    // [193] phi print_line_cursor#45 = print_screen#0 [phi:mul16u_compare::@9->print_ln#1] -- pbuz1=pbuc1 
    lda #<print_screen
    sta.z print_line_cursor
    lda #>print_screen
    sta.z print_line_cursor+1
    jsr print_ln
    jmp __b13
    // mul16u_compare::@13
  __b13:
    // [83] print_char_cursor#190 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [84] call print_str 
    // [139] phi from mul16u_compare::@13 to print_str [phi:mul16u_compare::@13->print_str]
  print_str_from___b13:
    // [139] phi print_char_cursor#157 = print_char_cursor#190 [phi:mul16u_compare::@13->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = mul16u_compare::str1 [phi:mul16u_compare::@13->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    // [85] phi from mul16u_compare::@13 to mul16u_compare::@14 [phi:mul16u_compare::@13->mul16u_compare::@14]
  __b14_from___b13:
    jmp __b14
    // mul16u_compare::@14
  __b14:
    // [86] call print_ln 
    // [193] phi from mul16u_compare::@14 to print_ln [phi:mul16u_compare::@14->print_ln]
  print_ln_from___b14:
    // [193] phi print_char_cursor#136 = print_char_cursor#1 [phi:mul16u_compare::@14->print_ln#0] -- register_copy 
    // [193] phi print_line_cursor#45 = print_line_cursor#0 [phi:mul16u_compare::@14->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __breturn
    str1: .text "word multiply results match!"
    .byte 0
}
  // mul16s_compare
// Perform many possible word multiplications (slow and fast) and compare the results
mul16s_compare: {
    .label a = 4
    .label b = 6
    .label ms = 8
    .label mn = $c
    .label mf = $12
    .label i = 3
    // [87] print_char_cursor#223 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [88] phi from mul16s_compare to mul16s_compare::@1 [phi:mul16s_compare->mul16s_compare::@1]
  __b1_from_mul16s_compare:
    // [88] phi mul16s_compare::i#12 = 0 [phi:mul16s_compare->mul16s_compare::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta.z i
    // [88] phi mul16s_compare::b#6 = -$7fff [phi:mul16s_compare->mul16s_compare::@1#1] -- vwsz1=vwsc1 
    lda #<-$7fff
    sta.z b
    lda #>-$7fff
    sta.z b+1
    // [88] phi mul16s_compare::a#6 = -$7fff [phi:mul16s_compare->mul16s_compare::@1#2] -- vwsz1=vwsc1 
    lda #<-$7fff
    sta.z a
    lda #>-$7fff
    sta.z a+1
    // [88] phi print_char_cursor#152 = print_char_cursor#223 [phi:mul16s_compare->mul16s_compare::@1#3] -- register_copy 
    jmp __b1
    // [88] phi from mul16s_compare::@8 to mul16s_compare::@1 [phi:mul16s_compare::@8->mul16s_compare::@1]
  __b1_from___b8:
    // [88] phi mul16s_compare::i#12 = mul16s_compare::i#1 [phi:mul16s_compare::@8->mul16s_compare::@1#0] -- register_copy 
    // [88] phi mul16s_compare::b#6 = mul16s_compare::b#1 [phi:mul16s_compare::@8->mul16s_compare::@1#1] -- register_copy 
    // [88] phi mul16s_compare::a#6 = mul16s_compare::a#1 [phi:mul16s_compare::@8->mul16s_compare::@1#2] -- register_copy 
    // [88] phi print_char_cursor#152 = print_char_cursor#1 [phi:mul16s_compare::@8->mul16s_compare::@1#3] -- register_copy 
    jmp __b1
    // mul16s_compare::@1
  __b1:
    // [89] call print_str 
    // [139] phi from mul16s_compare::@1 to print_str [phi:mul16s_compare::@1->print_str]
  print_str_from___b1:
    // [139] phi print_char_cursor#157 = print_char_cursor#152 [phi:mul16s_compare::@1->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = str [phi:mul16s_compare::@1->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    // [90] phi from mul16s_compare::@1 to mul16s_compare::@2 [phi:mul16s_compare::@1->mul16s_compare::@2]
  __b2_from___b1:
    // [90] phi mul16s_compare::j#10 = 0 [phi:mul16s_compare::@1->mul16s_compare::@2#0] -- vbuyy=vbuc1 
    ldy #0
    // [90] phi mul16s_compare::b#2 = mul16s_compare::b#6 [phi:mul16s_compare::@1->mul16s_compare::@2#1] -- register_copy 
    // [90] phi mul16s_compare::a#2 = mul16s_compare::a#6 [phi:mul16s_compare::@1->mul16s_compare::@2#2] -- register_copy 
    jmp __b2
    // [90] phi from mul16s_compare::@5 to mul16s_compare::@2 [phi:mul16s_compare::@5->mul16s_compare::@2]
  __b2_from___b5:
    // [90] phi mul16s_compare::j#10 = mul16s_compare::j#1 [phi:mul16s_compare::@5->mul16s_compare::@2#0] -- register_copy 
    // [90] phi mul16s_compare::b#2 = mul16s_compare::b#1 [phi:mul16s_compare::@5->mul16s_compare::@2#1] -- register_copy 
    // [90] phi mul16s_compare::a#2 = mul16s_compare::a#1 [phi:mul16s_compare::@5->mul16s_compare::@2#2] -- register_copy 
    jmp __b2
    // mul16s_compare::@2
  __b2:
    // [91] mul16s_compare::a#1 = mul16s_compare::a#2 + $d2b -- vwsz1=vwsz1_plus_vwsc1 
    clc
    lda.z a
    adc #<$d2b
    sta.z a
    lda.z a+1
    adc #>$d2b
    sta.z a+1
    // [92] mul16s_compare::b#1 = mul16s_compare::b#2 + $ffd -- vwsz1=vwsz1_plus_vwsc1 
    clc
    lda.z b
    adc #<$ffd
    sta.z b
    lda.z b+1
    adc #>$ffd
    sta.z b+1
    // [93] muls16s::a#0 = mul16s_compare::a#1
    // [94] muls16s::b#0 = mul16s_compare::b#1
    // [95] call muls16s 
    jsr muls16s
    // [96] muls16s::return#2 = muls16s::return#0
    jmp __b10
    // mul16s_compare::@10
  __b10:
    // [97] mul16s_compare::ms#0 = muls16s::return#2
    // [98] mul16s::a#0 = mul16s_compare::a#1
    // [99] mul16s::b#0 = mul16s_compare::b#1
    // [100] call mul16s 
    jsr mul16s
    // [101] mul16s::return#2 = mul16s::return#0
    jmp __b11
    // mul16s_compare::@11
  __b11:
    // [102] mul16s_compare::mn#0 = mul16s::return#2
    // [103] mulf16s::a#0 = mul16s_compare::a#1
    // [104] mulf16s::b#0 = mul16s_compare::b#1
    // [105] call mulf16s 
    jsr mulf16s
    // [106] mulf16s::return#2 = mulf16s::return#0
    jmp __b12
    // mul16s_compare::@12
  __b12:
    // [107] mul16s_compare::mf#0 = mulf16s::return#2
    // [108] if(mul16s_compare::ms#0==mul16s_compare::mf#0) goto mul16s_compare::@3 -- vdsz1_eq_vdsz2_then_la1 
    lda.z ms
    cmp.z mf
    bne !+
    lda.z ms+1
    cmp.z mf+1
    bne !+
    lda.z ms+2
    cmp.z mf+2
    bne !+
    lda.z ms+3
    cmp.z mf+3
    beq __b3_from___b12
  !:
    // [109] phi from mul16s_compare::@12 to mul16s_compare::@6 [phi:mul16s_compare::@12->mul16s_compare::@6]
  __b6_from___b12:
    jmp __b6
    // mul16s_compare::@6
  __b6:
    // [110] phi from mul16s_compare::@6 to mul16s_compare::@3 [phi:mul16s_compare::@6->mul16s_compare::@3]
  __b3_from___b6:
    // [110] phi mul16s_compare::ok#4 = 0 [phi:mul16s_compare::@6->mul16s_compare::@3#0] -- vbuxx=vbuc1 
    ldx #0
    jmp __b3
    // [110] phi from mul16s_compare::@12 to mul16s_compare::@3 [phi:mul16s_compare::@12->mul16s_compare::@3]
  __b3_from___b12:
    // [110] phi mul16s_compare::ok#4 = 1 [phi:mul16s_compare::@12->mul16s_compare::@3#0] -- vbuxx=vbuc1 
    ldx #1
    jmp __b3
    // mul16s_compare::@3
  __b3:
    // [111] if(mul16s_compare::ms#0==mul16s_compare::mn#0) goto mul16s_compare::@15 -- vdsz1_eq_vdsz2_then_la1 
    lda.z ms
    cmp.z mn
    bne !+
    lda.z ms+1
    cmp.z mn+1
    bne !+
    lda.z ms+2
    cmp.z mn+2
    bne !+
    lda.z ms+3
    cmp.z mn+3
    beq __b15_from___b3
  !:
    // [113] phi from mul16s_compare::@3 to mul16s_compare::@4 [phi:mul16s_compare::@3->mul16s_compare::@4]
  __b4_from___b3:
    // [113] phi mul16s_compare::ok#3 = 0 [phi:mul16s_compare::@3->mul16s_compare::@4#0] -- vbuxx=vbuc1 
    ldx #0
    jmp __b4
    // [112] phi from mul16s_compare::@3 to mul16s_compare::@15 [phi:mul16s_compare::@3->mul16s_compare::@15]
  __b15_from___b3:
    jmp __b15
    // mul16s_compare::@15
  __b15:
    // [113] phi from mul16s_compare::@15 to mul16s_compare::@4 [phi:mul16s_compare::@15->mul16s_compare::@4]
  __b4_from___b15:
    // [113] phi mul16s_compare::ok#3 = mul16s_compare::ok#4 [phi:mul16s_compare::@15->mul16s_compare::@4#0] -- register_copy 
    jmp __b4
    // mul16s_compare::@4
  __b4:
    // [114] if(mul16s_compare::ok#3!=0) goto mul16s_compare::@5 -- vbuxx_neq_0_then_la1 
    cpx #0
    bne __b5
    jmp __b7
    // mul16s_compare::@7
  __b7:
    // [115] *BG_COLOR = 2 -- _deref_pbuc1=vbuc2 
    lda #2
    sta BG_COLOR
    // [116] mul16s_error::a#0 = mul16s_compare::a#1
    // [117] mul16s_error::b#0 = mul16s_compare::b#1
    // [118] mul16s_error::ms#0 = mul16s_compare::ms#0
    // [119] mul16s_error::mn#0 = mul16s_compare::mn#0
    // [120] mul16s_error::mf#0 = mul16s_compare::mf#0
    // [121] call mul16s_error 
    // [244] phi from mul16s_compare::@7 to mul16s_error [phi:mul16s_compare::@7->mul16s_error]
  mul16s_error_from___b7:
    jsr mul16s_error
    jmp __breturn
    // mul16s_compare::@return
  __breturn:
    // [122] return 
    rts
    // mul16s_compare::@5
  __b5:
    // [123] mul16s_compare::j#1 = ++ mul16s_compare::j#10 -- vbuyy=_inc_vbuyy 
    iny
    // [124] if(mul16s_compare::j#1!=$10) goto mul16s_compare::@2 -- vbuyy_neq_vbuc1_then_la1 
    cpy #$10
    bne __b2_from___b5
    jmp __b8
    // mul16s_compare::@8
  __b8:
    // [125] mul16s_compare::i#1 = ++ mul16s_compare::i#12 -- vbuz1=_inc_vbuz1 
    inc.z i
    // [126] if(mul16s_compare::i#1!=$10) goto mul16s_compare::@1 -- vbuz1_neq_vbuc1_then_la1 
    lda #$10
    cmp.z i
    bne __b1_from___b8
    // [127] phi from mul16s_compare::@8 to mul16s_compare::@9 [phi:mul16s_compare::@8->mul16s_compare::@9]
  __b9_from___b8:
    jmp __b9
    // mul16s_compare::@9
  __b9:
    // [128] call print_ln 
    // [193] phi from mul16s_compare::@9 to print_ln [phi:mul16s_compare::@9->print_ln]
  print_ln_from___b9:
    // [193] phi print_char_cursor#136 = print_char_cursor#1 [phi:mul16s_compare::@9->print_ln#0] -- register_copy 
    // [193] phi print_line_cursor#45 = print_line_cursor#0 [phi:mul16s_compare::@9->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b13
    // mul16s_compare::@13
  __b13:
    // [129] print_char_cursor#183 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [130] call print_str 
    // [139] phi from mul16s_compare::@13 to print_str [phi:mul16s_compare::@13->print_str]
  print_str_from___b13:
    // [139] phi print_char_cursor#157 = print_char_cursor#183 [phi:mul16s_compare::@13->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = mul16s_compare::str1 [phi:mul16s_compare::@13->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    // [131] phi from mul16s_compare::@13 to mul16s_compare::@14 [phi:mul16s_compare::@13->mul16s_compare::@14]
  __b14_from___b13:
    jmp __b14
    // mul16s_compare::@14
  __b14:
    // [132] call print_ln 
    // [193] phi from mul16s_compare::@14 to print_ln [phi:mul16s_compare::@14->print_ln]
  print_ln_from___b14:
    // [193] phi print_char_cursor#136 = print_char_cursor#1 [phi:mul16s_compare::@14->print_ln#0] -- register_copy 
    // [193] phi print_line_cursor#45 = print_line_cursor#0 [phi:mul16s_compare::@14->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __breturn
    str1: .text "signed word multiply results match!"
    .byte 0
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
memset: {
    .const c = ' '
    .const num = $3e8
    .label str = print_screen
    .label end = str+num
    .label dst = $1c
    // [134] phi from memset to memset::@1 [phi:memset->memset::@1]
  __b1_from_memset:
    // [134] phi memset::dst#2 = (byte*)memset::str#0 [phi:memset->memset::@1#0] -- pbuz1=pbuc1 
    lda #<str
    sta.z dst
    lda #>str
    sta.z dst+1
    jmp __b1
    // memset::@1
  __b1:
    // [135] if(memset::dst#2!=memset::end#0) goto memset::@2 -- pbuz1_neq_pbuc1_then_la1 
    lda.z dst+1
    cmp #>end
    bne __b2
    lda.z dst
    cmp #<end
    bne __b2
    jmp __breturn
    // memset::@return
  __breturn:
    // [136] return 
    rts
    // memset::@2
  __b2:
    // [137] *memset::dst#2 = memset::c#0 -- _deref_pbuz1=vbuc1 
    lda #c
    ldy #0
    sta (dst),y
    // [138] memset::dst#1 = ++ memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [134] phi from memset::@2 to memset::@1 [phi:memset::@2->memset::@1]
  __b1_from___b2:
    // [134] phi memset::dst#2 = memset::dst#1 [phi:memset::@2->memset::@1#0] -- register_copy 
    jmp __b1
}
  // print_str
// Print a zero-terminated string
// print_str(byte* zp($1c) str)
print_str: {
    .label str = $1c
    // [140] phi from print_str print_str::@3 to print_str::@1 [phi:print_str/print_str::@3->print_str::@1]
  __b1_from_print_str:
  __b1_from___b3:
    // [140] phi print_char_cursor#1 = print_char_cursor#157 [phi:print_str/print_str::@3->print_str::@1#0] -- register_copy 
    // [140] phi print_str::str#15 = print_str::str#18 [phi:print_str/print_str::@3->print_str::@1#1] -- register_copy 
    jmp __b1
    // print_str::@1
  __b1:
    // [141] if(0!=*print_str::str#15) goto print_str::@2 -- vbuc1_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (str),y
    cmp #0
    bne __b2
    jmp __breturn
    // print_str::@return
  __breturn:
    // [142] return 
    rts
    // print_str::@2
  __b2:
    // [143] print_char::ch#0 = *print_str::str#15 -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (str),y
    // [144] call print_char 
    // [267] phi from print_str::@2 to print_char [phi:print_str::@2->print_char]
  print_char_from___b2:
    // [267] phi print_char_cursor#89 = print_char_cursor#1 [phi:print_str::@2->print_char#0] -- register_copy 
    // [267] phi print_char::ch#7 = print_char::ch#0 [phi:print_str::@2->print_char#1] -- register_copy 
    jsr print_char
    jmp __b3
    // print_str::@3
  __b3:
    // [145] print_str::str#0 = ++ print_str::str#15 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    jmp __b1_from___b3
}
  // muls16u
// Slow multiplication of unsigned words
// Calculate an unsigned multiplication by repeated addition
// muls16u(word zp($18) a, word zp($1a) b)
muls16u: {
    .label return = 8
    .label m = 8
    .label i = $1c
    .label a = $18
    .label b = $1a
    // [146] if(muls16u::a#0==0) goto muls16u::@1 -- vwuz1_eq_0_then_la1 
    lda.z a
    bne !+
    lda.z a+1
    beq __b1_from_muls16u
  !:
    // [147] phi from muls16u to muls16u::@2 [phi:muls16u->muls16u::@2]
  __b2_from_muls16u:
    // [147] phi muls16u::m#3 = 0 [phi:muls16u->muls16u::@2#0] -- vduz1=vduc1 
    lda #<0
    sta.z m
    lda #>0
    sta.z m+1
    lda #<0>>$10
    sta.z m+2
    lda #>0>>$10
    sta.z m+3
    // [147] phi muls16u::i#2 = 0 [phi:muls16u->muls16u::@2#1] -- vwuz1=vwuc1 
    lda #<0
    sta.z i
    lda #>0
    sta.z i+1
    jmp __b2
    // muls16u::@2
  __b2:
    // [148] if(muls16u::i#2!=muls16u::a#0) goto muls16u::@3 -- vwuz1_neq_vwuz2_then_la1 
    lda.z i+1
    cmp.z a+1
    bne __b3
    lda.z i
    cmp.z a
    bne __b3
    // [149] phi from muls16u::@2 to muls16u::@1 [phi:muls16u::@2->muls16u::@1]
  __b1_from___b2:
    // [149] phi muls16u::return#0 = muls16u::m#3 [phi:muls16u::@2->muls16u::@1#0] -- register_copy 
    jmp __b1
    // [149] phi from muls16u to muls16u::@1 [phi:muls16u->muls16u::@1]
  __b1_from_muls16u:
    // [149] phi muls16u::return#0 = 0 [phi:muls16u->muls16u::@1#0] -- vduz1=vduc1 
    lda #<0
    sta.z return
    lda #>0
    sta.z return+1
    lda #<0>>$10
    sta.z return+2
    lda #>0>>$10
    sta.z return+3
    jmp __b1
    // muls16u::@1
  __b1:
    jmp __breturn
    // muls16u::@return
  __breturn:
    // [150] return 
    rts
    // muls16u::@3
  __b3:
    // [151] muls16u::m#1 = muls16u::m#3 + muls16u::b#0 -- vduz1=vduz1_plus_vwuz2 
    lda.z m
    clc
    adc.z b
    sta.z m
    lda.z m+1
    adc.z b+1
    sta.z m+1
    lda.z m+2
    adc #0
    sta.z m+2
    lda.z m+3
    adc #0
    sta.z m+3
    // [152] muls16u::i#1 = ++ muls16u::i#2 -- vwuz1=_inc_vwuz1 
    inc.z i
    bne !+
    inc.z i+1
  !:
    // [147] phi from muls16u::@3 to muls16u::@2 [phi:muls16u::@3->muls16u::@2]
  __b2_from___b3:
    // [147] phi muls16u::m#3 = muls16u::m#1 [phi:muls16u::@3->muls16u::@2#0] -- register_copy 
    // [147] phi muls16u::i#2 = muls16u::i#1 [phi:muls16u::@3->muls16u::@2#1] -- register_copy 
    jmp __b2
}
  // mul16u
// Perform binary multiplication of two unsigned 16-bit unsigned ints into a 32-bit unsigned long
// mul16u(word zp($1c) a, word zp($1a) b)
mul16u: {
    .label mb = $12
    .label a = $1c
    .label res = $c
    .label b = $1a
    .label return = $c
    // [154] mul16u::mb#0 = (dword)mul16u::b#2 -- vduz1=_dword_vwuz2 
    lda.z b
    sta.z mb
    lda.z b+1
    sta.z mb+1
    lda #0
    sta.z mb+2
    sta.z mb+3
    // [155] phi from mul16u to mul16u::@1 [phi:mul16u->mul16u::@1]
  __b1_from_mul16u:
    // [155] phi mul16u::mb#2 = mul16u::mb#0 [phi:mul16u->mul16u::@1#0] -- register_copy 
    // [155] phi mul16u::res#2 = 0 [phi:mul16u->mul16u::@1#1] -- vduz1=vduc1 
    lda #<0
    sta.z res
    lda #>0
    sta.z res+1
    lda #<0>>$10
    sta.z res+2
    lda #>0>>$10
    sta.z res+3
    // [155] phi mul16u::a#3 = mul16u::a#6 [phi:mul16u->mul16u::@1#2] -- register_copy 
    jmp __b1
    // mul16u::@1
  __b1:
    // [156] if(mul16u::a#3!=0) goto mul16u::@2 -- vwuz1_neq_0_then_la1 
    lda.z a
    bne __b2
    lda.z a+1
    bne __b2
    jmp __breturn
    // mul16u::@return
  __breturn:
    // [157] return 
    rts
    // mul16u::@2
  __b2:
    // [158] mul16u::$1 = mul16u::a#3 & 1 -- vbuaa=vwuz1_band_vbuc1 
    lda #1
    and.z a
    // [159] if(mul16u::$1==0) goto mul16u::@3 -- vbuaa_eq_0_then_la1 
    cmp #0
    beq __b3_from___b2
    jmp __b4
    // mul16u::@4
  __b4:
    // [160] mul16u::res#1 = mul16u::res#2 + mul16u::mb#2 -- vduz1=vduz1_plus_vduz2 
    lda.z res
    clc
    adc.z mb
    sta.z res
    lda.z res+1
    adc.z mb+1
    sta.z res+1
    lda.z res+2
    adc.z mb+2
    sta.z res+2
    lda.z res+3
    adc.z mb+3
    sta.z res+3
    // [161] phi from mul16u::@2 mul16u::@4 to mul16u::@3 [phi:mul16u::@2/mul16u::@4->mul16u::@3]
  __b3_from___b2:
  __b3_from___b4:
    // [161] phi mul16u::res#6 = mul16u::res#2 [phi:mul16u::@2/mul16u::@4->mul16u::@3#0] -- register_copy 
    jmp __b3
    // mul16u::@3
  __b3:
    // [162] mul16u::a#0 = mul16u::a#3 >> 1 -- vwuz1=vwuz1_ror_1 
    lsr.z a+1
    ror.z a
    // [163] mul16u::mb#1 = mul16u::mb#2 << 1 -- vduz1=vduz1_rol_1 
    asl.z mb
    rol.z mb+1
    rol.z mb+2
    rol.z mb+3
    // [155] phi from mul16u::@3 to mul16u::@1 [phi:mul16u::@3->mul16u::@1]
  __b1_from___b3:
    // [155] phi mul16u::mb#2 = mul16u::mb#1 [phi:mul16u::@3->mul16u::@1#0] -- register_copy 
    // [155] phi mul16u::res#2 = mul16u::res#6 [phi:mul16u::@3->mul16u::@1#1] -- register_copy 
    // [155] phi mul16u::a#3 = mul16u::a#0 [phi:mul16u::@3->mul16u::@1#2] -- register_copy 
    jmp __b1
}
  // mulf16u
// Fast multiply two unsigned ints to a double unsigned int result
// Done in assembler to utilize fast addition A+X
// mulf16u(word zp($18) a, word zp($1a) b)
mulf16u: {
    .label memA = $f8
    .label memB = $fa
    .label memR = $fc
    .label return = $12
    .label a = $18
    .label b = $1a
    // [165] *mulf16u::memA = mulf16u::a#2 -- _deref_pwuc1=vwuz1 
    lda.z a
    sta memA
    lda.z a+1
    sta memA+1
    // [166] *mulf16u::memB = mulf16u::b#2 -- _deref_pwuc1=vwuz1 
    lda.z b
    sta memB
    lda.z b+1
    sta memB+1
    // asm { ldamemA stasm1a+1 stasm3a+1 stasm5a+1 stasm7a+1 eor#$ff stasm2a+1 stasm4a+1 stasm6a+1 stasm8a+1 ldamemA+1 stasm1b+1 stasm3b+1 stasm5b+1 stasm7b+1 eor#$ff stasm2b+1 stasm4b+1 stasm6b+1 stasm8b+1 ldxmemB sec sm1a: ldamulf_sqr1_lo,x sm2a: sbcmulf_sqr2_lo,x stamemR+0 sm3a: ldamulf_sqr1_hi,x sm4a: sbcmulf_sqr2_hi,x sta_AA+1 sec sm1b: ldamulf_sqr1_lo,x sm2b: sbcmulf_sqr2_lo,x sta_cc+1 sm3b: ldamulf_sqr1_hi,x sm4b: sbcmulf_sqr2_hi,x sta_CC+1 ldxmemB+1 sec sm5a: ldamulf_sqr1_lo,x sm6a: sbcmulf_sqr2_lo,x sta_bb+1 sm7a: ldamulf_sqr1_hi,x sm8a: sbcmulf_sqr2_hi,x sta_BB+1 sec sm5b: ldamulf_sqr1_lo,x sm6b: sbcmulf_sqr2_lo,x sta_dd+1 sm7b: ldamulf_sqr1_hi,x sm8b: sbcmulf_sqr2_hi,x stamemR+3 clc _AA: lda#0 _bb: adc#0 stamemR+1 _BB: lda#0 _CC: adc#0 stamemR+2 bcc!+ incmemR+3 clc !: _cc: lda#0 adcmemR+1 stamemR+1 _dd: lda#0 adcmemR+2 stamemR+2 bcc!+ incmemR+3 !:  }
    lda memA
    sta sm1a+1
    sta sm3a+1
    sta sm5a+1
    sta sm7a+1
    eor #$ff
    sta sm2a+1
    sta sm4a+1
    sta sm6a+1
    sta sm8a+1
    lda memA+1
    sta sm1b+1
    sta sm3b+1
    sta sm5b+1
    sta sm7b+1
    eor #$ff
    sta sm2b+1
    sta sm4b+1
    sta sm6b+1
    sta sm8b+1
    ldx memB
    sec
  sm1a:
    lda mulf_sqr1_lo,x
  sm2a:
    sbc mulf_sqr2_lo,x
    sta memR+0
  sm3a:
    lda mulf_sqr1_hi,x
  sm4a:
    sbc mulf_sqr2_hi,x
    sta _AA+1
    sec
  sm1b:
    lda mulf_sqr1_lo,x
  sm2b:
    sbc mulf_sqr2_lo,x
    sta _cc+1
  sm3b:
    lda mulf_sqr1_hi,x
  sm4b:
    sbc mulf_sqr2_hi,x
    sta _CC+1
    ldx memB+1
    sec
  sm5a:
    lda mulf_sqr1_lo,x
  sm6a:
    sbc mulf_sqr2_lo,x
    sta _bb+1
  sm7a:
    lda mulf_sqr1_hi,x
  sm8a:
    sbc mulf_sqr2_hi,x
    sta _BB+1
    sec
  sm5b:
    lda mulf_sqr1_lo,x
  sm6b:
    sbc mulf_sqr2_lo,x
    sta _dd+1
  sm7b:
    lda mulf_sqr1_hi,x
  sm8b:
    sbc mulf_sqr2_hi,x
    sta memR+3
    clc
  _AA:
    lda #0
  _bb:
    adc #0
    sta memR+1
  _BB:
    lda #0
  _CC:
    adc #0
    sta memR+2
    bcc !+
    inc memR+3
    clc
  !:
  _cc:
    lda #0
    adc memR+1
    sta memR+1
  _dd:
    lda #0
    adc memR+2
    sta memR+2
    bcc !+
    inc memR+3
  !:
    // [168] mulf16u::return#0 = *mulf16u::memR -- vduz1=_deref_pduc1 
    lda memR
    sta.z return
    lda memR+1
    sta.z return+1
    lda memR+2
    sta.z return+2
    lda memR+3
    sta.z return+3
    jmp __breturn
    // mulf16u::@return
  __breturn:
    // [169] return 
    rts
}
  // mul16u_error
// mul16u_error(word zp($18) a, word zp($1a) b, dword zp(8) ms, dword zp($c) mn, dword zp($12) mf)
mul16u_error: {
    .label a = $18
    .label b = $1a
    .label ms = 8
    .label mn = $c
    .label mf = $12
    // [171] call print_str 
    // [139] phi from mul16u_error to print_str [phi:mul16u_error->print_str]
  print_str_from_mul16u_error:
    // [139] phi print_char_cursor#157 = print_char_cursor#1 [phi:mul16u_error->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = mul16u_error::str [phi:mul16u_error->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    jmp __b1
    // mul16u_error::@1
  __b1:
    // [172] print_uint::w#3 = mul16u_error::a#0
    // [173] call print_uint 
    // [271] phi from mul16u_error::@1 to print_uint [phi:mul16u_error::@1->print_uint]
  print_uint_from___b1:
    // [271] phi print_char_cursor#140 = print_char_cursor#1 [phi:mul16u_error::@1->print_uint#0] -- register_copy 
    // [271] phi print_uint::w#5 = print_uint::w#3 [phi:mul16u_error::@1->print_uint#1] -- register_copy 
    jsr print_uint
    // [174] phi from mul16u_error::@1 to mul16u_error::@2 [phi:mul16u_error::@1->mul16u_error::@2]
  __b2_from___b1:
    jmp __b2
    // mul16u_error::@2
  __b2:
    // [175] call print_str 
    // [139] phi from mul16u_error::@2 to print_str [phi:mul16u_error::@2->print_str]
  print_str_from___b2:
    // [139] phi print_char_cursor#157 = print_char_cursor#21 [phi:mul16u_error::@2->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = str1 [phi:mul16u_error::@2->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    jmp __b3
    // mul16u_error::@3
  __b3:
    // [176] print_uint::w#4 = mul16u_error::b#0 -- vwuz1=vwuz2 
    lda.z b
    sta.z print_uint.w
    lda.z b+1
    sta.z print_uint.w+1
    // [177] call print_uint 
    // [271] phi from mul16u_error::@3 to print_uint [phi:mul16u_error::@3->print_uint]
  print_uint_from___b3:
    // [271] phi print_char_cursor#140 = print_char_cursor#1 [phi:mul16u_error::@3->print_uint#0] -- register_copy 
    // [271] phi print_uint::w#5 = print_uint::w#4 [phi:mul16u_error::@3->print_uint#1] -- register_copy 
    jsr print_uint
    // [178] phi from mul16u_error::@3 to mul16u_error::@4 [phi:mul16u_error::@3->mul16u_error::@4]
  __b4_from___b3:
    jmp __b4
    // mul16u_error::@4
  __b4:
    // [179] call print_str 
    // [139] phi from mul16u_error::@4 to print_str [phi:mul16u_error::@4->print_str]
  print_str_from___b4:
    // [139] phi print_char_cursor#157 = print_char_cursor#21 [phi:mul16u_error::@4->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = str2 [phi:mul16u_error::@4->print_str#1] -- pbuz1=pbuc1 
    lda #<str2
    sta.z print_str.str
    lda #>str2
    sta.z print_str.str+1
    jsr print_str
    jmp __b5
    // mul16u_error::@5
  __b5:
    // [180] print_ulong::dw#1 = mul16u_error::ms#0
    // [181] call print_ulong 
    // [277] phi from mul16u_error::@5 to print_ulong [phi:mul16u_error::@5->print_ulong]
  print_ulong_from___b5:
    // [277] phi print_char_cursor#141 = print_char_cursor#1 [phi:mul16u_error::@5->print_ulong#0] -- register_copy 
    // [277] phi print_ulong::dw#4 = print_ulong::dw#1 [phi:mul16u_error::@5->print_ulong#1] -- register_copy 
    jsr print_ulong
    // [182] phi from mul16u_error::@5 to mul16u_error::@6 [phi:mul16u_error::@5->mul16u_error::@6]
  __b6_from___b5:
    jmp __b6
    // mul16u_error::@6
  __b6:
    // [183] call print_str 
    // [139] phi from mul16u_error::@6 to print_str [phi:mul16u_error::@6->print_str]
  print_str_from___b6:
    // [139] phi print_char_cursor#157 = print_char_cursor#21 [phi:mul16u_error::@6->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = str3 [phi:mul16u_error::@6->print_str#1] -- pbuz1=pbuc1 
    lda #<str3
    sta.z print_str.str
    lda #>str3
    sta.z print_str.str+1
    jsr print_str
    jmp __b7
    // mul16u_error::@7
  __b7:
    // [184] print_ulong::dw#2 = mul16u_error::mn#0 -- vduz1=vduz2 
    lda.z mn
    sta.z print_ulong.dw
    lda.z mn+1
    sta.z print_ulong.dw+1
    lda.z mn+2
    sta.z print_ulong.dw+2
    lda.z mn+3
    sta.z print_ulong.dw+3
    // [185] call print_ulong 
    // [277] phi from mul16u_error::@7 to print_ulong [phi:mul16u_error::@7->print_ulong]
  print_ulong_from___b7:
    // [277] phi print_char_cursor#141 = print_char_cursor#1 [phi:mul16u_error::@7->print_ulong#0] -- register_copy 
    // [277] phi print_ulong::dw#4 = print_ulong::dw#2 [phi:mul16u_error::@7->print_ulong#1] -- register_copy 
    jsr print_ulong
    // [186] phi from mul16u_error::@7 to mul16u_error::@8 [phi:mul16u_error::@7->mul16u_error::@8]
  __b8_from___b7:
    jmp __b8
    // mul16u_error::@8
  __b8:
    // [187] call print_str 
    // [139] phi from mul16u_error::@8 to print_str [phi:mul16u_error::@8->print_str]
  print_str_from___b8:
    // [139] phi print_char_cursor#157 = print_char_cursor#21 [phi:mul16u_error::@8->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = str4 [phi:mul16u_error::@8->print_str#1] -- pbuz1=pbuc1 
    lda #<str4
    sta.z print_str.str
    lda #>str4
    sta.z print_str.str+1
    jsr print_str
    jmp __b9
    // mul16u_error::@9
  __b9:
    // [188] print_ulong::dw#3 = mul16u_error::mf#0 -- vduz1=vduz2 
    lda.z mf
    sta.z print_ulong.dw
    lda.z mf+1
    sta.z print_ulong.dw+1
    lda.z mf+2
    sta.z print_ulong.dw+2
    lda.z mf+3
    sta.z print_ulong.dw+3
    // [189] call print_ulong 
    // [277] phi from mul16u_error::@9 to print_ulong [phi:mul16u_error::@9->print_ulong]
  print_ulong_from___b9:
    // [277] phi print_char_cursor#141 = print_char_cursor#1 [phi:mul16u_error::@9->print_ulong#0] -- register_copy 
    // [277] phi print_ulong::dw#4 = print_ulong::dw#3 [phi:mul16u_error::@9->print_ulong#1] -- register_copy 
    jsr print_ulong
    // [190] phi from mul16u_error::@9 to mul16u_error::@10 [phi:mul16u_error::@9->mul16u_error::@10]
  __b10_from___b9:
    jmp __b10
    // mul16u_error::@10
  __b10:
    // [191] call print_ln 
    // [193] phi from mul16u_error::@10 to print_ln [phi:mul16u_error::@10->print_ln]
  print_ln_from___b10:
    // [193] phi print_char_cursor#136 = print_char_cursor#21 [phi:mul16u_error::@10->print_ln#0] -- register_copy 
    // [193] phi print_line_cursor#45 = print_screen#0 [phi:mul16u_error::@10->print_ln#1] -- pbuz1=pbuc1 
    lda #<print_screen
    sta.z print_line_cursor
    lda #>print_screen
    sta.z print_line_cursor+1
    jsr print_ln
    jmp __breturn
    // mul16u_error::@return
  __breturn:
    // [192] return 
    rts
    str: .text "multiply mismatch "
    .byte 0
}
  // print_ln
// Print a newline
print_ln: {
    // [194] phi from print_ln print_ln::@1 to print_ln::@1 [phi:print_ln/print_ln::@1->print_ln::@1]
  __b1_from_print_ln:
  __b1_from___b1:
    // [194] phi print_line_cursor#23 = print_line_cursor#45 [phi:print_ln/print_ln::@1->print_ln::@1#0] -- register_copy 
    jmp __b1
    // print_ln::@1
  __b1:
    // [195] print_line_cursor#0 = print_line_cursor#23 + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z print_line_cursor
    sta.z print_line_cursor
    bcc !+
    inc.z print_line_cursor+1
  !:
    // [196] if(print_line_cursor#0<print_char_cursor#136) goto print_ln::@1 -- pbuz1_lt_pbuz2_then_la1 
    lda.z print_line_cursor+1
    cmp.z print_char_cursor+1
    bcc __b1_from___b1
    bne !+
    lda.z print_line_cursor
    cmp.z print_char_cursor
    bcc __b1_from___b1
  !:
    jmp __breturn
    // print_ln::@return
  __breturn:
    // [197] return 
    rts
}
  // muls16s
// Slow multiplication of signed words
// Perform a signed multiplication by repeated addition/subtraction
// muls16s(signed word zp(4) a, signed word zp(6) b)
muls16s: {
    .label m = 8
    .label j = $1c
    .label return = 8
    .label i = $18
    .label a = 4
    .label b = 6
    // [198] if(muls16s::a#0<0) goto muls16s::@5 -- vwsz1_lt_0_then_la1 
    lda.z a+1
    bmi __b5_from_muls16s
    jmp __b2
    // muls16s::@2
  __b2:
    // [199] if(muls16s::a#0<=0) goto muls16s::@1 -- vwsz1_le_0_then_la1 
    lda.z a+1
    bmi __b1_from___b2
    bne !+
    lda.z a
    beq __b1_from___b2
  !:
    // [200] phi from muls16s::@2 to muls16s::@3 [phi:muls16s::@2->muls16s::@3]
  __b3_from___b2:
    // [200] phi muls16s::m#3 = 0 [phi:muls16s::@2->muls16s::@3#0] -- vdsz1=vdsc1 
    lda #<0
    sta.z m
    lda #>0
    sta.z m+1
    lda #<0>>$10
    sta.z m+2
    lda #>0>>$10
    sta.z m+3
    // [200] phi muls16s::j#2 = 0 [phi:muls16s::@2->muls16s::@3#1] -- vwsz1=vwsc1 
    lda #<0
    sta.z j
    lda #>0
    sta.z j+1
    jmp __b3
    // muls16s::@3
  __b3:
    // [201] if(muls16s::j#2!=muls16s::a#0) goto muls16s::@4 -- vwsz1_neq_vwsz2_then_la1 
    lda.z j+1
    cmp.z a+1
    bne __b4
    lda.z j
    cmp.z a
    bne __b4
    // [202] phi from muls16s::@3 muls16s::@5 to muls16s::@1 [phi:muls16s::@3/muls16s::@5->muls16s::@1]
  __b1_from___b3:
  __b1_from___b5:
    // [202] phi muls16s::return#0 = muls16s::m#3 [phi:muls16s::@3/muls16s::@5->muls16s::@1#0] -- register_copy 
    jmp __b1
    // [202] phi from muls16s::@2 to muls16s::@1 [phi:muls16s::@2->muls16s::@1]
  __b1_from___b2:
    // [202] phi muls16s::return#0 = 0 [phi:muls16s::@2->muls16s::@1#0] -- vdsz1=vdsc1 
    lda #<0
    sta.z return
    lda #>0
    sta.z return+1
    lda #<0>>$10
    sta.z return+2
    lda #>0>>$10
    sta.z return+3
    jmp __b1
    // muls16s::@1
  __b1:
    jmp __breturn
    // muls16s::@return
  __breturn:
    // [203] return 
    rts
    // muls16s::@4
  __b4:
    // [204] muls16s::m#1 = muls16s::m#3 + muls16s::b#0 -- vdsz1=vdsz1_plus_vwsz2 
    lda.z b+1
    ora #$7f
    bmi !+
    lda #0
  !:
    sta.z $ff
    lda.z m
    clc
    adc.z b
    sta.z m
    lda.z m+1
    adc.z b+1
    sta.z m+1
    lda.z m+2
    adc.z $ff
    sta.z m+2
    lda.z m+3
    adc.z $ff
    sta.z m+3
    // [205] muls16s::j#1 = ++ muls16s::j#2 -- vwsz1=_inc_vwsz1 
    inc.z j
    bne !+
    inc.z j+1
  !:
    // [200] phi from muls16s::@4 to muls16s::@3 [phi:muls16s::@4->muls16s::@3]
  __b3_from___b4:
    // [200] phi muls16s::m#3 = muls16s::m#1 [phi:muls16s::@4->muls16s::@3#0] -- register_copy 
    // [200] phi muls16s::j#2 = muls16s::j#1 [phi:muls16s::@4->muls16s::@3#1] -- register_copy 
    jmp __b3
    // [206] phi from muls16s to muls16s::@5 [phi:muls16s->muls16s::@5]
  __b5_from_muls16s:
    // [206] phi muls16s::m#5 = 0 [phi:muls16s->muls16s::@5#0] -- vdsz1=vdsc1 
    lda #<0
    sta.z m
    lda #>0
    sta.z m+1
    lda #<0>>$10
    sta.z m+2
    lda #>0>>$10
    sta.z m+3
    // [206] phi muls16s::i#2 = 0 [phi:muls16s->muls16s::@5#1] -- vwsz1=vwsc1 
    lda #<0
    sta.z i
    lda #>0
    sta.z i+1
    jmp __b5
    // muls16s::@5
  __b5:
    // [207] if(muls16s::i#2!=muls16s::a#0) goto muls16s::@6 -- vwsz1_neq_vwsz2_then_la1 
    lda.z i+1
    cmp.z a+1
    bne __b6
    lda.z i
    cmp.z a
    bne __b6
    jmp __b1_from___b5
    // muls16s::@6
  __b6:
    // [208] muls16s::m#2 = muls16s::m#5 - muls16s::b#0 -- vdsz1=vdsz1_minus_vwsz2 
    lda.z b+1
    ora #$7f
    bmi !+
    lda #0
  !:
    sta.z $ff
    sec
    lda.z m
    sbc.z b
    sta.z m
    lda.z m+1
    sbc.z b+1
    sta.z m+1
    lda.z m+2
    sbc.z $ff
    sta.z m+2
    lda.z m+3
    sbc.z $ff
    sta.z m+3
    // [209] muls16s::i#1 = -- muls16s::i#2 -- vwsz1=_dec_vwsz1 
    lda.z i
    bne !+
    dec.z i+1
  !:
    dec.z i
    // [206] phi from muls16s::@6 to muls16s::@5 [phi:muls16s::@6->muls16s::@5]
  __b5_from___b6:
    // [206] phi muls16s::m#5 = muls16s::m#2 [phi:muls16s::@6->muls16s::@5#0] -- register_copy 
    // [206] phi muls16s::i#2 = muls16s::i#1 [phi:muls16s::@6->muls16s::@5#1] -- register_copy 
    jmp __b5
}
  // mul16s
// Multiply of two signed ints to a signed long
// Fixes offsets introduced by using unsigned multiplication
// mul16s(signed word zp(4) a, signed word zp(6) b)
mul16s: {
    .label __6 = $18
    .label __9 = $1a
    .label __11 = $18
    .label __12 = $1a
    .label m = $c
    .label return = $c
    .label a = 4
    .label b = 6
    // [210] mul16u::a#1 = (word)mul16s::a#0 -- vwuz1=vwuz2 
    lda.z a
    sta.z mul16u.a
    lda.z a+1
    sta.z mul16u.a+1
    // [211] mul16u::b#0 = (word)mul16s::b#0 -- vwuz1=vwuz2 
    lda.z b
    sta.z mul16u.b
    lda.z b+1
    sta.z mul16u.b+1
    // [212] call mul16u 
    // [153] phi from mul16s to mul16u [phi:mul16s->mul16u]
  mul16u_from_mul16s:
    // [153] phi mul16u::a#6 = mul16u::a#1 [phi:mul16s->mul16u#0] -- register_copy 
    // [153] phi mul16u::b#2 = mul16u::b#0 [phi:mul16s->mul16u#1] -- register_copy 
    jsr mul16u
    // [213] mul16u::return#2 = mul16u::res#2
    jmp __b5
    // mul16s::@5
  __b5:
    // [214] mul16s::m#0 = mul16u::return#2
    // [215] if(mul16s::a#0>=0) goto mul16s::@1 -- vwsz1_ge_0_then_la1 
    lda.z a+1
    bpl __b1_from___b5
    jmp __b3
    // mul16s::@3
  __b3:
    // [216] mul16s::$6 = > mul16s::m#0 -- vwuz1=_hi_vduz2 
    lda.z m+2
    sta.z __6
    lda.z m+3
    sta.z __6+1
    // [217] mul16s::$11 = mul16s::$6 - (word)mul16s::b#0 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z __11
    sec
    sbc.z b
    sta.z __11
    lda.z __11+1
    sbc.z b+1
    sta.z __11+1
    // [218] mul16s::m#1 = mul16s::m#0 hi= mul16s::$11 -- vduz1=vduz1_sethi_vwuz2 
    lda.z __11
    sta.z m+2
    lda.z __11+1
    sta.z m+3
    // [219] phi from mul16s::@3 mul16s::@5 to mul16s::@1 [phi:mul16s::@3/mul16s::@5->mul16s::@1]
  __b1_from___b3:
  __b1_from___b5:
    // [219] phi mul16s::m#5 = mul16s::m#1 [phi:mul16s::@3/mul16s::@5->mul16s::@1#0] -- register_copy 
    jmp __b1
    // mul16s::@1
  __b1:
    // [220] if(mul16s::b#0>=0) goto mul16s::@2 -- vwsz1_ge_0_then_la1 
    lda.z b+1
    bpl __b2_from___b1
    jmp __b4
    // mul16s::@4
  __b4:
    // [221] mul16s::$9 = > mul16s::m#5 -- vwuz1=_hi_vduz2 
    lda.z m+2
    sta.z __9
    lda.z m+3
    sta.z __9+1
    // [222] mul16s::$12 = mul16s::$9 - (word)mul16s::a#0 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z __12
    sec
    sbc.z a
    sta.z __12
    lda.z __12+1
    sbc.z a+1
    sta.z __12+1
    // [223] mul16s::m#2 = mul16s::m#5 hi= mul16s::$12 -- vduz1=vduz1_sethi_vwuz2 
    lda.z __12
    sta.z m+2
    lda.z __12+1
    sta.z m+3
    // [224] phi from mul16s::@1 mul16s::@4 to mul16s::@2 [phi:mul16s::@1/mul16s::@4->mul16s::@2]
  __b2_from___b1:
  __b2_from___b4:
    // [224] phi mul16s::m#4 = mul16s::m#5 [phi:mul16s::@1/mul16s::@4->mul16s::@2#0] -- register_copy 
    jmp __b2
    // mul16s::@2
  __b2:
    // [225] mul16s::return#0 = (signed dword)mul16s::m#4
    jmp __breturn
    // mul16s::@return
  __breturn:
    // [226] return 
    rts
}
  // mulf16s
// Fast multiply two signed ints to a signed double unsigned int result
// Fixes offsets introduced by using unsigned multiplication
// mulf16s(signed word zp(4) a, signed word zp(6) b)
mulf16s: {
    .label __6 = $1a
    .label __9 = $1c
    .label __11 = $1a
    .label __12 = $1c
    .label m = $12
    .label return = $12
    .label a = 4
    .label b = 6
    // [227] mulf16u::a#0 = (word)mulf16s::a#0 -- vwuz1=vwuz2 
    lda.z a
    sta.z mulf16u.a
    lda.z a+1
    sta.z mulf16u.a+1
    // [228] mulf16u::b#0 = (word)mulf16s::b#0 -- vwuz1=vwuz2 
    lda.z b
    sta.z mulf16u.b
    lda.z b+1
    sta.z mulf16u.b+1
    // [229] call mulf16u 
    // [164] phi from mulf16s to mulf16u [phi:mulf16s->mulf16u]
  mulf16u_from_mulf16s:
    // [164] phi mulf16u::b#2 = mulf16u::b#0 [phi:mulf16s->mulf16u#0] -- register_copy 
    // [164] phi mulf16u::a#2 = mulf16u::a#0 [phi:mulf16s->mulf16u#1] -- register_copy 
    jsr mulf16u
    // [230] mulf16u::return#2 = mulf16u::return#0
    jmp __b5
    // mulf16s::@5
  __b5:
    // [231] mulf16s::m#0 = mulf16u::return#2
    // [232] if(mulf16s::a#0>=0) goto mulf16s::@1 -- vwsz1_ge_0_then_la1 
    lda.z a+1
    bpl __b1_from___b5
    jmp __b3
    // mulf16s::@3
  __b3:
    // [233] mulf16s::$6 = > mulf16s::m#0 -- vwuz1=_hi_vduz2 
    lda.z m+2
    sta.z __6
    lda.z m+3
    sta.z __6+1
    // [234] mulf16s::$11 = mulf16s::$6 - (word)mulf16s::b#0 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z __11
    sec
    sbc.z b
    sta.z __11
    lda.z __11+1
    sbc.z b+1
    sta.z __11+1
    // [235] mulf16s::m#1 = mulf16s::m#0 hi= mulf16s::$11 -- vduz1=vduz1_sethi_vwuz2 
    lda.z __11
    sta.z m+2
    lda.z __11+1
    sta.z m+3
    // [236] phi from mulf16s::@3 mulf16s::@5 to mulf16s::@1 [phi:mulf16s::@3/mulf16s::@5->mulf16s::@1]
  __b1_from___b3:
  __b1_from___b5:
    // [236] phi mulf16s::m#5 = mulf16s::m#1 [phi:mulf16s::@3/mulf16s::@5->mulf16s::@1#0] -- register_copy 
    jmp __b1
    // mulf16s::@1
  __b1:
    // [237] if(mulf16s::b#0>=0) goto mulf16s::@2 -- vwsz1_ge_0_then_la1 
    lda.z b+1
    bpl __b2_from___b1
    jmp __b4
    // mulf16s::@4
  __b4:
    // [238] mulf16s::$9 = > mulf16s::m#5 -- vwuz1=_hi_vduz2 
    lda.z m+2
    sta.z __9
    lda.z m+3
    sta.z __9+1
    // [239] mulf16s::$12 = mulf16s::$9 - (word)mulf16s::a#0 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z __12
    sec
    sbc.z a
    sta.z __12
    lda.z __12+1
    sbc.z a+1
    sta.z __12+1
    // [240] mulf16s::m#2 = mulf16s::m#5 hi= mulf16s::$12 -- vduz1=vduz1_sethi_vwuz2 
    lda.z __12
    sta.z m+2
    lda.z __12+1
    sta.z m+3
    // [241] phi from mulf16s::@1 mulf16s::@4 to mulf16s::@2 [phi:mulf16s::@1/mulf16s::@4->mulf16s::@2]
  __b2_from___b1:
  __b2_from___b4:
    // [241] phi mulf16s::m#4 = mulf16s::m#5 [phi:mulf16s::@1/mulf16s::@4->mulf16s::@2#0] -- register_copy 
    jmp __b2
    // mulf16s::@2
  __b2:
    // [242] mulf16s::return#0 = (signed dword)mulf16s::m#4
    jmp __breturn
    // mulf16s::@return
  __breturn:
    // [243] return 
    rts
}
  // mul16s_error
// mul16s_error(signed word zp(4) a, signed word zp(6) b, signed dword zp(8) ms, signed dword zp($c) mn, signed dword zp($12) mf)
mul16s_error: {
    .label a = 4
    .label b = 6
    .label ms = 8
    .label mn = $c
    .label mf = $12
    // [245] call print_str 
    // [139] phi from mul16s_error to print_str [phi:mul16s_error->print_str]
  print_str_from_mul16s_error:
    // [139] phi print_char_cursor#157 = print_char_cursor#1 [phi:mul16s_error->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = mul16s_error::str [phi:mul16s_error->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    jmp __b1
    // mul16s_error::@1
  __b1:
    // [246] print_sint::w#1 = mul16s_error::a#0 -- vwsz1=vwsz2 
    lda.z a
    sta.z print_sint.w
    lda.z a+1
    sta.z print_sint.w+1
    // [247] call print_sint 
    // [283] phi from mul16s_error::@1 to print_sint [phi:mul16s_error::@1->print_sint]
  print_sint_from___b1:
    // [283] phi print_sint::w#3 = print_sint::w#1 [phi:mul16s_error::@1->print_sint#0] -- register_copy 
    jsr print_sint
    // [248] phi from mul16s_error::@1 to mul16s_error::@2 [phi:mul16s_error::@1->mul16s_error::@2]
  __b2_from___b1:
    jmp __b2
    // mul16s_error::@2
  __b2:
    // [249] call print_str 
    // [139] phi from mul16s_error::@2 to print_str [phi:mul16s_error::@2->print_str]
  print_str_from___b2:
    // [139] phi print_char_cursor#157 = print_char_cursor#21 [phi:mul16s_error::@2->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = str1 [phi:mul16s_error::@2->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    jmp __b3
    // mul16s_error::@3
  __b3:
    // [250] print_sint::w#2 = mul16s_error::b#0 -- vwsz1=vwsz2 
    lda.z b
    sta.z print_sint.w
    lda.z b+1
    sta.z print_sint.w+1
    // [251] call print_sint 
    // [283] phi from mul16s_error::@3 to print_sint [phi:mul16s_error::@3->print_sint]
  print_sint_from___b3:
    // [283] phi print_sint::w#3 = print_sint::w#2 [phi:mul16s_error::@3->print_sint#0] -- register_copy 
    jsr print_sint
    // [252] phi from mul16s_error::@3 to mul16s_error::@4 [phi:mul16s_error::@3->mul16s_error::@4]
  __b4_from___b3:
    jmp __b4
    // mul16s_error::@4
  __b4:
    // [253] call print_str 
    // [139] phi from mul16s_error::@4 to print_str [phi:mul16s_error::@4->print_str]
  print_str_from___b4:
    // [139] phi print_char_cursor#157 = print_char_cursor#21 [phi:mul16s_error::@4->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = str2 [phi:mul16s_error::@4->print_str#1] -- pbuz1=pbuc1 
    lda #<str2
    sta.z print_str.str
    lda #>str2
    sta.z print_str.str+1
    jsr print_str
    jmp __b5
    // mul16s_error::@5
  __b5:
    // [254] print_slong::dw#1 = mul16s_error::ms#0
    // [255] call print_slong 
    // [294] phi from mul16s_error::@5 to print_slong [phi:mul16s_error::@5->print_slong]
  print_slong_from___b5:
    // [294] phi print_slong::dw#4 = print_slong::dw#1 [phi:mul16s_error::@5->print_slong#0] -- register_copy 
    jsr print_slong
    // [256] phi from mul16s_error::@5 to mul16s_error::@6 [phi:mul16s_error::@5->mul16s_error::@6]
  __b6_from___b5:
    jmp __b6
    // mul16s_error::@6
  __b6:
    // [257] call print_str 
    // [139] phi from mul16s_error::@6 to print_str [phi:mul16s_error::@6->print_str]
  print_str_from___b6:
    // [139] phi print_char_cursor#157 = print_char_cursor#21 [phi:mul16s_error::@6->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = str3 [phi:mul16s_error::@6->print_str#1] -- pbuz1=pbuc1 
    lda #<str3
    sta.z print_str.str
    lda #>str3
    sta.z print_str.str+1
    jsr print_str
    jmp __b7
    // mul16s_error::@7
  __b7:
    // [258] print_slong::dw#2 = mul16s_error::mn#0 -- vdsz1=vdsz2 
    lda.z mn
    sta.z print_slong.dw
    lda.z mn+1
    sta.z print_slong.dw+1
    lda.z mn+2
    sta.z print_slong.dw+2
    lda.z mn+3
    sta.z print_slong.dw+3
    // [259] call print_slong 
    // [294] phi from mul16s_error::@7 to print_slong [phi:mul16s_error::@7->print_slong]
  print_slong_from___b7:
    // [294] phi print_slong::dw#4 = print_slong::dw#2 [phi:mul16s_error::@7->print_slong#0] -- register_copy 
    jsr print_slong
    // [260] phi from mul16s_error::@7 to mul16s_error::@8 [phi:mul16s_error::@7->mul16s_error::@8]
  __b8_from___b7:
    jmp __b8
    // mul16s_error::@8
  __b8:
    // [261] call print_str 
    // [139] phi from mul16s_error::@8 to print_str [phi:mul16s_error::@8->print_str]
  print_str_from___b8:
    // [139] phi print_char_cursor#157 = print_char_cursor#21 [phi:mul16s_error::@8->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = str4 [phi:mul16s_error::@8->print_str#1] -- pbuz1=pbuc1 
    lda #<str4
    sta.z print_str.str
    lda #>str4
    sta.z print_str.str+1
    jsr print_str
    jmp __b9
    // mul16s_error::@9
  __b9:
    // [262] print_slong::dw#3 = mul16s_error::mf#0 -- vdsz1=vdsz2 
    lda.z mf
    sta.z print_slong.dw
    lda.z mf+1
    sta.z print_slong.dw+1
    lda.z mf+2
    sta.z print_slong.dw+2
    lda.z mf+3
    sta.z print_slong.dw+3
    // [263] call print_slong 
    // [294] phi from mul16s_error::@9 to print_slong [phi:mul16s_error::@9->print_slong]
  print_slong_from___b9:
    // [294] phi print_slong::dw#4 = print_slong::dw#3 [phi:mul16s_error::@9->print_slong#0] -- register_copy 
    jsr print_slong
    // [264] phi from mul16s_error::@9 to mul16s_error::@10 [phi:mul16s_error::@9->mul16s_error::@10]
  __b10_from___b9:
    jmp __b10
    // mul16s_error::@10
  __b10:
    // [265] call print_ln 
    // [193] phi from mul16s_error::@10 to print_ln [phi:mul16s_error::@10->print_ln]
  print_ln_from___b10:
    // [193] phi print_char_cursor#136 = print_char_cursor#21 [phi:mul16s_error::@10->print_ln#0] -- register_copy 
    // [193] phi print_line_cursor#45 = print_line_cursor#0 [phi:mul16s_error::@10->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __breturn
    // mul16s_error::@return
  __breturn:
    // [266] return 
    rts
    str: .text "signed word multiply mismatch "
    .byte 0
}
  // print_char
// Print a single char
// print_char(byte register(A) ch)
print_char: {
    // [268] *print_char_cursor#89 = print_char::ch#7 -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (print_char_cursor),y
    // [269] print_char_cursor#21 = ++ print_char_cursor#89 -- pbuz1=_inc_pbuz1 
    inc.z print_char_cursor
    bne !+
    inc.z print_char_cursor+1
  !:
    jmp __breturn
    // print_char::@return
  __breturn:
    // [270] return 
    rts
}
  // print_uint
// Print a unsigned int as HEX
// print_uint(word zp($18) w)
print_uint: {
    .label w = $18
    // [272] print_uchar::b#0 = > print_uint::w#5 -- vbuxx=_hi_vwuz1 
    ldx.z w+1
    // [273] call print_uchar 
    // [305] phi from print_uint to print_uchar [phi:print_uint->print_uchar]
  print_uchar_from_print_uint:
    // [305] phi print_char_cursor#145 = print_char_cursor#140 [phi:print_uint->print_uchar#0] -- register_copy 
    // [305] phi print_uchar::b#2 = print_uchar::b#0 [phi:print_uint->print_uchar#1] -- register_copy 
    jsr print_uchar
    jmp __b1
    // print_uint::@1
  __b1:
    // [274] print_uchar::b#1 = < print_uint::w#5 -- vbuxx=_lo_vwuz1 
    ldx.z w
    // [275] call print_uchar 
    // [305] phi from print_uint::@1 to print_uchar [phi:print_uint::@1->print_uchar]
  print_uchar_from___b1:
    // [305] phi print_char_cursor#145 = print_char_cursor#21 [phi:print_uint::@1->print_uchar#0] -- register_copy 
    // [305] phi print_uchar::b#2 = print_uchar::b#1 [phi:print_uint::@1->print_uchar#1] -- register_copy 
    jsr print_uchar
    jmp __breturn
    // print_uint::@return
  __breturn:
    // [276] return 
    rts
}
  // print_ulong
// Print a unsigned long as HEX
// print_ulong(dword zp(8) dw)
print_ulong: {
    .label dw = 8
    // [278] print_uint::w#1 = > print_ulong::dw#4 -- vwuz1=_hi_vduz2 
    lda.z dw+2
    sta.z print_uint.w
    lda.z dw+3
    sta.z print_uint.w+1
    // [279] call print_uint 
    // [271] phi from print_ulong to print_uint [phi:print_ulong->print_uint]
  print_uint_from_print_ulong:
    // [271] phi print_char_cursor#140 = print_char_cursor#141 [phi:print_ulong->print_uint#0] -- register_copy 
    // [271] phi print_uint::w#5 = print_uint::w#1 [phi:print_ulong->print_uint#1] -- register_copy 
    jsr print_uint
    jmp __b1
    // print_ulong::@1
  __b1:
    // [280] print_uint::w#2 = < print_ulong::dw#4 -- vwuz1=_lo_vduz2 
    lda.z dw
    sta.z print_uint.w
    lda.z dw+1
    sta.z print_uint.w+1
    // [281] call print_uint 
    // [271] phi from print_ulong::@1 to print_uint [phi:print_ulong::@1->print_uint]
  print_uint_from___b1:
    // [271] phi print_char_cursor#140 = print_char_cursor#21 [phi:print_ulong::@1->print_uint#0] -- register_copy 
    // [271] phi print_uint::w#5 = print_uint::w#2 [phi:print_ulong::@1->print_uint#1] -- register_copy 
    jsr print_uint
    jmp __breturn
    // print_ulong::@return
  __breturn:
    // [282] return 
    rts
}
  // print_sint
// Print a signed int as HEX
// print_sint(signed word zp($18) w)
print_sint: {
    .label w = $18
    // [284] if(print_sint::w#3<0) goto print_sint::@1 -- vwsz1_lt_0_then_la1 
    lda.z w+1
    bmi __b1_from_print_sint
    // [285] phi from print_sint to print_sint::@3 [phi:print_sint->print_sint::@3]
  __b3_from_print_sint:
    jmp __b3
    // print_sint::@3
  __b3:
    // [286] call print_char 
    // [267] phi from print_sint::@3 to print_char [phi:print_sint::@3->print_char]
  print_char_from___b3:
    // [267] phi print_char_cursor#89 = print_char_cursor#1 [phi:print_sint::@3->print_char#0] -- register_copy 
    // [267] phi print_char::ch#7 = ' ' [phi:print_sint::@3->print_char#1] -- vbuaa=vbuc1 
    lda #' '
    jsr print_char
    // [287] phi from print_sint::@3 print_sint::@4 to print_sint::@2 [phi:print_sint::@3/print_sint::@4->print_sint::@2]
  __b2_from___b3:
  __b2_from___b4:
    // [287] phi print_sint::w#5 = print_sint::w#3 [phi:print_sint::@3/print_sint::@4->print_sint::@2#0] -- register_copy 
    jmp __b2
    // print_sint::@2
  __b2:
    // [288] print_uint::w#0 = (word)print_sint::w#5
    // [289] call print_uint 
    // [271] phi from print_sint::@2 to print_uint [phi:print_sint::@2->print_uint]
  print_uint_from___b2:
    // [271] phi print_char_cursor#140 = print_char_cursor#21 [phi:print_sint::@2->print_uint#0] -- register_copy 
    // [271] phi print_uint::w#5 = print_uint::w#0 [phi:print_sint::@2->print_uint#1] -- register_copy 
    jsr print_uint
    jmp __breturn
    // print_sint::@return
  __breturn:
    // [290] return 
    rts
    // [291] phi from print_sint to print_sint::@1 [phi:print_sint->print_sint::@1]
  __b1_from_print_sint:
    jmp __b1
    // print_sint::@1
  __b1:
    // [292] call print_char 
    // [267] phi from print_sint::@1 to print_char [phi:print_sint::@1->print_char]
  print_char_from___b1:
    // [267] phi print_char_cursor#89 = print_char_cursor#1 [phi:print_sint::@1->print_char#0] -- register_copy 
    // [267] phi print_char::ch#7 = '-' [phi:print_sint::@1->print_char#1] -- vbuaa=vbuc1 
    lda #'-'
    jsr print_char
    jmp __b4
    // print_sint::@4
  __b4:
    // [293] print_sint::w#0 = - print_sint::w#3 -- vwsz1=_neg_vwsz1 
    sec
    lda #0
    sbc.z w
    sta.z w
    lda #0
    sbc.z w+1
    sta.z w+1
    jmp __b2_from___b4
}
  // print_slong
// Print a signed long as HEX
// print_slong(signed dword zp(8) dw)
print_slong: {
    .label dw = 8
    // [295] if(print_slong::dw#4<0) goto print_slong::@1 -- vdsz1_lt_0_then_la1 
    lda.z dw+3
    bmi __b1_from_print_slong
    // [296] phi from print_slong to print_slong::@3 [phi:print_slong->print_slong::@3]
  __b3_from_print_slong:
    jmp __b3
    // print_slong::@3
  __b3:
    // [297] call print_char 
    // [267] phi from print_slong::@3 to print_char [phi:print_slong::@3->print_char]
  print_char_from___b3:
    // [267] phi print_char_cursor#89 = print_char_cursor#1 [phi:print_slong::@3->print_char#0] -- register_copy 
    // [267] phi print_char::ch#7 = ' ' [phi:print_slong::@3->print_char#1] -- vbuaa=vbuc1 
    lda #' '
    jsr print_char
    // [298] phi from print_slong::@3 print_slong::@4 to print_slong::@2 [phi:print_slong::@3/print_slong::@4->print_slong::@2]
  __b2_from___b3:
  __b2_from___b4:
    // [298] phi print_slong::dw#6 = print_slong::dw#4 [phi:print_slong::@3/print_slong::@4->print_slong::@2#0] -- register_copy 
    jmp __b2
    // print_slong::@2
  __b2:
    // [299] print_ulong::dw#0 = (dword)print_slong::dw#6
    // [300] call print_ulong 
    // [277] phi from print_slong::@2 to print_ulong [phi:print_slong::@2->print_ulong]
  print_ulong_from___b2:
    // [277] phi print_char_cursor#141 = print_char_cursor#21 [phi:print_slong::@2->print_ulong#0] -- register_copy 
    // [277] phi print_ulong::dw#4 = print_ulong::dw#0 [phi:print_slong::@2->print_ulong#1] -- register_copy 
    jsr print_ulong
    jmp __breturn
    // print_slong::@return
  __breturn:
    // [301] return 
    rts
    // [302] phi from print_slong to print_slong::@1 [phi:print_slong->print_slong::@1]
  __b1_from_print_slong:
    jmp __b1
    // print_slong::@1
  __b1:
    // [303] call print_char 
    // [267] phi from print_slong::@1 to print_char [phi:print_slong::@1->print_char]
  print_char_from___b1:
    // [267] phi print_char_cursor#89 = print_char_cursor#1 [phi:print_slong::@1->print_char#0] -- register_copy 
    // [267] phi print_char::ch#7 = '-' [phi:print_slong::@1->print_char#1] -- vbuaa=vbuc1 
    lda #'-'
    jsr print_char
    jmp __b4
    // print_slong::@4
  __b4:
    // [304] print_slong::dw#0 = - print_slong::dw#4 -- vdsz1=_neg_vdsz1 
    sec
    lda.z dw
    eor #$ff
    adc #0
    sta.z dw
    lda.z dw+1
    eor #$ff
    adc #0
    sta.z dw+1
    lda.z dw+2
    eor #$ff
    adc #0
    sta.z dw+2
    lda.z dw+3
    eor #$ff
    adc #0
    sta.z dw+3
    jmp __b2_from___b4
}
  // print_uchar
// Print a char as HEX
// print_uchar(byte register(X) b)
print_uchar: {
    // [306] print_uchar::$0 = print_uchar::b#2 >> 4 -- vbuaa=vbuxx_ror_4 
    txa
    lsr
    lsr
    lsr
    lsr
    // [307] print_char::ch#5 = print_hextab[print_uchar::$0] -- vbuaa=pbuc1_derefidx_vbuaa 
    tay
    lda print_hextab,y
    // [308] call print_char 
  // Table of hexadecimal digits
    // [267] phi from print_uchar to print_char [phi:print_uchar->print_char]
  print_char_from_print_uchar:
    // [267] phi print_char_cursor#89 = print_char_cursor#145 [phi:print_uchar->print_char#0] -- register_copy 
    // [267] phi print_char::ch#7 = print_char::ch#5 [phi:print_uchar->print_char#1] -- register_copy 
    jsr print_char
    jmp __b1
    // print_uchar::@1
  __b1:
    // [309] print_uchar::$2 = print_uchar::b#2 & $f -- vbuxx=vbuxx_band_vbuc1 
    lda #$f
    axs #0
    // [310] print_char::ch#6 = print_hextab[print_uchar::$2] -- vbuaa=pbuc1_derefidx_vbuxx 
    lda print_hextab,x
    // [311] call print_char 
    // [267] phi from print_uchar::@1 to print_char [phi:print_uchar::@1->print_char]
  print_char_from___b1:
    // [267] phi print_char_cursor#89 = print_char_cursor#21 [phi:print_uchar::@1->print_char#0] -- register_copy 
    // [267] phi print_char::ch#7 = print_char::ch#6 [phi:print_uchar::@1->print_char#1] -- register_copy 
    jsr print_char
    jmp __breturn
    // print_uchar::@return
  __breturn:
    // [312] return 
    rts
}
  // File Data
  print_hextab: .text "0123456789abcdef"
  // mulf_sqr tables will contain f(x)=int(x*x/4) and g(x) = f(x-255).
  // <f(x) = <(( x * x )/4)
  .align $100
  mulf_sqr1_lo: .fill $200, 0
  // >f(x) = >(( x * x )/4)
  .align $100
  mulf_sqr1_hi: .fill $200, 0
  // <g(x) =  <((( x - 255) * ( x - 255 ))/4)
  .align $100
  mulf_sqr2_lo: .fill $200, 0
  // >g(x) = >((( x - 255) * ( x - 255 ))/4)
  .align $100
  mulf_sqr2_hi: .fill $200, 0
  str: .text "."
  .byte 0
  str1: .text "*"
  .byte 0
  str2: .text " slow:"
  .byte 0
  str3: .text " / normal:"
  .byte 0
  str4: .text " / fast:"
  .byte 0

ASSEMBLER OPTIMIZATIONS
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b5
Removing instruction jmp __b7
Removing instruction jmp __breturn
Removing instruction jmp __b9
Removing instruction jmp __b8
Removing instruction jmp __b4
Removing instruction jmp __b3
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __b10
Removing instruction jmp __b11
Removing instruction jmp __b12
Removing instruction jmp __b6
Removing instruction jmp __b3
Removing instruction jmp __b15
Removing instruction jmp __b4
Removing instruction jmp __b7
Removing instruction jmp __breturn
Removing instruction jmp __b8
Removing instruction jmp __b9
Removing instruction jmp __b13
Removing instruction jmp __b14
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __b10
Removing instruction jmp __b11
Removing instruction jmp __b12
Removing instruction jmp __b6
Removing instruction jmp __b3
Removing instruction jmp __b15
Removing instruction jmp __b4
Removing instruction jmp __b7
Removing instruction jmp __breturn
Removing instruction jmp __b8
Removing instruction jmp __b9
Removing instruction jmp __b13
Removing instruction jmp __b14
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b2
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b4
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __b6
Removing instruction jmp __b7
Removing instruction jmp __b8
Removing instruction jmp __b9
Removing instruction jmp __b10
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b5
Removing instruction jmp __b5
Removing instruction jmp __b3
Removing instruction jmp __b1
Removing instruction jmp __b4
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b5
Removing instruction jmp __b3
Removing instruction jmp __b1
Removing instruction jmp __b4
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __b6
Removing instruction jmp __b7
Removing instruction jmp __b8
Removing instruction jmp __b9
Removing instruction jmp __b10
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b4
Removing instruction jmp __b3
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b4
Removing instruction jmp __b1
Removing instruction jmp __breturn
Succesful ASM optimization Pass5NextJumpElimination
Replacing instruction lda #<0 with TXA
Removing instruction lda #>0
Removing instruction lda #0
Removing instruction ldy #0
Removing instruction ldy #0
Removing instruction lda #<0
Removing instruction lda #>0
Removing instruction lda #<0
Removing instruction lda #>0
Removing instruction lda #>0
Removing instruction lda #>0
Removing instruction lda #>0
Removing instruction lda #>0
Removing instruction lda #>0
Removing instruction lda #>0
Removing instruction lda #>0
Removing instruction lda #>0
Removing instruction lda #>0
Succesful ASM optimization Pass5UnnecesaryLoadElimination
Replacing label __b9_from___b6 with __b8
Replacing label __b3_from___b2 with __b3
Replacing label __b15_from___b3 with __b4
Replacing label __b2_from___b5 with __b2
Replacing label __b1_from___b8 with __b1
Replacing label __b15_from___b3 with __b4
Replacing label __b2_from___b5 with __b2
Replacing label __b1_from___b8 with __b1
Replacing label __b1_from___b3 with __b1
Replacing label __b3_from___b2 with __b3
Replacing label __b1_from___b1 with __b1
Replacing label __b1_from___b1 with __b1
Replacing label __b1_from___b5 with __b1
Replacing label __b2_from___b1 with __b2
Replacing label __b1_from___b5 with __b1
Replacing label __b2_from___b1 with __b2
Replacing label __b1_from_print_sint with __b1
Replacing label __b2_from___b4 with __b2
Replacing label __b1_from_print_slong with __b1
Replacing label __b2_from___b4 with __b2
Removing instruction __b1_from_main:
Removing instruction mulf_init_from___b1:
Removing instruction __b2_from___b1:
Removing instruction mul16u_compare_from___b2:
Removing instruction __b3_from___b2:
Removing instruction __b9_from___b6:
Removing instruction __b9:
Removing instruction __b8_from___b9:
Removing instruction __b3_from___b2:
Removing instruction __b3_from___b4:
Removing instruction __b1_from___b8:
Removing instruction print_str_from___b1:
Removing instruction __b2_from___b5:
Removing instruction mulf16u_from___b11:
Removing instruction __b6_from___b12:
Removing instruction __b3_from___b6:
Removing instruction __b15_from___b3:
Removing instruction __b15:
Removing instruction __b4_from___b15:
Removing instruction __b9_from___b8:
Removing instruction print_ln_from___b9:
Removing instruction __b14_from___b13:
Removing instruction print_ln_from___b14:
Removing instruction __b1_from___b8:
Removing instruction print_str_from___b1:
Removing instruction __b2_from___b5:
Removing instruction __b6_from___b12:
Removing instruction __b3_from___b6:
Removing instruction __b15_from___b3:
Removing instruction __b15:
Removing instruction __b4_from___b15:
Removing instruction __b9_from___b8:
Removing instruction print_ln_from___b9:
Removing instruction __b14_from___b13:
Removing instruction print_ln_from___b14:
Removing instruction __b1_from_print_str:
Removing instruction __b1_from___b3:
Removing instruction __breturn:
Removing instruction __b3_from___b2:
Removing instruction __b3_from___b4:
Removing instruction print_uint_from___b1:
Removing instruction __b2_from___b1:
Removing instruction print_str_from___b2:
Removing instruction __b4_from___b3:
Removing instruction print_str_from___b4:
Removing instruction print_ulong_from___b5:
Removing instruction __b6_from___b5:
Removing instruction print_str_from___b6:
Removing instruction __b8_from___b7:
Removing instruction print_str_from___b8:
Removing instruction __b10_from___b9:
Removing instruction print_ln_from___b10:
Removing instruction __b1_from_print_ln:
Removing instruction __b1_from___b1:
Removing instruction __b1_from___b3:
Removing instruction __breturn:
Removing instruction __b1_from___b3:
Removing instruction __b1_from___b5:
Removing instruction __b2_from___b1:
Removing instruction __b2_from___b4:
Removing instruction __breturn:
Removing instruction __b1_from___b3:
Removing instruction __b1_from___b5:
Removing instruction __b2_from___b1:
Removing instruction __b2_from___b4:
Removing instruction __breturn:
Removing instruction __b2_from___b1:
Removing instruction print_str_from___b2:
Removing instruction __b4_from___b3:
Removing instruction print_str_from___b4:
Removing instruction print_slong_from___b5:
Removing instruction __b6_from___b5:
Removing instruction print_str_from___b6:
Removing instruction __b8_from___b7:
Removing instruction print_str_from___b8:
Removing instruction __b10_from___b9:
Removing instruction print_ln_from___b10:
Removing instruction __b3_from_print_sint:
Removing instruction print_char_from___b3:
Removing instruction __b2_from___b3:
Removing instruction __b2_from___b4:
Removing instruction print_uint_from___b2:
Removing instruction __b1_from_print_sint:
Removing instruction print_char_from___b1:
Removing instruction __b3_from_print_slong:
Removing instruction print_char_from___b3:
Removing instruction __b2_from___b3:
Removing instruction __b2_from___b4:
Removing instruction print_ulong_from___b2:
Removing instruction __b1_from_print_slong:
Removing instruction print_char_from___b1:
Succesful ASM optimization Pass5RedundantLabelElimination
Removing instruction print_cls_from_main:
Removing instruction __b1:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction memset_from_print_cls:
Removing instruction __breturn:
Removing instruction __b1_from_mulf_init:
Removing instruction __b5_from___b1:
Removing instruction __b7:
Removing instruction __breturn:
Removing instruction __b8_from___b6:
Removing instruction __b5_from___b8:
Removing instruction __b4:
Removing instruction __b1_from___b3:
Removing instruction __b1_from_mul16u_compare:
Removing instruction __b2_from___b1:
Removing instruction __b10:
Removing instruction mul16u_from___b10:
Removing instruction __b11:
Removing instruction __b12:
Removing instruction __b6:
Removing instruction __b4_from___b3:
Removing instruction __b7:
Removing instruction mul16u_error_from___b7:
Removing instruction __b8:
Removing instruction __b9:
Removing instruction __b13:
Removing instruction print_str_from___b13:
Removing instruction __b14:
Removing instruction __b1_from_mul16s_compare:
Removing instruction __b2_from___b1:
Removing instruction __b10:
Removing instruction __b11:
Removing instruction __b12:
Removing instruction __b6:
Removing instruction __b4_from___b3:
Removing instruction __b7:
Removing instruction mul16s_error_from___b7:
Removing instruction __b8:
Removing instruction __b9:
Removing instruction __b13:
Removing instruction print_str_from___b13:
Removing instruction __b14:
Removing instruction __b1_from_memset:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Removing instruction __breturn:
Removing instruction print_char_from___b2:
Removing instruction __b3:
Removing instruction __b2_from_muls16u:
Removing instruction __b1_from___b2:
Removing instruction __b2_from___b3:
Removing instruction __b1_from_mul16u:
Removing instruction __breturn:
Removing instruction __b4:
Removing instruction __b1_from___b3:
Removing instruction __breturn:
Removing instruction print_str_from_mul16u_error:
Removing instruction __b1:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction print_uint_from___b3:
Removing instruction __b4:
Removing instruction __b5:
Removing instruction __b6:
Removing instruction __b7:
Removing instruction print_ulong_from___b7:
Removing instruction __b8:
Removing instruction __b9:
Removing instruction print_ulong_from___b9:
Removing instruction __b10:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __b2:
Removing instruction __b3_from___b2:
Removing instruction __b3_from___b4:
Removing instruction __b5_from___b6:
Removing instruction mul16u_from_mul16s:
Removing instruction __b5:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction mulf16u_from_mulf16s:
Removing instruction __b5:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction print_str_from_mul16s_error:
Removing instruction __b1:
Removing instruction print_sint_from___b1:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction print_sint_from___b3:
Removing instruction __b4:
Removing instruction __b5:
Removing instruction __b6:
Removing instruction __b7:
Removing instruction print_slong_from___b7:
Removing instruction __b8:
Removing instruction __b9:
Removing instruction print_slong_from___b9:
Removing instruction __b10:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction print_uchar_from_print_uint:
Removing instruction __b1:
Removing instruction print_uchar_from___b1:
Removing instruction __breturn:
Removing instruction print_uint_from_print_ulong:
Removing instruction __b1:
Removing instruction print_uint_from___b1:
Removing instruction __breturn:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b4:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b4:
Removing instruction print_char_from_print_uchar:
Removing instruction __b1:
Removing instruction print_char_from___b1:
Removing instruction __breturn:
Succesful ASM optimization Pass5UnusedLabelElimination
Replacing jump to rts with rts in jmp __breturn
Replacing jump to rts with rts in jmp __breturn
Replacing jump to rts with rts in jmp __b1
Replacing jump to rts with rts in jmp __b1
Skipping double jump to __b1 in jmp __b1_from___b5
Succesful ASM optimization Pass5DoubleJumpElimination
Relabelling long label __b3_from___b12 to __b6
Relabelling long label __b3_from___b12 to __b6
Relabelling long label __b1_from_muls16u to __b4
Relabelling long label __b1_from___b5 to __b2
Relabelling long label __b1_from___b2 to __b7
Relabelling long label __b5_from_muls16s to __b8
Succesful ASM optimization Pass5RelabelLongLabels
Removing instruction jmp __b8
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __b4
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __b4
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction lda #<0
Removing instruction lda.z a+1
Succesful ASM optimization Pass5UnnecesaryLoadElimination
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __b1:
Removing instruction __b2:
Succesful ASM optimization Pass5UnusedLabelElimination
Replacing jump to rts with rts in jmp __b1
Succesful ASM optimization Pass5DoubleJumpElimination
Removing instruction __b1:
Succesful ASM optimization Pass5UnusedLabelElimination
Fixing long branch [231] bne __b1 to beq
Fixing long branch [346] bne __b1 to beq

FINAL SYMBOL TABLE
const byte* BG_COLOR = (byte*) 53281
const byte RADIX::BINARY = 2
const byte RADIX::DECIMAL = $a
const byte RADIX::HEXADECIMAL = $10
const byte RADIX::OCTAL = 8
void main()
label main::@1
label main::@2
label main::@3
label main::@return
void* memset(void* memset::str , byte memset::c , word memset::num)
label memset::@1
label memset::@2
label memset::@return
byte memset::c
const byte memset::c#0 c = ' '
byte* memset::dst
byte* memset::dst#1 dst zp[2]:28 2002.0
byte* memset::dst#2 dst zp[2]:28 1334.6666666666667
byte* memset::end
const byte* memset::end#0 end = (byte*)memset::str#0+memset::num#0
word memset::num
const word memset::num#0 num = $3e8
void* memset::return
void* memset::str
const void* memset::str#0 str = (void*)print_screen#0
signed dword mul16s(signed word mul16s::a , signed word mul16s::b)
word~ mul16s::$11 zp[2]:24 20002.0
word~ mul16s::$12 zp[2]:26 20002.0
word~ mul16s::$6 zp[2]:24 20002.0
word~ mul16s::$9 zp[2]:26 20002.0
label mul16s::@1
label mul16s::@2
label mul16s::@3
label mul16s::@4
label mul16s::@5
label mul16s::@return
signed word mul16s::a
signed word mul16s::a#0 a zp[2]:4 785.8571428571429
signed word mul16s::b
signed word mul16s::b#0 b zp[2]:6 1000.1818181818181
dword mul16s::m
dword mul16s::m#0 m zp[4]:12 10001.0
dword mul16s::m#1 m zp[4]:12 20002.0
dword mul16s::m#2 m zp[4]:12 20002.0
dword mul16s::m#4 m zp[4]:12 20002.0
dword mul16s::m#5 m zp[4]:12 12501.25
signed dword mul16s::return
signed dword mul16s::return#0 return zp[4]:12 3667.333333333333
signed dword mul16s::return#2 return zp[4]:12 2002.0
void mul16s_compare()
label mul16s_compare::@1
label mul16s_compare::@10
label mul16s_compare::@11
label mul16s_compare::@12
label mul16s_compare::@13
label mul16s_compare::@14
label mul16s_compare::@15
label mul16s_compare::@2
label mul16s_compare::@3
label mul16s_compare::@4
label mul16s_compare::@5
label mul16s_compare::@6
label mul16s_compare::@7
label mul16s_compare::@8
label mul16s_compare::@9
label mul16s_compare::@return
signed word mul16s_compare::a
signed word mul16s_compare::a#1 a zp[2]:4 176.44827586206898
signed word mul16s_compare::a#2 a zp[2]:4 2103.0
signed word mul16s_compare::a#6 a zp[2]:4 101.0
signed word mul16s_compare::b
signed word mul16s_compare::b#1 b zp[2]:6 176.44827586206898
signed word mul16s_compare::b#2 b zp[2]:6 1051.5
signed word mul16s_compare::b#6 b zp[2]:6 101.0
byte mul16s_compare::i
byte mul16s_compare::i#1 i zp[1]:3 151.5
byte mul16s_compare::i#12 i zp[1]:3 6.9655172413793105
byte mul16s_compare::j
byte mul16s_compare::j#1 reg byte y 1501.5
byte mul16s_compare::j#10 reg byte y 80.08
signed dword mul16s_compare::mf
signed dword mul16s_compare::mf#0 mf zp[4]:18 154.84615384615384
signed dword mul16s_compare::mn
signed dword mul16s_compare::mn#0 mn zp[4]:12 118.41176470588235
signed dword mul16s_compare::ms
signed dword mul16s_compare::ms#0 ms zp[4]:8 143.52380952380952
byte mul16s_compare::ok
byte mul16s_compare::ok#3 reg byte x 2002.0
byte mul16s_compare::ok#4 reg byte x 333.6666666666667
const byte* mul16s_compare::str1[$24]  = "signed word multiply results match!"
void mul16s_error(signed word mul16s_error::a , signed word mul16s_error::b , signed dword mul16s_error::ms , signed dword mul16s_error::mn , signed dword mul16s_error::mf)
label mul16s_error::@1
label mul16s_error::@10
label mul16s_error::@2
label mul16s_error::@3
label mul16s_error::@4
label mul16s_error::@5
label mul16s_error::@6
label mul16s_error::@7
label mul16s_error::@8
label mul16s_error::@9
label mul16s_error::@return
signed word mul16s_error::a
signed word mul16s_error::a#0 a zp[2]:4 16.0
signed word mul16s_error::b
signed word mul16s_error::b#0 b zp[2]:6 11.2
signed dword mul16s_error::mf
signed dword mul16s_error::mf#0 mf zp[4]:18 5.894736842105264
signed dword mul16s_error::mn
signed dword mul16s_error::mn#0 mn zp[4]:12 7.0
signed dword mul16s_error::ms
signed dword mul16s_error::ms#0 ms zp[4]:8 8.615384615384615
const byte* mul16s_error::str[$1f]  = "signed word multiply mismatch "
dword mul16u(word mul16u::a , word mul16u::b)
byte~ mul16u::$1 reg byte a 2.00000002E8
label mul16u::@1
label mul16u::@2
label mul16u::@3
label mul16u::@4
label mul16u::@return
word mul16u::a
word mul16u::a#0 a zp[2]:28 1.00000001E8
word mul16u::a#1 a zp[2]:28 10001.0
word mul16u::a#2 a zp[2]:28 1001.0
word mul16u::a#3 a zp[2]:28 6.668333416666667E7
word mul16u::a#6 a zp[2]:28 55501.5
word mul16u::b
word mul16u::b#0 b zp[2]:26 20002.0
word mul16u::b#1 b zp[2]:26 2002.0
word mul16u::b#2 b zp[2]:26 11002.0
dword mul16u::mb
dword mul16u::mb#0 mb zp[4]:18 200002.0
dword mul16u::mb#1 mb zp[4]:18 2.00000002E8
dword mul16u::mb#2 mb zp[4]:18 4.287142914285715E7
dword mul16u::res
dword mul16u::res#1 res zp[4]:12 2.00000002E8
dword mul16u::res#2 res zp[4]:12 4.2858715E7
dword mul16u::res#6 res zp[4]:12 1.00000001E8
dword mul16u::return
dword mul16u::return#2 return zp[4]:12 20002.0
dword mul16u::return#3 return zp[4]:12 2002.0
void mul16u_compare()
label mul16u_compare::@1
label mul16u_compare::@10
label mul16u_compare::@11
label mul16u_compare::@12
label mul16u_compare::@13
label mul16u_compare::@14
label mul16u_compare::@15
label mul16u_compare::@2
label mul16u_compare::@3
label mul16u_compare::@4
label mul16u_compare::@5
label mul16u_compare::@6
label mul16u_compare::@7
label mul16u_compare::@8
label mul16u_compare::@9
label mul16u_compare::@return
word mul16u_compare::a
word mul16u_compare::a#1 a zp[2]:24 176.44827586206898
word mul16u_compare::a#2 a zp[2]:24 2103.0
word mul16u_compare::a#6 a zp[2]:24 101.0
word mul16u_compare::b
word mul16u_compare::b#1 b zp[2]:26 176.44827586206898
word mul16u_compare::b#2 b zp[2]:26 1051.5
word mul16u_compare::b#6 b zp[2]:26 101.0
byte mul16u_compare::i
byte mul16u_compare::i#1 i zp[1]:2 151.5
byte mul16u_compare::i#12 i zp[1]:2 6.9655172413793105
byte mul16u_compare::j
byte mul16u_compare::j#1 reg byte y 1501.5
byte mul16u_compare::j#10 reg byte y 80.08
dword mul16u_compare::mf
dword mul16u_compare::mf#0 mf zp[4]:18 154.84615384615384
dword mul16u_compare::mn
dword mul16u_compare::mn#0 mn zp[4]:12 118.41176470588235
dword mul16u_compare::ms
dword mul16u_compare::ms#0 ms zp[4]:8 143.52380952380952
byte mul16u_compare::ok
byte mul16u_compare::ok#3 reg byte x 2002.0
byte mul16u_compare::ok#4 reg byte x 333.6666666666667
const byte* mul16u_compare::str1[$1d]  = "word multiply results match!"
void mul16u_error(word mul16u_error::a , word mul16u_error::b , dword mul16u_error::ms , dword mul16u_error::mn , dword mul16u_error::mf)
label mul16u_error::@1
label mul16u_error::@10
label mul16u_error::@2
label mul16u_error::@3
label mul16u_error::@4
label mul16u_error::@5
label mul16u_error::@6
label mul16u_error::@7
label mul16u_error::@8
label mul16u_error::@9
label mul16u_error::@return
word mul16u_error::a
word mul16u_error::a#0 a zp[2]:24 16.0
word mul16u_error::b
word mul16u_error::b#0 b zp[2]:26 11.2
dword mul16u_error::mf
dword mul16u_error::mf#0 mf zp[4]:18 5.894736842105264
dword mul16u_error::mn
dword mul16u_error::mn#0 mn zp[4]:12 7.0
dword mul16u_error::ms
dword mul16u_error::ms#0 ms zp[4]:8 8.615384615384615
const byte* mul16u_error::str[$13]  = "multiply mismatch "
signed dword mulf16s(signed word mulf16s::a , signed word mulf16s::b)
word~ mulf16s::$11 zp[2]:26 20002.0
word~ mulf16s::$12 zp[2]:28 20002.0
word~ mulf16s::$6 zp[2]:26 20002.0
word~ mulf16s::$9 zp[2]:28 20002.0
label mulf16s::@1
label mulf16s::@2
label mulf16s::@3
label mulf16s::@4
label mulf16s::@5
label mulf16s::@return
signed word mulf16s::a
signed word mulf16s::a#0 a zp[2]:4 785.8571428571429
signed word mulf16s::b
signed word mulf16s::b#0 b zp[2]:6 1000.1818181818181
dword mulf16s::m
dword mulf16s::m#0 m zp[4]:18 10001.0
dword mulf16s::m#1 m zp[4]:18 20002.0
dword mulf16s::m#2 m zp[4]:18 20002.0
dword mulf16s::m#4 m zp[4]:18 20002.0
dword mulf16s::m#5 m zp[4]:18 12501.25
signed dword mulf16s::return
signed dword mulf16s::return#0 return zp[4]:18 3667.333333333333
signed dword mulf16s::return#2 return zp[4]:18 2002.0
dword mulf16u(word mulf16u::a , word mulf16u::b)
label mulf16u::@return
word mulf16u::a
word mulf16u::a#0 a zp[2]:24 10001.0
word mulf16u::a#1 a zp[2]:24 1001.0
word mulf16u::a#2 a zp[2]:24 111003.0
word mulf16u::b
word mulf16u::b#0 b zp[2]:26 20002.0
word mulf16u::b#1 b zp[2]:26 2002.0
word mulf16u::b#2 b zp[2]:26 55501.5
const nomodify word* mulf16u::memA = (word*) 248
const nomodify word* mulf16u::memB = (word*) 250
const nomodify dword* mulf16u::memR = (dword*) 252
dword mulf16u::return
dword mulf16u::return#0 return zp[4]:18 27750.75
dword mulf16u::return#2 return zp[4]:18 20002.0
dword mulf16u::return#3 return zp[4]:18 2002.0
void mulf_init()
byte~ mulf_init::$1 reg byte a 202.0
byte~ mulf_init::$4 reg byte a 202.0
byte~ mulf_init::$5 reg byte a 202.0
label mulf_init::@1
label mulf_init::@2
label mulf_init::@3
label mulf_init::@4
label mulf_init::@5
label mulf_init::@6
label mulf_init::@7
label mulf_init::@8
label mulf_init::@9
label mulf_init::@return
byte mulf_init::c
byte mulf_init::c#1 c zp[1]:2 23.307692307692307
byte mulf_init::c#2 c zp[1]:2 101.0
byte mulf_init::dir
byte mulf_init::dir#2 dir zp[1]:3 37.875
byte mulf_init::dir#4 dir zp[1]:3 101.0
word mulf_init::sqr
word mulf_init::sqr#1 sqr zp[2]:28 101.0
word mulf_init::sqr#2 sqr zp[2]:28 202.0
word mulf_init::sqr#3 sqr zp[2]:28 84.16666666666666
word mulf_init::sqr#4 sqr zp[2]:28 50.5
byte* mulf_init::sqr1_hi
byte* mulf_init::sqr1_hi#1 sqr1_hi zp[2]:26 67.33333333333333
byte* mulf_init::sqr1_hi#2 sqr1_hi zp[2]:26 25.25
byte* mulf_init::sqr1_lo
byte* mulf_init::sqr1_lo#1 sqr1_lo zp[2]:24 202.0
byte* mulf_init::sqr1_lo#2 sqr1_lo zp[2]:24 28.857142857142858
byte* mulf_init::sqr2_hi
byte* mulf_init::sqr2_hi#1 sqr2_hi zp[2]:6 33.666666666666664
byte* mulf_init::sqr2_hi#2 sqr2_hi zp[2]:6 75.75
byte* mulf_init::sqr2_lo
byte* mulf_init::sqr2_lo#1 sqr2_lo zp[2]:4 202.0
byte* mulf_init::sqr2_lo#2 sqr2_lo zp[2]:4 44.888888888888886
byte mulf_init::x_2
byte mulf_init::x_2#1 reg byte x 101.0
byte mulf_init::x_2#2 reg byte x 50.5
byte mulf_init::x_2#3 reg byte x 60.599999999999994
byte mulf_init::x_255
byte mulf_init::x_255#1 reg byte x 60.599999999999994
byte mulf_init::x_255#2 reg byte x 80.8
const byte* mulf_sqr1_hi[$200]  = { fill( $200, 0) }
const byte* mulf_sqr1_lo[$200]  = { fill( $200, 0) }
const byte* mulf_sqr2_hi[$200]  = { fill( $200, 0) }
const byte* mulf_sqr2_lo[$200]  = { fill( $200, 0) }
signed dword muls16s(signed word muls16s::a , signed word muls16s::b)
label muls16s::@1
label muls16s::@2
label muls16s::@3
label muls16s::@4
label muls16s::@5
label muls16s::@6
label muls16s::@return
signed word muls16s::a
signed word muls16s::a#0 a zp[2]:4 1668417.0833333333
signed word muls16s::b
signed word muls16s::b#0 b zp[2]:6 1818273.0
signed word muls16s::i
signed word muls16s::i#1 i zp[2]:24 2.0000002E7
signed word muls16s::i#2 i zp[2]:24 1.0000001E7
signed word muls16s::j
signed word muls16s::j#1 j zp[2]:28 2.0000002E7
signed word muls16s::j#2 j zp[2]:28 1.0000001E7
signed dword muls16s::m
signed dword muls16s::m#1 m zp[4]:8 1.0000001E7
signed dword muls16s::m#2 m zp[4]:8 1.0000001E7
signed dword muls16s::m#3 m zp[4]:8 1.50000015E7
signed dword muls16s::m#5 m zp[4]:8 1.50000015E7
signed dword muls16s::return
signed dword muls16s::return#0 return zp[4]:8 6667001.0
signed dword muls16s::return#2 return zp[4]:8 2002.0
dword muls16u(word muls16u::a , word muls16u::b)
label muls16u::@1
label muls16u::@2
label muls16u::@3
label muls16u::@return
word muls16u::a
word muls16u::a#0 a zp[2]:24 1430143.2857142857
word muls16u::b
word muls16u::b#0 b zp[2]:26 1666833.6666666665
word muls16u::i
word muls16u::i#1 i zp[2]:28 2.0000002E7
word muls16u::i#2 i zp[2]:28 1.0000001E7
dword muls16u::m
dword muls16u::m#1 m zp[4]:8 1.0000001E7
dword muls16u::m#3 m zp[4]:8 1.50000015E7
dword muls16u::return
dword muls16u::return#0 return zp[4]:8 3333667.333333333
dword muls16u::return#2 return zp[4]:8 2002.0
void print_char(byte print_char::ch)
label print_char::@return
byte print_char::ch
byte print_char::ch#0 reg byte a 200002.0
byte print_char::ch#5 reg byte a 2000002.0
byte print_char::ch#6 reg byte a 2000002.0
byte print_char::ch#7 reg byte a 1.2100004E7
byte* print_char_cursor
byte* print_char_cursor#1 print_char_cursor zp[2]:22 1838.928571428572
byte* print_char_cursor#136 print_char_cursor zp[2]:22 2561.75
byte* print_char_cursor#140 print_char_cursor zp[2]:22 60603.0
byte* print_char_cursor#141 print_char_cursor zp[2]:22 5652.5
byte* print_char_cursor#145 print_char_cursor zp[2]:22 400001.00000000006
byte* print_char_cursor#148 print_char_cursor zp[2]:22 202.0
byte* print_char_cursor#152 print_char_cursor zp[2]:22 213.0
byte* print_char_cursor#157 print_char_cursor zp[2]:22 2235.0
byte* print_char_cursor#183 print_char_cursor zp[2]:22 22.0
byte* print_char_cursor#190 print_char_cursor zp[2]:22 22.0
byte* print_char_cursor#21 print_char_cursor zp[2]:22 219863.07843137256
byte* print_char_cursor#223 print_char_cursor zp[2]:22 22.0
byte* print_char_cursor#89 print_char_cursor zp[2]:22 1.10520045E7
void print_cls()
label print_cls::@return
const to_nomodify byte* print_hextab[]  = "0123456789abcdef"z
byte* print_line_cursor
byte* print_line_cursor#0 print_line_cursor zp[2]:16 386.7948717948718
byte* print_line_cursor#23 print_line_cursor zp[2]:16 21003.0
byte* print_line_cursor#45 print_line_cursor zp[2]:16 1135.0
void print_ln()
label print_ln::@1
label print_ln::@return
byte* print_screen
const byte* print_screen#0 print_screen = (byte*) 1024
void print_sint(signed word print_sint::w)
label print_sint::@1
label print_sint::@2
label print_sint::@3
label print_sint::@4
label print_sint::@return
signed word print_sint::w
signed word print_sint::w#0 w zp[2]:24 2002.0
signed word print_sint::w#1 w zp[2]:24 202.0
signed word print_sint::w#2 w zp[2]:24 202.0
signed word print_sint::w#3 w zp[2]:24 534.1666666666667
signed word print_sint::w#5 w zp[2]:24 2002.0
void print_slong(signed dword print_slong::dw)
label print_slong::@1
label print_slong::@2
label print_slong::@3
label print_slong::@4
label print_slong::@return
signed dword print_slong::dw
signed dword print_slong::dw#0 dw zp[4]:8 2002.0
signed dword print_slong::dw#1 dw zp[4]:8 202.0
signed dword print_slong::dw#2 dw zp[4]:8 202.0
signed dword print_slong::dw#3 dw zp[4]:8 202.0
signed dword print_slong::dw#4 dw zp[4]:8 551.0
signed dword print_slong::dw#6 dw zp[4]:8 2002.0
void print_str(byte* print_str::str)
label print_str::@1
label print_str::@2
label print_str::@3
label print_str::@return
byte* print_str::str
byte* print_str::str#0 str zp[2]:28 200002.0
byte* print_str::str#15 str zp[2]:28 100251.25
byte* print_str::str#18 str zp[2]:28 1001.0
void print_uchar(byte print_uchar::b)
byte~ print_uchar::$0 reg byte a 2000002.0
byte~ print_uchar::$2 reg byte x 2000002.0
label print_uchar::@1
label print_uchar::@return
byte print_uchar::b
byte print_uchar::b#0 reg byte x 200002.0
byte print_uchar::b#1 reg byte x 200002.0
byte print_uchar::b#2 reg byte x 550001.0
void print_uint(word print_uint::w)
label print_uint::@1
label print_uint::@return
word print_uint::w
word print_uint::w#0 w zp[2]:24 2002.0
word print_uint::w#1 w zp[2]:24 20002.0
word print_uint::w#2 w zp[2]:24 20002.0
word print_uint::w#3 w zp[2]:24 202.0
word print_uint::w#4 w zp[2]:24 202.0
word print_uint::w#5 w zp[2]:24 73735.66666666666
void print_ulong(dword print_ulong::dw)
label print_ulong::@1
label print_ulong::@return
dword print_ulong::dw
dword print_ulong::dw#0 dw zp[4]:8 2002.0
dword print_ulong::dw#1 dw zp[4]:8 202.0
dword print_ulong::dw#2 dw zp[4]:8 202.0
dword print_ulong::dw#3 dw zp[4]:8 202.0
dword print_ulong::dw#4 dw zp[4]:8 7102.0
const byte* str[2]  = "."
const byte* str1[2]  = "*"
const byte* str2[7]  = " slow:"
const byte* str3[$b]  = " / normal:"
const byte* str4[9]  = " / fast:"

reg byte x [ mulf_init::x_2#3 mulf_init::x_2#2 mulf_init::x_2#1 ]
reg byte x [ mulf_init::x_255#2 mulf_init::x_255#1 ]
zp[1]:2 [ mul16u_compare::i#12 mul16u_compare::i#1 mulf_init::c#2 mulf_init::c#1 ]
reg byte y [ mul16u_compare::j#10 mul16u_compare::j#1 ]
reg byte x [ mul16u_compare::ok#3 mul16u_compare::ok#4 ]
zp[1]:3 [ mul16s_compare::i#12 mul16s_compare::i#1 mulf_init::dir#2 mulf_init::dir#4 ]
zp[2]:4 [ mul16s_compare::a#2 mul16s_compare::a#6 mul16s_compare::a#1 muls16s::a#0 mul16s::a#0 mulf16s::a#0 mul16s_error::a#0 mulf_init::sqr2_lo#2 mulf_init::sqr2_lo#1 ]
zp[2]:6 [ mul16s_compare::b#2 mul16s_compare::b#6 mul16s_compare::b#1 muls16s::b#0 mul16s::b#0 mulf16s::b#0 mul16s_error::b#0 mulf_init::sqr2_hi#2 mulf_init::sqr2_hi#1 ]
reg byte y [ mul16s_compare::j#10 mul16s_compare::j#1 ]
reg byte x [ mul16s_compare::ok#3 mul16s_compare::ok#4 ]
zp[4]:8 [ muls16u::return#0 muls16u::m#3 muls16u::m#1 muls16u::return#2 mul16u_compare::ms#0 print_ulong::dw#4 print_ulong::dw#1 print_ulong::dw#2 print_ulong::dw#3 print_ulong::dw#0 print_slong::dw#6 print_slong::dw#0 print_slong::dw#4 print_slong::dw#1 print_slong::dw#2 print_slong::dw#3 mul16u_error::ms#0 muls16s::return#0 muls16s::m#3 muls16s::m#1 muls16s::m#5 muls16s::m#2 muls16s::return#2 mul16s_compare::ms#0 mul16s_error::ms#0 ]
zp[4]:12 [ mul16u::res#2 mul16u::res#6 mul16u::res#1 mul16u::return#3 mul16u::return#2 mul16s::m#4 mul16s::m#5 mul16s::m#1 mul16s::m#0 mul16s::m#2 mul16s::return#0 mul16u_compare::mn#0 mul16u_error::mn#0 mul16s::return#2 mul16s_compare::mn#0 mul16s_error::mn#0 ]
zp[2]:16 [ print_line_cursor#23 print_line_cursor#45 print_line_cursor#0 ]
zp[4]:18 [ mulf16s::m#4 mulf16s::m#5 mulf16s::m#1 mulf16s::m#0 mulf16s::m#2 mulf16u::return#2 mulf16s::return#0 mulf16u::return#3 mul16u_compare::mf#0 mulf16u::return#0 mulf16s::return#2 mul16s_compare::mf#0 mul16u_error::mf#0 mul16s_error::mf#0 mul16u::mb#2 mul16u::mb#0 mul16u::mb#1 ]
reg byte a [ print_char::ch#7 print_char::ch#0 print_char::ch#5 print_char::ch#6 ]
zp[2]:22 [ print_char_cursor#140 print_char_cursor#89 print_char_cursor#136 print_char_cursor#157 print_char_cursor#152 print_char_cursor#223 print_char_cursor#148 print_char_cursor#1 print_char_cursor#183 print_char_cursor#21 print_char_cursor#190 print_char_cursor#145 print_char_cursor#141 ]
reg byte x [ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ]
reg byte a [ mulf_init::$1 ]
reg byte a [ mulf_init::$4 ]
reg byte a [ mulf_init::$5 ]
reg byte a [ mul16u::$1 ]
zp[2]:24 [ mul16s::$6 mul16s::$11 muls16s::i#2 muls16s::i#1 mul16u_compare::a#2 mul16u_compare::a#6 mul16u_compare::a#1 mulf16u::a#2 mulf16u::a#1 mulf16u::a#0 muls16u::a#0 mul16u_error::a#0 print_uint::w#5 print_uint::w#3 print_uint::w#4 print_uint::w#0 print_uint::w#1 print_uint::w#2 print_sint::w#5 print_sint::w#0 print_sint::w#3 print_sint::w#1 print_sint::w#2 mulf_init::sqr1_lo#2 mulf_init::sqr1_lo#1 ]
zp[2]:26 [ mulf16s::$6 mulf16s::$11 mul16s::$9 mul16s::$12 mul16u_compare::b#2 mul16u_compare::b#6 mul16u_compare::b#1 mul16u::b#2 mul16u::b#0 mul16u::b#1 mulf16u::b#2 mulf16u::b#1 mulf16u::b#0 muls16u::b#0 mul16u_error::b#0 mulf_init::sqr1_hi#2 mulf_init::sqr1_hi#1 ]
zp[2]:28 [ mulf16s::$9 mulf16s::$12 muls16s::j#2 muls16s::j#1 mul16u::a#3 mul16u::a#6 mul16u::a#1 mul16u::a#2 mul16u::a#0 muls16u::i#2 muls16u::i#1 print_str::str#15 print_str::str#18 print_str::str#0 memset::dst#2 memset::dst#1 mulf_init::sqr#3 mulf_init::sqr#4 mulf_init::sqr#1 mulf_init::sqr#2 ]
reg byte a [ print_uchar::$0 ]
reg byte x [ print_uchar::$2 ]


FINAL ASSEMBLER
Score: 467180

  // File Comments
// Test the fast multiplication library
  // Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
  // Global Constants & labels
  .label BG_COLOR = $d021
  .label print_screen = $400
  .label print_char_cursor = $16
  .label print_line_cursor = $10
  // main
main: {
    // *BG_COLOR = 5
    // [0] *BG_COLOR = 5 -- _deref_pbuc1=vbuc2 
    lda #5
    sta BG_COLOR
    // print_cls()
    // [1] call print_cls 
    // [9] phi from main to print_cls [phi:main->print_cls]
    jsr print_cls
    // [2] phi from main to main::@1 [phi:main->main::@1]
    // main::@1
    // mulf_init()
    // [3] call mulf_init 
    // [12] phi from main::@1 to mulf_init [phi:main::@1->mulf_init]
    jsr mulf_init
    // [4] phi from main::@1 to main::@2 [phi:main::@1->main::@2]
    // main::@2
    // mul16u_compare()
    // [5] call mul16u_compare 
    // [41] phi from main::@2 to mul16u_compare [phi:main::@2->mul16u_compare]
    jsr mul16u_compare
    // [6] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
    // main::@3
    // mul16s_compare()
    // [7] call mul16s_compare 
    jsr mul16s_compare
    // main::@return
    // }
    // [8] return 
    rts
}
  // print_cls
// Clear the screen. Also resets current line/char cursor.
print_cls: {
    // memset(print_screen, ' ', 1000)
    // [10] call memset 
    // [133] phi from print_cls to memset [phi:print_cls->memset]
    jsr memset
    // print_cls::@return
    // }
    // [11] return 
    rts
}
  // mulf_init
// Initialize the mulf_sqr multiplication tables with f(x)=int(x*x/4)
mulf_init: {
    // x/2
    .label c = 2
    // Counter used for determining x%2==0
    .label sqr1_hi = $1a
    // Fill mulf_sqr1 = f(x) = int(x*x/4): If f(x) = x*x/4 then f(x+1) = f(x) + x/2 + 1/4
    .label sqr = $1c
    .label sqr1_lo = $18
    // Decrease or increase x_255 - initially we decrease
    .label sqr2_hi = 6
    .label sqr2_lo = 4
    //Start with g(0)=f(255)
    .label dir = 3
    // [13] phi from mulf_init to mulf_init::@1 [phi:mulf_init->mulf_init::@1]
    // [13] phi mulf_init::x_2#3 = 0 [phi:mulf_init->mulf_init::@1#0] -- vbuxx=vbuc1 
    ldx #0
    // [13] phi mulf_init::sqr1_hi#2 = mulf_sqr1_hi+1 [phi:mulf_init->mulf_init::@1#1] -- pbuz1=pbuc1 
    lda #<mulf_sqr1_hi+1
    sta.z sqr1_hi
    lda #>mulf_sqr1_hi+1
    sta.z sqr1_hi+1
    // [13] phi mulf_init::sqr#4 = 0 [phi:mulf_init->mulf_init::@1#2] -- vwuz1=vwuc1 
    txa
    sta.z sqr
    sta.z sqr+1
    // [13] phi mulf_init::c#2 = 0 [phi:mulf_init->mulf_init::@1#3] -- vbuz1=vbuc1 
    sta.z c
    // [13] phi mulf_init::sqr1_lo#2 = mulf_sqr1_lo+1 [phi:mulf_init->mulf_init::@1#4] -- pbuz1=pbuc1 
    lda #<mulf_sqr1_lo+1
    sta.z sqr1_lo
    lda #>mulf_sqr1_lo+1
    sta.z sqr1_lo+1
    // mulf_init::@1
  __b1:
    // for(char* sqr1_lo = mulf_sqr1_lo+1; sqr1_lo!=mulf_sqr1_lo+512; sqr1_lo++)
    // [14] if(mulf_init::sqr1_lo#2!=mulf_sqr1_lo+$200) goto mulf_init::@2 -- pbuz1_neq_pbuc1_then_la1 
    lda.z sqr1_lo+1
    cmp #>mulf_sqr1_lo+$200
    bne __b2
    lda.z sqr1_lo
    cmp #<mulf_sqr1_lo+$200
    bne __b2
    // [15] phi from mulf_init::@1 to mulf_init::@5 [phi:mulf_init::@1->mulf_init::@5]
    // [15] phi mulf_init::dir#2 = $ff [phi:mulf_init::@1->mulf_init::@5#0] -- vbuz1=vbuc1 
    lda #$ff
    sta.z dir
    // [15] phi mulf_init::sqr2_hi#2 = mulf_sqr2_hi [phi:mulf_init::@1->mulf_init::@5#1] -- pbuz1=pbuc1 
    lda #<mulf_sqr2_hi
    sta.z sqr2_hi
    lda #>mulf_sqr2_hi
    sta.z sqr2_hi+1
    // [15] phi mulf_init::x_255#2 = -1 [phi:mulf_init::@1->mulf_init::@5#2] -- vbuxx=vbuc1 
    ldx #-1
    // [15] phi mulf_init::sqr2_lo#2 = mulf_sqr2_lo [phi:mulf_init::@1->mulf_init::@5#3] -- pbuz1=pbuc1 
    lda #<mulf_sqr2_lo
    sta.z sqr2_lo
    lda #>mulf_sqr2_lo
    sta.z sqr2_lo+1
    // mulf_init::@5
  __b5:
    // for(char* sqr2_lo = mulf_sqr2_lo; sqr2_lo!=mulf_sqr2_lo+511; sqr2_lo++)
    // [16] if(mulf_init::sqr2_lo#2!=mulf_sqr2_lo+$1ff) goto mulf_init::@6 -- pbuz1_neq_pbuc1_then_la1 
    lda.z sqr2_lo+1
    cmp #>mulf_sqr2_lo+$1ff
    bne __b6
    lda.z sqr2_lo
    cmp #<mulf_sqr2_lo+$1ff
    bne __b6
    // mulf_init::@7
    // *(mulf_sqr2_lo+511) = *(mulf_sqr1_lo+256)
    // [17] *(mulf_sqr2_lo+$1ff) = *(mulf_sqr1_lo+$100) -- _deref_pbuc1=_deref_pbuc2 
    // Set the very last value g(511) = f(256)
    lda mulf_sqr1_lo+$100
    sta mulf_sqr2_lo+$1ff
    // *(mulf_sqr2_hi+511) = *(mulf_sqr1_hi+256)
    // [18] *(mulf_sqr2_hi+$1ff) = *(mulf_sqr1_hi+$100) -- _deref_pbuc1=_deref_pbuc2 
    lda mulf_sqr1_hi+$100
    sta mulf_sqr2_hi+$1ff
    // mulf_init::@return
    // }
    // [19] return 
    rts
    // mulf_init::@6
  __b6:
    // *sqr2_lo = mulf_sqr1_lo[x_255]
    // [20] *mulf_init::sqr2_lo#2 = mulf_sqr1_lo[mulf_init::x_255#2] -- _deref_pbuz1=pbuc1_derefidx_vbuxx 
    lda mulf_sqr1_lo,x
    ldy #0
    sta (sqr2_lo),y
    // *sqr2_hi++ = mulf_sqr1_hi[x_255]
    // [21] *mulf_init::sqr2_hi#2 = mulf_sqr1_hi[mulf_init::x_255#2] -- _deref_pbuz1=pbuc1_derefidx_vbuxx 
    lda mulf_sqr1_hi,x
    sta (sqr2_hi),y
    // *sqr2_hi++ = mulf_sqr1_hi[x_255];
    // [22] mulf_init::sqr2_hi#1 = ++ mulf_init::sqr2_hi#2 -- pbuz1=_inc_pbuz1 
    inc.z sqr2_hi
    bne !+
    inc.z sqr2_hi+1
  !:
    // x_255 = x_255 + dir
    // [23] mulf_init::x_255#1 = mulf_init::x_255#2 + mulf_init::dir#2 -- vbuxx=vbuxx_plus_vbuz1 
    txa
    clc
    adc.z dir
    tax
    // if(x_255==0)
    // [24] if(mulf_init::x_255#1!=0) goto mulf_init::@9 -- vbuxx_neq_0_then_la1 
    cpx #0
    bne __b8
    // [26] phi from mulf_init::@6 to mulf_init::@8 [phi:mulf_init::@6->mulf_init::@8]
    // [26] phi mulf_init::dir#4 = 1 [phi:mulf_init::@6->mulf_init::@8#0] -- vbuz1=vbuc1 
    lda #1
    sta.z dir
    // [25] phi from mulf_init::@6 to mulf_init::@9 [phi:mulf_init::@6->mulf_init::@9]
    // mulf_init::@9
    // [26] phi from mulf_init::@9 to mulf_init::@8 [phi:mulf_init::@9->mulf_init::@8]
    // [26] phi mulf_init::dir#4 = mulf_init::dir#2 [phi:mulf_init::@9->mulf_init::@8#0] -- register_copy 
    // mulf_init::@8
  __b8:
    // for(char* sqr2_lo = mulf_sqr2_lo; sqr2_lo!=mulf_sqr2_lo+511; sqr2_lo++)
    // [27] mulf_init::sqr2_lo#1 = ++ mulf_init::sqr2_lo#2 -- pbuz1=_inc_pbuz1 
    inc.z sqr2_lo
    bne !+
    inc.z sqr2_lo+1
  !:
    // [15] phi from mulf_init::@8 to mulf_init::@5 [phi:mulf_init::@8->mulf_init::@5]
    // [15] phi mulf_init::dir#2 = mulf_init::dir#4 [phi:mulf_init::@8->mulf_init::@5#0] -- register_copy 
    // [15] phi mulf_init::sqr2_hi#2 = mulf_init::sqr2_hi#1 [phi:mulf_init::@8->mulf_init::@5#1] -- register_copy 
    // [15] phi mulf_init::x_255#2 = mulf_init::x_255#1 [phi:mulf_init::@8->mulf_init::@5#2] -- register_copy 
    // [15] phi mulf_init::sqr2_lo#2 = mulf_init::sqr2_lo#1 [phi:mulf_init::@8->mulf_init::@5#3] -- register_copy 
    jmp __b5
    // mulf_init::@2
  __b2:
    // if((++c&1)==0)
    // [28] mulf_init::c#1 = ++ mulf_init::c#2 -- vbuz1=_inc_vbuz1 
    inc.z c
    // ++c&1
    // [29] mulf_init::$1 = mulf_init::c#1 & 1 -- vbuaa=vbuz1_band_vbuc1 
    lda #1
    and.z c
    // if((++c&1)==0)
    // [30] if(mulf_init::$1!=0) goto mulf_init::@3 -- vbuaa_neq_0_then_la1 
    cmp #0
    bne __b3
    // mulf_init::@4
    // x_2++;
    // [31] mulf_init::x_2#1 = ++ mulf_init::x_2#3 -- vbuxx=_inc_vbuxx 
    inx
    // sqr++;
    // [32] mulf_init::sqr#2 = ++ mulf_init::sqr#4 -- vwuz1=_inc_vwuz1 
    inc.z sqr
    bne !+
    inc.z sqr+1
  !:
    // [33] phi from mulf_init::@2 mulf_init::@4 to mulf_init::@3 [phi:mulf_init::@2/mulf_init::@4->mulf_init::@3]
    // [33] phi mulf_init::x_2#2 = mulf_init::x_2#3 [phi:mulf_init::@2/mulf_init::@4->mulf_init::@3#0] -- register_copy 
    // [33] phi mulf_init::sqr#3 = mulf_init::sqr#4 [phi:mulf_init::@2/mulf_init::@4->mulf_init::@3#1] -- register_copy 
    // mulf_init::@3
  __b3:
    // <sqr
    // [34] mulf_init::$4 = < mulf_init::sqr#3 -- vbuaa=_lo_vwuz1 
    lda.z sqr
    // *sqr1_lo = <sqr
    // [35] *mulf_init::sqr1_lo#2 = mulf_init::$4 -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (sqr1_lo),y
    // >sqr
    // [36] mulf_init::$5 = > mulf_init::sqr#3 -- vbuaa=_hi_vwuz1 
    lda.z sqr+1
    // *sqr1_hi++ = >sqr
    // [37] *mulf_init::sqr1_hi#2 = mulf_init::$5 -- _deref_pbuz1=vbuaa 
    sta (sqr1_hi),y
    // *sqr1_hi++ = >sqr;
    // [38] mulf_init::sqr1_hi#1 = ++ mulf_init::sqr1_hi#2 -- pbuz1=_inc_pbuz1 
    inc.z sqr1_hi
    bne !+
    inc.z sqr1_hi+1
  !:
    // sqr = sqr + x_2
    // [39] mulf_init::sqr#1 = mulf_init::sqr#3 + mulf_init::x_2#2 -- vwuz1=vwuz1_plus_vbuxx 
    txa
    clc
    adc.z sqr
    sta.z sqr
    bcc !+
    inc.z sqr+1
  !:
    // for(char* sqr1_lo = mulf_sqr1_lo+1; sqr1_lo!=mulf_sqr1_lo+512; sqr1_lo++)
    // [40] mulf_init::sqr1_lo#1 = ++ mulf_init::sqr1_lo#2 -- pbuz1=_inc_pbuz1 
    inc.z sqr1_lo
    bne !+
    inc.z sqr1_lo+1
  !:
    // [13] phi from mulf_init::@3 to mulf_init::@1 [phi:mulf_init::@3->mulf_init::@1]
    // [13] phi mulf_init::x_2#3 = mulf_init::x_2#2 [phi:mulf_init::@3->mulf_init::@1#0] -- register_copy 
    // [13] phi mulf_init::sqr1_hi#2 = mulf_init::sqr1_hi#1 [phi:mulf_init::@3->mulf_init::@1#1] -- register_copy 
    // [13] phi mulf_init::sqr#4 = mulf_init::sqr#1 [phi:mulf_init::@3->mulf_init::@1#2] -- register_copy 
    // [13] phi mulf_init::c#2 = mulf_init::c#1 [phi:mulf_init::@3->mulf_init::@1#3] -- register_copy 
    // [13] phi mulf_init::sqr1_lo#2 = mulf_init::sqr1_lo#1 [phi:mulf_init::@3->mulf_init::@1#4] -- register_copy 
    jmp __b1
}
  // mul16u_compare
// Perform many possible word multiplications (slow and fast) and compare the results
mul16u_compare: {
    .label a = $18
    .label b = $1a
    .label ms = 8
    .label mn = $c
    .label mf = $12
    .label i = 2
    // [42] phi from mul16u_compare to mul16u_compare::@1 [phi:mul16u_compare->mul16u_compare::@1]
    // [42] phi mul16u_compare::i#12 = 0 [phi:mul16u_compare->mul16u_compare::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta.z i
    // [42] phi mul16u_compare::b#6 = 0 [phi:mul16u_compare->mul16u_compare::@1#1] -- vwuz1=vwuc1 
    sta.z b
    sta.z b+1
    // [42] phi mul16u_compare::a#6 = 0 [phi:mul16u_compare->mul16u_compare::@1#2] -- vwuz1=vwuc1 
    sta.z a
    sta.z a+1
    // [42] phi print_char_cursor#148 = print_screen#0 [phi:mul16u_compare->mul16u_compare::@1#3] -- pbuz1=pbuc1 
    lda #<print_screen
    sta.z print_char_cursor
    lda #>print_screen
    sta.z print_char_cursor+1
    // [42] phi from mul16u_compare::@8 to mul16u_compare::@1 [phi:mul16u_compare::@8->mul16u_compare::@1]
    // [42] phi mul16u_compare::i#12 = mul16u_compare::i#1 [phi:mul16u_compare::@8->mul16u_compare::@1#0] -- register_copy 
    // [42] phi mul16u_compare::b#6 = mul16u_compare::b#1 [phi:mul16u_compare::@8->mul16u_compare::@1#1] -- register_copy 
    // [42] phi mul16u_compare::a#6 = mul16u_compare::a#1 [phi:mul16u_compare::@8->mul16u_compare::@1#2] -- register_copy 
    // [42] phi print_char_cursor#148 = print_char_cursor#1 [phi:mul16u_compare::@8->mul16u_compare::@1#3] -- register_copy 
    // mul16u_compare::@1
  __b1:
    // print_str(".")
    // [43] call print_str 
    // [139] phi from mul16u_compare::@1 to print_str [phi:mul16u_compare::@1->print_str]
    // [139] phi print_char_cursor#157 = print_char_cursor#148 [phi:mul16u_compare::@1->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = str [phi:mul16u_compare::@1->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    // [44] phi from mul16u_compare::@1 to mul16u_compare::@2 [phi:mul16u_compare::@1->mul16u_compare::@2]
    // [44] phi mul16u_compare::j#10 = 0 [phi:mul16u_compare::@1->mul16u_compare::@2#0] -- vbuyy=vbuc1 
    ldy #0
    // [44] phi mul16u_compare::b#2 = mul16u_compare::b#6 [phi:mul16u_compare::@1->mul16u_compare::@2#1] -- register_copy 
    // [44] phi mul16u_compare::a#2 = mul16u_compare::a#6 [phi:mul16u_compare::@1->mul16u_compare::@2#2] -- register_copy 
    // [44] phi from mul16u_compare::@5 to mul16u_compare::@2 [phi:mul16u_compare::@5->mul16u_compare::@2]
    // [44] phi mul16u_compare::j#10 = mul16u_compare::j#1 [phi:mul16u_compare::@5->mul16u_compare::@2#0] -- register_copy 
    // [44] phi mul16u_compare::b#2 = mul16u_compare::b#1 [phi:mul16u_compare::@5->mul16u_compare::@2#1] -- register_copy 
    // [44] phi mul16u_compare::a#2 = mul16u_compare::a#1 [phi:mul16u_compare::@5->mul16u_compare::@2#2] -- register_copy 
    // mul16u_compare::@2
  __b2:
    // a=a+3371
    // [45] mul16u_compare::a#1 = mul16u_compare::a#2 + $d2b -- vwuz1=vwuz1_plus_vwuc1 
    clc
    lda.z a
    adc #<$d2b
    sta.z a
    lda.z a+1
    adc #>$d2b
    sta.z a+1
    // b=b+4093
    // [46] mul16u_compare::b#1 = mul16u_compare::b#2 + $ffd -- vwuz1=vwuz1_plus_vwuc1 
    clc
    lda.z b
    adc #<$ffd
    sta.z b
    lda.z b+1
    adc #>$ffd
    sta.z b+1
    // muls16u(a, b)
    // [47] muls16u::a#0 = mul16u_compare::a#1
    // [48] muls16u::b#0 = mul16u_compare::b#1
    // [49] call muls16u 
    jsr muls16u
    // [50] muls16u::return#2 = muls16u::return#0
    // mul16u_compare::@10
    // ms = muls16u(a, b)
    // [51] mul16u_compare::ms#0 = muls16u::return#2
    // mul16u(a,b)
    // [52] mul16u::a#2 = mul16u_compare::a#1 -- vwuz1=vwuz2 
    lda.z a
    sta.z mul16u.a
    lda.z a+1
    sta.z mul16u.a+1
    // [53] mul16u::b#1 = mul16u_compare::b#1
    // [54] call mul16u 
    // [153] phi from mul16u_compare::@10 to mul16u [phi:mul16u_compare::@10->mul16u]
    // [153] phi mul16u::a#6 = mul16u::a#2 [phi:mul16u_compare::@10->mul16u#0] -- register_copy 
    // [153] phi mul16u::b#2 = mul16u::b#1 [phi:mul16u_compare::@10->mul16u#1] -- register_copy 
    jsr mul16u
    // mul16u(a,b)
    // [55] mul16u::return#3 = mul16u::res#2
    // mul16u_compare::@11
    // mn = mul16u(a,b)
    // [56] mul16u_compare::mn#0 = mul16u::return#3
    // mulf16u(a,b)
    // [57] mulf16u::a#1 = mul16u_compare::a#1
    // [58] mulf16u::b#1 = mul16u_compare::b#1
    // [59] call mulf16u 
    // [164] phi from mul16u_compare::@11 to mulf16u [phi:mul16u_compare::@11->mulf16u]
    // [164] phi mulf16u::b#2 = mulf16u::b#1 [phi:mul16u_compare::@11->mulf16u#0] -- register_copy 
    // [164] phi mulf16u::a#2 = mulf16u::a#1 [phi:mul16u_compare::@11->mulf16u#1] -- register_copy 
    jsr mulf16u
    // mulf16u(a,b)
    // [60] mulf16u::return#3 = mulf16u::return#0
    // mul16u_compare::@12
    // mf = mulf16u(a,b)
    // [61] mul16u_compare::mf#0 = mulf16u::return#3
    // if(ms!=mf)
    // [62] if(mul16u_compare::ms#0==mul16u_compare::mf#0) goto mul16u_compare::@3 -- vduz1_eq_vduz2_then_la1 
    lda.z ms
    cmp.z mf
    bne !+
    lda.z ms+1
    cmp.z mf+1
    bne !+
    lda.z ms+2
    cmp.z mf+2
    bne !+
    lda.z ms+3
    cmp.z mf+3
    beq __b6
  !:
    // [63] phi from mul16u_compare::@12 to mul16u_compare::@6 [phi:mul16u_compare::@12->mul16u_compare::@6]
    // mul16u_compare::@6
    // [64] phi from mul16u_compare::@6 to mul16u_compare::@3 [phi:mul16u_compare::@6->mul16u_compare::@3]
    // [64] phi mul16u_compare::ok#4 = 0 [phi:mul16u_compare::@6->mul16u_compare::@3#0] -- vbuxx=vbuc1 
    ldx #0
    jmp __b3
    // [64] phi from mul16u_compare::@12 to mul16u_compare::@3 [phi:mul16u_compare::@12->mul16u_compare::@3]
  __b6:
    // [64] phi mul16u_compare::ok#4 = 1 [phi:mul16u_compare::@12->mul16u_compare::@3#0] -- vbuxx=vbuc1 
    ldx #1
    // mul16u_compare::@3
  __b3:
    // if(ms!=mn)
    // [65] if(mul16u_compare::ms#0==mul16u_compare::mn#0) goto mul16u_compare::@15 -- vduz1_eq_vduz2_then_la1 
    lda.z ms
    cmp.z mn
    bne !+
    lda.z ms+1
    cmp.z mn+1
    bne !+
    lda.z ms+2
    cmp.z mn+2
    bne !+
    lda.z ms+3
    cmp.z mn+3
    beq __b4
  !:
    // [67] phi from mul16u_compare::@3 to mul16u_compare::@4 [phi:mul16u_compare::@3->mul16u_compare::@4]
    // [67] phi mul16u_compare::ok#3 = 0 [phi:mul16u_compare::@3->mul16u_compare::@4#0] -- vbuxx=vbuc1 
    ldx #0
    // [66] phi from mul16u_compare::@3 to mul16u_compare::@15 [phi:mul16u_compare::@3->mul16u_compare::@15]
    // mul16u_compare::@15
    // [67] phi from mul16u_compare::@15 to mul16u_compare::@4 [phi:mul16u_compare::@15->mul16u_compare::@4]
    // [67] phi mul16u_compare::ok#3 = mul16u_compare::ok#4 [phi:mul16u_compare::@15->mul16u_compare::@4#0] -- register_copy 
    // mul16u_compare::@4
  __b4:
    // if(ok==0)
    // [68] if(mul16u_compare::ok#3!=0) goto mul16u_compare::@5 -- vbuxx_neq_0_then_la1 
    cpx #0
    bne __b5
    // mul16u_compare::@7
    // *BG_COLOR = 2
    // [69] *BG_COLOR = 2 -- _deref_pbuc1=vbuc2 
    lda #2
    sta BG_COLOR
    // mul16u_error(a,b, ms, mn, mf)
    // [70] mul16u_error::a#0 = mul16u_compare::a#1
    // [71] mul16u_error::b#0 = mul16u_compare::b#1
    // [72] mul16u_error::ms#0 = mul16u_compare::ms#0
    // [73] mul16u_error::mn#0 = mul16u_compare::mn#0
    // [74] mul16u_error::mf#0 = mul16u_compare::mf#0
    // [75] call mul16u_error 
    // [170] phi from mul16u_compare::@7 to mul16u_error [phi:mul16u_compare::@7->mul16u_error]
    jsr mul16u_error
    // mul16u_compare::@return
    // }
    // [76] return 
    rts
    // mul16u_compare::@5
  __b5:
    // for(byte j: 0..15)
    // [77] mul16u_compare::j#1 = ++ mul16u_compare::j#10 -- vbuyy=_inc_vbuyy 
    iny
    // [78] if(mul16u_compare::j#1!=$10) goto mul16u_compare::@2 -- vbuyy_neq_vbuc1_then_la1 
    cpy #$10
    bne __b2
    // mul16u_compare::@8
    // for(byte i: 0..15)
    // [79] mul16u_compare::i#1 = ++ mul16u_compare::i#12 -- vbuz1=_inc_vbuz1 
    inc.z i
    // [80] if(mul16u_compare::i#1!=$10) goto mul16u_compare::@1 -- vbuz1_neq_vbuc1_then_la1 
    lda #$10
    cmp.z i
    beq !__b1+
    jmp __b1
  !__b1:
    // [81] phi from mul16u_compare::@8 to mul16u_compare::@9 [phi:mul16u_compare::@8->mul16u_compare::@9]
    // mul16u_compare::@9
    // print_ln()
    // [82] call print_ln 
    // [193] phi from mul16u_compare::@9 to print_ln [phi:mul16u_compare::@9->print_ln]
    // [193] phi print_char_cursor#136 = print_char_cursor#1 [phi:mul16u_compare::@9->print_ln#0] -- register_copy 
    // [193] phi print_line_cursor#45 = print_screen#0 [phi:mul16u_compare::@9->print_ln#1] -- pbuz1=pbuc1 
    lda #<print_screen
    sta.z print_line_cursor
    lda #>print_screen
    sta.z print_line_cursor+1
    jsr print_ln
    // mul16u_compare::@13
    // [83] print_char_cursor#190 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("word multiply results match!")
    // [84] call print_str 
    // [139] phi from mul16u_compare::@13 to print_str [phi:mul16u_compare::@13->print_str]
    // [139] phi print_char_cursor#157 = print_char_cursor#190 [phi:mul16u_compare::@13->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = mul16u_compare::str1 [phi:mul16u_compare::@13->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    // [85] phi from mul16u_compare::@13 to mul16u_compare::@14 [phi:mul16u_compare::@13->mul16u_compare::@14]
    // mul16u_compare::@14
    // print_ln()
    // [86] call print_ln 
    // [193] phi from mul16u_compare::@14 to print_ln [phi:mul16u_compare::@14->print_ln]
    // [193] phi print_char_cursor#136 = print_char_cursor#1 [phi:mul16u_compare::@14->print_ln#0] -- register_copy 
    // [193] phi print_line_cursor#45 = print_line_cursor#0 [phi:mul16u_compare::@14->print_ln#1] -- register_copy 
    jsr print_ln
    rts
    str1: .text "word multiply results match!"
    .byte 0
}
  // mul16s_compare
// Perform many possible word multiplications (slow and fast) and compare the results
mul16s_compare: {
    .label a = 4
    .label b = 6
    .label ms = 8
    .label mn = $c
    .label mf = $12
    .label i = 3
    // [87] print_char_cursor#223 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [88] phi from mul16s_compare to mul16s_compare::@1 [phi:mul16s_compare->mul16s_compare::@1]
    // [88] phi mul16s_compare::i#12 = 0 [phi:mul16s_compare->mul16s_compare::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta.z i
    // [88] phi mul16s_compare::b#6 = -$7fff [phi:mul16s_compare->mul16s_compare::@1#1] -- vwsz1=vwsc1 
    lda #<-$7fff
    sta.z b
    lda #>-$7fff
    sta.z b+1
    // [88] phi mul16s_compare::a#6 = -$7fff [phi:mul16s_compare->mul16s_compare::@1#2] -- vwsz1=vwsc1 
    lda #<-$7fff
    sta.z a
    lda #>-$7fff
    sta.z a+1
    // [88] phi print_char_cursor#152 = print_char_cursor#223 [phi:mul16s_compare->mul16s_compare::@1#3] -- register_copy 
    // [88] phi from mul16s_compare::@8 to mul16s_compare::@1 [phi:mul16s_compare::@8->mul16s_compare::@1]
    // [88] phi mul16s_compare::i#12 = mul16s_compare::i#1 [phi:mul16s_compare::@8->mul16s_compare::@1#0] -- register_copy 
    // [88] phi mul16s_compare::b#6 = mul16s_compare::b#1 [phi:mul16s_compare::@8->mul16s_compare::@1#1] -- register_copy 
    // [88] phi mul16s_compare::a#6 = mul16s_compare::a#1 [phi:mul16s_compare::@8->mul16s_compare::@1#2] -- register_copy 
    // [88] phi print_char_cursor#152 = print_char_cursor#1 [phi:mul16s_compare::@8->mul16s_compare::@1#3] -- register_copy 
    // mul16s_compare::@1
  __b1:
    // print_str(".")
    // [89] call print_str 
    // [139] phi from mul16s_compare::@1 to print_str [phi:mul16s_compare::@1->print_str]
    // [139] phi print_char_cursor#157 = print_char_cursor#152 [phi:mul16s_compare::@1->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = str [phi:mul16s_compare::@1->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    // [90] phi from mul16s_compare::@1 to mul16s_compare::@2 [phi:mul16s_compare::@1->mul16s_compare::@2]
    // [90] phi mul16s_compare::j#10 = 0 [phi:mul16s_compare::@1->mul16s_compare::@2#0] -- vbuyy=vbuc1 
    ldy #0
    // [90] phi mul16s_compare::b#2 = mul16s_compare::b#6 [phi:mul16s_compare::@1->mul16s_compare::@2#1] -- register_copy 
    // [90] phi mul16s_compare::a#2 = mul16s_compare::a#6 [phi:mul16s_compare::@1->mul16s_compare::@2#2] -- register_copy 
    // [90] phi from mul16s_compare::@5 to mul16s_compare::@2 [phi:mul16s_compare::@5->mul16s_compare::@2]
    // [90] phi mul16s_compare::j#10 = mul16s_compare::j#1 [phi:mul16s_compare::@5->mul16s_compare::@2#0] -- register_copy 
    // [90] phi mul16s_compare::b#2 = mul16s_compare::b#1 [phi:mul16s_compare::@5->mul16s_compare::@2#1] -- register_copy 
    // [90] phi mul16s_compare::a#2 = mul16s_compare::a#1 [phi:mul16s_compare::@5->mul16s_compare::@2#2] -- register_copy 
    // mul16s_compare::@2
  __b2:
    // a=a+3371
    // [91] mul16s_compare::a#1 = mul16s_compare::a#2 + $d2b -- vwsz1=vwsz1_plus_vwsc1 
    clc
    lda.z a
    adc #<$d2b
    sta.z a
    lda.z a+1
    adc #>$d2b
    sta.z a+1
    // b=b+4093
    // [92] mul16s_compare::b#1 = mul16s_compare::b#2 + $ffd -- vwsz1=vwsz1_plus_vwsc1 
    clc
    lda.z b
    adc #<$ffd
    sta.z b
    lda.z b+1
    adc #>$ffd
    sta.z b+1
    // muls16s(a, b)
    // [93] muls16s::a#0 = mul16s_compare::a#1
    // [94] muls16s::b#0 = mul16s_compare::b#1
    // [95] call muls16s 
    jsr muls16s
    // [96] muls16s::return#2 = muls16s::return#0
    // mul16s_compare::@10
    // ms = muls16s(a, b)
    // [97] mul16s_compare::ms#0 = muls16s::return#2
    // mul16s(a,b)
    // [98] mul16s::a#0 = mul16s_compare::a#1
    // [99] mul16s::b#0 = mul16s_compare::b#1
    // [100] call mul16s 
    jsr mul16s
    // [101] mul16s::return#2 = mul16s::return#0
    // mul16s_compare::@11
    // mn = mul16s(a,b)
    // [102] mul16s_compare::mn#0 = mul16s::return#2
    // mulf16s(a,b)
    // [103] mulf16s::a#0 = mul16s_compare::a#1
    // [104] mulf16s::b#0 = mul16s_compare::b#1
    // [105] call mulf16s 
    jsr mulf16s
    // [106] mulf16s::return#2 = mulf16s::return#0
    // mul16s_compare::@12
    // mf = mulf16s(a,b)
    // [107] mul16s_compare::mf#0 = mulf16s::return#2
    // if(ms!=mf)
    // [108] if(mul16s_compare::ms#0==mul16s_compare::mf#0) goto mul16s_compare::@3 -- vdsz1_eq_vdsz2_then_la1 
    lda.z ms
    cmp.z mf
    bne !+
    lda.z ms+1
    cmp.z mf+1
    bne !+
    lda.z ms+2
    cmp.z mf+2
    bne !+
    lda.z ms+3
    cmp.z mf+3
    beq __b6
  !:
    // [109] phi from mul16s_compare::@12 to mul16s_compare::@6 [phi:mul16s_compare::@12->mul16s_compare::@6]
    // mul16s_compare::@6
    // [110] phi from mul16s_compare::@6 to mul16s_compare::@3 [phi:mul16s_compare::@6->mul16s_compare::@3]
    // [110] phi mul16s_compare::ok#4 = 0 [phi:mul16s_compare::@6->mul16s_compare::@3#0] -- vbuxx=vbuc1 
    ldx #0
    jmp __b3
    // [110] phi from mul16s_compare::@12 to mul16s_compare::@3 [phi:mul16s_compare::@12->mul16s_compare::@3]
  __b6:
    // [110] phi mul16s_compare::ok#4 = 1 [phi:mul16s_compare::@12->mul16s_compare::@3#0] -- vbuxx=vbuc1 
    ldx #1
    // mul16s_compare::@3
  __b3:
    // if(ms!=mn)
    // [111] if(mul16s_compare::ms#0==mul16s_compare::mn#0) goto mul16s_compare::@15 -- vdsz1_eq_vdsz2_then_la1 
    lda.z ms
    cmp.z mn
    bne !+
    lda.z ms+1
    cmp.z mn+1
    bne !+
    lda.z ms+2
    cmp.z mn+2
    bne !+
    lda.z ms+3
    cmp.z mn+3
    beq __b4
  !:
    // [113] phi from mul16s_compare::@3 to mul16s_compare::@4 [phi:mul16s_compare::@3->mul16s_compare::@4]
    // [113] phi mul16s_compare::ok#3 = 0 [phi:mul16s_compare::@3->mul16s_compare::@4#0] -- vbuxx=vbuc1 
    ldx #0
    // [112] phi from mul16s_compare::@3 to mul16s_compare::@15 [phi:mul16s_compare::@3->mul16s_compare::@15]
    // mul16s_compare::@15
    // [113] phi from mul16s_compare::@15 to mul16s_compare::@4 [phi:mul16s_compare::@15->mul16s_compare::@4]
    // [113] phi mul16s_compare::ok#3 = mul16s_compare::ok#4 [phi:mul16s_compare::@15->mul16s_compare::@4#0] -- register_copy 
    // mul16s_compare::@4
  __b4:
    // if(ok==0)
    // [114] if(mul16s_compare::ok#3!=0) goto mul16s_compare::@5 -- vbuxx_neq_0_then_la1 
    cpx #0
    bne __b5
    // mul16s_compare::@7
    // *BG_COLOR = 2
    // [115] *BG_COLOR = 2 -- _deref_pbuc1=vbuc2 
    lda #2
    sta BG_COLOR
    // mul16s_error(a,b, ms, mn, mf)
    // [116] mul16s_error::a#0 = mul16s_compare::a#1
    // [117] mul16s_error::b#0 = mul16s_compare::b#1
    // [118] mul16s_error::ms#0 = mul16s_compare::ms#0
    // [119] mul16s_error::mn#0 = mul16s_compare::mn#0
    // [120] mul16s_error::mf#0 = mul16s_compare::mf#0
    // [121] call mul16s_error 
    // [244] phi from mul16s_compare::@7 to mul16s_error [phi:mul16s_compare::@7->mul16s_error]
    jsr mul16s_error
    // mul16s_compare::@return
    // }
    // [122] return 
    rts
    // mul16s_compare::@5
  __b5:
    // for(byte j: 0..15)
    // [123] mul16s_compare::j#1 = ++ mul16s_compare::j#10 -- vbuyy=_inc_vbuyy 
    iny
    // [124] if(mul16s_compare::j#1!=$10) goto mul16s_compare::@2 -- vbuyy_neq_vbuc1_then_la1 
    cpy #$10
    bne __b2
    // mul16s_compare::@8
    // for(byte i: 0..15)
    // [125] mul16s_compare::i#1 = ++ mul16s_compare::i#12 -- vbuz1=_inc_vbuz1 
    inc.z i
    // [126] if(mul16s_compare::i#1!=$10) goto mul16s_compare::@1 -- vbuz1_neq_vbuc1_then_la1 
    lda #$10
    cmp.z i
    beq !__b1+
    jmp __b1
  !__b1:
    // [127] phi from mul16s_compare::@8 to mul16s_compare::@9 [phi:mul16s_compare::@8->mul16s_compare::@9]
    // mul16s_compare::@9
    // print_ln()
    // [128] call print_ln 
    // [193] phi from mul16s_compare::@9 to print_ln [phi:mul16s_compare::@9->print_ln]
    // [193] phi print_char_cursor#136 = print_char_cursor#1 [phi:mul16s_compare::@9->print_ln#0] -- register_copy 
    // [193] phi print_line_cursor#45 = print_line_cursor#0 [phi:mul16s_compare::@9->print_ln#1] -- register_copy 
    jsr print_ln
    // mul16s_compare::@13
    // [129] print_char_cursor#183 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("signed word multiply results match!")
    // [130] call print_str 
    // [139] phi from mul16s_compare::@13 to print_str [phi:mul16s_compare::@13->print_str]
    // [139] phi print_char_cursor#157 = print_char_cursor#183 [phi:mul16s_compare::@13->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = mul16s_compare::str1 [phi:mul16s_compare::@13->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    // [131] phi from mul16s_compare::@13 to mul16s_compare::@14 [phi:mul16s_compare::@13->mul16s_compare::@14]
    // mul16s_compare::@14
    // print_ln()
    // [132] call print_ln 
    // [193] phi from mul16s_compare::@14 to print_ln [phi:mul16s_compare::@14->print_ln]
    // [193] phi print_char_cursor#136 = print_char_cursor#1 [phi:mul16s_compare::@14->print_ln#0] -- register_copy 
    // [193] phi print_line_cursor#45 = print_line_cursor#0 [phi:mul16s_compare::@14->print_ln#1] -- register_copy 
    jsr print_ln
    rts
    str1: .text "signed word multiply results match!"
    .byte 0
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
memset: {
    .const c = ' '
    .const num = $3e8
    .label str = print_screen
    .label end = str+num
    .label dst = $1c
    // [134] phi from memset to memset::@1 [phi:memset->memset::@1]
    // [134] phi memset::dst#2 = (byte*)memset::str#0 [phi:memset->memset::@1#0] -- pbuz1=pbuc1 
    lda #<str
    sta.z dst
    lda #>str
    sta.z dst+1
    // memset::@1
  __b1:
    // for(char* dst = str; dst!=end; dst++)
    // [135] if(memset::dst#2!=memset::end#0) goto memset::@2 -- pbuz1_neq_pbuc1_then_la1 
    lda.z dst+1
    cmp #>end
    bne __b2
    lda.z dst
    cmp #<end
    bne __b2
    // memset::@return
    // }
    // [136] return 
    rts
    // memset::@2
  __b2:
    // *dst = c
    // [137] *memset::dst#2 = memset::c#0 -- _deref_pbuz1=vbuc1 
    lda #c
    ldy #0
    sta (dst),y
    // for(char* dst = str; dst!=end; dst++)
    // [138] memset::dst#1 = ++ memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [134] phi from memset::@2 to memset::@1 [phi:memset::@2->memset::@1]
    // [134] phi memset::dst#2 = memset::dst#1 [phi:memset::@2->memset::@1#0] -- register_copy 
    jmp __b1
}
  // print_str
// Print a zero-terminated string
// print_str(byte* zp($1c) str)
print_str: {
    .label str = $1c
    // [140] phi from print_str print_str::@3 to print_str::@1 [phi:print_str/print_str::@3->print_str::@1]
    // [140] phi print_char_cursor#1 = print_char_cursor#157 [phi:print_str/print_str::@3->print_str::@1#0] -- register_copy 
    // [140] phi print_str::str#15 = print_str::str#18 [phi:print_str/print_str::@3->print_str::@1#1] -- register_copy 
    // print_str::@1
  __b1:
    // while(*str)
    // [141] if(0!=*print_str::str#15) goto print_str::@2 -- vbuc1_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (str),y
    cmp #0
    bne __b2
    // print_str::@return
    // }
    // [142] return 
    rts
    // print_str::@2
  __b2:
    // print_char(*(str++))
    // [143] print_char::ch#0 = *print_str::str#15 -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (str),y
    // [144] call print_char 
    // [267] phi from print_str::@2 to print_char [phi:print_str::@2->print_char]
    // [267] phi print_char_cursor#89 = print_char_cursor#1 [phi:print_str::@2->print_char#0] -- register_copy 
    // [267] phi print_char::ch#7 = print_char::ch#0 [phi:print_str::@2->print_char#1] -- register_copy 
    jsr print_char
    // print_str::@3
    // print_char(*(str++));
    // [145] print_str::str#0 = ++ print_str::str#15 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    jmp __b1
}
  // muls16u
// Slow multiplication of unsigned words
// Calculate an unsigned multiplication by repeated addition
// muls16u(word zp($18) a, word zp($1a) b)
muls16u: {
    .label return = 8
    .label m = 8
    .label i = $1c
    .label a = $18
    .label b = $1a
    // if(a!=0)
    // [146] if(muls16u::a#0==0) goto muls16u::@1 -- vwuz1_eq_0_then_la1 
    lda.z a
    bne !+
    lda.z a+1
    beq __b4
  !:
    // [147] phi from muls16u to muls16u::@2 [phi:muls16u->muls16u::@2]
    // [147] phi muls16u::m#3 = 0 [phi:muls16u->muls16u::@2#0] -- vduz1=vduc1 
    lda #<0
    sta.z m
    sta.z m+1
    lda #<0>>$10
    sta.z m+2
    lda #>0>>$10
    sta.z m+3
    // [147] phi muls16u::i#2 = 0 [phi:muls16u->muls16u::@2#1] -- vwuz1=vwuc1 
    lda #<0
    sta.z i
    sta.z i+1
    // muls16u::@2
  __b2:
    // for(word i = 0; i!=a; i++)
    // [148] if(muls16u::i#2!=muls16u::a#0) goto muls16u::@3 -- vwuz1_neq_vwuz2_then_la1 
    lda.z i+1
    cmp.z a+1
    bne __b3
    lda.z i
    cmp.z a
    bne __b3
    // [149] phi from muls16u::@2 to muls16u::@1 [phi:muls16u::@2->muls16u::@1]
    // [149] phi muls16u::return#0 = muls16u::m#3 [phi:muls16u::@2->muls16u::@1#0] -- register_copy 
    rts
    // [149] phi from muls16u to muls16u::@1 [phi:muls16u->muls16u::@1]
  __b4:
    // [149] phi muls16u::return#0 = 0 [phi:muls16u->muls16u::@1#0] -- vduz1=vduc1 
    lda #<0
    sta.z return
    sta.z return+1
    lda #<0>>$10
    sta.z return+2
    lda #>0>>$10
    sta.z return+3
    // muls16u::@1
    // muls16u::@return
    // }
    // [150] return 
    rts
    // muls16u::@3
  __b3:
    // m = m + b
    // [151] muls16u::m#1 = muls16u::m#3 + muls16u::b#0 -- vduz1=vduz1_plus_vwuz2 
    lda.z m
    clc
    adc.z b
    sta.z m
    lda.z m+1
    adc.z b+1
    sta.z m+1
    lda.z m+2
    adc #0
    sta.z m+2
    lda.z m+3
    adc #0
    sta.z m+3
    // for(word i = 0; i!=a; i++)
    // [152] muls16u::i#1 = ++ muls16u::i#2 -- vwuz1=_inc_vwuz1 
    inc.z i
    bne !+
    inc.z i+1
  !:
    // [147] phi from muls16u::@3 to muls16u::@2 [phi:muls16u::@3->muls16u::@2]
    // [147] phi muls16u::m#3 = muls16u::m#1 [phi:muls16u::@3->muls16u::@2#0] -- register_copy 
    // [147] phi muls16u::i#2 = muls16u::i#1 [phi:muls16u::@3->muls16u::@2#1] -- register_copy 
    jmp __b2
}
  // mul16u
// Perform binary multiplication of two unsigned 16-bit unsigned ints into a 32-bit unsigned long
// mul16u(word zp($1c) a, word zp($1a) b)
mul16u: {
    .label mb = $12
    .label a = $1c
    .label res = $c
    .label b = $1a
    .label return = $c
    // mb = b
    // [154] mul16u::mb#0 = (dword)mul16u::b#2 -- vduz1=_dword_vwuz2 
    lda.z b
    sta.z mb
    lda.z b+1
    sta.z mb+1
    lda #0
    sta.z mb+2
    sta.z mb+3
    // [155] phi from mul16u to mul16u::@1 [phi:mul16u->mul16u::@1]
    // [155] phi mul16u::mb#2 = mul16u::mb#0 [phi:mul16u->mul16u::@1#0] -- register_copy 
    // [155] phi mul16u::res#2 = 0 [phi:mul16u->mul16u::@1#1] -- vduz1=vduc1 
    sta.z res
    sta.z res+1
    lda #<0>>$10
    sta.z res+2
    lda #>0>>$10
    sta.z res+3
    // [155] phi mul16u::a#3 = mul16u::a#6 [phi:mul16u->mul16u::@1#2] -- register_copy 
    // mul16u::@1
  __b1:
    // while(a!=0)
    // [156] if(mul16u::a#3!=0) goto mul16u::@2 -- vwuz1_neq_0_then_la1 
    lda.z a
    bne __b2
    lda.z a+1
    bne __b2
    // mul16u::@return
    // }
    // [157] return 
    rts
    // mul16u::@2
  __b2:
    // a&1
    // [158] mul16u::$1 = mul16u::a#3 & 1 -- vbuaa=vwuz1_band_vbuc1 
    lda #1
    and.z a
    // if( (a&1) != 0)
    // [159] if(mul16u::$1==0) goto mul16u::@3 -- vbuaa_eq_0_then_la1 
    cmp #0
    beq __b3
    // mul16u::@4
    // res = res + mb
    // [160] mul16u::res#1 = mul16u::res#2 + mul16u::mb#2 -- vduz1=vduz1_plus_vduz2 
    lda.z res
    clc
    adc.z mb
    sta.z res
    lda.z res+1
    adc.z mb+1
    sta.z res+1
    lda.z res+2
    adc.z mb+2
    sta.z res+2
    lda.z res+3
    adc.z mb+3
    sta.z res+3
    // [161] phi from mul16u::@2 mul16u::@4 to mul16u::@3 [phi:mul16u::@2/mul16u::@4->mul16u::@3]
    // [161] phi mul16u::res#6 = mul16u::res#2 [phi:mul16u::@2/mul16u::@4->mul16u::@3#0] -- register_copy 
    // mul16u::@3
  __b3:
    // a = a>>1
    // [162] mul16u::a#0 = mul16u::a#3 >> 1 -- vwuz1=vwuz1_ror_1 
    lsr.z a+1
    ror.z a
    // mb = mb<<1
    // [163] mul16u::mb#1 = mul16u::mb#2 << 1 -- vduz1=vduz1_rol_1 
    asl.z mb
    rol.z mb+1
    rol.z mb+2
    rol.z mb+3
    // [155] phi from mul16u::@3 to mul16u::@1 [phi:mul16u::@3->mul16u::@1]
    // [155] phi mul16u::mb#2 = mul16u::mb#1 [phi:mul16u::@3->mul16u::@1#0] -- register_copy 
    // [155] phi mul16u::res#2 = mul16u::res#6 [phi:mul16u::@3->mul16u::@1#1] -- register_copy 
    // [155] phi mul16u::a#3 = mul16u::a#0 [phi:mul16u::@3->mul16u::@1#2] -- register_copy 
    jmp __b1
}
  // mulf16u
// Fast multiply two unsigned ints to a double unsigned int result
// Done in assembler to utilize fast addition A+X
// mulf16u(word zp($18) a, word zp($1a) b)
mulf16u: {
    .label memA = $f8
    .label memB = $fa
    .label memR = $fc
    .label return = $12
    .label a = $18
    .label b = $1a
    // *memA = a
    // [165] *mulf16u::memA = mulf16u::a#2 -- _deref_pwuc1=vwuz1 
    lda.z a
    sta memA
    lda.z a+1
    sta memA+1
    // *memB = b
    // [166] *mulf16u::memB = mulf16u::b#2 -- _deref_pwuc1=vwuz1 
    lda.z b
    sta memB
    lda.z b+1
    sta memB+1
    // asm
    // asm { ldamemA stasm1a+1 stasm3a+1 stasm5a+1 stasm7a+1 eor#$ff stasm2a+1 stasm4a+1 stasm6a+1 stasm8a+1 ldamemA+1 stasm1b+1 stasm3b+1 stasm5b+1 stasm7b+1 eor#$ff stasm2b+1 stasm4b+1 stasm6b+1 stasm8b+1 ldxmemB sec sm1a: ldamulf_sqr1_lo,x sm2a: sbcmulf_sqr2_lo,x stamemR+0 sm3a: ldamulf_sqr1_hi,x sm4a: sbcmulf_sqr2_hi,x sta_AA+1 sec sm1b: ldamulf_sqr1_lo,x sm2b: sbcmulf_sqr2_lo,x sta_cc+1 sm3b: ldamulf_sqr1_hi,x sm4b: sbcmulf_sqr2_hi,x sta_CC+1 ldxmemB+1 sec sm5a: ldamulf_sqr1_lo,x sm6a: sbcmulf_sqr2_lo,x sta_bb+1 sm7a: ldamulf_sqr1_hi,x sm8a: sbcmulf_sqr2_hi,x sta_BB+1 sec sm5b: ldamulf_sqr1_lo,x sm6b: sbcmulf_sqr2_lo,x sta_dd+1 sm7b: ldamulf_sqr1_hi,x sm8b: sbcmulf_sqr2_hi,x stamemR+3 clc _AA: lda#0 _bb: adc#0 stamemR+1 _BB: lda#0 _CC: adc#0 stamemR+2 bcc!+ incmemR+3 clc !: _cc: lda#0 adcmemR+1 stamemR+1 _dd: lda#0 adcmemR+2 stamemR+2 bcc!+ incmemR+3 !:  }
    lda memA
    sta sm1a+1
    sta sm3a+1
    sta sm5a+1
    sta sm7a+1
    eor #$ff
    sta sm2a+1
    sta sm4a+1
    sta sm6a+1
    sta sm8a+1
    lda memA+1
    sta sm1b+1
    sta sm3b+1
    sta sm5b+1
    sta sm7b+1
    eor #$ff
    sta sm2b+1
    sta sm4b+1
    sta sm6b+1
    sta sm8b+1
    ldx memB
    sec
  sm1a:
    lda mulf_sqr1_lo,x
  sm2a:
    sbc mulf_sqr2_lo,x
    sta memR+0
  sm3a:
    lda mulf_sqr1_hi,x
  sm4a:
    sbc mulf_sqr2_hi,x
    sta _AA+1
    sec
  sm1b:
    lda mulf_sqr1_lo,x
  sm2b:
    sbc mulf_sqr2_lo,x
    sta _cc+1
  sm3b:
    lda mulf_sqr1_hi,x
  sm4b:
    sbc mulf_sqr2_hi,x
    sta _CC+1
    ldx memB+1
    sec
  sm5a:
    lda mulf_sqr1_lo,x
  sm6a:
    sbc mulf_sqr2_lo,x
    sta _bb+1
  sm7a:
    lda mulf_sqr1_hi,x
  sm8a:
    sbc mulf_sqr2_hi,x
    sta _BB+1
    sec
  sm5b:
    lda mulf_sqr1_lo,x
  sm6b:
    sbc mulf_sqr2_lo,x
    sta _dd+1
  sm7b:
    lda mulf_sqr1_hi,x
  sm8b:
    sbc mulf_sqr2_hi,x
    sta memR+3
    clc
  _AA:
    lda #0
  _bb:
    adc #0
    sta memR+1
  _BB:
    lda #0
  _CC:
    adc #0
    sta memR+2
    bcc !+
    inc memR+3
    clc
  !:
  _cc:
    lda #0
    adc memR+1
    sta memR+1
  _dd:
    lda #0
    adc memR+2
    sta memR+2
    bcc !+
    inc memR+3
  !:
    // return *memR;
    // [168] mulf16u::return#0 = *mulf16u::memR -- vduz1=_deref_pduc1 
    lda memR
    sta.z return
    lda memR+1
    sta.z return+1
    lda memR+2
    sta.z return+2
    lda memR+3
    sta.z return+3
    // mulf16u::@return
    // }
    // [169] return 
    rts
}
  // mul16u_error
// mul16u_error(word zp($18) a, word zp($1a) b, dword zp(8) ms, dword zp($c) mn, dword zp($12) mf)
mul16u_error: {
    .label a = $18
    .label b = $1a
    .label ms = 8
    .label mn = $c
    .label mf = $12
    // print_str("multiply mismatch ")
    // [171] call print_str 
    // [139] phi from mul16u_error to print_str [phi:mul16u_error->print_str]
    // [139] phi print_char_cursor#157 = print_char_cursor#1 [phi:mul16u_error->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = mul16u_error::str [phi:mul16u_error->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    // mul16u_error::@1
    // print_uint(a)
    // [172] print_uint::w#3 = mul16u_error::a#0
    // [173] call print_uint 
    // [271] phi from mul16u_error::@1 to print_uint [phi:mul16u_error::@1->print_uint]
    // [271] phi print_char_cursor#140 = print_char_cursor#1 [phi:mul16u_error::@1->print_uint#0] -- register_copy 
    // [271] phi print_uint::w#5 = print_uint::w#3 [phi:mul16u_error::@1->print_uint#1] -- register_copy 
    jsr print_uint
    // [174] phi from mul16u_error::@1 to mul16u_error::@2 [phi:mul16u_error::@1->mul16u_error::@2]
    // mul16u_error::@2
    // print_str("*")
    // [175] call print_str 
    // [139] phi from mul16u_error::@2 to print_str [phi:mul16u_error::@2->print_str]
    // [139] phi print_char_cursor#157 = print_char_cursor#21 [phi:mul16u_error::@2->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = str1 [phi:mul16u_error::@2->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    // mul16u_error::@3
    // print_uint(b)
    // [176] print_uint::w#4 = mul16u_error::b#0 -- vwuz1=vwuz2 
    lda.z b
    sta.z print_uint.w
    lda.z b+1
    sta.z print_uint.w+1
    // [177] call print_uint 
    // [271] phi from mul16u_error::@3 to print_uint [phi:mul16u_error::@3->print_uint]
    // [271] phi print_char_cursor#140 = print_char_cursor#1 [phi:mul16u_error::@3->print_uint#0] -- register_copy 
    // [271] phi print_uint::w#5 = print_uint::w#4 [phi:mul16u_error::@3->print_uint#1] -- register_copy 
    jsr print_uint
    // [178] phi from mul16u_error::@3 to mul16u_error::@4 [phi:mul16u_error::@3->mul16u_error::@4]
    // mul16u_error::@4
    // print_str(" slow:")
    // [179] call print_str 
    // [139] phi from mul16u_error::@4 to print_str [phi:mul16u_error::@4->print_str]
    // [139] phi print_char_cursor#157 = print_char_cursor#21 [phi:mul16u_error::@4->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = str2 [phi:mul16u_error::@4->print_str#1] -- pbuz1=pbuc1 
    lda #<str2
    sta.z print_str.str
    lda #>str2
    sta.z print_str.str+1
    jsr print_str
    // mul16u_error::@5
    // print_ulong(ms)
    // [180] print_ulong::dw#1 = mul16u_error::ms#0
    // [181] call print_ulong 
    // [277] phi from mul16u_error::@5 to print_ulong [phi:mul16u_error::@5->print_ulong]
    // [277] phi print_char_cursor#141 = print_char_cursor#1 [phi:mul16u_error::@5->print_ulong#0] -- register_copy 
    // [277] phi print_ulong::dw#4 = print_ulong::dw#1 [phi:mul16u_error::@5->print_ulong#1] -- register_copy 
    jsr print_ulong
    // [182] phi from mul16u_error::@5 to mul16u_error::@6 [phi:mul16u_error::@5->mul16u_error::@6]
    // mul16u_error::@6
    // print_str(" / normal:")
    // [183] call print_str 
    // [139] phi from mul16u_error::@6 to print_str [phi:mul16u_error::@6->print_str]
    // [139] phi print_char_cursor#157 = print_char_cursor#21 [phi:mul16u_error::@6->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = str3 [phi:mul16u_error::@6->print_str#1] -- pbuz1=pbuc1 
    lda #<str3
    sta.z print_str.str
    lda #>str3
    sta.z print_str.str+1
    jsr print_str
    // mul16u_error::@7
    // print_ulong(mn)
    // [184] print_ulong::dw#2 = mul16u_error::mn#0 -- vduz1=vduz2 
    lda.z mn
    sta.z print_ulong.dw
    lda.z mn+1
    sta.z print_ulong.dw+1
    lda.z mn+2
    sta.z print_ulong.dw+2
    lda.z mn+3
    sta.z print_ulong.dw+3
    // [185] call print_ulong 
    // [277] phi from mul16u_error::@7 to print_ulong [phi:mul16u_error::@7->print_ulong]
    // [277] phi print_char_cursor#141 = print_char_cursor#1 [phi:mul16u_error::@7->print_ulong#0] -- register_copy 
    // [277] phi print_ulong::dw#4 = print_ulong::dw#2 [phi:mul16u_error::@7->print_ulong#1] -- register_copy 
    jsr print_ulong
    // [186] phi from mul16u_error::@7 to mul16u_error::@8 [phi:mul16u_error::@7->mul16u_error::@8]
    // mul16u_error::@8
    // print_str(" / fast:")
    // [187] call print_str 
    // [139] phi from mul16u_error::@8 to print_str [phi:mul16u_error::@8->print_str]
    // [139] phi print_char_cursor#157 = print_char_cursor#21 [phi:mul16u_error::@8->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = str4 [phi:mul16u_error::@8->print_str#1] -- pbuz1=pbuc1 
    lda #<str4
    sta.z print_str.str
    lda #>str4
    sta.z print_str.str+1
    jsr print_str
    // mul16u_error::@9
    // print_ulong(mf)
    // [188] print_ulong::dw#3 = mul16u_error::mf#0 -- vduz1=vduz2 
    lda.z mf
    sta.z print_ulong.dw
    lda.z mf+1
    sta.z print_ulong.dw+1
    lda.z mf+2
    sta.z print_ulong.dw+2
    lda.z mf+3
    sta.z print_ulong.dw+3
    // [189] call print_ulong 
    // [277] phi from mul16u_error::@9 to print_ulong [phi:mul16u_error::@9->print_ulong]
    // [277] phi print_char_cursor#141 = print_char_cursor#1 [phi:mul16u_error::@9->print_ulong#0] -- register_copy 
    // [277] phi print_ulong::dw#4 = print_ulong::dw#3 [phi:mul16u_error::@9->print_ulong#1] -- register_copy 
    jsr print_ulong
    // [190] phi from mul16u_error::@9 to mul16u_error::@10 [phi:mul16u_error::@9->mul16u_error::@10]
    // mul16u_error::@10
    // print_ln()
    // [191] call print_ln 
    // [193] phi from mul16u_error::@10 to print_ln [phi:mul16u_error::@10->print_ln]
    // [193] phi print_char_cursor#136 = print_char_cursor#21 [phi:mul16u_error::@10->print_ln#0] -- register_copy 
    // [193] phi print_line_cursor#45 = print_screen#0 [phi:mul16u_error::@10->print_ln#1] -- pbuz1=pbuc1 
    lda #<print_screen
    sta.z print_line_cursor
    lda #>print_screen
    sta.z print_line_cursor+1
    jsr print_ln
    // mul16u_error::@return
    // }
    // [192] return 
    rts
    str: .text "multiply mismatch "
    .byte 0
}
  // print_ln
// Print a newline
print_ln: {
    // [194] phi from print_ln print_ln::@1 to print_ln::@1 [phi:print_ln/print_ln::@1->print_ln::@1]
    // [194] phi print_line_cursor#23 = print_line_cursor#45 [phi:print_ln/print_ln::@1->print_ln::@1#0] -- register_copy 
    // print_ln::@1
  __b1:
    // print_line_cursor + $28
    // [195] print_line_cursor#0 = print_line_cursor#23 + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z print_line_cursor
    sta.z print_line_cursor
    bcc !+
    inc.z print_line_cursor+1
  !:
    // while (print_line_cursor<print_char_cursor)
    // [196] if(print_line_cursor#0<print_char_cursor#136) goto print_ln::@1 -- pbuz1_lt_pbuz2_then_la1 
    lda.z print_line_cursor+1
    cmp.z print_char_cursor+1
    bcc __b1
    bne !+
    lda.z print_line_cursor
    cmp.z print_char_cursor
    bcc __b1
  !:
    // print_ln::@return
    // }
    // [197] return 
    rts
}
  // muls16s
// Slow multiplication of signed words
// Perform a signed multiplication by repeated addition/subtraction
// muls16s(signed word zp(4) a, signed word zp(6) b)
muls16s: {
    .label m = 8
    .label j = $1c
    .label return = 8
    .label i = $18
    .label a = 4
    .label b = 6
    // if(a<0)
    // [198] if(muls16s::a#0<0) goto muls16s::@5 -- vwsz1_lt_0_then_la1 
    lda.z a+1
    bmi __b8
    // muls16s::@2
    // if (a>0)
    // [199] if(muls16s::a#0<=0) goto muls16s::@1 -- vwsz1_le_0_then_la1 
    bmi __b7
    bne !+
    lda.z a
    beq __b7
  !:
    // [200] phi from muls16s::@2 to muls16s::@3 [phi:muls16s::@2->muls16s::@3]
    // [200] phi muls16s::m#3 = 0 [phi:muls16s::@2->muls16s::@3#0] -- vdsz1=vdsc1 
    lda #<0
    sta.z m
    sta.z m+1
    lda #<0>>$10
    sta.z m+2
    lda #>0>>$10
    sta.z m+3
    // [200] phi muls16s::j#2 = 0 [phi:muls16s::@2->muls16s::@3#1] -- vwsz1=vwsc1 
    lda #<0
    sta.z j
    sta.z j+1
    // muls16s::@3
  __b3:
    // for(signed word j = 0; j!=a; j++)
    // [201] if(muls16s::j#2!=muls16s::a#0) goto muls16s::@4 -- vwsz1_neq_vwsz2_then_la1 
    lda.z j+1
    cmp.z a+1
    bne __b4
    lda.z j
    cmp.z a
    bne __b4
    // [202] phi from muls16s::@3 muls16s::@5 to muls16s::@1 [phi:muls16s::@3/muls16s::@5->muls16s::@1]
    // [202] phi muls16s::return#0 = muls16s::m#3 [phi:muls16s::@3/muls16s::@5->muls16s::@1#0] -- register_copy 
    rts
    // [202] phi from muls16s::@2 to muls16s::@1 [phi:muls16s::@2->muls16s::@1]
  __b7:
    // [202] phi muls16s::return#0 = 0 [phi:muls16s::@2->muls16s::@1#0] -- vdsz1=vdsc1 
    lda #<0
    sta.z return
    sta.z return+1
    lda #<0>>$10
    sta.z return+2
    lda #>0>>$10
    sta.z return+3
    // muls16s::@1
    // muls16s::@return
    // }
    // [203] return 
    rts
    // muls16s::@4
  __b4:
    // m = m + b
    // [204] muls16s::m#1 = muls16s::m#3 + muls16s::b#0 -- vdsz1=vdsz1_plus_vwsz2 
    lda.z b+1
    ora #$7f
    bmi !+
    lda #0
  !:
    sta.z $ff
    lda.z m
    clc
    adc.z b
    sta.z m
    lda.z m+1
    adc.z b+1
    sta.z m+1
    lda.z m+2
    adc.z $ff
    sta.z m+2
    lda.z m+3
    adc.z $ff
    sta.z m+3
    // for(signed word j = 0; j!=a; j++)
    // [205] muls16s::j#1 = ++ muls16s::j#2 -- vwsz1=_inc_vwsz1 
    inc.z j
    bne !+
    inc.z j+1
  !:
    // [200] phi from muls16s::@4 to muls16s::@3 [phi:muls16s::@4->muls16s::@3]
    // [200] phi muls16s::m#3 = muls16s::m#1 [phi:muls16s::@4->muls16s::@3#0] -- register_copy 
    // [200] phi muls16s::j#2 = muls16s::j#1 [phi:muls16s::@4->muls16s::@3#1] -- register_copy 
    jmp __b3
    // [206] phi from muls16s to muls16s::@5 [phi:muls16s->muls16s::@5]
  __b8:
    // [206] phi muls16s::m#5 = 0 [phi:muls16s->muls16s::@5#0] -- vdsz1=vdsc1 
    lda #<0
    sta.z m
    sta.z m+1
    lda #<0>>$10
    sta.z m+2
    lda #>0>>$10
    sta.z m+3
    // [206] phi muls16s::i#2 = 0 [phi:muls16s->muls16s::@5#1] -- vwsz1=vwsc1 
    lda #<0
    sta.z i
    sta.z i+1
    // muls16s::@5
  __b5:
    // for(signed word i = 0; i!=a; i--)
    // [207] if(muls16s::i#2!=muls16s::a#0) goto muls16s::@6 -- vwsz1_neq_vwsz2_then_la1 
    lda.z i+1
    cmp.z a+1
    bne __b6
    lda.z i
    cmp.z a
    bne __b6
    rts
    // muls16s::@6
  __b6:
    // m = m - b
    // [208] muls16s::m#2 = muls16s::m#5 - muls16s::b#0 -- vdsz1=vdsz1_minus_vwsz2 
    lda.z b+1
    ora #$7f
    bmi !+
    lda #0
  !:
    sta.z $ff
    sec
    lda.z m
    sbc.z b
    sta.z m
    lda.z m+1
    sbc.z b+1
    sta.z m+1
    lda.z m+2
    sbc.z $ff
    sta.z m+2
    lda.z m+3
    sbc.z $ff
    sta.z m+3
    // for(signed word i = 0; i!=a; i--)
    // [209] muls16s::i#1 = -- muls16s::i#2 -- vwsz1=_dec_vwsz1 
    lda.z i
    bne !+
    dec.z i+1
  !:
    dec.z i
    // [206] phi from muls16s::@6 to muls16s::@5 [phi:muls16s::@6->muls16s::@5]
    // [206] phi muls16s::m#5 = muls16s::m#2 [phi:muls16s::@6->muls16s::@5#0] -- register_copy 
    // [206] phi muls16s::i#2 = muls16s::i#1 [phi:muls16s::@6->muls16s::@5#1] -- register_copy 
    jmp __b5
}
  // mul16s
// Multiply of two signed ints to a signed long
// Fixes offsets introduced by using unsigned multiplication
// mul16s(signed word zp(4) a, signed word zp(6) b)
mul16s: {
    .label __6 = $18
    .label __9 = $1a
    .label __11 = $18
    .label __12 = $1a
    .label m = $c
    .label return = $c
    .label a = 4
    .label b = 6
    // mul16u((unsigned int)a, (unsigned int) b)
    // [210] mul16u::a#1 = (word)mul16s::a#0 -- vwuz1=vwuz2 
    lda.z a
    sta.z mul16u.a
    lda.z a+1
    sta.z mul16u.a+1
    // [211] mul16u::b#0 = (word)mul16s::b#0 -- vwuz1=vwuz2 
    lda.z b
    sta.z mul16u.b
    lda.z b+1
    sta.z mul16u.b+1
    // [212] call mul16u 
    // [153] phi from mul16s to mul16u [phi:mul16s->mul16u]
    // [153] phi mul16u::a#6 = mul16u::a#1 [phi:mul16s->mul16u#0] -- register_copy 
    // [153] phi mul16u::b#2 = mul16u::b#0 [phi:mul16s->mul16u#1] -- register_copy 
    jsr mul16u
    // mul16u((unsigned int)a, (unsigned int) b)
    // [213] mul16u::return#2 = mul16u::res#2
    // mul16s::@5
    // m = mul16u((unsigned int)a, (unsigned int) b)
    // [214] mul16s::m#0 = mul16u::return#2
    // if(a<0)
    // [215] if(mul16s::a#0>=0) goto mul16s::@1 -- vwsz1_ge_0_then_la1 
    lda.z a+1
    bpl __b1
    // mul16s::@3
    // >m
    // [216] mul16s::$6 = > mul16s::m#0 -- vwuz1=_hi_vduz2 
    lda.z m+2
    sta.z __6
    lda.z m+3
    sta.z __6+1
    // >m = (>m)-(unsigned int)b
    // [217] mul16s::$11 = mul16s::$6 - (word)mul16s::b#0 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z __11
    sec
    sbc.z b
    sta.z __11
    lda.z __11+1
    sbc.z b+1
    sta.z __11+1
    // [218] mul16s::m#1 = mul16s::m#0 hi= mul16s::$11 -- vduz1=vduz1_sethi_vwuz2 
    lda.z __11
    sta.z m+2
    lda.z __11+1
    sta.z m+3
    // [219] phi from mul16s::@3 mul16s::@5 to mul16s::@1 [phi:mul16s::@3/mul16s::@5->mul16s::@1]
    // [219] phi mul16s::m#5 = mul16s::m#1 [phi:mul16s::@3/mul16s::@5->mul16s::@1#0] -- register_copy 
    // mul16s::@1
  __b1:
    // if(b<0)
    // [220] if(mul16s::b#0>=0) goto mul16s::@2 -- vwsz1_ge_0_then_la1 
    lda.z b+1
    bpl __b2
    // mul16s::@4
    // >m
    // [221] mul16s::$9 = > mul16s::m#5 -- vwuz1=_hi_vduz2 
    lda.z m+2
    sta.z __9
    lda.z m+3
    sta.z __9+1
    // >m = (>m)-(unsigned int)a
    // [222] mul16s::$12 = mul16s::$9 - (word)mul16s::a#0 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z __12
    sec
    sbc.z a
    sta.z __12
    lda.z __12+1
    sbc.z a+1
    sta.z __12+1
    // [223] mul16s::m#2 = mul16s::m#5 hi= mul16s::$12 -- vduz1=vduz1_sethi_vwuz2 
    lda.z __12
    sta.z m+2
    lda.z __12+1
    sta.z m+3
    // [224] phi from mul16s::@1 mul16s::@4 to mul16s::@2 [phi:mul16s::@1/mul16s::@4->mul16s::@2]
    // [224] phi mul16s::m#4 = mul16s::m#5 [phi:mul16s::@1/mul16s::@4->mul16s::@2#0] -- register_copy 
    // mul16s::@2
  __b2:
    // return (signed long)m;
    // [225] mul16s::return#0 = (signed dword)mul16s::m#4
    // mul16s::@return
    // }
    // [226] return 
    rts
}
  // mulf16s
// Fast multiply two signed ints to a signed double unsigned int result
// Fixes offsets introduced by using unsigned multiplication
// mulf16s(signed word zp(4) a, signed word zp(6) b)
mulf16s: {
    .label __6 = $1a
    .label __9 = $1c
    .label __11 = $1a
    .label __12 = $1c
    .label m = $12
    .label return = $12
    .label a = 4
    .label b = 6
    // mulf16u((unsigned int)a, (unsigned int)b)
    // [227] mulf16u::a#0 = (word)mulf16s::a#0 -- vwuz1=vwuz2 
    lda.z a
    sta.z mulf16u.a
    lda.z a+1
    sta.z mulf16u.a+1
    // [228] mulf16u::b#0 = (word)mulf16s::b#0 -- vwuz1=vwuz2 
    lda.z b
    sta.z mulf16u.b
    lda.z b+1
    sta.z mulf16u.b+1
    // [229] call mulf16u 
    // [164] phi from mulf16s to mulf16u [phi:mulf16s->mulf16u]
    // [164] phi mulf16u::b#2 = mulf16u::b#0 [phi:mulf16s->mulf16u#0] -- register_copy 
    // [164] phi mulf16u::a#2 = mulf16u::a#0 [phi:mulf16s->mulf16u#1] -- register_copy 
    jsr mulf16u
    // mulf16u((unsigned int)a, (unsigned int)b)
    // [230] mulf16u::return#2 = mulf16u::return#0
    // mulf16s::@5
    // m = mulf16u((unsigned int)a, (unsigned int)b)
    // [231] mulf16s::m#0 = mulf16u::return#2
    // if(a<0)
    // [232] if(mulf16s::a#0>=0) goto mulf16s::@1 -- vwsz1_ge_0_then_la1 
    lda.z a+1
    bpl __b1
    // mulf16s::@3
    // >m
    // [233] mulf16s::$6 = > mulf16s::m#0 -- vwuz1=_hi_vduz2 
    lda.z m+2
    sta.z __6
    lda.z m+3
    sta.z __6+1
    // >m = (>m)-(unsigned int)b
    // [234] mulf16s::$11 = mulf16s::$6 - (word)mulf16s::b#0 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z __11
    sec
    sbc.z b
    sta.z __11
    lda.z __11+1
    sbc.z b+1
    sta.z __11+1
    // [235] mulf16s::m#1 = mulf16s::m#0 hi= mulf16s::$11 -- vduz1=vduz1_sethi_vwuz2 
    lda.z __11
    sta.z m+2
    lda.z __11+1
    sta.z m+3
    // [236] phi from mulf16s::@3 mulf16s::@5 to mulf16s::@1 [phi:mulf16s::@3/mulf16s::@5->mulf16s::@1]
    // [236] phi mulf16s::m#5 = mulf16s::m#1 [phi:mulf16s::@3/mulf16s::@5->mulf16s::@1#0] -- register_copy 
    // mulf16s::@1
  __b1:
    // if(b<0)
    // [237] if(mulf16s::b#0>=0) goto mulf16s::@2 -- vwsz1_ge_0_then_la1 
    lda.z b+1
    bpl __b2
    // mulf16s::@4
    // >m
    // [238] mulf16s::$9 = > mulf16s::m#5 -- vwuz1=_hi_vduz2 
    lda.z m+2
    sta.z __9
    lda.z m+3
    sta.z __9+1
    // >m = (>m)-(unsigned int)a
    // [239] mulf16s::$12 = mulf16s::$9 - (word)mulf16s::a#0 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z __12
    sec
    sbc.z a
    sta.z __12
    lda.z __12+1
    sbc.z a+1
    sta.z __12+1
    // [240] mulf16s::m#2 = mulf16s::m#5 hi= mulf16s::$12 -- vduz1=vduz1_sethi_vwuz2 
    lda.z __12
    sta.z m+2
    lda.z __12+1
    sta.z m+3
    // [241] phi from mulf16s::@1 mulf16s::@4 to mulf16s::@2 [phi:mulf16s::@1/mulf16s::@4->mulf16s::@2]
    // [241] phi mulf16s::m#4 = mulf16s::m#5 [phi:mulf16s::@1/mulf16s::@4->mulf16s::@2#0] -- register_copy 
    // mulf16s::@2
  __b2:
    // return (signed long)m;
    // [242] mulf16s::return#0 = (signed dword)mulf16s::m#4
    // mulf16s::@return
    // }
    // [243] return 
    rts
}
  // mul16s_error
// mul16s_error(signed word zp(4) a, signed word zp(6) b, signed dword zp(8) ms, signed dword zp($c) mn, signed dword zp($12) mf)
mul16s_error: {
    .label a = 4
    .label b = 6
    .label ms = 8
    .label mn = $c
    .label mf = $12
    // print_str("signed word multiply mismatch ")
    // [245] call print_str 
    // [139] phi from mul16s_error to print_str [phi:mul16s_error->print_str]
    // [139] phi print_char_cursor#157 = print_char_cursor#1 [phi:mul16s_error->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = mul16s_error::str [phi:mul16s_error->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    // mul16s_error::@1
    // print_sint(a)
    // [246] print_sint::w#1 = mul16s_error::a#0 -- vwsz1=vwsz2 
    lda.z a
    sta.z print_sint.w
    lda.z a+1
    sta.z print_sint.w+1
    // [247] call print_sint 
    // [283] phi from mul16s_error::@1 to print_sint [phi:mul16s_error::@1->print_sint]
    // [283] phi print_sint::w#3 = print_sint::w#1 [phi:mul16s_error::@1->print_sint#0] -- register_copy 
    jsr print_sint
    // [248] phi from mul16s_error::@1 to mul16s_error::@2 [phi:mul16s_error::@1->mul16s_error::@2]
    // mul16s_error::@2
    // print_str("*")
    // [249] call print_str 
    // [139] phi from mul16s_error::@2 to print_str [phi:mul16s_error::@2->print_str]
    // [139] phi print_char_cursor#157 = print_char_cursor#21 [phi:mul16s_error::@2->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = str1 [phi:mul16s_error::@2->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    // mul16s_error::@3
    // print_sint(b)
    // [250] print_sint::w#2 = mul16s_error::b#0 -- vwsz1=vwsz2 
    lda.z b
    sta.z print_sint.w
    lda.z b+1
    sta.z print_sint.w+1
    // [251] call print_sint 
    // [283] phi from mul16s_error::@3 to print_sint [phi:mul16s_error::@3->print_sint]
    // [283] phi print_sint::w#3 = print_sint::w#2 [phi:mul16s_error::@3->print_sint#0] -- register_copy 
    jsr print_sint
    // [252] phi from mul16s_error::@3 to mul16s_error::@4 [phi:mul16s_error::@3->mul16s_error::@4]
    // mul16s_error::@4
    // print_str(" slow:")
    // [253] call print_str 
    // [139] phi from mul16s_error::@4 to print_str [phi:mul16s_error::@4->print_str]
    // [139] phi print_char_cursor#157 = print_char_cursor#21 [phi:mul16s_error::@4->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = str2 [phi:mul16s_error::@4->print_str#1] -- pbuz1=pbuc1 
    lda #<str2
    sta.z print_str.str
    lda #>str2
    sta.z print_str.str+1
    jsr print_str
    // mul16s_error::@5
    // print_slong(ms)
    // [254] print_slong::dw#1 = mul16s_error::ms#0
    // [255] call print_slong 
    // [294] phi from mul16s_error::@5 to print_slong [phi:mul16s_error::@5->print_slong]
    // [294] phi print_slong::dw#4 = print_slong::dw#1 [phi:mul16s_error::@5->print_slong#0] -- register_copy 
    jsr print_slong
    // [256] phi from mul16s_error::@5 to mul16s_error::@6 [phi:mul16s_error::@5->mul16s_error::@6]
    // mul16s_error::@6
    // print_str(" / normal:")
    // [257] call print_str 
    // [139] phi from mul16s_error::@6 to print_str [phi:mul16s_error::@6->print_str]
    // [139] phi print_char_cursor#157 = print_char_cursor#21 [phi:mul16s_error::@6->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = str3 [phi:mul16s_error::@6->print_str#1] -- pbuz1=pbuc1 
    lda #<str3
    sta.z print_str.str
    lda #>str3
    sta.z print_str.str+1
    jsr print_str
    // mul16s_error::@7
    // print_slong(mn)
    // [258] print_slong::dw#2 = mul16s_error::mn#0 -- vdsz1=vdsz2 
    lda.z mn
    sta.z print_slong.dw
    lda.z mn+1
    sta.z print_slong.dw+1
    lda.z mn+2
    sta.z print_slong.dw+2
    lda.z mn+3
    sta.z print_slong.dw+3
    // [259] call print_slong 
    // [294] phi from mul16s_error::@7 to print_slong [phi:mul16s_error::@7->print_slong]
    // [294] phi print_slong::dw#4 = print_slong::dw#2 [phi:mul16s_error::@7->print_slong#0] -- register_copy 
    jsr print_slong
    // [260] phi from mul16s_error::@7 to mul16s_error::@8 [phi:mul16s_error::@7->mul16s_error::@8]
    // mul16s_error::@8
    // print_str(" / fast:")
    // [261] call print_str 
    // [139] phi from mul16s_error::@8 to print_str [phi:mul16s_error::@8->print_str]
    // [139] phi print_char_cursor#157 = print_char_cursor#21 [phi:mul16s_error::@8->print_str#0] -- register_copy 
    // [139] phi print_str::str#18 = str4 [phi:mul16s_error::@8->print_str#1] -- pbuz1=pbuc1 
    lda #<str4
    sta.z print_str.str
    lda #>str4
    sta.z print_str.str+1
    jsr print_str
    // mul16s_error::@9
    // print_slong(mf)
    // [262] print_slong::dw#3 = mul16s_error::mf#0 -- vdsz1=vdsz2 
    lda.z mf
    sta.z print_slong.dw
    lda.z mf+1
    sta.z print_slong.dw+1
    lda.z mf+2
    sta.z print_slong.dw+2
    lda.z mf+3
    sta.z print_slong.dw+3
    // [263] call print_slong 
    // [294] phi from mul16s_error::@9 to print_slong [phi:mul16s_error::@9->print_slong]
    // [294] phi print_slong::dw#4 = print_slong::dw#3 [phi:mul16s_error::@9->print_slong#0] -- register_copy 
    jsr print_slong
    // [264] phi from mul16s_error::@9 to mul16s_error::@10 [phi:mul16s_error::@9->mul16s_error::@10]
    // mul16s_error::@10
    // print_ln()
    // [265] call print_ln 
    // [193] phi from mul16s_error::@10 to print_ln [phi:mul16s_error::@10->print_ln]
    // [193] phi print_char_cursor#136 = print_char_cursor#21 [phi:mul16s_error::@10->print_ln#0] -- register_copy 
    // [193] phi print_line_cursor#45 = print_line_cursor#0 [phi:mul16s_error::@10->print_ln#1] -- register_copy 
    jsr print_ln
    // mul16s_error::@return
    // }
    // [266] return 
    rts
    str: .text "signed word multiply mismatch "
    .byte 0
}
  // print_char
// Print a single char
// print_char(byte register(A) ch)
print_char: {
    // *(print_char_cursor++) = ch
    // [268] *print_char_cursor#89 = print_char::ch#7 -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (print_char_cursor),y
    // *(print_char_cursor++) = ch;
    // [269] print_char_cursor#21 = ++ print_char_cursor#89 -- pbuz1=_inc_pbuz1 
    inc.z print_char_cursor
    bne !+
    inc.z print_char_cursor+1
  !:
    // print_char::@return
    // }
    // [270] return 
    rts
}
  // print_uint
// Print a unsigned int as HEX
// print_uint(word zp($18) w)
print_uint: {
    .label w = $18
    // print_uchar(>w)
    // [272] print_uchar::b#0 = > print_uint::w#5 -- vbuxx=_hi_vwuz1 
    ldx.z w+1
    // [273] call print_uchar 
    // [305] phi from print_uint to print_uchar [phi:print_uint->print_uchar]
    // [305] phi print_char_cursor#145 = print_char_cursor#140 [phi:print_uint->print_uchar#0] -- register_copy 
    // [305] phi print_uchar::b#2 = print_uchar::b#0 [phi:print_uint->print_uchar#1] -- register_copy 
    jsr print_uchar
    // print_uint::@1
    // print_uchar(<w)
    // [274] print_uchar::b#1 = < print_uint::w#5 -- vbuxx=_lo_vwuz1 
    ldx.z w
    // [275] call print_uchar 
    // [305] phi from print_uint::@1 to print_uchar [phi:print_uint::@1->print_uchar]
    // [305] phi print_char_cursor#145 = print_char_cursor#21 [phi:print_uint::@1->print_uchar#0] -- register_copy 
    // [305] phi print_uchar::b#2 = print_uchar::b#1 [phi:print_uint::@1->print_uchar#1] -- register_copy 
    jsr print_uchar
    // print_uint::@return
    // }
    // [276] return 
    rts
}
  // print_ulong
// Print a unsigned long as HEX
// print_ulong(dword zp(8) dw)
print_ulong: {
    .label dw = 8
    // print_uint(>dw)
    // [278] print_uint::w#1 = > print_ulong::dw#4 -- vwuz1=_hi_vduz2 
    lda.z dw+2
    sta.z print_uint.w
    lda.z dw+3
    sta.z print_uint.w+1
    // [279] call print_uint 
    // [271] phi from print_ulong to print_uint [phi:print_ulong->print_uint]
    // [271] phi print_char_cursor#140 = print_char_cursor#141 [phi:print_ulong->print_uint#0] -- register_copy 
    // [271] phi print_uint::w#5 = print_uint::w#1 [phi:print_ulong->print_uint#1] -- register_copy 
    jsr print_uint
    // print_ulong::@1
    // print_uint(<dw)
    // [280] print_uint::w#2 = < print_ulong::dw#4 -- vwuz1=_lo_vduz2 
    lda.z dw
    sta.z print_uint.w
    lda.z dw+1
    sta.z print_uint.w+1
    // [281] call print_uint 
    // [271] phi from print_ulong::@1 to print_uint [phi:print_ulong::@1->print_uint]
    // [271] phi print_char_cursor#140 = print_char_cursor#21 [phi:print_ulong::@1->print_uint#0] -- register_copy 
    // [271] phi print_uint::w#5 = print_uint::w#2 [phi:print_ulong::@1->print_uint#1] -- register_copy 
    jsr print_uint
    // print_ulong::@return
    // }
    // [282] return 
    rts
}
  // print_sint
// Print a signed int as HEX
// print_sint(signed word zp($18) w)
print_sint: {
    .label w = $18
    // if(w<0)
    // [284] if(print_sint::w#3<0) goto print_sint::@1 -- vwsz1_lt_0_then_la1 
    lda.z w+1
    bmi __b1
    // [285] phi from print_sint to print_sint::@3 [phi:print_sint->print_sint::@3]
    // print_sint::@3
    // print_char(' ')
    // [286] call print_char 
    // [267] phi from print_sint::@3 to print_char [phi:print_sint::@3->print_char]
    // [267] phi print_char_cursor#89 = print_char_cursor#1 [phi:print_sint::@3->print_char#0] -- register_copy 
    // [267] phi print_char::ch#7 = ' ' [phi:print_sint::@3->print_char#1] -- vbuaa=vbuc1 
    lda #' '
    jsr print_char
    // [287] phi from print_sint::@3 print_sint::@4 to print_sint::@2 [phi:print_sint::@3/print_sint::@4->print_sint::@2]
    // [287] phi print_sint::w#5 = print_sint::w#3 [phi:print_sint::@3/print_sint::@4->print_sint::@2#0] -- register_copy 
    // print_sint::@2
  __b2:
    // print_uint((unsigned int)w)
    // [288] print_uint::w#0 = (word)print_sint::w#5
    // [289] call print_uint 
    // [271] phi from print_sint::@2 to print_uint [phi:print_sint::@2->print_uint]
    // [271] phi print_char_cursor#140 = print_char_cursor#21 [phi:print_sint::@2->print_uint#0] -- register_copy 
    // [271] phi print_uint::w#5 = print_uint::w#0 [phi:print_sint::@2->print_uint#1] -- register_copy 
    jsr print_uint
    // print_sint::@return
    // }
    // [290] return 
    rts
    // [291] phi from print_sint to print_sint::@1 [phi:print_sint->print_sint::@1]
    // print_sint::@1
  __b1:
    // print_char('-')
    // [292] call print_char 
    // [267] phi from print_sint::@1 to print_char [phi:print_sint::@1->print_char]
    // [267] phi print_char_cursor#89 = print_char_cursor#1 [phi:print_sint::@1->print_char#0] -- register_copy 
    // [267] phi print_char::ch#7 = '-' [phi:print_sint::@1->print_char#1] -- vbuaa=vbuc1 
    lda #'-'
    jsr print_char
    // print_sint::@4
    // w = -w
    // [293] print_sint::w#0 = - print_sint::w#3 -- vwsz1=_neg_vwsz1 
    sec
    lda #0
    sbc.z w
    sta.z w
    lda #0
    sbc.z w+1
    sta.z w+1
    jmp __b2
}
  // print_slong
// Print a signed long as HEX
// print_slong(signed dword zp(8) dw)
print_slong: {
    .label dw = 8
    // if(dw<0)
    // [295] if(print_slong::dw#4<0) goto print_slong::@1 -- vdsz1_lt_0_then_la1 
    lda.z dw+3
    bmi __b1
    // [296] phi from print_slong to print_slong::@3 [phi:print_slong->print_slong::@3]
    // print_slong::@3
    // print_char(' ')
    // [297] call print_char 
    // [267] phi from print_slong::@3 to print_char [phi:print_slong::@3->print_char]
    // [267] phi print_char_cursor#89 = print_char_cursor#1 [phi:print_slong::@3->print_char#0] -- register_copy 
    // [267] phi print_char::ch#7 = ' ' [phi:print_slong::@3->print_char#1] -- vbuaa=vbuc1 
    lda #' '
    jsr print_char
    // [298] phi from print_slong::@3 print_slong::@4 to print_slong::@2 [phi:print_slong::@3/print_slong::@4->print_slong::@2]
    // [298] phi print_slong::dw#6 = print_slong::dw#4 [phi:print_slong::@3/print_slong::@4->print_slong::@2#0] -- register_copy 
    // print_slong::@2
  __b2:
    // print_ulong((unsigned long)dw)
    // [299] print_ulong::dw#0 = (dword)print_slong::dw#6
    // [300] call print_ulong 
    // [277] phi from print_slong::@2 to print_ulong [phi:print_slong::@2->print_ulong]
    // [277] phi print_char_cursor#141 = print_char_cursor#21 [phi:print_slong::@2->print_ulong#0] -- register_copy 
    // [277] phi print_ulong::dw#4 = print_ulong::dw#0 [phi:print_slong::@2->print_ulong#1] -- register_copy 
    jsr print_ulong
    // print_slong::@return
    // }
    // [301] return 
    rts
    // [302] phi from print_slong to print_slong::@1 [phi:print_slong->print_slong::@1]
    // print_slong::@1
  __b1:
    // print_char('-')
    // [303] call print_char 
    // [267] phi from print_slong::@1 to print_char [phi:print_slong::@1->print_char]
    // [267] phi print_char_cursor#89 = print_char_cursor#1 [phi:print_slong::@1->print_char#0] -- register_copy 
    // [267] phi print_char::ch#7 = '-' [phi:print_slong::@1->print_char#1] -- vbuaa=vbuc1 
    lda #'-'
    jsr print_char
    // print_slong::@4
    // dw = -dw
    // [304] print_slong::dw#0 = - print_slong::dw#4 -- vdsz1=_neg_vdsz1 
    sec
    lda.z dw
    eor #$ff
    adc #0
    sta.z dw
    lda.z dw+1
    eor #$ff
    adc #0
    sta.z dw+1
    lda.z dw+2
    eor #$ff
    adc #0
    sta.z dw+2
    lda.z dw+3
    eor #$ff
    adc #0
    sta.z dw+3
    jmp __b2
}
  // print_uchar
// Print a char as HEX
// print_uchar(byte register(X) b)
print_uchar: {
    // b>>4
    // [306] print_uchar::$0 = print_uchar::b#2 >> 4 -- vbuaa=vbuxx_ror_4 
    txa
    lsr
    lsr
    lsr
    lsr
    // print_char(print_hextab[b>>4])
    // [307] print_char::ch#5 = print_hextab[print_uchar::$0] -- vbuaa=pbuc1_derefidx_vbuaa 
    tay
    lda print_hextab,y
    // [308] call print_char 
  // Table of hexadecimal digits
    // [267] phi from print_uchar to print_char [phi:print_uchar->print_char]
    // [267] phi print_char_cursor#89 = print_char_cursor#145 [phi:print_uchar->print_char#0] -- register_copy 
    // [267] phi print_char::ch#7 = print_char::ch#5 [phi:print_uchar->print_char#1] -- register_copy 
    jsr print_char
    // print_uchar::@1
    // b&$f
    // [309] print_uchar::$2 = print_uchar::b#2 & $f -- vbuxx=vbuxx_band_vbuc1 
    lda #$f
    axs #0
    // print_char(print_hextab[b&$f])
    // [310] print_char::ch#6 = print_hextab[print_uchar::$2] -- vbuaa=pbuc1_derefidx_vbuxx 
    lda print_hextab,x
    // [311] call print_char 
    // [267] phi from print_uchar::@1 to print_char [phi:print_uchar::@1->print_char]
    // [267] phi print_char_cursor#89 = print_char_cursor#21 [phi:print_uchar::@1->print_char#0] -- register_copy 
    // [267] phi print_char::ch#7 = print_char::ch#6 [phi:print_uchar::@1->print_char#1] -- register_copy 
    jsr print_char
    // print_uchar::@return
    // }
    // [312] return 
    rts
}
  // File Data
  print_hextab: .text "0123456789abcdef"
  // mulf_sqr tables will contain f(x)=int(x*x/4) and g(x) = f(x-255).
  // <f(x) = <(( x * x )/4)
  .align $100
  mulf_sqr1_lo: .fill $200, 0
  // >f(x) = >(( x * x )/4)
  .align $100
  mulf_sqr1_hi: .fill $200, 0
  // <g(x) =  <((( x - 255) * ( x - 255 ))/4)
  .align $100
  mulf_sqr2_lo: .fill $200, 0
  // >g(x) = >((( x - 255) * ( x - 255 ))/4)
  .align $100
  mulf_sqr2_hi: .fill $200, 0
  str: .text "."
  .byte 0
  str1: .text "*"
  .byte 0
  str2: .text " slow:"
  .byte 0
  str3: .text " / normal:"
  .byte 0
  str4: .text " / fast:"
  .byte 0

