(label) @1
(label) @begin
(label) @end
(struct Point) Circle::center
(byte) Circle::radius
(const byte) OFFSET_STRUCT_CIRCLE_CENTER OFFSET_STRUCT_CIRCLE_CENTER = (byte) 1
(const byte) OFFSET_STRUCT_POINT_Y OFFSET_STRUCT_POINT_Y = (byte) 1
(byte) Point::x
(byte) Point::y
(const byte) SIZEOF_STRUCT_CIRCLE SIZEOF_STRUCT_CIRCLE = (byte) 3
(struct Circle[2]) circles
(const struct Circle[2]) circles#0 circles = { fill( 2, 0) }
(void()) main()
(struct Point*) main::$16 $16 zp ZP_WORD:3 11.0
(byte~) main::$2 reg byte a 22.0
(byte) main::$23 reg byte a 22.0
(label) main::@1
(label) main::@return
(byte*) main::SCREEN
(const byte*) main::SCREEN#0 SCREEN = (byte*) 1024
(byte) main::i
(byte) main::i#1 reg byte x 16.5
(byte) main::i#2 reg byte x 4.0
(byte) main::idx
(byte) main::idx#1 reg byte y 16.5
(byte) main::idx#2 idx zp ZP_BYTE:2 7.333333333333333
(byte) main::idx#3 idx zp ZP_BYTE:2 4.125
(struct Circle*) main::ptr
(struct Circle*) main::ptr#0 ptr zp ZP_WORD:3 5.5
(byte) main::x
(byte) main::x#0 x zp ZP_BYTE:5 7.333333333333333
(byte) main::y
(byte) main::y#0 y zp ZP_BYTE:6 7.333333333333333

reg byte x [ main::i#2 main::i#1 ]
zp ZP_BYTE:2 [ main::idx#3 main::idx#2 ]
reg byte a [ main::$23 ]
reg byte a [ main::$2 ]
zp ZP_WORD:3 [ main::ptr#0 main::$16 ]
zp ZP_BYTE:5 [ main::x#0 ]
zp ZP_BYTE:6 [ main::y#0 ]
reg byte y [ main::idx#1 ]
