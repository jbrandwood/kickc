// Generated from /Users/jespergravgaard/c64/src/kickc/src/main/java/dk/camelot64/kickc/parser/KickC.g4 by ANTLR 4.7
package dk.camelot64.kickc.parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class KickCLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, SIMPLETYPE=45, 
		STRING=46, BOOLEAN=47, NUMBER=48, NUMFLOAT=49, BINFLOAT=50, DECFLOAT=51, 
		HEXFLOAT=52, NUMINT=53, BININTEGER=54, DECINTEGER=55, HEXINTEGER=56, NAME=57, 
		WS=58, COMMENT_LINE=59, COMMENT_BLOCK=60;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "SIMPLETYPE", "STRING", "BOOLEAN", "NUMBER", 
		"NUMFLOAT", "BINFLOAT", "DECFLOAT", "HEXFLOAT", "NUMINT", "BININTEGER", 
		"DECINTEGER", "HEXINTEGER", "BINDIGIT", "DECDIGIT", "HEXDIGIT", "NAME", 
		"NAME_START", "NAME_CHAR", "WS", "COMMENT_LINE", "COMMENT_BLOCK"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'{'", "'}'", "'('", "')'", "'const'", "'='", "';'", "'if'", "'else'", 
		"'while'", "'do'", "'for'", "'return'", "':'", "'..'", "'.+.'", "'.-.'", 
		"','", "'*'", "'['", "']'", "'--'", "'++'", "'+'", "'-'", "'not'", "'!'", 
		"'&'", "'>>'", "'<<'", "'/'", "'=='", "'!='", "'<>'", "'<'", "'<='", "'=<'", 
		"'>='", "'=>'", "'>'", "'and'", "'&&'", "'or'", "'||'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, "SIMPLETYPE", "STRING", 
		"BOOLEAN", "NUMBER", "NUMFLOAT", "BINFLOAT", "DECFLOAT", "HEXFLOAT", "NUMINT", 
		"BININTEGER", "DECINTEGER", "HEXINTEGER", "NAME", "WS", "COMMENT_LINE", 
		"COMMENT_BLOCK"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public KickCLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "KickC.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2>\u01ca\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6"+
		"\3\6\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13"+
		"\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3"+
		"\16\3\16\3\16\3\16\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\22\3"+
		"\22\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\27\3"+
		"\30\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\33\3\34\3\34\3\35\3"+
		"\35\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3!\3!\3!\3\"\3\"\3\"\3#\3#\3#"+
		"\3$\3$\3%\3%\3%\3&\3&\3&\3\'\3\'\3\'\3(\3(\3(\3)\3)\3*\3*\3*\3*\3+\3+"+
		"\3+\3,\3,\3,\3-\3-\3-\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3."+
		"\3.\3.\3.\3.\3.\3.\3.\3.\3.\5.\u0122\n.\3/\3/\3/\3/\7/\u0128\n/\f/\16"+
		"/\u012b\13/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\5\60\u0138"+
		"\n\60\3\61\3\61\5\61\u013c\n\61\3\62\3\62\3\62\5\62\u0141\n\62\3\63\3"+
		"\63\3\63\3\63\3\63\5\63\u0148\n\63\3\63\7\63\u014b\n\63\f\63\16\63\u014e"+
		"\13\63\3\63\3\63\6\63\u0152\n\63\r\63\16\63\u0153\3\64\7\64\u0157\n\64"+
		"\f\64\16\64\u015a\13\64\3\64\3\64\6\64\u015e\n\64\r\64\16\64\u015f\3\65"+
		"\3\65\3\65\3\65\3\65\5\65\u0167\n\65\3\65\7\65\u016a\n\65\f\65\16\65\u016d"+
		"\13\65\3\65\3\65\6\65\u0171\n\65\r\65\16\65\u0172\3\66\3\66\3\66\5\66"+
		"\u0178\n\66\3\67\3\67\3\67\6\67\u017d\n\67\r\67\16\67\u017e\3\67\3\67"+
		"\6\67\u0183\n\67\r\67\16\67\u0184\5\67\u0187\n\67\38\68\u018a\n8\r8\16"+
		"8\u018b\39\39\39\39\39\59\u0193\n9\39\69\u0196\n9\r9\169\u0197\3:\3:\3"+
		";\3;\3<\3<\3=\3=\7=\u01a2\n=\f=\16=\u01a5\13=\3>\3>\3?\3?\3@\6@\u01ac"+
		"\n@\r@\16@\u01ad\3@\3@\3A\3A\3A\3A\7A\u01b6\nA\fA\16A\u01b9\13A\3A\3A"+
		"\3B\3B\3B\3B\7B\u01c1\nB\fB\16B\u01c4\13B\3B\3B\3B\3B\3B\3\u01c2\2C\3"+
		"\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37"+
		"\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37="+
		" ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9"+
		"q:s\2u\2w\2y;{\2}\2\177<\u0081=\u0083>\3\2\13\3\2$$\4\2DDdd\3\2\62\63"+
		"\3\2\62;\5\2\62;CHch\5\2C\\aac|\6\2\62;C\\aac|\5\2\13\f\17\17\"\"\4\2"+
		"\f\f\17\17\2\u01e5\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13"+
		"\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2"+
		"\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2"+
		"!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3"+
		"\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2"+
		"\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E"+
		"\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2"+
		"\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2"+
		"\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k"+
		"\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2y\3\2\2\2\2\177\3\2\2\2\2\u0081"+
		"\3\2\2\2\2\u0083\3\2\2\2\3\u0085\3\2\2\2\5\u0087\3\2\2\2\7\u0089\3\2\2"+
		"\2\t\u008b\3\2\2\2\13\u008d\3\2\2\2\r\u0093\3\2\2\2\17\u0095\3\2\2\2\21"+
		"\u0097\3\2\2\2\23\u009a\3\2\2\2\25\u009f\3\2\2\2\27\u00a5\3\2\2\2\31\u00a8"+
		"\3\2\2\2\33\u00ac\3\2\2\2\35\u00b3\3\2\2\2\37\u00b5\3\2\2\2!\u00b8\3\2"+
		"\2\2#\u00bc\3\2\2\2%\u00c0\3\2\2\2\'\u00c2\3\2\2\2)\u00c4\3\2\2\2+\u00c6"+
		"\3\2\2\2-\u00c8\3\2\2\2/\u00cb\3\2\2\2\61\u00ce\3\2\2\2\63\u00d0\3\2\2"+
		"\2\65\u00d2\3\2\2\2\67\u00d6\3\2\2\29\u00d8\3\2\2\2;\u00da\3\2\2\2=\u00dd"+
		"\3\2\2\2?\u00e0\3\2\2\2A\u00e2\3\2\2\2C\u00e5\3\2\2\2E\u00e8\3\2\2\2G"+
		"\u00eb\3\2\2\2I\u00ed\3\2\2\2K\u00f0\3\2\2\2M\u00f3\3\2\2\2O\u00f6\3\2"+
		"\2\2Q\u00f9\3\2\2\2S\u00fb\3\2\2\2U\u00ff\3\2\2\2W\u0102\3\2\2\2Y\u0105"+
		"\3\2\2\2[\u0121\3\2\2\2]\u0123\3\2\2\2_\u0137\3\2\2\2a\u013b\3\2\2\2c"+
		"\u0140\3\2\2\2e\u0147\3\2\2\2g\u0158\3\2\2\2i\u0166\3\2\2\2k\u0177\3\2"+
		"\2\2m\u0186\3\2\2\2o\u0189\3\2\2\2q\u0192\3\2\2\2s\u0199\3\2\2\2u\u019b"+
		"\3\2\2\2w\u019d\3\2\2\2y\u019f\3\2\2\2{\u01a6\3\2\2\2}\u01a8\3\2\2\2\177"+
		"\u01ab\3\2\2\2\u0081\u01b1\3\2\2\2\u0083\u01bc\3\2\2\2\u0085\u0086\7}"+
		"\2\2\u0086\4\3\2\2\2\u0087\u0088\7\177\2\2\u0088\6\3\2\2\2\u0089\u008a"+
		"\7*\2\2\u008a\b\3\2\2\2\u008b\u008c\7+\2\2\u008c\n\3\2\2\2\u008d\u008e"+
		"\7e\2\2\u008e\u008f\7q\2\2\u008f\u0090\7p\2\2\u0090\u0091\7u\2\2\u0091"+
		"\u0092\7v\2\2\u0092\f\3\2\2\2\u0093\u0094\7?\2\2\u0094\16\3\2\2\2\u0095"+
		"\u0096\7=\2\2\u0096\20\3\2\2\2\u0097\u0098\7k\2\2\u0098\u0099\7h\2\2\u0099"+
		"\22\3\2\2\2\u009a\u009b\7g\2\2\u009b\u009c\7n\2\2\u009c\u009d\7u\2\2\u009d"+
		"\u009e\7g\2\2\u009e\24\3\2\2\2\u009f\u00a0\7y\2\2\u00a0\u00a1\7j\2\2\u00a1"+
		"\u00a2\7k\2\2\u00a2\u00a3\7n\2\2\u00a3\u00a4\7g\2\2\u00a4\26\3\2\2\2\u00a5"+
		"\u00a6\7f\2\2\u00a6\u00a7\7q\2\2\u00a7\30\3\2\2\2\u00a8\u00a9\7h\2\2\u00a9"+
		"\u00aa\7q\2\2\u00aa\u00ab\7t\2\2\u00ab\32\3\2\2\2\u00ac\u00ad\7t\2\2\u00ad"+
		"\u00ae\7g\2\2\u00ae\u00af\7v\2\2\u00af\u00b0\7w\2\2\u00b0\u00b1\7t\2\2"+
		"\u00b1\u00b2\7p\2\2\u00b2\34\3\2\2\2\u00b3\u00b4\7<\2\2\u00b4\36\3\2\2"+
		"\2\u00b5\u00b6\7\60\2\2\u00b6\u00b7\7\60\2\2\u00b7 \3\2\2\2\u00b8\u00b9"+
		"\7\60\2\2\u00b9\u00ba\7-\2\2\u00ba\u00bb\7\60\2\2\u00bb\"\3\2\2\2\u00bc"+
		"\u00bd\7\60\2\2\u00bd\u00be\7/\2\2\u00be\u00bf\7\60\2\2\u00bf$\3\2\2\2"+
		"\u00c0\u00c1\7.\2\2\u00c1&\3\2\2\2\u00c2\u00c3\7,\2\2\u00c3(\3\2\2\2\u00c4"+
		"\u00c5\7]\2\2\u00c5*\3\2\2\2\u00c6\u00c7\7_\2\2\u00c7,\3\2\2\2\u00c8\u00c9"+
		"\7/\2\2\u00c9\u00ca\7/\2\2\u00ca.\3\2\2\2\u00cb\u00cc\7-\2\2\u00cc\u00cd"+
		"\7-\2\2\u00cd\60\3\2\2\2\u00ce\u00cf\7-\2\2\u00cf\62\3\2\2\2\u00d0\u00d1"+
		"\7/\2\2\u00d1\64\3\2\2\2\u00d2\u00d3\7p\2\2\u00d3\u00d4\7q\2\2\u00d4\u00d5"+
		"\7v\2\2\u00d5\66\3\2\2\2\u00d6\u00d7\7#\2\2\u00d78\3\2\2\2\u00d8\u00d9"+
		"\7(\2\2\u00d9:\3\2\2\2\u00da\u00db\7@\2\2\u00db\u00dc\7@\2\2\u00dc<\3"+
		"\2\2\2\u00dd\u00de\7>\2\2\u00de\u00df\7>\2\2\u00df>\3\2\2\2\u00e0\u00e1"+
		"\7\61\2\2\u00e1@\3\2\2\2\u00e2\u00e3\7?\2\2\u00e3\u00e4\7?\2\2\u00e4B"+
		"\3\2\2\2\u00e5\u00e6\7#\2\2\u00e6\u00e7\7?\2\2\u00e7D\3\2\2\2\u00e8\u00e9"+
		"\7>\2\2\u00e9\u00ea\7@\2\2\u00eaF\3\2\2\2\u00eb\u00ec\7>\2\2\u00ecH\3"+
		"\2\2\2\u00ed\u00ee\7>\2\2\u00ee\u00ef\7?\2\2\u00efJ\3\2\2\2\u00f0\u00f1"+
		"\7?\2\2\u00f1\u00f2\7>\2\2\u00f2L\3\2\2\2\u00f3\u00f4\7@\2\2\u00f4\u00f5"+
		"\7?\2\2\u00f5N\3\2\2\2\u00f6\u00f7\7?\2\2\u00f7\u00f8\7@\2\2\u00f8P\3"+
		"\2\2\2\u00f9\u00fa\7@\2\2\u00faR\3\2\2\2\u00fb\u00fc\7c\2\2\u00fc\u00fd"+
		"\7p\2\2\u00fd\u00fe\7f\2\2\u00feT\3\2\2\2\u00ff\u0100\7(\2\2\u0100\u0101"+
		"\7(\2\2\u0101V\3\2\2\2\u0102\u0103\7q\2\2\u0103\u0104\7t\2\2\u0104X\3"+
		"\2\2\2\u0105\u0106\7~\2\2\u0106\u0107\7~\2\2\u0107Z\3\2\2\2\u0108\u0109"+
		"\7d\2\2\u0109\u010a\7{\2\2\u010a\u010b\7v\2\2\u010b\u0122\7g\2\2\u010c"+
		"\u010d\7y\2\2\u010d\u010e\7q\2\2\u010e\u010f\7t\2\2\u010f\u0122\7f\2\2"+
		"\u0110\u0111\7u\2\2\u0111\u0112\7v\2\2\u0112\u0113\7t\2\2\u0113\u0114"+
		"\7k\2\2\u0114\u0115\7p\2\2\u0115\u0122\7i\2\2\u0116\u0117\7d\2\2\u0117"+
		"\u0118\7q\2\2\u0118\u0119\7q\2\2\u0119\u011a\7n\2\2\u011a\u011b\7g\2\2"+
		"\u011b\u011c\7c\2\2\u011c\u0122\7p\2\2\u011d\u011e\7x\2\2\u011e\u011f"+
		"\7q\2\2\u011f\u0120\7k\2\2\u0120\u0122\7f\2\2\u0121\u0108\3\2\2\2\u0121"+
		"\u010c\3\2\2\2\u0121\u0110\3\2\2\2\u0121\u0116\3\2\2\2\u0121\u011d\3\2"+
		"\2\2\u0122\\\3\2\2\2\u0123\u0129\7$\2\2\u0124\u0125\7^\2\2\u0125\u0128"+
		"\7$\2\2\u0126\u0128\n\2\2\2\u0127\u0124\3\2\2\2\u0127\u0126\3\2\2\2\u0128"+
		"\u012b\3\2\2\2\u0129\u0127\3\2\2\2\u0129\u012a\3\2\2\2\u012a\u012c\3\2"+
		"\2\2\u012b\u0129\3\2\2\2\u012c\u012d\7$\2\2\u012d^\3\2\2\2\u012e\u012f"+
		"\7v\2\2\u012f\u0130\7t\2\2\u0130\u0131\7w\2\2\u0131\u0138\7g\2\2\u0132"+
		"\u0133\7h\2\2\u0133\u0134\7c\2\2\u0134\u0135\7n\2\2\u0135\u0136\7u\2\2"+
		"\u0136\u0138\7g\2\2\u0137\u012e\3\2\2\2\u0137\u0132\3\2\2\2\u0138`\3\2"+
		"\2\2\u0139\u013c\5c\62\2\u013a\u013c\5k\66\2\u013b\u0139\3\2\2\2\u013b"+
		"\u013a\3\2\2\2\u013cb\3\2\2\2\u013d\u0141\5e\63\2\u013e\u0141\5g\64\2"+
		"\u013f\u0141\5i\65\2\u0140\u013d\3\2\2\2\u0140\u013e\3\2\2\2\u0140\u013f"+
		"\3\2\2\2\u0141d\3\2\2\2\u0142\u0148\7\'\2\2\u0143\u0144\7\62\2\2\u0144"+
		"\u0148\7d\2\2\u0145\u0146\7\62\2\2\u0146\u0148\7D\2\2\u0147\u0142\3\2"+
		"\2\2\u0147\u0143\3\2\2\2\u0147\u0145\3\2\2\2\u0148\u014c\3\2\2\2\u0149"+
		"\u014b\5s:\2\u014a\u0149\3\2\2\2\u014b\u014e\3\2\2\2\u014c\u014a\3\2\2"+
		"\2\u014c\u014d\3\2\2\2\u014d\u014f\3\2\2\2\u014e\u014c\3\2\2\2\u014f\u0151"+
		"\7\60\2\2\u0150\u0152\5s:\2\u0151\u0150\3\2\2\2\u0152\u0153\3\2\2\2\u0153"+
		"\u0151\3\2\2\2\u0153\u0154\3\2\2\2\u0154f\3\2\2\2\u0155\u0157\5u;\2\u0156"+
		"\u0155\3\2\2\2\u0157\u015a\3\2\2\2\u0158\u0156\3\2\2\2\u0158\u0159\3\2"+
		"\2\2\u0159\u015b\3\2\2\2\u015a\u0158\3\2\2\2\u015b\u015d\7\60\2\2\u015c"+
		"\u015e\5u;\2\u015d\u015c\3\2\2\2\u015e\u015f\3\2\2\2\u015f\u015d\3\2\2"+
		"\2\u015f\u0160\3\2\2\2\u0160h\3\2\2\2\u0161\u0167\7&\2\2\u0162\u0163\7"+
		"\62\2\2\u0163\u0167\7z\2\2\u0164\u0165\7\62\2\2\u0165\u0167\7Z\2\2\u0166"+
		"\u0161\3\2\2\2\u0166\u0162\3\2\2\2\u0166\u0164\3\2\2\2\u0167\u016b\3\2"+
		"\2\2\u0168\u016a\5w<\2\u0169\u0168\3\2\2\2\u016a\u016d\3\2\2\2\u016b\u0169"+
		"\3\2\2\2\u016b\u016c\3\2\2\2\u016c\u016e\3\2\2\2\u016d\u016b\3\2\2\2\u016e"+
		"\u0170\7\60\2\2\u016f\u0171\5w<\2\u0170\u016f\3\2\2\2\u0171\u0172\3\2"+
		"\2\2\u0172\u0170\3\2\2\2\u0172\u0173\3\2\2\2\u0173j\3\2\2\2\u0174\u0178"+
		"\5o8\2\u0175\u0178\5q9\2\u0176\u0178\5m\67\2\u0177\u0174\3\2\2\2\u0177"+
		"\u0175\3\2\2\2\u0177\u0176\3\2\2\2\u0178l\3\2\2\2\u0179\u017a\7\62\2\2"+
		"\u017a\u017c\t\3\2\2\u017b\u017d\5s:\2\u017c\u017b\3\2\2\2\u017d\u017e"+
		"\3\2\2\2\u017e\u017c\3\2\2\2\u017e\u017f\3\2\2\2\u017f\u0187\3\2\2\2\u0180"+
		"\u0182\7\'\2\2\u0181\u0183\5s:\2\u0182\u0181\3\2\2\2\u0183\u0184\3\2\2"+
		"\2\u0184\u0182\3\2\2\2\u0184\u0185\3\2\2\2\u0185\u0187\3\2\2\2\u0186\u0179"+
		"\3\2\2\2\u0186\u0180\3\2\2\2\u0187n\3\2\2\2\u0188\u018a\5u;\2\u0189\u0188"+
		"\3\2\2\2\u018a\u018b\3\2\2\2\u018b\u0189\3\2\2\2\u018b\u018c\3\2\2\2\u018c"+
		"p\3\2\2\2\u018d\u0193\7&\2\2\u018e\u018f\7\62\2\2\u018f\u0193\7z\2\2\u0190"+
		"\u0191\7\62\2\2\u0191\u0193\7Z\2\2\u0192\u018d\3\2\2\2\u0192\u018e\3\2"+
		"\2\2\u0192\u0190\3\2\2\2\u0193\u0195\3\2\2\2\u0194\u0196\5w<\2\u0195\u0194"+
		"\3\2\2\2\u0196\u0197\3\2\2\2\u0197\u0195\3\2\2\2\u0197\u0198\3\2\2\2\u0198"+
		"r\3\2\2\2\u0199\u019a\t\4\2\2\u019at\3\2\2\2\u019b\u019c\t\5\2\2\u019c"+
		"v\3\2\2\2\u019d\u019e\t\6\2\2\u019ex\3\2\2\2\u019f\u01a3\5{>\2\u01a0\u01a2"+
		"\5}?\2\u01a1\u01a0\3\2\2\2\u01a2\u01a5\3\2\2\2\u01a3\u01a1\3\2\2\2\u01a3"+
		"\u01a4\3\2\2\2\u01a4z\3\2\2\2\u01a5\u01a3\3\2\2\2\u01a6\u01a7\t\7\2\2"+
		"\u01a7|\3\2\2\2\u01a8\u01a9\t\b\2\2\u01a9~\3\2\2\2\u01aa\u01ac\t\t\2\2"+
		"\u01ab\u01aa\3\2\2\2\u01ac\u01ad\3\2\2\2\u01ad\u01ab\3\2\2\2\u01ad\u01ae"+
		"\3\2\2\2\u01ae\u01af\3\2\2\2\u01af\u01b0\b@\2\2\u01b0\u0080\3\2\2\2\u01b1"+
		"\u01b2\7\61\2\2\u01b2\u01b3\7\61\2\2\u01b3\u01b7\3\2\2\2\u01b4\u01b6\n"+
		"\n\2\2\u01b5\u01b4\3\2\2\2\u01b6\u01b9\3\2\2\2\u01b7\u01b5\3\2\2\2\u01b7"+
		"\u01b8\3\2\2\2\u01b8\u01ba\3\2\2\2\u01b9\u01b7\3\2\2\2\u01ba\u01bb\bA"+
		"\2\2\u01bb\u0082\3\2\2\2\u01bc\u01bd\7\61\2\2\u01bd\u01be\7,\2\2\u01be"+
		"\u01c2\3\2\2\2\u01bf\u01c1\13\2\2\2\u01c0\u01bf\3\2\2\2\u01c1\u01c4\3"+
		"\2\2\2\u01c2\u01c3\3\2\2\2\u01c2\u01c0\3\2\2\2\u01c3\u01c5\3\2\2\2\u01c4"+
		"\u01c2\3\2\2\2\u01c5\u01c6\7,\2\2\u01c6\u01c7\7\61\2\2\u01c7\u01c8\3\2"+
		"\2\2\u01c8\u01c9\bB\2\2\u01c9\u0084\3\2\2\2\34\2\u0121\u0127\u0129\u0137"+
		"\u013b\u0140\u0147\u014c\u0153\u0158\u015f\u0166\u016b\u0172\u0177\u017e"+
		"\u0184\u0186\u018b\u0192\u0197\u01a3\u01ad\u01b7\u01c2\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}