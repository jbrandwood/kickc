
(void()) main()
main: scope:[main]  from
  [0] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@5
  [1] (byte) main::a#7 ← phi( main/(byte) 0 main::@5/(byte) main::a#1 )
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@4
  [2] (byte) main::b#4 ← phi( main::@1/(byte) 0 main::@4/(byte) main::b#1 )
  to:main::@3
main::@3: scope:[main]  from main::@2 main::@6
  [3] (byte) main::c#2 ← phi( main::@2/(byte) 0 main::@6/(byte) main::c#1 )
  [4] (byte) main::ca#0 ← (byte) main::c#2 + (byte) main::a#7
  [5] (byte) print::b#0 ← (byte) main::b#4
  [6] (byte) print::ca#0 ← (byte) main::ca#0
  [7] call print 
  to:main::@6
main::@6: scope:[main]  from main::@3
  [8] (byte) main::c#1 ← ++ (byte) main::c#2
  [9] if((byte) main::c#1!=(byte) $65) goto main::@3
  to:main::@4
main::@4: scope:[main]  from main::@6
  [10] (byte) main::b#1 ← ++ (byte) main::b#4
  [11] if((byte) main::b#1!=(byte) $65) goto main::@2
  to:main::@5
main::@5: scope:[main]  from main::@4
  [12] (byte) main::a#1 ← ++ (byte) main::a#7
  [13] if((byte) main::a#1!=(byte) $65) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@5
  [14] return 
  to:@return

(void()) print((byte) print::b , (byte) print::ca)
print: scope:[print]  from main::@3
  [15] (byte) out::b#0 ← (byte) print::b#0
  [16] (byte) out::ca#0 ← (byte) print::ca#0
  [17] call out 
  to:print::@return
print::@return: scope:[print]  from print
  [18] return 
  to:@return

(void()) out((byte) out::b , (byte) out::ca)
out: scope:[out]  from print
  [19] *((const nomodify byte*) SCREEN+(word) $3e7) ← ++ *((const nomodify byte*) SCREEN+(word) $3e7)
  [20] *((const nomodify byte*) SCREEN + (byte) out::b#0) ← (byte) out::ca#0
  to:out::@return
out::@return: scope:[out]  from out
  [21] return 
  to:@return
