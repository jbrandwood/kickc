
(void()) main()
main: scope:[main]  from
  asm { sei  }
  [1] call memoryRemapBlock 
  to:main::@1
main::@1: scope:[main]  from main main::@2
  [2] (byte*) main::src#2 ← phi( main::@2/(byte*) main::src#1 main/(const byte*) upperCodeData )
  [2] (byte*) main::dst#2 ← phi( main::@2/(byte*) main::dst#1 main/(const byte*) MUSIC )
  [3] if((byte*) main::dst#2<(const nomodify byte*) MUSIC_END) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@1
  [4] call *((const void()*) musicInit) 
  [5] call memoryRemap 
  to:main::@4
main::@4: scope:[main]  from main::@3 main::@7
  [6] (byte*) main::mem_destroy#3 ← phi( main::@3/(const byte*) MUSIC main::@7/(byte*) main::mem_destroy#5 )
  [7] *((byte*) main::mem_destroy#3) ← (byte) 0
  [8] (byte*) main::mem_destroy#1 ← ++ (byte*) main::mem_destroy#3
  [9] if((byte*) main::mem_destroy#1!=(const nomodify byte*) MUSIC_END) goto main::@10
  to:main::@5
main::@10: scope:[main]  from main::@4
  [10] phi()
  to:main::@5
main::@5: scope:[main]  from main::@10 main::@4 main::@5
  [11] (byte*) main::mem_destroy#5 ← phi( main::@10/(byte*) main::mem_destroy#1 main::@5/(byte*) main::mem_destroy#5 main::@4/(const byte*) MUSIC )
  [12] if(*((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_RASTER)!=(byte) $ff) goto main::@5
  to:main::@6
main::@6: scope:[main]  from main::@5
  [13] *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_BORDER_COLOR) ← ++ *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_BORDER_COLOR)
  [14] call memoryRemapBlock 
  to:main::@8
main::@8: scope:[main]  from main::@6
  [15] call *((const void()*) musicPlay) 
  [16] call memoryRemap 
  to:main::@9
main::@9: scope:[main]  from main::@8
  [17] *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_BORDER_COLOR) ← -- *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_BORDER_COLOR)
  to:main::@7
main::@7: scope:[main]  from main::@7 main::@9
  [18] if(*((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_RASTER)==(byte) $ff) goto main::@7
  to:main::@4
main::@2: scope:[main]  from main::@1
  [19] *((byte*) main::dst#2) ← *((byte*) main::src#2)
  [20] (byte*) main::dst#1 ← ++ (byte*) main::dst#2
  [21] (byte*) main::src#1 ← ++ (byte*) main::src#2
  to:main::@1

(void()) memoryRemapBlock((byte) memoryRemapBlock::blockPage , (word) memoryRemapBlock::memoryPage)
memoryRemapBlock: scope:[memoryRemapBlock]  from main main::@6
  [22] phi()
  [23] call memoryRemap 
  to:memoryRemapBlock::@return
memoryRemapBlock::@return: scope:[memoryRemapBlock]  from memoryRemapBlock
  [24] return 
  to:@return

(void()) memoryRemap((byte) memoryRemap::remapBlocks , (word) memoryRemap::lowerPageOffset , (word) memoryRemap::upperPageOffset)
memoryRemap: scope:[memoryRemap]  from main::@3 main::@8 memoryRemapBlock
  [25] (word) memoryRemap::upperPageOffset#3 ← phi( main::@8/(byte) 0 main::@3/(byte) 0 memoryRemapBlock/(const word) memoryRemapBlock::pageOffset#0 )
  [25] (byte) memoryRemap::remapBlocks#3 ← phi( main::@8/(byte) 0 main::@3/(byte) 0 memoryRemapBlock/(const byte) memoryRemapBlock::blockBits#0 )
  [25] (word) memoryRemap::lowerPageOffset#3 ← phi( main::@8/(byte) 0 main::@3/(byte) 0 memoryRemapBlock/(const word) memoryRemapBlock::pageOffset#0 )
  [26] (byte~) memoryRemap::$0 ← < (word) memoryRemap::lowerPageOffset#3
  [27] *((const byte*) memoryRemap::aVal) ← (byte~) memoryRemap::$0
  [28] (byte~) memoryRemap::$1 ← (byte) memoryRemap::remapBlocks#3 << (byte) 4
  [29] (byte~) memoryRemap::$2 ← > (word) memoryRemap::lowerPageOffset#3
  [30] (byte~) memoryRemap::$3 ← (byte~) memoryRemap::$2 & (byte) $f
  [31] (byte~) memoryRemap::$4 ← (byte~) memoryRemap::$1 | (byte~) memoryRemap::$3
  [32] *((const byte*) memoryRemap::xVal) ← (byte~) memoryRemap::$4
  [33] (byte~) memoryRemap::$5 ← < (word) memoryRemap::upperPageOffset#3
  [34] *((const byte*) memoryRemap::yVal) ← (byte~) memoryRemap::$5
  [35] (byte~) memoryRemap::$6 ← (byte) memoryRemap::remapBlocks#3 & (byte) $f0
  [36] (byte~) memoryRemap::$7 ← > (word) memoryRemap::upperPageOffset#3
  [37] (byte~) memoryRemap::$8 ← (byte~) memoryRemap::$7 & (byte) $f
  [38] (byte~) memoryRemap::$9 ← (byte~) memoryRemap::$6 | (byte~) memoryRemap::$8
  [39] *((const byte*) memoryRemap::zVal) ← (byte~) memoryRemap::$9
  asm { ldaaVal ldxxVal ldyyVal ldzzVal map eom  }
  to:memoryRemap::@return
memoryRemap::@return: scope:[memoryRemap]  from memoryRemap
  [41] return 
  to:@return
