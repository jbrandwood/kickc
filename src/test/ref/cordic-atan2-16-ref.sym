(label) @1
(label) @begin
(label) @end
(const byte*) CHARSET = (byte*) 8192
(const byte*) COLS = (byte*) 55296
(const word*) CORDIC_ATAN2_ANGLES_16[(const byte) CORDIC_ITERATIONS_16]  = kickasm {{ .for (var i=0; i<CORDIC_ITERATIONS_16; i++)
        .word 256*2*256*atan(1/pow(2,i))/PI/2
 }}
(const byte) CORDIC_ITERATIONS_16 = (byte) $f
(const byte*) D018 = (byte*) 53272
(const byte*) FONT_HEX_PROTO[]  = { (byte) 2, (byte) 5, (byte) 5, (byte) 5, (byte) 2, (byte) 6, (byte) 2, (byte) 2, (byte) 2, (byte) 7, (byte) 6, (byte) 1, (byte) 2, (byte) 4, (byte) 7, (byte) 6, (byte) 1, (byte) 2, (byte) 1, (byte) 6, (byte) 5, (byte) 5, (byte) 7, (byte) 1, (byte) 1, (byte) 7, (byte) 4, (byte) 6, (byte) 1, (byte) 6, (byte) 3, (byte) 4, (byte) 6, (byte) 5, (byte) 2, (byte) 7, (byte) 1, (byte) 1, (byte) 1, (byte) 1, (byte) 2, (byte) 5, (byte) 2, (byte) 5, (byte) 2, (byte) 2, (byte) 5, (byte) 3, (byte) 1, (byte) 1, (byte) 2, (byte) 5, (byte) 7, (byte) 5, (byte) 5, (byte) 6, (byte) 5, (byte) 6, (byte) 5, (byte) 6, (byte) 2, (byte) 5, (byte) 4, (byte) 5, (byte) 2, (byte) 6, (byte) 5, (byte) 5, (byte) 5, (byte) 6, (byte) 7, (byte) 4, (byte) 6, (byte) 4, (byte) 7, (byte) 7, (byte) 4, (byte) 6, (byte) 4, (byte) 4 }
(const byte) RADIX::BINARY = (number) 2
(const byte) RADIX::DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL = (number) 8
(const byte*) SCREEN = (byte*) 10240
(const byte*) SCREEN_REF[(number) $3e8]  = kickasm {{ .for(var y=-12;y<=12;y++)
        .for(var x=-19;x<=20;x++)
            .byte round(256*atan2(y, x)/PI/2)
 }}
(word()) atan2_16((signed word) atan2_16::x , (signed word) atan2_16::y)
(signed word~) atan2_16::$2 zp[2]:14 20002.0
(byte~) atan2_16::$22 reg byte a 2.0000002E7
(byte~) atan2_16::$23 reg byte a 2.0000002E7
(signed word~) atan2_16::$7 zp[2]:16 20002.0
(label) atan2_16::@1
(label) atan2_16::@10
(label) atan2_16::@11
(label) atan2_16::@12
(label) atan2_16::@13
(label) atan2_16::@14
(label) atan2_16::@15
(label) atan2_16::@16
(label) atan2_16::@17
(label) atan2_16::@18
(label) atan2_16::@19
(label) atan2_16::@2
(label) atan2_16::@20
(label) atan2_16::@21
(label) atan2_16::@3
(label) atan2_16::@4
(label) atan2_16::@5
(label) atan2_16::@6
(label) atan2_16::@7
(label) atan2_16::@8
(label) atan2_16::@9
(label) atan2_16::@return
(word) atan2_16::angle
(word) atan2_16::angle#1 angle zp[2]:10 15001.5
(word) atan2_16::angle#11 angle zp[2]:10 20002.0
(word) atan2_16::angle#12 angle zp[2]:10 1904762.0952380951
(word) atan2_16::angle#13 angle zp[2]:10 1.3333334666666666E7
(word) atan2_16::angle#2 angle zp[2]:10 2.0000002E7
(word) atan2_16::angle#3 angle zp[2]:10 2.0000002E7
(word) atan2_16::angle#4 angle zp[2]:10 20002.0
(word) atan2_16::angle#5 angle zp[2]:10 20002.0
(word) atan2_16::angle#6 angle zp[2]:10 2.0010003E7
(byte) atan2_16::i
(byte) atan2_16::i#1 reg byte x 1.50000015E7
(byte) atan2_16::i#2 reg byte x 2083333.5416666665
(word) atan2_16::return
(word) atan2_16::return#0 return zp[2]:10 7001.0
(word) atan2_16::return#2 return zp[2]:10 2002.0
(byte) atan2_16::shift
(byte) atan2_16::shift#1 reg byte y 2.00000002E8
(byte) atan2_16::shift#2 reg byte y 8.000000125E7
(byte) atan2_16::shift#5 reg byte y 6666667.333333333
(signed word) atan2_16::x
(signed word) atan2_16::x#0 x zp[2]:22 1079.078947368421
(signed word) atan2_16::xd
(signed word) atan2_16::xd#1 xd zp[2]:12 6.6666667333333336E7
(signed word) atan2_16::xd#10 xd zp[2]:12 1.0000001E7
(signed word) atan2_16::xd#2 xd zp[2]:12 1.0000001E7
(signed word) atan2_16::xd#3 xd zp[2]:12 7.666666833333333E7
(signed word) atan2_16::xd#5 xd zp[2]:12 1.0000001E7
(signed word) atan2_16::xi
(signed word) atan2_16::xi#0 xi zp[2]:16 30003.0
(signed word) atan2_16::xi#1 xi zp[2]:16 5000000.5
(signed word) atan2_16::xi#13 xi zp[2]:16 20002.0
(signed word) atan2_16::xi#2 xi zp[2]:16 5000000.5
(signed word) atan2_16::xi#3 xi zp[2]:16 2667333.6666666665
(signed word) atan2_16::xi#8 xi zp[2]:16 1.0000001E7
(signed word) atan2_16::y
(signed word) atan2_16::y#0 y zp[2]:24 1025.125
(signed word) atan2_16::yd
(signed word) atan2_16::yd#1 yd zp[2]:18 1.00000001E8
(signed word) atan2_16::yd#10 yd zp[2]:18 2.0000002E7
(signed word) atan2_16::yd#2 yd zp[2]:18 2.0000002E7
(signed word) atan2_16::yd#3 yd zp[2]:18 4.6000001E7
(signed word) atan2_16::yd#5 yd zp[2]:18 2.0000002E7
(signed word) atan2_16::yi
(signed word) atan2_16::yi#0 yi zp[2]:14 6000.6
(signed word) atan2_16::yi#1 yi zp[2]:14 6666667.333333333
(signed word) atan2_16::yi#16 yi zp[2]:14 20002.0
(signed word) atan2_16::yi#2 yi zp[2]:14 6666667.333333333
(signed word) atan2_16::yi#3 yi zp[2]:14 3530000.4117647056
(signed word) atan2_16::yi#8 yi zp[2]:14 1.0000001E7
(byte()) diff((byte) diff::bb1 , (byte) diff::bb2)
(byte~) diff::$2 reg byte a 20002.0
(byte~) diff::$4 reg byte a 20002.0
(label) diff::@1
(label) diff::@2
(label) diff::@3
(label) diff::@return
(byte) diff::bb1
(byte) diff::bb1#0 reg byte x 10334.666666666666
(byte) diff::bb2
(byte) diff::bb2#0 reg byte a 15502.0
(byte) diff::return
(byte) diff::return#0 reg byte a 2002.0
(byte) diff::return#1 reg byte a 7001.0
(void()) init_font_hex((byte*) init_font_hex::charset)
(byte~) init_font_hex::$0 zp[1]:27 100001.0
(byte~) init_font_hex::$1 reg byte a 200002.0
(byte~) init_font_hex::$2 reg byte a 200002.0
(label) init_font_hex::@1
(label) init_font_hex::@2
(label) init_font_hex::@3
(label) init_font_hex::@4
(label) init_font_hex::@5
(label) init_font_hex::@return
(byte) init_font_hex::c
(byte) init_font_hex::c#1 c zp[1]:26 1501.5
(byte) init_font_hex::c#6 c zp[1]:26 105.36842105263158
(byte) init_font_hex::c1
(byte) init_font_hex::c1#1 c1 zp[1]:20 15001.5
(byte) init_font_hex::c1#4 c1 zp[1]:20 1333.4666666666667
(byte*) init_font_hex::charset
(byte*) init_font_hex::charset#0 charset zp[2]:16 3500.5
(byte*) init_font_hex::charset#2 charset zp[2]:16 10786.214285714286
(byte*) init_font_hex::charset#5 charset zp[2]:16 2002.0
(byte) init_font_hex::i
(byte) init_font_hex::i#1 reg byte x 150001.5
(byte) init_font_hex::i#2 reg byte x 66667.33333333333
(byte) init_font_hex::idx
(byte) init_font_hex::idx#2 idx zp[1]:21 55001.0
(byte) init_font_hex::idx#3 reg byte y 20002.0
(byte) init_font_hex::idx#5 idx zp[1]:21 60000.600000000006
(byte*) init_font_hex::proto_hi
(byte*) init_font_hex::proto_hi#1 proto_hi zp[2]:14 667.3333333333334
(byte*) init_font_hex::proto_hi#6 proto_hi zp[2]:14 5666.833333333334
(byte*) init_font_hex::proto_lo
(byte*) init_font_hex::proto_lo#1 proto_lo zp[2]:18 5000.5
(byte*) init_font_hex::proto_lo#4 proto_lo zp[2]:18 9230.999999999998
(void()) main()
(word~) main::$10 zp[2]:10 2002.0
(byte~) main::$12 reg byte a 2002.0
(byte~) main::$13 reg byte a 2002.0
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::@8
(byte) main::ang_w
(byte) main::ang_w#0 ang_w zp[1]:26 429.0
(word) main::angle_w
(word) main::angle_w#0 angle_w zp[2]:10 2002.0
(const byte*) main::col00 = (const byte*) COLS+(word)(number) $c*(number) $28+(byte) $13
(word) main::diff_sum
(word) main::diff_sum#1 diff_sum zp[2]:4 234.8888888888889
(word) main::diff_sum#2 diff_sum zp[2]:4 140.2
(word) main::diff_sum#7 diff_sum zp[2]:4 202.0
(byte*) main::screen
(byte*) main::screen#1 screen zp[2]:6 350.5
(byte*) main::screen#2 screen zp[2]:6 172.44444444444446
(byte*) main::screen#5 screen zp[2]:6 202.0
(byte*) main::screen_ref
(byte*) main::screen_ref#1 screen_ref zp[2]:8 420.59999999999997
(byte*) main::screen_ref#2 screen_ref zp[2]:8 216.05263157894734
(byte*) main::screen_ref#5 screen_ref zp[2]:8 202.0
(label) main::toD0181
(byte*) main::toD0181_gfx
(byte) main::toD0181_return
(const byte) main::toD0181_return#0 toD0181_return = >(word)(const byte*) SCREEN&(word) $3fff*(byte) 4|>(word)(const byte*) CHARSET/(byte) 4&(byte) $f
(byte*) main::toD0181_screen
(signed byte) main::x
(signed byte) main::x#1 x zp[1]:3 1501.5
(signed byte) main::x#2 x zp[1]:3 100.1
(signed word) main::xw
(word) main::xw#0 xw zp[2]:22 500.5
(signed byte) main::y
(signed byte) main::y#1 y zp[1]:2 151.5
(signed byte) main::y#4 y zp[1]:2 8.782608695652174
(signed word) main::yw
(word) main::yw#0 yw zp[2]:24 500.5
(void()) print_byte((byte) print_byte::b)
(byte~) print_byte::$0 reg byte a 2002.0
(byte~) print_byte::$2 reg byte x 2002.0
(label) print_byte::@1
(label) print_byte::@return
(byte) print_byte::b
(byte) print_byte::b#0 reg byte x 202.0
(byte) print_byte::b#1 reg byte x 202.0
(byte) print_byte::b#2 reg byte x 551.0
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(byte) print_char::ch#0 reg byte a 2002.0
(byte) print_char::ch#1 reg byte a 2002.0
(byte) print_char::ch#2 reg byte a 12003.0
(byte*) print_char_cursor
(byte*) print_char_cursor#18 print_char_cursor zp[2]:8 11002.0
(byte*) print_char_cursor#19 print_char_cursor zp[2]:8 1233.6666666666665
(byte*) print_char_cursor#24 print_char_cursor zp[2]:8 367.33333333333337
(const byte*) print_hextab[]  = (byte*) "0123456789abcdef"z
(byte*) print_line_cursor
(byte*) print_screen
(void()) print_word((word) print_word::w)
(label) print_word::@1
(label) print_word::@return
(word) print_word::w
(word) print_word::w#0 w zp[2]:4 71.0

zp[1]:2 [ main::y#4 main::y#1 ]
zp[1]:3 [ main::x#2 main::x#1 ]
zp[2]:4 [ main::diff_sum#2 main::diff_sum#7 main::diff_sum#1 print_word::w#0 ]
zp[2]:6 [ main::screen#2 main::screen#5 main::screen#1 ]
reg byte x [ print_byte::b#2 print_byte::b#0 print_byte::b#1 ]
reg byte a [ print_char::ch#2 print_char::ch#0 print_char::ch#1 ]
zp[2]:8 [ print_char_cursor#18 print_char_cursor#24 print_char_cursor#19 main::screen_ref#2 main::screen_ref#5 main::screen_ref#1 ]
reg byte a [ diff::return#1 diff::$4 diff::$2 ]
reg byte x [ atan2_16::i#2 atan2_16::i#1 ]
zp[2]:10 [ atan2_16::angle#6 atan2_16::angle#12 atan2_16::angle#13 atan2_16::angle#2 atan2_16::angle#3 atan2_16::return#0 atan2_16::angle#5 atan2_16::angle#11 atan2_16::angle#1 atan2_16::angle#4 atan2_16::return#2 main::angle_w#0 main::$10 ]
reg byte y [ atan2_16::shift#2 atan2_16::shift#5 atan2_16::shift#1 ]
zp[2]:12 [ atan2_16::xd#5 atan2_16::xd#3 atan2_16::xd#10 atan2_16::xd#1 atan2_16::xd#2 ]
zp[2]:14 [ init_font_hex::proto_hi#6 init_font_hex::proto_hi#1 atan2_16::yi#3 atan2_16::yi#8 atan2_16::yi#0 atan2_16::yi#16 atan2_16::$2 atan2_16::yi#1 atan2_16::yi#2 ]
zp[2]:16 [ init_font_hex::charset#2 init_font_hex::charset#5 init_font_hex::charset#0 atan2_16::xi#3 atan2_16::xi#8 atan2_16::xi#0 atan2_16::xi#13 atan2_16::$7 atan2_16::xi#1 atan2_16::xi#2 ]
zp[2]:18 [ init_font_hex::proto_lo#4 init_font_hex::proto_lo#1 atan2_16::yd#5 atan2_16::yd#3 atan2_16::yd#10 atan2_16::yd#1 atan2_16::yd#2 ]
zp[1]:20 [ init_font_hex::c1#4 init_font_hex::c1#1 ]
reg byte x [ init_font_hex::i#2 init_font_hex::i#1 ]
zp[1]:21 [ init_font_hex::idx#5 init_font_hex::idx#2 ]
zp[2]:22 [ main::xw#0 atan2_16::x#0 ]
zp[2]:24 [ main::yw#0 atan2_16::y#0 ]
zp[1]:26 [ main::ang_w#0 init_font_hex::c#6 init_font_hex::c#1 ]
reg byte x [ diff::bb1#0 ]
reg byte a [ diff::bb2#0 ]
reg byte a [ diff::return#0 ]
reg byte a [ main::$12 ]
reg byte a [ main::$13 ]
reg byte a [ print_byte::$0 ]
reg byte x [ print_byte::$2 ]
reg byte a [ atan2_16::$23 ]
reg byte a [ atan2_16::$22 ]
zp[1]:27 [ init_font_hex::$0 ]
reg byte a [ init_font_hex::$1 ]
reg byte a [ init_font_hex::$2 ]
reg byte y [ init_font_hex::idx#3 ]
