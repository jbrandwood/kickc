(const nomodify byte) BLACK = (byte) 0
(const byte*) BUFFER = (byte*) 16384
(const byte*) CHARSET = (byte*) 12288
(const nomodify byte*) COLS = (byte*) 55296
(const nomodify byte*) D018 = (byte*) 53272
(byte) MOS6526_CIA::INTERRUPT
(byte) MOS6526_CIA::PORT_A
(byte) MOS6526_CIA::PORT_A_DDR
(byte) MOS6526_CIA::PORT_B
(byte) MOS6526_CIA::PORT_B_DDR
(byte) MOS6526_CIA::SERIAL_DATA
(word) MOS6526_CIA::TIMER_A
(byte) MOS6526_CIA::TIMER_A_CONTROL
(word) MOS6526_CIA::TIMER_B
(byte) MOS6526_CIA::TIMER_B_CONTROL
(byte) MOS6526_CIA::TOD_10THS
(byte) MOS6526_CIA::TOD_HOURS
(byte) MOS6526_CIA::TOD_MIN
(byte) MOS6526_CIA::TOD_SEC
(byte) MOS6569_VICII::BG_COLOR
(byte) MOS6569_VICII::BG_COLOR1
(byte) MOS6569_VICII::BG_COLOR2
(byte) MOS6569_VICII::BG_COLOR3
(byte) MOS6569_VICII::BORDER_COLOR
(byte) MOS6569_VICII::CONTROL1
(byte) MOS6569_VICII::CONTROL2
(byte) MOS6569_VICII::IRQ_ENABLE
(byte) MOS6569_VICII::IRQ_STATUS
(byte) MOS6569_VICII::LIGHTPEN_X
(byte) MOS6569_VICII::LIGHTPEN_Y
(byte) MOS6569_VICII::MEMORY
(byte) MOS6569_VICII::RASTER
(byte) MOS6569_VICII::SPRITE0_COLOR
(byte) MOS6569_VICII::SPRITE0_X
(byte) MOS6569_VICII::SPRITE0_Y
(byte) MOS6569_VICII::SPRITE1_COLOR
(byte) MOS6569_VICII::SPRITE1_X
(byte) MOS6569_VICII::SPRITE1_Y
(byte) MOS6569_VICII::SPRITE2_COLOR
(byte) MOS6569_VICII::SPRITE2_X
(byte) MOS6569_VICII::SPRITE2_Y
(byte) MOS6569_VICII::SPRITE3_COLOR
(byte) MOS6569_VICII::SPRITE3_X
(byte) MOS6569_VICII::SPRITE3_Y
(byte) MOS6569_VICII::SPRITE4_COLOR
(byte) MOS6569_VICII::SPRITE4_X
(byte) MOS6569_VICII::SPRITE4_Y
(byte) MOS6569_VICII::SPRITE5_COLOR
(byte) MOS6569_VICII::SPRITE5_X
(byte) MOS6569_VICII::SPRITE5_Y
(byte) MOS6569_VICII::SPRITE6_COLOR
(byte) MOS6569_VICII::SPRITE6_X
(byte) MOS6569_VICII::SPRITE6_Y
(byte) MOS6569_VICII::SPRITE7_COLOR
(byte) MOS6569_VICII::SPRITE7_X
(byte) MOS6569_VICII::SPRITE7_Y
(byte) MOS6569_VICII::SPRITES_BG_COLLISION
(byte) MOS6569_VICII::SPRITES_COLLISION
(byte) MOS6569_VICII::SPRITES_ENABLE
(byte) MOS6569_VICII::SPRITES_EXPAND_X
(byte) MOS6569_VICII::SPRITES_EXPAND_Y
(byte) MOS6569_VICII::SPRITES_MC
(byte) MOS6569_VICII::SPRITES_MCOLOR1
(byte) MOS6569_VICII::SPRITES_MCOLOR2
(byte) MOS6569_VICII::SPRITES_PRIORITY
(byte) MOS6569_VICII::SPRITES_XMSB
(byte) MOS6581_SID::CH1_ATTACK_DECAY
(byte) MOS6581_SID::CH1_CONTROL
(word) MOS6581_SID::CH1_FREQ
(word) MOS6581_SID::CH1_PULSE_WIDTH
(byte) MOS6581_SID::CH1_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH2_ATTACK_DECAY
(byte) MOS6581_SID::CH2_CONTROL
(word) MOS6581_SID::CH2_FREQ
(word) MOS6581_SID::CH2_PULSE_WIDTH
(byte) MOS6581_SID::CH2_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH3_ATTACK_DECAY
(byte) MOS6581_SID::CH3_CONTROL
(byte) MOS6581_SID::CH3_ENV
(word) MOS6581_SID::CH3_FREQ
(byte) MOS6581_SID::CH3_OSC
(word) MOS6581_SID::CH3_PULSE_WIDTH
(byte) MOS6581_SID::CH3_SUSTAIN_RELEASE
(byte) MOS6581_SID::FILTER_CUTOFF_HIGH
(byte) MOS6581_SID::FILTER_CUTOFF_LOW
(byte) MOS6581_SID::FILTER_SETUP
(byte) MOS6581_SID::POT_X
(byte) MOS6581_SID::POT_Y
(byte) MOS6581_SID::VOLUME_FILTER_MODE
(const byte) OFFSET_STRUCT_MOS6569_VICII_BG_COLOR = (byte) $21
(const byte) OFFSET_STRUCT_MOS6569_VICII_BORDER_COLOR = (byte) $20
(const byte) OFFSET_STRUCT_MOS6581_SID_CH3_CONTROL = (byte) $12
(const byte) OFFSET_STRUCT_MOS6581_SID_CH3_FREQ = (byte) $e
(const byte) OFFSET_STRUCT_MOS6581_SID_CH3_OSC = (byte) $1b
(const byte*) SCREEN1 = (byte*) 14336
(const byte*) SCREEN2 = (byte*) 15360
(const nomodify struct MOS6581_SID*) SID = (struct MOS6581_SID*) 54272
(const nomodify byte) SID_CONTROL_NOISE = (byte) $80
(const nomodify struct MOS6569_VICII*) VICII = (struct MOS6569_VICII*) 53248
(const nomodify byte) YELLOW = (byte) 7
(void()) fillscreen((byte*) fillscreen::screen , (byte) fillscreen::fill)
(label) fillscreen::@1
(label) fillscreen::@return
(byte) fillscreen::fill
(byte) fillscreen::fill#5 reg byte x 16.833333333333332
(word) fillscreen::i
(word) fillscreen::i#1 i zp[2]:7 151.5
(word) fillscreen::i#2 i zp[2]:7 67.33333333333333
(byte*) fillscreen::screen
(byte*) fillscreen::screen#4 screen zp[2]:5 67.33333333333333
(byte*) fillscreen::screen#5 screen zp[2]:5 157.0
(byte*) fillscreen::screen#6 screen zp[2]:5 11.0
(void()) fire((byte*) fire::screenbase)
(byte~) fire::$13 reg byte a 20002.0
(byte~) fire::$14 reg byte a 20002.0
(byte~) fire::$4 reg byte a 20002.0
(byte~) fire::$5 reg byte a 20002.0
(byte~) fire::$6 reg byte a 20002.0
(label) fire::@1
(label) fire::@2
(label) fire::@3
(label) fire::@4
(label) fire::@5
(label) fire::@6
(label) fire::@7
(label) fire::@return
(byte*) fire::buffer
(byte*) fire::buffer#10 buffer_1 zp[2]:9 6250.625
(byte*) fire::buffer#2 buffer zp[2]:5 20002.0
(byte*) fire::buffer#3 buffer_1 zp[2]:9 20002.0
(byte*) fire::buffer#4 buffer zp[2]:5 7500.750000000001
(byte) fire::c
(byte) fire::c#0 reg byte a 20002.0
(byte) fire::c#1 reg byte a 20002.0
(byte) fire::c#2 reg byte a 30003.0
(byte*) fire::screen
(byte*) fire::screen#0 screen zp[2]:11 13.466666666666667
(byte*) fire::screen#1 screen zp[2]:11 202.0
(byte*) fire::screen#10 screen zp[2]:11 4300.571428571429
(byte*) fire::screen#12 screen_1 zp[2]:7 202.0
(byte*) fire::screen#2 screen_1 zp[2]:7 10001.0
(byte*) fire::screen#3 screen zp[2]:11 10001.0
(byte*) fire::screen#4 screen_1 zp[2]:7 2736.7272727272725
(byte*) fire::screenbase
(label) fire::sid_rnd1
(byte) fire::sid_rnd1_return
(byte) fire::sid_rnd1_return#0 reg byte a 20002.0
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::sid_rnd_init1
(label) main::toD0181
(byte*) main::toD0181_gfx
(byte) main::toD0181_return
(const byte) main::toD0181_return#0 toD0181_return = >(word)(const byte*) SCREEN1&(word) $3fff*(byte) 4|>(word)(const byte*) CHARSET/(byte) 4&(byte) $f
(byte*) main::toD0181_screen
(label) main::toD0182
(byte*) main::toD0182_gfx
(byte) main::toD0182_return
(const byte) main::toD0182_return#0 toD0182_return = >(word)(const byte*) SCREEN2&(word) $3fff*(byte) 4|>(word)(const byte*) CHARSET/(byte) 4&(byte) $f
(byte*) main::toD0182_screen
(void()) makecharset((byte*) makecharset::charset)
(byte~) makecharset::$11 reg byte a 20002.0
(byte~) makecharset::$12 reg byte a 20002.0
(byte~) makecharset::$13 zp[1]:13 20002.0
(word~) makecharset::$15 zp[2]:11 2002.0
(word~) makecharset::$16 zp[2]:11 2002.0
(word~) makecharset::$17 zp[2]:11 2002.0
(byte*~) makecharset::$18 zp[2]:11 2002.0
(label) makecharset::@1
(label) makecharset::@10
(label) makecharset::@11
(label) makecharset::@12
(label) makecharset::@2
(label) makecharset::@3
(label) makecharset::@4
(label) makecharset::@5
(label) makecharset::@6
(label) makecharset::@7
(label) makecharset::@8
(label) makecharset::@9
(label) makecharset::@return
(byte) makecharset::b
(byte) makecharset::b#1 reg byte y 20002.0
(byte) makecharset::b#2 reg byte y 2583.6666666666665
(byte) makecharset::b#6 reg byte y 15001.5
(byte) makecharset::bc
(byte) makecharset::bc#1 reg byte x 20002.0
(byte) makecharset::bc#2 reg byte x 4000.4
(byte) makecharset::bc#3 reg byte x 2750.5
(byte) makecharset::bc#6 reg byte x 1001.0
(byte) makecharset::bc#7 reg byte x 15001.5
(const to_nomodify byte*) makecharset::bittab[(number) 8]  = { (byte) 1, (byte) 2, (byte) 4, (byte) 8, (byte) $10, (byte) $20, (byte) $40, (byte) $80 }
(byte) makecharset::c
(byte) makecharset::c#1 c zp[1]:2 202.0
(byte) makecharset::c#2 c zp[1]:2 490.6666666666667
(byte*) makecharset::charset
(byte*) makecharset::font
(byte*) makecharset::font#1 font zp[2]:5 202.0
(byte*) makecharset::font#2 font zp[2]:5 134.66666666666666
(byte*) makecharset::font1
(byte*) makecharset::font1#1 font1 zp[2]:7 202.0
(byte*) makecharset::font1#2 font1 zp[2]:7 134.66666666666666
(byte) makecharset::i
(byte) makecharset::i#1 i zp[1]:3 2002.0
(byte) makecharset::i#2 i zp[1]:3 778.0555555555555
(byte) makecharset::ii
(byte) makecharset::ii#1 ii zp[1]:4 20002.0
(byte) makecharset::ii#2 ii zp[1]:4 4000.4

reg byte x [ fillscreen::fill#5 ]
zp[1]:2 [ makecharset::c#2 makecharset::c#1 ]
zp[1]:3 [ makecharset::i#2 makecharset::i#1 ]
reg byte x [ makecharset::bc#6 makecharset::bc#3 makecharset::bc#7 makecharset::bc#1 makecharset::bc#2 ]
zp[1]:4 [ makecharset::ii#2 makecharset::ii#1 ]
reg byte y [ makecharset::b#2 makecharset::b#6 makecharset::b#1 ]
zp[2]:5 [ fire::buffer#4 fire::buffer#2 makecharset::font#2 makecharset::font#1 fillscreen::screen#5 fillscreen::screen#6 fillscreen::screen#4 ]
zp[2]:7 [ fire::screen#4 fire::screen#12 fire::screen#2 makecharset::font1#2 makecharset::font1#1 fillscreen::i#2 fillscreen::i#1 ]
zp[2]:9 [ fire::buffer#10 fire::buffer#3 ]
reg byte a [ fire::c#2 fire::c#0 fire::c#1 ]
zp[2]:11 [ makecharset::$17 makecharset::$15 makecharset::$16 makecharset::$18 fire::screen#0 fire::screen#10 fire::screen#1 fire::screen#3 ]
reg byte a [ makecharset::$11 ]
reg byte a [ makecharset::$12 ]
zp[1]:13 [ makecharset::$13 ]
reg byte a [ fire::sid_rnd1_return#0 ]
reg byte a [ fire::$13 ]
reg byte a [ fire::$14 ]
reg byte a [ fire::$4 ]
reg byte a [ fire::$5 ]
reg byte a [ fire::$6 ]
