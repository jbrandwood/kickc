Fixing struct type size struct Person to 16
Fixing struct type size struct Person to 16
Fixing struct type SIZE_OF struct Person to 16
Fixing struct type SIZE_OF struct Person to 16

CONTROL FLOW GRAPH SSA

void main()
main: scope:[main]  from __start
  main::$0 = 0 * SIZEOF_STRUCT_PERSON
  main::$6 = (char *)persons + main::$0
  main::$6[OFFSET_STRUCT_PERSON_ID] = 7
  main::$1 = 1 * SIZEOF_STRUCT_PERSON
  main::$7 = (char *)persons + main::$1
  main::$7[OFFSET_STRUCT_PERSON_ID] = 9
  main::$2 = 0 * SIZEOF_STRUCT_PERSON
  main::$8 = (char *)persons+OFFSET_STRUCT_PERSON_NAME + main::$2
  main::$8[8] = 'a'
  main::$3 = 1 * SIZEOF_STRUCT_PERSON
  main::$9 = (char *)persons+OFFSET_STRUCT_PERSON_NAME + main::$3
  main::$9[8] = 'b'
  main::$4 = 0 * SIZEOF_STRUCT_PERSON
  main::$10 = (unsigned int *)persons + main::$4
  main::$10[OFFSET_STRUCT_PERSON_AGE] = $141
  main::$5 = 1 * SIZEOF_STRUCT_PERSON
  main::$11 = (unsigned int *)persons + main::$5
  main::$11[OFFSET_STRUCT_PERSON_AGE] = $7b
  main::person#0 = persons
  main::$14 = (char *)main::person#0
  main::$12 = main::$14 + OFFSET_STRUCT_PERSON_NAME
  main::SCREEN[0] = main::$12[8]
  main::person#1 = main::person#0 + SIZEOF_STRUCT_PERSON
  main::$15 = (char *)main::person#1
  main::$13 = main::$15 + OFFSET_STRUCT_PERSON_NAME
  main::SCREEN[1] = main::$13[8]
  to:main::@return
main::@return: scope:[main]  from main
  return 
  to:@return

void __start()
__start: scope:[__start]  from
  call main
  to:__start::@1
__start::@1: scope:[__start]  from __start
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  return 
  to:@return

SYMBOL TABLE SSA
__constant char OFFSET_STRUCT_PERSON_AGE = $e
__constant char OFFSET_STRUCT_PERSON_ID = 0
__constant char OFFSET_STRUCT_PERSON_NAME = 1
__constant char SIZEOF_STRUCT_PERSON = $10
void __start()
void main()
number main::$0
number main::$1
unsigned int *main::$10
unsigned int *main::$11
char *main::$12
char *main::$13
char *main::$14
char *main::$15
number main::$2
number main::$3
number main::$4
number main::$5
char *main::$6
char *main::$7
char *main::$8
char *main::$9
__constant char * const main::SCREEN = (char *)$400
struct Person *main::person
struct Person *main::person#0
struct Person *main::person#1
__constant struct Person persons[2] = { fill( 2, 0) }

Adding number conversion cast (unumber) 0 in main::$0 = 0 * SIZEOF_STRUCT_PERSON
Adding number conversion cast (unumber) main::$0 in main::$0 = (unumber)0 * SIZEOF_STRUCT_PERSON
Adding number conversion cast (unumber) 7 in main::$6[OFFSET_STRUCT_PERSON_ID] = 7
Adding number conversion cast (unumber) 1 in main::$1 = 1 * SIZEOF_STRUCT_PERSON
Adding number conversion cast (unumber) main::$1 in main::$1 = (unumber)1 * SIZEOF_STRUCT_PERSON
Adding number conversion cast (unumber) 9 in main::$7[OFFSET_STRUCT_PERSON_ID] = 9
Adding number conversion cast (unumber) 0 in main::$2 = 0 * SIZEOF_STRUCT_PERSON
Adding number conversion cast (unumber) main::$2 in main::$2 = (unumber)0 * SIZEOF_STRUCT_PERSON
Adding number conversion cast (unumber) 8 in main::$8[8] = 'a'
Adding number conversion cast (unumber) 1 in main::$3 = 1 * SIZEOF_STRUCT_PERSON
Adding number conversion cast (unumber) main::$3 in main::$3 = (unumber)1 * SIZEOF_STRUCT_PERSON
Adding number conversion cast (unumber) 8 in main::$9[8] = 'b'
Adding number conversion cast (unumber) 0 in main::$4 = 0 * SIZEOF_STRUCT_PERSON
Adding number conversion cast (unumber) main::$4 in main::$4 = (unumber)0 * SIZEOF_STRUCT_PERSON
Adding number conversion cast (unumber) $141 in main::$10[OFFSET_STRUCT_PERSON_AGE] = $141
Adding number conversion cast (unumber) 1 in main::$5 = 1 * SIZEOF_STRUCT_PERSON
Adding number conversion cast (unumber) main::$5 in main::$5 = (unumber)1 * SIZEOF_STRUCT_PERSON
Adding number conversion cast (unumber) $7b in main::$11[OFFSET_STRUCT_PERSON_AGE] = $7b
Adding number conversion cast (unumber) 8 in main::SCREEN[0] = main::$12[8]
Adding number conversion cast (unumber) 0 in main::SCREEN[0] = main::$12[(unumber)8]
Adding number conversion cast (unumber) 8 in main::SCREEN[1] = main::$13[8]
Adding number conversion cast (unumber) 1 in main::SCREEN[1] = main::$13[(unumber)8]
Successful SSA optimization PassNAddNumberTypeConversions
Inlining cast main::$6[OFFSET_STRUCT_PERSON_ID] = (unumber)7
Inlining cast main::$7[OFFSET_STRUCT_PERSON_ID] = (unumber)9
Inlining cast main::$10[OFFSET_STRUCT_PERSON_AGE] = (unumber)$141
Inlining cast main::$11[OFFSET_STRUCT_PERSON_AGE] = (unumber)$7b
Successful SSA optimization Pass2InlineCast
Simplifying constant pointer cast (char *) 1024
Simplifying constant integer cast 0
Simplifying constant integer cast 7
Simplifying constant integer cast 1
Simplifying constant integer cast 9
Simplifying constant integer cast 0
Simplifying constant integer cast 8
Simplifying constant integer cast 1
Simplifying constant integer cast 8
Simplifying constant integer cast 0
Simplifying constant integer cast $141
Simplifying constant integer cast 1
Simplifying constant integer cast $7b
Simplifying constant integer cast 8
Simplifying constant integer cast 0
Simplifying constant integer cast 8
Simplifying constant integer cast 1
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 7
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 9
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 8
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 8
Finalized unsigned number type (char) 0
Finalized unsigned number type (unsigned int) $141
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) $7b
Finalized unsigned number type (char) 8
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 8
Finalized unsigned number type (char) 1
Successful SSA optimization PassNFinalizeNumberTypeConversions
Inferred type updated to char in main::$0 = 0 * SIZEOF_STRUCT_PERSON
Inferred type updated to char in main::$1 = 1 * SIZEOF_STRUCT_PERSON
Inferred type updated to char in main::$2 = 0 * SIZEOF_STRUCT_PERSON
Inferred type updated to char in main::$3 = 1 * SIZEOF_STRUCT_PERSON
Inferred type updated to char in main::$4 = 0 * SIZEOF_STRUCT_PERSON
Inferred type updated to char in main::$5 = 1 * SIZEOF_STRUCT_PERSON
Constant right-side identified [0] main::$0 = 0 * SIZEOF_STRUCT_PERSON
Constant right-side identified [3] main::$1 = 1 * SIZEOF_STRUCT_PERSON
Constant right-side identified [6] main::$2 = 0 * SIZEOF_STRUCT_PERSON
Constant right-side identified [9] main::$3 = 1 * SIZEOF_STRUCT_PERSON
Constant right-side identified [12] main::$4 = 0 * SIZEOF_STRUCT_PERSON
Constant right-side identified [15] main::$5 = 1 * SIZEOF_STRUCT_PERSON
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant main::$0 = 0*SIZEOF_STRUCT_PERSON
Constant main::$1 = 1*SIZEOF_STRUCT_PERSON
Constant main::$2 = 0*SIZEOF_STRUCT_PERSON
Constant main::$3 = 1*SIZEOF_STRUCT_PERSON
Constant main::$4 = 0*SIZEOF_STRUCT_PERSON
Constant main::$5 = 1*SIZEOF_STRUCT_PERSON
Constant main::person#0 = persons
Successful SSA optimization Pass2ConstantIdentification
Constant main::$14 = (char *)main::person#0
Successful SSA optimization Pass2ConstantIdentification
Simplifying constant evaluating to zero 0*SIZEOF_STRUCT_PERSON in 
Simplifying constant evaluating to zero 0*SIZEOF_STRUCT_PERSON in 
Simplifying constant evaluating to zero 0*SIZEOF_STRUCT_PERSON in 
Successful SSA optimization PassNSimplifyConstantZero
Simplifying expression containing zero (char *)persons in [1] main::$6 = (char *)persons + main::$0
Simplifying expression containing zero main::$6 in [2] main::$6[OFFSET_STRUCT_PERSON_ID] = 7
Simplifying expression containing zero main::$7 in [5] main::$7[OFFSET_STRUCT_PERSON_ID] = 9
Simplifying expression containing zero (char *)persons+OFFSET_STRUCT_PERSON_NAME in [7] main::$8 = (char *)persons+OFFSET_STRUCT_PERSON_NAME + main::$2
Simplifying expression containing zero (unsigned int *)persons in [13] main::$10 = (unsigned int *)persons + main::$4
Simplifying expression containing zero main::SCREEN in [21] main::SCREEN[0] = main::$12[8]
Successful SSA optimization PassNSimplifyExpressionWithZero
Eliminating unused constant main::$0
Eliminating unused constant main::$2
Eliminating unused constant main::$4
Eliminating unused constant OFFSET_STRUCT_PERSON_ID
Successful SSA optimization PassNEliminateUnusedVars
Removing unused procedure __start
Removing unused procedure block __start
Removing unused procedure block __start::@1
Removing unused procedure block __start::@return
Successful SSA optimization PassNEliminateEmptyStart
Constant right-side identified [2] main::$7 = (char *)persons + main::$1
Constant right-side identified [6] main::$9 = (char *)persons+OFFSET_STRUCT_PERSON_NAME + main::$3
Constant right-side identified [10] main::$11 = (unsigned int *)persons + main::$5
Constant right-side identified [12] main::$12 = main::$14 + OFFSET_STRUCT_PERSON_NAME
Constant right-side identified [14] main::person#1 = main::person#0 + SIZEOF_STRUCT_PERSON
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant main::$6 = (char *)persons
Constant main::$7 = (char *)persons+main::$1
Constant main::$8 = (char *)persons+OFFSET_STRUCT_PERSON_NAME
Constant main::$9 = (char *)persons+OFFSET_STRUCT_PERSON_NAME+main::$3
Constant main::$10 = (unsigned int *)persons
Constant main::$11 = (unsigned int *)persons+main::$5
Constant main::$12 = main::$14+OFFSET_STRUCT_PERSON_NAME
Constant main::person#1 = main::person#0+SIZEOF_STRUCT_PERSON
Successful SSA optimization Pass2ConstantIdentification
Constant main::$15 = (char *)main::person#1
Successful SSA optimization Pass2ConstantIdentification
Constant right-side identified [7] main::$13 = main::$15 + OFFSET_STRUCT_PERSON_NAME
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant main::$13 = main::$15+OFFSET_STRUCT_PERSON_NAME
Successful SSA optimization Pass2ConstantIdentification
Inlining constant with different constant siblings main::person#0
Constant inlined main::$12 = (char *)persons+OFFSET_STRUCT_PERSON_NAME
Constant inlined main::$13 = (char *)main::person#1+OFFSET_STRUCT_PERSON_NAME
Constant inlined main::$14 = (char *)persons
Constant inlined main::$15 = (char *)main::person#1
Constant inlined main::$10 = (unsigned int *)persons
Constant inlined main::$11 = (unsigned int *)persons+1*SIZEOF_STRUCT_PERSON
Constant inlined main::$1 = 1*SIZEOF_STRUCT_PERSON
Constant inlined main::$5 = 1*SIZEOF_STRUCT_PERSON
Constant inlined main::$6 = (char *)persons
Constant inlined main::$3 = 1*SIZEOF_STRUCT_PERSON
Constant inlined main::$9 = (char *)persons+OFFSET_STRUCT_PERSON_NAME+1*SIZEOF_STRUCT_PERSON
Constant inlined main::$7 = (char *)persons+1*SIZEOF_STRUCT_PERSON
Constant inlined main::person#0 = persons
Constant inlined main::$8 = (char *)persons+OFFSET_STRUCT_PERSON_NAME
Successful SSA optimization Pass2ConstantInlining
Consolidated array index constant in *((char *)persons+OFFSET_STRUCT_PERSON_NAME+8)
Consolidated array index constant in *((char *)persons+OFFSET_STRUCT_PERSON_NAME+1*SIZEOF_STRUCT_PERSON+8)
Consolidated array index constant in *((unsigned int *)persons+OFFSET_STRUCT_PERSON_AGE)
Consolidated array index constant in *((unsigned int *)persons+1*SIZEOF_STRUCT_PERSON+OFFSET_STRUCT_PERSON_AGE)
Consolidated array index constant in *((char *)persons+OFFSET_STRUCT_PERSON_NAME+8)
Consolidated array index constant in *((char *)main::person#1+OFFSET_STRUCT_PERSON_NAME+8)
Consolidated array index constant in *(main::SCREEN+1)
Successful SSA optimization Pass2ConstantAdditionElimination
Finalized unsigned number type (char) $d
Finalized unsigned number type (char) $d
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) 2
Successful SSA optimization PassNFinalizeNumberTypeConversions
CALL GRAPH

Created 0 initial phi equivalence classes
Coalesced down to 0 phi equivalence classes

FINAL CONTROL FLOW GRAPH

void main()
main: scope:[main]  from
  [0] *((char *)persons) = 7
  [1] *((char *)persons+1*SIZEOF_STRUCT_PERSON) = 9
  [2] *((char *)persons+OFFSET_STRUCT_PERSON_NAME+8) = 'a'
  [3] *((char *)persons+OFFSET_STRUCT_PERSON_NAME+1*SIZEOF_STRUCT_PERSON+8) = 'b'
  [4] *((unsigned int *)persons+OFFSET_STRUCT_PERSON_AGE) = $141
  [5] *((unsigned int *)persons+1*SIZEOF_STRUCT_PERSON+OFFSET_STRUCT_PERSON_AGE) = $7b
  [6] *main::SCREEN = *((char *)persons+OFFSET_STRUCT_PERSON_NAME+8)
  [7] *(main::SCREEN+1) = *((char *)main::person#1+OFFSET_STRUCT_PERSON_NAME+8)
  to:main::@return
main::@return: scope:[main]  from main
  [8] return 
  to:@return


VARIABLE REGISTER WEIGHTS
void main()
struct Person *main::person

Initial phi equivalence classes
Complete equivalence classes
REGISTER UPLIFT POTENTIAL REGISTERS
Statement [0] *((char *)persons) = 7 [ ] (  [ ] { }  ) always clobbers reg byte a 
Statement [1] *((char *)persons+1*SIZEOF_STRUCT_PERSON) = 9 [ ] (  [ ] { }  ) always clobbers reg byte a 
Statement [2] *((char *)persons+OFFSET_STRUCT_PERSON_NAME+8) = 'a' [ ] (  [ ] { }  ) always clobbers reg byte a 
Statement [3] *((char *)persons+OFFSET_STRUCT_PERSON_NAME+1*SIZEOF_STRUCT_PERSON+8) = 'b' [ ] (  [ ] { }  ) always clobbers reg byte a 
Statement [4] *((unsigned int *)persons+OFFSET_STRUCT_PERSON_AGE) = $141 [ ] (  [ ] { }  ) always clobbers reg byte a 
Statement [5] *((unsigned int *)persons+1*SIZEOF_STRUCT_PERSON+OFFSET_STRUCT_PERSON_AGE) = $7b [ ] (  [ ] { }  ) always clobbers reg byte a 
Statement [6] *main::SCREEN = *((char *)persons+OFFSET_STRUCT_PERSON_NAME+8) [ ] (  [ ] { }  ) always clobbers reg byte a 
Statement [7] *(main::SCREEN+1) = *((char *)main::person#1+OFFSET_STRUCT_PERSON_NAME+8) [ ] (  [ ] { }  ) always clobbers reg byte a 

REGISTER UPLIFT SCOPES
Uplift Scope [Person] 
Uplift Scope [main] 
Uplift Scope [] 

Uplifting [Person] best 73 combination 
Uplifting [main] best 73 combination 
Uplifting [] best 73 combination 

ASSEMBLER BEFORE OPTIMIZATION
  // File Comments
// Example of a struct containing an array
  // Upstart
  // Commodore 64 PRG executable file
.file [name="struct-ptr-32.prg", type="prg", segments="Program"]
.segmentdef Program [segments="Basic, Code, Data"]
.segmentdef Basic [start=$0801]
.segmentdef Code [start=$80d]
.segmentdef Data [startAfter="Code"]
.segment Basic
:BasicUpstart(main)
  // Global Constants & labels
  .const SIZEOF_STRUCT_PERSON = $10
  .const OFFSET_STRUCT_PERSON_NAME = 1
  .const OFFSET_STRUCT_PERSON_AGE = $e
.segment Code
  // main
main: {
    .label SCREEN = $400
    .label person = persons+SIZEOF_STRUCT_PERSON
    // [0] *((char *)persons) = 7 -- _deref_pbuc1=vbuc2 
    lda #7
    sta persons
    // [1] *((char *)persons+1*SIZEOF_STRUCT_PERSON) = 9 -- _deref_pbuc1=vbuc2 
    lda #9
    sta persons+1*SIZEOF_STRUCT_PERSON
    // [2] *((char *)persons+OFFSET_STRUCT_PERSON_NAME+8) = 'a' -- _deref_pbuc1=vbuc2 
    lda #'a'
    sta persons+OFFSET_STRUCT_PERSON_NAME+8
    // [3] *((char *)persons+OFFSET_STRUCT_PERSON_NAME+1*SIZEOF_STRUCT_PERSON+8) = 'b' -- _deref_pbuc1=vbuc2 
    lda #'b'
    sta persons+OFFSET_STRUCT_PERSON_NAME+1*SIZEOF_STRUCT_PERSON+8
    // [4] *((unsigned int *)persons+OFFSET_STRUCT_PERSON_AGE) = $141 -- _deref_pwuc1=vwuc2 
    lda #<$141
    sta persons+OFFSET_STRUCT_PERSON_AGE
    lda #>$141
    sta persons+OFFSET_STRUCT_PERSON_AGE+1
    // [5] *((unsigned int *)persons+1*SIZEOF_STRUCT_PERSON+OFFSET_STRUCT_PERSON_AGE) = $7b -- _deref_pwuc1=vbuc2 
    lda #<$7b
    sta persons+1*SIZEOF_STRUCT_PERSON+OFFSET_STRUCT_PERSON_AGE
    lda #>$7b
    sta persons+1*SIZEOF_STRUCT_PERSON+OFFSET_STRUCT_PERSON_AGE+1
    // [6] *main::SCREEN = *((char *)persons+OFFSET_STRUCT_PERSON_NAME+8) -- _deref_pbuc1=_deref_pbuc2 
    lda persons+OFFSET_STRUCT_PERSON_NAME+8
    sta SCREEN
    // [7] *(main::SCREEN+1) = *((char *)main::person#1+OFFSET_STRUCT_PERSON_NAME+8) -- _deref_pbuc1=_deref_pbuc2 
    lda person+OFFSET_STRUCT_PERSON_NAME+8
    sta SCREEN+1
    jmp __breturn
    // main::@return
  __breturn:
    // [8] return 
    rts
}
  // File Data
.segment Data
  persons: .fill $10*2, 0

ASSEMBLER OPTIMIZATIONS
Removing instruction jmp __breturn
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction __breturn:
Succesful ASM optimization Pass5UnusedLabelElimination

FINAL SYMBOL TABLE
__constant char OFFSET_STRUCT_PERSON_AGE = $e
__constant char OFFSET_STRUCT_PERSON_NAME = 1
__constant char SIZEOF_STRUCT_PERSON = $10
void main()
__constant char * const main::SCREEN = (char *) 1024
struct Person *main::person
__constant struct Person *main::person#1 = persons+SIZEOF_STRUCT_PERSON // person
__constant struct Person persons[2] = { fill( 2, 0) }



FINAL ASSEMBLER
Score: 70

  // File Comments
// Example of a struct containing an array
  // Upstart
  // Commodore 64 PRG executable file
.file [name="struct-ptr-32.prg", type="prg", segments="Program"]
.segmentdef Program [segments="Basic, Code, Data"]
.segmentdef Basic [start=$0801]
.segmentdef Code [start=$80d]
.segmentdef Data [startAfter="Code"]
.segment Basic
:BasicUpstart(main)
  // Global Constants & labels
  .const SIZEOF_STRUCT_PERSON = $10
  .const OFFSET_STRUCT_PERSON_NAME = 1
  .const OFFSET_STRUCT_PERSON_AGE = $e
.segment Code
  // main
main: {
    .label SCREEN = $400
    .label person = persons+SIZEOF_STRUCT_PERSON
    // persons[0].id = 7
    // [0] *((char *)persons) = 7 -- _deref_pbuc1=vbuc2 
    lda #7
    sta persons
    // persons[1].id = 9
    // [1] *((char *)persons+1*SIZEOF_STRUCT_PERSON) = 9 -- _deref_pbuc1=vbuc2 
    lda #9
    sta persons+1*SIZEOF_STRUCT_PERSON
    // persons[0].name[8] = 'a'
    // [2] *((char *)persons+OFFSET_STRUCT_PERSON_NAME+8) = 'a' -- _deref_pbuc1=vbuc2 
    lda #'a'
    sta persons+OFFSET_STRUCT_PERSON_NAME+8
    // persons[1].name[8] = 'b'
    // [3] *((char *)persons+OFFSET_STRUCT_PERSON_NAME+1*SIZEOF_STRUCT_PERSON+8) = 'b' -- _deref_pbuc1=vbuc2 
    lda #'b'
    sta persons+OFFSET_STRUCT_PERSON_NAME+1*SIZEOF_STRUCT_PERSON+8
    // persons[0].age = 321
    // [4] *((unsigned int *)persons+OFFSET_STRUCT_PERSON_AGE) = $141 -- _deref_pwuc1=vwuc2 
    lda #<$141
    sta persons+OFFSET_STRUCT_PERSON_AGE
    lda #>$141
    sta persons+OFFSET_STRUCT_PERSON_AGE+1
    // persons[1].age = 123
    // [5] *((unsigned int *)persons+1*SIZEOF_STRUCT_PERSON+OFFSET_STRUCT_PERSON_AGE) = $7b -- _deref_pwuc1=vbuc2 
    lda #<$7b
    sta persons+1*SIZEOF_STRUCT_PERSON+OFFSET_STRUCT_PERSON_AGE
    lda #>$7b
    sta persons+1*SIZEOF_STRUCT_PERSON+OFFSET_STRUCT_PERSON_AGE+1
    // SCREEN[0] = person->name[8]
    // [6] *main::SCREEN = *((char *)persons+OFFSET_STRUCT_PERSON_NAME+8) -- _deref_pbuc1=_deref_pbuc2 
    lda persons+OFFSET_STRUCT_PERSON_NAME+8
    sta SCREEN
    // SCREEN[1] = person->name[8]
    // [7] *(main::SCREEN+1) = *((char *)main::person#1+OFFSET_STRUCT_PERSON_NAME+8) -- _deref_pbuc1=_deref_pbuc2 
    lda person+OFFSET_STRUCT_PERSON_NAME+8
    sta SCREEN+1
    // main::@return
    // }
    // [8] return 
    rts
}
  // File Data
.segment Data
  persons: .fill $10*2, 0

