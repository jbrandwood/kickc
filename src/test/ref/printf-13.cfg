@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] (byte) printf_cursor_x ← (byte) 0
  [2] (byte) printf_cursor_y ← (byte) 0
  [3] (byte*) printf_cursor_ptr ← (byte*) 1024
  to:@2
@2: scope:[]  from @1
  [4] phi()
  [5] call main 
  to:@end
@end: scope:[]  from @2
  [6] phi()

(void()) main()
main: scope:[main]  from @2
  [7] phi()
  [8] call printf_cls 
  to:main::@1
main::@1: scope:[main]  from main
  [9] phi()
  [10] call printf_str 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [11] phi()
  [12] call printf_char 
  to:main::@3
main::@3: scope:[main]  from main::@2
  [13] phi()
  [14] call printf_str 
  to:main::@4
main::@4: scope:[main]  from main::@3
  [15] phi()
  [16] call printf_string 
  to:main::@5
main::@5: scope:[main]  from main::@4
  [17] phi()
  [18] call printf_str 
  to:main::@6
main::@6: scope:[main]  from main::@5
  [19] phi()
  [20] call printf_string 
  to:main::@7
main::@7: scope:[main]  from main::@6
  [21] phi()
  [22] call printf_str 
  to:main::@8
main::@8: scope:[main]  from main::@7
  [23] phi()
  [24] call printf_string 
  to:main::@9
main::@9: scope:[main]  from main::@8
  [25] phi()
  [26] call printf_str 
  to:main::@10
main::@10: scope:[main]  from main::@9
  [27] phi()
  [28] call printf_string 
  to:main::@11
main::@11: scope:[main]  from main::@10
  [29] phi()
  [30] call printf_str 
  to:main::@12
main::@12: scope:[main]  from main::@11
  [31] phi()
  [32] call printf_str 
  to:main::@13
main::@13: scope:[main]  from main::@12
  [33] phi()
  [34] call printf_char 
  to:main::@14
main::@14: scope:[main]  from main::@13
  [35] phi()
  [36] call printf_str 
  to:main::@15
main::@15: scope:[main]  from main::@14
  [37] phi()
  [38] call printf_string 
  to:main::@16
main::@16: scope:[main]  from main::@15
  [39] phi()
  [40] call printf_str 
  to:main::@17
main::@17: scope:[main]  from main::@16
  [41] phi()
  [42] call printf_string 
  to:main::@18
main::@18: scope:[main]  from main::@17
  [43] phi()
  [44] call printf_str 
  to:main::@19
main::@19: scope:[main]  from main::@18
  [45] phi()
  [46] call printf_string 
  to:main::@20
main::@20: scope:[main]  from main::@19
  [47] phi()
  [48] call printf_str 
  to:main::@21
main::@21: scope:[main]  from main::@20
  [49] phi()
  [50] call printf_string 
  to:main::@22
main::@22: scope:[main]  from main::@21
  [51] phi()
  [52] call printf_str 
  to:main::@23
main::@23: scope:[main]  from main::@22
  [53] phi()
  [54] call printf_str 
  to:main::@24
main::@24: scope:[main]  from main::@23
  [55] phi()
  [56] call printf_char 
  to:main::@25
main::@25: scope:[main]  from main::@24
  [57] phi()
  [58] call printf_str 
  to:main::@26
main::@26: scope:[main]  from main::@25
  [59] phi()
  [60] call printf_sint 
  to:main::@27
main::@27: scope:[main]  from main::@26
  [61] phi()
  [62] call printf_str 
  to:main::@28
main::@28: scope:[main]  from main::@27
  [63] phi()
  [64] call printf_sint 
  to:main::@29
main::@29: scope:[main]  from main::@28
  [65] phi()
  [66] call printf_str 
  to:main::@30
main::@30: scope:[main]  from main::@29
  [67] phi()
  [68] call printf_sint 
  to:main::@31
main::@31: scope:[main]  from main::@30
  [69] phi()
  [70] call printf_str 
  to:main::@32
main::@32: scope:[main]  from main::@31
  [71] phi()
  [72] call printf_sint 
  to:main::@33
main::@33: scope:[main]  from main::@32
  [73] phi()
  [74] call printf_str 
  to:main::@34
main::@34: scope:[main]  from main::@33
  [75] phi()
  [76] call printf_str 
  to:main::@35
main::@35: scope:[main]  from main::@34
  [77] phi()
  [78] call printf_char 
  to:main::@36
main::@36: scope:[main]  from main::@35
  [79] phi()
  [80] call printf_str 
  to:main::@37
main::@37: scope:[main]  from main::@36
  [81] phi()
  [82] call printf_sint 
  to:main::@38
main::@38: scope:[main]  from main::@37
  [83] phi()
  [84] call printf_str 
  to:main::@39
main::@39: scope:[main]  from main::@38
  [85] phi()
  [86] call printf_sint 
  to:main::@40
main::@40: scope:[main]  from main::@39
  [87] phi()
  [88] call printf_str 
  to:main::@41
main::@41: scope:[main]  from main::@40
  [89] phi()
  [90] call printf_sint 
  to:main::@42
main::@42: scope:[main]  from main::@41
  [91] phi()
  [92] call printf_str 
  to:main::@43
main::@43: scope:[main]  from main::@42
  [93] phi()
  [94] call printf_sint 
  to:main::@44
main::@44: scope:[main]  from main::@43
  [95] phi()
  [96] call printf_str 
  to:main::@45
main::@45: scope:[main]  from main::@44
  [97] phi()
  [98] call printf_str 
  to:main::@46
main::@46: scope:[main]  from main::@45
  [99] phi()
  [100] call printf_char 
  to:main::@47
main::@47: scope:[main]  from main::@46
  [101] phi()
  [102] call printf_str 
  to:main::@48
main::@48: scope:[main]  from main::@47
  [103] phi()
  [104] call printf_sint 
  to:main::@49
main::@49: scope:[main]  from main::@48
  [105] phi()
  [106] call printf_str 
  to:main::@50
main::@50: scope:[main]  from main::@49
  [107] phi()
  [108] call printf_sint 
  to:main::@51
main::@51: scope:[main]  from main::@50
  [109] phi()
  [110] call printf_str 
  to:main::@52
main::@52: scope:[main]  from main::@51
  [111] phi()
  [112] call printf_sint 
  to:main::@53
main::@53: scope:[main]  from main::@52
  [113] phi()
  [114] call printf_str 
  to:main::@54
main::@54: scope:[main]  from main::@53
  [115] phi()
  [116] call printf_sint 
  to:main::@55
main::@55: scope:[main]  from main::@54
  [117] phi()
  [118] call printf_str 
  to:main::@56
main::@56: scope:[main]  from main::@55
  [119] phi()
  [120] call printf_str 
  to:main::@57
main::@57: scope:[main]  from main::@56
  [121] phi()
  [122] call printf_char 
  to:main::@58
main::@58: scope:[main]  from main::@57
  [123] phi()
  [124] call printf_str 
  to:main::@59
main::@59: scope:[main]  from main::@58
  [125] phi()
  [126] call printf_sint 
  to:main::@60
main::@60: scope:[main]  from main::@59
  [127] phi()
  [128] call printf_str 
  to:main::@61
main::@61: scope:[main]  from main::@60
  [129] phi()
  [130] call printf_sint 
  to:main::@62
main::@62: scope:[main]  from main::@61
  [131] phi()
  [132] call printf_str 
  to:main::@63
main::@63: scope:[main]  from main::@62
  [133] phi()
  [134] call printf_sint 
  to:main::@64
main::@64: scope:[main]  from main::@63
  [135] phi()
  [136] call printf_str 
  to:main::@65
main::@65: scope:[main]  from main::@64
  [137] phi()
  [138] call printf_sint 
  to:main::@66
main::@66: scope:[main]  from main::@65
  [139] phi()
  [140] call printf_str 
  to:main::@67
main::@67: scope:[main]  from main::@66
  [141] phi()
  [142] call printf_str 
  to:main::@68
main::@68: scope:[main]  from main::@67
  [143] phi()
  [144] call printf_char 
  to:main::@69
main::@69: scope:[main]  from main::@68
  [145] phi()
  [146] call printf_str 
  to:main::@70
main::@70: scope:[main]  from main::@69
  [147] phi()
  [148] call printf_uint 
  to:main::@71
main::@71: scope:[main]  from main::@70
  [149] phi()
  [150] call printf_str 
  to:main::@72
main::@72: scope:[main]  from main::@71
  [151] phi()
  [152] call printf_uint 
  to:main::@73
main::@73: scope:[main]  from main::@72
  [153] phi()
  [154] call printf_str 
  to:main::@74
main::@74: scope:[main]  from main::@73
  [155] phi()
  [156] call printf_uint 
  to:main::@75
main::@75: scope:[main]  from main::@74
  [157] phi()
  [158] call printf_str 
  to:main::@76
main::@76: scope:[main]  from main::@75
  [159] phi()
  [160] call printf_uint 
  to:main::@77
main::@77: scope:[main]  from main::@76
  [161] phi()
  [162] call printf_str 
  to:main::@78
main::@78: scope:[main]  from main::@77
  [163] phi()
  [164] call printf_str 
  to:main::@79
main::@79: scope:[main]  from main::@78
  [165] phi()
  [166] call printf_char 
  to:main::@80
main::@80: scope:[main]  from main::@79
  [167] phi()
  [168] call printf_str 
  to:main::@81
main::@81: scope:[main]  from main::@80
  [169] phi()
  [170] call printf_uint 
  to:main::@82
main::@82: scope:[main]  from main::@81
  [171] phi()
  [172] call printf_str 
  to:main::@83
main::@83: scope:[main]  from main::@82
  [173] phi()
  [174] call printf_uint 
  to:main::@84
main::@84: scope:[main]  from main::@83
  [175] phi()
  [176] call printf_str 
  to:main::@85
main::@85: scope:[main]  from main::@84
  [177] phi()
  [178] call printf_uint 
  to:main::@86
main::@86: scope:[main]  from main::@85
  [179] phi()
  [180] call printf_str 
  to:main::@87
main::@87: scope:[main]  from main::@86
  [181] phi()
  [182] call printf_uint 
  to:main::@88
main::@88: scope:[main]  from main::@87
  [183] phi()
  [184] call printf_str 
  to:main::@return
main::@return: scope:[main]  from main::@88
  [185] return 
  to:@return

(void()) printf_str((byte*) printf_str::str)
printf_str: scope:[printf_str]  from main::@1 main::@11 main::@12 main::@14 main::@16 main::@18 main::@20 main::@22 main::@23 main::@25 main::@27 main::@29 main::@3 main::@31 main::@33 main::@34 main::@36 main::@38 main::@40 main::@42 main::@44 main::@45 main::@47 main::@49 main::@5 main::@51 main::@53 main::@55 main::@56 main::@58 main::@60 main::@62 main::@64 main::@66 main::@67 main::@69 main::@7 main::@71 main::@73 main::@75 main::@77 main::@78 main::@80 main::@82 main::@84 main::@86 main::@88 main::@9 printf_number_buffer::@4 printf_string::@2
  [186] (byte*) printf_str::str#53 ← phi( main::@1/(const byte*) main::str main::@11/(const byte*) main::str9 main::@12/(const byte*) main::str main::@14/(const byte*) main::str11 main::@16/(const byte*) main::str3 main::@18/(const byte*) main::str3 main::@20/(const byte*) main::str3 main::@22/(const byte*) main::str9 main::@23/(const byte*) main::str main::@25/(const byte*) main::str21 main::@27/(const byte*) main::str3 main::@29/(const byte*) main::str3 main::@3/(const byte*) main::str1 main::@31/(const byte*) main::str3 main::@33/(const byte*) main::str9 main::@34/(const byte*) main::str main::@36/(const byte*) main::str27 main::@38/(const byte*) main::str3 main::@40/(const byte*) main::str3 main::@42/(const byte*) main::str3 main::@44/(const byte*) main::str9 main::@45/(const byte*) main::str main::@47/(const byte*) main::str33 main::@49/(const byte*) main::str3 main::@5/(const byte*) main::str3 main::@51/(const byte*) main::str3 main::@53/(const byte*) main::str3 main::@55/(const byte*) main::str9 main::@56/(const byte*) main::str main::@58/(const byte*) main::str39 main::@60/(const byte*) main::str3 main::@62/(const byte*) main::str3 main::@64/(const byte*) main::str3 main::@66/(const byte*) main::str9 main::@67/(const byte*) main::str main::@69/(const byte*) main::str45 main::@7/(const byte*) main::str3 main::@71/(const byte*) main::str3 main::@73/(const byte*) main::str3 main::@75/(const byte*) main::str3 main::@77/(const byte*) main::str9 main::@78/(const byte*) main::str main::@80/(const byte*) main::str51 main::@82/(const byte*) main::str3 main::@84/(const byte*) main::str3 main::@86/(const byte*) main::str3 main::@88/(const byte*) main::str9 main::@9/(const byte*) main::str3 printf_number_buffer::@4/(byte*) printf_str::str#1 printf_string::@2/(byte*) printf_str::str#2 )
  to:printf_str::@1
printf_str::@1: scope:[printf_str]  from printf_str printf_str::@4 printf_str::@5
  [187] (byte*) printf_str::str#51 ← phi( printf_str/(byte*) printf_str::str#53 printf_str::@4/(byte*) printf_str::str#0 printf_str::@5/(byte*) printf_str::str#0 )
  to:printf_str::@2
printf_str::@2: scope:[printf_str]  from printf_str::@1
  [188] (byte) printf_str::ch#0 ← *((byte*) printf_str::str#51)
  [189] (byte*) printf_str::str#0 ← ++ (byte*) printf_str::str#51
  [190] if((byte) printf_str::ch#0!=(byte) 0) goto printf_str::@3
  to:printf_str::@return
printf_str::@return: scope:[printf_str]  from printf_str::@2
  [191] return 
  to:@return
printf_str::@3: scope:[printf_str]  from printf_str::@2
  [192] if((byte) printf_str::ch#0==(byte) '
') goto printf_str::@4
  to:printf_str::@5
printf_str::@5: scope:[printf_str]  from printf_str::@3
  [193] (byte) printf_char::ch#1 ← (byte) printf_str::ch#0
  [194] call printf_char 
  to:printf_str::@1
printf_str::@4: scope:[printf_str]  from printf_str::@3
  [195] phi()
  [196] call printf_ln 
  to:printf_str::@1

(void()) printf_ln()
printf_ln: scope:[printf_ln]  from printf_str::@4
  [197] (byte*~) printf_ln::$0 ← (byte*) printf_cursor_ptr - (byte) printf_cursor_x
  [198] (byte*~) printf_ln::$1 ← (byte*~) printf_ln::$0 + (byte) $28
  [199] (byte*) printf_cursor_ptr ← (byte*~) printf_ln::$1
  [200] (byte) printf_cursor_x ← (byte) 0
  [201] (byte) printf_cursor_y ← ++ (byte) printf_cursor_y
  to:printf_ln::@return
printf_ln::@return: scope:[printf_ln]  from printf_ln
  [202] return 
  to:@return

(void()) printf_char((byte) printf_char::ch)
printf_char: scope:[printf_char]  from main::@13 main::@2 main::@24 main::@35 main::@46 main::@57 main::@68 main::@79 printf_number_buffer::@8 printf_padding::@2 printf_str::@5
  [203] (byte) printf_char::ch#11 ← phi( main::@13/(byte) '%' main::@2/(byte) '%' main::@24/(byte) '%' main::@35/(byte) '%' main::@46/(byte) '%' main::@57/(byte) '%' main::@68/(byte) '%' main::@79/(byte) '%' printf_number_buffer::@8/(byte) printf_char::ch#2 printf_padding::@2/(byte) printf_char::ch#0 printf_str::@5/(byte) printf_char::ch#1 )
  [204] *((byte*) printf_cursor_ptr) ← (byte) printf_char::ch#11
  [205] (byte*) printf_cursor_ptr ← ++ (byte*) printf_cursor_ptr
  [206] (byte) printf_cursor_x ← ++ (byte) printf_cursor_x
  [207] if((byte) printf_cursor_x!=(byte) $28) goto printf_char::@return
  to:printf_char::@1
printf_char::@1: scope:[printf_char]  from printf_char
  [208] (byte) printf_cursor_x ← (byte) 0
  [209] (byte) printf_cursor_y ← ++ (byte) printf_cursor_y
  [210] if((byte) printf_cursor_y!=(byte) $19) goto printf_char::@return
  to:printf_char::@2
printf_char::@2: scope:[printf_char]  from printf_char::@1
  [211] phi()
  [212] call memcpy 
  to:printf_char::@3
printf_char::@3: scope:[printf_char]  from printf_char::@2
  [213] phi()
  [214] call memset 
  to:printf_char::@4
printf_char::@4: scope:[printf_char]  from printf_char::@3
  [215] (byte*~) printf_char::$6 ← (byte*) printf_cursor_ptr - (byte) $28
  [216] (byte*) printf_cursor_ptr ← (byte*~) printf_char::$6
  [217] (byte) printf_cursor_y ← -- (byte) printf_cursor_y
  to:printf_char::@return
printf_char::@return: scope:[printf_char]  from printf_char printf_char::@1 printf_char::@4
  [218] return 
  to:@return

(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
memset: scope:[memset]  from printf_char::@3 printf_cls
  [219] (byte) memset::c#4 ← phi( printf_char::@3/(byte) ' ' printf_cls/(byte) ' ' )
  [219] (void*) memset::str#3 ← phi( printf_char::@3/(void*)(number) $400+(number) $28*(number) $19-(number) $28 printf_cls/(void*) 1024 )
  [219] (word) memset::num#2 ← phi( printf_char::@3/(byte) $28 printf_cls/(word)(number) $28*(number) $19 )
  [220] if((word) memset::num#2<=(byte) 0) goto memset::@return
  to:memset::@1
memset::@1: scope:[memset]  from memset
  [221] (byte*) memset::end#0 ← (byte*)(void*) memset::str#3 + (word) memset::num#2
  [222] (byte*) memset::dst#4 ← (byte*)(void*) memset::str#3
  to:memset::@2
memset::@2: scope:[memset]  from memset::@1 memset::@3
  [223] (byte*) memset::dst#2 ← phi( memset::@1/(byte*) memset::dst#4 memset::@3/(byte*) memset::dst#1 )
  [224] if((byte*) memset::dst#2!=(byte*) memset::end#0) goto memset::@3
  to:memset::@return
memset::@return: scope:[memset]  from memset memset::@2
  [225] return 
  to:@return
memset::@3: scope:[memset]  from memset::@2
  [226] *((byte*) memset::dst#2) ← (byte) memset::c#4
  [227] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2
  to:memset::@2

(void*()) memcpy((void*) memcpy::destination , (void*) memcpy::source , (word) memcpy::num)
memcpy: scope:[memcpy]  from printf_char::@2
  [228] phi()
  to:memcpy::@1
memcpy::@1: scope:[memcpy]  from memcpy memcpy::@2
  [229] (byte*) memcpy::dst#2 ← phi( memcpy/(byte*)(const void*) memcpy::destination#0 memcpy::@2/(byte*) memcpy::dst#1 )
  [229] (byte*) memcpy::src#2 ← phi( memcpy/(byte*)(const void*) memcpy::source#0 memcpy::@2/(byte*) memcpy::src#1 )
  [230] if((byte*) memcpy::src#2!=(const byte*) memcpy::src_end#0) goto memcpy::@2
  to:memcpy::@return
memcpy::@return: scope:[memcpy]  from memcpy::@1
  [231] return 
  to:@return
memcpy::@2: scope:[memcpy]  from memcpy::@1
  [232] *((byte*) memcpy::dst#2) ← *((byte*) memcpy::src#2)
  [233] (byte*) memcpy::dst#1 ← ++ (byte*) memcpy::dst#2
  [234] (byte*) memcpy::src#1 ← ++ (byte*) memcpy::src#2
  to:memcpy::@1

(void()) printf_uint((word) printf_uint::uvalue , (byte) printf_uint::format_min_length , (byte) printf_uint::format_justify_left , (byte) printf_uint::format_sign_always , (byte) printf_uint::format_zero_padding , (byte) printf_uint::format_radix)
printf_uint: scope:[printf_uint]  from main::@70 main::@72 main::@74 main::@76 main::@81 main::@83 main::@85 main::@87
  [235] (byte) printf_uint::format_radix#10 ← phi( main::@70/(const byte) OCTAL main::@72/(const byte) OCTAL main::@74/(const byte) OCTAL main::@76/(const byte) OCTAL main::@81/(const byte) HEXADECIMAL main::@83/(const byte) HEXADECIMAL main::@85/(const byte) HEXADECIMAL main::@87/(const byte) HEXADECIMAL )
  [235] (word) printf_uint::uvalue#10 ← phi( main::@70/(byte) 1 main::@72/(byte) $b main::@74/(byte) $6f main::@76/(word) $457 main::@81/(byte) 1 main::@83/(byte) $b main::@85/(byte) $6f main::@87/(word) $457 )
  to:printf_uint::@1
printf_uint::@1: scope:[printf_uint]  from printf_uint
  [236] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) 0
  [237] (word) utoa::value#2 ← (word) printf_uint::uvalue#10
  [238] (byte) utoa::radix#1 ← (byte) printf_uint::format_radix#10
  [239] call utoa 
  to:printf_uint::@2
printf_uint::@2: scope:[printf_uint]  from printf_uint::@1
  [240] (byte) printf_number_buffer::buffer_sign#1 ← *((byte*)&(struct printf_buffer_number) printf_buffer)
  [241] call printf_number_buffer 
  to:printf_uint::@return
printf_uint::@return: scope:[printf_uint]  from printf_uint::@2
  [242] return 
  to:@return

(void()) printf_number_buffer((byte) printf_number_buffer::buffer_sign , (byte*) printf_number_buffer::buffer_digits , (byte) printf_number_buffer::format_min_length , (byte) printf_number_buffer::format_justify_left , (byte) printf_number_buffer::format_sign_always , (byte) printf_number_buffer::format_zero_padding , (byte) printf_number_buffer::format_radix)
printf_number_buffer: scope:[printf_number_buffer]  from printf_sint::@5 printf_uint::@2
  [243] (byte) printf_number_buffer::buffer_sign#10 ← phi( printf_sint::@5/(byte) printf_number_buffer::buffer_sign#0 printf_uint::@2/(byte) printf_number_buffer::buffer_sign#1 )
  [243] (byte*) printf_number_buffer::buffer_digits#10 ← phi( printf_sint::@5/(byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS printf_uint::@2/(byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  [243] (byte) printf_number_buffer::format_zero_padding#10 ← phi( printf_sint::@5/(byte) printf_number_buffer::format_zero_padding#0 printf_uint::@2/(byte) 0 )
  [243] (byte) printf_number_buffer::format_justify_left#10 ← phi( printf_sint::@5/(byte) printf_number_buffer::format_justify_left#0 printf_uint::@2/(byte) 0 )
  [243] (byte) printf_number_buffer::format_min_length#2 ← phi( printf_sint::@5/(byte) 3 printf_uint::@2/(byte) 0 )
  [244] if((byte) 0==(byte) printf_number_buffer::format_min_length#2) goto printf_number_buffer::@1
  to:printf_number_buffer::@5
printf_number_buffer::@5: scope:[printf_number_buffer]  from printf_number_buffer
  [245] (byte*) strlen::str#1 ← (byte*) printf_number_buffer::buffer_digits#10
  [246] call strlen 
  [247] (word) strlen::return#2 ← (word) strlen::len#2
  to:printf_number_buffer::@12
printf_number_buffer::@12: scope:[printf_number_buffer]  from printf_number_buffer::@5
  [248] (word~) printf_number_buffer::$18 ← (word) strlen::return#2
  [249] (signed byte) printf_number_buffer::len#0 ← (signed byte)(word~) printf_number_buffer::$18
  [250] if((byte) 0==(byte) printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@11
  to:printf_number_buffer::@6
printf_number_buffer::@6: scope:[printf_number_buffer]  from printf_number_buffer::@12
  [251] (signed byte) printf_number_buffer::len#1 ← ++ (signed byte) printf_number_buffer::len#0
  to:printf_number_buffer::@11
printf_number_buffer::@11: scope:[printf_number_buffer]  from printf_number_buffer::@12 printf_number_buffer::@6
  [252] (signed byte) printf_number_buffer::len#2 ← phi( printf_number_buffer::@12/(signed byte) printf_number_buffer::len#0 printf_number_buffer::@6/(signed byte) printf_number_buffer::len#1 )
  [253] (signed byte) printf_number_buffer::padding#1 ← (signed byte)(byte) printf_number_buffer::format_min_length#2 - (signed byte) printf_number_buffer::len#2
  [254] if((signed byte) printf_number_buffer::padding#1>=(signed byte) 0) goto printf_number_buffer::@19
  to:printf_number_buffer::@1
printf_number_buffer::@19: scope:[printf_number_buffer]  from printf_number_buffer::@11
  [255] phi()
  to:printf_number_buffer::@1
printf_number_buffer::@1: scope:[printf_number_buffer]  from printf_number_buffer printf_number_buffer::@11 printf_number_buffer::@19
  [256] (signed byte) printf_number_buffer::padding#10 ← phi( printf_number_buffer/(signed byte) 0 printf_number_buffer::@19/(signed byte) printf_number_buffer::padding#1 printf_number_buffer::@11/(signed byte) 0 )
  [257] if((byte) 0!=(byte) printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@2
  to:printf_number_buffer::@15
printf_number_buffer::@15: scope:[printf_number_buffer]  from printf_number_buffer::@1
  [258] if((byte) 0!=(byte) printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@2
  to:printf_number_buffer::@14
printf_number_buffer::@14: scope:[printf_number_buffer]  from printf_number_buffer::@15
  [259] if((signed byte) 0!=(signed byte) printf_number_buffer::padding#10) goto printf_number_buffer::@7
  to:printf_number_buffer::@2
printf_number_buffer::@7: scope:[printf_number_buffer]  from printf_number_buffer::@14
  [260] (byte) printf_padding::length#0 ← (byte)(signed byte) printf_number_buffer::padding#10
  [261] call printf_padding 
  to:printf_number_buffer::@2
printf_number_buffer::@2: scope:[printf_number_buffer]  from printf_number_buffer::@1 printf_number_buffer::@14 printf_number_buffer::@15 printf_number_buffer::@7
  [262] if((byte) 0==(byte) printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@3
  to:printf_number_buffer::@8
printf_number_buffer::@8: scope:[printf_number_buffer]  from printf_number_buffer::@2
  [263] (byte) printf_char::ch#2 ← (byte) printf_number_buffer::buffer_sign#10
  [264] call printf_char 
  to:printf_number_buffer::@3
printf_number_buffer::@3: scope:[printf_number_buffer]  from printf_number_buffer::@2 printf_number_buffer::@8
  [265] if((byte) 0==(byte) printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@4
  to:printf_number_buffer::@16
printf_number_buffer::@16: scope:[printf_number_buffer]  from printf_number_buffer::@3
  [266] if((signed byte) 0!=(signed byte) printf_number_buffer::padding#10) goto printf_number_buffer::@9
  to:printf_number_buffer::@4
printf_number_buffer::@9: scope:[printf_number_buffer]  from printf_number_buffer::@16
  [267] (byte) printf_padding::length#1 ← (byte)(signed byte) printf_number_buffer::padding#10
  [268] call printf_padding 
  to:printf_number_buffer::@4
printf_number_buffer::@4: scope:[printf_number_buffer]  from printf_number_buffer::@16 printf_number_buffer::@3 printf_number_buffer::@9
  [269] (byte*) printf_str::str#1 ← (byte*) printf_number_buffer::buffer_digits#10
  [270] call printf_str 
  to:printf_number_buffer::@13
printf_number_buffer::@13: scope:[printf_number_buffer]  from printf_number_buffer::@4
  [271] if((byte) 0==(byte) printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@return
  to:printf_number_buffer::@18
printf_number_buffer::@18: scope:[printf_number_buffer]  from printf_number_buffer::@13
  [272] if((byte) 0!=(byte) printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@return
  to:printf_number_buffer::@17
printf_number_buffer::@17: scope:[printf_number_buffer]  from printf_number_buffer::@18
  [273] if((signed byte) 0!=(signed byte) printf_number_buffer::padding#10) goto printf_number_buffer::@10
  to:printf_number_buffer::@return
printf_number_buffer::@10: scope:[printf_number_buffer]  from printf_number_buffer::@17
  [274] (byte) printf_padding::length#2 ← (byte)(signed byte) printf_number_buffer::padding#10
  [275] call printf_padding 
  to:printf_number_buffer::@return
printf_number_buffer::@return: scope:[printf_number_buffer]  from printf_number_buffer::@10 printf_number_buffer::@13 printf_number_buffer::@17 printf_number_buffer::@18
  [276] return 
  to:@return

(void()) printf_padding((byte) printf_padding::pad , (byte) printf_padding::length)
printf_padding: scope:[printf_padding]  from printf_number_buffer::@10 printf_number_buffer::@7 printf_number_buffer::@9 printf_string::@4 printf_string::@5
  [277] (byte) printf_padding::pad#7 ← phi( printf_number_buffer::@9/(byte) '0' printf_number_buffer::@10/(byte) ' ' printf_number_buffer::@7/(byte) ' ' printf_string::@4/(byte) ' ' printf_string::@5/(byte) ' ' )
  [277] (byte) printf_padding::length#6 ← phi( printf_number_buffer::@9/(byte) printf_padding::length#1 printf_number_buffer::@10/(byte) printf_padding::length#2 printf_number_buffer::@7/(byte) printf_padding::length#0 printf_string::@4/(byte) printf_padding::length#3 printf_string::@5/(byte) printf_padding::length#4 )
  to:printf_padding::@1
printf_padding::@1: scope:[printf_padding]  from printf_padding printf_padding::@3
  [278] (byte) printf_padding::i#2 ← phi( printf_padding/(byte) 0 printf_padding::@3/(byte) printf_padding::i#1 )
  [279] if((byte) printf_padding::i#2<(byte) printf_padding::length#6) goto printf_padding::@2
  to:printf_padding::@return
printf_padding::@return: scope:[printf_padding]  from printf_padding::@1
  [280] return 
  to:@return
printf_padding::@2: scope:[printf_padding]  from printf_padding::@1
  [281] (byte) printf_char::ch#0 ← (byte) printf_padding::pad#7
  [282] call printf_char 
  to:printf_padding::@3
printf_padding::@3: scope:[printf_padding]  from printf_padding::@2
  [283] (byte) printf_padding::i#1 ← ++ (byte) printf_padding::i#2
  to:printf_padding::@1

(word()) strlen((byte*) strlen::str)
strlen: scope:[strlen]  from printf_number_buffer::@5 printf_string::@3
  [284] (byte*) strlen::str#5 ← phi( printf_number_buffer::@5/(byte*) strlen::str#1 printf_string::@3/(byte*) strlen::str#2 )
  to:strlen::@1
strlen::@1: scope:[strlen]  from strlen strlen::@2
  [285] (word) strlen::len#2 ← phi( strlen/(word) 0 strlen::@2/(word) strlen::len#1 )
  [285] (byte*) strlen::str#3 ← phi( strlen/(byte*) strlen::str#5 strlen::@2/(byte*) strlen::str#0 )
  [286] if((byte) 0!=*((byte*) strlen::str#3)) goto strlen::@2
  to:strlen::@return
strlen::@return: scope:[strlen]  from strlen::@1
  [287] return 
  to:@return
strlen::@2: scope:[strlen]  from strlen::@1
  [288] (word) strlen::len#1 ← ++ (word) strlen::len#2
  [289] (byte*) strlen::str#0 ← ++ (byte*) strlen::str#3
  to:strlen::@1

(void()) utoa((word) utoa::value , (byte*) utoa::buffer , (byte) utoa::radix)
utoa: scope:[utoa]  from printf_sint::@2 printf_uint::@1
  [290] (byte*) utoa::buffer#11 ← phi( printf_sint::@2/(byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS printf_uint::@1/(byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  [290] (word) utoa::value#10 ← phi( printf_sint::@2/(word) utoa::value#1 printf_uint::@1/(word) utoa::value#2 )
  [290] (byte) utoa::radix#2 ← phi( printf_sint::@2/(const byte) DECIMAL printf_uint::@1/(byte) utoa::radix#1 )
  [291] if((byte) utoa::radix#2==(const byte) DECIMAL) goto utoa::@1
  to:utoa::@2
utoa::@2: scope:[utoa]  from utoa
  [292] if((byte) utoa::radix#2==(const byte) HEXADECIMAL) goto utoa::@1
  to:utoa::@3
utoa::@3: scope:[utoa]  from utoa::@2
  [293] if((byte) utoa::radix#2==(const byte) OCTAL) goto utoa::@1
  to:utoa::@4
utoa::@4: scope:[utoa]  from utoa::@3
  [294] if((byte) utoa::radix#2==(const byte) BINARY) goto utoa::@1
  to:utoa::@5
utoa::@5: scope:[utoa]  from utoa::@4
  [295] *((byte*) utoa::buffer#11) ← (byte) 'e'
  [296] (byte*) utoa::buffer#0 ← ++ (byte*) utoa::buffer#11
  [297] *((byte*) utoa::buffer#0) ← (byte) 'r'
  [298] (byte*) utoa::buffer#1 ← ++ (byte*) utoa::buffer#0
  [299] *((byte*) utoa::buffer#1) ← (byte) 'r'
  [300] (byte*) utoa::buffer#2 ← ++ (byte*) utoa::buffer#1
  [301] *((byte*) utoa::buffer#2) ← (byte) 0
  to:utoa::@return
utoa::@return: scope:[utoa]  from utoa::@5 utoa::@8
  [302] return 
  to:@return
utoa::@1: scope:[utoa]  from utoa utoa::@2 utoa::@3 utoa::@4
  [303] (word*) utoa::digit_values#8 ← phi( utoa/(const word*) RADIX_DECIMAL_VALUES utoa::@2/(const word*) RADIX_HEXADECIMAL_VALUES utoa::@3/(const word*) RADIX_OCTAL_VALUES utoa::@4/(const word*) RADIX_BINARY_VALUES )
  [303] (byte) utoa::max_digits#7 ← phi( utoa/(byte) 5 utoa::@2/(byte) 4 utoa::@3/(byte) 6 utoa::@4/(byte) $10 )
  to:utoa::@6
utoa::@6: scope:[utoa]  from utoa::@1 utoa::@9
  [304] (byte*) utoa::buffer#10 ← phi( utoa::@9/(byte*) utoa::buffer#15 utoa::@1/(byte*) utoa::buffer#11 )
  [304] (byte) utoa::started#2 ← phi( utoa::@9/(byte) utoa::started#4 utoa::@1/(byte) 0 )
  [304] (word) utoa::value#3 ← phi( utoa::@9/(word) utoa::value#7 utoa::@1/(word) utoa::value#10 )
  [304] (byte) utoa::digit#2 ← phi( utoa::@9/(byte) utoa::digit#1 utoa::@1/(byte) 0 )
  [305] (byte~) utoa::$4 ← (byte) utoa::max_digits#7 - (byte) 1
  [306] if((byte) utoa::digit#2<(byte~) utoa::$4) goto utoa::@7
  to:utoa::@8
utoa::@8: scope:[utoa]  from utoa::@6
  [307] (byte~) utoa::$11 ← (byte)(word) utoa::value#3
  [308] *((byte*) utoa::buffer#10) ← *((const byte*) DIGITS + (byte~) utoa::$11)
  [309] (byte*) utoa::buffer#3 ← ++ (byte*) utoa::buffer#10
  [310] *((byte*) utoa::buffer#3) ← (byte) 0
  to:utoa::@return
utoa::@7: scope:[utoa]  from utoa::@6
  [311] (byte~) utoa::$10 ← (byte) utoa::digit#2 << (byte) 1
  [312] (word) utoa::digit_value#0 ← *((word*) utoa::digit_values#8 + (byte~) utoa::$10)
  [313] if((byte) 0!=(byte) utoa::started#2) goto utoa::@10
  to:utoa::@12
utoa::@12: scope:[utoa]  from utoa::@7
  [314] if((word) utoa::value#3>=(word) utoa::digit_value#0) goto utoa::@10
  to:utoa::@9
utoa::@9: scope:[utoa]  from utoa::@11 utoa::@12
  [315] (byte*) utoa::buffer#15 ← phi( utoa::@12/(byte*) utoa::buffer#10 utoa::@11/(byte*) utoa::buffer#4 )
  [315] (byte) utoa::started#4 ← phi( utoa::@12/(byte) utoa::started#2 utoa::@11/(byte) 1 )
  [315] (word) utoa::value#7 ← phi( utoa::@12/(word) utoa::value#3 utoa::@11/(word) utoa::value#0 )
  [316] (byte) utoa::digit#1 ← ++ (byte) utoa::digit#2
  to:utoa::@6
utoa::@10: scope:[utoa]  from utoa::@12 utoa::@7
  [317] (byte*) utoa_append::buffer#0 ← (byte*) utoa::buffer#10
  [318] (word) utoa_append::value#0 ← (word) utoa::value#3
  [319] (word) utoa_append::sub#0 ← (word) utoa::digit_value#0
  [320] call utoa_append 
  [321] (word) utoa_append::return#0 ← (word) utoa_append::value#2
  to:utoa::@11
utoa::@11: scope:[utoa]  from utoa::@10
  [322] (word) utoa::value#0 ← (word) utoa_append::return#0
  [323] (byte*) utoa::buffer#4 ← ++ (byte*) utoa::buffer#10
  to:utoa::@9

(word()) utoa_append((byte*) utoa_append::buffer , (word) utoa_append::value , (word) utoa_append::sub)
utoa_append: scope:[utoa_append]  from utoa::@10
  [324] phi()
  to:utoa_append::@1
utoa_append::@1: scope:[utoa_append]  from utoa_append utoa_append::@2
  [325] (byte) utoa_append::digit#2 ← phi( utoa_append/(byte) 0 utoa_append::@2/(byte) utoa_append::digit#1 )
  [325] (word) utoa_append::value#2 ← phi( utoa_append/(word) utoa_append::value#0 utoa_append::@2/(word) utoa_append::value#1 )
  [326] if((word) utoa_append::value#2>=(word) utoa_append::sub#0) goto utoa_append::@2
  to:utoa_append::@3
utoa_append::@3: scope:[utoa_append]  from utoa_append::@1
  [327] *((byte*) utoa_append::buffer#0) ← *((const byte*) DIGITS + (byte) utoa_append::digit#2)
  to:utoa_append::@return
utoa_append::@return: scope:[utoa_append]  from utoa_append::@3
  [328] return 
  to:@return
utoa_append::@2: scope:[utoa_append]  from utoa_append::@1
  [329] (byte) utoa_append::digit#1 ← ++ (byte) utoa_append::digit#2
  [330] (word) utoa_append::value#1 ← (word) utoa_append::value#2 - (word) utoa_append::sub#0
  to:utoa_append::@1

(void()) printf_sint((signed word) printf_sint::value , (byte) printf_sint::format_min_length , (byte) printf_sint::format_justify_left , (byte) printf_sint::format_sign_always , (byte) printf_sint::format_zero_padding , (byte) printf_sint::format_radix)
printf_sint: scope:[printf_sint]  from main::@26 main::@28 main::@30 main::@32 main::@37 main::@39 main::@41 main::@43 main::@48 main::@50 main::@52 main::@54 main::@59 main::@61 main::@63 main::@65
  [331] (byte) printf_sint::format_zero_padding#16 ← phi( main::@26/(byte) 0 main::@28/(byte) 0 main::@30/(byte) 0 main::@32/(byte) 0 main::@37/(byte) 0 main::@39/(byte) 0 main::@41/(byte) 0 main::@43/(byte) 0 main::@48/(byte) 0 main::@50/(byte) 0 main::@52/(byte) 0 main::@54/(byte) 0 main::@59/(byte) 1 main::@61/(byte) 1 main::@63/(byte) 1 main::@65/(byte) 0 )
  [331] (byte) printf_sint::format_justify_left#16 ← phi( main::@26/(byte) 0 main::@28/(byte) 0 main::@30/(byte) 0 main::@32/(byte) 0 main::@37/(byte) 1 main::@39/(byte) 1 main::@41/(byte) 1 main::@43/(byte) 1 main::@48/(byte) 0 main::@50/(byte) 0 main::@52/(byte) 0 main::@54/(byte) 0 main::@59/(byte) 0 main::@61/(byte) 0 main::@63/(byte) 0 main::@65/(byte) 0 )
  [331] (byte) printf_sint::format_sign_always#16 ← phi( main::@26/(byte) 0 main::@28/(byte) 0 main::@30/(byte) 0 main::@32/(byte) 0 main::@37/(byte) 0 main::@39/(byte) 0 main::@41/(byte) 0 main::@43/(byte) 0 main::@48/(byte) 1 main::@50/(byte) 1 main::@52/(byte) 1 main::@54/(byte) 1 main::@59/(byte) 0 main::@61/(byte) 0 main::@63/(byte) 0 main::@65/(byte) 0 )
  [331] (signed word) printf_sint::value#17 ← phi( main::@26/(signed byte) 1 main::@28/(signed byte) $b main::@30/(signed byte) $6f main::@32/(signed word) $457 main::@37/(signed byte) -2 main::@39/(signed byte) -$16 main::@41/(signed word) -$de main::@43/(signed word) -$8ae main::@48/(signed byte) 3 main::@50/(signed byte) -$2c main::@52/(signed word) $22b main::@54/(signed word) -$1a0a main::@59/(signed byte) 1 main::@61/(signed byte) $b main::@63/(signed byte) $6f main::@65/(signed word) $457 )
  [332] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) 0
  [333] if((signed word) printf_sint::value#17<(signed byte) 0) goto printf_sint::@1
  to:printf_sint::@3
printf_sint::@3: scope:[printf_sint]  from printf_sint
  [334] if((byte) 0==(byte) printf_sint::format_sign_always#16) goto printf_sint::@2
  to:printf_sint::@4
printf_sint::@4: scope:[printf_sint]  from printf_sint::@3
  [335] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) '+'
  to:printf_sint::@2
printf_sint::@2: scope:[printf_sint]  from printf_sint::@1 printf_sint::@3 printf_sint::@4
  [336] (signed word) printf_sint::value#19 ← phi( printf_sint::@1/(signed word) printf_sint::value#0 printf_sint::@3/(signed word) printf_sint::value#17 printf_sint::@4/(signed word) printf_sint::value#17 )
  [337] (word) utoa::value#1 ← (word)(signed word) printf_sint::value#19
  [338] call utoa 
  to:printf_sint::@5
printf_sint::@5: scope:[printf_sint]  from printf_sint::@2
  [339] (byte) printf_number_buffer::buffer_sign#0 ← *((byte*)&(struct printf_buffer_number) printf_buffer)
  [340] (byte) printf_number_buffer::format_justify_left#0 ← (byte) printf_sint::format_justify_left#16
  [341] (byte) printf_number_buffer::format_zero_padding#0 ← (byte) printf_sint::format_zero_padding#16
  [342] call printf_number_buffer 
  to:printf_sint::@return
printf_sint::@return: scope:[printf_sint]  from printf_sint::@5
  [343] return 
  to:@return
printf_sint::@1: scope:[printf_sint]  from printf_sint
  [344] (signed word) printf_sint::value#0 ← - (signed word) printf_sint::value#17
  [345] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) '-'
  to:printf_sint::@2

(void()) printf_string((byte*) printf_string::str , (byte) printf_string::format_min_length , (byte) printf_string::format_justify_left)
printf_string: scope:[printf_string]  from main::@10 main::@15 main::@17 main::@19 main::@21 main::@4 main::@6 main::@8
  [346] (byte*) printf_string::str#10 ← phi( main::@10/(const byte*) main::str8 main::@15/(const byte*) main::str2 main::@17/(const byte*) main::str4 main::@19/(const byte*) main::str6 main::@21/(const byte*) main::str8 main::@4/(const byte*) main::str2 main::@6/(const byte*) main::str4 main::@8/(const byte*) main::str6 )
  [346] (byte) printf_string::format_justify_left#10 ← phi( main::@10/(byte) 0 main::@15/(byte) 1 main::@17/(byte) 1 main::@19/(byte) 1 main::@21/(byte) 1 main::@4/(byte) 0 main::@6/(byte) 0 main::@8/(byte) 0 )
  to:printf_string::@3
printf_string::@3: scope:[printf_string]  from printf_string
  [347] (byte*) strlen::str#2 ← (byte*) printf_string::str#10
  [348] call strlen 
  [349] (word) strlen::return#3 ← (word) strlen::len#2
  to:printf_string::@6
printf_string::@6: scope:[printf_string]  from printf_string::@3
  [350] (word~) printf_string::$9 ← (word) strlen::return#3
  [351] (signed byte) printf_string::len#0 ← (signed byte)(word~) printf_string::$9
  [352] (signed byte) printf_string::padding#1 ← (signed byte) 3 - (signed byte) printf_string::len#0
  [353] if((signed byte) printf_string::padding#1>=(signed byte) 0) goto printf_string::@10
  to:printf_string::@1
printf_string::@10: scope:[printf_string]  from printf_string::@6
  [354] phi()
  to:printf_string::@1
printf_string::@1: scope:[printf_string]  from printf_string::@10 printf_string::@6
  [355] (signed byte) printf_string::padding#3 ← phi( printf_string::@6/(signed byte) 0 printf_string::@10/(signed byte) printf_string::padding#1 )
  [356] if((byte) 0!=(byte) printf_string::format_justify_left#10) goto printf_string::@2
  to:printf_string::@8
printf_string::@8: scope:[printf_string]  from printf_string::@1
  [357] if((signed byte) 0!=(signed byte) printf_string::padding#3) goto printf_string::@4
  to:printf_string::@2
printf_string::@4: scope:[printf_string]  from printf_string::@8
  [358] (byte) printf_padding::length#3 ← (byte)(signed byte) printf_string::padding#3
  [359] call printf_padding 
  to:printf_string::@2
printf_string::@2: scope:[printf_string]  from printf_string::@1 printf_string::@4 printf_string::@8
  [360] (byte*) printf_str::str#2 ← (byte*) printf_string::str#10
  [361] call printf_str 
  to:printf_string::@7
printf_string::@7: scope:[printf_string]  from printf_string::@2
  [362] if((byte) 0==(byte) printf_string::format_justify_left#10) goto printf_string::@return
  to:printf_string::@9
printf_string::@9: scope:[printf_string]  from printf_string::@7
  [363] if((signed byte) 0!=(signed byte) printf_string::padding#3) goto printf_string::@5
  to:printf_string::@return
printf_string::@5: scope:[printf_string]  from printf_string::@9
  [364] (byte) printf_padding::length#4 ← (byte)(signed byte) printf_string::padding#3
  [365] call printf_padding 
  to:printf_string::@return
printf_string::@return: scope:[printf_string]  from printf_string::@5 printf_string::@7 printf_string::@9
  [366] return 
  to:@return

(void()) printf_cls()
printf_cls: scope:[printf_cls]  from main
  [367] phi()
  [368] call memset 
  to:printf_cls::@1
printf_cls::@1: scope:[printf_cls]  from printf_cls
  [369] (byte*) printf_cursor_ptr ← (byte*) 1024
  [370] (byte) printf_cursor_x ← (byte) 0
  [371] (byte) printf_cursor_y ← (byte) 0
  to:printf_cls::@return
printf_cls::@return: scope:[printf_cls]  from printf_cls::@1
  [372] return 
  to:@return
