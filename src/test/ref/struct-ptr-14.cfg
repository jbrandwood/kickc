@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()
main: scope:[main]  from @1
  [4] (byte) main::p_x#0 ← (byte) 2
  [5] (byte) main::p_y#0 ← (byte) 3
  [6] call set 
  to:main::@1
main::@1: scope:[main]  from main
  [7] *((const byte*) main::SCREEN#0) ← *((byte*)(const struct Point*) main::q#0)
  [8] *((const byte*) main::SCREEN#0+(byte) 1) ← *((byte*)(const struct Point*) main::q#0+(const byte) OFFSET_STRUCT_POINT_Y)
  to:main::@return
main::@return: scope:[main]  from main::@1
  [9] return 
  to:@return
set: scope:[set]  from main
  [10] *((byte*)(const struct Point*) main::q#0) ← (byte) 4
  [11] *((byte*)(const struct Point*) main::q#0+(const byte) OFFSET_STRUCT_POINT_Y) ← (byte) 5
  to:set::@return
set::@return: scope:[set]  from set
  [12] return 
  to:@return
