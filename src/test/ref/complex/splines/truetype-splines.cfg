
void main()
main: scope:[main]  from
  [0] phi()
  [1] call mulf_init 
  to:main::@8
main::@8: scope:[main]  from main
  [2] phi()
  [3] call bitmap_init 
  to:main::@9
main::@9: scope:[main]  from main::@8
  [4] phi()
  [5] call bitmap_clear 
  to:main::vicSelectGfxBank1
main::vicSelectGfxBank1: scope:[main]  from main::@9
  [6] *((byte*)CIA2+OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR) = 3
  to:main::vicSelectGfxBank1_toDd001
main::vicSelectGfxBank1_toDd001: scope:[main]  from main::vicSelectGfxBank1
  [7] phi()
  to:main::vicSelectGfxBank1_@1
main::vicSelectGfxBank1_@1: scope:[main]  from main::vicSelectGfxBank1_toDd001
  [8] *((byte*)CIA2) = main::vicSelectGfxBank1_toDd001_return#0
  to:main::toD0181
main::toD0181: scope:[main]  from main::vicSelectGfxBank1_@1
  [9] phi()
  to:main::@7
main::@7: scope:[main]  from main::toD0181
  [10] *D018 = main::toD0181_return#0
  [11] *D011 = VICII_BMM|VICII_DEN|VICII_RSEL|3
  to:main::@1
main::@1: scope:[main]  from main::@6 main::@7
  [12] main::angle#2 = phi( main::@7/0, main::@6/main::angle#1 )
  to:main::@2
main::@2: scope:[main]  from main::@1
  [13] phi()
  [14] call bitmap_clear 
  to:main::@10
main::@10: scope:[main]  from main::@2
  [15] show_letter::angle#0 = main::angle#2
  [16] call show_letter 
  to:main::@3
main::@3: scope:[main]  from main::@10 main::@3 main::@5
  [17] main::w#4 = phi( main::@10/0, main::@3/main::w#4, main::@5/main::w#1 )
  [18] if(*RASTER!=$fe) goto main::@3
  to:main::@4
main::@4: scope:[main]  from main::@3 main::@4
  [19] if(*RASTER!=$ff) goto main::@4
  to:main::@5
main::@5: scope:[main]  from main::@4
  [20] main::w#1 = ++ main::w#4
  [21] if(main::w#1!=$3d) goto main::@3
  to:main::@6
main::@6: scope:[main]  from main::@5
  [22] main::angle#1 = main::angle#2 + 9
  to:main::@1

void mulf_init()
mulf_init: scope:[mulf_init]  from main
  [23] phi()
  to:mulf_init::@1
mulf_init::@1: scope:[mulf_init]  from mulf_init mulf_init::@3
  [24] mulf_init::x_2#3 = phi( mulf_init/0, mulf_init::@3/mulf_init::x_2#2 )
  [24] mulf_init::sqr1_hi#2 = phi( mulf_init/mulf_sqr1_hi+1, mulf_init::@3/mulf_init::sqr1_hi#1 )
  [24] mulf_init::sqr#4 = phi( mulf_init/0, mulf_init::@3/mulf_init::sqr#1 )
  [24] mulf_init::c#2 = phi( mulf_init/0, mulf_init::@3/mulf_init::c#1 )
  [24] mulf_init::sqr1_lo#2 = phi( mulf_init/mulf_sqr1_lo+1, mulf_init::@3/mulf_init::sqr1_lo#1 )
  [25] if(mulf_init::sqr1_lo#2!=mulf_sqr1_lo+$200) goto mulf_init::@2
  to:mulf_init::@5
mulf_init::@5: scope:[mulf_init]  from mulf_init::@1 mulf_init::@8
  [26] mulf_init::dir#2 = phi( mulf_init::@1/$ff, mulf_init::@8/mulf_init::dir#4 )
  [26] mulf_init::sqr2_hi#2 = phi( mulf_init::@1/mulf_sqr2_hi, mulf_init::@8/mulf_init::sqr2_hi#1 )
  [26] mulf_init::x_255#2 = phi( mulf_init::@1/-1, mulf_init::@8/mulf_init::x_255#1 )
  [26] mulf_init::sqr2_lo#2 = phi( mulf_init::@1/mulf_sqr2_lo, mulf_init::@8/mulf_init::sqr2_lo#1 )
  [27] if(mulf_init::sqr2_lo#2!=mulf_sqr2_lo+$1ff) goto mulf_init::@6
  to:mulf_init::@7
mulf_init::@7: scope:[mulf_init]  from mulf_init::@5
  [28] *(mulf_sqr2_lo+$1ff) = *(mulf_sqr1_lo+$100)
  [29] *(mulf_sqr2_hi+$1ff) = *(mulf_sqr1_hi+$100)
  to:mulf_init::@return
mulf_init::@return: scope:[mulf_init]  from mulf_init::@7
  [30] return 
  to:@return
mulf_init::@6: scope:[mulf_init]  from mulf_init::@5
  [31] *mulf_init::sqr2_lo#2 = mulf_sqr1_lo[mulf_init::x_255#2]
  [32] *mulf_init::sqr2_hi#2 = mulf_sqr1_hi[mulf_init::x_255#2]
  [33] mulf_init::sqr2_hi#1 = ++ mulf_init::sqr2_hi#2
  [34] mulf_init::x_255#1 = mulf_init::x_255#2 + mulf_init::dir#2
  [35] if(mulf_init::x_255#1!=0) goto mulf_init::@9
  to:mulf_init::@8
mulf_init::@9: scope:[mulf_init]  from mulf_init::@6
  [36] phi()
  to:mulf_init::@8
mulf_init::@8: scope:[mulf_init]  from mulf_init::@6 mulf_init::@9
  [37] mulf_init::dir#4 = phi( mulf_init::@6/1, mulf_init::@9/mulf_init::dir#2 )
  [38] mulf_init::sqr2_lo#1 = ++ mulf_init::sqr2_lo#2
  to:mulf_init::@5
mulf_init::@2: scope:[mulf_init]  from mulf_init::@1
  [39] mulf_init::c#1 = ++ mulf_init::c#2
  [40] mulf_init::$1 = mulf_init::c#1 & 1
  [41] if(mulf_init::$1!=0) goto mulf_init::@3
  to:mulf_init::@4
mulf_init::@4: scope:[mulf_init]  from mulf_init::@2
  [42] mulf_init::x_2#1 = ++ mulf_init::x_2#3
  [43] mulf_init::sqr#2 = ++ mulf_init::sqr#4
  to:mulf_init::@3
mulf_init::@3: scope:[mulf_init]  from mulf_init::@2 mulf_init::@4
  [44] mulf_init::x_2#2 = phi( mulf_init::@2/mulf_init::x_2#3, mulf_init::@4/mulf_init::x_2#1 )
  [44] mulf_init::sqr#3 = phi( mulf_init::@2/mulf_init::sqr#4, mulf_init::@4/mulf_init::sqr#2 )
  [45] mulf_init::$4 = < mulf_init::sqr#3
  [46] *mulf_init::sqr1_lo#2 = mulf_init::$4
  [47] mulf_init::$5 = > mulf_init::sqr#3
  [48] *mulf_init::sqr1_hi#2 = mulf_init::$5
  [49] mulf_init::sqr1_hi#1 = ++ mulf_init::sqr1_hi#2
  [50] mulf_init::sqr#1 = mulf_init::sqr#3 + mulf_init::x_2#2
  [51] mulf_init::sqr1_lo#1 = ++ mulf_init::sqr1_lo#2
  to:mulf_init::@1

void bitmap_init(byte* bitmap_init::gfx , byte* bitmap_init::screen)
bitmap_init: scope:[bitmap_init]  from main::@8
  [52] phi()
  to:bitmap_init::@1
bitmap_init::@1: scope:[bitmap_init]  from bitmap_init bitmap_init::@2
  [53] bitmap_init::x#2 = phi( bitmap_init/0, bitmap_init::@2/bitmap_init::x#1 )
  [53] bitmap_init::bits#3 = phi( bitmap_init/$80, bitmap_init::@2/bitmap_init::bits#4 )
  [54] bitmap_plot_bit[bitmap_init::x#2] = bitmap_init::bits#3
  [55] bitmap_init::bits#1 = bitmap_init::bits#3 >> 1
  [56] if(bitmap_init::bits#1!=0) goto bitmap_init::@6
  to:bitmap_init::@2
bitmap_init::@6: scope:[bitmap_init]  from bitmap_init::@1
  [57] phi()
  to:bitmap_init::@2
bitmap_init::@2: scope:[bitmap_init]  from bitmap_init::@1 bitmap_init::@6
  [58] bitmap_init::bits#4 = phi( bitmap_init::@6/bitmap_init::bits#1, bitmap_init::@1/$80 )
  [59] bitmap_init::x#1 = ++ bitmap_init::x#2
  [60] if(bitmap_init::x#1!=0) goto bitmap_init::@1
  to:bitmap_init::@3
bitmap_init::@3: scope:[bitmap_init]  from bitmap_init::@2 bitmap_init::@4
  [61] bitmap_init::yoffs#2 = phi( bitmap_init::@2/BITMAP_GRAPHICS, bitmap_init::@4/bitmap_init::yoffs#4 )
  [61] bitmap_init::y#2 = phi( bitmap_init::@2/0, bitmap_init::@4/bitmap_init::y#1 )
  [62] bitmap_init::$7 = bitmap_init::y#2 & 7
  [63] bitmap_init::$4 = < bitmap_init::yoffs#2
  [64] bitmap_init::$5 = bitmap_init::$7 | bitmap_init::$4
  [65] bitmap_plot_ylo[bitmap_init::y#2] = bitmap_init::$5
  [66] bitmap_init::$6 = > bitmap_init::yoffs#2
  [67] bitmap_plot_yhi[bitmap_init::y#2] = bitmap_init::$6
  [68] if(bitmap_init::$7!=7) goto bitmap_init::@4
  to:bitmap_init::@5
bitmap_init::@5: scope:[bitmap_init]  from bitmap_init::@3
  [69] bitmap_init::yoffs#1 = bitmap_init::yoffs#2 + (word)$28*8
  to:bitmap_init::@4
bitmap_init::@4: scope:[bitmap_init]  from bitmap_init::@3 bitmap_init::@5
  [70] bitmap_init::yoffs#4 = phi( bitmap_init::@3/bitmap_init::yoffs#2, bitmap_init::@5/bitmap_init::yoffs#1 )
  [71] bitmap_init::y#1 = ++ bitmap_init::y#2
  [72] if(bitmap_init::y#1!=0) goto bitmap_init::@3
  to:bitmap_init::@return
bitmap_init::@return: scope:[bitmap_init]  from bitmap_init::@4
  [73] return 
  to:@return

void bitmap_clear(byte bitmap_clear::bgcol , byte bitmap_clear::fgcol)
bitmap_clear: scope:[bitmap_clear]  from main::@2 main::@9
  [74] phi()
  [75] call memset 
  to:bitmap_clear::@1
bitmap_clear::@1: scope:[bitmap_clear]  from bitmap_clear
  [76] phi()
  [77] call memset 
  to:bitmap_clear::@return
bitmap_clear::@return: scope:[bitmap_clear]  from bitmap_clear::@1
  [78] return 
  to:@return

void show_letter(byte show_letter::angle)
show_letter: scope:[show_letter]  from main::@10
  [79] phi()
  to:show_letter::@1
show_letter::@1: scope:[show_letter]  from show_letter show_letter::@9
  [80] show_letter::current_y#4 = phi( show_letter/0, show_letter::@9/show_letter::current_y#11 )
  [80] show_letter::current_x#4 = phi( show_letter/0, show_letter::@9/show_letter::current_x#11 )
  [80] show_letter::i#10 = phi( show_letter/0, show_letter::@9/show_letter::i#1 )
  [81] show_letter::$21 = show_letter::i#10 << 3
  [82] show_letter::$17 = show_letter::$21 + show_letter::i#10
  [83] show_letter::to_x#0 = ((signed word*)(struct SplineVector16*)letter_c+OFFSET_STRUCT_SEGMENT_TO)[show_letter::$17]
  [84] show_letter::to_y#0 = ((signed word*)(struct SplineVector16*)letter_c+OFFSET_STRUCT_SEGMENT_TO+OFFSET_STRUCT_SPLINEVECTOR16_Y)[show_letter::$17]
  [85] show_letter::to_x#1 = show_letter::to_x#0 - $32
  [86] show_letter::to_y#1 = show_letter::to_y#0 - $96
  [87] rotate::vector_x#0 = show_letter::to_x#1
  [88] rotate::vector_y#0 = show_letter::to_y#1
  [89] rotate::angle#0 = show_letter::angle#0
  [90] call rotate 
  [91] rotate::return_x#0 = rotate::return_x#2
  [92] rotate::return_y#0 = rotate::return_y#2
  to:show_letter::@6
show_letter::@6: scope:[show_letter]  from show_letter::@1
  [93] show_letter::to_x#2 = rotate::return_x#0
  [94] show_letter::to_y#2 = rotate::return_y#0
  [95] show_letter::current_x#10 = show_letter::to_x#2 + $64
  [96] show_letter::current_y#10 = show_letter::to_y#2 + $64
  [97] show_letter::via_x#0 = ((signed word*)(struct SplineVector16*)letter_c+OFFSET_STRUCT_SEGMENT_VIA)[show_letter::$17]
  [98] show_letter::via_y#0 = ((signed word*)(struct SplineVector16*)letter_c+OFFSET_STRUCT_SEGMENT_VIA+OFFSET_STRUCT_SPLINEVECTOR16_Y)[show_letter::$17]
  [99] show_letter::via_x#1 = show_letter::via_x#0 - $32
  [100] show_letter::via_y#1 = show_letter::via_y#0 - $96
  [101] rotate::vector_x#1 = show_letter::via_x#1
  [102] rotate::vector_y#1 = show_letter::via_y#1
  [103] rotate::angle#1 = show_letter::angle#0
  [104] call rotate 
  [105] rotate::return_x#1 = rotate::return_x#2
  [106] rotate::return_y#1 = rotate::return_y#2
  to:show_letter::@7
show_letter::@7: scope:[show_letter]  from show_letter::@6
  [107] show_letter::via_x#2 = rotate::return_x#1
  [108] show_letter::via_y#2 = rotate::return_y#1
  [109] show_letter::segment_via_x#0 = show_letter::via_x#2 + $64
  [110] show_letter::segment_via_y#0 = show_letter::via_y#2 + $64
  [111] show_letter::segment_type#0 = ((byte*)letter_c)[show_letter::$17]
  [112] if(show_letter::segment_type#0==MOVE_TO) goto show_letter::@3
  to:show_letter::@4
show_letter::@4: scope:[show_letter]  from show_letter::@7
  [113] if(show_letter::segment_type#0==SPLINE_TO) goto show_letter::@2
  to:show_letter::@5
show_letter::@5: scope:[show_letter]  from show_letter::@4
  [114] bitmap_line::x1#0 = (word)show_letter::current_x#4
  [115] bitmap_line::y1#0 = (word)show_letter::current_y#4
  [116] bitmap_line::x2#0 = (word)show_letter::current_x#10
  [117] bitmap_line::y2#0 = (word)show_letter::current_y#10
  [118] call bitmap_line 
  to:show_letter::@3
show_letter::@3: scope:[show_letter]  from show_letter::@5 show_letter::@7 show_letter::@8
  [119] show_letter::i#1 = ++ show_letter::i#10
  [120] if(show_letter::i#1!=$16) goto show_letter::@9
  to:show_letter::@return
show_letter::@return: scope:[show_letter]  from show_letter::@3
  [121] return 
  to:@return
show_letter::@9: scope:[show_letter]  from show_letter::@3
  [122] show_letter::current_x#11 = show_letter::current_x#10
  [123] show_letter::current_y#11 = show_letter::current_y#10
  to:show_letter::@1
show_letter::@2: scope:[show_letter]  from show_letter::@4
  [124] spline_8segB::p0_x#0 = show_letter::current_x#4
  [125] spline_8segB::p0_y#0 = show_letter::current_y#4
  [126] spline_8segB::p1_x#0 = show_letter::segment_via_x#0
  [127] spline_8segB::p1_y#0 = show_letter::segment_via_y#0
  [128] spline_8segB::p2_x#0 = show_letter::current_x#10
  [129] spline_8segB::p2_y#0 = show_letter::current_y#10
  [130] call spline_8segB 
  to:show_letter::@8
show_letter::@8: scope:[show_letter]  from show_letter::@2
  [131] phi()
  [132] call bitmap_plot_spline_8seg 
  to:show_letter::@3

void* memset(void* memset::str , byte memset::c , word memset::num)
memset: scope:[memset]  from bitmap_clear bitmap_clear::@1
  [133] memset::c#4 = phi( bitmap_clear/bitmap_clear::col#0, bitmap_clear::@1/0 )
  [133] memset::str#3 = phi( bitmap_clear/(void*)BITMAP_SCREEN, bitmap_clear::@1/(void*)BITMAP_GRAPHICS )
  [133] memset::num#2 = phi( bitmap_clear/$3e8, bitmap_clear::@1/$1f40 )
  [134] if(memset::num#2<=0) goto memset::@return
  to:memset::@1
memset::@1: scope:[memset]  from memset
  [135] memset::end#0 = (byte*)memset::str#3 + memset::num#2
  [136] memset::dst#4 = (byte*)memset::str#3
  to:memset::@2
memset::@2: scope:[memset]  from memset::@1 memset::@3
  [137] memset::dst#2 = phi( memset::@1/memset::dst#4, memset::@3/memset::dst#1 )
  [138] if(memset::dst#2!=memset::end#0) goto memset::@3
  to:memset::@return
memset::@return: scope:[memset]  from memset memset::@2
  [139] return 
  to:@return
memset::@3: scope:[memset]  from memset::@2
  [140] *memset::dst#2 = memset::c#4
  [141] memset::dst#1 = ++ memset::dst#2
  to:memset::@2

struct SplineVector16 rotate(signed word rotate::vector_x , signed word rotate::vector_y , byte rotate::angle)
rotate: scope:[rotate]  from show_letter::@1 show_letter::@6
  [142] rotate::vector_y#2 = phi( show_letter::@1/rotate::vector_y#0, show_letter::@6/rotate::vector_y#1 )
  [142] rotate::vector_x#2 = phi( show_letter::@1/rotate::vector_x#0, show_letter::@6/rotate::vector_x#1 )
  [142] rotate::angle#2 = phi( show_letter::@1/rotate::angle#0, show_letter::@6/rotate::angle#1 )
  [143] rotate::cos_a#0 = (signed word)COS[rotate::angle#2]
  [144] mulf16s::a#0 = rotate::cos_a#0
  [145] mulf16s::b#0 = rotate::vector_x#2
  [146] call mulf16s 
  [147] mulf16s::return#2 = mulf16s::return#0
  to:rotate::@1
rotate::@1: scope:[rotate]  from rotate
  [148] rotate::$0 = mulf16s::return#2
  [149] rotate::$10 = (signed word)rotate::$0
  [150] rotate::xr#0 = rotate::$10 << 1
  [151] mulf16s::a#1 = rotate::cos_a#0
  [152] mulf16s::b#1 = rotate::vector_y#2
  [153] call mulf16s 
  [154] mulf16s::return#3 = mulf16s::return#0
  to:rotate::@2
rotate::@2: scope:[rotate]  from rotate::@1
  [155] rotate::$2 = mulf16s::return#3
  [156] rotate::$11 = (signed word)rotate::$2
  [157] rotate::yr#0 = rotate::$11 << 1
  [158] rotate::sin_a#0 = (signed word)SIN[rotate::angle#2]
  [159] mulf16s::a#2 = rotate::sin_a#0
  [160] mulf16s::b#2 = rotate::vector_y#2
  [161] call mulf16s 
  [162] mulf16s::return#4 = mulf16s::return#0
  to:rotate::@3
rotate::@3: scope:[rotate]  from rotate::@2
  [163] rotate::$4 = mulf16s::return#4
  [164] rotate::$12 = (signed word)rotate::$4
  [165] rotate::$5 = rotate::$12 << 1
  [166] rotate::xr#1 = rotate::xr#0 - rotate::$5
  [167] mulf16s::a#3 = rotate::sin_a#0
  [168] mulf16s::b#3 = rotate::vector_x#2
  [169] call mulf16s 
  [170] mulf16s::return#10 = mulf16s::return#0
  to:rotate::@4
rotate::@4: scope:[rotate]  from rotate::@3
  [171] rotate::$6 = mulf16s::return#10
  [172] rotate::$13 = (signed word)rotate::$6
  [173] rotate::$7 = rotate::$13 << 1
  [174] rotate::yr#1 = rotate::yr#0 + rotate::$7
  [175] rotate::$8 = > rotate::xr#1
  [176] rotate::$9 = > rotate::yr#1
  [177] rotate::return_x#2 = (signed word)(signed byte)rotate::$8
  [178] rotate::return_y#2 = (signed word)(signed byte)rotate::$9
  to:rotate::@return
rotate::@return: scope:[rotate]  from rotate::@4
  [179] return 
  to:@return

void bitmap_line(word bitmap_line::x1 , word bitmap_line::y1 , word bitmap_line::x2 , word bitmap_line::y2)
bitmap_line: scope:[bitmap_line]  from bitmap_plot_spline_8seg::@1 show_letter::@5
  [180] bitmap_line::y2#11 = phi( bitmap_plot_spline_8seg::@1/bitmap_line::y2#13, show_letter::@5/bitmap_line::y2#0 )
  [180] bitmap_line::x2#10 = phi( bitmap_plot_spline_8seg::@1/bitmap_line::x2#13, show_letter::@5/bitmap_line::x2#0 )
  [180] bitmap_line::y#0 = phi( bitmap_plot_spline_8seg::@1/bitmap_line::y1#1, show_letter::@5/bitmap_line::y1#0 )
  [180] bitmap_line::x#0 = phi( bitmap_plot_spline_8seg::@1/bitmap_line::x1#1, show_letter::@5/bitmap_line::x1#0 )
  [181] abs_u16::w#0 = bitmap_line::x2#10 - bitmap_line::x#0
  [182] call abs_u16 
  [183] abs_u16::return#0 = abs_u16::return#4
  to:bitmap_line::@12
bitmap_line::@12: scope:[bitmap_line]  from bitmap_line
  [184] bitmap_line::dx#0 = abs_u16::return#0
  [185] abs_u16::w#1 = bitmap_line::y2#11 - bitmap_line::y#0
  [186] call abs_u16 
  [187] abs_u16::return#1 = abs_u16::return#4
  to:bitmap_line::@13
bitmap_line::@13: scope:[bitmap_line]  from bitmap_line::@12
  [188] bitmap_line::dy#0 = abs_u16::return#1
  [189] if(bitmap_line::dx#0!=0) goto bitmap_line::@1
  to:bitmap_line::@18
bitmap_line::@18: scope:[bitmap_line]  from bitmap_line::@13
  [190] if(bitmap_line::dy#0==0) goto bitmap_line::@4
  to:bitmap_line::@1
bitmap_line::@1: scope:[bitmap_line]  from bitmap_line::@13 bitmap_line::@18
  [191] sgn_u16::w#0 = bitmap_line::x2#10 - bitmap_line::x#0
  [192] call sgn_u16 
  [193] sgn_u16::return#0 = sgn_u16::return#4
  to:bitmap_line::@14
bitmap_line::@14: scope:[bitmap_line]  from bitmap_line::@1
  [194] bitmap_line::sx#0 = sgn_u16::return#0
  [195] sgn_u16::w#1 = bitmap_line::y2#11 - bitmap_line::y#0
  [196] call sgn_u16 
  [197] sgn_u16::return#1 = sgn_u16::return#4
  to:bitmap_line::@15
bitmap_line::@15: scope:[bitmap_line]  from bitmap_line::@14
  [198] bitmap_line::sy#0 = sgn_u16::return#1
  [199] if(bitmap_line::dx#0>bitmap_line::dy#0) goto bitmap_line::@2
  to:bitmap_line::@5
bitmap_line::@5: scope:[bitmap_line]  from bitmap_line::@15
  [200] bitmap_line::e#0 = bitmap_line::dx#0 >> 1
  to:bitmap_line::@6
bitmap_line::@6: scope:[bitmap_line]  from bitmap_line::@5 bitmap_line::@7
  [201] bitmap_line::e#3 = phi( bitmap_line::@5/bitmap_line::e#0, bitmap_line::@7/bitmap_line::e#6 )
  [201] bitmap_line::y#4 = phi( bitmap_line::@5/bitmap_line::y#0, bitmap_line::@7/bitmap_line::y#1 )
  [201] bitmap_line::x#13 = phi( bitmap_line::@5/bitmap_line::x#0, bitmap_line::@7/bitmap_line::x#12 )
  [202] bitmap_plot::x#1 = bitmap_line::x#13
  [203] bitmap_plot::y#1 = (byte)bitmap_line::y#4
  [204] call bitmap_plot 
  to:bitmap_line::@16
bitmap_line::@16: scope:[bitmap_line]  from bitmap_line::@6
  [205] bitmap_line::y#1 = bitmap_line::y#4 + bitmap_line::sy#0
  [206] bitmap_line::e#1 = bitmap_line::e#3 + bitmap_line::dx#0
  [207] if(bitmap_line::dy#0>=bitmap_line::e#1) goto bitmap_line::@7
  to:bitmap_line::@8
bitmap_line::@8: scope:[bitmap_line]  from bitmap_line::@16
  [208] bitmap_line::x#1 = bitmap_line::x#13 + bitmap_line::sx#0
  [209] bitmap_line::e#2 = bitmap_line::e#1 - bitmap_line::dy#0
  to:bitmap_line::@7
bitmap_line::@7: scope:[bitmap_line]  from bitmap_line::@16 bitmap_line::@8
  [210] bitmap_line::e#6 = phi( bitmap_line::@16/bitmap_line::e#1, bitmap_line::@8/bitmap_line::e#2 )
  [210] bitmap_line::x#12 = phi( bitmap_line::@16/bitmap_line::x#13, bitmap_line::@8/bitmap_line::x#1 )
  [211] if(bitmap_line::y#1!=bitmap_line::y2#11) goto bitmap_line::@6
  to:bitmap_line::@3
bitmap_line::@3: scope:[bitmap_line]  from bitmap_line::@10 bitmap_line::@7
  [212] bitmap_line::y#7 = phi( bitmap_line::@10/bitmap_line::y#13, bitmap_line::@7/bitmap_line::y#1 )
  [212] bitmap_line::x#6 = phi( bitmap_line::@10/bitmap_line::x#15, bitmap_line::@7/bitmap_line::x#12 )
  [213] bitmap_plot::x#2 = bitmap_line::x#6
  [214] bitmap_plot::y#2 = (byte)bitmap_line::y#7
  [215] call bitmap_plot 
  to:bitmap_line::@return
bitmap_line::@return: scope:[bitmap_line]  from bitmap_line::@3 bitmap_line::@4
  [216] return 
  to:@return
bitmap_line::@2: scope:[bitmap_line]  from bitmap_line::@15
  [217] bitmap_line::e1#0 = bitmap_line::dy#0 >> 1
  to:bitmap_line::@9
bitmap_line::@9: scope:[bitmap_line]  from bitmap_line::@10 bitmap_line::@2
  [218] bitmap_line::e1#3 = phi( bitmap_line::@10/bitmap_line::e1#6, bitmap_line::@2/bitmap_line::e1#0 )
  [218] bitmap_line::y#15 = phi( bitmap_line::@10/bitmap_line::y#13, bitmap_line::@2/bitmap_line::y#0 )
  [218] bitmap_line::x#7 = phi( bitmap_line::@10/bitmap_line::x#15, bitmap_line::@2/bitmap_line::x#0 )
  [219] bitmap_plot::x#3 = bitmap_line::x#7
  [220] bitmap_plot::y#3 = (byte)bitmap_line::y#15
  [221] call bitmap_plot 
  to:bitmap_line::@17
bitmap_line::@17: scope:[bitmap_line]  from bitmap_line::@9
  [222] bitmap_line::x#15 = bitmap_line::x#7 + bitmap_line::sx#0
  [223] bitmap_line::e1#1 = bitmap_line::e1#3 + bitmap_line::dy#0
  [224] if(bitmap_line::dx#0>=bitmap_line::e1#1) goto bitmap_line::@10
  to:bitmap_line::@11
bitmap_line::@11: scope:[bitmap_line]  from bitmap_line::@17
  [225] bitmap_line::y#2 = bitmap_line::y#15 + bitmap_line::sy#0
  [226] bitmap_line::e1#2 = bitmap_line::e1#1 - bitmap_line::dx#0
  to:bitmap_line::@10
bitmap_line::@10: scope:[bitmap_line]  from bitmap_line::@11 bitmap_line::@17
  [227] bitmap_line::e1#6 = phi( bitmap_line::@11/bitmap_line::e1#2, bitmap_line::@17/bitmap_line::e1#1 )
  [227] bitmap_line::y#13 = phi( bitmap_line::@11/bitmap_line::y#2, bitmap_line::@17/bitmap_line::y#15 )
  [228] if(bitmap_line::x#15!=bitmap_line::x2#10) goto bitmap_line::@9
  to:bitmap_line::@3
bitmap_line::@4: scope:[bitmap_line]  from bitmap_line::@18
  [229] bitmap_plot::x#0 = bitmap_line::x#0
  [230] bitmap_plot::y#0 = (byte)bitmap_line::y#0
  [231] call bitmap_plot 
  to:bitmap_line::@return

void spline_8segB(signed word spline_8segB::p0_x , signed word spline_8segB::p0_y , signed word spline_8segB::p1_x , signed word spline_8segB::p1_y , signed word spline_8segB::p2_x , signed word spline_8segB::p2_y)
spline_8segB: scope:[spline_8segB]  from show_letter::@2
  [232] spline_8segB::$0 = spline_8segB::p1_x#0 << 1
  [233] spline_8segB::$1 = spline_8segB::p2_x#0 - spline_8segB::$0
  [234] spline_8segB::a_x#0 = spline_8segB::$1 + spline_8segB::p0_x#0
  [235] spline_8segB::$3 = spline_8segB::p1_y#0 << 1
  [236] spline_8segB::$4 = spline_8segB::p2_y#0 - spline_8segB::$3
  [237] spline_8segB::a_y#0 = spline_8segB::$4 + spline_8segB::p0_y#0
  [238] spline_8segB::$6 = spline_8segB::p1_x#0 - spline_8segB::p0_x#0
  [239] spline_8segB::b_x#0 = spline_8segB::$6 << 1
  [240] spline_8segB::$8 = spline_8segB::p1_y#0 - spline_8segB::p0_y#0
  [241] spline_8segB::b_y#0 = spline_8segB::$8 << 1
  [242] spline_8segB::$10 = spline_8segB::b_x#0 << 3
  [243] spline_8segB::i_x#0 = spline_8segB::a_x#0 + spline_8segB::$10
  [244] spline_8segB::$12 = spline_8segB::b_y#0 << 3
  [245] spline_8segB::i_y#0 = spline_8segB::a_y#0 + spline_8segB::$12
  [246] spline_8segB::j_x#0 = spline_8segB::a_x#0 << 1
  [247] spline_8segB::j_y#0 = spline_8segB::a_y#0 << 1
  [248] spline_8segB::p_x#0 = spline_8segB::p0_x#0 << 6
  [249] spline_8segB::p_y#0 = spline_8segB::p0_y#0 << 6
  to:spline_8segB::@1
spline_8segB::@1: scope:[spline_8segB]  from spline_8segB spline_8segB::@1
  [250] spline_8segB::i_y#2 = phi( spline_8segB/spline_8segB::i_y#0, spline_8segB::@1/spline_8segB::i_y#1 )
  [250] spline_8segB::i_x#2 = phi( spline_8segB/spline_8segB::i_x#0, spline_8segB::@1/spline_8segB::i_x#1 )
  [250] spline_8segB::n#2 = phi( spline_8segB/0, spline_8segB::@1/spline_8segB::n#1 )
  [250] spline_8segB::p_y#2 = phi( spline_8segB/spline_8segB::p_y#0, spline_8segB::@1/spline_8segB::p_y#1 )
  [250] spline_8segB::p_x#2 = phi( spline_8segB/spline_8segB::p_x#0, spline_8segB::@1/spline_8segB::p_x#1 )
  [251] spline_8segB::$22 = spline_8segB::p_x#2 + $20
  [252] spline_8segB::$23 = spline_8segB::$22 >> 6
  [253] spline_8segB::$24 = spline_8segB::p_y#2 + $20
  [254] spline_8segB::$25 = spline_8segB::$24 >> 6
  [255] spline_8segB::$31 = spline_8segB::n#2 << 2
  [256] ((signed word*)SPLINE_8SEG)[spline_8segB::$31] = spline_8segB::$23
  [257] ((signed word*)SPLINE_8SEG+OFFSET_STRUCT_SPLINEVECTOR16_Y)[spline_8segB::$31] = spline_8segB::$25
  [258] spline_8segB::p_x#1 = spline_8segB::p_x#2 + spline_8segB::i_x#2
  [259] spline_8segB::p_y#1 = spline_8segB::p_y#2 + spline_8segB::i_y#2
  [260] spline_8segB::i_x#1 = spline_8segB::i_x#2 + spline_8segB::j_x#0
  [261] spline_8segB::i_y#1 = spline_8segB::i_y#2 + spline_8segB::j_y#0
  [262] spline_8segB::n#1 = ++ spline_8segB::n#2
  [263] if(spline_8segB::n#1!=8) goto spline_8segB::@1
  to:spline_8segB::@2
spline_8segB::@2: scope:[spline_8segB]  from spline_8segB::@1
  [264] spline_8segB::$18 = spline_8segB::p_x#1 + $20
  [265] spline_8segB::$19 = spline_8segB::$18 >> 6
  [266] spline_8segB::$20 = spline_8segB::p_y#1 + $20
  [267] spline_8segB::$21 = spline_8segB::$20 >> 6
  [268] *((signed word*)SPLINE_8SEG+8*SIZEOF_STRUCT_SPLINEVECTOR16) = spline_8segB::$19
  [269] *((signed word*)SPLINE_8SEG+8*SIZEOF_STRUCT_SPLINEVECTOR16+OFFSET_STRUCT_SPLINEVECTOR16_Y) = spline_8segB::$21
  to:spline_8segB::@return
spline_8segB::@return: scope:[spline_8segB]  from spline_8segB::@2
  [270] return 
  to:@return

void bitmap_plot_spline_8seg()
bitmap_plot_spline_8seg: scope:[bitmap_plot_spline_8seg]  from show_letter::@8
  [271] bitmap_plot_spline_8seg::current_x#0 = *((signed word*)SPLINE_8SEG)
  [272] bitmap_plot_spline_8seg::current_y#0 = *((signed word*)SPLINE_8SEG+OFFSET_STRUCT_SPLINEVECTOR16_Y)
  to:bitmap_plot_spline_8seg::@1
bitmap_plot_spline_8seg::@1: scope:[bitmap_plot_spline_8seg]  from bitmap_plot_spline_8seg bitmap_plot_spline_8seg::@2
  [273] bitmap_plot_spline_8seg::current_y#2 = phi( bitmap_plot_spline_8seg/bitmap_plot_spline_8seg::current_y#0, bitmap_plot_spline_8seg::@2/bitmap_plot_spline_8seg::current_y#1 )
  [273] bitmap_plot_spline_8seg::current_x#2 = phi( bitmap_plot_spline_8seg/bitmap_plot_spline_8seg::current_x#0, bitmap_plot_spline_8seg::@2/bitmap_plot_spline_8seg::current_x#1 )
  [273] bitmap_plot_spline_8seg::n#2 = phi( bitmap_plot_spline_8seg/1, bitmap_plot_spline_8seg::@2/bitmap_plot_spline_8seg::n#1 )
  [274] bitmap_plot_spline_8seg::$4 = bitmap_plot_spline_8seg::n#2 << 2
  [275] bitmap_line::x1#1 = (word)bitmap_plot_spline_8seg::current_x#2
  [276] bitmap_line::y1#1 = (word)bitmap_plot_spline_8seg::current_y#2
  [277] bitmap_line::x2#13 = (word)((signed word*)SPLINE_8SEG)[bitmap_plot_spline_8seg::$4]
  [278] bitmap_line::y2#13 = (word)((signed word*)SPLINE_8SEG+OFFSET_STRUCT_SPLINEVECTOR16_Y)[bitmap_plot_spline_8seg::$4]
  [279] call bitmap_line 
  to:bitmap_plot_spline_8seg::@2
bitmap_plot_spline_8seg::@2: scope:[bitmap_plot_spline_8seg]  from bitmap_plot_spline_8seg::@1
  [280] bitmap_plot_spline_8seg::current_x#1 = ((signed word*)SPLINE_8SEG)[bitmap_plot_spline_8seg::$4]
  [281] bitmap_plot_spline_8seg::current_y#1 = ((signed word*)SPLINE_8SEG+OFFSET_STRUCT_SPLINEVECTOR16_Y)[bitmap_plot_spline_8seg::$4]
  [282] bitmap_plot_spline_8seg::n#1 = ++ bitmap_plot_spline_8seg::n#2
  [283] if(bitmap_plot_spline_8seg::n#1!=9) goto bitmap_plot_spline_8seg::@1
  to:bitmap_plot_spline_8seg::@return
bitmap_plot_spline_8seg::@return: scope:[bitmap_plot_spline_8seg]  from bitmap_plot_spline_8seg::@2
  [284] return 
  to:@return

signed dword mulf16s(signed word mulf16s::a , signed word mulf16s::b)
mulf16s: scope:[mulf16s]  from rotate rotate::@1 rotate::@2 rotate::@3
  [285] mulf16s::b#4 = phi( rotate/mulf16s::b#0, rotate::@1/mulf16s::b#1, rotate::@2/mulf16s::b#2, rotate::@3/mulf16s::b#3 )
  [285] mulf16s::a#4 = phi( rotate/mulf16s::a#0, rotate::@1/mulf16s::a#1, rotate::@2/mulf16s::a#2, rotate::@3/mulf16s::a#3 )
  [286] mulf16u::a#0 = (word)mulf16s::a#4
  [287] mulf16u::b#0 = (word)mulf16s::b#4
  [288] call mulf16u 
  [289] mulf16u::return#2 = mulf16u::return#0
  to:mulf16s::@5
mulf16s::@5: scope:[mulf16s]  from mulf16s
  [290] mulf16s::m#0 = mulf16u::return#2
  [291] if(mulf16s::a#4>=0) goto mulf16s::@1
  to:mulf16s::@3
mulf16s::@3: scope:[mulf16s]  from mulf16s::@5
  [292] mulf16s::$6 = > mulf16s::m#0
  [293] mulf16s::$11 = mulf16s::$6 - (word)mulf16s::b#4
  [294] mulf16s::m#1 = mulf16s::m#0 hi= mulf16s::$11
  to:mulf16s::@1
mulf16s::@1: scope:[mulf16s]  from mulf16s::@3 mulf16s::@5
  [295] mulf16s::m#5 = phi( mulf16s::@3/mulf16s::m#1, mulf16s::@5/mulf16s::m#0 )
  [296] if(mulf16s::b#4>=0) goto mulf16s::@2
  to:mulf16s::@4
mulf16s::@4: scope:[mulf16s]  from mulf16s::@1
  [297] mulf16s::$9 = > mulf16s::m#5
  [298] mulf16s::$12 = mulf16s::$9 - (word)mulf16s::a#4
  [299] mulf16s::m#2 = mulf16s::m#5 hi= mulf16s::$12
  to:mulf16s::@2
mulf16s::@2: scope:[mulf16s]  from mulf16s::@1 mulf16s::@4
  [300] mulf16s::m#4 = phi( mulf16s::@1/mulf16s::m#5, mulf16s::@4/mulf16s::m#2 )
  [301] mulf16s::return#0 = (signed dword)mulf16s::m#4
  to:mulf16s::@return
mulf16s::@return: scope:[mulf16s]  from mulf16s::@2
  [302] return 
  to:@return

word abs_u16(word abs_u16::w)
abs_u16: scope:[abs_u16]  from bitmap_line bitmap_line::@12
  [303] abs_u16::w#2 = phi( bitmap_line/abs_u16::w#0, bitmap_line::@12/abs_u16::w#1 )
  [304] abs_u16::$0 = > abs_u16::w#2
  [305] abs_u16::$1 = abs_u16::$0 & $80
  [306] if(0!=abs_u16::$1) goto abs_u16::@1
  to:abs_u16::@return
abs_u16::@1: scope:[abs_u16]  from abs_u16
  [307] abs_u16::return#2 = - abs_u16::w#2
  to:abs_u16::@return
abs_u16::@return: scope:[abs_u16]  from abs_u16 abs_u16::@1
  [308] abs_u16::return#4 = phi( abs_u16::@1/abs_u16::return#2, abs_u16/abs_u16::w#2 )
  [309] return 
  to:@return

word sgn_u16(word sgn_u16::w)
sgn_u16: scope:[sgn_u16]  from bitmap_line::@1 bitmap_line::@14
  [310] sgn_u16::w#2 = phi( bitmap_line::@1/sgn_u16::w#0, bitmap_line::@14/sgn_u16::w#1 )
  [311] sgn_u16::$0 = > sgn_u16::w#2
  [312] sgn_u16::$1 = sgn_u16::$0 & $80
  [313] if(0!=sgn_u16::$1) goto sgn_u16::@1
  to:sgn_u16::@return
sgn_u16::@1: scope:[sgn_u16]  from sgn_u16
  [314] phi()
  to:sgn_u16::@return
sgn_u16::@return: scope:[sgn_u16]  from sgn_u16 sgn_u16::@1
  [315] sgn_u16::return#4 = phi( sgn_u16::@1/-1, sgn_u16/1 )
  [316] return 
  to:@return

void bitmap_plot(word bitmap_plot::x , byte bitmap_plot::y)
bitmap_plot: scope:[bitmap_plot]  from bitmap_line::@3 bitmap_line::@4 bitmap_line::@6 bitmap_line::@9
  [317] bitmap_plot::x#4 = phi( bitmap_line::@3/bitmap_plot::x#2, bitmap_line::@4/bitmap_plot::x#0, bitmap_line::@6/bitmap_plot::x#1, bitmap_line::@9/bitmap_plot::x#3 )
  [317] bitmap_plot::y#4 = phi( bitmap_line::@3/bitmap_plot::y#2, bitmap_line::@4/bitmap_plot::y#0, bitmap_line::@6/bitmap_plot::y#1, bitmap_line::@9/bitmap_plot::y#3 )
  [318] bitmap_plot::plotter#0 = bitmap_plot_yhi[bitmap_plot::y#4] w= bitmap_plot_ylo[bitmap_plot::y#4]
  [319] bitmap_plot::$0 = bitmap_plot::x#4 & $fff8
  [320] bitmap_plot::plotter#1 = (byte*)bitmap_plot::plotter#0 + bitmap_plot::$0
  [321] bitmap_plot::$1 = < bitmap_plot::x#4
  [322] *bitmap_plot::plotter#1 = *bitmap_plot::plotter#1 | bitmap_plot_bit[bitmap_plot::$1]
  to:bitmap_plot::@return
bitmap_plot::@return: scope:[bitmap_plot]  from bitmap_plot
  [323] return 
  to:@return

dword mulf16u(word mulf16u::a , word mulf16u::b)
mulf16u: scope:[mulf16u]  from mulf16s
  [324] *mulf16u::memA = mulf16u::a#0
  [325] *mulf16u::memB = mulf16u::b#0
  asm { ldamemA stasm1a+1 stasm3a+1 stasm5a+1 stasm7a+1 eor#$ff stasm2a+1 stasm4a+1 stasm6a+1 stasm8a+1 ldamemA+1 stasm1b+1 stasm3b+1 stasm5b+1 stasm7b+1 eor#$ff stasm2b+1 stasm4b+1 stasm6b+1 stasm8b+1 ldxmemB sec sm1a: ldamulf_sqr1_lo,x sm2a: sbcmulf_sqr2_lo,x stamemR+0 sm3a: ldamulf_sqr1_hi,x sm4a: sbcmulf_sqr2_hi,x sta_AA+1 sec sm1b: ldamulf_sqr1_lo,x sm2b: sbcmulf_sqr2_lo,x sta_cc+1 sm3b: ldamulf_sqr1_hi,x sm4b: sbcmulf_sqr2_hi,x sta_CC+1 ldxmemB+1 sec sm5a: ldamulf_sqr1_lo,x sm6a: sbcmulf_sqr2_lo,x sta_bb+1 sm7a: ldamulf_sqr1_hi,x sm8a: sbcmulf_sqr2_hi,x sta_BB+1 sec sm5b: ldamulf_sqr1_lo,x sm6b: sbcmulf_sqr2_lo,x sta_dd+1 sm7b: ldamulf_sqr1_hi,x sm8b: sbcmulf_sqr2_hi,x stamemR+3 clc _AA: lda#0 _bb: adc#0 stamemR+1 _BB: lda#0 _CC: adc#0 stamemR+2 bcc!+ incmemR+3 clc !: _cc: lda#0 adcmemR+1 stamemR+1 _dd: lda#0 adcmemR+2 stamemR+2 bcc!+ incmemR+3 !:  }
  [327] mulf16u::return#0 = *mulf16u::memR
  to:mulf16u::@return
mulf16u::@return: scope:[mulf16u]  from mulf16u
  [328] return 
  to:@return
