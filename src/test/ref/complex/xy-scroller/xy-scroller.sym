(const nomodify byte) BLACK = (byte) 0
(const nomodify byte*) MAIN_CHARSET = (byte*) 4096
(const nomodify byte*) MAIN_SCREEN0 = (byte*) 14336
(const nomodify byte*) MAIN_SCREEN1 = (byte*) 15360
(byte) MOS6526_CIA::INTERRUPT
(byte) MOS6526_CIA::PORT_A
(byte) MOS6526_CIA::PORT_A_DDR
(byte) MOS6526_CIA::PORT_B
(byte) MOS6526_CIA::PORT_B_DDR
(byte) MOS6526_CIA::SERIAL_DATA
(word) MOS6526_CIA::TIMER_A
(byte) MOS6526_CIA::TIMER_A_CONTROL
(word) MOS6526_CIA::TIMER_B
(byte) MOS6526_CIA::TIMER_B_CONTROL
(byte) MOS6526_CIA::TOD_10THS
(byte) MOS6526_CIA::TOD_HOURS
(byte) MOS6526_CIA::TOD_MIN
(byte) MOS6526_CIA::TOD_SEC
(byte) MOS6569_VICII::BG_COLOR
(byte) MOS6569_VICII::BG_COLOR1
(byte) MOS6569_VICII::BG_COLOR2
(byte) MOS6569_VICII::BG_COLOR3
(byte) MOS6569_VICII::BORDER_COLOR
(byte) MOS6569_VICII::CONTROL1
(byte) MOS6569_VICII::CONTROL2
(byte) MOS6569_VICII::IRQ_ENABLE
(byte) MOS6569_VICII::IRQ_STATUS
(byte) MOS6569_VICII::LIGHTPEN_X
(byte) MOS6569_VICII::LIGHTPEN_Y
(byte) MOS6569_VICII::MEMORY
(byte) MOS6569_VICII::RASTER
(byte) MOS6569_VICII::SPRITE0_COLOR
(byte) MOS6569_VICII::SPRITE0_X
(byte) MOS6569_VICII::SPRITE0_Y
(byte) MOS6569_VICII::SPRITE1_COLOR
(byte) MOS6569_VICII::SPRITE1_X
(byte) MOS6569_VICII::SPRITE1_Y
(byte) MOS6569_VICII::SPRITE2_COLOR
(byte) MOS6569_VICII::SPRITE2_X
(byte) MOS6569_VICII::SPRITE2_Y
(byte) MOS6569_VICII::SPRITE3_COLOR
(byte) MOS6569_VICII::SPRITE3_X
(byte) MOS6569_VICII::SPRITE3_Y
(byte) MOS6569_VICII::SPRITE4_COLOR
(byte) MOS6569_VICII::SPRITE4_X
(byte) MOS6569_VICII::SPRITE4_Y
(byte) MOS6569_VICII::SPRITE5_COLOR
(byte) MOS6569_VICII::SPRITE5_X
(byte) MOS6569_VICII::SPRITE5_Y
(byte) MOS6569_VICII::SPRITE6_COLOR
(byte) MOS6569_VICII::SPRITE6_X
(byte) MOS6569_VICII::SPRITE6_Y
(byte) MOS6569_VICII::SPRITE7_COLOR
(byte) MOS6569_VICII::SPRITE7_X
(byte) MOS6569_VICII::SPRITE7_Y
(byte) MOS6569_VICII::SPRITES_BG_COLLISION
(byte) MOS6569_VICII::SPRITES_COLLISION
(byte) MOS6569_VICII::SPRITES_ENABLE
(byte) MOS6569_VICII::SPRITES_EXPAND_X
(byte) MOS6569_VICII::SPRITES_EXPAND_Y
(byte) MOS6569_VICII::SPRITES_MC
(byte) MOS6569_VICII::SPRITES_MCOLOR1
(byte) MOS6569_VICII::SPRITES_MCOLOR2
(byte) MOS6569_VICII::SPRITES_PRIORITY
(byte) MOS6569_VICII::SPRITES_XMSB
(byte) MOS6581_SID::CH1_ATTACK_DECAY
(byte) MOS6581_SID::CH1_CONTROL
(word) MOS6581_SID::CH1_FREQ
(word) MOS6581_SID::CH1_PULSE_WIDTH
(byte) MOS6581_SID::CH1_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH2_ATTACK_DECAY
(byte) MOS6581_SID::CH2_CONTROL
(word) MOS6581_SID::CH2_FREQ
(word) MOS6581_SID::CH2_PULSE_WIDTH
(byte) MOS6581_SID::CH2_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH3_ATTACK_DECAY
(byte) MOS6581_SID::CH3_CONTROL
(byte) MOS6581_SID::CH3_ENV
(word) MOS6581_SID::CH3_FREQ
(byte) MOS6581_SID::CH3_OSC
(word) MOS6581_SID::CH3_PULSE_WIDTH
(byte) MOS6581_SID::CH3_SUSTAIN_RELEASE
(byte) MOS6581_SID::FILTER_CUTOFF_HIGH
(byte) MOS6581_SID::FILTER_CUTOFF_LOW
(byte) MOS6581_SID::FILTER_SETUP
(byte) MOS6581_SID::POT_X
(byte) MOS6581_SID::POT_Y
(byte) MOS6581_SID::VOLUME_FILTER_MODE
(const byte) OFFSET_STRUCT_MOS6569_VICII_BORDER_COLOR = (byte) $20
(const byte) OFFSET_STRUCT_MOS6569_VICII_CONTROL1 = (byte) $11
(const byte) OFFSET_STRUCT_MOS6569_VICII_CONTROL2 = (byte) $16
(const byte) OFFSET_STRUCT_MOS6569_VICII_MEMORY = (byte) $18
(const byte) OFFSET_STRUCT_MOS6569_VICII_RASTER = (byte) $12
(const byte*) PETSCII_ART[(number) $8c*(number) $7d]  = kickasm {{ .var petsciiPic = LoadPicture("cml.png")
    .print "width: "+petsciiPic.width + " height: "+petsciiPic.height
    .for (var y=0; y<petsciiPic.height; y++)
        .for (var x=0; x<petsciiPic.width; x++)
            .byte petsciiPic.getPixel(x,y)==0?' ':$a0;
 }}
(const nomodify word) SINSIZE = (word) $800
(const signed word*) SINTAB[(const nomodify word) SINSIZE]  = kickasm(  uses SINSIZE) {{ .fillword SINSIZE, 399*sin(i*2*PI/SINSIZE)
 }}
(const nomodify struct MOS6569_VICII*) VICII = (struct MOS6569_VICII*) 53248
(const nomodify byte) WHITE = (byte) 1
(void()) main()
(byte*~) main::$13 zp[2]:3 11.0
(byte~) main::$45 zp[1]:19 11.0
(byte~) main::$46 reg byte a 22.0
(byte~) main::$47 reg byte a 22.0
(byte~) main::$48 zp[1]:27 11.0
(byte~) main::$49 reg byte a 22.0
(word~) main::$5 zp[2]:15 11.0
(byte~) main::$50 reg byte a 22.0
(word~) main::$9 zp[2]:13 11.0
(label) main::@1
(label) main::@10
(label) main::@11
(label) main::@12
(label) main::@13
(label) main::@14
(label) main::@15
(label) main::@16
(label) main::@17
(label) main::@18
(label) main::@19
(label) main::@2
(label) main::@20
(label) main::@21
(label) main::@22
(label) main::@23
(label) main::@24
(label) main::@25
(label) main::@26
(label) main::@27
(label) main::@28
(label) main::@29
(label) main::@3
(label) main::@30
(label) main::@31
(label) main::@32
(label) main::@33
(label) main::@34
(label) main::@35
(label) main::@36
(label) main::@37
(label) main::@38
(label) main::@39
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::@8
(label) main::@9
(byte) main::i
(byte) main::i#1 reg byte y 202.0
(byte) main::i#2 reg byte y 168.33333333333331
(byte) main::i1
(byte) main::i1#1 reg byte y 202.0
(byte) main::i1#2 reg byte y 168.33333333333331
(byte) main::i2
(byte) main::i2#1 reg byte x 202.0
(byte) main::i2#2 reg byte x 60.599999999999994
(byte) main::i3
(byte) main::i3#1 reg byte x 202.0
(byte) main::i3#2 reg byte x 60.599999999999994
(signed byte) main::movement
(signed byte) main::movement#3 reg byte x 6.6000000000000005
(signed byte) main::movement#4 reg byte x 3.6666666666666665
(byte*) main::petscii
(byte*) main::petscii#0 petscii zp[2]:5 22.4
(byte*) main::petscii1
(byte*) main::petscii1#0 petscii1 zp[2]:5 18.666666666666664
(byte*) main::petscii2
(byte*) main::petscii2#0 petscii2 zp[2]:5 22.0
(byte*) main::petscii2#1 petscii2 zp[2]:5 101.0
(byte*) main::petscii2#2 petscii2 zp[2]:5 78.5
(byte*) main::petscii3
(byte*) main::petscii3#0 petscii3 zp[2]:5 11.0
(byte*) main::petscii3#1 petscii3 zp[2]:5 101.0
(byte*) main::petscii3#2 petscii3 zp[2]:5 78.5
(byte*) main::screen_active
(byte*) main::screen_active#0 screen_active zp[2]:3 4.4
(byte*) main::screen_hidden
(byte*) main::screen_hidden#0 screen_hidden zp[2]:7 3.9189189189189193
(byte*) main::scrn
(byte*) main::scrn1
(byte*) main::scrn1#0 scrn1 zp[2]:20 22.4
(byte*) main::scrn2
(byte*) main::scrn2#1 scrn2 zp[2]:7 67.33333333333333
(byte*) main::scrn2#2 scrn2 zp[2]:7 104.66666666666666
(byte*) main::scrn3
(byte*) main::scrn3#0 scrn3 zp[2]:7 22.0
(byte*) main::scrn3#1 scrn3 zp[2]:7 67.33333333333333
(byte*) main::scrn3#2 scrn3 zp[2]:7 104.66666666666666
(label) main::sei1
(label) main::toD0181
(byte*) main::toD0181_gfx
(byte) main::toD0181_return
(const byte) main::toD0181_return#0 toD0181_return = >(word)(const nomodify byte*) MAIN_SCREEN0&(word) $3fff*(byte) 4|>(word)(const nomodify byte*) MAIN_CHARSET/(byte) 4&(byte) $f
(byte*) main::toD0181_screen
(label) main::toD0182
(byte*) main::toD0182_gfx
(byte) main::toD0182_return
(const byte) main::toD0182_return#0 toD0182_return = >(word)(const nomodify byte*) MAIN_SCREEN1&(word) $3fff*(byte) 4|>(word)(const nomodify byte*) MAIN_CHARSET/(byte) 4&(byte) $f
(byte*) main::toD0182_screen
(label) main::toD0183
(byte*) main::toD0183_gfx
(byte) main::toD0183_return
(const byte) main::toD0183_return#0 toD0183_return = >(word)(const nomodify byte*) MAIN_SCREEN0&(word) $3fff*(byte) 4|>(word)(const nomodify byte*) MAIN_CHARSET/(byte) 4&(byte) $f
(byte*) main::toD0183_screen
(signed byte) main::x_movement
(signed byte) main::x_movement#0 x_movement zp[1]:18 1.2571428571428571
(word) main::x_pos_coarse_old
(word) main::x_pos_coarse_old#0 x_pos_coarse_old zp[2]:13 2.4444444444444446
(signed byte) main::y_movement
(signed byte) main::y_movement#0 y_movement zp[1]:17 2.75
(word) main::y_pos_coarse_old
(word) main::y_pos_coarse_old#0 y_pos_coarse_old zp[2]:15 11.0
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(label) memset::@1
(label) memset::@2
(label) memset::@return
(byte) memset::c
(const byte) memset::c#0 c = (byte) ' '
(byte*) memset::dst
(byte*) memset::dst#1 dst zp[2]:9 202.0
(byte*) memset::dst#2 dst zp[2]:9 134.66666666666666
(byte*) memset::end
(const byte*) memset::end#0 end = (byte*)(const void*) memset::str#0+(const word) memset::num#0
(word) memset::num
(const word) memset::num#0 num = (word) $3e8
(void*) memset::return
(void*) memset::str
(const void*) memset::str#0 str = (void*)(const nomodify byte*) MAIN_SCREEN0
(void()) next_position()
(word~) next_position::$12 zp[2]:22 202.0
(word~) next_position::$13 zp[2]:24 202.0
(byte~) next_position::$15 reg byte a 202.0
(byte~) next_position::$17 reg byte a 202.0
(signed word*~) next_position::$18 zp[2]:22 202.0
(signed word*~) next_position::$19 zp[2]:24 202.0
(word~) next_position::$4 zp[2]:22 202.0
(word~) next_position::$8 zp[2]:24 202.0
(label) next_position::@1
(label) next_position::@2
(label) next_position::@3
(label) next_position::@4
(label) next_position::@return
(word) next_position::x_pos_u
(word) next_position::x_pos_u#0 x_pos_u zp[2]:22 67.33333333333333
(word) next_position::y_pos_u
(word) next_position::y_pos_u#0 y_pos_u zp[2]:24 67.33333333333333
(byte*()) petscii_ptr((word) petscii_ptr::row_x , (word) petscii_ptr::row_y)
(word~) petscii_ptr::$0 zp[2]:13 202.0
(byte*~) petscii_ptr::$1 zp[2]:13 202.0
(word~) petscii_ptr::$3 zp[2]:38 202.0
(word~) petscii_ptr::$4 zp[2]:38 202.0
(word~) petscii_ptr::$5 zp[2]:38 202.0
(word~) petscii_ptr::$6 zp[2]:13 202.0
(label) petscii_ptr::@return
(byte*) petscii_ptr::return
(byte*) petscii_ptr::return#0 return zp[2]:5 22.0
(byte*) petscii_ptr::return#1 return zp[2]:5 22.0
(byte*) petscii_ptr::return#10 return zp[2]:5 24.166666666666664
(byte*) petscii_ptr::return#2 return zp[2]:5 22.0
(byte*) petscii_ptr::return#3 return zp[2]:5 22.0
(word) petscii_ptr::row_x
(word) petscii_ptr::row_x#0 row_x zp[2]:5 11.0
(word) petscii_ptr::row_x#1 row_x zp[2]:5 11.0
(word) petscii_ptr::row_x#2 row_x zp[2]:5 11.0
(word) petscii_ptr::row_x#3 row_x zp[2]:5 11.0
(word) petscii_ptr::row_x#4 row_x zp[2]:5 20.714285714285715
(word) petscii_ptr::row_y
(word) petscii_ptr::row_y#0 row_y zp[2]:13 22.0
(word) petscii_ptr::row_y#1 row_y zp[2]:13 22.0
(word) petscii_ptr::row_y#2 row_y zp[2]:13 22.0
(word) petscii_ptr::row_y#3 row_y zp[2]:13 22.0
(word) petscii_ptr::row_y#4 row_y zp[2]:13 86.75
(byte) screen
(byte) screen#0 screen zp[1]:2 22.0
(byte) screen#12 screen zp[1]:2 0.7857142857142857
(byte) screen#28 screen zp[1]:2 13.666666666666666
(void()) screencpy((byte*) screencpy::dst , (byte*) screencpy::src)
(label) screencpy::@1
(label) screencpy::@2
(label) screencpy::@return
(byte*) screencpy::dst
(byte*) screencpy::dst#0 dst zp[2]:7 687.6666666666666
(byte*) screencpy::dst_250
(byte*) screencpy::dst_250#0 dst_250 zp[2]:28 841.8333333333333
(byte*) screencpy::dst_500
(byte*) screencpy::dst_500#0 dst_500 zp[2]:32 1010.2
(byte*) screencpy::dst_750
(byte*) screencpy::dst_750#0 dst_750 zp[2]:36 1262.75
(byte) screencpy::i
(byte) screencpy::i#1 reg byte y 20002.0
(byte) screencpy::i#2 reg byte y 18335.166666666668
(byte*) screencpy::src
(byte*) screencpy::src#0 src zp[2]:3 736.7857142857143
(byte*) screencpy::src_250
(byte*) screencpy::src_250#0 src_250 zp[2]:38 777.076923076923
(byte*) screencpy::src_500
(byte*) screencpy::src_500#0 src_500 zp[2]:30 918.3636363636363
(byte*) screencpy::src_750
(byte*) screencpy::src_750#0 src_750 zp[2]:34 1122.4444444444443
(signed word) x_pos
(signed word) x_pos#11 x_pos zp[2]:22 25.25
(word) x_pos_coarse
(word) x_pos_coarse#17 x_pos_coarse zp[2]:22 1.7578947368421054
(byte) x_pos_fine
(byte) x_pos_fine#12 x_pos_fine zp[1]:26 1.3176470588235294
(word) x_sin_idx
(word) x_sin_idx#12 x_sin_idx zp[2]:9 112.0
(word) x_sin_idx#13 x_sin_idx zp[2]:9 202.0
(word) x_sin_idx#14 x_sin_idx zp[2]:9 2.803571428571429
(word) x_sin_idx#4 x_sin_idx zp[2]:9 202.0
(signed word) y_pos
(signed word) y_pos#11 y_pos zp[2]:24 16.833333333333332
(word) y_pos_coarse
(word) y_pos_coarse#16 y_pos_coarse zp[2]:24 1.8351648351648353
(byte) y_pos_fine
(byte) y_pos_fine#12 y_pos_fine zp[1]:27 1.473684210526316
(word) y_sin_idx
(word) y_sin_idx#12 y_sin_idx zp[2]:11 22.4
(word) y_sin_idx#13 y_sin_idx zp[2]:11 2.9074074074074074
(word) y_sin_idx#14 y_sin_idx zp[2]:11 202.0
(word) y_sin_idx#4 y_sin_idx zp[2]:11 202.0

zp[1]:2 [ screen#12 screen#28 screen#0 ]
reg byte x [ main::movement#4 ]
zp[2]:3 [ main::$13 main::screen_active#0 screencpy::src#0 ]
reg byte y [ main::i#2 main::i#1 ]
reg byte x [ main::i2#2 main::i2#1 ]
zp[2]:5 [ main::petscii2#2 main::petscii2#1 main::petscii2#0 petscii_ptr::return#3 petscii_ptr::row_x#4 petscii_ptr::row_x#0 petscii_ptr::row_x#2 petscii_ptr::row_x#1 petscii_ptr::row_x#3 petscii_ptr::return#10 main::petscii3#2 main::petscii3#1 main::petscii3#0 petscii_ptr::return#2 petscii_ptr::return#1 main::petscii#0 petscii_ptr::return#0 main::petscii1#0 ]
zp[2]:7 [ main::scrn2#2 main::scrn2#1 main::screen_hidden#0 main::scrn3#2 main::scrn3#1 main::scrn3#0 screencpy::dst#0 ]
reg byte x [ main::i3#2 main::i3#1 ]
reg byte y [ main::i1#2 main::i1#1 ]
zp[2]:9 [ x_sin_idx#12 x_sin_idx#14 x_sin_idx#13 x_sin_idx#4 memset::dst#2 memset::dst#1 ]
zp[2]:11 [ y_sin_idx#12 y_sin_idx#13 y_sin_idx#14 y_sin_idx#4 ]
reg byte y [ screencpy::i#2 screencpy::i#1 ]
zp[2]:13 [ main::x_pos_coarse_old#0 main::$9 petscii_ptr::row_y#4 petscii_ptr::row_y#0 petscii_ptr::row_y#2 petscii_ptr::row_y#1 petscii_ptr::row_y#3 petscii_ptr::$6 petscii_ptr::$0 petscii_ptr::$1 ]
zp[2]:15 [ main::y_pos_coarse_old#0 main::$5 ]
zp[1]:17 [ main::y_movement#0 ]
zp[1]:18 [ main::x_movement#0 ]
reg byte x [ main::movement#3 ]
zp[1]:19 [ main::$45 ]
reg byte a [ main::$46 ]
reg byte a [ main::$47 ]
reg byte a [ main::$49 ]
reg byte a [ main::$50 ]
zp[2]:20 [ main::scrn1#0 ]
zp[2]:22 [ next_position::$12 next_position::$18 x_pos#11 next_position::$4 next_position::x_pos_u#0 x_pos_coarse#17 ]
zp[2]:24 [ next_position::$13 next_position::$19 y_pos#11 next_position::$8 next_position::y_pos_u#0 y_pos_coarse#16 ]
reg byte a [ next_position::$15 ]
zp[1]:26 [ x_pos_fine#12 ]
reg byte a [ next_position::$17 ]
zp[1]:27 [ y_pos_fine#12 main::$48 ]
zp[2]:28 [ screencpy::dst_250#0 ]
zp[2]:30 [ screencpy::src_500#0 ]
zp[2]:32 [ screencpy::dst_500#0 ]
zp[2]:34 [ screencpy::src_750#0 ]
zp[2]:36 [ screencpy::dst_750#0 ]
zp[2]:38 [ petscii_ptr::$3 petscii_ptr::$4 petscii_ptr::$5 screencpy::src_250#0 ]
