
void main()
main: scope:[main]  from
  [0] *(&main::slots1) = memcpy(*(&$0), struct hostslots, SIZEOF_STRUCT_HOSTSLOTS)
  [1] *(&main::slots2) = memcpy(*(&$1), struct hostslots, SIZEOF_STRUCT_HOSTSLOTS)
  [2] call doStuff 
  to:main::@1
main::@1: scope:[main]  from main
  [3] phi()
  [4] call doStuff 
  to:main::@return
main::@return: scope:[main]  from main::@1
  [5] return 
  to:@return

void doStuff(struct hostslots* doStuff::hs)
doStuff: scope:[doStuff]  from main main::@1
  [6] doStuff::hs#4 = phi( main/&main::slots1, main::@1/&main::slots2 )
  to:doStuff::@1
doStuff::@1: scope:[doStuff]  from doStuff doStuff::@4
  [7] doStuff::i#2 = phi( doStuff/0, doStuff::@4/doStuff::i#1 )
  [8] if(doStuff::i#2<8) goto doStuff::@2
  to:doStuff::@return
doStuff::@return: scope:[doStuff]  from doStuff::@1
  [9] return 
  to:@return
doStuff::@2: scope:[doStuff]  from doStuff::@1
  [10] doStuff::$1 = doStuff::i#2 << 5
  [11] doStuff::hsp#0 = (byte*)((byte*)doStuff::hs#4)[doStuff::$1]
  [12] if(*doStuff::hsp#0!=0) goto doStuff::@3
  to:doStuff::@5
doStuff::@5: scope:[doStuff]  from doStuff::@2
  [13] OUT[doStuff::i#2] = 2
  to:doStuff::@4
doStuff::@4: scope:[doStuff]  from doStuff::@3 doStuff::@5
  [14] doStuff::i#1 = ++ doStuff::i#2
  to:doStuff::@1
doStuff::@3: scope:[doStuff]  from doStuff::@2
  [15] OUT[doStuff::i#2] = 1
  to:doStuff::@4
