@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()
main: scope:[main]  from @1
  [4] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@2
  [5] (byte*) main::cursor#2 ← phi( main/(const byte*) SCREEN#0 main::@2/(byte*) main::cursor#1 )
  [5] (byte) main::i#3 ← phi( main/(byte/signed byte/word/signed word/dword/signed dword) 0 main::@2/(byte) main::i#4 )
  [6] *((byte*) main::cursor#2) ← *((const byte[]) TEXT#0 + (byte) main::i#3)
  [7] (byte) main::i#1 ← ++ (byte) main::i#3
  [8] if((byte) main::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto main::@6
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@6
  [9] (byte) main::i#4 ← phi( main::@6/(byte) main::i#1 main::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [10] (byte*) main::cursor#1 ← ++ (byte*) main::cursor#2
  [11] if((byte*) main::cursor#1<(const byte*) SCREEN#0+(word/signed word/dword/signed dword) $3e8) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@2
  [12] return 
  to:@return
main::@6: scope:[main]  from main::@1
  [13] phi()
  to:main::@2
