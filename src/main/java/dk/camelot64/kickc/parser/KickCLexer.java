// Generated from /Users/jespergravgaard/c64/src/kickc/src/main/java/dk/camelot64/kickc/parser/KickC.g4 by ANTLR 4.7
package dk.camelot64.kickc.parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class KickCLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, SIMPLETYPE=47, STRING=48, CHAR=49, BOOLEAN=50, NUMBER=51, NUMFLOAT=52, 
		BINFLOAT=53, DECFLOAT=54, HEXFLOAT=55, NUMINT=56, BININTEGER=57, DECINTEGER=58, 
		HEXINTEGER=59, NAME=60, WS=61, COMMENT_LINE=62, COMMENT_BLOCK=63;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "SIMPLETYPE", "STRING", "CHAR", 
		"BOOLEAN", "NUMBER", "NUMFLOAT", "BINFLOAT", "DECFLOAT", "HEXFLOAT", "NUMINT", 
		"BININTEGER", "DECINTEGER", "HEXINTEGER", "BINDIGIT", "DECDIGIT", "HEXDIGIT", 
		"NAME", "NAME_START", "NAME_CHAR", "WS", "COMMENT_LINE", "COMMENT_BLOCK"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'{'", "'}'", "'('", "')'", "'const'", "'='", "';'", "'if'", "'else'", 
		"'while'", "'do'", "'for'", "'return'", "':'", "'..'", "','", "'*'", "'['", 
		"']'", "'--'", "'++'", "'+'", "'-'", "'not'", "'!'", "'&'", "'~'", "'<'", 
		"'>'", "'>>'", "'<<'", "'/'", "'%'", "'=='", "'!='", "'<>'", "'<='", "'=<'", 
		"'>='", "'=>'", "'^'", "'|'", "'and'", "'&&'", "'or'", "'||'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, "SIMPLETYPE", 
		"STRING", "CHAR", "BOOLEAN", "NUMBER", "NUMFLOAT", "BINFLOAT", "DECFLOAT", 
		"HEXFLOAT", "NUMINT", "BININTEGER", "DECINTEGER", "HEXINTEGER", "NAME", 
		"WS", "COMMENT_LINE", "COMMENT_BLOCK"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public KickCLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "KickC.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2A\u01d2\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\3\2\3\2\3\3\3\3\3\4\3"+
		"\4\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\n\3\n"+
		"\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\r"+
		"\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\20\3\20\3\20\3\21\3\21"+
		"\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\27\3\27"+
		"\3\30\3\30\3\31\3\31\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35"+
		"\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3!\3!\3\"\3\"\3#\3#\3#\3$\3$\3$\3%"+
		"\3%\3%\3&\3&\3&\3\'\3\'\3\'\3(\3(\3(\3)\3)\3)\3*\3*\3+\3+\3,\3,\3,\3,"+
		"\3-\3-\3-\3.\3.\3.\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3"+
		"\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\5\60\u0122\n\60"+
		"\3\61\3\61\3\61\3\61\7\61\u0128\n\61\f\61\16\61\u012b\13\61\3\61\3\61"+
		"\3\62\3\62\3\62\3\62\5\62\u0133\n\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63"+
		"\3\63\3\63\3\63\3\63\5\63\u0140\n\63\3\64\3\64\5\64\u0144\n\64\3\65\3"+
		"\65\3\65\5\65\u0149\n\65\3\66\3\66\3\66\3\66\3\66\5\66\u0150\n\66\3\66"+
		"\7\66\u0153\n\66\f\66\16\66\u0156\13\66\3\66\3\66\6\66\u015a\n\66\r\66"+
		"\16\66\u015b\3\67\7\67\u015f\n\67\f\67\16\67\u0162\13\67\3\67\3\67\6\67"+
		"\u0166\n\67\r\67\16\67\u0167\38\38\38\38\38\58\u016f\n8\38\78\u0172\n"+
		"8\f8\168\u0175\138\38\38\68\u0179\n8\r8\168\u017a\39\39\39\59\u0180\n"+
		"9\3:\3:\3:\6:\u0185\n:\r:\16:\u0186\3:\3:\6:\u018b\n:\r:\16:\u018c\5:"+
		"\u018f\n:\3;\6;\u0192\n;\r;\16;\u0193\3<\3<\3<\3<\3<\5<\u019b\n<\3<\6"+
		"<\u019e\n<\r<\16<\u019f\3=\3=\3>\3>\3?\3?\3@\3@\7@\u01aa\n@\f@\16@\u01ad"+
		"\13@\3A\3A\3B\3B\3C\6C\u01b4\nC\rC\16C\u01b5\3C\3C\3D\3D\3D\3D\7D\u01be"+
		"\nD\fD\16D\u01c1\13D\3D\3D\3E\3E\3E\3E\7E\u01c9\nE\fE\16E\u01cc\13E\3"+
		"E\3E\3E\3E\3E\3\u01ca\2F\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f"+
		"\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63"+
		"\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62"+
		"c\63e\64g\65i\66k\67m8o9q:s;u<w=y\2{\2}\2\177>\u0081\2\u0083\2\u0085?"+
		"\u0087@\u0089A\3\2\f\3\2$$\3\2))\4\2DDdd\3\2\62\63\3\2\62;\5\2\62;CHc"+
		"h\5\2C\\aac|\6\2\62;C\\aac|\5\2\13\f\17\17\"\"\4\2\f\f\17\17\2\u01ed\2"+
		"\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2"+
		"\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2"+
		"\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2"+
		"\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2"+
		"\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2"+
		"\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2"+
		"\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U"+
		"\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2"+
		"\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2"+
		"\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2\177\3\2\2\2"+
		"\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\3\u008b\3\2\2\2\5\u008d"+
		"\3\2\2\2\7\u008f\3\2\2\2\t\u0091\3\2\2\2\13\u0093\3\2\2\2\r\u0099\3\2"+
		"\2\2\17\u009b\3\2\2\2\21\u009d\3\2\2\2\23\u00a0\3\2\2\2\25\u00a5\3\2\2"+
		"\2\27\u00ab\3\2\2\2\31\u00ae\3\2\2\2\33\u00b2\3\2\2\2\35\u00b9\3\2\2\2"+
		"\37\u00bb\3\2\2\2!\u00be\3\2\2\2#\u00c0\3\2\2\2%\u00c2\3\2\2\2\'\u00c4"+
		"\3\2\2\2)\u00c6\3\2\2\2+\u00c9\3\2\2\2-\u00cc\3\2\2\2/\u00ce\3\2\2\2\61"+
		"\u00d0\3\2\2\2\63\u00d4\3\2\2\2\65\u00d6\3\2\2\2\67\u00d8\3\2\2\29\u00da"+
		"\3\2\2\2;\u00dc\3\2\2\2=\u00de\3\2\2\2?\u00e1\3\2\2\2A\u00e4\3\2\2\2C"+
		"\u00e6\3\2\2\2E\u00e8\3\2\2\2G\u00eb\3\2\2\2I\u00ee\3\2\2\2K\u00f1\3\2"+
		"\2\2M\u00f4\3\2\2\2O\u00f7\3\2\2\2Q\u00fa\3\2\2\2S\u00fd\3\2\2\2U\u00ff"+
		"\3\2\2\2W\u0101\3\2\2\2Y\u0105\3\2\2\2[\u0108\3\2\2\2]\u010b\3\2\2\2_"+
		"\u0121\3\2\2\2a\u0123\3\2\2\2c\u012e\3\2\2\2e\u013f\3\2\2\2g\u0143\3\2"+
		"\2\2i\u0148\3\2\2\2k\u014f\3\2\2\2m\u0160\3\2\2\2o\u016e\3\2\2\2q\u017f"+
		"\3\2\2\2s\u018e\3\2\2\2u\u0191\3\2\2\2w\u019a\3\2\2\2y\u01a1\3\2\2\2{"+
		"\u01a3\3\2\2\2}\u01a5\3\2\2\2\177\u01a7\3\2\2\2\u0081\u01ae\3\2\2\2\u0083"+
		"\u01b0\3\2\2\2\u0085\u01b3\3\2\2\2\u0087\u01b9\3\2\2\2\u0089\u01c4\3\2"+
		"\2\2\u008b\u008c\7}\2\2\u008c\4\3\2\2\2\u008d\u008e\7\177\2\2\u008e\6"+
		"\3\2\2\2\u008f\u0090\7*\2\2\u0090\b\3\2\2\2\u0091\u0092\7+\2\2\u0092\n"+
		"\3\2\2\2\u0093\u0094\7e\2\2\u0094\u0095\7q\2\2\u0095\u0096\7p\2\2\u0096"+
		"\u0097\7u\2\2\u0097\u0098\7v\2\2\u0098\f\3\2\2\2\u0099\u009a\7?\2\2\u009a"+
		"\16\3\2\2\2\u009b\u009c\7=\2\2\u009c\20\3\2\2\2\u009d\u009e\7k\2\2\u009e"+
		"\u009f\7h\2\2\u009f\22\3\2\2\2\u00a0\u00a1\7g\2\2\u00a1\u00a2\7n\2\2\u00a2"+
		"\u00a3\7u\2\2\u00a3\u00a4\7g\2\2\u00a4\24\3\2\2\2\u00a5\u00a6\7y\2\2\u00a6"+
		"\u00a7\7j\2\2\u00a7\u00a8\7k\2\2\u00a8\u00a9\7n\2\2\u00a9\u00aa\7g\2\2"+
		"\u00aa\26\3\2\2\2\u00ab\u00ac\7f\2\2\u00ac\u00ad\7q\2\2\u00ad\30\3\2\2"+
		"\2\u00ae\u00af\7h\2\2\u00af\u00b0\7q\2\2\u00b0\u00b1\7t\2\2\u00b1\32\3"+
		"\2\2\2\u00b2\u00b3\7t\2\2\u00b3\u00b4\7g\2\2\u00b4\u00b5\7v\2\2\u00b5"+
		"\u00b6\7w\2\2\u00b6\u00b7\7t\2\2\u00b7\u00b8\7p\2\2\u00b8\34\3\2\2\2\u00b9"+
		"\u00ba\7<\2\2\u00ba\36\3\2\2\2\u00bb\u00bc\7\60\2\2\u00bc\u00bd\7\60\2"+
		"\2\u00bd \3\2\2\2\u00be\u00bf\7.\2\2\u00bf\"\3\2\2\2\u00c0\u00c1\7,\2"+
		"\2\u00c1$\3\2\2\2\u00c2\u00c3\7]\2\2\u00c3&\3\2\2\2\u00c4\u00c5\7_\2\2"+
		"\u00c5(\3\2\2\2\u00c6\u00c7\7/\2\2\u00c7\u00c8\7/\2\2\u00c8*\3\2\2\2\u00c9"+
		"\u00ca\7-\2\2\u00ca\u00cb\7-\2\2\u00cb,\3\2\2\2\u00cc\u00cd\7-\2\2\u00cd"+
		".\3\2\2\2\u00ce\u00cf\7/\2\2\u00cf\60\3\2\2\2\u00d0\u00d1\7p\2\2\u00d1"+
		"\u00d2\7q\2\2\u00d2\u00d3\7v\2\2\u00d3\62\3\2\2\2\u00d4\u00d5\7#\2\2\u00d5"+
		"\64\3\2\2\2\u00d6\u00d7\7(\2\2\u00d7\66\3\2\2\2\u00d8\u00d9\7\u0080\2"+
		"\2\u00d98\3\2\2\2\u00da\u00db\7>\2\2\u00db:\3\2\2\2\u00dc\u00dd\7@\2\2"+
		"\u00dd<\3\2\2\2\u00de\u00df\7@\2\2\u00df\u00e0\7@\2\2\u00e0>\3\2\2\2\u00e1"+
		"\u00e2\7>\2\2\u00e2\u00e3\7>\2\2\u00e3@\3\2\2\2\u00e4\u00e5\7\61\2\2\u00e5"+
		"B\3\2\2\2\u00e6\u00e7\7\'\2\2\u00e7D\3\2\2\2\u00e8\u00e9\7?\2\2\u00e9"+
		"\u00ea\7?\2\2\u00eaF\3\2\2\2\u00eb\u00ec\7#\2\2\u00ec\u00ed\7?\2\2\u00ed"+
		"H\3\2\2\2\u00ee\u00ef\7>\2\2\u00ef\u00f0\7@\2\2\u00f0J\3\2\2\2\u00f1\u00f2"+
		"\7>\2\2\u00f2\u00f3\7?\2\2\u00f3L\3\2\2\2\u00f4\u00f5\7?\2\2\u00f5\u00f6"+
		"\7>\2\2\u00f6N\3\2\2\2\u00f7\u00f8\7@\2\2\u00f8\u00f9\7?\2\2\u00f9P\3"+
		"\2\2\2\u00fa\u00fb\7?\2\2\u00fb\u00fc\7@\2\2\u00fcR\3\2\2\2\u00fd\u00fe"+
		"\7`\2\2\u00feT\3\2\2\2\u00ff\u0100\7~\2\2\u0100V\3\2\2\2\u0101\u0102\7"+
		"c\2\2\u0102\u0103\7p\2\2\u0103\u0104\7f\2\2\u0104X\3\2\2\2\u0105\u0106"+
		"\7(\2\2\u0106\u0107\7(\2\2\u0107Z\3\2\2\2\u0108\u0109\7q\2\2\u0109\u010a"+
		"\7t\2\2\u010a\\\3\2\2\2\u010b\u010c\7~\2\2\u010c\u010d\7~\2\2\u010d^\3"+
		"\2\2\2\u010e\u010f\7d\2\2\u010f\u0110\7{\2\2\u0110\u0111\7v\2\2\u0111"+
		"\u0122\7g\2\2\u0112\u0113\7y\2\2\u0113\u0114\7q\2\2\u0114\u0115\7t\2\2"+
		"\u0115\u0122\7f\2\2\u0116\u0117\7d\2\2\u0117\u0118\7q\2\2\u0118\u0119"+
		"\7q\2\2\u0119\u011a\7n\2\2\u011a\u011b\7g\2\2\u011b\u011c\7c\2\2\u011c"+
		"\u0122\7p\2\2\u011d\u011e\7x\2\2\u011e\u011f\7q\2\2\u011f\u0120\7k\2\2"+
		"\u0120\u0122\7f\2\2\u0121\u010e\3\2\2\2\u0121\u0112\3\2\2\2\u0121\u0116"+
		"\3\2\2\2\u0121\u011d\3\2\2\2\u0122`\3\2\2\2\u0123\u0129\7$\2\2\u0124\u0125"+
		"\7^\2\2\u0125\u0128\7$\2\2\u0126\u0128\n\2\2\2\u0127\u0124\3\2\2\2\u0127"+
		"\u0126\3\2\2\2\u0128\u012b\3\2\2\2\u0129\u0127\3\2\2\2\u0129\u012a\3\2"+
		"\2\2\u012a\u012c\3\2\2\2\u012b\u0129\3\2\2\2\u012c\u012d\7$\2\2\u012d"+
		"b\3\2\2\2\u012e\u0132\7)\2\2\u012f\u0130\7^\2\2\u0130\u0133\7)\2\2\u0131"+
		"\u0133\n\3\2\2\u0132\u012f\3\2\2\2\u0132\u0131\3\2\2\2\u0133\u0134\3\2"+
		"\2\2\u0134\u0135\7)\2\2\u0135d\3\2\2\2\u0136\u0137\7v\2\2\u0137\u0138"+
		"\7t\2\2\u0138\u0139\7w\2\2\u0139\u0140\7g\2\2\u013a\u013b\7h\2\2\u013b"+
		"\u013c\7c\2\2\u013c\u013d\7n\2\2\u013d\u013e\7u\2\2\u013e\u0140\7g\2\2"+
		"\u013f\u0136\3\2\2\2\u013f\u013a\3\2\2\2\u0140f\3\2\2\2\u0141\u0144\5"+
		"i\65\2\u0142\u0144\5q9\2\u0143\u0141\3\2\2\2\u0143\u0142\3\2\2\2\u0144"+
		"h\3\2\2\2\u0145\u0149\5k\66\2\u0146\u0149\5m\67\2\u0147\u0149\5o8\2\u0148"+
		"\u0145\3\2\2\2\u0148\u0146\3\2\2\2\u0148\u0147\3\2\2\2\u0149j\3\2\2\2"+
		"\u014a\u0150\7\'\2\2\u014b\u014c\7\62\2\2\u014c\u0150\7d\2\2\u014d\u014e"+
		"\7\62\2\2\u014e\u0150\7D\2\2\u014f\u014a\3\2\2\2\u014f\u014b\3\2\2\2\u014f"+
		"\u014d\3\2\2\2\u0150\u0154\3\2\2\2\u0151\u0153\5y=\2\u0152\u0151\3\2\2"+
		"\2\u0153\u0156\3\2\2\2\u0154\u0152\3\2\2\2\u0154\u0155\3\2\2\2\u0155\u0157"+
		"\3\2\2\2\u0156\u0154\3\2\2\2\u0157\u0159\7\60\2\2\u0158\u015a\5y=\2\u0159"+
		"\u0158\3\2\2\2\u015a\u015b\3\2\2\2\u015b\u0159\3\2\2\2\u015b\u015c\3\2"+
		"\2\2\u015cl\3\2\2\2\u015d\u015f\5{>\2\u015e\u015d\3\2\2\2\u015f\u0162"+
		"\3\2\2\2\u0160\u015e\3\2\2\2\u0160\u0161\3\2\2\2\u0161\u0163\3\2\2\2\u0162"+
		"\u0160\3\2\2\2\u0163\u0165\7\60\2\2\u0164\u0166\5{>\2\u0165\u0164\3\2"+
		"\2\2\u0166\u0167\3\2\2\2\u0167\u0165\3\2\2\2\u0167\u0168\3\2\2\2\u0168"+
		"n\3\2\2\2\u0169\u016f\7&\2\2\u016a\u016b\7\62\2\2\u016b\u016f\7z\2\2\u016c"+
		"\u016d\7\62\2\2\u016d\u016f\7Z\2\2\u016e\u0169\3\2\2\2\u016e\u016a\3\2"+
		"\2\2\u016e\u016c\3\2\2\2\u016f\u0173\3\2\2\2\u0170\u0172\5}?\2\u0171\u0170"+
		"\3\2\2\2\u0172\u0175\3\2\2\2\u0173\u0171\3\2\2\2\u0173\u0174\3\2\2\2\u0174"+
		"\u0176\3\2\2\2\u0175\u0173\3\2\2\2\u0176\u0178\7\60\2\2\u0177\u0179\5"+
		"}?\2\u0178\u0177\3\2\2\2\u0179\u017a\3\2\2\2\u017a\u0178\3\2\2\2\u017a"+
		"\u017b\3\2\2\2\u017bp\3\2\2\2\u017c\u0180\5u;\2\u017d\u0180\5w<\2\u017e"+
		"\u0180\5s:\2\u017f\u017c\3\2\2\2\u017f\u017d\3\2\2\2\u017f\u017e\3\2\2"+
		"\2\u0180r\3\2\2\2\u0181\u0182\7\62\2\2\u0182\u0184\t\4\2\2\u0183\u0185"+
		"\5y=\2\u0184\u0183\3\2\2\2\u0185\u0186\3\2\2\2\u0186\u0184\3\2\2\2\u0186"+
		"\u0187\3\2\2\2\u0187\u018f\3\2\2\2\u0188\u018a\7\'\2\2\u0189\u018b\5y"+
		"=\2\u018a\u0189\3\2\2\2\u018b\u018c\3\2\2\2\u018c\u018a\3\2\2\2\u018c"+
		"\u018d\3\2\2\2\u018d\u018f\3\2\2\2\u018e\u0181\3\2\2\2\u018e\u0188\3\2"+
		"\2\2\u018ft\3\2\2\2\u0190\u0192\5{>\2\u0191\u0190\3\2\2\2\u0192\u0193"+
		"\3\2\2\2\u0193\u0191\3\2\2\2\u0193\u0194\3\2\2\2\u0194v\3\2\2\2\u0195"+
		"\u019b\7&\2\2\u0196\u0197\7\62\2\2\u0197\u019b\7z\2\2\u0198\u0199\7\62"+
		"\2\2\u0199\u019b\7Z\2\2\u019a\u0195\3\2\2\2\u019a\u0196\3\2\2\2\u019a"+
		"\u0198\3\2\2\2\u019b\u019d\3\2\2\2\u019c\u019e\5}?\2\u019d\u019c\3\2\2"+
		"\2\u019e\u019f\3\2\2\2\u019f\u019d\3\2\2\2\u019f\u01a0\3\2\2\2\u01a0x"+
		"\3\2\2\2\u01a1\u01a2\t\5\2\2\u01a2z\3\2\2\2\u01a3\u01a4\t\6\2\2\u01a4"+
		"|\3\2\2\2\u01a5\u01a6\t\7\2\2\u01a6~\3\2\2\2\u01a7\u01ab\5\u0081A\2\u01a8"+
		"\u01aa\5\u0083B\2\u01a9\u01a8\3\2\2\2\u01aa\u01ad\3\2\2\2\u01ab\u01a9"+
		"\3\2\2\2\u01ab\u01ac\3\2\2\2\u01ac\u0080\3\2\2\2\u01ad\u01ab\3\2\2\2\u01ae"+
		"\u01af\t\b\2\2\u01af\u0082\3\2\2\2\u01b0\u01b1\t\t\2\2\u01b1\u0084\3\2"+
		"\2\2\u01b2\u01b4\t\n\2\2\u01b3\u01b2\3\2\2\2\u01b4\u01b5\3\2\2\2\u01b5"+
		"\u01b3\3\2\2\2\u01b5\u01b6\3\2\2\2\u01b6\u01b7\3\2\2\2\u01b7\u01b8\bC"+
		"\2\2\u01b8\u0086\3\2\2\2\u01b9\u01ba\7\61\2\2\u01ba\u01bb\7\61\2\2\u01bb"+
		"\u01bf\3\2\2\2\u01bc\u01be\n\13\2\2\u01bd\u01bc\3\2\2\2\u01be\u01c1\3"+
		"\2\2\2\u01bf\u01bd\3\2\2\2\u01bf\u01c0\3\2\2\2\u01c0\u01c2\3\2\2\2\u01c1"+
		"\u01bf\3\2\2\2\u01c2\u01c3\bD\2\2\u01c3\u0088\3\2\2\2\u01c4\u01c5\7\61"+
		"\2\2\u01c5\u01c6\7,\2\2\u01c6\u01ca\3\2\2\2\u01c7\u01c9\13\2\2\2\u01c8"+
		"\u01c7\3\2\2\2\u01c9\u01cc\3\2\2\2\u01ca\u01cb\3\2\2\2\u01ca\u01c8\3\2"+
		"\2\2\u01cb\u01cd\3\2\2\2\u01cc\u01ca\3\2\2\2\u01cd\u01ce\7,\2\2\u01ce"+
		"\u01cf\7\61\2\2\u01cf\u01d0\3\2\2\2\u01d0\u01d1\bE\2\2\u01d1\u008a\3\2"+
		"\2\2\35\2\u0121\u0127\u0129\u0132\u013f\u0143\u0148\u014f\u0154\u015b"+
		"\u0160\u0167\u016e\u0173\u017a\u017f\u0186\u018c\u018e\u0193\u019a\u019f"+
		"\u01ab\u01b5\u01bf\u01ca\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}