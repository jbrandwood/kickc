@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()
main: scope:[main]  from @1
  [4] *(((byte*))(word/signed word/dword/signed dword) $450+(byte/signed byte/word/signed word/dword/signed dword) 2) ← (byte/word/signed word/dword/signed dword) $f0
  [5] *(((byte*))(word/signed word/dword/signed dword) $450+(byte/signed byte/word/signed word/dword/signed dword) 3) ← (byte/signed byte/word/signed word/dword/signed dword) $f
  [6] call fct 
  [7] (byte) fct::return#0 ← (byte) fct::return#2
  to:main::@1
main::@1: scope:[main]  from main
  [8] (byte) main::a1#0 ← (byte) fct::return#0
  [9] *((const byte*) main::screen#0) ← (byte) main::a1#0
  [10] call fct 
  [11] (byte) fct::return#1 ← (byte) fct::return#2
  to:main::@2
main::@2: scope:[main]  from main::@1
  [12] (byte) main::a2#0 ← (byte) fct::return#1
  [13] *((const byte*) main::screen#0+(byte/signed byte/word/signed word/dword/signed dword) 1) ← (byte) main::a2#0
  to:main::@return
main::@return: scope:[main]  from main::@2
  [14] return 
  to:@return
fct: scope:[fct]  from main main::@1
  [15] (byte*) fct::z#2 ← phi( main/((byte*))(word/signed word/dword/signed dword) $450 main::@1/++((byte*))(word/signed word/dword/signed dword) $450 )
  [15] (byte) fct::x#2 ← phi( main/(byte/word/signed word/dword/signed dword) $aa main::@1/(byte/signed byte/word/signed word/dword/signed dword) $55 )
  [16] (byte) fct::return#2 ← (byte) fct::x#2 & *((byte*) fct::z#2 + (byte/signed byte/word/signed word/dword/signed dword) 2)
  to:fct::@return
fct::@return: scope:[fct]  from fct
  [17] return 
  to:@return
