(label) @1
(label) @begin
(label) @end
(const byte) OFFSET_STRUCT_POINT_Y = (byte) 1
(const byte) OFFSET_STRUCT_VECTOR_P2 = (byte) 2
(byte) Point::x loadstore
(byte) Point::y loadstore
(const byte*) SCREEN = (byte*) 1024
(const word) STACK_BASE = (word) $103
(struct Point) Vector::p1 loadstore zp[2]:8
(struct Point) Vector::p2 loadstore zp[2]:10
__stackcall (struct Vector()) get((byte) get::i)
(byte~) get::$0 zp[1]:3 1.0
(byte~) get::$1 reg byte x 1.0
(byte~) get::$2 zp[1]:4 1.0
(label) get::@return
(const byte) get::OFFSET_STACK_I = (byte) 0
(byte) get::i
(byte) get::i#0 reg byte y 2.5
(struct Vector) get::return
(struct Point) get::return_p1
(byte) get::return_p1_x
(byte) get::return_p1_x#0 reg byte x 1.0
(byte) get::return_p1_y
(byte) get::return_p1_y#0 reg byte y 1.0
(struct Point) get::return_p2
(byte) get::return_p2_x
(byte) get::return_p2_x#0 return_p2_x zp[1]:6 1.0
(byte) get::return_p2_y
(byte) get::return_p2_y#0 return_p2_y zp[1]:7 1.0
(struct Vector) get::v loadstore zp[4]:16
(byte) idx loadstore zp[1]:2 0.8648648648648649
__stackcall (void()) main()
(byte~) main::$1_p1_x reg byte y 5.5
(byte~) main::$1_p1_y reg byte x 5.5
(byte~) main::$1_p2_x zp[1]:6 5.5
(byte~) main::$1_p2_y zp[1]:7 5.5
(label) main::@1
(label) main::@2
(label) main::@return
(byte) main::i loadstore zp[1]:5 2.3000000000000003
(struct Vector) main::v loadstore zp[4]:12
__stackcall (void()) print((byte) print::v_p1_x , (byte) print::v_p1_y , (byte) print::v_p2_x , (byte) print::v_p2_y)
(label) print::@return
(const byte) print::OFFSET_STACK_V_P1_X = (byte) 3
(const byte) print::OFFSET_STACK_V_P1_Y = (byte) 2
(const byte) print::OFFSET_STACK_V_P2_X = (byte) 1
(const byte) print::OFFSET_STACK_V_P2_Y = (byte) 0
(struct Point) print::v_p1
(byte) print::v_p1_x
(byte) print::v_p1_x#0 reg byte y 1.0
(byte) print::v_p1_y
(byte) print::v_p1_y#0 v_p1_y zp[1]:3 0.8
(struct Point) print::v_p2
(byte) print::v_p2_x
(byte) print::v_p2_x#0 v_p2_x zp[1]:4 0.6666666666666666
(byte) print::v_p2_y
(byte) print::v_p2_y#0 reg byte x 0.5714285714285714

zp[1]:2 [ idx ]
reg byte y [ print::v_p1_x#0 ]
reg byte x [ print::v_p2_y#0 ]
reg byte y [ get::i#0 ]
zp[1]:3 [ get::$0 print::v_p1_y#0 ]
reg byte x [ get::$1 ]
zp[1]:4 [ get::$2 print::v_p2_x#0 ]
reg byte x [ get::return_p1_x#0 ]
reg byte y [ get::return_p1_y#0 ]
zp[1]:5 [ main::i ]
reg byte y [ main::$1_p1_x ]
reg byte x [ main::$1_p1_y ]
zp[1]:6 [ main::$1_p2_x get::return_p2_x#0 ]
zp[1]:7 [ main::$1_p2_y get::return_p2_y#0 ]
zp[2]:8 [ Vector::p1 ]
zp[2]:10 [ Vector::p2 ]
zp[4]:12 [ main::v ]
zp[4]:16 [ get::v ]
