
(void()) main()
main: scope:[main]  from
  [0] *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_BORDER_COLOR) ← (const nomodify byte) WHITE
  [1] *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_BG_COLOR1) ← (const nomodify byte) DARK_GREY
  [2] *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_BG_COLOR) ← *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_BG_COLOR1)
  [3] *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_BG_COLOR2) ← (const nomodify byte) BLACK
  to:main::toD0181
main::toD0181: scope:[main]  from main
  [4] phi()
  to:main::@3
main::@3: scope:[main]  from main::toD0181
  [5] *((const nomodify byte*) D018) ← (const byte) main::toD0181_return#0
  [6] *((const nomodify byte*) D016) ← (const nomodify byte) VIC_MCM|(const nomodify byte) VIC_CSEL
  [7] call memset 
  to:main::@4
main::@4: scope:[main]  from main::@3
  [8] phi()
  [9] call memset 
  to:main::@1
main::@1: scope:[main]  from main::@1 main::@4
  [10] (byte) main::ch#2 ← phi( main::@1/(byte) main::ch#1 main::@4/(byte) 0 )
  [11] *((const byte*) SCREEN + (byte) main::ch#2) ← (byte) main::ch#2
  [12] (byte) main::ch#1 ← ++ (byte) main::ch#2
  [13] if((byte) main::ch#1!=(byte) $f0) goto main::@1
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2
  [14] *((const byte*) SCREEN+(word) $3e7) ← ++ *((const byte*) SCREEN+(word) $3e7)
  kickasm() {{ inc $d020  }}
  to:main::@2

(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
memset: scope:[memset]  from main::@3 main::@4
  [16] (byte) memset::c#4 ← phi( main::@3/(const nomodify byte) BLACK main::@4/(const nomodify byte) WHITE|(byte) 8 )
  [16] (void*) memset::str#3 ← phi( main::@3/(void*)(const byte*) SCREEN main::@4/(void*)(const nomodify byte*) COLS )
  to:memset::@1
memset::@1: scope:[memset]  from memset
  [17] (byte*) memset::end#0 ← (byte*)(void*) memset::str#3 + (word)(number) $28*(number) $19
  [18] (byte*) memset::dst#4 ← (byte*)(void*) memset::str#3
  to:memset::@2
memset::@2: scope:[memset]  from memset::@1 memset::@3
  [19] (byte*) memset::dst#2 ← phi( memset::@1/(byte*) memset::dst#4 memset::@3/(byte*) memset::dst#1 )
  [20] if((byte*) memset::dst#2!=(byte*) memset::end#0) goto memset::@3
  to:memset::@return
memset::@return: scope:[memset]  from memset::@2
  [21] return 
  to:@return
memset::@3: scope:[memset]  from memset::@2
  [22] *((byte*) memset::dst#2) ← (byte) memset::c#4
  [23] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2
  to:memset::@2
