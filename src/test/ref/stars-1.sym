__constant char * const COLORRAM = (char *) 55296
__constant char * const DEFAULT_SCREEN = (char *) 1024
__constant char DIGITS[] = "0123456789abcdef"z
__constant const char LIGHT_BLUE = $e
__constant char OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
__constant char RADIX_DECIMAL_VALUES_CHAR[] = { $64, $a }
__constant unsigned int RADIX_HEXADECIMAL_VALUES[] = { $1000, $100, $10 }
__constant char SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
__constant unsigned int STACK_BASE = $103
void __start()
void clrscr()
char clrscr::c
char clrscr::c#1 // reg byte y 20002.0
char clrscr::c#2 // reg byte y 12501.25
char clrscr::l
char clrscr::l#1 // reg byte x 2002.0
char clrscr::l#2 // reg byte x 333.6666666666667
char *clrscr::line_cols
char *clrscr::line_cols#1 // line_cols zp[2]:13 1001.0
char *clrscr::line_cols#5 // line_cols zp[2]:13 1500.375
char *clrscr::line_text
char *clrscr::line_text#1 // line_text zp[2]:9 667.3333333333334
char *clrscr::line_text#5 // line_text zp[2]:9 1714.7142857142858
void conio_c64_init()
__constant char * const conio_c64_init::BASIC_CURSOR_LINE = (char *) 214
char conio_c64_init::line
char conio_c64_init::line#0 // reg byte x 11.0
char conio_c64_init::line#2 // reg byte x 22.0
__loadstore char conio_cursor_x // zp[1]:18 45.0
__loadstore char conio_cursor_y // zp[1]:19 23.0
__loadstore char *conio_line_color // zp[2]:22 19.545454545454543
__loadstore char *conio_line_text // zp[2]:20 20.476190476190478
__stackcall void cputc(char c)
__constant char cputc::OFFSET_STACK_C = 0
char cputc::c
char cputc::c#0 // reg byte a 3.0
void cputln()
void cscroll()
void gotoxy(char x , char y)
char *gotoxy::$5 // zp[2]:28 202.0
char *gotoxy::$6 // zp[2]:24 202.0
unsigned int gotoxy::$7 // zp[2]:24 151.5
unsigned int gotoxy::$8 // zp[2]:26 202.0
unsigned int gotoxy::$9 // zp[2]:24 202.0
unsigned int gotoxy::line_offset
unsigned int gotoxy::line_offset#0 // line_offset zp[2]:24 101.0
char gotoxy::x
__constant char gotoxy::x#2 = 0 // x
char gotoxy::y
char gotoxy::y#2 // reg byte x 71.0
char gotoxy::y#4 // reg byte x 67.33333333333333
void main()
char main::i
char main::i#1 // i zp[1]:2 202.0
char main::i#2 // i zp[1]:2 20.2
struct $0 *main::pStar
struct $0 *main::pStar#1 // pStar zp[2]:3 101.0
struct $0 *main::pStar#2 // pStar zp[2]:3 14.428571428571429
__constant char main::s[2] = " "
__constant char main::s2[2] = "
"
void * memcpy(void *destination , void *source , unsigned int num)
void *memcpy::destination
void *memcpy::destination#2 // destination zp[2]:35
char *memcpy::dst
char *memcpy::dst#1 // dst zp[2]:35 10001.0
char *memcpy::dst#2 // dst zp[2]:35 10334.666666666666
char *memcpy::dst#4 // dst zp[2]:35 2002.0
unsigned int memcpy::num
void *memcpy::return
void *memcpy::source
void *memcpy::source#2 // source zp[2]:11
char *memcpy::src
char *memcpy::src#1 // src zp[2]:11 20002.0
char *memcpy::src#2 // src zp[2]:11 10251.25
char *memcpy::src#4 // src zp[2]:11 1001.0
char *memcpy::src_end
char *memcpy::src_end#0 // src_end zp[2]:33 1375.25
void * memset(void *str , char c , unsigned int num)
char memset::c
char memset::c#4 // reg byte x 1428.7142857142858
char *memset::dst
char *memset::dst#1 // dst zp[2]:11 20002.0
char *memset::dst#2 // dst zp[2]:11 13668.333333333332
char *memset::dst#4 // dst zp[2]:11 2002.0
char *memset::end
char *memset::end#0 // end zp[2]:35 1833.6666666666665
unsigned int memset::num
void *memset::return
void *memset::str
void *memset::str#3 // str zp[2]:11
__loadstore struct printf_buffer_number printf_buffer = {} // mem[12]
void printf_number_buffer(void (*putc)(char) , char buffer_sign , char *buffer_digits , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
unsigned int printf_number_buffer::$19 // zp[2]:30 10001.0
struct printf_buffer_number printf_number_buffer::buffer
char *printf_number_buffer::buffer_digits
char printf_number_buffer::buffer_sign
char printf_number_buffer::buffer_sign#0 // buffer_sign zp[1]:8 2002.0
char printf_number_buffer::buffer_sign#1 // buffer_sign zp[1]:8 2002.0
char printf_number_buffer::buffer_sign#10 // buffer_sign zp[1]:8 1524.047619047619
struct printf_format_number printf_number_buffer::format
char printf_number_buffer::format_justify_left
char printf_number_buffer::format_justify_left#10 // format_justify_left zp[1]:5 606.1212121212121
char printf_number_buffer::format_min_length
char printf_number_buffer::format_min_length#2 // reg byte x 1000.1
char printf_number_buffer::format_radix
char printf_number_buffer::format_sign_always
char printf_number_buffer::format_upper_case
char printf_number_buffer::format_upper_case#10 // format_upper_case zp[1]:32 357.17857142857144
char printf_number_buffer::format_zero_padding
char printf_number_buffer::format_zero_padding#10 // format_zero_padding zp[1]:7 882.4411764705882
signed char printf_number_buffer::len
signed char printf_number_buffer::len#0 // reg byte y 15001.5
signed char printf_number_buffer::len#1 // reg byte y 20002.0
signed char printf_number_buffer::len#2 // reg byte y 30003.0
signed char printf_number_buffer::padding
signed char printf_number_buffer::padding#1 // padding zp[1]:6 10001.0
signed char printf_number_buffer::padding#10 // padding zp[1]:6 1666.8333333333333
void (*printf_number_buffer::putc)(char)
void (*printf_number_buffer::putc#10)(char) // putc zp[2]:9 1111.2222222222222
void printf_padding(void (*putc)(char) , char pad , char length)
char printf_padding::i
char printf_padding::i#1 // i zp[1]:17 2.0000002E7
char printf_padding::i#2 // i zp[1]:17 1.0000001E7
char printf_padding::length
char printf_padding::length#0 // length zp[1]:15 20002.0
char printf_padding::length#1 // length zp[1]:15 20002.0
char printf_padding::length#2 // length zp[1]:15 20002.0
char printf_padding::length#4 // length zp[1]:15 2006000.8
char printf_padding::pad
char printf_padding::pad#5 // pad zp[1]:16 1666666.8333333333
void (*printf_padding::putc)(char)
void (*printf_padding::putc#0)(char) // putc zp[2]:9 10001.0
void (*printf_padding::putc#1)(char) // putc zp[2]:9 10001.0
void (*printf_padding::putc#2)(char) // putc zp[2]:9 10001.0
void (*printf_padding::putc#5)(char) // putc zp[2]:9 300030.0
void printf_str(void (*putc)(char) , const char *s)
char printf_str::c
char printf_str::c#1 // reg byte a 1.0000001E7
void (*printf_str::putc)(char)
void (*printf_str::putc#0)(char) // putc zp[2]:9 20002.0
void (*printf_str::putc#6)(char) // putc zp[2]:9 100010.0
const char *printf_str::s
const char *printf_str::s#0 // s zp[2]:13 1.0000001E7
const char *printf_str::s#5 // s zp[2]:13 1.5050002E7
const char *printf_str::s#6 // s zp[2]:13 100001.0
void printf_uchar(void (*putc)(char) , char uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_format_number printf_uchar::format
char printf_uchar::format_justify_left
char printf_uchar::format_min_length
char printf_uchar::format_radix
char printf_uchar::format_sign_always
char printf_uchar::format_upper_case
char printf_uchar::format_zero_padding
void (*printf_uchar::putc)(char)
char printf_uchar::uvalue
char printf_uchar::uvalue#0 // reg byte x 202.0
char printf_uchar::uvalue#1 // reg byte x 202.0
char printf_uchar::uvalue#2 // reg byte x 601.5
void printf_uint(void (*putc)(char) , unsigned int uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_format_number printf_uint::format
char printf_uint::format_justify_left
__constant char printf_uint::format_justify_left#0 = 0 // format_justify_left
char printf_uint::format_min_length
__constant char printf_uint::format_min_length#0 = 0 // format_min_length
char printf_uint::format_radix
char printf_uint::format_sign_always
char printf_uint::format_upper_case
__constant char printf_uint::format_upper_case#0 = 0 // format_upper_case
char printf_uint::format_zero_padding
__constant char printf_uint::format_zero_padding#0 = 0 // format_zero_padding
void (*printf_uint::putc)(char)
__constant void (*printf_uint::putc#0)(char) = &cputc // putc
unsigned int printf_uint::uvalue
unsigned int printf_uint::uvalue#0 // uvalue zp[2]:9 367.33333333333337
__constant struct $0 stars[5] = { { star_x: $32, star_y: $32, speed_x: 2, speed_y: 7 }, { star_x: $28, star_y: $46, speed_x: 2, speed_y: 7 }, { star_x: $1e, star_y: $14, speed_x: 2, speed_y: 7 }, { star_x: $46, star_y: $a, speed_x: 2, speed_y: 7 }, { star_x: $28, star_y: $50, speed_x: 2, speed_y: 7 } }
unsigned int strlen(char *str)
unsigned int strlen::len
unsigned int strlen::len#1 // len zp[2]:30 1.0000001E7
unsigned int strlen::len#2 // len zp[2]:30 5002500.75
unsigned int strlen::return
unsigned int strlen::return#2 // return zp[2]:30 20002.0
char *strlen::str
char *strlen::str#0 // str zp[2]:13 2.0000002E7
char *strlen::str#2 // str zp[2]:13 1.0000001E7
char * strupr(char *str)
char strupr::$0 // reg byte a 2.0000002E7
char *strupr::return
char *strupr::src
char *strupr::src#1 // src zp[2]:30 2.0000002E7
char *strupr::src#2 // src zp[2]:30 7142857.857142856
char *strupr::str
__constant char *strupr::str#0 = (char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS // str
char toupper(char ch)
char toupper::ch
char toupper::ch#0 // reg byte a 1.70000002E8
char toupper::return
char toupper::return#0 // reg byte a 2.00000002E8
char toupper::return#2 // reg byte a 1.0333333466666667E8
char toupper::return#3 // reg byte a 2.0000002E7
void uctoa(char value , char *buffer , char radix)
char *uctoa::buffer
char *uctoa::buffer#11 // buffer zp[2]:9 335000.50000000006
char *uctoa::buffer#14 // buffer zp[2]:9 1500001.5
char *uctoa::buffer#3 // buffer zp[2]:9 20002.0
char *uctoa::buffer#4 // buffer zp[2]:9 2000002.0
char uctoa::digit
char uctoa::digit#1 // digit zp[1]:7 2000002.0
char uctoa::digit#2 // digit zp[1]:7 307692.6153846154
char uctoa::digit_value
char uctoa::digit_value#0 // digit_value zp[1]:32 600000.6000000001
char *uctoa::digit_values
char uctoa::max_digits
char uctoa::radix
char uctoa::started
char uctoa::started#2 // started zp[1]:8 600000.6000000001
char uctoa::started#4 // started zp[1]:8 1000001.0
char uctoa::value
char uctoa::value#0 // reg byte x 1000001.0
char uctoa::value#1 // reg byte x 5501.0
char uctoa::value#2 // reg byte x 670001.0000000001
char uctoa::value#6 // reg byte x 1500001.5
char uctoa_append(char *buffer , char value , char sub)
char *uctoa_append::buffer
char *uctoa_append::buffer#0 // buffer zp[2]:9 1375000.25
char uctoa_append::digit
char uctoa_append::digit#1 // reg byte y 1.0000000001E10
char uctoa_append::digit#2 // reg byte y 1.00050000015E10
char uctoa_append::return
char uctoa_append::return#0 // reg byte x 2000002.0
char uctoa_append::sub
char uctoa_append::sub#0 // sub zp[1]:32 3.3335000005E9
char uctoa_append::value
char uctoa_append::value#0 // reg byte x 3666667.333333333
char uctoa_append::value#1 // reg byte x 2.0000000002E10
char uctoa_append::value#2 // reg byte x 5.001833334166666E9
void utoa(unsigned int value , char *buffer , char radix)
char utoa::$10 // reg byte a 2000002.0
char utoa::$11 // reg byte x 20002.0
char *utoa::buffer
char *utoa::buffer#11 // buffer zp[2]:13 287143.2857142857
char *utoa::buffer#14 // buffer zp[2]:13 1500001.5
char *utoa::buffer#3 // buffer zp[2]:13 20002.0
char *utoa::buffer#4 // buffer zp[2]:13 2000002.0
char utoa::digit
char utoa::digit#1 // digit zp[1]:5 2000002.0
char utoa::digit#2 // digit zp[1]:5 285714.5714285714
unsigned int utoa::digit_value
unsigned int utoa::digit_value#0 // digit_value zp[2]:30 600000.6000000001
unsigned int *utoa::digit_values
char utoa::max_digits
__constant char utoa::max_digits#2 = 4 // max_digits
char utoa::radix
char utoa::started
char utoa::started#2 // reg byte x 500000.5
char utoa::started#4 // reg byte x 1000001.0
unsigned int utoa::value
unsigned int utoa::value#0 // value zp[2]:9 1000001.0
unsigned int utoa::value#1 // value zp[2]:9 5501.0
unsigned int utoa::value#2 // value zp[2]:9 572857.857142857
unsigned int utoa::value#6 // value zp[2]:9 1500001.5
unsigned int utoa_append(char *buffer , unsigned int value , unsigned int sub)
char *utoa_append::buffer
char *utoa_append::buffer#0 // buffer zp[2]:13 1375000.25
char utoa_append::digit
char utoa_append::digit#1 // reg byte x 1.0000000001E10
char utoa_append::digit#2 // reg byte x 1.00050000015E10
unsigned int utoa_append::return
unsigned int utoa_append::return#0 // return zp[2]:9 2000002.0
unsigned int utoa_append::sub
unsigned int utoa_append::sub#0 // sub zp[2]:30 3.3335000005E9
unsigned int utoa_append::value
unsigned int utoa_append::value#0 // value zp[2]:9 3666667.333333333
unsigned int utoa_append::value#1 // value zp[2]:9 2.0000000002E10
unsigned int utoa_append::value#2 // value zp[2]:9 5.001833334166666E9

reg byte x [ conio_c64_init::line#2 conio_c64_init::line#0 ]
zp[1]:2 [ main::i#2 main::i#1 ]
zp[2]:3 [ main::pStar#2 main::pStar#1 ]
reg byte x [ gotoxy::y#4 gotoxy::y#2 ]
reg byte x [ clrscr::l#2 clrscr::l#1 ]
reg byte y [ clrscr::c#2 clrscr::c#1 ]
reg byte x [ printf_uchar::uvalue#2 printf_uchar::uvalue#0 printf_uchar::uvalue#1 ]
reg byte x [ utoa::started#2 utoa::started#4 ]
reg byte x [ printf_number_buffer::format_min_length#2 ]
zp[1]:5 [ printf_number_buffer::format_justify_left#10 utoa::digit#2 utoa::digit#1 ]
reg byte y [ printf_number_buffer::len#2 printf_number_buffer::len#0 printf_number_buffer::len#1 ]
zp[1]:6 [ printf_number_buffer::padding#10 printf_number_buffer::padding#1 ]
zp[1]:7 [ uctoa::digit#2 uctoa::digit#1 printf_number_buffer::format_zero_padding#10 ]
reg byte x [ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 ]
zp[1]:8 [ uctoa::started#2 uctoa::started#4 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ]
zp[2]:9 [ uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 uctoa::buffer#3 uctoa_append::buffer#0 utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 printf_uint::uvalue#0 utoa_append::return#0 printf_str::putc#6 printf_str::putc#0 printf_number_buffer::putc#10 printf_padding::putc#5 printf_padding::putc#1 printf_padding::putc#2 printf_padding::putc#0 clrscr::line_text#5 clrscr::line_text#1 ]
zp[2]:11 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
reg byte x [ memset::c#4 ]
reg byte x [ utoa_append::digit#2 utoa_append::digit#1 ]
zp[2]:13 [ strlen::str#2 strlen::str#0 utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 printf_str::s#5 printf_str::s#6 printf_str::s#0 clrscr::line_cols#5 clrscr::line_cols#1 ]
zp[1]:15 [ printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ]
zp[1]:16 [ printf_padding::pad#5 ]
zp[1]:17 [ printf_padding::i#2 printf_padding::i#1 ]
reg byte x [ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ]
reg byte y [ uctoa_append::digit#2 uctoa_append::digit#1 ]
reg byte a [ toupper::return#2 toupper::return#0 toupper::ch#0 ]
zp[1]:18 [ conio_cursor_x ]
zp[1]:19 [ conio_cursor_y ]
zp[2]:20 [ conio_line_text ]
zp[2]:22 [ conio_line_color ]
reg byte a [ cputc::c#0 ]
zp[2]:24 [ gotoxy::$7 gotoxy::$9 gotoxy::line_offset#0 gotoxy::$6 ]
zp[2]:26 [ gotoxy::$8 ]
zp[2]:28 [ gotoxy::$5 ]
reg byte a [ printf_str::c#1 ]
reg byte x [ utoa::$11 ]
reg byte a [ utoa::$10 ]
zp[2]:30 [ utoa::digit_value#0 utoa_append::sub#0 strlen::len#2 strlen::len#1 strlen::return#2 printf_number_buffer::$19 strupr::src#2 strupr::src#1 ]
zp[1]:32 [ uctoa::digit_value#0 uctoa_append::sub#0 printf_number_buffer::format_upper_case#10 ]
reg byte x [ uctoa_append::return#0 ]
zp[2]:33 [ memcpy::src_end#0 ]
zp[2]:35 [ memset::end#0 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
reg byte a [ toupper::return#3 ]
reg byte a [ strupr::$0 ]
mem[12] [ printf_buffer ]
