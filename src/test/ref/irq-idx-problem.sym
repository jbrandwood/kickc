(label) @1
(label) @2
(label) @begin
(label) @end
(byte*) CIA1_INTERRUPT
(const byte*) CIA1_INTERRUPT#0 CIA1_INTERRUPT = (byte*) 56333
(byte) CIA_INTERRUPT_CLEAR
(const byte) CIA_INTERRUPT_CLEAR#0 CIA_INTERRUPT_CLEAR = (byte) $7f
(byte[]) IRQ_CHANGE_IDX
(const byte[]) IRQ_CHANGE_IDX#0 IRQ_CHANGE_IDX = { (byte) $20, (byte) $21, (const byte) IRQ_CHANGE_NEXT#0, (byte) $20, (byte) $21, (const byte) IRQ_CHANGE_NEXT#0, (byte) $20, (byte) $21, (const byte) IRQ_CHANGE_NEXT#0, (byte) $20, (byte) $21, (const byte) IRQ_CHANGE_NEXT#0 }
(byte) IRQ_CHANGE_NEXT
(const byte) IRQ_CHANGE_NEXT#0 IRQ_CHANGE_NEXT = (byte) $7f
(byte[]) IRQ_CHANGE_VAL
(const byte[]) IRQ_CHANGE_VAL#0 IRQ_CHANGE_VAL = { (byte) $b, (byte) $b, (byte) $63, (byte) 0, (byte) 0, (byte) $80, (byte) 7, (byte) 7, (byte) $83, (byte) 0, (byte) 0, (byte) $60 }
(byte*) IRQ_ENABLE
(const byte*) IRQ_ENABLE#0 IRQ_ENABLE = (byte*) 53274
(byte) IRQ_RASTER
(const byte) IRQ_RASTER#0 IRQ_RASTER = (byte) 1
(byte*) IRQ_STATUS
(const byte*) IRQ_STATUS#0 IRQ_STATUS = (byte*) 53273
(void()**) KERNEL_IRQ
(const void()**) KERNEL_IRQ#0 KERNEL_IRQ = (void()**) 788
(byte*) RASTER
(const byte*) RASTER#0 RASTER = (byte*) 53266
(byte*) SCREEN
(const byte*) SCREEN#0 SCREEN = (byte*) 1024
(byte*) VIC_BASE
(const byte*) VIC_BASE#0 VIC_BASE = (byte*) 53248
(byte*) VIC_CONTROL
(const byte*) VIC_CONTROL#0 VIC_CONTROL = (byte*) 53265
(byte) VIC_SIZE
(const byte) VIC_SIZE#0 VIC_SIZE = (byte) $30
(byte) irq_idx
(byte) irq_idx#0 irq_idx zp ZP_BYTE:2 4.0
(byte) irq_idx#1 irq_idx zp ZP_BYTE:2 4.375
(byte) irq_idx#2 irq_idx zp ZP_BYTE:2 4.0
(byte) irq_idx#3 irq_idx zp ZP_BYTE:2 40.0
(byte) irq_idx#4 irq_idx zp ZP_BYTE:2 19.0
(void()) main()
(label) main::@return
interrupt(KERNEL_MIN)(void()) table_driven_irq()
(label) table_driven_irq::@1
(label) table_driven_irq::@2
(label) table_driven_irq::@3
(label) table_driven_irq::@4
(label) table_driven_irq::@5
(label) table_driven_irq::@6
(label) table_driven_irq::@return
(byte) table_driven_irq::idx
(byte) table_driven_irq::idx#0 reg byte a 11.0
(byte) table_driven_irq::val
(byte) table_driven_irq::val#0 reg byte x 6.166666666666666

zp ZP_BYTE:2 [ irq_idx#3 irq_idx#4 irq_idx#0 irq_idx#1 irq_idx#2 ]
reg byte a [ table_driven_irq::idx#0 ]
reg byte x [ table_driven_irq::val#0 ]
