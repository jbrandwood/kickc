__constant char BINARY = 2
__constant char * const COLORRAM = (char *) 55296
__constant char DECIMAL = $a
__constant char * const DEFAULT_SCREEN = (char *) 1024
__constant char DIGITS[] = "0123456789abcdef"z
__constant char HEXADECIMAL = $10
__constant const char LIGHT_BLUE = $e
__constant char OCTAL = 8
__constant char OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
__constant unsigned int RADIX_BINARY_VALUES[] = { $8000, $4000, $2000, $1000, $800, $400, $200, $100, $80, $40, $20, $10, 8, 4, 2 }
__constant unsigned int RADIX_DECIMAL_VALUES[] = { $2710, $3e8, $64, $a }
__constant char RADIX_DECIMAL_VALUES_CHAR[] = { $64, $a }
__constant unsigned long RADIX_DECIMAL_VALUES_LONG[] = { $3b9aca00, $5f5e100, $989680, $f4240, $186a0, $2710, $3e8, $64, $a }
__constant unsigned int RADIX_HEXADECIMAL_VALUES[] = { $1000, $100, $10 }
__constant unsigned int RADIX_OCTAL_VALUES[] = { $8000, $1000, $200, $40, 8 }
__constant char SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
__constant unsigned int STACK_BASE = $103
void __start()
void clrscr()
char clrscr::c
char clrscr::c#1 // reg byte y 20002.0
char clrscr::c#2 // reg byte y 12501.25
char clrscr::l
char clrscr::l#1 // reg byte x 2002.0
char clrscr::l#2 // reg byte x 333.6666666666667
char *clrscr::line_cols
char *clrscr::line_cols#1 // line_cols zp[2]:13 1001.0
char *clrscr::line_cols#5 // line_cols zp[2]:13 1500.375
char *clrscr::line_text
char *clrscr::line_text#1 // line_text zp[2]:6 667.3333333333334
char *clrscr::line_text#5 // line_text zp[2]:6 1714.7142857142858
void conio_c64_init()
__constant char * const conio_c64_init::BASIC_CURSOR_LINE = (char *) 214
char conio_c64_init::line
char conio_c64_init::line#0 // reg byte x 11.0
char conio_c64_init::line#2 // reg byte x 22.0
__loadstore char conio_cursor_x // zp[1]:21 50.294117647058826
__loadstore char conio_cursor_y // zp[1]:22 644.1800000000001
__loadstore char *conio_line_color // zp[2]:25 464.77083333333326
__loadstore char *conio_line_text // zp[2]:23 455.28571428571433
__stackcall void cputc(char c)
__constant char cputc::OFFSET_STACK_C = 0
char cputc::c
char cputc::c#0 // reg byte a 151.5
void cputln()
void cscroll()
void gotoxy(char x , char y)
char *gotoxy::$5 // zp[2]:32 202.0
char *gotoxy::$6 // zp[2]:28 202.0
unsigned int gotoxy::$7 // zp[2]:28 151.5
unsigned int gotoxy::$8 // zp[2]:30 202.0
unsigned int gotoxy::$9 // zp[2]:28 202.0
unsigned int gotoxy::line_offset
unsigned int gotoxy::line_offset#0 // line_offset zp[2]:28 101.0
char gotoxy::x
__constant char gotoxy::x#2 = 0 // x
char gotoxy::y
char gotoxy::y#2 // reg byte x 71.0
char gotoxy::y#4 // reg byte x 67.33333333333333
void main()
__loadstore volatile char main::c // zp[1]:27 11.0
__constant char main::s[9] = "A char: "
__constant char main::s1[2] = "
"
__constant char main::s10[$f] = "A signed int: "
__constant char main::s12[$12] = "An unsigned int: "
__constant char main::s14[$10] = "A signed long: "
__constant char main::s16[$13] = "An unsigned long: "
__constant char main::s2[$c] = "A pointer: "
__constant char main::s4[$c] = "A percent: "
__constant char main::s6[$10] = "A signed char: "
__constant char main::s8[$13] = "An unsigned char: "
__constant signed char main::sc = -$c
__constant int main::si = -$4d2
__constant long main::sl = -$1e240
__constant char main::uc = $22
__constant unsigned int main::ui = $162e
__constant unsigned long main::ul = $8aa52
void * memcpy(void *destination , void *source , unsigned int num)
void *memcpy::destination
void *memcpy::destination#2 // destination zp[2]:43
char *memcpy::dst
char *memcpy::dst#1 // dst zp[2]:43 1000001.0
char *memcpy::dst#2 // dst zp[2]:43 1033334.6666666667
char *memcpy::dst#4 // dst zp[2]:43 200002.0
unsigned int memcpy::num
void *memcpy::return
void *memcpy::source
void *memcpy::source#2 // source zp[2]:15
char *memcpy::src
char *memcpy::src#1 // src zp[2]:15 2000002.0
char *memcpy::src#2 // src zp[2]:15 1025001.25
char *memcpy::src#4 // src zp[2]:15 100001.0
char *memcpy::src_end
char *memcpy::src_end#0 // src_end zp[2]:41 137500.25
void * memset(void *str , char c , unsigned int num)
char memset::c
char memset::c#4 // reg byte x 142857.2857142857
char *memset::dst
char *memset::dst#1 // dst zp[2]:15 2000002.0
char *memset::dst#2 // dst zp[2]:15 1366668.3333333335
char *memset::dst#4 // dst zp[2]:15 200002.0
char *memset::end
char *memset::end#0 // end zp[2]:43 183333.6666666667
unsigned int memset::num
void *memset::return
void *memset::str
void *memset::str#3 // str zp[2]:15
__loadstore struct printf_buffer_number printf_buffer = {} // mem[12]
void printf_number_buffer(void (*putc)(char) , char buffer_sign , char *buffer_digits , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
unsigned int printf_number_buffer::$19 // zp[2]:34 1001.0
struct printf_buffer_number printf_number_buffer::buffer
char *printf_number_buffer::buffer_digits
char printf_number_buffer::buffer_sign
char printf_number_buffer::buffer_sign#0 // buffer_sign zp[1]:4 202.0
char printf_number_buffer::buffer_sign#1 // buffer_sign zp[1]:4 202.0
char printf_number_buffer::buffer_sign#10 // buffer_sign zp[1]:4 171.85714285714283
char printf_number_buffer::buffer_sign#2 // buffer_sign zp[1]:4 202.0
char printf_number_buffer::buffer_sign#3 // buffer_sign zp[1]:4 202.0
char printf_number_buffer::buffer_sign#4 // buffer_sign zp[1]:4 202.0
char printf_number_buffer::buffer_sign#5 // buffer_sign zp[1]:4 202.0
struct printf_format_number printf_number_buffer::format
char printf_number_buffer::format_justify_left
char printf_number_buffer::format_justify_left#10 // format_justify_left zp[1]:2 60.666666666666664
char printf_number_buffer::format_min_length
char printf_number_buffer::format_min_length#10 // reg byte x 100.1
char printf_number_buffer::format_radix
char printf_number_buffer::format_sign_always
char printf_number_buffer::format_upper_case
char printf_number_buffer::format_upper_case#10 // format_upper_case zp[1]:5 35.75
char printf_number_buffer::format_zero_padding
char printf_number_buffer::format_zero_padding#10 // format_zero_padding zp[1]:3 88.32352941176471
signed char printf_number_buffer::len
signed char printf_number_buffer::len#0 // reg byte y 1501.5
signed char printf_number_buffer::len#1 // reg byte y 2002.0
signed char printf_number_buffer::len#2 // reg byte y 3003.0
signed char printf_number_buffer::padding
signed char printf_number_buffer::padding#1 // padding zp[1]:8 1001.0
signed char printf_number_buffer::padding#10 // padding zp[1]:8 166.83333333333334
void (*printf_number_buffer::putc)(char)
void (*printf_number_buffer::putc#10)(char) // putc zp[2]:6 111.22222222222223
void printf_padding(void (*putc)(char) , char pad , char length)
char printf_padding::i
char printf_padding::i#1 // i zp[1]:18 200002.0
char printf_padding::i#2 // i zp[1]:18 100001.0
char printf_padding::length
char printf_padding::length#0 // length zp[1]:36 2002.0
char printf_padding::length#1 // length zp[1]:36 2002.0
char printf_padding::length#2 // length zp[1]:36 2002.0
char printf_padding::length#4 // length zp[1]:36 20600.8
char printf_padding::pad
char printf_padding::pad#5 // pad zp[1]:17 16666.833333333332
void (*printf_padding::putc)(char)
void (*printf_padding::putc#0)(char) // putc zp[2]:6 1001.0
void (*printf_padding::putc#1)(char) // putc zp[2]:6 1001.0
void (*printf_padding::putc#2)(char) // putc zp[2]:6 1001.0
void (*printf_padding::putc#5)(char) // putc zp[2]:6 30030.0
void printf_schar(void (*putc)(char) , signed char value , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_format_number printf_schar::format
char printf_schar::format_justify_left
__constant char printf_schar::format_justify_left#0 = 0 // format_justify_left
char printf_schar::format_min_length
__constant char printf_schar::format_min_length#0 = 0 // format_min_length
char printf_schar::format_radix
char printf_schar::format_sign_always
char printf_schar::format_upper_case
__constant char printf_schar::format_upper_case#0 = 0 // format_upper_case
char printf_schar::format_zero_padding
__constant char printf_schar::format_zero_padding#0 = 0 // format_zero_padding
void (*printf_schar::putc)(char)
__constant void (*printf_schar::putc#0)(char) = &cputc // putc
char printf_schar::uvalue
__constant char printf_schar::uvalue#0 = (char)printf_schar::value#0 // uvalue
signed char printf_schar::value
__constant signed char printf_schar::value#0 = -main::sc // value
void printf_sint(void (*putc)(char) , int value , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_format_number printf_sint::format
char printf_sint::format_justify_left
__constant char printf_sint::format_justify_left#0 = 0 // format_justify_left
char printf_sint::format_min_length
__constant char printf_sint::format_min_length#0 = 0 // format_min_length
char printf_sint::format_radix
char printf_sint::format_sign_always
char printf_sint::format_upper_case
__constant char printf_sint::format_upper_case#0 = 0 // format_upper_case
char printf_sint::format_zero_padding
__constant char printf_sint::format_zero_padding#0 = 0 // format_zero_padding
void (*printf_sint::putc)(char)
__constant void (*printf_sint::putc#0)(char) = &cputc // putc
unsigned int printf_sint::uvalue
__constant unsigned int printf_sint::uvalue#0 = (unsigned int)printf_sint::value#0 // uvalue
int printf_sint::value
__constant int printf_sint::value#0 = -main::si // value
void printf_slong(void (*putc)(char) , long value , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_format_number printf_slong::format
char printf_slong::format_justify_left
__constant char printf_slong::format_justify_left#0 = 0 // format_justify_left
char printf_slong::format_min_length
__constant char printf_slong::format_min_length#0 = 0 // format_min_length
char printf_slong::format_radix
char printf_slong::format_sign_always
char printf_slong::format_upper_case
__constant char printf_slong::format_upper_case#0 = 0 // format_upper_case
char printf_slong::format_zero_padding
__constant char printf_slong::format_zero_padding#0 = 0 // format_zero_padding
void (*printf_slong::putc)(char)
__constant void (*printf_slong::putc#0)(char) = &cputc // putc
unsigned long printf_slong::uvalue
__constant unsigned long printf_slong::uvalue#0 = (unsigned long)printf_slong::value#0 // uvalue
long printf_slong::value
__constant long printf_slong::value#0 = -main::sl // value
void printf_str(void (*putc)(char) , const char *s)
char printf_str::c
char printf_str::c#1 // reg byte a 100001.0
void (*printf_str::putc)(char)
void (*printf_str::putc#0)(char) // putc zp[2]:6 2002.0
void (*printf_str::putc#21)(char) // putc zp[2]:6 10010.0
const char *printf_str::s
const char *printf_str::s#0 // s zp[2]:13 100001.0
const char *printf_str::s#20 // s zp[2]:13 155002.0
const char *printf_str::s#21 // s zp[2]:13 10001.0
void printf_uchar(void (*putc)(char) , char uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_format_number printf_uchar::format
char printf_uchar::format_justify_left
__constant char printf_uchar::format_justify_left#0 = 0 // format_justify_left
char printf_uchar::format_min_length
__constant char printf_uchar::format_min_length#0 = 0 // format_min_length
char printf_uchar::format_radix
char printf_uchar::format_sign_always
char printf_uchar::format_upper_case
__constant char printf_uchar::format_upper_case#0 = 0 // format_upper_case
char printf_uchar::format_zero_padding
__constant char printf_uchar::format_zero_padding#0 = 0 // format_zero_padding
void (*printf_uchar::putc)(char)
__constant void (*printf_uchar::putc#0)(char) = &cputc // putc
char printf_uchar::uvalue
void printf_uint(void (*putc)(char) , unsigned int uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_format_number printf_uint::format
char printf_uint::format_justify_left
char printf_uint::format_min_length
char printf_uint::format_radix
char printf_uint::format_radix#2 // reg byte x 33.666666666666664
char printf_uint::format_sign_always
char printf_uint::format_upper_case
char printf_uint::format_zero_padding
void (*printf_uint::putc)(char)
unsigned int printf_uint::uvalue
unsigned int printf_uint::uvalue#2 // uvalue zp[2]:6 50.5
void printf_ulong(void (*putc)(char) , unsigned long uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_format_number printf_ulong::format
char printf_ulong::format_justify_left
__constant char printf_ulong::format_justify_left#0 = 0 // format_justify_left
char printf_ulong::format_min_length
__constant char printf_ulong::format_min_length#0 = 0 // format_min_length
char printf_ulong::format_radix
char printf_ulong::format_sign_always
char printf_ulong::format_upper_case
__constant char printf_ulong::format_upper_case#0 = 0 // format_upper_case
char printf_ulong::format_zero_padding
__constant char printf_ulong::format_zero_padding#0 = 0 // format_zero_padding
void (*printf_ulong::putc)(char)
__constant void (*printf_ulong::putc#0)(char) = &cputc // putc
unsigned long printf_ulong::uvalue
unsigned int strlen(char *str)
unsigned int strlen::len
unsigned int strlen::len#1 // len zp[2]:34 100001.0
unsigned int strlen::len#2 // len zp[2]:34 50250.75
unsigned int strlen::return
unsigned int strlen::return#2 // return zp[2]:34 2002.0
char *strlen::str
char *strlen::str#0 // str zp[2]:19 200002.0
char *strlen::str#2 // str zp[2]:19 100001.0
char * strupr(char *str)
char strupr::$0 // reg byte a 200002.0
char *strupr::return
char *strupr::src
char *strupr::src#1 // src zp[2]:19 200002.0
char *strupr::src#2 // src zp[2]:19 71429.28571428571
char *strupr::str
__constant char *strupr::str#0 = (char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS // str
char toupper(char ch)
char toupper::ch
char toupper::ch#0 // reg byte a 1700002.0000000002
char toupper::return
char toupper::return#0 // reg byte a 2000002.0
char toupper::return#2 // reg byte a 1033334.6666666667
char toupper::return#3 // reg byte a 200002.0
void uctoa(char value , char *buffer , char radix)
char *uctoa::buffer
char *uctoa::buffer#10 // buffer zp[2]:6 3500.4999999999995
char *uctoa::buffer#15 // buffer zp[2]:6 15001.5
char *uctoa::buffer#3 // buffer zp[2]:6 2002.0
char *uctoa::buffer#4 // buffer zp[2]:6 20002.0
char uctoa::digit
char uctoa::digit#1 // digit zp[1]:4 20002.0
char uctoa::digit#2 // digit zp[1]:4 3077.230769230769
char uctoa::digit_value
char uctoa::digit_value#0 // digit_value zp[1]:36 6000.6
char *uctoa::digit_values
char uctoa::max_digits
char uctoa::radix
char uctoa::started
char uctoa::started#2 // started zp[1]:5 6000.6
char uctoa::started#4 // started zp[1]:5 10001.0
char uctoa::value
char uctoa::value#0 // reg byte x 10001.0
char uctoa::value#10 // reg byte x 1001.0
char uctoa::value#3 // reg byte x 7000.999999999999
char uctoa::value#7 // reg byte x 15001.5
char uctoa_append(char *buffer , char value , char sub)
char *uctoa_append::buffer
char *uctoa_append::buffer#0 // buffer zp[2]:6 13750.25
char uctoa_append::digit
char uctoa_append::digit#1 // reg byte y 1.0000001E7
char uctoa_append::digit#2 // reg byte y 1.00500015E7
char uctoa_append::return
char uctoa_append::return#0 // reg byte x 20002.0
char uctoa_append::sub
char uctoa_append::sub#0 // sub zp[1]:36 3335000.5
char uctoa_append::value
char uctoa_append::value#0 // reg byte x 36667.33333333333
char uctoa_append::value#1 // reg byte x 2.0000002E7
char uctoa_append::value#2 // reg byte x 5018334.166666666
void ultoa(unsigned long value , char *buffer , char radix)
char ultoa::$10 // reg byte a 20002.0
char ultoa::$11 // reg byte a 2002.0
char *ultoa::buffer
char *ultoa::buffer#10 // buffer zp[2]:13 3000.4285714285716
char *ultoa::buffer#15 // buffer zp[2]:13 15001.5
char *ultoa::buffer#3 // buffer zp[2]:13 2002.0
char *ultoa::buffer#4 // buffer zp[2]:13 20002.0
char ultoa::digit
char ultoa::digit#1 // digit zp[1]:8 20002.0
char ultoa::digit#2 // digit zp[1]:8 2857.4285714285716
unsigned long ultoa::digit_value
unsigned long ultoa::digit_value#0 // digit_value zp[4]:37 6000.6
unsigned long *ultoa::digit_values
char ultoa::max_digits
char ultoa::radix
char ultoa::started
char ultoa::started#2 // reg byte x 5000.5
char ultoa::started#4 // reg byte x 10001.0
unsigned long ultoa::value
unsigned long ultoa::value#0 // value zp[4]:9 10001.0
unsigned long ultoa::value#10 // value zp[4]:9 1001.0
unsigned long ultoa::value#3 // value zp[4]:9 5857.857142857143
unsigned long ultoa::value#7 // value zp[4]:9 15001.5
unsigned long ultoa_append(char *buffer , unsigned long value , unsigned long sub)
char *ultoa_append::buffer
char *ultoa_append::buffer#0 // buffer zp[2]:13 13750.25
char ultoa_append::digit
char ultoa_append::digit#1 // reg byte x 1.0000001E7
char ultoa_append::digit#2 // reg byte x 1.00500015E7
unsigned long ultoa_append::return
unsigned long ultoa_append::return#0 // return zp[4]:9 20002.0
unsigned long ultoa_append::sub
unsigned long ultoa_append::sub#0 // sub zp[4]:37 3335000.5
unsigned long ultoa_append::value
unsigned long ultoa_append::value#0 // value zp[4]:9 36667.33333333333
unsigned long ultoa_append::value#1 // value zp[4]:9 2.0000002E7
unsigned long ultoa_append::value#2 // value zp[4]:9 5018334.166666666
void utoa(unsigned int value , char *buffer , char radix)
char utoa::$10 // reg byte a 20002.0
char utoa::$11 // reg byte x 2002.0
char utoa::$4 // reg byte a 20002.0
char *utoa::buffer
char *utoa::buffer#10 // buffer zp[2]:19 2800.4000000000005
char *utoa::buffer#15 // buffer zp[2]:19 15001.5
char *utoa::buffer#3 // buffer zp[2]:19 2002.0
char *utoa::buffer#4 // buffer zp[2]:19 20002.0
char utoa::digit
char utoa::digit#1 // digit zp[1]:3 20002.0
char utoa::digit#2 // digit zp[1]:3 2666.9333333333334
unsigned int utoa::digit_value
unsigned int utoa::digit_value#0 // digit_value zp[2]:34 6000.6
unsigned int *utoa::digit_values
unsigned int *utoa::digit_values#8 // digit_values zp[2]:13 588.2941176470588
char utoa::max_digits
char utoa::max_digits#7 // max_digits zp[1]:2 588.2941176470588
char utoa::radix
char utoa::radix#1 // reg byte x 202.0
char utoa::radix#2 // reg byte x 1026.25
char utoa::started
char utoa::started#2 // reg byte x 4286.142857142857
char utoa::started#4 // reg byte x 10001.0
unsigned int utoa::value
unsigned int utoa::value#0 // value zp[2]:6 10001.0
unsigned int utoa::value#10 // value zp[2]:6 183.66666666666669
unsigned int utoa::value#2 // value zp[2]:6 101.0
unsigned int utoa::value#3 // value zp[2]:6 5125.625
unsigned int utoa::value#7 // value zp[2]:6 15001.5
unsigned int utoa_append(char *buffer , unsigned int value , unsigned int sub)
char *utoa_append::buffer
char *utoa_append::buffer#0 // buffer zp[2]:19 13750.25
char utoa_append::digit
char utoa_append::digit#1 // reg byte x 1.0000001E7
char utoa_append::digit#2 // reg byte x 1.00500015E7
unsigned int utoa_append::return
unsigned int utoa_append::return#0 // return zp[2]:6 20002.0
unsigned int utoa_append::sub
unsigned int utoa_append::sub#0 // sub zp[2]:34 3335000.5
unsigned int utoa_append::value
unsigned int utoa_append::value#0 // value zp[2]:6 36667.33333333333
unsigned int utoa_append::value#1 // value zp[2]:6 2.0000002E7
unsigned int utoa_append::value#2 // value zp[2]:6 5018334.166666666

reg byte x [ conio_c64_init::line#2 conio_c64_init::line#0 ]
reg byte x [ gotoxy::y#4 gotoxy::y#2 ]
reg byte x [ clrscr::l#2 clrscr::l#1 ]
reg byte y [ clrscr::c#2 clrscr::c#1 ]
reg byte x [ printf_uint::format_radix#2 ]
reg byte x [ utoa::radix#2 utoa::radix#1 ]
reg byte x [ utoa::started#2 utoa::started#4 ]
reg byte x [ printf_number_buffer::format_min_length#10 ]
zp[1]:2 [ printf_number_buffer::format_justify_left#10 utoa::max_digits#7 ]
zp[1]:3 [ printf_number_buffer::format_zero_padding#10 utoa::digit#2 utoa::digit#1 ]
reg byte y [ printf_number_buffer::len#2 printf_number_buffer::len#0 printf_number_buffer::len#1 ]
zp[1]:4 [ uctoa::digit#2 uctoa::digit#1 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#4 printf_number_buffer::buffer_sign#2 printf_number_buffer::buffer_sign#0 printf_number_buffer::buffer_sign#5 printf_number_buffer::buffer_sign#3 printf_number_buffer::buffer_sign#1 ]
reg byte x [ uctoa::value#3 uctoa::value#7 uctoa::value#10 uctoa::value#0 ]
zp[1]:5 [ uctoa::started#2 uctoa::started#4 printf_number_buffer::format_upper_case#10 ]
zp[2]:6 [ uctoa::buffer#10 uctoa::buffer#15 uctoa::buffer#4 uctoa::buffer#3 uctoa_append::buffer#0 printf_uint::uvalue#2 utoa::value#3 utoa::value#7 utoa::value#10 utoa::value#2 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 utoa_append::return#0 printf_str::putc#21 printf_str::putc#0 printf_number_buffer::putc#10 printf_padding::putc#5 printf_padding::putc#1 printf_padding::putc#2 printf_padding::putc#0 clrscr::line_text#5 clrscr::line_text#1 ]
zp[1]:8 [ ultoa::digit#2 ultoa::digit#1 printf_number_buffer::padding#10 printf_number_buffer::padding#1 ]
zp[4]:9 [ ultoa::value#3 ultoa::value#7 ultoa::value#10 ultoa::value#0 ultoa_append::value#2 ultoa_append::value#0 ultoa_append::value#1 ultoa_append::return#0 ]
reg byte x [ ultoa::started#2 ultoa::started#4 ]
zp[2]:13 [ ultoa::buffer#10 ultoa::buffer#15 ultoa::buffer#4 ultoa::buffer#3 ultoa_append::buffer#0 utoa::digit_values#8 printf_str::s#20 printf_str::s#21 printf_str::s#0 clrscr::line_cols#5 clrscr::line_cols#1 ]
zp[2]:15 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
reg byte x [ memset::c#4 ]
reg byte x [ utoa_append::digit#2 utoa_append::digit#1 ]
zp[1]:17 [ printf_padding::pad#5 ]
zp[1]:18 [ printf_padding::i#2 printf_padding::i#1 ]
zp[2]:19 [ strupr::src#2 strupr::src#1 strlen::str#2 strlen::str#0 utoa::buffer#10 utoa::buffer#15 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 ]
reg byte x [ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ]
reg byte y [ uctoa_append::digit#2 uctoa_append::digit#1 ]
reg byte x [ ultoa_append::digit#2 ultoa_append::digit#1 ]
reg byte a [ toupper::return#2 toupper::return#0 toupper::ch#0 ]
zp[1]:21 [ conio_cursor_x ]
zp[1]:22 [ conio_cursor_y ]
zp[2]:23 [ conio_line_text ]
zp[2]:25 [ conio_line_color ]
reg byte a [ cputc::c#0 ]
zp[1]:27 [ main::c ]
zp[2]:28 [ gotoxy::$7 gotoxy::$9 gotoxy::line_offset#0 gotoxy::$6 ]
zp[2]:30 [ gotoxy::$8 ]
zp[2]:32 [ gotoxy::$5 ]
reg byte a [ printf_str::c#1 ]
reg byte a [ utoa::$4 ]
reg byte x [ utoa::$11 ]
reg byte a [ utoa::$10 ]
zp[2]:34 [ utoa::digit_value#0 utoa_append::sub#0 strlen::len#2 strlen::len#1 strlen::return#2 printf_number_buffer::$19 ]
zp[1]:36 [ uctoa::digit_value#0 uctoa_append::sub#0 printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ]
reg byte x [ uctoa_append::return#0 ]
reg byte a [ ultoa::$11 ]
reg byte a [ ultoa::$10 ]
zp[4]:37 [ ultoa::digit_value#0 ultoa_append::sub#0 ]
zp[2]:41 [ memcpy::src_end#0 ]
zp[2]:43 [ memset::end#0 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
reg byte a [ toupper::return#3 ]
reg byte a [ strupr::$0 ]
mem[12] [ printf_buffer ]
