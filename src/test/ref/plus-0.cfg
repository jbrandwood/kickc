
(void()) main()
main: scope:[main]  from
  [0] phi()
  [1] call fill 
  to:main::@1
main::@1: scope:[main]  from main
  [2] phi()
  [3] call fill 
  to:main::@return
main::@return: scope:[main]  from main::@1
  [4] return 
  to:@return

(void()) fill((byte*) fill::screen , (byte) fill::ch)
fill: scope:[fill]  from main main::@1
  [5] (byte) fill::ch#4 ← phi( main/(byte) 'a' main::@1/(byte) 'b' )
  [5] (byte*) fill::screen#4 ← phi( main/(byte*) 1024 main::@1/(byte*) 8192 )
  to:fill::@1
fill::@1: scope:[fill]  from fill fill::@3
  [6] (byte) fill::i#4 ← phi( fill/(byte) 0 fill::@3/(byte) fill::i#1 )
  to:fill::@2
fill::@2: scope:[fill]  from fill::@1
  [7] *((byte*) fill::screen#4 + (byte) fill::i#4) ← (byte) fill::ch#4
  to:fill::@2_1
fill::@2_1: scope:[fill]  from fill::@2
  [8] (byte*~) fill::$5 ← (byte*) fill::screen#4 + (byte) 1*(byte) $28
  [9] *((byte*~) fill::$5 + (byte) fill::i#4) ← (byte) fill::ch#4
  to:fill::@2_2
fill::@2_2: scope:[fill]  from fill::@2_1
  [10] (byte*~) fill::$7 ← (byte*) fill::screen#4 + (byte) 2*(byte) $28
  [11] *((byte*~) fill::$7 + (byte) fill::i#4) ← (byte) fill::ch#4
  to:fill::@3
fill::@3: scope:[fill]  from fill::@2_2
  [12] (byte) fill::i#1 ← ++ (byte) fill::i#4
  [13] if((byte) fill::i#1!=(byte) $28) goto fill::@1
  to:fill::@return
fill::@return: scope:[fill]  from fill::@3
  [14] return 
  to:@return
