__constant char * const COLORRAM = (char *) 55296
__constant char * const DEFAULT_SCREEN = (char *) 1024
__constant char DIGITS[] = "0123456789abcdef"z
__constant const char LIGHT_BLUE = $e
__constant char OFFSET_STRUCT_BBS_HOST_NAME = 2
__constant char OFFSET_STRUCT_BBS_PORT_NUMBER = 4
__constant char OFFSET_STRUCT_MOS6569_VICII_MEMORY = $18
__constant char OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
__constant unsigned int RADIX_DECIMAL_VALUES[] = { $2710, $3e8, $64, $a }
__constant char SIZEOF_STRUCT_BBS = 6
__constant char SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
__constant struct MOS6569_VICII * const VICII = (struct MOS6569_VICII *) 53248
void __start()
__constant char bbs_host_name[$f] = "byob.hopto.org"
__constant char bbs_host_name1[$14] = "rapidfire.hopto.org"
__constant char bbs_host_name10[$16] = "bbs.jammingsignal.com"
__constant char bbs_host_name11[$19] = "centronian.servebeer.com"
__constant char bbs_host_name12[$11] = "aubbs.dyndns.org"
__constant char bbs_host_name13[$13] = "oasisbbs.hopto.org"
__constant char bbs_host_name14[$13] = "bbs.thediskbox.com"
__constant char bbs_host_name15[$19] = "cottonwoodbbs.dyndns.org"
__constant char bbs_host_name18[$16] = "madworld.bounceme.net"
__constant char bbs_host_name19[$10] = "bbs.thejlab.com"
__constant char bbs_host_name2[$13] = "antidote.hopto.org"
__constant char bbs_host_name20[$15] = "hotwirebbs.zapto.org"
__constant char bbs_host_name21[$18] = "endlesschaos.dyndns.org"
__constant char bbs_host_name22[$19] = "borderlinebbs.dyndns.org"
__constant char bbs_host_name23[$16] = "raveolution.hopto.org"
__constant char bbs_host_name24[$16] = "theedgebbs.dyndns.org"
__constant char bbs_host_name25[$14] = "F96NG92-L.fritz.box"
__constant char bbs_host_name3[$18] = "wizardsrealm.c64bbs.org"
__constant char bbs_host_name4[$15] = "the-hidden.hopto.org"
__constant char bbs_host_name5[$13] = "eagelbird.ddns.net"
__constant char bbs_host_name6[$c] = "scorp.us.to"
__constant char bbs_host_name7[$14] = "maraud.dynalias.com"
__constant char bbs_host_name8[$f] = "cib.dyndns.org"
__constant char bbs_host_name9[$1d] = "64vintageremixbbs.dyndns.org"
__constant const struct bbs bbs_list[$1b] = { { name: bbs_name, host_name: bbs_host_name, port_number: $fa80 }, { name: bbs_name1, host_name: bbs_host_name1, port_number: $fa80 }, { name: bbs_name2, host_name: bbs_host_name2, port_number: $fa80 }, { name: bbs_name3, host_name: bbs_host_name3, port_number: $17 }, { name: bbs_name4, host_name: bbs_host_name4, port_number: $fa80 }, { name: bbs_name5, host_name: bbs_host_name5, port_number: $1900 }, { name: bbs_name6, host_name: bbs_host_name6, port_number: $17 }, { name: bbs_name7, host_name: bbs_host_name7, port_number: $1900 }, { name: bbs_name8, host_name: bbs_host_name8, port_number: $1900 }, { name: bbs_name9, host_name: bbs_host_name9, port_number: $1900 }, { name: bbs_name10, host_name: bbs_host_name10, port_number: $17 }, { name: bbs_name11, host_name: bbs_host_name11, port_number: $1900 }, { name: bbs_name12, host_name: bbs_host_name12, port_number: $8fc }, { name: bbs_name13, host_name: bbs_host_name13, port_number: $1900 }, { name: bbs_name14, host_name: bbs_host_name14, port_number: $1900 }, { name: bbs_name15, host_name: bbs_host_name15, port_number: $1966 }, { name: bbs_name16, host_name: bbs_host_name8, port_number: $1904 }, { name: bbs_name17, host_name: bbs_host_name1, port_number: $fa80 }, { name: bbs_name18, host_name: bbs_host_name18, port_number: $1900 }, { name: bbs_name19, host_name: bbs_host_name19, port_number: $1900 }, { name: bbs_name20, host_name: bbs_host_name20, port_number: $1966 }, { name: bbs_name21, host_name: bbs_host_name21, port_number: $1900 }, { name: bbs_name22, host_name: bbs_host_name22, port_number: $1900 }, { name: bbs_name23, host_name: bbs_host_name23, port_number: $fa80 }, { name: bbs_name24, host_name: bbs_host_name24, port_number: $605 }, { name: bbs_name25, host_name: bbs_host_name25, port_number: $fa80 }, { name: 0, host_name: 0, port_number: 0 } }
__constant char bbs_name[$c] = "Boar's Head"
__constant char bbs_name1[$a] = "RapidFire"
__constant char bbs_name10[$f] = "Jamming Signal"
__constant char bbs_name11[$f] = "Centronian BBS"
__constant char bbs_name12[$11] = "Anrchy Undergrnd"
__constant char bbs_name13[$e] = "The Oasis BBS"
__constant char bbs_name14[$d] = "The Disk Box"
__constant char bbs_name15[$b] = "Cottonwood"
__constant char bbs_name16[$10] = "Wrong Number ]["
__constant char bbs_name17[$a] = "RabidFire"
__constant char bbs_name18[$a] = "Mad World"
__constant char bbs_name19[$b] = "Citadel 64"
__constant char bbs_name2[$12] = "Antidote by Triad"
__constant char bbs_name20[$c] = "Hotwire BBS"
__constant char bbs_name21[$e] = "Endless Chaos"
__constant char bbs_name22[$b] = "Borderline"
__constant char bbs_name23[$c] = "RAVELOUTION"
__constant char bbs_name24[$d] = "The Edge BBS"
__constant char bbs_name25[9] = "PGS Test"
__constant char bbs_name3[$10] = "Wizards's Realm"
__constant char bbs_name4[$b] = "The Hidden"
__constant char bbs_name5[$e] = "Eaglewing BBS"
__constant char bbs_name6[$e] = "Scorps Portal"
__constant char bbs_name7[$d] = "My C=ult BBS"
__constant char bbs_name8[$10] = "Commodore Image"
__constant char bbs_name9[$10] = "64 Vintag Remic"
void conio_c64_init()
__constant char * const conio_c64_init::BASIC_CURSOR_LINE = (char *) 214
char conio_c64_init::line
char conio_c64_init::line#0 // reg byte x 11.0
char conio_c64_init::line#2 // reg byte x 22.0
__loadstore char conio_cursor_x // zp[1]:9 2.1428572985714287E7
__loadstore char conio_cursor_y // zp[1]:10 3.720930245116279E8
__loadstore char *conio_line_color // zp[2]:13 2.8333333471794873E8
__loadstore char *conio_line_text // zp[2]:11 2.7625000135E8
void cputc(char c)
char cputc::c
char cputc::c#0 // reg byte a 2.0000002E7
char cputc::c#2 // reg byte a 20002.0
char cputc::c#3 // reg byte a 1.05005002E8
void cputln()
void cputs(const char *s)
char cputs::c
char cputs::c#1 // reg byte a 1.0000001E7
const char *cputs::s
const char *cputs::s#0 // s zp[2]:5 5000000.5
const char *cputs::s#2 // s zp[2]:5 2002.0
const char *cputs::s#6 // s zp[2]:5 1.5050002E7
const char *cputs::s#7 // s zp[2]:5 101002.0
void cscroll()
void gotoxy(char x , char y)
char *gotoxy::$5 // zp[2]:19 202.0
char *gotoxy::$6 // zp[2]:15 202.0
unsigned int gotoxy::$7 // zp[2]:15 151.5
unsigned int gotoxy::$8 // zp[2]:17 202.0
unsigned int gotoxy::$9 // zp[2]:15 202.0
unsigned int gotoxy::line_offset
unsigned int gotoxy::line_offset#0 // line_offset zp[2]:15 101.0
char gotoxy::x
__constant char gotoxy::x#2 = 0 // x
char gotoxy::y
char gotoxy::y#2 // reg byte x 71.0
char gotoxy::y#4 // reg byte x 67.33333333333333
void main()
struct bbs *main::bbs
struct bbs *main::bbs#1 // bbs zp[2]:2 202.0
struct bbs *main::bbs#2 // bbs zp[2]:2 14.428571428571429
__constant char main::s[2] = " "
__constant char main::s2[2] = "
"
void * memcpy(void *destination , void *source , unsigned int num)
void *memcpy::destination
void *memcpy::destination#2 // destination zp[2]:7
char *memcpy::dst
char *memcpy::dst#1 // dst zp[2]:7 1.00000000000001E14
char *memcpy::dst#2 // dst zp[2]:7 1.0003333333333467E14
char *memcpy::dst#4 // dst zp[2]:7 2.00000000002E11
unsigned int memcpy::num
void *memcpy::return
void *memcpy::source
void *memcpy::source#2 // source zp[2]:23
char *memcpy::src
char *memcpy::src#1 // src zp[2]:23 2.00000000000002E14
char *memcpy::src#2 // src zp[2]:23 1.0002500000000125E14
char *memcpy::src#4 // src zp[2]:23 1.00000000001E11
char *memcpy::src_end
char *memcpy::src_end#0 // src_end zp[2]:21 1.251250000000025E13
void * memset(void *str , char c , unsigned int num)
char memset::c
char memset::c#4 // reg byte x 1.4285714285714428E13
char *memset::dst
char *memset::dst#1 // dst zp[2]:7 2.00000000000002E14
char *memset::dst#2 // dst zp[2]:7 1.3336666666666834E14
char *memset::dst#4 // dst zp[2]:7 2.00000000002E11
char *memset::end
char *memset::end#0 // end zp[2]:23 1.6683333333333668E13
unsigned int memset::num
void *memset::return
void *memset::str
void *memset::str#3 // str zp[2]:7
__loadstore struct printf_buffer_number printf_buffer = {} // mem[12]
void printf_number_buffer(char buffer_sign , char *buffer_digits , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_buffer_number printf_number_buffer::buffer
char *printf_number_buffer::buffer_digits
__constant char *printf_number_buffer::buffer_digits#0 = (char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS // buffer_digits
char printf_number_buffer::buffer_sign
char printf_number_buffer::buffer_sign#0 // reg byte a 7001.0
struct printf_format_number printf_number_buffer::format
char printf_number_buffer::format_justify_left
char printf_number_buffer::format_min_length
char printf_number_buffer::format_radix
char printf_number_buffer::format_sign_always
char printf_number_buffer::format_upper_case
char printf_number_buffer::format_zero_padding
signed char printf_number_buffer::len
signed char printf_number_buffer::padding
void printf_string(char *str , char format_min_length , char format_justify_left)
struct printf_format_string printf_string::format
char printf_string::format_justify_left
char printf_string::format_min_length
signed char printf_string::len
signed char printf_string::padding
char *printf_string::str
char *printf_string::str#0 // str zp[2]:5 202.0
char *printf_string::str#1 // str zp[2]:5 202.0
char *printf_string::str#2 // str zp[2]:5 1203.0
void printf_uint(unsigned int uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_format_number printf_uint::format
char printf_uint::format_justify_left
char printf_uint::format_min_length
char printf_uint::format_radix
char printf_uint::format_sign_always
char printf_uint::format_upper_case
char printf_uint::format_zero_padding
unsigned int printf_uint::uvalue
unsigned int printf_uint::uvalue#0 // uvalue zp[2]:5 367.33333333333337
void utoa(unsigned int value , char *buffer , char radix)
char utoa::$10 // reg byte a 2000002.0
char utoa::$11 // reg byte x 20002.0
char *utoa::buffer
char *utoa::buffer#11 // buffer zp[2]:23 287143.2857142857
char *utoa::buffer#14 // buffer zp[2]:23 1500001.5
char *utoa::buffer#3 // buffer zp[2]:23 20002.0
char *utoa::buffer#4 // buffer zp[2]:23 2000002.0
char utoa::digit
char utoa::digit#1 // digit zp[1]:4 2000002.0
char utoa::digit#2 // digit zp[1]:4 285714.5714285714
unsigned int utoa::digit_value
unsigned int utoa::digit_value#0 // digit_value zp[2]:21 600000.6000000001
unsigned int *utoa::digit_values
char utoa::max_digits
__constant char utoa::max_digits#1 = 5 // max_digits
char utoa::radix
char utoa::started
char utoa::started#2 // reg byte x 500000.5
char utoa::started#4 // reg byte x 1000001.0
unsigned int utoa::value
unsigned int utoa::value#0 // value zp[2]:5 1000001.0
unsigned int utoa::value#1 // value zp[2]:5 5501.0
unsigned int utoa::value#2 // value zp[2]:5 572857.857142857
unsigned int utoa::value#6 // value zp[2]:5 1500001.5
unsigned int utoa_append(char *buffer , unsigned int value , unsigned int sub)
char *utoa_append::buffer
char *utoa_append::buffer#0 // buffer zp[2]:23 1375000.25
char utoa_append::digit
char utoa_append::digit#1 // reg byte x 1.0000000001E10
char utoa_append::digit#2 // reg byte x 1.00050000015E10
unsigned int utoa_append::return
unsigned int utoa_append::return#0 // return zp[2]:5 2000002.0
unsigned int utoa_append::sub
unsigned int utoa_append::sub#0 // sub zp[2]:21 3.3335000005E9
unsigned int utoa_append::value
unsigned int utoa_append::value#0 // value zp[2]:5 3666667.333333333
unsigned int utoa_append::value#1 // value zp[2]:5 2.0000000002E10
unsigned int utoa_append::value#2 // value zp[2]:5 5.001833334166666E9

reg byte x [ conio_c64_init::line#2 conio_c64_init::line#0 ]
zp[2]:2 [ main::bbs#2 main::bbs#1 ]
reg byte x [ gotoxy::y#4 gotoxy::y#2 ]
reg byte a [ cputc::c#3 cputc::c#0 cputc::c#2 ]
zp[1]:4 [ utoa::digit#2 utoa::digit#1 ]
zp[2]:5 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 printf_uint::uvalue#0 utoa_append::return#0 printf_string::str#2 printf_string::str#0 printf_string::str#1 cputs::s#6 cputs::s#7 cputs::s#2 cputs::s#0 ]
reg byte x [ utoa::started#2 utoa::started#4 ]
reg byte x [ utoa_append::digit#2 utoa_append::digit#1 ]
zp[2]:7 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
reg byte x [ memset::c#4 ]
zp[1]:9 [ conio_cursor_x ]
zp[1]:10 [ conio_cursor_y ]
zp[2]:11 [ conio_line_text ]
zp[2]:13 [ conio_line_color ]
zp[2]:15 [ gotoxy::$7 gotoxy::$9 gotoxy::line_offset#0 gotoxy::$6 ]
zp[2]:17 [ gotoxy::$8 ]
zp[2]:19 [ gotoxy::$5 ]
reg byte a [ cputs::c#1 ]
reg byte a [ printf_number_buffer::buffer_sign#0 ]
reg byte x [ utoa::$11 ]
reg byte a [ utoa::$10 ]
zp[2]:21 [ memcpy::src_end#0 utoa::digit_value#0 utoa_append::sub#0 ]
zp[2]:23 [ memset::end#0 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 ]
mem[12] [ printf_buffer ]
