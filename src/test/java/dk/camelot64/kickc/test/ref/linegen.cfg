@begin: scope:[]  from
  [0] phi() [ ] ( )
  to:@18
@18: scope:[]  from @begin
  [1] phi() [ ] ( )
  [2] call main param-assignment [ ] ( )
  to:@end
@end: scope:[]  from @18
  [3] phi() [ ] ( )
main: scope:[main]  from @18
  [4] phi() [ ] ( main:2 [ ] )
  [5] call lin16u_gen param-assignment [ ] ( main:2 [ ] )
  to:main::@3
main::@3: scope:[main]  from main
  [6] phi() [ ] ( main:2 [ ] )
  [7] call print_cls param-assignment [ ] ( main:2 [ ] )
  to:main::@1
main::@1: scope:[main]  from main::@3 main::@9
  [8] (byte*) line_cursor#19 ← phi( main::@3/(const byte*) SCREEN#0 main::@9/(byte*) line_cursor#1 ) [ main::i#2 char_cursor#47 line_cursor#19 ] ( main:2 [ main::i#2 char_cursor#47 line_cursor#19 ] )
  [8] (byte*) char_cursor#47 ← phi( main::@3/(const byte*) SCREEN#0 main::@9/(byte*~) char_cursor#51 ) [ main::i#2 char_cursor#47 line_cursor#19 ] ( main:2 [ main::i#2 char_cursor#47 line_cursor#19 ] )
  [8] (byte) main::i#2 ← phi( main::@3/(byte/signed byte/word/signed word/dword/signed dword) 0 main::@9/(byte) main::i#1 ) [ main::i#2 char_cursor#47 line_cursor#19 ] ( main:2 [ main::i#2 char_cursor#47 line_cursor#19 ] )
  [9] (byte) print_byte::b#2 ← (byte) main::i#2 [ main::i#2 char_cursor#47 line_cursor#19 print_byte::b#2 ] ( main:2 [ main::i#2 char_cursor#47 line_cursor#19 print_byte::b#2 ] )
  [10] call print_byte param-assignment [ main::i#2 line_cursor#19 char_cursor#11 ] ( main:2 [ main::i#2 line_cursor#19 char_cursor#11 ] )
  to:main::@5
main::@5: scope:[main]  from main::@1
  [11] phi() [ main::i#2 line_cursor#19 char_cursor#11 ] ( main:2 [ main::i#2 line_cursor#19 char_cursor#11 ] )
  [12] call print_str param-assignment [ main::i#2 line_cursor#19 char_cursor#2 ] ( main:2 [ main::i#2 line_cursor#19 char_cursor#2 ] )
  to:main::@6
main::@6: scope:[main]  from main::@5
  [13] (word) print_word::w#0 ← *((const word[20]) main::lintab#0 + (byte) main::i#2) [ main::i#2 line_cursor#19 print_word::w#0 char_cursor#2 ] ( main:2 [ main::i#2 line_cursor#19 print_word::w#0 char_cursor#2 ] )
  [14] call print_word param-assignment [ main::i#2 line_cursor#19 char_cursor#11 ] ( main:2 [ main::i#2 line_cursor#19 char_cursor#11 ] )
  to:main::@7
main::@7: scope:[main]  from main::@6
  [15] phi() [ main::i#2 line_cursor#19 char_cursor#11 ] ( main:2 [ main::i#2 line_cursor#19 char_cursor#11 ] )
  [16] call print_ln param-assignment [ main::i#2 line_cursor#1 ] ( main:2 [ main::i#2 line_cursor#1 ] )
  to:main::@8
main::@8: scope:[main]  from main::@7
  [17] (byte) main::i#1 ← (byte) main::i#2 + (byte/signed byte/word/signed word/dword/signed dword) 2 [ main::i#1 line_cursor#1 ] ( main:2 [ main::i#1 line_cursor#1 ] )
  [18] if((byte) main::i#1<(byte/signed byte/word/signed word/dword/signed dword) 20*(byte/signed byte/word/signed word/dword/signed dword) 2) goto main::@9 [ main::i#1 line_cursor#1 ] ( main:2 [ main::i#1 line_cursor#1 ] )
  to:main::@return
main::@return: scope:[main]  from main::@8
  [19] return  [ ] ( main:2 [ ] )
  to:@return
main::@9: scope:[main]  from main::@8
  [20] (byte*~) char_cursor#51 ← (byte*) line_cursor#1 [ main::i#1 char_cursor#51 line_cursor#1 ] ( main:2 [ main::i#1 char_cursor#51 line_cursor#1 ] )
  to:main::@1
print_ln: scope:[print_ln]  from main::@7
  [21] phi() [ line_cursor#19 char_cursor#11 ] ( main:2::print_ln:16 [ main::i#2 line_cursor#19 char_cursor#11 ] )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  [22] (byte*) line_cursor#9 ← phi( print_ln/(byte*) line_cursor#19 print_ln::@1/(byte*) line_cursor#1 ) [ line_cursor#9 char_cursor#11 ] ( main:2::print_ln:16 [ main::i#2 line_cursor#9 char_cursor#11 ] )
  [23] (byte*) line_cursor#1 ← (byte*) line_cursor#9 + (byte/signed byte/word/signed word/dword/signed dword) 40 [ line_cursor#1 char_cursor#11 ] ( main:2::print_ln:16 [ main::i#2 line_cursor#1 char_cursor#11 ] )
  [24] if((byte*) line_cursor#1<(byte*) char_cursor#11) goto print_ln::@1 [ line_cursor#1 char_cursor#11 ] ( main:2::print_ln:16 [ main::i#2 line_cursor#1 char_cursor#11 ] )
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@1
  [25] return  [ line_cursor#1 ] ( main:2::print_ln:16 [ main::i#2 line_cursor#1 ] )
  to:@return
print_word: scope:[print_word]  from main::@6
  [26] (byte) print_byte::b#0 ← > (word) print_word::w#0 [ print_word::w#0 print_byte::b#0 char_cursor#2 ] ( main:2::print_word:14 [ main::i#2 line_cursor#19 print_word::w#0 print_byte::b#0 char_cursor#2 ] )
  [27] call print_byte param-assignment [ print_word::w#0 char_cursor#11 ] ( main:2::print_word:14 [ main::i#2 line_cursor#19 print_word::w#0 char_cursor#11 ] )
  to:print_word::@1
print_word::@1: scope:[print_word]  from print_word
  [28] (byte) print_byte::b#1 ← < (word) print_word::w#0 [ char_cursor#11 print_byte::b#1 ] ( main:2::print_word:14 [ main::i#2 line_cursor#19 char_cursor#11 print_byte::b#1 ] )
  [29] call print_byte param-assignment [ char_cursor#11 ] ( main:2::print_word:14 [ main::i#2 line_cursor#19 char_cursor#11 ] )
  to:print_word::@return
print_word::@return: scope:[print_word]  from print_word::@1
  [30] return  [ char_cursor#11 ] ( main:2::print_word:14 [ main::i#2 line_cursor#19 char_cursor#11 ] )
  to:@return
print_byte: scope:[print_byte]  from main::@1 print_word print_word::@1
  [31] (byte*) char_cursor#45 ← phi( main::@1/(byte*) char_cursor#47 print_word/(byte*) char_cursor#2 print_word::@1/(byte*) char_cursor#11 ) [ print_byte::b#3 char_cursor#45 ] ( main:2::print_byte:10 [ main::i#2 line_cursor#19 print_byte::b#3 char_cursor#45 ] main:2::print_word:14::print_byte:27 [ main::i#2 line_cursor#19 print_word::w#0 print_byte::b#3 char_cursor#45 ] main:2::print_word:14::print_byte:29 [ main::i#2 line_cursor#19 print_byte::b#3 char_cursor#45 ] )
  [31] (byte) print_byte::b#3 ← phi( main::@1/(byte) print_byte::b#2 print_word/(byte) print_byte::b#0 print_word::@1/(byte) print_byte::b#1 ) [ print_byte::b#3 char_cursor#45 ] ( main:2::print_byte:10 [ main::i#2 line_cursor#19 print_byte::b#3 char_cursor#45 ] main:2::print_word:14::print_byte:27 [ main::i#2 line_cursor#19 print_word::w#0 print_byte::b#3 char_cursor#45 ] main:2::print_word:14::print_byte:29 [ main::i#2 line_cursor#19 print_byte::b#3 char_cursor#45 ] )
  [32] (byte~) print_byte::$0 ← (byte) print_byte::b#3 >> (byte/signed byte/word/signed word/dword/signed dword) 4 [ print_byte::b#3 char_cursor#45 print_byte::$0 ] ( main:2::print_byte:10 [ main::i#2 line_cursor#19 print_byte::b#3 char_cursor#45 print_byte::$0 ] main:2::print_word:14::print_byte:27 [ main::i#2 line_cursor#19 print_word::w#0 print_byte::b#3 char_cursor#45 print_byte::$0 ] main:2::print_word:14::print_byte:29 [ main::i#2 line_cursor#19 print_byte::b#3 char_cursor#45 print_byte::$0 ] )
  [33] (byte) print_char::ch#0 ← *((const string) print_byte::hextab#0 + (byte~) print_byte::$0) [ print_byte::b#3 char_cursor#45 print_char::ch#0 ] ( main:2::print_byte:10 [ main::i#2 line_cursor#19 print_byte::b#3 char_cursor#45 print_char::ch#0 ] main:2::print_word:14::print_byte:27 [ main::i#2 line_cursor#19 print_word::w#0 print_byte::b#3 char_cursor#45 print_char::ch#0 ] main:2::print_word:14::print_byte:29 [ main::i#2 line_cursor#19 print_byte::b#3 char_cursor#45 print_char::ch#0 ] )
  [34] call print_char param-assignment [ char_cursor#11 print_byte::b#3 ] ( main:2::print_byte:10 [ main::i#2 line_cursor#19 char_cursor#11 print_byte::b#3 ] main:2::print_word:14::print_byte:27 [ main::i#2 line_cursor#19 print_word::w#0 char_cursor#11 print_byte::b#3 ] main:2::print_word:14::print_byte:29 [ main::i#2 line_cursor#19 char_cursor#11 print_byte::b#3 ] )
  to:print_byte::@1
print_byte::@1: scope:[print_byte]  from print_byte
  [35] (byte~) print_byte::$2 ← (byte) print_byte::b#3 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ char_cursor#11 print_byte::$2 ] ( main:2::print_byte:10 [ main::i#2 line_cursor#19 char_cursor#11 print_byte::$2 ] main:2::print_word:14::print_byte:27 [ main::i#2 line_cursor#19 print_word::w#0 char_cursor#11 print_byte::$2 ] main:2::print_word:14::print_byte:29 [ main::i#2 line_cursor#19 char_cursor#11 print_byte::$2 ] )
  [36] (byte) print_char::ch#1 ← *((const string) print_byte::hextab#0 + (byte~) print_byte::$2) [ char_cursor#11 print_char::ch#1 ] ( main:2::print_byte:10 [ main::i#2 line_cursor#19 char_cursor#11 print_char::ch#1 ] main:2::print_word:14::print_byte:27 [ main::i#2 line_cursor#19 print_word::w#0 char_cursor#11 print_char::ch#1 ] main:2::print_word:14::print_byte:29 [ main::i#2 line_cursor#19 char_cursor#11 print_char::ch#1 ] )
  [37] call print_char param-assignment [ char_cursor#11 ] ( main:2::print_byte:10 [ main::i#2 line_cursor#19 char_cursor#11 ] main:2::print_word:14::print_byte:27 [ main::i#2 line_cursor#19 print_word::w#0 char_cursor#11 ] main:2::print_word:14::print_byte:29 [ main::i#2 line_cursor#19 char_cursor#11 ] )
  to:print_byte::@return
print_byte::@return: scope:[print_byte]  from print_byte::@1
  [38] return  [ char_cursor#11 ] ( main:2::print_byte:10 [ main::i#2 line_cursor#19 char_cursor#11 ] main:2::print_word:14::print_byte:27 [ main::i#2 line_cursor#19 print_word::w#0 char_cursor#11 ] main:2::print_word:14::print_byte:29 [ main::i#2 line_cursor#19 char_cursor#11 ] )
  to:@return
print_char: scope:[print_char]  from print_byte print_byte::@1
  [39] (byte*) char_cursor#32 ← phi( print_byte/(byte*) char_cursor#45 print_byte::@1/(byte*) char_cursor#11 ) [ print_char::ch#2 char_cursor#32 ] ( main:2::print_byte:10::print_char:34 [ main::i#2 line_cursor#19 print_byte::b#3 print_char::ch#2 char_cursor#32 ] main:2::print_word:14::print_byte:27::print_char:34 [ main::i#2 line_cursor#19 print_word::w#0 print_byte::b#3 print_char::ch#2 char_cursor#32 ] main:2::print_word:14::print_byte:29::print_char:34 [ main::i#2 line_cursor#19 print_byte::b#3 print_char::ch#2 char_cursor#32 ] main:2::print_byte:10::print_char:37 [ main::i#2 line_cursor#19 print_char::ch#2 char_cursor#32 ] main:2::print_word:14::print_byte:27::print_char:37 [ main::i#2 line_cursor#19 print_word::w#0 print_char::ch#2 char_cursor#32 ] main:2::print_word:14::print_byte:29::print_char:37 [ main::i#2 line_cursor#19 print_char::ch#2 char_cursor#32 ] )
  [39] (byte) print_char::ch#2 ← phi( print_byte/(byte) print_char::ch#0 print_byte::@1/(byte) print_char::ch#1 ) [ print_char::ch#2 char_cursor#32 ] ( main:2::print_byte:10::print_char:34 [ main::i#2 line_cursor#19 print_byte::b#3 print_char::ch#2 char_cursor#32 ] main:2::print_word:14::print_byte:27::print_char:34 [ main::i#2 line_cursor#19 print_word::w#0 print_byte::b#3 print_char::ch#2 char_cursor#32 ] main:2::print_word:14::print_byte:29::print_char:34 [ main::i#2 line_cursor#19 print_byte::b#3 print_char::ch#2 char_cursor#32 ] main:2::print_byte:10::print_char:37 [ main::i#2 line_cursor#19 print_char::ch#2 char_cursor#32 ] main:2::print_word:14::print_byte:27::print_char:37 [ main::i#2 line_cursor#19 print_word::w#0 print_char::ch#2 char_cursor#32 ] main:2::print_word:14::print_byte:29::print_char:37 [ main::i#2 line_cursor#19 print_char::ch#2 char_cursor#32 ] )
  [40] *((byte*) char_cursor#32) ← (byte) print_char::ch#2 [ char_cursor#32 ] ( main:2::print_byte:10::print_char:34 [ main::i#2 line_cursor#19 print_byte::b#3 char_cursor#32 ] main:2::print_word:14::print_byte:27::print_char:34 [ main::i#2 line_cursor#19 print_word::w#0 print_byte::b#3 char_cursor#32 ] main:2::print_word:14::print_byte:29::print_char:34 [ main::i#2 line_cursor#19 print_byte::b#3 char_cursor#32 ] main:2::print_byte:10::print_char:37 [ main::i#2 line_cursor#19 char_cursor#32 ] main:2::print_word:14::print_byte:27::print_char:37 [ main::i#2 line_cursor#19 print_word::w#0 char_cursor#32 ] main:2::print_word:14::print_byte:29::print_char:37 [ main::i#2 line_cursor#19 char_cursor#32 ] )
  [41] (byte*) char_cursor#11 ← ++ (byte*) char_cursor#32 [ char_cursor#11 ] ( main:2::print_byte:10::print_char:34 [ main::i#2 line_cursor#19 print_byte::b#3 char_cursor#11 ] main:2::print_word:14::print_byte:27::print_char:34 [ main::i#2 line_cursor#19 print_word::w#0 print_byte::b#3 char_cursor#11 ] main:2::print_word:14::print_byte:29::print_char:34 [ main::i#2 line_cursor#19 print_byte::b#3 char_cursor#11 ] main:2::print_byte:10::print_char:37 [ main::i#2 line_cursor#19 char_cursor#11 ] main:2::print_word:14::print_byte:27::print_char:37 [ main::i#2 line_cursor#19 print_word::w#0 char_cursor#11 ] main:2::print_word:14::print_byte:29::print_char:37 [ main::i#2 line_cursor#19 char_cursor#11 ] )
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  [42] return  [ char_cursor#11 ] ( main:2::print_byte:10::print_char:34 [ main::i#2 line_cursor#19 print_byte::b#3 char_cursor#11 ] main:2::print_word:14::print_byte:27::print_char:34 [ main::i#2 line_cursor#19 print_word::w#0 print_byte::b#3 char_cursor#11 ] main:2::print_word:14::print_byte:29::print_char:34 [ main::i#2 line_cursor#19 print_byte::b#3 char_cursor#11 ] main:2::print_byte:10::print_char:37 [ main::i#2 line_cursor#19 char_cursor#11 ] main:2::print_word:14::print_byte:27::print_char:37 [ main::i#2 line_cursor#19 print_word::w#0 char_cursor#11 ] main:2::print_word:14::print_byte:29::print_char:37 [ main::i#2 line_cursor#19 char_cursor#11 ] )
  to:@return
print_str: scope:[print_str]  from main::@5
  [43] phi() [ char_cursor#11 ] ( main:2::print_str:12 [ main::i#2 line_cursor#19 char_cursor#11 ] )
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@2
  [44] (byte*) char_cursor#2 ← phi( print_str/(byte*) char_cursor#11 print_str::@2/(byte*) char_cursor#1 ) [ char_cursor#2 print_str::str#2 ] ( main:2::print_str:12 [ main::i#2 line_cursor#19 char_cursor#2 print_str::str#2 ] )
  [44] (byte*) print_str::str#2 ← phi( print_str/(const string) main::str print_str::@2/(byte*) print_str::str#0 ) [ char_cursor#2 print_str::str#2 ] ( main:2::print_str:12 [ main::i#2 line_cursor#19 char_cursor#2 print_str::str#2 ] )
  [45] if(*((byte*) print_str::str#2)!=(byte) '@') goto print_str::@2 [ char_cursor#2 print_str::str#2 ] ( main:2::print_str:12 [ main::i#2 line_cursor#19 char_cursor#2 print_str::str#2 ] )
  to:print_str::@return
print_str::@return: scope:[print_str]  from print_str::@1
  [46] return  [ char_cursor#2 ] ( main:2::print_str:12 [ main::i#2 line_cursor#19 char_cursor#2 ] )
  to:@return
print_str::@2: scope:[print_str]  from print_str::@1
  [47] *((byte*) char_cursor#2) ← *((byte*) print_str::str#2) [ char_cursor#2 print_str::str#2 ] ( main:2::print_str:12 [ main::i#2 line_cursor#19 char_cursor#2 print_str::str#2 ] )
  [48] (byte*) char_cursor#1 ← ++ (byte*) char_cursor#2 [ print_str::str#2 char_cursor#1 ] ( main:2::print_str:12 [ main::i#2 line_cursor#19 print_str::str#2 char_cursor#1 ] )
  [49] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#2 [ print_str::str#0 char_cursor#1 ] ( main:2::print_str:12 [ main::i#2 line_cursor#19 print_str::str#0 char_cursor#1 ] )
  to:print_str::@1
print_cls: scope:[print_cls]  from main::@3
  [50] phi() [ ] ( main:2::print_cls:7 [ ] )
  to:print_cls::@1
print_cls::@1: scope:[print_cls]  from print_cls print_cls::@1
  [51] (byte*) print_cls::sc#2 ← phi( print_cls/(const byte*) SCREEN#0 print_cls::@1/(byte*) print_cls::sc#1 ) [ print_cls::sc#2 ] ( main:2::print_cls:7 [ print_cls::sc#2 ] )
  [52] *((byte*) print_cls::sc#2) ← (byte) ' ' [ print_cls::sc#2 ] ( main:2::print_cls:7 [ print_cls::sc#2 ] )
  [53] (byte*) print_cls::sc#1 ← ++ (byte*) print_cls::sc#2 [ print_cls::sc#1 ] ( main:2::print_cls:7 [ print_cls::sc#1 ] )
  [54] if((byte*) print_cls::sc#1!=(const byte*) SCREEN#0+(word/signed word/dword/signed dword) 1000) goto print_cls::@1 [ print_cls::sc#1 ] ( main:2::print_cls:7 [ print_cls::sc#1 ] )
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls::@1
  [55] return  [ ] ( main:2::print_cls:7 [ ] )
  to:@return
lin16u_gen: scope:[lin16u_gen]  from main
  [56] phi() [ ] ( main:2::lin16u_gen:5 [ ] )
  [57] call divr16u param-assignment [ divr16u::return#0 rem16u#1 ] ( main:2::lin16u_gen:5 [ divr16u::return#0 rem16u#1 ] )
  [58] (word) divr16u::return#2 ← (word) divr16u::return#0 [ divr16u::return#2 rem16u#1 ] ( main:2::lin16u_gen:5 [ divr16u::return#2 rem16u#1 ] )
  to:lin16u_gen::@3
lin16u_gen::@3: scope:[lin16u_gen]  from lin16u_gen
  [59] (word) lin16u_gen::stepi#0 ← (word) divr16u::return#2 [ lin16u_gen::stepi#0 rem16u#1 ] ( main:2::lin16u_gen:5 [ lin16u_gen::stepi#0 rem16u#1 ] )
  [60] (word) divr16u::rem#4 ← (word) rem16u#1 [ lin16u_gen::stepi#0 divr16u::rem#4 ] ( main:2::lin16u_gen:5 [ lin16u_gen::stepi#0 divr16u::rem#4 ] )
  [61] call divr16u param-assignment [ divr16u::return#0 lin16u_gen::stepi#0 ] ( main:2::lin16u_gen:5 [ divr16u::return#0 lin16u_gen::stepi#0 ] )
  [62] (word) divr16u::return#3 ← (word) divr16u::return#0 [ lin16u_gen::stepi#0 divr16u::return#3 ] ( main:2::lin16u_gen:5 [ lin16u_gen::stepi#0 divr16u::return#3 ] )
  to:lin16u_gen::@4
lin16u_gen::@4: scope:[lin16u_gen]  from lin16u_gen::@3
  [63] (word) lin16u_gen::stepf#0 ← (word) divr16u::return#3 [ lin16u_gen::stepi#0 lin16u_gen::stepf#0 ] ( main:2::lin16u_gen:5 [ lin16u_gen::stepi#0 lin16u_gen::stepf#0 ] )
  [64] (dword) lin16u_gen::step#0 ← (word) lin16u_gen::stepi#0 dw= (word) lin16u_gen::stepf#0 [ lin16u_gen::step#0 ] ( main:2::lin16u_gen:5 [ lin16u_gen::step#0 ] )
  to:lin16u_gen::@1
lin16u_gen::@1: scope:[lin16u_gen]  from lin16u_gen::@1 lin16u_gen::@4
  [65] (word) lin16u_gen::i#2 ← phi( lin16u_gen::@1/(word) lin16u_gen::i#1 lin16u_gen::@4/(byte/signed byte/word/signed word/dword/signed dword) 0 ) [ lin16u_gen::step#0 lin16u_gen::val#2 lin16u_gen::lintab#2 lin16u_gen::i#2 ] ( main:2::lin16u_gen:5 [ lin16u_gen::step#0 lin16u_gen::val#2 lin16u_gen::lintab#2 lin16u_gen::i#2 ] )
  [65] (word*) lin16u_gen::lintab#2 ← phi( lin16u_gen::@1/(word*) lin16u_gen::lintab#1 lin16u_gen::@4/(const word[20]) main::lintab#0 ) [ lin16u_gen::step#0 lin16u_gen::val#2 lin16u_gen::lintab#2 lin16u_gen::i#2 ] ( main:2::lin16u_gen:5 [ lin16u_gen::step#0 lin16u_gen::val#2 lin16u_gen::lintab#2 lin16u_gen::i#2 ] )
  [65] (dword) lin16u_gen::val#2 ← phi( lin16u_gen::@1/(dword) lin16u_gen::val#1 lin16u_gen::@4/(const word) lin16u_gen::min#0*(dword/signed dword) 65536+(byte/signed byte/word/signed word/dword/signed dword) 0 ) [ lin16u_gen::step#0 lin16u_gen::val#2 lin16u_gen::lintab#2 lin16u_gen::i#2 ] ( main:2::lin16u_gen:5 [ lin16u_gen::step#0 lin16u_gen::val#2 lin16u_gen::lintab#2 lin16u_gen::i#2 ] )
  [66] (word~) lin16u_gen::$5 ← > (dword) lin16u_gen::val#2 [ lin16u_gen::step#0 lin16u_gen::val#2 lin16u_gen::lintab#2 lin16u_gen::i#2 lin16u_gen::$5 ] ( main:2::lin16u_gen:5 [ lin16u_gen::step#0 lin16u_gen::val#2 lin16u_gen::lintab#2 lin16u_gen::i#2 lin16u_gen::$5 ] )
  [67] *((word*) lin16u_gen::lintab#2) ← (word~) lin16u_gen::$5 [ lin16u_gen::step#0 lin16u_gen::val#2 lin16u_gen::lintab#2 lin16u_gen::i#2 ] ( main:2::lin16u_gen:5 [ lin16u_gen::step#0 lin16u_gen::val#2 lin16u_gen::lintab#2 lin16u_gen::i#2 ] )
  [68] (dword) lin16u_gen::val#1 ← (dword) lin16u_gen::val#2 + (dword) lin16u_gen::step#0 [ lin16u_gen::step#0 lin16u_gen::lintab#2 lin16u_gen::i#2 lin16u_gen::val#1 ] ( main:2::lin16u_gen:5 [ lin16u_gen::step#0 lin16u_gen::lintab#2 lin16u_gen::i#2 lin16u_gen::val#1 ] )
  [69] (word*) lin16u_gen::lintab#1 ← (word*) lin16u_gen::lintab#2 + (byte/signed byte/word/signed word/dword/signed dword) 2 [ lin16u_gen::step#0 lin16u_gen::i#2 lin16u_gen::val#1 lin16u_gen::lintab#1 ] ( main:2::lin16u_gen:5 [ lin16u_gen::step#0 lin16u_gen::i#2 lin16u_gen::val#1 lin16u_gen::lintab#1 ] )
  [70] (word) lin16u_gen::i#1 ← ++ (word) lin16u_gen::i#2 [ lin16u_gen::step#0 lin16u_gen::val#1 lin16u_gen::lintab#1 lin16u_gen::i#1 ] ( main:2::lin16u_gen:5 [ lin16u_gen::step#0 lin16u_gen::val#1 lin16u_gen::lintab#1 lin16u_gen::i#1 ] )
  [71] if((word) lin16u_gen::i#1<(const word) lin16u_gen::length#0) goto lin16u_gen::@1 [ lin16u_gen::step#0 lin16u_gen::val#1 lin16u_gen::lintab#1 lin16u_gen::i#1 ] ( main:2::lin16u_gen:5 [ lin16u_gen::step#0 lin16u_gen::val#1 lin16u_gen::lintab#1 lin16u_gen::i#1 ] )
  to:lin16u_gen::@return
lin16u_gen::@return: scope:[lin16u_gen]  from lin16u_gen::@1
  [72] return  [ ] ( main:2::lin16u_gen:5 [ ] )
  to:@return
divr16u: scope:[divr16u]  from lin16u_gen lin16u_gen::@3
  [73] (word) divr16u::divisor#6 ← phi( lin16u_gen/(const word) lin16u_gen::length#0-(byte/signed byte/word/signed word/dword/signed dword) 1 lin16u_gen::@3/(const word) lin16u_gen::length#0-(byte/signed byte/word/signed word/dword/signed dword) 1 ) [ divr16u::rem#10 divr16u::dividend#5 divr16u::divisor#6 ] ( main:2::lin16u_gen:5::divr16u:57 [ divr16u::rem#10 divr16u::dividend#5 divr16u::divisor#6 ] main:2::lin16u_gen:5::divr16u:61 [ lin16u_gen::stepi#0 divr16u::rem#10 divr16u::dividend#5 divr16u::divisor#6 ] )
  [73] (word) divr16u::dividend#5 ← phi( lin16u_gen/(const word) lin16u_gen::ampl#0 lin16u_gen::@3/(byte/signed byte/word/signed word/dword/signed dword) 0 ) [ divr16u::rem#10 divr16u::dividend#5 divr16u::divisor#6 ] ( main:2::lin16u_gen:5::divr16u:57 [ divr16u::rem#10 divr16u::dividend#5 divr16u::divisor#6 ] main:2::lin16u_gen:5::divr16u:61 [ lin16u_gen::stepi#0 divr16u::rem#10 divr16u::dividend#5 divr16u::divisor#6 ] )
  [73] (word) divr16u::rem#10 ← phi( lin16u_gen/(byte/signed byte/word/signed word/dword/signed dword) 0 lin16u_gen::@3/(word) divr16u::rem#4 ) [ divr16u::rem#10 divr16u::dividend#5 divr16u::divisor#6 ] ( main:2::lin16u_gen:5::divr16u:57 [ divr16u::rem#10 divr16u::dividend#5 divr16u::divisor#6 ] main:2::lin16u_gen:5::divr16u:61 [ lin16u_gen::stepi#0 divr16u::rem#10 divr16u::dividend#5 divr16u::divisor#6 ] )
  to:divr16u::@1
divr16u::@1: scope:[divr16u]  from divr16u divr16u::@3
  [74] (byte) divr16u::i#2 ← phi( divr16u/(byte/signed byte/word/signed word/dword/signed dword) 0 divr16u::@3/(byte) divr16u::i#1 ) [ divr16u::divisor#6 divr16u::rem#5 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 ] ( main:2::lin16u_gen:5::divr16u:57 [ divr16u::divisor#6 divr16u::rem#5 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 ] main:2::lin16u_gen:5::divr16u:61 [ lin16u_gen::stepi#0 divr16u::divisor#6 divr16u::rem#5 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 ] )
  [74] (word) divr16u::quotient#3 ← phi( divr16u/(byte/signed byte/word/signed word/dword/signed dword) 0 divr16u::@3/(word) divr16u::return#0 ) [ divr16u::divisor#6 divr16u::rem#5 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 ] ( main:2::lin16u_gen:5::divr16u:57 [ divr16u::divisor#6 divr16u::rem#5 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 ] main:2::lin16u_gen:5::divr16u:61 [ lin16u_gen::stepi#0 divr16u::divisor#6 divr16u::rem#5 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 ] )
  [74] (word) divr16u::dividend#3 ← phi( divr16u/(word) divr16u::dividend#5 divr16u::@3/(word) divr16u::dividend#0 ) [ divr16u::divisor#6 divr16u::rem#5 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 ] ( main:2::lin16u_gen:5::divr16u:57 [ divr16u::divisor#6 divr16u::rem#5 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 ] main:2::lin16u_gen:5::divr16u:61 [ lin16u_gen::stepi#0 divr16u::divisor#6 divr16u::rem#5 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 ] )
  [74] (word) divr16u::rem#5 ← phi( divr16u/(word) divr16u::rem#10 divr16u::@3/(word) divr16u::rem#11 ) [ divr16u::divisor#6 divr16u::rem#5 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 ] ( main:2::lin16u_gen:5::divr16u:57 [ divr16u::divisor#6 divr16u::rem#5 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 ] main:2::lin16u_gen:5::divr16u:61 [ lin16u_gen::stepi#0 divr16u::divisor#6 divr16u::rem#5 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 ] )
  [75] (word) divr16u::rem#0 ← (word) divr16u::rem#5 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 ] ( main:2::lin16u_gen:5::divr16u:57 [ divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 ] main:2::lin16u_gen:5::divr16u:61 [ lin16u_gen::stepi#0 divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 ] )
  [76] (byte~) divr16u::$1 ← > (word) divr16u::dividend#3 [ divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$1 ] ( main:2::lin16u_gen:5::divr16u:57 [ divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$1 ] main:2::lin16u_gen:5::divr16u:61 [ lin16u_gen::stepi#0 divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$1 ] )
  [77] (byte~) divr16u::$2 ← (byte~) divr16u::$1 & (byte/word/signed word/dword/signed dword) 128 [ divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$2 ] ( main:2::lin16u_gen:5::divr16u:57 [ divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$2 ] main:2::lin16u_gen:5::divr16u:61 [ lin16u_gen::stepi#0 divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$2 ] )
  [78] if((byte~) divr16u::$2==(byte/signed byte/word/signed word/dword/signed dword) 0) goto divr16u::@2 [ divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 ] ( main:2::lin16u_gen:5::divr16u:57 [ divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 ] main:2::lin16u_gen:5::divr16u:61 [ lin16u_gen::stepi#0 divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 ] )
  to:divr16u::@4
divr16u::@4: scope:[divr16u]  from divr16u::@1
  [79] (word) divr16u::rem#1 ← (word) divr16u::rem#0 | (byte/signed byte/word/signed word/dword/signed dword) 1 [ divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#1 ] ( main:2::lin16u_gen:5::divr16u:57 [ divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#1 ] main:2::lin16u_gen:5::divr16u:61 [ lin16u_gen::stepi#0 divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#1 ] )
  to:divr16u::@2
divr16u::@2: scope:[divr16u]  from divr16u::@1 divr16u::@4
  [80] (word) divr16u::rem#6 ← phi( divr16u::@1/(word) divr16u::rem#0 divr16u::@4/(word) divr16u::rem#1 ) [ divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#6 ] ( main:2::lin16u_gen:5::divr16u:57 [ divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#6 ] main:2::lin16u_gen:5::divr16u:61 [ lin16u_gen::stepi#0 divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#6 ] )
  [81] (word) divr16u::dividend#0 ← (word) divr16u::dividend#3 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ divr16u::divisor#6 divr16u::quotient#3 divr16u::i#2 divr16u::dividend#0 divr16u::rem#6 ] ( main:2::lin16u_gen:5::divr16u:57 [ divr16u::divisor#6 divr16u::quotient#3 divr16u::i#2 divr16u::dividend#0 divr16u::rem#6 ] main:2::lin16u_gen:5::divr16u:61 [ lin16u_gen::stepi#0 divr16u::divisor#6 divr16u::quotient#3 divr16u::i#2 divr16u::dividend#0 divr16u::rem#6 ] )
  [82] (word) divr16u::quotient#1 ← (word) divr16u::quotient#3 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ divr16u::divisor#6 divr16u::i#2 divr16u::dividend#0 divr16u::rem#6 divr16u::quotient#1 ] ( main:2::lin16u_gen:5::divr16u:57 [ divr16u::divisor#6 divr16u::i#2 divr16u::dividend#0 divr16u::rem#6 divr16u::quotient#1 ] main:2::lin16u_gen:5::divr16u:61 [ lin16u_gen::stepi#0 divr16u::divisor#6 divr16u::i#2 divr16u::dividend#0 divr16u::rem#6 divr16u::quotient#1 ] )
  [83] if((word) divr16u::rem#6<(word) divr16u::divisor#6) goto divr16u::@3 [ divr16u::divisor#6 divr16u::i#2 divr16u::dividend#0 divr16u::rem#6 divr16u::quotient#1 ] ( main:2::lin16u_gen:5::divr16u:57 [ divr16u::divisor#6 divr16u::i#2 divr16u::dividend#0 divr16u::rem#6 divr16u::quotient#1 ] main:2::lin16u_gen:5::divr16u:61 [ lin16u_gen::stepi#0 divr16u::divisor#6 divr16u::i#2 divr16u::dividend#0 divr16u::rem#6 divr16u::quotient#1 ] )
  to:divr16u::@5
divr16u::@5: scope:[divr16u]  from divr16u::@2
  [84] (word) divr16u::quotient#2 ← ++ (word) divr16u::quotient#1 [ divr16u::divisor#6 divr16u::i#2 divr16u::dividend#0 divr16u::rem#6 divr16u::quotient#2 ] ( main:2::lin16u_gen:5::divr16u:57 [ divr16u::divisor#6 divr16u::i#2 divr16u::dividend#0 divr16u::rem#6 divr16u::quotient#2 ] main:2::lin16u_gen:5::divr16u:61 [ lin16u_gen::stepi#0 divr16u::divisor#6 divr16u::i#2 divr16u::dividend#0 divr16u::rem#6 divr16u::quotient#2 ] )
  [85] (word) divr16u::rem#2 ← (word) divr16u::rem#6 - (word) divr16u::divisor#6 [ divr16u::divisor#6 divr16u::i#2 divr16u::dividend#0 divr16u::quotient#2 divr16u::rem#2 ] ( main:2::lin16u_gen:5::divr16u:57 [ divr16u::divisor#6 divr16u::i#2 divr16u::dividend#0 divr16u::quotient#2 divr16u::rem#2 ] main:2::lin16u_gen:5::divr16u:61 [ lin16u_gen::stepi#0 divr16u::divisor#6 divr16u::i#2 divr16u::dividend#0 divr16u::quotient#2 divr16u::rem#2 ] )
  to:divr16u::@3
divr16u::@3: scope:[divr16u]  from divr16u::@2 divr16u::@5
  [86] (word) divr16u::return#0 ← phi( divr16u::@2/(word) divr16u::quotient#1 divr16u::@5/(word) divr16u::quotient#2 ) [ divr16u::return#0 divr16u::divisor#6 divr16u::i#2 divr16u::rem#11 divr16u::dividend#0 ] ( main:2::lin16u_gen:5::divr16u:57 [ divr16u::return#0 divr16u::divisor#6 divr16u::i#2 divr16u::rem#11 divr16u::dividend#0 ] main:2::lin16u_gen:5::divr16u:61 [ lin16u_gen::stepi#0 divr16u::return#0 divr16u::divisor#6 divr16u::i#2 divr16u::rem#11 divr16u::dividend#0 ] )
  [86] (word) divr16u::rem#11 ← phi( divr16u::@2/(word) divr16u::rem#6 divr16u::@5/(word) divr16u::rem#2 ) [ divr16u::return#0 divr16u::divisor#6 divr16u::i#2 divr16u::rem#11 divr16u::dividend#0 ] ( main:2::lin16u_gen:5::divr16u:57 [ divr16u::return#0 divr16u::divisor#6 divr16u::i#2 divr16u::rem#11 divr16u::dividend#0 ] main:2::lin16u_gen:5::divr16u:61 [ lin16u_gen::stepi#0 divr16u::return#0 divr16u::divisor#6 divr16u::i#2 divr16u::rem#11 divr16u::dividend#0 ] )
  [87] (byte) divr16u::i#1 ← ++ (byte) divr16u::i#2 [ divr16u::return#0 divr16u::divisor#6 divr16u::rem#11 divr16u::dividend#0 divr16u::i#1 ] ( main:2::lin16u_gen:5::divr16u:57 [ divr16u::return#0 divr16u::divisor#6 divr16u::rem#11 divr16u::dividend#0 divr16u::i#1 ] main:2::lin16u_gen:5::divr16u:61 [ lin16u_gen::stepi#0 divr16u::return#0 divr16u::divisor#6 divr16u::rem#11 divr16u::dividend#0 divr16u::i#1 ] )
  [88] if((byte) divr16u::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto divr16u::@1 [ divr16u::return#0 divr16u::divisor#6 divr16u::rem#11 divr16u::dividend#0 divr16u::i#1 ] ( main:2::lin16u_gen:5::divr16u:57 [ divr16u::return#0 divr16u::divisor#6 divr16u::rem#11 divr16u::dividend#0 divr16u::i#1 ] main:2::lin16u_gen:5::divr16u:61 [ lin16u_gen::stepi#0 divr16u::return#0 divr16u::divisor#6 divr16u::rem#11 divr16u::dividend#0 divr16u::i#1 ] )
  to:divr16u::@6
divr16u::@6: scope:[divr16u]  from divr16u::@3
  [89] (word) rem16u#1 ← (word) divr16u::rem#11 [ divr16u::return#0 rem16u#1 ] ( main:2::lin16u_gen:5::divr16u:57 [ divr16u::return#0 rem16u#1 ] main:2::lin16u_gen:5::divr16u:61 [ lin16u_gen::stepi#0 divr16u::return#0 rem16u#1 ] )
  to:divr16u::@return
divr16u::@return: scope:[divr16u]  from divr16u::@6
  [90] return  [ divr16u::return#0 rem16u#1 ] ( main:2::lin16u_gen:5::divr16u:57 [ divr16u::return#0 rem16u#1 ] main:2::lin16u_gen:5::divr16u:61 [ lin16u_gen::stepi#0 divr16u::return#0 rem16u#1 ] )
  to:@return
