@begin: scope:[]  from
  to:@1
@1: scope:[]  from @begin
  [0] call main param-assignment [ ]
  to:@end
@end: scope:[]  from @1
main: scope:[main]  from @1
  [1] phi() [ ]
  to:main::@1
main::@1: scope:[main]  from main main::@5
  [2] (byte) main::i#4 ← phi( main/(byte) 0 main::@5/(byte) main::i#1 ) [ main::i#4 ]
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2
  [3] (byte) main::j#2 ← phi( main::@1/(byte) 0 main::@2/(byte) main::j#1 ) [ main::i#4 main::j#2 ]
  [4] *((const byte*) SCREEN#0 + (byte) main::i#4) ← (byte) main::j#2 [ main::i#4 main::j#2 ]
  [5] (byte) main::j#1 ← ++ (byte) main::j#2 [ main::i#4 main::j#1 ]
  [6] if((byte) main::j#1!=(byte) 101) goto main::@2 [ main::i#4 main::j#1 ]
  to:main::@5
main::@5: scope:[main]  from main::@2
  [7] (byte) main::i#1 ← ++ (byte) main::i#4 [ main::i#1 ]
  [8] if((byte) main::i#1!=(byte) 101) goto main::@1 [ main::i#1 ]
  to:main::@3
main::@3: scope:[main]  from main::@5 main::@7
  [9] (byte) main::k#4 ← phi( main::@5/(byte) 0 main::@7/(byte) main::k#1 ) [ main::k#4 ]
  to:main::@4
main::@4: scope:[main]  from main::@3 main::@4
  [10] (byte) main::l#2 ← phi( main::@3/(byte) 0 main::@4/(byte) main::l#1 ) [ main::k#4 main::l#2 ]
  asm { eor#$55tax }
  [12] *((const byte*) SCREEN#0 + (byte) main::k#4) ← (byte) main::l#2 [ main::k#4 main::l#2 ]
  [13] (byte) main::l#1 ← ++ (byte) main::l#2 [ main::k#4 main::l#1 ]
  [14] if((byte) main::l#1!=(byte) 101) goto main::@4 [ main::k#4 main::l#1 ]
  to:main::@7
main::@7: scope:[main]  from main::@4
  [15] (byte) main::k#1 ← ++ (byte) main::k#4 [ main::k#1 ]
  [16] if((byte) main::k#1!=(byte) 101) goto main::@3 [ main::k#1 ]
  to:main::@return
main::@return: scope:[main]  from main::@7
  [17] return  [ ]
  to:@return
