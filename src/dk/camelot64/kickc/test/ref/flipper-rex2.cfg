@BEGIN: from
  call main param-assignment
  to:@END
main: from @BEGIN
  call prepare param-assignment
  to:main::@2
main::@2: from @18 @2 main
  (byte) main::c#2 ← phi( @2/(byte) main::c#1 @18/(byte) 25 main/(byte) 25 )
  to:main::@3
main::@3: from main::@2 main::@3
  (byte~) main::$1 ← * (word) 53266
  if((byte~) main::$1!=(byte) 254) goto main::@3
  to:main::@4
main::@4: from main::@3 main::@4
  (byte~) main::$3 ← * (word) 53266
  if((byte~) main::$3!=(byte) 255) goto main::@4
  to:@2
@2: from main::@4
  (byte) main::c#1 ← -- (byte) main::c#2
  if((byte) main::c#1!=(byte) 0) goto main::@2
  to:@3
@3: from @2
  call flip param-assignment
  to:@17
@17: from @3
  call plot param-assignment
  to:@18
@18: from @17
  if(true) goto main::@2
  to:main::@return
main::@return: from @18
  return 
  to:@RETURN
prepare: from main
  to:prepare::@1
prepare::@1: from prepare prepare::@1
  (byte) prepare::i#2 ← phi( prepare/(byte) 0 prepare::@1/(byte) prepare::i#1 )
  *((word) 4096 + (byte) prepare::i#2) ← (byte) prepare::i#2
  (byte) prepare::i#1 ← ++ (byte) prepare::i#2
  if((byte) prepare::i#1!=(byte) 0) goto prepare::@1
  to:prepare::@return
prepare::@return: from prepare::@1
  return 
  to:@RETURN
flip: from @3
  to:flip::@1
flip::@1: from @8 flip
  (byte) flip::r#2 ← phi( @8/(byte) flip::r#1 flip/(byte) 16 )
  (byte) flip::srcIdx#3 ← phi( @8/(byte) flip::srcIdx#1 flip/(byte) 0 )
  (byte) flip::dstIdx#5 ← phi( @8/(byte) flip::dstIdx#2 flip/(byte) 15 )
  to:flip::@2
flip::@2: from flip::@1 flip::@2
  (byte) flip::c#2 ← phi( flip::@1/(byte) 16 flip::@2/(byte) flip::c#1 )
  (byte) flip::dstIdx#3 ← phi( flip::@1/(byte) flip::dstIdx#5 flip::@2/(byte) flip::dstIdx#1 )
  (byte) flip::srcIdx#2 ← phi( flip::@1/(byte) flip::srcIdx#3 flip::@2/(byte) flip::srcIdx#1 )
  (byte~) flip::$0 ← (word) 4096 *idx (byte) flip::srcIdx#2
  *((word) 4352 + (byte) flip::dstIdx#3) ← (byte~) flip::$0
  (byte) flip::srcIdx#1 ← ++ (byte) flip::srcIdx#2
  (byte) flip::dstIdx#1 ← (byte) flip::dstIdx#3 + (byte) 16
  (byte) flip::c#1 ← -- (byte) flip::c#2
  if((byte) flip::c#1!=(byte) 0) goto flip::@2
  to:@8
@8: from flip::@2
  (byte) flip::dstIdx#2 ← -- (byte) flip::dstIdx#1
  (byte) flip::r#1 ← -- (byte) flip::r#2
  if((byte) flip::r#1!=(byte) 0) goto flip::@1
  to:flip::@3
flip::@3: from @8 flip::@3
  (byte) flip::i#2 ← phi( @8/(byte) 0 flip::@3/(byte) flip::i#1 )
  (byte~) flip::$4 ← (word) 4352 *idx (byte) flip::i#2
  *((word) 4096 + (byte) flip::i#2) ← (byte~) flip::$4
  (byte) flip::i#1 ← ++ (byte) flip::i#2
  if((byte) flip::i#1!=(byte) 0) goto flip::@3
  to:flip::@return
flip::@return: from flip::@3
  return 
  to:@RETURN
plot: from @17
  to:plot::@1
plot::@1: from @12 plot
  (byte) plot::y#2 ← phi( @12/(byte) plot::y#1 plot/(byte) 16 )
  (byte) plot::i#3 ← phi( @12/(byte) plot::i#1 plot/(byte) 0 )
  (byte*) plot::line#2 ← phi( @12/(byte*) plot::line#1 plot/(word) 1236 )
  to:plot::@2
plot::@2: from plot::@1 plot::@2
  (byte) plot::x#2 ← phi( plot::@1/(byte) 0 plot::@2/(byte) plot::x#1 )
  (byte) plot::i#2 ← phi( plot::@1/(byte) plot::i#3 plot::@2/(byte) plot::i#1 )
  (byte~) plot::$3 ← (word) 4096 *idx (byte) plot::i#2
  *((byte*) plot::line#2 + (byte) plot::x#2) ← (byte~) plot::$3
  (byte) plot::i#1 ← ++ (byte) plot::i#2
  (byte) plot::x#1 ← ++ (byte) plot::x#2
  if((byte) plot::x#1<(byte) 16) goto plot::@2
  to:@12
@12: from plot::@2
  (byte*) plot::line#1 ← (byte*) plot::line#2 + (byte) 40
  (byte) plot::y#1 ← -- (byte) plot::y#2
  if((byte) plot::y#1!=(byte) 0) goto plot::@1
  to:plot::@return
plot::@return: from @12
  return 
  to:@RETURN
@END: from @BEGIN
