constant struct MOS6526_CIA* const CIA1 = (struct MOS6526_CIA*) 56320
constant const byte KEY_0 = $23
constant const byte KEY_1 = $38
constant const byte KEY_2 = $3b
constant const byte KEY_3 = 8
constant const byte KEY_4 = $b
constant const byte KEY_5 = $10
constant const byte KEY_6 = $13
constant const byte KEY_7 = $18
constant const byte KEY_8 = $1b
constant const byte KEY_9 = $20
constant const byte KEY_A = $a
constant const byte KEY_ARROW_LEFT = $39
constant const byte KEY_ARROW_UP = $36
constant const byte KEY_ASTERISK = $31
constant const byte KEY_AT = $2e
constant const byte KEY_B = $1c
constant const byte KEY_C = $14
constant const byte KEY_COLON = $2d
constant const byte KEY_COMMA = $2f
constant const byte KEY_D = $12
constant const byte KEY_DOT = $2c
constant const byte KEY_E = $e
constant const byte KEY_EQUALS = $35
constant const byte KEY_F = $15
constant const byte KEY_G = $1a
constant const byte KEY_H = $1d
constant const byte KEY_I = $21
constant const byte KEY_J = $22
constant const byte KEY_K = $25
constant const byte KEY_L = $2a
constant const byte KEY_M = $24
constant const byte KEY_MINUS = $2b
constant const byte KEY_N = $27
constant const byte KEY_O = $26
constant const byte KEY_P = $29
constant const byte KEY_PLUS = $28
constant const byte KEY_POUND = $30
constant const byte KEY_Q = $3e
constant const byte KEY_R = $11
constant const byte KEY_S = $d
constant const byte KEY_SEMICOLON = $32
constant const byte KEY_SLASH = $37
constant const byte KEY_SPACE = $3c
constant const byte KEY_T = $16
constant const byte KEY_U = $1e
constant const byte KEY_V = $1f
constant const byte KEY_W = 9
constant const byte KEY_X = $17
constant const byte KEY_Y = $19
constant const byte KEY_Z = $c
constant byte OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR = 2
constant byte OFFSET_STRUCT_MOS6526_CIA_PORT_B = 1
constant byte OFFSET_STRUCT_MOS6526_CIA_PORT_B_DDR = 3
constant byte* const RASTER = (byte*) 53266
constant const byte* keyboard_char_keycodes[]  = { KEY_AT, KEY_A, KEY_B, KEY_C, KEY_D, KEY_E, KEY_F, KEY_G, KEY_H, KEY_I, KEY_J, KEY_K, KEY_L, KEY_M, KEY_N, KEY_O, KEY_P, KEY_Q, KEY_R, KEY_S, KEY_T, KEY_U, KEY_V, KEY_W, KEY_X, KEY_Y, KEY_Z, $3f, KEY_POUND, $3f, KEY_ARROW_UP, KEY_ARROW_LEFT, KEY_SPACE, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, KEY_ASTERISK, KEY_PLUS, KEY_COMMA, KEY_MINUS, KEY_DOT, KEY_SLASH, KEY_0, KEY_1, KEY_2, KEY_3, KEY_4, KEY_5, KEY_6, KEY_7, KEY_8, KEY_9, KEY_COLON, KEY_SEMICOLON, $3f, KEY_EQUALS, $3f, $3f }
byte keyboard_get_keycode(byte keyboard_get_keycode::ch)
byte keyboard_get_keycode::ch
byte keyboard_get_keycode::ch#0 reg byte x 1102.0
byte keyboard_get_keycode::return
byte keyboard_get_keycode::return#0 reg byte a 367.33333333333337
byte keyboard_get_keycode::return#2 reg byte a 202.0
void keyboard_init()
byte keyboard_key_pressed(byte keyboard_key_pressed::key)
byte~ keyboard_key_pressed::$2 reg byte a 2002.0
byte keyboard_key_pressed::colidx
byte keyboard_key_pressed::colidx#0 reg byte y 333.6666666666667
byte keyboard_key_pressed::key
byte keyboard_key_pressed::key#0 reg byte x 1051.5
byte keyboard_key_pressed::return
byte keyboard_key_pressed::return#0 reg byte a 367.33333333333337
byte keyboard_key_pressed::return#2 reg byte a 202.0
byte keyboard_key_pressed::rowidx
byte keyboard_key_pressed::rowidx#0 reg byte a 2002.0
constant byte* keyboard_matrix_col_bitmask[8]  = { 1, 2, 4, 8, $10, $20, $40, $80 }
byte keyboard_matrix_read(byte keyboard_matrix_read::rowid)
byte keyboard_matrix_read::return
byte keyboard_matrix_read::return#0 reg byte a 2775.75
byte keyboard_matrix_read::return#2 reg byte a 2002.0
byte keyboard_matrix_read::return#3 reg byte a 202.0
byte keyboard_matrix_read::row_pressed_bits
byte keyboard_matrix_read::rowid
byte keyboard_matrix_read::rowid#0 reg byte x 2002.0
byte keyboard_matrix_read::rowid#1 reg byte x 202.0
byte keyboard_matrix_read::rowid#2 reg byte x 11103.0
constant byte* keyboard_matrix_row_bitmask[8]  = { $fe, $fd, $fb, $f7, $ef, $df, $bf, $7f }
void main()
byte~ main::$14 reg byte a 202.0
byte~ main::$4 reg byte a 2002.0
byte main::ch
byte main::ch#1 ch zp[1]:7 151.5
byte main::ch#2 ch zp[1]:7 28.857142857142858
byte main::col
byte main::col#1 reg byte y 1501.5
byte main::col#2 reg byte y 667.3333333333334
byte main::i
byte main::i#1 i zp[1]:8 202.0
byte main::i#2 i zp[1]:8 151.5
byte main::i#3 i zp[1]:8 42.08333333333333
byte main::i#4 i zp[1]:8 202.0
byte main::i#6 i zp[1]:8 168.33333333333331
byte main::key
byte main::key#0 reg byte a 151.5
byte main::row
byte main::row#1 row zp[1]:4 151.5
byte main::row#2 row zp[1]:4 21.642857142857142
byte main::row_pressed_bits
byte main::row_pressed_bits#0 reg byte x 202.0
byte main::row_pressed_bits#1 reg byte x 667.3333333333334
byte main::row_pressed_bits#2 reg byte x 620.8
byte* main::sc
byte* main::sc#1 sc zp[2]:2 22.0
byte* main::sc#2 sc zp[2]:2 14.666666666666666
byte* main::screen
byte* main::screen#1 screen zp[2]:5 71.0
byte* main::screen#13 screen zp[2]:5 169.53846153846155
byte* main::screen#2 screen zp[2]:5 10.142857142857142

zp[2]:2 [ main::sc#2 main::sc#1 ]
zp[1]:4 [ main::row#2 main::row#1 ]
zp[2]:5 [ main::screen#13 main::screen#1 main::screen#2 ]
reg byte x [ main::row_pressed_bits#2 main::row_pressed_bits#1 main::row_pressed_bits#0 ]
reg byte y [ main::col#2 main::col#1 ]
zp[1]:7 [ main::ch#2 main::ch#1 ]
zp[1]:8 [ main::i#4 main::i#3 main::i#6 main::i#1 main::i#2 ]
reg byte x [ keyboard_matrix_read::rowid#2 keyboard_matrix_read::rowid#0 keyboard_matrix_read::rowid#1 ]
reg byte a [ keyboard_matrix_read::return#3 ]
reg byte a [ main::$4 ]
reg byte x [ keyboard_get_keycode::ch#0 ]
reg byte a [ keyboard_get_keycode::return#2 ]
reg byte a [ main::key#0 ]
reg byte x [ keyboard_key_pressed::key#0 ]
reg byte a [ keyboard_key_pressed::return#2 ]
reg byte a [ main::$14 ]
reg byte a [ keyboard_matrix_read::return#0 ]
reg byte a [ keyboard_get_keycode::return#0 ]
reg byte y [ keyboard_key_pressed::colidx#0 ]
reg byte a [ keyboard_key_pressed::rowidx#0 ]
reg byte a [ keyboard_matrix_read::return#2 ]
reg byte a [ keyboard_key_pressed::$2 ]
reg byte a [ keyboard_key_pressed::return#0 ]
