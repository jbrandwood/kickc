__constant char * const BITMAP = (char *) 8192
__constant const char BLUE = 6
__constant char * const BORDER_COLOR = (char *) 53280
__constant char * const D011 = (char *) 53265
__constant char * const SCREEN = (char *) 1024
__constant const char VICII_BMM = $20
__constant const char VICII_DEN = $10
__constant char * const VICII_MEMORY = (char *) 53272
__constant const char VICII_RSEL = 8
__constant char bitmask[] = { $80, $40, $20, $10, 8, 4, 2, 1 }
void circle(int xc , int yc , int r)
int circle::$0 // zp[2]:8 202.0
int circle::$10 // zp[2]:8 20002.0
int circle::$5 // zp[2]:10 20002.0
int circle::$6 // zp[2]:10 20002.0
int circle::$7 // zp[2]:8 20002.0
int circle::$9 // zp[2]:12 20002.0
int circle::p
int circle::p#0 // p zp[2]:8 202.0
int circle::p#1 // p zp[2]:8 20002.0
int circle::p#10 // p zp[2]:8 1153.9615384615383
int circle::p#2 // p zp[2]:8 20002.0
int circle::p#3 // p zp[2]:8 5729.285714285716
int circle::r
int circle::r#0 // r zp[2]:6 71.0
int circle::x1
int circle::x1#1 // x1 zp[2]:4 20002.0
int circle::x1#10 // x1 zp[2]:4 3611.472222222223
int circle::xc
__constant int circle::xc#0 = $a0 // xc
int circle::y
int circle::y#1 // y zp[2]:6 6000.6
int circle::y#10 // y zp[2]:6 4231.192307692308
int circle::y#13 // y zp[2]:6 6684.166666666666
int circle::yc
__constant int circle::yc#0 = $64 // yc
void fill(char *start , int size , char val)
char *fill::addr
char *fill::addr#0 // addr zp[2]:6 11.0
char *fill::addr#1 // addr zp[2]:6 202.0
char *fill::addr#2 // addr zp[2]:6 138.33333333333331
char *fill::end
char *fill::end#0 // end zp[2]:4 22.4
int fill::size
int fill::size#2 // size zp[2]:4 11.0
char *fill::start
char fill::val
char fill::val#4 // reg byte x 16.833333333333332
void main()
int main::i
int main::i#1 // i zp[2]:2 22.0
int main::i#2 // i zp[2]:2 11.0
void plot(int x , int y)
char plot::$10 // reg byte a 200002.0
int plot::$11 // zp[2]:12 150001.5
int plot::$12 // zp[2]:16 200002.0
signed char plot::$13 // reg byte a 200002.0
char plot::$14 // reg byte a 200002.0
int plot::$15 // zp[2]:16 200002.0
int plot::$16 // zp[2]:16 200002.0
int plot::$8 // zp[2]:14 200002.0
char plot::$9 // reg byte a 200002.0
char *plot::location
char *plot::location#1 // location zp[2]:14 66667.33333333333
char *plot::location#2 // location zp[2]:14 40000.4
char *plot::location#3 // location zp[2]:14 100001.0
int plot::x
int plot::x#0 // x zp[2]:10 10001.0
int plot::x#1 // x zp[2]:10 10001.0
int plot::x#2 // x zp[2]:10 10001.0
int plot::x#3 // x zp[2]:10 10001.0
int plot::x#4 // x zp[2]:10 10001.0
int plot::x#5 // x zp[2]:10 10001.0
int plot::x#6 // x zp[2]:10 10001.0
int plot::x#7 // x zp[2]:10 10001.0
int plot::x#8 // x zp[2]:10 32000.800000000003
int plot::y
int plot::y#0 // y zp[2]:12 20002.0
int plot::y#1 // y zp[2]:12 20002.0
int plot::y#2 // y zp[2]:12 20002.0
int plot::y#3 // y zp[2]:12 20002.0
int plot::y#4 // y zp[2]:12 20002.0
int plot::y#5 // y zp[2]:12 20002.0
int plot::y#6 // y zp[2]:12 20002.0
int plot::y#7 // y zp[2]:12 20002.0
int plot::y#8 // y zp[2]:12 48001.2

zp[2]:2 [ main::i#2 main::i#1 ]
reg byte x [ fill::val#4 ]
zp[2]:4 [ circle::x1#10 circle::x1#1 fill::size#2 fill::end#0 ]
zp[2]:6 [ circle::y#13 circle::r#0 circle::y#10 circle::y#1 fill::addr#2 fill::addr#0 fill::addr#1 ]
zp[2]:8 [ circle::p#3 circle::p#0 circle::p#10 circle::p#1 circle::p#2 circle::$7 circle::$10 circle::$0 ]
zp[2]:10 [ circle::$5 circle::$6 plot::x#8 plot::x#5 plot::x#6 plot::x#7 plot::x#0 plot::x#1 plot::x#2 plot::x#3 plot::x#4 ]
zp[2]:12 [ circle::$9 plot::y#8 plot::y#5 plot::y#6 plot::y#7 plot::y#0 plot::y#1 plot::y#2 plot::y#3 plot::y#4 plot::$11 ]
zp[2]:14 [ plot::$8 plot::location#1 plot::location#2 plot::location#3 ]
reg byte a [ plot::$9 ]
reg byte a [ plot::$10 ]
zp[2]:16 [ plot::$15 plot::$16 plot::$12 ]
reg byte a [ plot::$13 ]
reg byte a [ plot::$14 ]
