
void __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] conio_cursor_x = 0
  [2] conio_cursor_y = 0
  [3] conio_line_text = DEFAULT_SCREEN
  [4] conio_line_color = COLORRAM
  [5] conio_textcolor = LIGHT_BLUE
  [6] l = 0
  [7] m = 0
  [8] call conio_c64_init
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  [9] phi()
  [10] call main
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [11] return 
  to:@return

void conio_c64_init()
conio_c64_init: scope:[conio_c64_init]  from __start::__init1
  [12] conio_c64_init::line#0 = *conio_c64_init::BASIC_CURSOR_LINE
  [13] if(conio_c64_init::line#0<$19) goto conio_c64_init::@2
  to:conio_c64_init::@1
conio_c64_init::@2: scope:[conio_c64_init]  from conio_c64_init
  [14] phi()
  to:conio_c64_init::@1
conio_c64_init::@1: scope:[conio_c64_init]  from conio_c64_init conio_c64_init::@2
  [15] conio_c64_init::line#2 = phi( conio_c64_init::@2/conio_c64_init::line#0, conio_c64_init/$19-1 )
  [16] gotoxy::y#2 = conio_c64_init::line#2
  [17] call gotoxy
  to:conio_c64_init::@return
conio_c64_init::@return: scope:[conio_c64_init]  from conio_c64_init::@1
  [18] return 
  to:@return

void main()
main: scope:[main]  from __start::@1
  [19] *((char *) 36879) = 8
  [20] chrout::petscii = lock
  [21] call chrout
  to:main::@50
main::@50: scope:[main]  from main
  [22] chrout::petscii = lower
  [23] call chrout
  to:main::@51
main::@51: scope:[main]  from main::@50
  [24] m = 0
  to:main::@1
main::@1: scope:[main]  from main::@2 main::@51
  [25] if(m<$28) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@1 main::@113
  [26] n#109 = phi( main::@1/0, main::@113/n#20 )
  [26] hiscore#110 = phi( main::@1/0, main::@113/hiscore#123 )
  [26] y#114 = phi( main::@1/0, main::@113/y#18 )
  [26] rem8u#127 = phi( main::@1/0, main::@113/rem8u#25 )
  [27] call clear_screen
  to:main::@52
main::@52: scope:[main]  from main::@3
  [28] phi()
  [29] call textcolor
  to:main::@53
main::@53: scope:[main]  from main::@52
  [30] phi()
  [31] call cputs
  to:main::@54
main::@54: scope:[main]  from main::@53
  [32] phi()
  [33] call textcolor
  to:main::@55
main::@55: scope:[main]  from main::@54
  [34] phi()
  [35] call cputs
  to:main::@56
main::@56: scope:[main]  from main::@55
  [36] phi()
  [37] call textcolor
  to:main::@57
main::@57: scope:[main]  from main::@56
  [38] phi()
  [39] call cputs
  to:main::@4
main::@4: scope:[main]  from main::@4 main::@57
  [40] l = *((char *) 197)
  [41] l = ++ l
  [42] if(l>=5+1) goto main::@4
  to:main::@5
main::@5: scope:[main]  from main::@4
  [43] phi()
  [44] call clear_screen
  to:main::@58
main::@58: scope:[main]  from main::@5
  [45] *((char *) 36869) = $ff
  [46] chrout::petscii = reverse_on
  [47] call chrout
  to:main::@59
main::@59: scope:[main]  from main::@58
  [48] chrout::petscii = red
  [49] call chrout
  to:main::@60
main::@60: scope:[main]  from main::@59
  [50] chrout::petscii = down
  [51] call chrout
  to:main::@6
main::@6: scope:[main]  from main::@60 main::@64
  [52] n#89 = phi( main::@60/n#109, main::@64/n#101 )
  [52] k#101 = phi( main::@60/1, main::@64/k#1 )
  [53] if(k#101<$16) goto main::@7
  to:main::@8
main::@8: scope:[main]  from main::@6
  [54] chrout::petscii = brick
  [55] call chrout
  to:main::@61
main::@61: scope:[main]  from main::@8
  [56] *((char *) 8185) = brick
  [57] *((char *)$1ff9+c) = 2
  [58] chrout::petscii = home
  [59] call chrout
  to:main::@62
main::@62: scope:[main]  from main::@61
  [60] if(l<1+1) goto main::@12
  to:main::@13
main::@13: scope:[main]  from main::@62 main::@73
  [61] z#28 = phi( main::@62/1, main::@73/z#9 )
  [62] random::k#0 = 7 - l
  [63] main::$177 = l << 1
  [64] main::$26 = main::$177 + l
  [65] random::n#0 = $1a - main::$26
  [66] call random
  to:main::@71
main::@71: scope:[main]  from main::@13
  [67] main::$29 = z#28 + m
  [68] if(main::$29<=$1f9) goto main::@14
  to:main::@12
main::@12: scope:[main]  from main::@62 main::@71 main::@73
  [69] z#128 = phi( main::@62/1, main::@71/z#28, main::@73/z#9 )
  [70] *((char *) 36878) = $f
  [71] chrout::petscii = home
  [72] call chrout
  to:main::@65
main::@65: scope:[main]  from main::@12
  [73] chrout::petscii = yellow
  [74] call chrout
  to:main::@66
main::@66: scope:[main]  from main::@65
  [75] chrout::petscii = $50
  [76] call chrout
  to:main::@67
main::@67: scope:[main]  from main::@66
  [77] chrout::petscii = $54
  [78] call chrout
  to:main::@68
main::@68: scope:[main]  from main::@67
  [79] chrout::petscii = $53
  [80] call chrout
  to:main::@69
main::@69: scope:[main]  from main::@68
  [81] chrout::petscii = $3a
  [82] call chrout
  to:main::@70
main::@70: scope:[main]  from main::@69
  [83] *((char *) 211) = $12
  to:main::@17
main::@17: scope:[main]  from main::@70 main::@74
  [84] j#13 = phi( main::@70/0, main::@74/j#3 )
  [85] if(j#13<4) goto main::@18
  to:main::@19
main::@19: scope:[main]  from main::@17
  [86] phi()
  [87] call write_score
  to:main::@75
main::@75: scope:[main]  from main::@19
  [88] chrout::petscii = home
  [89] call chrout
  to:main::@76
main::@76: scope:[main]  from main::@75
  [90] chrout::petscii = green
  [91] call chrout
  to:main::@77
main::@77: scope:[main]  from main::@76
  [92] *((char *) 211) = $a
  to:main::@20
main::@20: scope:[main]  from main::@77 main::@78
  [93] j#16 = phi( main::@77/0, main::@78/j#5 )
  [94] if(j#16<5) goto main::@21
  to:main::@22
main::@22: scope:[main]  from main::@20 main::@87
  [95] n#52 = phi( main::@20/n#89, main::@87/n#20 )
  [95] peephole#52 = phi( main::@20/$1f1f, main::@87/peephole#12 )
  [95] z#102 = phi( main::@20/z#128, main::@87/z#25 )
  [95] y#49 = phi( main::@20/y#114, main::@87/y#18 )
  [95] rem8u#48 = phi( main::@20/rem8u#127, main::@87/rem8u#25 )
  [95] tu#13 = phi( main::@20/1, main::@87/tu#1 )
  [96] chrout::petscii = home
  [97] call chrout
  to:main::@79
main::@79: scope:[main]  from main::@22
  [98] chrout::petscii = green
  [99] call chrout
  to:main::@80
main::@80: scope:[main]  from main::@79
  [100] chrout::petscii = reverse_on
  [101] call chrout
  to:main::@81
main::@81: scope:[main]  from main::@80
  [102] *((char *) 211) = $f
  [103] if(tu#13<$a) goto main::@23
  to:main::@45
main::@45: scope:[main]  from main::@81
  [104] chrout::petscii = $31
  [105] call chrout
  to:main::@82
main::@82: scope:[main]  from main::@45
  [106] chrout::petscii = $30
  [107] call chrout
  to:main::@24
main::@24: scope:[main]  from main::@103 main::@104 main::@105 main::@106 main::@23 main::@82 main::@84
  [108] phi()
  [109] call random
  to:main::@83
main::@83: scope:[main]  from main::@24
  [110] duck#0 = m
  [111] call random
  to:main::@84
main::@84: scope:[main]  from main::@83
  [112] main::$61 = m + $1e15
  [113] duck#1 = main::$61 + duck#0
  [114] main::$66 = duck#1 + 1
  [115] main::$69 = duck#1 + $16
  [116] main::$72 = duck#1 + $17
  [117] if(duck#1>$1fe3) goto main::@24
  to:main::@106
main::@106: scope:[main]  from main::@84
  [118] if(*((char *)duck#1)==brick) goto main::@24
  to:main::@105
main::@105: scope:[main]  from main::@106
  [119] if(*((char *)main::$66)==brick) goto main::@24
  to:main::@104
main::@104: scope:[main]  from main::@105
  [120] if(*((char *)main::$69)==brick) goto main::@24
  to:main::@103
main::@103: scope:[main]  from main::@104
  [121] if(*((char *)main::$72)==brick) goto main::@24
  to:main::@25
main::@25: scope:[main]  from main::@103
  [122] phi()
  [123] call chrono_restart
  to:main::@26
main::@26: scope:[main]  from main::@25 main::@90
  [124] n#20 = phi( main::@90/n#14, main::@25/n#52 )
  [124] peephole#12 = phi( main::@90/y#35, main::@25/peephole#52 )
  [124] z#100 = phi( main::@90/z#25, main::@25/z#102 )
  [124] y#18 = phi( main::@90/y#130, main::@25/y#49 )
  [124] rem8u#25 = phi( main::@90/divr8u::rem#11, main::@25/rem8u#48 )
  [124] score#19 = phi( main::@90/score#43, main::@25/score#38 )
  [124] time#11 = phi( main::@90/time#17, main::@25/0 )
  [125] if(time#11<$a) goto main::@27
  to:main::@28
main::@28: scope:[main]  from main::@26
  [126] tu#1 = ++ tu#13
  [127] score#4 = score#19 - $a
  [128] call write_score
  to:main::@86
main::@86: scope:[main]  from main::@28
  [129] *((char *) 36877) = $82
  [130] call wait
  to:main::@87
main::@87: scope:[main]  from main::@86
  [131] *((char *) 36877) = 0
  [132] main::$150 = duck#1 + c
  [133] *((char *)main::$150) = 0
  [134] main::$151 = duck#1
  [135] main::$152 = main::$151 + 1+c
  [136] *((char *)main::$152) = 0
  [137] main::$153 = duck#1
  [138] main::$154 = main::$153 + $16+c
  [139] *((char *)main::$154) = 0
  [140] main::$155 = duck#1
  [141] main::$156 = main::$155 + $17+c
  [142] *((char *)main::$156) = 0
  [143] if(tu#1<$b) goto main::@22
  to:main::@44
main::@44: scope:[main]  from main::@87
  [144] phi()
  [145] call clear_screen
  to:main::@91
main::@91: scope:[main]  from main::@44
  [146] *((char *) 36869) = $f0
  [147] chrout::petscii = lower
  [148] call chrout
  to:main::@92
main::@92: scope:[main]  from main::@91
  [149] phi()
  [150] call textcolor
  to:main::@93
main::@93: scope:[main]  from main::@92
  [151] phi()
  [152] call cputs
  to:main::@94
main::@94: scope:[main]  from main::@93
  [153] phi()
  [154] call textcolor
  to:main::@95
main::@95: scope:[main]  from main::@94
  [155] phi()
  [156] call cputs
  to:main::@96
main::@96: scope:[main]  from main::@95
  [157] phi()
  [158] call cputs
  to:main::@97
main::@97: scope:[main]  from main::@96
  [159] phi()
  [160] call textcolor
  to:main::@98
main::@98: scope:[main]  from main::@97
  [161] phi()
  [162] call cputs
  to:main::@99
main::@99: scope:[main]  from main::@98
  [163] if(score#38<=hiscore#110) goto main::@114
  to:main::@46
main::@114: scope:[main]  from main::@99
  [164] hiscore#124 = hiscore#110
  to:main::@46
main::@46: scope:[main]  from main::@114 main::@99
  [165] hiscore#19 = phi( main::@114/hiscore#124, main::@99/score#38 )
  [166] utoa::value#2 = hiscore#19
  [167] call utoa
  to:main::@100
main::@100: scope:[main]  from main::@46
  [168] phi()
  [169] call cputs
  to:main::@101
main::@101: scope:[main]  from main::@100
  [170] phi()
  [171] call textcolor
  to:main::@102
main::@102: scope:[main]  from main::@101
  [172] phi()
  [173] call cputs
  to:main::@47
main::@47: scope:[main]  from main::@102 main::@112
  [174] j#19 = *((char *) 197)
  [175] if(j#19==$b) goto main::@48
  to:main::@112
main::@112: scope:[main]  from main::@47
  [176] if(j#19!=$1c) goto main::@47
  to:main::@48
main::@48: scope:[main]  from main::@112 main::@47
  [177] if(j#19==$b) goto main::@113
  to:main::@49
main::@49: scope:[main]  from main::@48
  asm { jsr$FD22  }
  to:main::@return
main::@return: scope:[main]  from main::@49
  [179] return 
  to:@return
main::@113: scope:[main]  from main::@48
  [180] hiscore#123 = hiscore#19
  to:main::@3
main::@27: scope:[main]  from main::@26
  [181] phi()
  [182] call read_chrono
  to:main::@85
main::@85: scope:[main]  from main::@27
  [183] m = *((char *) 37151)
  [184] *((char *) 37154) = $7f
  [185] n#14 = *((char *) 37152)
  [186] *((char *) 37154) = $ff
  [187] main::$78 = $10 & m
  [188] if(main::$78!=0) goto main::@29
  to:main::@37
main::@37: scope:[main]  from main::@85
  [189] y#0 = -- y#18
  to:main::@29
main::@29: scope:[main]  from main::@37 main::@85
  [190] y#10 = phi( main::@37/y#0, main::@85/y#18 )
  [191] main::$81 = $80 & n#14
  [192] if(main::$81!=0) goto main::@30
  to:main::@38
main::@38: scope:[main]  from main::@29
  [193] y#1 = ++ y#10
  to:main::@30
main::@30: scope:[main]  from main::@29 main::@38
  [194] y#11 = phi( main::@29/y#10, main::@38/y#1 )
  [195] main::$84 = 4 & m
  [196] if(main::$84!=0) goto main::@31
  to:main::@39
main::@39: scope:[main]  from main::@30
  [197] y#2 = y#11 - $16
  to:main::@31
main::@31: scope:[main]  from main::@30 main::@39
  [198] y#12 = phi( main::@30/y#11, main::@39/y#2 )
  [199] main::$88 = 8 & m
  [200] if(main::$88!=0) goto main::@32
  to:main::@40
main::@40: scope:[main]  from main::@31
  [201] y#3 = y#12 + $16
  to:main::@32
main::@32: scope:[main]  from main::@31 main::@40
  [202] y#13 = phi( main::@31/y#12, main::@40/y#3 )
  [203] main::$92 = $20 & m
  [204] if(main::$92!=0) goto main::@33
  to:main::@41
main::@41: scope:[main]  from main::@32
  [205] *((char *) 36877) = $82
  [206] if(peephole#12!=duck#1) goto main::@34
  to:main::@42
main::@42: scope:[main]  from main::@41
  [207] main::$96 = $c - div16u8u::return#2
  [208] main::$179 = main::$96 << 2
  [209] main::$180 = main::$179 + main::$96
  [210] main::$97 = main::$180 << 1
  [211] score#8 = score#19 + main::$97
  [212] call wait
  to:main::@35
main::@35: scope:[main]  from main::@42 main::@88
  [213] score#81 = phi( main::@88/score#38, main::@42/score#8 )
  [213] time#38 = phi( main::@88/div16u8u::return#2, main::@42/$a )
  [214] *((char *) 36877) = 0
  to:main::@33
main::@33: scope:[main]  from main::@32 main::@35
  [215] score#43 = phi( main::@32/score#19, main::@35/score#81 )
  [215] time#17 = phi( main::@32/div16u8u::return#2, main::@35/time#38 )
  [215] z#48 = phi( main::@32/z#100, main::@35/z#25 )
  [216] main::$104 = y#13 + 1
  [217] main::$107 = y#13 + $16
  [218] main::$110 = y#13 + $17
  [219] if(*((char *)y#13)==brick) goto main::@36
  to:main::@111
main::@111: scope:[main]  from main::@33
  [220] if(*((char *)main::$104)==brick) goto main::@36
  to:main::@110
main::@110: scope:[main]  from main::@111
  [221] if(*((char *)main::$107)!=brick) goto main::@109
  to:main::@36
main::@36: scope:[main]  from main::@107 main::@108 main::@109 main::@110 main::@111 main::@33 main::@43
  [222] y#35 = phi( main::@33/peephole#12, main::@43/y#141 )
  [223] *((char *)y#35) = $fd
  [224] main::$125 = y#35 + c
  [225] *((char *)main::$125) = 1
  [226] main::$127 = y#35 + 1
  [227] *((char *)main::$127) = $ed
  [228] main::$128 = main::$127 + c
  [229] *((char *)main::$128) = 1
  [230] main::$130 = y#35 + $16
  [231] *((char *)main::$130) = $ee
  [232] main::$131 = main::$130 + c
  [233] *((char *)main::$131) = 1
  [234] main::$133 = y#35 + $17
  [235] *((char *)main::$133) = $f0
  [236] main::$134 = main::$133 + c
  [237] *((char *)main::$134) = 1
  [238] call wait
  to:main::@89
main::@89: scope:[main]  from main::@36
  [239] *((char *)duck#1) = 0
  [240] main::$136 = duck#1 + c
  [241] *((char *)main::$136) = 7
  [242] main::$138 = duck#1 + 1
  [243] *((char *)main::$138) = 1
  [244] main::$139 = main::$138 + c
  [245] *((char *)main::$139) = 7
  [246] main::$141 = duck#1 + $16
  [247] *((char *)main::$141) = 2
  [248] main::$142 = main::$141 + c
  [249] *((char *)main::$142) = 7
  [250] main::$144 = duck#1 + $17
  [251] *((char *)main::$144) = 3
  [252] main::$145 = main::$144 + c
  [253] *((char *)main::$145) = 7
  [254] call wait
  to:main::@90
main::@90: scope:[main]  from main::@89
  [255] y#130 = y#35
  to:main::@26
main::@109: scope:[main]  from main::@110
  [256] if(*((char *)main::$110)==brick) goto main::@36
  to:main::@108
main::@108: scope:[main]  from main::@109
  [257] if(y#13>$1e16) goto main::@107
  to:main::@36
main::@107: scope:[main]  from main::@108
  [258] if(y#13>=$1fe3) goto main::@36
  to:main::@43
main::@43: scope:[main]  from main::@107
  [259] main::$119 = peephole#12 + c
  [260] *((char *)main::$119) = 0
  [261] main::$120 = main::$119 + 1
  [262] *((char *)main::$120) = 0
  [263] main::$122 = main::$119 + $16
  [264] *((char *)main::$122) = 0
  [265] main::$124 = main::$119 + $17
  [266] *((char *)main::$124) = 0
  [267] y#141 = y#13
  to:main::@36
main::@34: scope:[main]  from main::@41
  [268] score#6 = score#19 - $a
  [269] call write_score
  to:main::@88
main::@88: scope:[main]  from main::@34
  [270] phi()
  [271] call wait
  to:main::@35
main::@23: scope:[main]  from main::@81
  [272] main::$57 = $30 + tu#13
  [273] chrout::petscii = main::$57
  [274] call chrout
  to:main::@24
main::@21: scope:[main]  from main::@20
  [275] chrout::petscii = ducknumber[j#16]
  [276] call chrout
  to:main::@78
main::@78: scope:[main]  from main::@21
  [277] j#5 = ++ j#16
  to:main::@20
main::@18: scope:[main]  from main::@17
  [278] chrout::petscii = chrono[j#13]
  [279] call chrout
  to:main::@74
main::@74: scope:[main]  from main::@18
  [280] j#3 = ++ j#13
  to:main::@17
main::@14: scope:[main]  from main::@71 main::@72
  [281] j#11 = phi( main::@71/1, main::@72/j#2 )
  [282] if(j#11<=m) goto main::@15
  to:main::@16
main::@16: scope:[main]  from main::@14
  [283] chrout::petscii = brick
  [284] call chrout
  to:main::@73
main::@73: scope:[main]  from main::@16
  [285] main::$35 = z#28 + m
  [286] z#9 = main::$35 + 1
  [287] if(z#9<$1fa) goto main::@13
  to:main::@12
main::@15: scope:[main]  from main::@14
  [288] chrout::petscii = right
  [289] call chrout
  to:main::@72
main::@72: scope:[main]  from main::@15
  [290] j#2 = ++ j#11
  to:main::@14
main::@7: scope:[main]  from main::@6
  [291] chrout::petscii = brick
  [292] call chrout
  to:main::@9
main::@9: scope:[main]  from main::@63 main::@7
  [293] n#101 = phi( main::@7/2, main::@63/n#1 )
  [294] if(n#101<$16) goto main::@10
  to:main::@11
main::@11: scope:[main]  from main::@9
  [295] chrout::petscii = brick
  [296] call chrout
  to:main::@64
main::@64: scope:[main]  from main::@11
  [297] k#1 = ++ k#101
  to:main::@6
main::@10: scope:[main]  from main::@9
  [298] chrout::petscii = right
  [299] call chrout
  to:main::@63
main::@63: scope:[main]  from main::@10
  [300] n#1 = ++ n#101
  to:main::@9
main::@2: scope:[main]  from main::@1
  [301] main::$3 = $1c00 + m
  [302] *((char *)main::$3) = duck_udg[m]
  [303] m = ++ m
  to:main::@1

void gotoxy(char x , char y)
gotoxy: scope:[gotoxy]  from clear_screen::@3 conio_c64_init::@1
  [304] gotoxy::y#4 = phi( clear_screen::@3/0, conio_c64_init::@1/gotoxy::y#2 )
  [305] if(gotoxy::y#4<$19+1) goto gotoxy::@3
  to:gotoxy::@1
gotoxy::@3: scope:[gotoxy]  from gotoxy
  [306] phi()
  to:gotoxy::@1
gotoxy::@1: scope:[gotoxy]  from gotoxy gotoxy::@3
  [307] gotoxy::y#5 = phi( gotoxy::@3/gotoxy::y#4, gotoxy/0 )
  to:gotoxy::@2
gotoxy::@2: scope:[gotoxy]  from gotoxy::@1
  [308] conio_cursor_x = 0
  [309] conio_cursor_y = gotoxy::y#5
  [310] gotoxy::$7 = (unsigned int)gotoxy::y#5
  [311] gotoxy::$8 = gotoxy::$7 << 2
  [312] gotoxy::$9 = gotoxy::$8 + gotoxy::$7
  [313] gotoxy::line_offset#0 = gotoxy::$9 << 3
  [314] gotoxy::$5 = DEFAULT_SCREEN + gotoxy::line_offset#0
  [315] conio_line_text = gotoxy::$5
  [316] gotoxy::$6 = COLORRAM + gotoxy::line_offset#0
  [317] conio_line_color = gotoxy::$6
  to:gotoxy::@return
gotoxy::@return: scope:[gotoxy]  from gotoxy::@2
  [318] return 
  to:@return

void chrout(volatile char petscii)
chrout: scope:[chrout]  from clear_screen::@4 main main::@10 main::@11 main::@12 main::@15 main::@16 main::@18 main::@21 main::@22 main::@23 main::@45 main::@50 main::@58 main::@59 main::@60 main::@61 main::@65 main::@66 main::@67 main::@68 main::@69 main::@7 main::@75 main::@76 main::@79 main::@8 main::@80 main::@82 main::@91 write_score::@10 write_score::@12 write_score::@3
  asm { ldapetscii jsr$ffd2  }
  to:chrout::@return
chrout::@return: scope:[chrout]  from chrout
  [320] return 
  to:@return

void clear_screen(char n , char m)
clear_screen: scope:[clear_screen]  from main::@3 main::@44 main::@5
  [321] clear_screen::n#5 = phi( main::@3/$20, main::@44/4, main::@5/4 )
  to:clear_screen::@1
clear_screen::@1: scope:[clear_screen]  from clear_screen clear_screen::@2
  [322] z#2 = phi( clear_screen/0, clear_screen::@2/z#1 )
  [323] if(z#2<$1fa) goto clear_screen::@2
  to:clear_screen::@3
clear_screen::@3: scope:[clear_screen]  from clear_screen::@1
  [324] phi()
  [325] call gotoxy
  to:clear_screen::@4
clear_screen::@4: scope:[clear_screen]  from clear_screen::@3
  [326] chrout::petscii = home
  [327] call chrout
  to:clear_screen::@return
clear_screen::@return: scope:[clear_screen]  from clear_screen::@4
  [328] return 
  to:@return
clear_screen::@2: scope:[clear_screen]  from clear_screen::@1
  [329] clear_screen::$5 = $1e00 + z#2
  [330] clear_screen::$4 = clear_screen::$5 + c
  [331] *((char *)clear_screen::$4) = 0
  [332] *((char *)clear_screen::$5) = clear_screen::n#5
  [333] z#1 = ++ z#2
  to:clear_screen::@1

char textcolor(char color)
textcolor: scope:[textcolor]  from main::@101 main::@52 main::@54 main::@56 main::@92 main::@94 main::@97
  [334] textcolor::color#7 = phi( main::@92/7, main::@94/2, main::@97/3, main::@101/1, main::@52/7, main::@54/1, main::@56/2 )
  [335] conio_textcolor = textcolor::color#7
  to:textcolor::@return
textcolor::@return: scope:[textcolor]  from textcolor
  [336] return 
  to:@return

void cputs(const char *s)
cputs: scope:[cputs]  from main::@100 main::@102 main::@53 main::@55 main::@57 main::@93 main::@95 main::@96 main::@98
  [337] cputs::s#11 = phi( main::@93/game_over, main::@95/your_score, main::@96/buffer, main::@98/high_score, main::@100/buffer, main::@102/play_again, main::@53/intro, main::@55/levels, main::@57/foot )
  to:cputs::@1
cputs::@1: scope:[cputs]  from cputs cputs::@2
  [338] cputs::s#10 = phi( cputs/cputs::s#11, cputs::@2/cputs::s#0 )
  [339] cputs::c#1 = *cputs::s#10
  [340] cputs::s#0 = ++ cputs::s#10
  [341] if(0!=cputs::c#1) goto cputs::@2
  to:cputs::@return
cputs::@return: scope:[cputs]  from cputs::@1
  [342] return 
  to:@return
cputs::@2: scope:[cputs]  from cputs::@1
  [343] cputc::c#0 = cputs::c#1
  [344] call cputc
  to:cputs::@1

void random(char k , char n)
random: scope:[random]  from main::@13 main::@24 main::@83
  [345] random::n#4 = phi( main::@13/random::n#0, main::@24/$ff, main::@83/$ff )
  [345] random::k#4 = phi( main::@13/random::k#0, main::@24/0, main::@83/0 )
  to:random::@1
random::@1: scope:[random]  from random random::@1 random::@2
  [346] m = *((char *) 37140)
  [347] random::$3 = m
  [348] if(m<random::k#4) goto random::@1
  to:random::@2
random::@2: scope:[random]  from random::@1
  [349] if(random::$3>random::n#4) goto random::@1
  to:random::@return
random::@return: scope:[random]  from random::@2
  [350] return 
  to:@return

void write_score()
write_score: scope:[write_score]  from main::@19 main::@28 main::@34
  [351] score#13 = phi( main::@19/0, main::@28/score#4, main::@34/score#6 )
  [352] if(score#13<=$fde8) goto write_score::@15
  to:write_score::@1
write_score::@15: scope:[write_score]  from write_score
  [353] phi()
  to:write_score::@1
write_score::@1: scope:[write_score]  from write_score write_score::@15
  [354] score#38 = phi( write_score::@15/score#13, write_score/0 )
  [355] m = 0
  to:write_score::@5
write_score::@5: scope:[write_score]  from write_score::@1 write_score::@6
  [356] if(m<4) goto write_score::@6
  to:write_score::@7
write_score::@7: scope:[write_score]  from write_score::@5
  [357] utoa::value#1 = score#38
  [358] call utoa
  to:write_score::@11
write_score::@11: scope:[write_score]  from write_score::@7
  [359] if(score#38<9+1) goto write_score::@2
  to:write_score::@8
write_score::@8: scope:[write_score]  from write_score::@11
  [360] *(points+2) = *buffer
  [361] *(points+3) = *(buffer+1)
  to:write_score::@2
write_score::@2: scope:[write_score]  from write_score::@11 write_score::@8
  [362] if(score#38<$63+1) goto write_score::@3
  to:write_score::@4
write_score::@4: scope:[write_score]  from write_score::@2
  [363] *(points+1) = *buffer
  [364] *(points+2) = *(buffer+1)
  [365] *(points+3) = *(buffer+2)
  to:write_score::@3
write_score::@3: scope:[write_score]  from write_score::@2 write_score::@4
  [366] chrout::petscii = yellow
  [367] call chrout
  to:write_score::@12
write_score::@12: scope:[write_score]  from write_score::@3
  [368] chrout::petscii = home
  [369] call chrout
  to:write_score::@13
write_score::@13: scope:[write_score]  from write_score::@12
  [370] *((char *) 211) = 4
  [371] m = 0
  to:write_score::@9
write_score::@9: scope:[write_score]  from write_score::@13 write_score::@14
  [372] if(m<4) goto write_score::@10
  to:write_score::@return
write_score::@return: scope:[write_score]  from write_score::@9
  [373] return 
  to:@return
write_score::@10: scope:[write_score]  from write_score::@9
  [374] chrout::petscii = points[m]
  [375] call chrout
  to:write_score::@14
write_score::@14: scope:[write_score]  from write_score::@10
  [376] m = ++ m
  to:write_score::@9
write_score::@6: scope:[write_score]  from write_score::@5
  [377] points[m] = '0'
  [378] m = ++ m
  to:write_score::@5

void chrono_restart()
chrono_restart: scope:[chrono_restart]  from main::@25
  asm { lda#0 ldy#0 ldx#0 jsr$ffdb  }
  to:chrono_restart::@return
chrono_restart::@return: scope:[chrono_restart]  from chrono_restart
  [380] return 
  to:@return

void wait(char n)
wait: scope:[wait]  from main::@36 main::@42 main::@86 main::@88 main::@89
  [381] z#53 = phi( main::@36/z#48, main::@42/z#100, main::@86/z#100, main::@88/z#100, main::@89/z#25 )
  [381] wait::n#6 = phi( main::@36/5, main::@42/$a, main::@86/$14, main::@88/$a, main::@89/5 )
  [382] m = 0
  to:wait::@1
wait::@1: scope:[wait]  from wait wait::@4
  [383] z#25 = phi( wait/z#53, wait::@4/z#23 )
  [384] if(m<wait::n#6) goto wait::@2
  to:wait::@return
wait::@return: scope:[wait]  from wait::@1
  [385] return 
  to:@return
wait::@2: scope:[wait]  from wait::@1 wait::@3
  [386] z#23 = phi( wait::@1/0, wait::@3/z#4 )
  [387] if(z#23<$21c) goto wait::@3
  to:wait::@4
wait::@4: scope:[wait]  from wait::@2
  [388] m = ++ m
  to:wait::@1
wait::@3: scope:[wait]  from wait::@2
  [389] z#4 = ++ z#23
  to:wait::@2

void utoa(unsigned int value , char *buffer , char radix)
utoa: scope:[utoa]  from main::@46 write_score::@7
  [390] utoa::value#10 = phi( main::@46/utoa::value#2, write_score::@7/utoa::value#1 )
  to:utoa::@1
utoa::@1: scope:[utoa]  from utoa utoa::@4
  [391] utoa::buffer#10 = phi( utoa::@4/utoa::buffer#15, utoa/buffer )
  [391] utoa::started#2 = phi( utoa::@4/utoa::started#4, utoa/0 )
  [391] utoa::value#3 = phi( utoa::@4/utoa::value#7, utoa/utoa::value#10 )
  [391] utoa::digit#2 = phi( utoa::@4/utoa::digit#1, utoa/0 )
  [392] if(utoa::digit#2<5-1) goto utoa::@2
  to:utoa::@3
utoa::@3: scope:[utoa]  from utoa::@1
  [393] utoa::$11 = (char)utoa::value#3
  [394] *utoa::buffer#10 = DIGITS[utoa::$11]
  [395] utoa::buffer#3 = ++ utoa::buffer#10
  [396] *utoa::buffer#3 = 0
  to:utoa::@return
utoa::@return: scope:[utoa]  from utoa::@3
  [397] return 
  to:@return
utoa::@2: scope:[utoa]  from utoa::@1
  [398] utoa::$10 = utoa::digit#2 << 1
  [399] utoa::digit_value#0 = RADIX_DECIMAL_VALUES[utoa::$10]
  [400] if(0!=utoa::started#2) goto utoa::@5
  to:utoa::@7
utoa::@7: scope:[utoa]  from utoa::@2
  [401] if(utoa::value#3>=utoa::digit_value#0) goto utoa::@5
  to:utoa::@4
utoa::@4: scope:[utoa]  from utoa::@6 utoa::@7
  [402] utoa::buffer#15 = phi( utoa::@7/utoa::buffer#10, utoa::@6/utoa::buffer#4 )
  [402] utoa::started#4 = phi( utoa::@7/utoa::started#2, utoa::@6/1 )
  [402] utoa::value#7 = phi( utoa::@7/utoa::value#3, utoa::@6/utoa::value#0 )
  [403] utoa::digit#1 = ++ utoa::digit#2
  to:utoa::@1
utoa::@5: scope:[utoa]  from utoa::@2 utoa::@7
  [404] utoa_append::buffer#0 = utoa::buffer#10
  [405] utoa_append::value#0 = utoa::value#3
  [406] utoa_append::sub#0 = utoa::digit_value#0
  [407] call utoa_append
  [408] utoa_append::return#0 = utoa_append::value#2
  to:utoa::@6
utoa::@6: scope:[utoa]  from utoa::@5
  [409] utoa::value#0 = utoa_append::return#0
  [410] utoa::buffer#4 = ++ utoa::buffer#10
  to:utoa::@4

void read_chrono()
read_chrono: scope:[read_chrono]  from main::@27
  asm { jsr$ffde stal stxm  }
  [412] read_chrono::$0 = m << 8
  [413] div16u8u::dividend#0 = read_chrono::$0 + l
  [414] call div16u8u
  [415] div16u8u::return#2 = div16u8u::return#0
  to:read_chrono::@2
read_chrono::@2: scope:[read_chrono]  from read_chrono
  [416] *((char *)$1e15+c) = 7
  [417] *((char *) 7701) = $b9
  [418] if(div16u8u::return#2>=$a) goto read_chrono::@return
  to:read_chrono::@1
read_chrono::@1: scope:[read_chrono]  from read_chrono::@2
  [419] read_chrono::$5 = $b9 - div16u8u::return#2
  [420] *((char *) 7701) = read_chrono::$5
  to:read_chrono::@return
read_chrono::@return: scope:[read_chrono]  from read_chrono::@1 read_chrono::@2
  [421] return 
  to:@return

void cputc(char c)
cputc: scope:[cputc]  from cputs::@2
  [422] if(cputc::c#0=='
') goto cputc::@1
  to:cputc::@2
cputc::@2: scope:[cputc]  from cputc
  [423] conio_line_text[conio_cursor_x] = cputc::c#0
  [424] conio_line_color[conio_cursor_x] = conio_textcolor
  [425] conio_cursor_x = ++ conio_cursor_x
  [426] if(conio_cursor_x!=$28) goto cputc::@return
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc::@2
  [427] phi()
  [428] call cputln
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@1 cputc::@2 cputc::@3
  [429] return 
  to:@return
cputc::@1: scope:[cputc]  from cputc
  [430] phi()
  [431] call cputln
  to:cputc::@return

unsigned int utoa_append(char *buffer , unsigned int value , unsigned int sub)
utoa_append: scope:[utoa_append]  from utoa::@5
  [432] phi()
  to:utoa_append::@1
utoa_append::@1: scope:[utoa_append]  from utoa_append utoa_append::@2
  [433] utoa_append::digit#2 = phi( utoa_append/0, utoa_append::@2/utoa_append::digit#1 )
  [433] utoa_append::value#2 = phi( utoa_append/utoa_append::value#0, utoa_append::@2/utoa_append::value#1 )
  [434] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2
  to:utoa_append::@3
utoa_append::@3: scope:[utoa_append]  from utoa_append::@1
  [435] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2]
  to:utoa_append::@return
utoa_append::@return: scope:[utoa_append]  from utoa_append::@3
  [436] return 
  to:@return
utoa_append::@2: scope:[utoa_append]  from utoa_append::@1
  [437] utoa_append::digit#1 = ++ utoa_append::digit#2
  [438] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0
  to:utoa_append::@1

unsigned int div16u8u(unsigned int dividend , char divisor)
div16u8u: scope:[div16u8u]  from read_chrono
  [439] divr8u::dividend#1 = byte1  div16u8u::dividend#0
  [440] call divr8u
  [441] divr8u::return#2 = divr8u::return#0
  to:div16u8u::@1
div16u8u::@1: scope:[div16u8u]  from div16u8u
  [442] div16u8u::quotient_hi#0 = divr8u::return#2
  [443] divr8u::dividend#2 = byte0  div16u8u::dividend#0
  [444] divr8u::rem#4 = divr8u::rem#11
  [445] call divr8u
  [446] divr8u::return#3 = divr8u::return#0
  to:div16u8u::@2
div16u8u::@2: scope:[div16u8u]  from div16u8u::@1
  [447] div16u8u::quotient_lo#0 = divr8u::return#3
  [448] div16u8u::return#0 = div16u8u::quotient_hi#0 w= div16u8u::quotient_lo#0
  to:div16u8u::@return
div16u8u::@return: scope:[div16u8u]  from div16u8u::@2
  [449] return 
  to:@return

void cputln()
cputln: scope:[cputln]  from cputc::@1 cputc::@3
  [450] conio_line_text = conio_line_text + $28
  [451] conio_line_color = conio_line_color + $28
  [452] conio_cursor_x = 0
  [453] conio_cursor_y = ++ conio_cursor_y
  [454] call cscroll
  to:cputln::@return
cputln::@return: scope:[cputln]  from cputln
  [455] return 
  to:@return

char divr8u(char dividend , char divisor , char rem)
divr8u: scope:[divr8u]  from div16u8u div16u8u::@1
  [456] divr8u::dividend#5 = phi( div16u8u/divr8u::dividend#1, div16u8u::@1/divr8u::dividend#2 )
  [456] divr8u::rem#10 = phi( div16u8u/0, div16u8u::@1/divr8u::rem#4 )
  to:divr8u::@1
divr8u::@1: scope:[divr8u]  from divr8u divr8u::@3
  [457] divr8u::i#2 = phi( divr8u/0, divr8u::@3/divr8u::i#1 )
  [457] divr8u::quotient#3 = phi( divr8u/0, divr8u::@3/divr8u::return#0 )
  [457] divr8u::dividend#3 = phi( divr8u/divr8u::dividend#5, divr8u::@3/divr8u::dividend#0 )
  [457] divr8u::rem#5 = phi( divr8u/divr8u::rem#10, divr8u::@3/divr8u::rem#11 )
  [458] divr8u::rem#0 = divr8u::rem#5 << 1
  [459] divr8u::$1 = divr8u::dividend#3 & $80
  [460] if(divr8u::$1==0) goto divr8u::@2
  to:divr8u::@4
divr8u::@4: scope:[divr8u]  from divr8u::@1
  [461] divr8u::rem#1 = divr8u::rem#0 | 1
  to:divr8u::@2
divr8u::@2: scope:[divr8u]  from divr8u::@1 divr8u::@4
  [462] divr8u::rem#6 = phi( divr8u::@1/divr8u::rem#0, divr8u::@4/divr8u::rem#1 )
  [463] divr8u::dividend#0 = divr8u::dividend#3 << 1
  [464] divr8u::quotient#1 = divr8u::quotient#3 << 1
  [465] if(divr8u::rem#6<div16u8u::divisor#0) goto divr8u::@3
  to:divr8u::@5
divr8u::@5: scope:[divr8u]  from divr8u::@2
  [466] divr8u::quotient#2 = ++ divr8u::quotient#1
  [467] divr8u::rem#2 = divr8u::rem#6 - div16u8u::divisor#0
  to:divr8u::@3
divr8u::@3: scope:[divr8u]  from divr8u::@2 divr8u::@5
  [468] divr8u::return#0 = phi( divr8u::@2/divr8u::quotient#1, divr8u::@5/divr8u::quotient#2 )
  [468] divr8u::rem#11 = phi( divr8u::@2/divr8u::rem#6, divr8u::@5/divr8u::rem#2 )
  [469] divr8u::i#1 = ++ divr8u::i#2
  [470] if(divr8u::i#1!=8) goto divr8u::@1
  to:divr8u::@return
divr8u::@return: scope:[divr8u]  from divr8u::@3
  [471] return 
  to:@return

void cscroll()
cscroll: scope:[cscroll]  from cputln
  [472] if(conio_cursor_y!=$19) goto cscroll::@return
  to:cscroll::@1
cscroll::@1: scope:[cscroll]  from cscroll
  [473] phi()
  [474] call memcpy
  to:cscroll::@2
cscroll::@2: scope:[cscroll]  from cscroll::@1
  [475] phi()
  [476] call memcpy
  to:cscroll::@3
cscroll::@3: scope:[cscroll]  from cscroll::@2
  [477] phi()
  [478] call memset
  to:cscroll::@4
cscroll::@4: scope:[cscroll]  from cscroll::@3
  [479] memset::c#1 = conio_textcolor
  [480] call memset
  to:cscroll::@5
cscroll::@5: scope:[cscroll]  from cscroll::@4
  [481] conio_line_text = conio_line_text - $28
  [482] conio_line_color = conio_line_color - $28
  [483] conio_cursor_y = -- conio_cursor_y
  to:cscroll::@return
cscroll::@return: scope:[cscroll]  from cscroll cscroll::@5
  [484] return 
  to:@return

void * memcpy(void *destination , void *source , unsigned int num)
memcpy: scope:[memcpy]  from cscroll::@1 cscroll::@2
  [485] memcpy::destination#2 = phi( cscroll::@1/(void *)DEFAULT_SCREEN, cscroll::@2/(void *)COLORRAM )
  [485] memcpy::source#2 = phi( cscroll::@1/(void *)DEFAULT_SCREEN+$28, cscroll::@2/(void *)COLORRAM+$28 )
  [486] memcpy::src_end#0 = (char *)memcpy::source#2 + (unsigned int)$19*$28-$28
  [487] memcpy::src#4 = (char *)memcpy::source#2
  [488] memcpy::dst#4 = (char *)memcpy::destination#2
  to:memcpy::@1
memcpy::@1: scope:[memcpy]  from memcpy memcpy::@2
  [489] memcpy::dst#2 = phi( memcpy/memcpy::dst#4, memcpy::@2/memcpy::dst#1 )
  [489] memcpy::src#2 = phi( memcpy/memcpy::src#4, memcpy::@2/memcpy::src#1 )
  [490] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2
  to:memcpy::@return
memcpy::@return: scope:[memcpy]  from memcpy::@1
  [491] return 
  to:@return
memcpy::@2: scope:[memcpy]  from memcpy::@1
  [492] *memcpy::dst#2 = *memcpy::src#2
  [493] memcpy::dst#1 = ++ memcpy::dst#2
  [494] memcpy::src#1 = ++ memcpy::src#2
  to:memcpy::@1

void * memset(void *str , char c , unsigned int num)
memset: scope:[memset]  from cscroll::@3 cscroll::@4
  [495] memset::c#4 = phi( cscroll::@3/' ', cscroll::@4/memset::c#1 )
  [495] memset::str#3 = phi( cscroll::@3/(void *)DEFAULT_SCREEN+(unsigned int)$19*$28-$28, cscroll::@4/(void *)COLORRAM+(unsigned int)$19*$28-$28 )
  to:memset::@1
memset::@1: scope:[memset]  from memset
  [496] memset::end#0 = (char *)memset::str#3 + $28
  [497] memset::dst#4 = (char *)memset::str#3
  to:memset::@2
memset::@2: scope:[memset]  from memset::@1 memset::@3
  [498] memset::dst#2 = phi( memset::@1/memset::dst#4, memset::@3/memset::dst#1 )
  [499] if(memset::dst#2!=memset::end#0) goto memset::@3
  to:memset::@return
memset::@return: scope:[memset]  from memset::@2
  [500] return 
  to:@return
memset::@3: scope:[memset]  from memset::@2
  [501] *memset::dst#2 = memset::c#4
  [502] memset::dst#1 = ++ memset::dst#2
  to:memset::@2
