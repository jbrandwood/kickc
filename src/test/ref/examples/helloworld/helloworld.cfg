@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] (byte) printf_cursor_x ← (byte) 0
  [2] (byte) printf_cursor_y ← (byte) 0
  [3] (byte*) printf_cursor_ptr ← (byte*) 1024
  to:@2
@2: scope:[]  from @1
  [4] phi()
  [5] call main 
  to:@end
@end: scope:[]  from @2
  [6] phi()

(void()) main()
main: scope:[main]  from @2
  [7] phi()
  [8] call printf_str 
  to:main::@return
main::@return: scope:[main]  from main
  [9] return 
  to:@return

(void()) printf_str((byte*) printf_str::str)
printf_str: scope:[printf_str]  from main
  [10] phi()
  to:printf_str::@1
printf_str::@1: scope:[printf_str]  from printf_str printf_str::@4 printf_str::@5
  [11] (byte*) printf_str::str#2 ← phi( printf_str/(const byte*) main::str printf_str::@4/(byte*) printf_str::str#0 printf_str::@5/(byte*) printf_str::str#0 )
  to:printf_str::@2
printf_str::@2: scope:[printf_str]  from printf_str::@1
  [12] (byte) printf_str::ch#0 ← *((byte*) printf_str::str#2)
  [13] (byte*) printf_str::str#0 ← ++ (byte*) printf_str::str#2
  [14] if((byte) printf_str::ch#0!=(byte) 0) goto printf_str::@3
  to:printf_str::@return
printf_str::@return: scope:[printf_str]  from printf_str::@2
  [15] return 
  to:@return
printf_str::@3: scope:[printf_str]  from printf_str::@2
  [16] if((byte) printf_str::ch#0==(byte) '
') goto printf_str::@4
  to:printf_str::@5
printf_str::@5: scope:[printf_str]  from printf_str::@3
  [17] (byte) printf_char::ch#0 ← (byte) printf_str::ch#0
  [18] call printf_char 
  to:printf_str::@1
printf_str::@4: scope:[printf_str]  from printf_str::@3
  [19] phi()
  [20] call printf_ln 
  to:printf_str::@1

(void()) printf_ln()
printf_ln: scope:[printf_ln]  from printf_str::@4
  [21] (byte*~) printf_ln::$0 ← (byte*) printf_cursor_ptr - (byte) printf_cursor_x
  [22] (byte*~) printf_ln::$1 ← (byte*~) printf_ln::$0 + (byte) $28
  [23] (byte*) printf_cursor_ptr ← (byte*~) printf_ln::$1
  [24] (byte) printf_cursor_x ← (byte) 0
  [25] (byte) printf_cursor_y ← ++ (byte) printf_cursor_y
  [26] call printf_scroll 
  to:printf_ln::@return
printf_ln::@return: scope:[printf_ln]  from printf_ln
  [27] return 
  to:@return

(void()) printf_scroll()
printf_scroll: scope:[printf_scroll]  from printf_char::@1 printf_ln
  [28] if((byte) printf_cursor_y!=(byte) $19) goto printf_scroll::@return
  to:printf_scroll::@1
printf_scroll::@1: scope:[printf_scroll]  from printf_scroll
  [29] phi()
  [30] call memcpy 
  to:printf_scroll::@2
printf_scroll::@2: scope:[printf_scroll]  from printf_scroll::@1
  [31] phi()
  [32] call memset 
  to:printf_scroll::@3
printf_scroll::@3: scope:[printf_scroll]  from printf_scroll::@2
  [33] (byte*~) printf_scroll::$4 ← (byte*) printf_cursor_ptr - (byte) $28
  [34] (byte*) printf_cursor_ptr ← (byte*~) printf_scroll::$4
  [35] (byte) printf_cursor_y ← -- (byte) printf_cursor_y
  to:printf_scroll::@return
printf_scroll::@return: scope:[printf_scroll]  from printf_scroll printf_scroll::@3
  [36] return 
  to:@return

(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
memset: scope:[memset]  from printf_scroll::@2
  [37] phi()
  to:memset::@1
memset::@1: scope:[memset]  from memset memset::@2
  [38] (byte*) memset::dst#2 ← phi( memset/(byte*)(const void*) memset::str#0 memset::@2/(byte*) memset::dst#1 )
  [39] if((byte*) memset::dst#2!=(const byte*) memset::end#0) goto memset::@2
  to:memset::@return
memset::@return: scope:[memset]  from memset::@1
  [40] return 
  to:@return
memset::@2: scope:[memset]  from memset::@1
  [41] *((byte*) memset::dst#2) ← (const byte) memset::c#0
  [42] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2
  to:memset::@1

(void*()) memcpy((void*) memcpy::destination , (void*) memcpy::source , (word) memcpy::num)
memcpy: scope:[memcpy]  from printf_scroll::@1
  [43] phi()
  to:memcpy::@1
memcpy::@1: scope:[memcpy]  from memcpy memcpy::@2
  [44] (byte*) memcpy::dst#2 ← phi( memcpy/(byte*)(const void*) memcpy::destination#0 memcpy::@2/(byte*) memcpy::dst#1 )
  [44] (byte*) memcpy::src#2 ← phi( memcpy/(byte*)(const void*) memcpy::source#0 memcpy::@2/(byte*) memcpy::src#1 )
  [45] if((byte*) memcpy::src#2!=(const byte*) memcpy::src_end#0) goto memcpy::@2
  to:memcpy::@return
memcpy::@return: scope:[memcpy]  from memcpy::@1
  [46] return 
  to:@return
memcpy::@2: scope:[memcpy]  from memcpy::@1
  [47] *((byte*) memcpy::dst#2) ← *((byte*) memcpy::src#2)
  [48] (byte*) memcpy::dst#1 ← ++ (byte*) memcpy::dst#2
  [49] (byte*) memcpy::src#1 ← ++ (byte*) memcpy::src#2
  to:memcpy::@1

(void()) printf_char((byte) printf_char::ch)
printf_char: scope:[printf_char]  from printf_str::@5
  [50] *((byte*) printf_cursor_ptr) ← (byte) printf_char::ch#0
  [51] (byte*) printf_cursor_ptr ← ++ (byte*) printf_cursor_ptr
  [52] (byte) printf_cursor_x ← ++ (byte) printf_cursor_x
  [53] if((byte) printf_cursor_x!=(byte) $28) goto printf_char::@return
  to:printf_char::@1
printf_char::@1: scope:[printf_char]  from printf_char
  [54] (byte) printf_cursor_x ← (byte) 0
  [55] (byte) printf_cursor_y ← ++ (byte) printf_cursor_y
  [56] call printf_scroll 
  to:printf_char::@return
printf_char::@return: scope:[printf_char]  from printf_char printf_char::@1
  [57] return 
  to:@return
