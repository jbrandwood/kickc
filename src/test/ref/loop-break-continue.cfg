@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()
main: scope:[main]  from @1
  [4] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@4
  [5] (byte*) main::screen#2 ← phi( main/(byte*) 1024 main::@4/(byte*) main::screen#5 )
  [5] (byte) main::i#2 ← phi( main/(byte) 0 main::@4/(byte) main::i#1 )
  [6] if(*((const byte[]) main::str#0 + (byte) main::i#2)!=(byte) '@') goto main::@2
  to:main::@return
main::@return: scope:[main]  from main::@1 main::@4
  [7] return 
  to:@return
main::@2: scope:[main]  from main::@1
  [8] if(*((const byte[]) main::str#0 + (byte) main::i#2)==(byte) ' ') goto main::@4
  to:main::@3
main::@3: scope:[main]  from main::@2
  [9] *((byte*) main::screen#2) ← *((const byte[]) main::str#0 + (byte) main::i#2)
  [10] (byte*) main::screen#1 ← ++ (byte*) main::screen#2
  to:main::@4
main::@4: scope:[main]  from main::@2 main::@3
  [11] (byte*) main::screen#5 ← phi( main::@2/(byte*) main::screen#2 main::@3/(byte*) main::screen#1 )
  [12] (byte) main::i#1 ← ++ (byte) main::i#2
  [13] if((byte) main::i#1==(byte) 0) goto main::@return
  to:main::@1
