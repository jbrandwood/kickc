(label) @1
(label) @begin
(label) @end
(byte*) BORDERCOL
(const byte*) BORDERCOL#0 BORDERCOL = (byte*) 53280
(signed byte*) COSH
(const signed byte*) COSH#0 COSH = (const signed byte[$140]) SINH#0+(byte) $40
(signed byte*) COSQ
(const signed byte*) COSQ#0 COSQ = (const signed byte[$140]) SINQ#0+(byte) $40
(byte) GREEN
(const byte) GREEN#0 GREEN = (byte) 5
(byte) LIGHT_BLUE
(const byte) LIGHT_BLUE#0 LIGHT_BLUE = (byte) $e
(byte) LIGHT_GREY
(const byte) LIGHT_GREY#0 LIGHT_GREY = (byte) $f
(signed byte[$100]) PERSP_Z
(const signed byte[$100]) PERSP_Z#0 PERSP_Z = kickasm {{ {
    .var d = 256.0	
    .var z0 = 6.0	
    // These values of d/z0 result in table values from $20 to $40 (effectively max is $3f)
    .for(var z=0;z<$100;z++) {
    	.if(z>127) {
    		.byte round(d / (z0 - ((z - 256) / 64.0)));
    	} else {
    		.byte round(d / (z0 - (z / 64.0)));
    	}
    }
	}
 }}
(byte*) RASTER
(const byte*) RASTER#0 RASTER = (byte*) 53266
(byte*) SCREEN
(const byte*) SCREEN#0 SCREEN = (byte*) 1024
(signed byte[$140]) SINH
(const signed byte[$140]) SINH#0 SINH = kickasm {{ {
    .var min = -$2000
    .var max = $2000
    .var ampl = max-min;
    .for(var i=0;i<$140;i++) {
        .var rad = i*2*PI/256;
        .byte round((min+(ampl/2)+(ampl/2)*sin(rad))/256)
    }
    }
 }}
(signed byte[$140]) SINQ
(const signed byte[$140]) SINQ#0 SINQ = kickasm {{ {
    .var min = -$1000
    .var max = $1000
    .var ampl = max-min;
    .for(var i=0;i<$140;i++) {
        .var rad = i*2*PI/256;
        .byte round((min+(ampl/2)+(ampl/2)*sin(rad))/256)
    }
    }
 }}
(byte*) SPRITE
(const byte*) SPRITE#0 SPRITE = (byte*) 12288
(byte*) SPRITES_COLS
(const byte*) SPRITES_COLS#0 SPRITES_COLS = (byte*) 53287
(byte*) SPRITES_ENABLE
(const byte*) SPRITES_ENABLE#0 SPRITES_ENABLE = (byte*) 53269
(byte*) SPRITES_XPOS
(const byte*) SPRITES_XPOS#0 SPRITES_XPOS = (byte*) 53248
(byte*) SPRITES_YPOS
(const byte*) SPRITES_YPOS#0 SPRITES_YPOS = (byte*) 53249
(void()) anim()
(byte~) anim::$10 reg byte a 202.0
(byte~) anim::$8 reg byte a 202.0
(label) anim::@1
(label) anim::@10
(label) anim::@2
(label) anim::@3
(label) anim::@4
(label) anim::@5
(label) anim::@6
(label) anim::@7
(label) anim::@8
(label) anim::@9
(byte) anim::i
(byte) anim::i#1 i zp ZP_BYTE:4 151.5
(byte) anim::i#2 i zp ZP_BYTE:4 71.29411764705881
(byte) anim::i2
(byte) anim::i2#0 reg byte x 75.75
(void()) calculate_matrix((signed byte) calculate_matrix::sx , (signed byte) calculate_matrix::sy , (signed byte) calculate_matrix::sz)
(signed byte~) calculate_matrix::$10 reg byte a 4.0
(signed byte~) calculate_matrix::$11 reg byte a 4.0
(signed byte~) calculate_matrix::$12 reg byte a 4.0
(signed byte~) calculate_matrix::$13 reg byte a 4.0
(signed byte~) calculate_matrix::$14 reg byte a 4.0
(signed byte~) calculate_matrix::$15 reg byte a 4.0
(signed byte~) calculate_matrix::$16 reg byte a 4.0
(signed byte~) calculate_matrix::$17 reg byte a 4.0
(signed byte~) calculate_matrix::$18 reg byte a 4.0
(signed byte~) calculate_matrix::$19 reg byte a 4.0
(signed byte~) calculate_matrix::$20 reg byte a 4.0
(signed byte~) calculate_matrix::$21 reg byte a 4.0
(signed byte~) calculate_matrix::$22 reg byte a 4.0
(signed byte~) calculate_matrix::$23 reg byte a 4.0
(signed byte~) calculate_matrix::$24 reg byte a 4.0
(signed byte~) calculate_matrix::$25 reg byte a 4.0
(signed byte~) calculate_matrix::$26 reg byte a 4.0
(signed byte~) calculate_matrix::$27 reg byte a 4.0
(signed byte~) calculate_matrix::$28 reg byte a 4.0
(signed byte~) calculate_matrix::$29 reg byte a 4.0
(signed byte~) calculate_matrix::$30 reg byte a 4.0
(signed byte~) calculate_matrix::$31 reg byte a 4.0
(signed byte~) calculate_matrix::$32 reg byte a 4.0
(signed byte~) calculate_matrix::$33 reg byte a 4.0
(signed byte~) calculate_matrix::$34 reg byte a 4.0
(label) calculate_matrix::@return
(signed byte) calculate_matrix::sx
(signed byte) calculate_matrix::sx#0 reg byte x 2.4545454545454546
(signed byte) calculate_matrix::sy
(signed byte) calculate_matrix::sy#0 sy zp ZP_BYTE:3 1.5333333333333332
(signed byte) calculate_matrix::sz
(signed byte) calculate_matrix::t1
(signed byte) calculate_matrix::t1#0 t1 zp ZP_BYTE:19 0.8333333333333333
(signed byte) calculate_matrix::t10
(signed byte) calculate_matrix::t10#0 reg byte x 0.18181818181818182
(signed byte) calculate_matrix::t2
(signed byte) calculate_matrix::t2#0 t2 zp ZP_BYTE:20 0.9090909090909092
(signed byte) calculate_matrix::t3
(signed byte) calculate_matrix::t3#0 t3 zp ZP_BYTE:21 0.29411764705882354
(signed byte) calculate_matrix::t4
(signed byte) calculate_matrix::t4#0 t4 zp ZP_BYTE:22 0.30303030303030304
(signed byte) calculate_matrix::t5
(signed byte) calculate_matrix::t5#0 t5 zp ZP_BYTE:23 0.29411764705882354
(signed byte) calculate_matrix::t6
(signed byte) calculate_matrix::t6#0 t6 zp ZP_BYTE:24 0.3125
(signed byte) calculate_matrix::t7
(signed byte) calculate_matrix::t7#0 t7 zp ZP_BYTE:25 0.30303030303030304
(signed byte) calculate_matrix::t8
(signed byte) calculate_matrix::t8#0 t8 zp ZP_BYTE:26 0.30303030303030304
(signed byte) calculate_matrix::t9
(signed byte) calculate_matrix::t9#0 t9 zp ZP_BYTE:27 0.1764705882352941
(void()) debug_print()
(label) debug_print::@1
(label) debug_print::@10
(label) debug_print::@11
(label) debug_print::@12
(label) debug_print::@13
(label) debug_print::@14
(label) debug_print::@15
(label) debug_print::@16
(label) debug_print::@17
(label) debug_print::@2
(label) debug_print::@3
(label) debug_print::@4
(label) debug_print::@5
(label) debug_print::@6
(label) debug_print::@7
(label) debug_print::@8
(label) debug_print::@9
(label) debug_print::@return
(byte*) debug_print::at_line
(const byte*) debug_print::at_line#0 at_line = (const byte*) SCREEN#0+(word)(number) $13*(number) $28
(byte) debug_print::c
(byte) debug_print::c#1 c zp ZP_BYTE:5 67.33333333333333
(byte) debug_print::c#2 c zp ZP_BYTE:5 42.52631578947369
(byte) debug_print::i
(byte) debug_print::i#1 i zp ZP_BYTE:6 151.5
(byte) debug_print::i#2 i zp ZP_BYTE:6 40.4
(label) debug_print::print_sbyte_pos1
(label) debug_print::print_sbyte_pos10
(number~) debug_print::print_sbyte_pos10_$0
(byte*~) debug_print::print_sbyte_pos10_$1
(byte*~) debug_print::print_sbyte_pos10_$2
(byte) debug_print::print_sbyte_pos10_col
(const byte) debug_print::print_sbyte_pos10_col#0 print_sbyte_pos10_col = (byte) $1d
(byte) debug_print::print_sbyte_pos10_row
(const byte) debug_print::print_sbyte_pos10_row#0 print_sbyte_pos10_row = (byte) 6
(signed byte) debug_print::print_sbyte_pos10_sb
(signed byte) debug_print::print_sbyte_pos10_sb#0 reg byte x 4.0
(label) debug_print::print_sbyte_pos11
(number~) debug_print::print_sbyte_pos11_$0
(byte*~) debug_print::print_sbyte_pos11_$1
(byte*~) debug_print::print_sbyte_pos11_$2
(byte) debug_print::print_sbyte_pos11_col
(const byte) debug_print::print_sbyte_pos11_col#0 print_sbyte_pos11_col = (byte) $21
(byte) debug_print::print_sbyte_pos11_row
(const byte) debug_print::print_sbyte_pos11_row#0 print_sbyte_pos11_row = (byte) 6
(signed byte) debug_print::print_sbyte_pos11_sb
(signed byte) debug_print::print_sbyte_pos11_sb#0 reg byte x 4.0
(label) debug_print::print_sbyte_pos12
(number~) debug_print::print_sbyte_pos12_$0
(byte*~) debug_print::print_sbyte_pos12_$1
(byte*~) debug_print::print_sbyte_pos12_$2
(byte) debug_print::print_sbyte_pos12_col
(const byte) debug_print::print_sbyte_pos12_col#0 print_sbyte_pos12_col = (byte) $25
(byte) debug_print::print_sbyte_pos12_row
(const byte) debug_print::print_sbyte_pos12_row#0 print_sbyte_pos12_row = (byte) 6
(signed byte) debug_print::print_sbyte_pos12_sb
(signed byte) debug_print::print_sbyte_pos12_sb#0 reg byte x 4.0
(number~) debug_print::print_sbyte_pos1_$0
(byte*~) debug_print::print_sbyte_pos1_$1
(byte*~) debug_print::print_sbyte_pos1_$2
(byte) debug_print::print_sbyte_pos1_col
(const byte) debug_print::print_sbyte_pos1_col#0 print_sbyte_pos1_col = (byte) $25
(byte) debug_print::print_sbyte_pos1_row
(signed byte) debug_print::print_sbyte_pos1_sb
(signed byte) debug_print::print_sbyte_pos1_sb#0 reg byte x 4.0
(label) debug_print::print_sbyte_pos2
(number~) debug_print::print_sbyte_pos2_$0
(byte*~) debug_print::print_sbyte_pos2_$1
(byte*~) debug_print::print_sbyte_pos2_$2
(byte) debug_print::print_sbyte_pos2_col
(const byte) debug_print::print_sbyte_pos2_col#0 print_sbyte_pos2_col = (byte) $25
(byte) debug_print::print_sbyte_pos2_row
(const byte) debug_print::print_sbyte_pos2_row#0 print_sbyte_pos2_row = (byte) 1
(signed byte) debug_print::print_sbyte_pos2_sb
(signed byte) debug_print::print_sbyte_pos2_sb#0 reg byte x 4.0
(label) debug_print::print_sbyte_pos3
(number~) debug_print::print_sbyte_pos3_$0
(byte*~) debug_print::print_sbyte_pos3_$1
(byte*~) debug_print::print_sbyte_pos3_$2
(byte) debug_print::print_sbyte_pos3_col
(const byte) debug_print::print_sbyte_pos3_col#0 print_sbyte_pos3_col = (byte) $25
(byte) debug_print::print_sbyte_pos3_row
(const byte) debug_print::print_sbyte_pos3_row#0 print_sbyte_pos3_row = (byte) 2
(signed byte) debug_print::print_sbyte_pos3_sb
(label) debug_print::print_sbyte_pos4
(number~) debug_print::print_sbyte_pos4_$0
(byte*~) debug_print::print_sbyte_pos4_$1
(byte*~) debug_print::print_sbyte_pos4_$2
(byte) debug_print::print_sbyte_pos4_col
(const byte) debug_print::print_sbyte_pos4_col#0 print_sbyte_pos4_col = (byte) $1d
(byte) debug_print::print_sbyte_pos4_row
(const byte) debug_print::print_sbyte_pos4_row#0 print_sbyte_pos4_row = (byte) 4
(signed byte) debug_print::print_sbyte_pos4_sb
(signed byte) debug_print::print_sbyte_pos4_sb#0 reg byte x 4.0
(label) debug_print::print_sbyte_pos5
(number~) debug_print::print_sbyte_pos5_$0
(byte*~) debug_print::print_sbyte_pos5_$1
(byte*~) debug_print::print_sbyte_pos5_$2
(byte) debug_print::print_sbyte_pos5_col
(const byte) debug_print::print_sbyte_pos5_col#0 print_sbyte_pos5_col = (byte) $21
(byte) debug_print::print_sbyte_pos5_row
(const byte) debug_print::print_sbyte_pos5_row#0 print_sbyte_pos5_row = (byte) 4
(signed byte) debug_print::print_sbyte_pos5_sb
(signed byte) debug_print::print_sbyte_pos5_sb#0 reg byte x 4.0
(label) debug_print::print_sbyte_pos6
(number~) debug_print::print_sbyte_pos6_$0
(byte*~) debug_print::print_sbyte_pos6_$1
(byte*~) debug_print::print_sbyte_pos6_$2
(byte) debug_print::print_sbyte_pos6_col
(const byte) debug_print::print_sbyte_pos6_col#0 print_sbyte_pos6_col = (byte) $25
(byte) debug_print::print_sbyte_pos6_row
(const byte) debug_print::print_sbyte_pos6_row#0 print_sbyte_pos6_row = (byte) 4
(signed byte) debug_print::print_sbyte_pos6_sb
(signed byte) debug_print::print_sbyte_pos6_sb#0 reg byte x 4.0
(label) debug_print::print_sbyte_pos7
(number~) debug_print::print_sbyte_pos7_$0
(byte*~) debug_print::print_sbyte_pos7_$1
(byte*~) debug_print::print_sbyte_pos7_$2
(byte) debug_print::print_sbyte_pos7_col
(const byte) debug_print::print_sbyte_pos7_col#0 print_sbyte_pos7_col = (byte) $1d
(byte) debug_print::print_sbyte_pos7_row
(const byte) debug_print::print_sbyte_pos7_row#0 print_sbyte_pos7_row = (byte) 5
(signed byte) debug_print::print_sbyte_pos7_sb
(signed byte) debug_print::print_sbyte_pos7_sb#0 reg byte x 4.0
(label) debug_print::print_sbyte_pos8
(number~) debug_print::print_sbyte_pos8_$0
(byte*~) debug_print::print_sbyte_pos8_$1
(byte*~) debug_print::print_sbyte_pos8_$2
(byte) debug_print::print_sbyte_pos8_col
(const byte) debug_print::print_sbyte_pos8_col#0 print_sbyte_pos8_col = (byte) $21
(byte) debug_print::print_sbyte_pos8_row
(const byte) debug_print::print_sbyte_pos8_row#0 print_sbyte_pos8_row = (byte) 5
(signed byte) debug_print::print_sbyte_pos8_sb
(signed byte) debug_print::print_sbyte_pos8_sb#0 reg byte x 4.0
(label) debug_print::print_sbyte_pos9
(number~) debug_print::print_sbyte_pos9_$0
(byte*~) debug_print::print_sbyte_pos9_$1
(byte*~) debug_print::print_sbyte_pos9_$2
(byte) debug_print::print_sbyte_pos9_col
(const byte) debug_print::print_sbyte_pos9_col#0 print_sbyte_pos9_col = (byte) $25
(byte) debug_print::print_sbyte_pos9_row
(const byte) debug_print::print_sbyte_pos9_row#0 print_sbyte_pos9_row = (byte) 5
(signed byte) debug_print::print_sbyte_pos9_sb
(signed byte) debug_print::print_sbyte_pos9_sb#0 reg byte x 4.0
(void()) debug_print_init()
(byte*~) debug_print_init::$41 $41 zp ZP_WORD:28 202.0
(byte*~) debug_print_init::$44 $44 zp ZP_WORD:30 202.0
(byte*~) debug_print_init::$47 $47 zp ZP_WORD:32 202.0
(byte*~) debug_print_init::$50 $50 zp ZP_WORD:34 202.0
(byte*~) debug_print_init::$53 $53 zp ZP_WORD:36 202.0
(byte*~) debug_print_init::$56 $56 zp ZP_WORD:38 202.0
(byte*~) debug_print_init::$59 $59 zp ZP_WORD:40 202.0
(byte*~) debug_print_init::$62 $62 zp ZP_WORD:42 202.0
(byte*~) debug_print_init::$65 $65 zp ZP_WORD:44 202.0
(label) debug_print_init::@1
(label) debug_print_init::@10
(label) debug_print_init::@11
(label) debug_print_init::@12
(label) debug_print_init::@13
(label) debug_print_init::@14
(label) debug_print_init::@15
(label) debug_print_init::@16
(label) debug_print_init::@17
(label) debug_print_init::@2
(label) debug_print_init::@3
(label) debug_print_init::@4
(label) debug_print_init::@5
(label) debug_print_init::@6
(label) debug_print_init::@7
(label) debug_print_init::@8
(label) debug_print_init::@9
(label) debug_print_init::@return
(byte*) debug_print_init::COLS
(const byte*) debug_print_init::COLS#0 COLS = (byte*) 55296
(byte*) debug_print_init::at_cols
(const byte*) debug_print_init::at_cols#0 at_cols = (const byte*) debug_print_init::COLS#0+(word)(number) $10*(number) $28
(byte*) debug_print_init::at_line
(const byte*) debug_print_init::at_line#0 at_line = (const byte*) SCREEN#0+(word)(number) $10*(number) $28
(byte) debug_print_init::c
(byte) debug_print_init::c#1 c zp ZP_BYTE:9 7.333333333333333
(byte) debug_print_init::c#2 c zp ZP_BYTE:9 30.125
(byte) debug_print_init::col
(byte) debug_print_init::col#0 reg byte x 56.111111111111114
(byte) debug_print_init::i
(byte) debug_print_init::i#1 i zp ZP_BYTE:10 16.5
(byte) debug_print_init::i#2 i zp ZP_BYTE:10 4.727272727272727
(byte) debug_print_init::j
(byte) debug_print_init::j#1 reg byte y 151.5
(byte) debug_print_init::j#2 reg byte y 55.54999999999999
(const string) debug_print_init::str str = (string) "sx@"
(const string) debug_print_init::str1 str1 = (string) "sy@"
(const string) debug_print_init::str10 str10 = (string) "xp@"
(const string) debug_print_init::str11 str11 = (string) "yp@"
(const string) debug_print_init::str2 str2 = (string) "sz@"
(const string) debug_print_init::str3 str3 = (string) "x@"
(const string) debug_print_init::str4 str4 = (string) "y@"
(const string) debug_print_init::str5 str5 = (string) "z@"
(const string) debug_print_init::str6 str6 = (string) "xr@"
(const string) debug_print_init::str7 str7 = (string) "yr@"
(const string) debug_print_init::str8 str8 = (string) "zr@"
(const string) debug_print_init::str9 str9 = (string) "pp@"
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@return
(byte[$200]) mulf_sqr1
(const byte[$200]) mulf_sqr1#0 mulf_sqr1 = kickasm {{ .for(var i=0;i<$200;i++) {
    	.if(i<=159) { .byte round((i*i)/256) }
    	.if(i>159 && i<=351 ) { .byte round(((i-256)*(i-256))/256) }
    	.if(i>351) { .byte round(((512-i)*(512-i))/256) }
    }
 }}
(byte[$200]) mulf_sqr2
(const byte[$200]) mulf_sqr2#0 mulf_sqr2 = kickasm {{ .for(var i=0;i<$200;i++) {
    	.if(i<=159) { .byte round((-i-1)*(-i-1)/256) }
    	.if(i>159 && i<=351 ) { .byte round(((255-i)*(255-i))/256) }
    	.if(i>351) { .byte round(((i-511)*(i-511))/256) }  
    }
 }}
(signed byte*) pp
(const signed byte*) pp#0 pp = (signed byte*) 243
(signed byte[8]) pps
(const signed byte[8]) pps#0 pps = { fill( 8, 0) }
(void()) print_byte_at((byte) print_byte_at::b , (byte*) print_byte_at::at)
(byte~) print_byte_at::$0 reg byte y 4.0
(byte~) print_byte_at::$2 reg byte x 2.0
(label) print_byte_at::@1
(label) print_byte_at::@return
(byte*) print_byte_at::at
(byte*) print_byte_at::at#0 at zp ZP_WORD:7 1.0
(byte) print_byte_at::b
(byte) print_byte_at::b#0 reg byte x 1.0
(void()) print_char_at((byte) print_char_at::ch , (byte*) print_char_at::at)
(label) print_char_at::@return
(byte*) print_char_at::at
(byte*) print_char_at::at#0 at zp ZP_WORD:7 4.0
(byte*) print_char_at::at#1 at zp ZP_WORD:7 4.0
(byte*) print_char_at::at#2 at zp ZP_WORD:7 4.0
(byte*) print_char_at::at#3 at zp ZP_WORD:7 2.0
(byte*) print_char_at::at#4 at zp ZP_WORD:7 10.0
(byte) print_char_at::ch
(byte) print_char_at::ch#2 reg byte y 2.0
(byte) print_char_at::ch#3 reg byte y 4.0
(byte) print_char_at::ch#4 reg byte y 6.0
(void()) print_cls()
(label) print_cls::@1
(label) print_cls::@return
(byte*) print_cls::sc
(byte*) print_cls::sc#1 sc zp ZP_WORD:15 16.5
(byte*) print_cls::sc#2 sc zp ZP_WORD:15 16.5
(byte[]) print_hextab
(const byte[]) print_hextab#0 print_hextab = (string) "0123456789abcdef"
(void()) print_sbyte_at((signed byte) print_sbyte_at::b , (byte*) print_sbyte_at::at)
(label) print_sbyte_at::@1
(label) print_sbyte_at::@2
(label) print_sbyte_at::@3
(label) print_sbyte_at::@4
(label) print_sbyte_at::@return
(byte*) print_sbyte_at::at
(byte*) print_sbyte_at::at#0 at zp ZP_WORD:7 11.0
(byte*) print_sbyte_at::at#1 at zp ZP_WORD:7 11.0
(byte*) print_sbyte_at::at#15 at zp ZP_WORD:7 101.0
(byte*) print_sbyte_at::at#16 at zp ZP_WORD:7 101.0
(byte*) print_sbyte_at::at#17 at zp ZP_WORD:7 101.0
(byte*) print_sbyte_at::at#18 at zp ZP_WORD:7 101.0
(byte*) print_sbyte_at::at#19 at zp ZP_WORD:7 101.0
(byte*) print_sbyte_at::at#2 at zp ZP_WORD:7 11.0
(byte*) print_sbyte_at::at#20 at zp ZP_WORD:7 101.0
(byte*) print_sbyte_at::at#21 at zp ZP_WORD:7 71.6666666666667
(signed byte) print_sbyte_at::b
(signed byte) print_sbyte_at::b#0 reg byte x 4.0
(signed byte) print_sbyte_at::b#1 reg byte x 22.0
(signed byte) print_sbyte_at::b#10 reg byte x 4.0
(signed byte) print_sbyte_at::b#11 reg byte x 4.0
(signed byte) print_sbyte_at::b#12 reg byte x 4.0
(signed byte) print_sbyte_at::b#13 reg byte x 4.0
(signed byte) print_sbyte_at::b#14 reg byte x 4.0
(signed byte) print_sbyte_at::b#15 reg byte x 4.0
(signed byte) print_sbyte_at::b#16 reg byte x 202.0
(signed byte) print_sbyte_at::b#17 reg byte x 202.0
(signed byte) print_sbyte_at::b#18 reg byte x 202.0
(signed byte) print_sbyte_at::b#19 reg byte x 202.0
(signed byte) print_sbyte_at::b#2 reg byte x 22.0
(signed byte) print_sbyte_at::b#20 reg byte x 202.0
(signed byte) print_sbyte_at::b#21 reg byte x 202.0
(signed byte) print_sbyte_at::b#22 reg byte x 111.16666666666657
(signed byte) print_sbyte_at::b#24 reg byte x 4.0
(signed byte) print_sbyte_at::b#3 reg byte x 22.0
(signed byte) print_sbyte_at::b#4 reg byte x 4.0
(signed byte) print_sbyte_at::b#5 reg byte x 4.0
(signed byte) print_sbyte_at::b#7 reg byte x 4.0
(signed byte) print_sbyte_at::b#8 reg byte x 4.0
(signed byte) print_sbyte_at::b#9 reg byte x 4.0
(byte*) print_screen
(const byte*) print_screen#0 print_screen = (byte*) 1024
(void()) print_str_at((byte*) print_str_at::str , (byte*) print_str_at::at)
(label) print_str_at::@1
(label) print_str_at::@2
(label) print_str_at::@return
(byte*) print_str_at::at
(byte*) print_str_at::at#0 at zp ZP_WORD:13 11.0
(byte*) print_str_at::at#13 at zp ZP_WORD:13 11.666666666666666
(byte*) print_str_at::at#15 at zp ZP_WORD:13 2.0
(byte*) print_str_at::str
(byte*) print_str_at::str#0 str zp ZP_WORD:11 22.0
(byte*) print_str_at::str#13 str zp ZP_WORD:11 11.5
(byte*) print_str_at::str#15 str zp ZP_WORD:11 2.0
(word*) psp1
(const word*) psp1#0 psp1 = (word*) 246
(word*) psp2
(const word*) psp2#0 psp2 = (word*) 248
(void()) rotate_matrix((signed byte) rotate_matrix::x , (signed byte) rotate_matrix::y , (signed byte) rotate_matrix::z)
(label) rotate_matrix::@return
(signed byte) rotate_matrix::x
(signed byte) rotate_matrix::x#0 reg byte x 34.33333333333333
(signed byte) rotate_matrix::y
(signed byte) rotate_matrix::y#0 y zp ZP_BYTE:17 34.33333333333333
(signed byte) rotate_matrix::z
(signed byte) rotate_matrix::z#0 z zp ZP_BYTE:18 34.33333333333333
(signed byte[9]) rotation_matrix
(const signed byte[9]) rotation_matrix#0 rotation_matrix = { fill( 9, 0) }
(void()) sprites_init()
(label) sprites_init::@1
(label) sprites_init::@return
(byte*) sprites_init::SCREEN
(const byte*) sprites_init::SCREEN#0 SCREEN = (byte*) 1024
(byte) sprites_init::i
(byte) sprites_init::i#1 reg byte x 16.5
(byte) sprites_init::i#2 reg byte x 14.666666666666666
(byte*) sprites_init::sprites_ptr
(const byte*) sprites_init::sprites_ptr#0 sprites_ptr = (const byte*) sprites_init::SCREEN#0+(word) $3f8
(void()) store_matrix()
(label) store_matrix::@return
(signed byte) sx
(signed byte) sx#10 sx zp ZP_BYTE:2 0.38888888888888884
(signed byte) sx#3 sx zp ZP_BYTE:2 11.0
(signed byte) sy
(signed byte) sy#10 sy zp ZP_BYTE:3 0.3846153846153846
(signed byte) sy#3 sy zp ZP_BYTE:3 22.0
(signed byte) sz
(const signed byte) sz#0 sz = (signed byte) 0
(signed byte*) xp
(const signed byte*) xp#0 xp = (signed byte*) 244
(signed byte[8]) xps
(const signed byte[8]) xps#0 xps = { fill( 8, 0) }
(signed byte*) xr
(const signed byte*) xr#0 xr = (signed byte*) 240
(signed byte[8]) xrs
(const signed byte[8]) xrs#0 xrs = { fill( 8, 0) }
(signed byte[8]) xs
(const signed byte[8]) xs#0 xs = { (signed byte) -$34, (signed byte) -$34, (signed byte) -$34, (signed byte) 0, (signed byte) 0, (signed byte) $34, (signed byte) $34, (signed byte) $34 }
(signed byte*) yp
(const signed byte*) yp#0 yp = (signed byte*) 245
(signed byte[8]) yps
(const signed byte[8]) yps#0 yps = { fill( 8, 0) }
(signed byte*) yr
(const signed byte*) yr#0 yr = (signed byte*) 241
(signed byte[8]) yrs
(const signed byte[8]) yrs#0 yrs = { fill( 8, 0) }
(signed byte[8]) ys
(const signed byte[8]) ys#0 ys = { (signed byte) -$34, (signed byte) 0, (signed byte) $34, (signed byte) -$34, (signed byte) $34, (signed byte) -$34, (signed byte) 0, (signed byte) $34 }
(signed byte*) zr
(const signed byte*) zr#0 zr = (signed byte*) 242
(signed byte[8]) zrs
(const signed byte[8]) zrs#0 zrs = { fill( 8, 0) }
(signed byte[8]) zs
(const signed byte[8]) zs#0 zs = { (signed byte) $34, (signed byte) $34, (signed byte) $34, (signed byte) $34, (signed byte) $34, (signed byte) $34, (signed byte) $34, (signed byte) $34 }

zp ZP_BYTE:2 [ sx#10 sx#3 ]
zp ZP_BYTE:3 [ sy#10 sy#3 calculate_matrix::sy#0 ]
zp ZP_BYTE:4 [ anim::i#2 anim::i#1 ]
zp ZP_BYTE:5 [ debug_print::c#2 debug_print::c#1 ]
zp ZP_BYTE:6 [ debug_print::i#2 debug_print::i#1 ]
zp ZP_WORD:7 [ print_sbyte_at::at#21 print_sbyte_at::at#15 print_sbyte_at::at#16 print_sbyte_at::at#17 print_sbyte_at::at#18 print_sbyte_at::at#19 print_sbyte_at::at#20 print_sbyte_at::at#0 print_sbyte_at::at#1 print_sbyte_at::at#2 print_char_at::at#4 print_char_at::at#2 print_char_at::at#3 print_char_at::at#0 print_char_at::at#1 print_byte_at::at#0 ]
reg byte x [ print_sbyte_at::b#24 print_sbyte_at::b#0 print_sbyte_at::b#22 print_sbyte_at::b#16 print_sbyte_at::b#17 print_sbyte_at::b#18 print_sbyte_at::b#19 print_sbyte_at::b#20 print_sbyte_at::b#21 print_sbyte_at::b#4 print_sbyte_at::b#13 print_sbyte_at::b#14 print_sbyte_at::b#15 print_sbyte_at::b#5 print_sbyte_at::b#7 print_sbyte_at::b#8 print_sbyte_at::b#9 print_sbyte_at::b#10 print_sbyte_at::b#11 print_sbyte_at::b#12 print_sbyte_at::b#1 print_sbyte_at::b#2 print_sbyte_at::b#3 ]
reg byte y [ print_char_at::ch#4 print_char_at::ch#2 print_char_at::ch#3 ]
zp ZP_BYTE:9 [ debug_print_init::c#2 debug_print_init::c#1 ]
zp ZP_BYTE:10 [ debug_print_init::i#2 debug_print_init::i#1 ]
reg byte y [ debug_print_init::j#2 debug_print_init::j#1 ]
zp ZP_WORD:11 [ print_str_at::str#13 print_str_at::str#15 print_str_at::str#0 ]
zp ZP_WORD:13 [ print_str_at::at#13 print_str_at::at#15 print_str_at::at#0 ]
zp ZP_WORD:15 [ print_cls::sc#2 print_cls::sc#1 ]
reg byte x [ sprites_init::i#2 sprites_init::i#1 ]
reg byte x [ calculate_matrix::sx#0 ]
reg byte x [ rotate_matrix::x#0 ]
zp ZP_BYTE:17 [ rotate_matrix::y#0 ]
zp ZP_BYTE:18 [ rotate_matrix::z#0 ]
reg byte x [ anim::i2#0 ]
reg byte a [ anim::$8 ]
reg byte a [ anim::$10 ]
reg byte x [ debug_print::print_sbyte_pos1_sb#0 ]
reg byte x [ debug_print::print_sbyte_pos2_sb#0 ]
reg byte x [ debug_print::print_sbyte_pos4_sb#0 ]
reg byte x [ debug_print::print_sbyte_pos5_sb#0 ]
reg byte x [ debug_print::print_sbyte_pos6_sb#0 ]
reg byte x [ debug_print::print_sbyte_pos7_sb#0 ]
reg byte x [ debug_print::print_sbyte_pos8_sb#0 ]
reg byte x [ debug_print::print_sbyte_pos9_sb#0 ]
reg byte x [ debug_print::print_sbyte_pos10_sb#0 ]
reg byte x [ debug_print::print_sbyte_pos11_sb#0 ]
reg byte x [ debug_print::print_sbyte_pos12_sb#0 ]
reg byte x [ print_byte_at::b#0 ]
reg byte y [ print_byte_at::$0 ]
reg byte x [ print_byte_at::$2 ]
zp ZP_BYTE:19 [ calculate_matrix::t1#0 ]
zp ZP_BYTE:20 [ calculate_matrix::t2#0 ]
zp ZP_BYTE:21 [ calculate_matrix::t3#0 ]
zp ZP_BYTE:22 [ calculate_matrix::t4#0 ]
zp ZP_BYTE:23 [ calculate_matrix::t5#0 ]
zp ZP_BYTE:24 [ calculate_matrix::t6#0 ]
zp ZP_BYTE:25 [ calculate_matrix::t7#0 ]
zp ZP_BYTE:26 [ calculate_matrix::t8#0 ]
zp ZP_BYTE:27 [ calculate_matrix::t9#0 ]
reg byte x [ calculate_matrix::t10#0 ]
reg byte a [ calculate_matrix::$10 ]
reg byte a [ calculate_matrix::$11 ]
reg byte a [ calculate_matrix::$12 ]
reg byte a [ calculate_matrix::$13 ]
reg byte a [ calculate_matrix::$14 ]
reg byte a [ calculate_matrix::$15 ]
reg byte a [ calculate_matrix::$16 ]
reg byte a [ calculate_matrix::$17 ]
reg byte a [ calculate_matrix::$18 ]
reg byte a [ calculate_matrix::$19 ]
reg byte a [ calculate_matrix::$20 ]
reg byte a [ calculate_matrix::$21 ]
reg byte a [ calculate_matrix::$22 ]
reg byte a [ calculate_matrix::$23 ]
reg byte a [ calculate_matrix::$24 ]
reg byte a [ calculate_matrix::$25 ]
reg byte a [ calculate_matrix::$26 ]
reg byte a [ calculate_matrix::$27 ]
reg byte a [ calculate_matrix::$28 ]
reg byte a [ calculate_matrix::$29 ]
reg byte a [ calculate_matrix::$30 ]
reg byte a [ calculate_matrix::$31 ]
reg byte a [ calculate_matrix::$32 ]
reg byte a [ calculate_matrix::$33 ]
reg byte a [ calculate_matrix::$34 ]
reg byte x [ debug_print_init::col#0 ]
zp ZP_WORD:28 [ debug_print_init::$41 ]
zp ZP_WORD:30 [ debug_print_init::$44 ]
zp ZP_WORD:32 [ debug_print_init::$47 ]
zp ZP_WORD:34 [ debug_print_init::$50 ]
zp ZP_WORD:36 [ debug_print_init::$53 ]
zp ZP_WORD:38 [ debug_print_init::$56 ]
zp ZP_WORD:40 [ debug_print_init::$59 ]
zp ZP_WORD:42 [ debug_print_init::$62 ]
zp ZP_WORD:44 [ debug_print_init::$65 ]
