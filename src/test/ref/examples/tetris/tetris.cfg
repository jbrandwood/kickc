@begin: scope:[]  from
  [0] phi()
  to:@20
@20: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @20
  [3] phi()
main: scope:[main]  from @20
  asm { sei  }
  [5] call init 
  to:main::@21
main::@21: scope:[main]  from main
  [6] phi()
  [7] call spawn_current 
  to:main::@22
main::@22: scope:[main]  from main::@21
  [8] phi()
  [9] call render_playfield 
  to:main::@23
main::@23: scope:[main]  from main::@22
  [10] phi()
  [11] call render_current 
  to:main::@1
main::@1: scope:[main]  from main::@10 main::@23
  [12] (byte) current_movedown_counter#15 ← phi( main::@10/(byte) current_movedown_counter#12 main::@23/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [12] (byte) keyboard_events_size#19 ← phi( main::@10/(byte) keyboard_events_size#16 main::@23/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [12] (byte) current_ypos#12 ← phi( main::@10/(byte) current_ypos#16 main::@23/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [12] (byte) current_xpos#16 ← phi( main::@10/(byte) current_xpos#11 main::@23/(byte/signed byte/word/signed word/dword/signed dword) 3 )
  [12] (byte) current_piece_color#11 ← phi( main::@10/(byte) current_piece_color#13 main::@23/(const byte) GREEN#0 )
  [12] (byte*) current_piece_gfx#16 ← phi( main::@10/(byte*) current_piece_gfx#11 main::@23/(const byte[4*4*4]) piece_t#0 )
  [12] (byte) current_piece_orientation#16 ← phi( main::@10/(byte) current_piece_orientation#11 main::@23/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [12] (byte*) current_piece#11 ← phi( main::@10/(byte*) current_piece#13 main::@23/(const byte[4*4*4]) piece_t#0 )
  to:main::@4
main::@4: scope:[main]  from main::@1 main::@4
  [13] if(*((const byte*) RASTER#0)!=(byte/word/signed word/dword/signed dword) 255) goto main::@4
  to:main::@7
main::@7: scope:[main]  from main::@4 main::@7
  [14] if(*((const byte*) RASTER#0)!=(byte/word/signed word/dword/signed dword) 254) goto main::@7
  to:main::@9
main::@9: scope:[main]  from main::@7
  [15] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0)
  [16] call keyboard_event_scan 
  to:main::@25
main::@25: scope:[main]  from main::@9
  [17] phi()
  [18] call keyboard_event_get 
  [19] (byte) keyboard_event_get::return#3 ← (byte) keyboard_event_get::return#2
  to:main::@26
main::@26: scope:[main]  from main::@25
  [20] (byte) main::key_event#0 ← (byte) keyboard_event_get::return#3
  [21] (byte) play_movedown::key_event#0 ← (byte) main::key_event#0
  [22] call play_movedown 
  [23] (byte) play_movedown::return#0 ← (byte) play_movedown::return#3
  to:main::@27
main::@27: scope:[main]  from main::@26
  [24] (byte~) main::$8 ← (byte) play_movedown::return#0
  [25] (byte) main::render#1 ← (byte/signed byte/word/signed word/dword/signed dword) 0 + (byte~) main::$8
  [26] (byte) play_moveother::key_event#0 ← (byte) main::key_event#0
  [27] call play_moveother 
  [28] (byte) play_moveother::return#0 ← (byte) play_moveother::return#1
  to:main::@28
main::@28: scope:[main]  from main::@27
  [29] (byte~) main::$9 ← (byte) play_moveother::return#0
  [30] (byte) main::render#2 ← (byte) main::render#1 + (byte~) main::$9
  [31] if((byte) main::render#2==(byte/signed byte/word/signed word/dword/signed dword) 0) goto main::@10
  to:main::@19
main::@19: scope:[main]  from main::@28
  [32] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0)
  [33] call render_playfield 
  to:main::@29
main::@29: scope:[main]  from main::@19
  [34] (byte~) current_ypos#75 ← (byte) current_ypos#16
  [35] (byte*~) current_piece_gfx#99 ← (byte*) current_piece_gfx#11
  [36] (byte~) current_xpos#91 ← (byte) current_xpos#11
  [37] (byte~) current_piece_color#69 ← (byte) current_piece_color#13
  [38] call render_current 
  to:main::@30
main::@30: scope:[main]  from main::@29
  [39] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0)
  to:main::@10
main::@10: scope:[main]  from main::@28 main::@30
  [40] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0)
  to:main::@1
render_current: scope:[render_current]  from main::@23 main::@29
  [41] (byte) current_piece_color#62 ← phi( main::@23/(const byte) GREEN#0 main::@29/(byte~) current_piece_color#69 )
  [41] (byte) current_xpos#81 ← phi( main::@23/(byte/signed byte/word/signed word/dword/signed dword) 3 main::@29/(byte~) current_xpos#91 )
  [41] (byte*) current_piece_gfx#75 ← phi( main::@23/(const byte[4*4*4]) piece_t#0 main::@29/(byte*~) current_piece_gfx#99 )
  [41] (byte) current_ypos#35 ← phi( main::@23/(byte/signed byte/word/signed word/dword/signed dword) 0 main::@29/(byte~) current_ypos#75 )
  to:render_current::@1
render_current::@1: scope:[render_current]  from render_current render_current::@2
  [42] (byte) render_current::i#4 ← phi( render_current/(byte/signed byte/word/signed word/dword/signed dword) 0 render_current::@2/(byte) render_current::i#8 )
  [42] (byte) render_current::l#2 ← phi( render_current/(byte/signed byte/word/signed word/dword/signed dword) 0 render_current::@2/(byte) render_current::l#1 )
  [43] (byte) render_current::line#0 ← (byte) current_ypos#35 + (byte) render_current::l#2
  [44] if((byte) render_current::line#0>=(const byte) PLAYFIELD_LINES#0) goto render_current::@2
  to:render_current::@6
render_current::@6: scope:[render_current]  from render_current::@1
  [45] (byte~) render_current::$3 ← (byte) render_current::line#0 << (byte/signed byte/word/signed word/dword/signed dword) 1
  [46] (byte*) render_current::screen_line#0 ← *((const byte*[PLAYFIELD_LINES#0+3]) screen_lines#0 + (byte~) render_current::$3)
  to:render_current::@3
render_current::@3: scope:[render_current]  from render_current::@4 render_current::@6
  [47] (byte) render_current::c#2 ← phi( render_current::@4/(byte) render_current::c#1 render_current::@6/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [47] (byte) render_current::i#2 ← phi( render_current::@4/(byte) render_current::i#1 render_current::@6/(byte) render_current::i#4 )
  [48] (byte) render_current::current_cell#0 ← *((byte*) current_piece_gfx#75 + (byte) render_current::i#2)
  [49] (byte) render_current::i#1 ← ++ (byte) render_current::i#2
  [50] if((byte) render_current::current_cell#0==(byte/signed byte/word/signed word/dword/signed dword) 0) goto render_current::@4
  to:render_current::@7
render_current::@7: scope:[render_current]  from render_current::@3
  [51] (byte) render_current::xpos#0 ← (byte) current_xpos#81 + (byte) render_current::c#2
  [52] if((byte) render_current::xpos#0>=(const byte) PLAYFIELD_COLS#0) goto render_current::@4
  to:render_current::@8
render_current::@8: scope:[render_current]  from render_current::@7
  [53] *((byte*) render_current::screen_line#0 + (byte) render_current::xpos#0) ← (byte) current_piece_color#62
  to:render_current::@4
render_current::@4: scope:[render_current]  from render_current::@3 render_current::@7 render_current::@8
  [54] (byte) render_current::c#1 ← ++ (byte) render_current::c#2
  [55] if((byte) render_current::c#1!=(byte/signed byte/word/signed word/dword/signed dword) 4) goto render_current::@3
  to:render_current::@2
render_current::@2: scope:[render_current]  from render_current::@1 render_current::@4
  [56] (byte) render_current::i#8 ← phi( render_current::@1/(byte) render_current::i#4 render_current::@4/(byte) render_current::i#1 )
  [57] (byte) render_current::l#1 ← ++ (byte) render_current::l#2
  [58] if((byte) render_current::l#1!=(byte/signed byte/word/signed word/dword/signed dword) 4) goto render_current::@1
  to:render_current::@return
render_current::@return: scope:[render_current]  from render_current::@2
  [59] return 
  to:@return
render_playfield: scope:[render_playfield]  from main::@19 main::@22
  [60] phi()
  to:render_playfield::@1
render_playfield::@1: scope:[render_playfield]  from render_playfield render_playfield::@3
  [61] (byte) render_playfield::i#3 ← phi( render_playfield/(byte/signed byte/word/signed word/dword/signed dword) 0 render_playfield::@3/(byte) render_playfield::i#1 )
  [61] (byte) render_playfield::l#2 ← phi( render_playfield/(byte/signed byte/word/signed word/dword/signed dword) 0 render_playfield::@3/(byte) render_playfield::l#1 )
  [62] (byte~) render_playfield::$1 ← (byte) render_playfield::l#2 << (byte/signed byte/word/signed word/dword/signed dword) 1
  [63] (byte*) render_playfield::line#0 ← *((const byte*[PLAYFIELD_LINES#0+3]) screen_lines#0 + (byte~) render_playfield::$1)
  to:render_playfield::@2
render_playfield::@2: scope:[render_playfield]  from render_playfield::@1 render_playfield::@2
  [64] (byte) render_playfield::i#2 ← phi( render_playfield::@1/(byte) render_playfield::i#3 render_playfield::@2/(byte) render_playfield::i#1 )
  [64] (byte) render_playfield::c#2 ← phi( render_playfield::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 render_playfield::@2/(byte) render_playfield::c#1 )
  [65] (byte*~) render_playfield::$3 ← (byte*) render_playfield::line#0 + (byte) render_playfield::c#2
  [66] *((byte*~) render_playfield::$3) ← *((const byte[PLAYFIELD_LINES#0*PLAYFIELD_COLS#0]) playfield#0 + (byte) render_playfield::i#2)
  [67] (byte) render_playfield::i#1 ← ++ (byte) render_playfield::i#2
  [68] (byte) render_playfield::c#1 ← ++ (byte) render_playfield::c#2
  [69] if((byte) render_playfield::c#1!=(const byte) PLAYFIELD_COLS#0-(byte/signed byte/word/signed word/dword/signed dword) 1+(byte/signed byte/word/signed word/dword/signed dword) 1) goto render_playfield::@2
  to:render_playfield::@3
render_playfield::@3: scope:[render_playfield]  from render_playfield::@2
  [70] (byte) render_playfield::l#1 ← ++ (byte) render_playfield::l#2
  [71] if((byte) render_playfield::l#1!=(const byte) PLAYFIELD_LINES#0-(byte/signed byte/word/signed word/dword/signed dword) 1+(byte/signed byte/word/signed word/dword/signed dword) 1) goto render_playfield::@1
  to:render_playfield::@return
render_playfield::@return: scope:[render_playfield]  from render_playfield::@3
  [72] return 
  to:@return
play_moveother: scope:[play_moveother]  from main::@27
  [73] (byte~) play_moveother::$0 ← (byte) play_moveother::key_event#0 & (byte/word/signed word/dword/signed dword) 128
  [74] if((byte~) play_moveother::$0!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto play_moveother::@1
  to:play_moveother::@11
play_moveother::@11: scope:[play_moveother]  from play_moveother
  [75] if((byte) play_moveother::key_event#0==(const byte) KEY_COMMA#0) goto play_moveother::@2
  to:play_moveother::@12
play_moveother::@12: scope:[play_moveother]  from play_moveother::@11
  [76] if((byte) play_moveother::key_event#0==(const byte) KEY_DOT#0) goto play_moveother::@3
  to:play_moveother::@13
play_moveother::@13: scope:[play_moveother]  from play_moveother::@12
  [77] if((byte) play_moveother::key_event#0==(const byte) KEY_Z#0) goto play_moveother::@4
  to:play_moveother::@14
play_moveother::@14: scope:[play_moveother]  from play_moveother::@13
  [78] if((byte) play_moveother::key_event#0!=(const byte) KEY_X#0) goto play_moveother::@1
  to:play_moveother::@15
play_moveother::@15: scope:[play_moveother]  from play_moveother::@14
  [79] (byte/signed word/word/dword/signed dword~) play_moveother::$8 ← (byte) current_piece_orientation#18 + (byte/signed byte/word/signed word/dword/signed dword) 16
  [80] (byte) current_piece_orientation#10 ← (byte/signed word/word/dword/signed dword~) play_moveother::$8 & (byte/signed byte/word/signed word/dword/signed dword) 63
  [81] (byte*) current_piece_gfx#10 ← (byte*) current_piece#13 + (byte) current_piece_orientation#10
  to:play_moveother::@1
play_moveother::@1: scope:[play_moveother]  from play_moveother play_moveother::@14 play_moveother::@15 play_moveother::@18 play_moveother::@20 play_moveother::@22 play_moveother::@23 play_moveother::@4
  [82] (byte) current_xpos#11 ← phi( play_moveother/(byte) current_xpos#19 play_moveother::@22/(byte) current_xpos#19 play_moveother::@15/(byte) current_xpos#19 play_moveother::@18/(byte) current_xpos#9 play_moveother::@20/(byte) current_xpos#10 play_moveother::@4/(byte) current_xpos#19 play_moveother::@14/(byte) current_xpos#19 play_moveother::@23/(byte) current_xpos#19 )
  [82] (byte*) current_piece_gfx#11 ← phi( play_moveother/(byte*) current_piece_gfx#18 play_moveother::@22/(byte*) current_piece_gfx#18 play_moveother::@15/(byte*) current_piece_gfx#10 play_moveother::@18/(byte*) current_piece_gfx#18 play_moveother::@20/(byte*) current_piece_gfx#18 play_moveother::@4/(byte*) current_piece_gfx#9 play_moveother::@14/(byte*) current_piece_gfx#18 play_moveother::@23/(byte*) current_piece_gfx#18 )
  [82] (byte) current_piece_orientation#11 ← phi( play_moveother/(byte) current_piece_orientation#18 play_moveother::@22/(byte) current_piece_orientation#18 play_moveother::@15/(byte) current_piece_orientation#10 play_moveother::@18/(byte) current_piece_orientation#18 play_moveother::@20/(byte) current_piece_orientation#18 play_moveother::@4/(byte) current_piece_orientation#9 play_moveother::@14/(byte) current_piece_orientation#18 play_moveother::@23/(byte) current_piece_orientation#18 )
  [82] (byte) play_moveother::return#1 ← phi( play_moveother/(byte/signed byte/word/signed word/dword/signed dword) 0 play_moveother::@22/(byte/signed byte/word/signed word/dword/signed dword) 0 play_moveother::@15/(byte/signed byte/word/signed word/dword/signed dword) 1 play_moveother::@18/(byte/signed byte/word/signed word/dword/signed dword) 1 play_moveother::@20/(byte/signed byte/word/signed word/dword/signed dword) 1 play_moveother::@4/(byte/signed byte/word/signed word/dword/signed dword) 1 play_moveother::@14/(byte/signed byte/word/signed word/dword/signed dword) 0 play_moveother::@23/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  to:play_moveother::@return
play_moveother::@return: scope:[play_moveother]  from play_moveother::@1
  [83] return 
  to:@return
play_moveother::@4: scope:[play_moveother]  from play_moveother::@13
  [84] (byte/signed word/word/dword/signed dword~) play_moveother::$11 ← (byte) current_piece_orientation#18 - (byte/signed byte/word/signed word/dword/signed dword) 16
  [85] (byte) current_piece_orientation#9 ← (byte/signed word/word/dword/signed dword~) play_moveother::$11 & (byte/signed byte/word/signed word/dword/signed dword) 63
  [86] (byte*) current_piece_gfx#9 ← (byte*) current_piece#13 + (byte) current_piece_orientation#9
  to:play_moveother::@1
play_moveother::@3: scope:[play_moveother]  from play_moveother::@12
  [87] (byte) collision::xpos#2 ← (byte) current_xpos#19 + (byte/signed byte/word/signed word/dword/signed dword) 1
  [88] (byte) collision::ypos#2 ← (byte) current_ypos#16
  [89] (byte*~) current_piece_gfx#110 ← (byte*) current_piece_gfx#18
  [90] call collision 
  [91] (byte) collision::return#12 ← (byte) collision::return#10
  to:play_moveother::@23
play_moveother::@23: scope:[play_moveother]  from play_moveother::@3
  [92] (byte~) play_moveother::$15 ← (byte) collision::return#12
  [93] if((byte~) play_moveother::$15!=(const byte) COLLISION_NONE#0) goto play_moveother::@1
  to:play_moveother::@18
play_moveother::@18: scope:[play_moveother]  from play_moveother::@23
  [94] (byte) current_xpos#9 ← ++ (byte) current_xpos#19
  to:play_moveother::@1
play_moveother::@2: scope:[play_moveother]  from play_moveother::@11
  [95] (byte) collision::xpos#1 ← (byte) current_xpos#19 - (byte/signed byte/word/signed word/dword/signed dword) 1
  [96] (byte) collision::ypos#1 ← (byte) current_ypos#16
  [97] (byte*~) current_piece_gfx#109 ← (byte*) current_piece_gfx#18
  [98] call collision 
  [99] (byte) collision::return#11 ← (byte) collision::return#10
  to:play_moveother::@22
play_moveother::@22: scope:[play_moveother]  from play_moveother::@2
  [100] (byte~) play_moveother::$19 ← (byte) collision::return#11
  [101] if((byte~) play_moveother::$19!=(const byte) COLLISION_NONE#0) goto play_moveother::@1
  to:play_moveother::@20
play_moveother::@20: scope:[play_moveother]  from play_moveother::@22
  [102] (byte) current_xpos#10 ← -- (byte) current_xpos#19
  to:play_moveother::@1
collision: scope:[collision]  from play_movedown::@12 play_moveother::@2 play_moveother::@3
  [103] (byte) collision::xpos#8 ← phi( play_movedown::@12/(byte) collision::xpos#0 play_moveother::@2/(byte) collision::xpos#1 play_moveother::@3/(byte) collision::xpos#2 )
  [103] (byte*) current_piece_gfx#46 ← phi( play_movedown::@12/(byte*~) current_piece_gfx#108 play_moveother::@2/(byte*~) current_piece_gfx#109 play_moveother::@3/(byte*~) current_piece_gfx#110 )
  [103] (byte) collision::ypos#4 ← phi( play_movedown::@12/(byte) collision::ypos#0 play_moveother::@2/(byte) collision::ypos#1 play_moveother::@3/(byte) collision::ypos#2 )
  to:collision::@1
collision::@1: scope:[collision]  from collision collision::@20
  [104] (byte) collision::i#3 ← phi( collision/(byte/signed byte/word/signed word/dword/signed dword) 0 collision::@20/(byte~) collision::i#11 )
  [104] (byte) collision::l#2 ← phi( collision/(byte/signed byte/word/signed word/dword/signed dword) 0 collision::@20/(byte) collision::l#1 )
  [105] (byte) collision::line#0 ← (byte) collision::ypos#4 + (byte) collision::l#2
  [106] (byte~) collision::$1 ← (byte) collision::line#0 << (byte/signed byte/word/signed word/dword/signed dword) 1
  [107] (byte*) collision::playfield_line#0 ← *((const byte*[PLAYFIELD_LINES#0]) playfield_lines#0 + (byte~) collision::$1)
  to:collision::@2
collision::@2: scope:[collision]  from collision::@1 collision::@21
  [108] (byte) collision::c#2 ← phi( collision::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 collision::@21/(byte) collision::c#1 )
  [108] (byte) collision::i#2 ← phi( collision::@1/(byte) collision::i#3 collision::@21/(byte~) collision::i#13 )
  [109] (byte) collision::i#1 ← ++ (byte) collision::i#2
  [110] if(*((byte*) current_piece_gfx#46 + (byte) collision::i#2)==(byte/signed byte/word/signed word/dword/signed dword) 0) goto collision::@3
  to:collision::@8
collision::@8: scope:[collision]  from collision::@2
  [111] if((byte) collision::line#0<(const byte) PLAYFIELD_LINES#0) goto collision::@4
  to:collision::@return
collision::@return: scope:[collision]  from collision::@17 collision::@4 collision::@5 collision::@6 collision::@8
  [112] (byte) collision::return#10 ← phi( collision::@4/(const byte) COLLISION_LEFT#0 collision::@5/(const byte) COLLISION_RIGHT#0 collision::@6/(const byte) COLLISION_PLAYFIELD#0 collision::@17/(const byte) COLLISION_NONE#0 collision::@8/(const byte) COLLISION_BOTTOM#0 )
  [113] return 
  to:@return
collision::@4: scope:[collision]  from collision::@8
  [114] (byte) collision::col#0 ← (byte) collision::xpos#8 + (byte) collision::c#2
  [115] (byte~) collision::$7 ← (byte) collision::col#0 & (byte/word/signed word/dword/signed dword) 128
  [116] if((byte~) collision::$7==(byte/signed byte/word/signed word/dword/signed dword) 0) goto collision::@5
  to:collision::@return
collision::@5: scope:[collision]  from collision::@4
  [117] if((byte) collision::col#0<(const byte) PLAYFIELD_COLS#0) goto collision::@6
  to:collision::@return
collision::@6: scope:[collision]  from collision::@5
  [118] if(*((byte*) collision::playfield_line#0 + (byte) collision::col#0)==(byte/signed byte/word/signed word/dword/signed dword) 0) goto collision::@3
  to:collision::@return
collision::@3: scope:[collision]  from collision::@2 collision::@6
  [119] (byte) collision::c#1 ← ++ (byte) collision::c#2
  [120] if((byte) collision::c#1!=(byte/signed byte/word/signed word/dword/signed dword) 4) goto collision::@21
  to:collision::@17
collision::@17: scope:[collision]  from collision::@3
  [121] (byte) collision::l#1 ← ++ (byte) collision::l#2
  [122] if((byte) collision::l#1!=(byte/signed byte/word/signed word/dword/signed dword) 4) goto collision::@20
  to:collision::@return
collision::@20: scope:[collision]  from collision::@17
  [123] (byte~) collision::i#11 ← (byte) collision::i#1
  to:collision::@1
collision::@21: scope:[collision]  from collision::@3
  [124] (byte~) collision::i#13 ← (byte) collision::i#1
  to:collision::@2
play_movedown: scope:[play_movedown]  from main::@26
  [125] (byte) current_movedown_counter#10 ← ++ (byte) current_movedown_counter#15
  [126] if((byte) play_movedown::key_event#0!=(const byte) KEY_SPACE#0) goto play_movedown::@1
  to:play_movedown::@8
play_movedown::@8: scope:[play_movedown]  from play_movedown
  [127] phi()
  to:play_movedown::@1
play_movedown::@1: scope:[play_movedown]  from play_movedown play_movedown::@8
  [128] (byte) play_movedown::movedown#10 ← phi( play_movedown/(byte/signed byte/word/signed word/dword/signed dword) 0 play_movedown::@8/(byte/signed byte/word/signed word/dword/signed dword) 1 )
  [129] call keyboard_event_pressed 
  [130] (byte) keyboard_event_pressed::return#12 ← (byte) keyboard_event_pressed::return#11
  to:play_movedown::@17
play_movedown::@17: scope:[play_movedown]  from play_movedown::@1
  [131] (byte~) play_movedown::$2 ← (byte) keyboard_event_pressed::return#12
  [132] if((byte~) play_movedown::$2==(byte/signed byte/word/signed word/dword/signed dword) 0) goto play_movedown::@2
  to:play_movedown::@9
play_movedown::@9: scope:[play_movedown]  from play_movedown::@17
  [133] if((byte) current_movedown_counter#10<(const byte) current_movedown_rate_fast#0) goto play_movedown::@2
  to:play_movedown::@10
play_movedown::@10: scope:[play_movedown]  from play_movedown::@9
  [134] (byte) play_movedown::movedown#2 ← ++ (byte) play_movedown::movedown#10
  to:play_movedown::@2
play_movedown::@2: scope:[play_movedown]  from play_movedown::@10 play_movedown::@17 play_movedown::@9
  [135] (byte) play_movedown::movedown#7 ← phi( play_movedown::@10/(byte) play_movedown::movedown#2 play_movedown::@17/(byte) play_movedown::movedown#10 play_movedown::@9/(byte) play_movedown::movedown#10 )
  [136] if((byte) current_movedown_counter#10<(const byte) current_movedown_rate#0) goto play_movedown::@4
  to:play_movedown::@11
play_movedown::@11: scope:[play_movedown]  from play_movedown::@2
  [137] (byte) play_movedown::movedown#3 ← ++ (byte) play_movedown::movedown#7
  to:play_movedown::@4
play_movedown::@4: scope:[play_movedown]  from play_movedown::@11 play_movedown::@2
  [138] (byte) play_movedown::movedown#6 ← phi( play_movedown::@11/(byte) play_movedown::movedown#3 play_movedown::@2/(byte) play_movedown::movedown#7 )
  [139] if((byte) play_movedown::movedown#6==(byte/signed byte/word/signed word/dword/signed dword) 0) goto play_movedown::@return
  to:play_movedown::@12
play_movedown::@12: scope:[play_movedown]  from play_movedown::@4
  [140] (byte) collision::ypos#0 ← (byte) current_ypos#12 + (byte/signed byte/word/signed word/dword/signed dword) 1
  [141] (byte) collision::xpos#0 ← (byte) current_xpos#16
  [142] (byte*~) current_piece_gfx#108 ← (byte*) current_piece_gfx#16
  [143] call collision 
  [144] (byte) collision::return#0 ← (byte) collision::return#10
  to:play_movedown::@18
play_movedown::@18: scope:[play_movedown]  from play_movedown::@12
  [145] (byte~) play_movedown::$12 ← (byte) collision::return#0
  [146] if((byte~) play_movedown::$12==(const byte) COLLISION_NONE#0) goto play_movedown::@6
  to:play_movedown::@13
play_movedown::@13: scope:[play_movedown]  from play_movedown::@18
  [147] phi()
  [148] call lock_current 
  to:play_movedown::@19
play_movedown::@19: scope:[play_movedown]  from play_movedown::@13
  [149] phi()
  [150] call spawn_current 
  to:play_movedown::@7
play_movedown::@7: scope:[play_movedown]  from play_movedown::@19 play_movedown::@6
  [151] (byte) current_xpos#35 ← phi( play_movedown::@19/(byte/signed byte/word/signed word/dword/signed dword) 3 play_movedown::@6/(byte) current_xpos#16 )
  [151] (byte) current_piece_color#23 ← phi( play_movedown::@19/(const byte) GREEN#0 play_movedown::@6/(byte) current_piece_color#11 )
  [151] (byte*) current_piece_gfx#30 ← phi( play_movedown::@19/(const byte[4*4*4]) piece_t#0 play_movedown::@6/(byte*) current_piece_gfx#16 )
  [151] (byte) current_piece_orientation#29 ← phi( play_movedown::@19/(byte/signed byte/word/signed word/dword/signed dword) 0 play_movedown::@6/(byte) current_piece_orientation#16 )
  [151] (byte*) current_piece#23 ← phi( play_movedown::@19/(const byte[4*4*4]) piece_t#0 play_movedown::@6/(byte*) current_piece#11 )
  [151] (byte) current_ypos#30 ← phi( play_movedown::@19/(byte/signed byte/word/signed word/dword/signed dword) 0 play_movedown::@6/(byte) current_ypos#4 )
  to:play_movedown::@return
play_movedown::@return: scope:[play_movedown]  from play_movedown::@4 play_movedown::@7
  [152] (byte) current_xpos#19 ← phi( play_movedown::@4/(byte) current_xpos#16 play_movedown::@7/(byte) current_xpos#35 )
  [152] (byte) current_piece_color#13 ← phi( play_movedown::@4/(byte) current_piece_color#11 play_movedown::@7/(byte) current_piece_color#23 )
  [152] (byte*) current_piece_gfx#18 ← phi( play_movedown::@4/(byte*) current_piece_gfx#16 play_movedown::@7/(byte*) current_piece_gfx#30 )
  [152] (byte) current_piece_orientation#18 ← phi( play_movedown::@4/(byte) current_piece_orientation#16 play_movedown::@7/(byte) current_piece_orientation#29 )
  [152] (byte*) current_piece#13 ← phi( play_movedown::@4/(byte*) current_piece#11 play_movedown::@7/(byte*) current_piece#23 )
  [152] (byte) current_ypos#16 ← phi( play_movedown::@4/(byte) current_ypos#12 play_movedown::@7/(byte) current_ypos#30 )
  [152] (byte) current_movedown_counter#12 ← phi( play_movedown::@4/(byte) current_movedown_counter#10 play_movedown::@7/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [152] (byte) play_movedown::return#3 ← phi( play_movedown::@4/(byte/signed byte/word/signed word/dword/signed dword) 0 play_movedown::@7/(byte/signed byte/word/signed word/dword/signed dword) 1 )
  [153] return 
  to:@return
play_movedown::@6: scope:[play_movedown]  from play_movedown::@18
  [154] (byte) current_ypos#4 ← ++ (byte) current_ypos#12
  to:play_movedown::@7
spawn_current: scope:[spawn_current]  from main::@21 play_movedown::@19
  [155] phi()
  to:spawn_current::@return
spawn_current::@return: scope:[spawn_current]  from spawn_current
  [156] return 
  to:@return
lock_current: scope:[lock_current]  from play_movedown::@13
  [157] phi()
  to:lock_current::@1
lock_current::@1: scope:[lock_current]  from lock_current lock_current::@5
  [158] (byte) lock_current::i#3 ← phi( lock_current/(byte/signed byte/word/signed word/dword/signed dword) 0 lock_current::@5/(byte) lock_current::i#1 )
  [158] (byte) lock_current::l#2 ← phi( lock_current/(byte/signed byte/word/signed word/dword/signed dword) 0 lock_current::@5/(byte) lock_current::l#1 )
  [159] (byte) lock_current::line#0 ← (byte) current_ypos#12 + (byte) lock_current::l#2
  [160] (byte~) lock_current::$1 ← (byte) lock_current::line#0 << (byte/signed byte/word/signed word/dword/signed dword) 1
  [161] (byte*) lock_current::playfield_line#0 ← *((const byte*[PLAYFIELD_LINES#0]) playfield_lines#0 + (byte~) lock_current::$1)
  to:lock_current::@2
lock_current::@2: scope:[lock_current]  from lock_current::@1 lock_current::@3
  [162] (byte) lock_current::c#2 ← phi( lock_current::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 lock_current::@3/(byte) lock_current::c#1 )
  [162] (byte) lock_current::i#2 ← phi( lock_current::@1/(byte) lock_current::i#3 lock_current::@3/(byte) lock_current::i#1 )
  [163] (byte) lock_current::cell#0 ← *((byte*) current_piece_gfx#16 + (byte) lock_current::i#2)
  [164] (byte) lock_current::i#1 ← ++ (byte) lock_current::i#2
  [165] if((byte) lock_current::cell#0==(byte/signed byte/word/signed word/dword/signed dword) 0) goto lock_current::@3
  to:lock_current::@4
lock_current::@4: scope:[lock_current]  from lock_current::@2
  [166] (byte) lock_current::col#0 ← (byte) current_xpos#16 + (byte) lock_current::c#2
  [167] *((byte*) lock_current::playfield_line#0 + (byte) lock_current::col#0) ← (byte) current_piece_color#11
  to:lock_current::@3
lock_current::@3: scope:[lock_current]  from lock_current::@2 lock_current::@4
  [168] (byte) lock_current::c#1 ← ++ (byte) lock_current::c#2
  [169] if((byte) lock_current::c#1!=(byte/signed byte/word/signed word/dword/signed dword) 4) goto lock_current::@2
  to:lock_current::@5
lock_current::@5: scope:[lock_current]  from lock_current::@3
  [170] (byte) lock_current::l#1 ← ++ (byte) lock_current::l#2
  [171] if((byte) lock_current::l#1!=(byte/signed byte/word/signed word/dword/signed dword) 4) goto lock_current::@1
  to:lock_current::@return
lock_current::@return: scope:[lock_current]  from lock_current::@5
  [172] return 
  to:@return
keyboard_event_pressed: scope:[keyboard_event_pressed]  from keyboard_event_scan::@10 keyboard_event_scan::@11 keyboard_event_scan::@20 keyboard_event_scan::@9 play_movedown::@1
  [173] (byte) keyboard_event_pressed::keycode#5 ← phi( keyboard_event_scan::@10/(const byte) KEY_CTRL#0 keyboard_event_scan::@11/(const byte) KEY_COMMODORE#0 keyboard_event_scan::@20/(const byte) KEY_LSHIFT#0 keyboard_event_scan::@9/(const byte) KEY_RSHIFT#0 play_movedown::@1/(const byte) KEY_SPACE#0 )
  [174] (byte~) keyboard_event_pressed::$0 ← (byte) keyboard_event_pressed::keycode#5 >> (byte/signed byte/word/signed word/dword/signed dword) 3
  [175] (byte) keyboard_event_pressed::row_bits#0 ← *((const byte[8]) keyboard_scan_values#0 + (byte~) keyboard_event_pressed::$0)
  [176] (byte~) keyboard_event_pressed::$1 ← (byte) keyboard_event_pressed::keycode#5 & (byte/signed byte/word/signed word/dword/signed dword) 7
  [177] (byte) keyboard_event_pressed::return#11 ← (byte) keyboard_event_pressed::row_bits#0 & *((const byte[8]) keyboard_matrix_col_bitmask#0 + (byte~) keyboard_event_pressed::$1)
  to:keyboard_event_pressed::@return
keyboard_event_pressed::@return: scope:[keyboard_event_pressed]  from keyboard_event_pressed
  [178] return 
  to:@return
keyboard_event_get: scope:[keyboard_event_get]  from main::@25
  [179] if((byte) keyboard_events_size#13==(byte/signed byte/word/signed word/dword/signed dword) 0) goto keyboard_event_get::@return
  to:keyboard_event_get::@3
keyboard_event_get::@3: scope:[keyboard_event_get]  from keyboard_event_get
  [180] (byte) keyboard_events_size#4 ← -- (byte) keyboard_events_size#13
  [181] (byte) keyboard_event_get::return#1 ← *((const byte[8]) keyboard_events#0 + (byte) keyboard_events_size#4)
  to:keyboard_event_get::@return
keyboard_event_get::@return: scope:[keyboard_event_get]  from keyboard_event_get keyboard_event_get::@3
  [182] (byte) keyboard_events_size#16 ← phi( keyboard_event_get/(byte) keyboard_events_size#13 keyboard_event_get::@3/(byte) keyboard_events_size#4 )
  [182] (byte) keyboard_event_get::return#2 ← phi( keyboard_event_get/(byte/word/signed word/dword/signed dword) 255 keyboard_event_get::@3/(byte) keyboard_event_get::return#1 )
  [183] return 
  to:@return
keyboard_event_scan: scope:[keyboard_event_scan]  from main::@9
  [184] phi()
  to:keyboard_event_scan::@1
keyboard_event_scan::@1: scope:[keyboard_event_scan]  from keyboard_event_scan keyboard_event_scan::@3
  [185] (byte) keyboard_events_size#29 ← phi( keyboard_event_scan/(byte) keyboard_events_size#19 keyboard_event_scan::@3/(byte) keyboard_events_size#13 )
  [185] (byte) keyboard_event_scan::keycode#11 ← phi( keyboard_event_scan/(byte/signed byte/word/signed word/dword/signed dword) 0 keyboard_event_scan::@3/(byte) keyboard_event_scan::keycode#14 )
  [185] (byte) keyboard_event_scan::row#2 ← phi( keyboard_event_scan/(byte/signed byte/word/signed word/dword/signed dword) 0 keyboard_event_scan::@3/(byte) keyboard_event_scan::row#1 )
  [186] (byte) keyboard_matrix_read::rowid#0 ← (byte) keyboard_event_scan::row#2
  [187] call keyboard_matrix_read 
  [188] (byte) keyboard_matrix_read::return#2 ← (byte) keyboard_matrix_read::return#0
  to:keyboard_event_scan::@25
keyboard_event_scan::@25: scope:[keyboard_event_scan]  from keyboard_event_scan::@1
  [189] (byte) keyboard_event_scan::row_scan#0 ← (byte) keyboard_matrix_read::return#2
  [190] if((byte) keyboard_event_scan::row_scan#0!=*((const byte[8]) keyboard_scan_values#0 + (byte) keyboard_event_scan::row#2)) goto keyboard_event_scan::@4
  to:keyboard_event_scan::@13
keyboard_event_scan::@13: scope:[keyboard_event_scan]  from keyboard_event_scan::@25
  [191] (byte) keyboard_event_scan::keycode#1 ← (byte) keyboard_event_scan::keycode#11 + (byte/signed byte/word/signed word/dword/signed dword) 8
  to:keyboard_event_scan::@3
keyboard_event_scan::@3: scope:[keyboard_event_scan]  from keyboard_event_scan::@13 keyboard_event_scan::@19
  [192] (byte) keyboard_events_size#13 ← phi( keyboard_event_scan::@13/(byte) keyboard_events_size#29 keyboard_event_scan::@19/(byte) keyboard_events_size#30 )
  [192] (byte) keyboard_event_scan::keycode#14 ← phi( keyboard_event_scan::@13/(byte) keyboard_event_scan::keycode#1 keyboard_event_scan::@19/(byte) keyboard_event_scan::keycode#15 )
  [193] (byte) keyboard_event_scan::row#1 ← ++ (byte) keyboard_event_scan::row#2
  [194] if((byte) keyboard_event_scan::row#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto keyboard_event_scan::@1
  to:keyboard_event_scan::@20
keyboard_event_scan::@20: scope:[keyboard_event_scan]  from keyboard_event_scan::@3
  [195] phi()
  [196] call keyboard_event_pressed 
  [197] (byte) keyboard_event_pressed::return#0 ← (byte) keyboard_event_pressed::return#11
  to:keyboard_event_scan::@26
keyboard_event_scan::@26: scope:[keyboard_event_scan]  from keyboard_event_scan::@20
  [198] (byte~) keyboard_event_scan::$14 ← (byte) keyboard_event_pressed::return#0
  [199] if((byte~) keyboard_event_scan::$14==(byte/signed byte/word/signed word/dword/signed dword) 0) goto keyboard_event_scan::@9
  to:keyboard_event_scan::@21
keyboard_event_scan::@21: scope:[keyboard_event_scan]  from keyboard_event_scan::@26
  [200] phi()
  to:keyboard_event_scan::@9
keyboard_event_scan::@9: scope:[keyboard_event_scan]  from keyboard_event_scan::@21 keyboard_event_scan::@26
  [201] phi()
  [202] call keyboard_event_pressed 
  [203] (byte) keyboard_event_pressed::return#1 ← (byte) keyboard_event_pressed::return#11
  to:keyboard_event_scan::@27
keyboard_event_scan::@27: scope:[keyboard_event_scan]  from keyboard_event_scan::@9
  [204] (byte~) keyboard_event_scan::$18 ← (byte) keyboard_event_pressed::return#1
  [205] if((byte~) keyboard_event_scan::$18==(byte/signed byte/word/signed word/dword/signed dword) 0) goto keyboard_event_scan::@10
  to:keyboard_event_scan::@22
keyboard_event_scan::@22: scope:[keyboard_event_scan]  from keyboard_event_scan::@27
  [206] phi()
  to:keyboard_event_scan::@10
keyboard_event_scan::@10: scope:[keyboard_event_scan]  from keyboard_event_scan::@22 keyboard_event_scan::@27
  [207] phi()
  [208] call keyboard_event_pressed 
  [209] (byte) keyboard_event_pressed::return#2 ← (byte) keyboard_event_pressed::return#11
  to:keyboard_event_scan::@28
keyboard_event_scan::@28: scope:[keyboard_event_scan]  from keyboard_event_scan::@10
  [210] (byte~) keyboard_event_scan::$22 ← (byte) keyboard_event_pressed::return#2
  [211] if((byte~) keyboard_event_scan::$22==(byte/signed byte/word/signed word/dword/signed dword) 0) goto keyboard_event_scan::@11
  to:keyboard_event_scan::@23
keyboard_event_scan::@23: scope:[keyboard_event_scan]  from keyboard_event_scan::@28
  [212] phi()
  to:keyboard_event_scan::@11
keyboard_event_scan::@11: scope:[keyboard_event_scan]  from keyboard_event_scan::@23 keyboard_event_scan::@28
  [213] phi()
  [214] call keyboard_event_pressed 
  [215] (byte) keyboard_event_pressed::return#10 ← (byte) keyboard_event_pressed::return#11
  to:keyboard_event_scan::@29
keyboard_event_scan::@29: scope:[keyboard_event_scan]  from keyboard_event_scan::@11
  [216] (byte~) keyboard_event_scan::$26 ← (byte) keyboard_event_pressed::return#10
  [217] if((byte~) keyboard_event_scan::$26==(byte/signed byte/word/signed word/dword/signed dword) 0) goto keyboard_event_scan::@return
  to:keyboard_event_scan::@24
keyboard_event_scan::@24: scope:[keyboard_event_scan]  from keyboard_event_scan::@29
  [218] phi()
  to:keyboard_event_scan::@return
keyboard_event_scan::@return: scope:[keyboard_event_scan]  from keyboard_event_scan::@24 keyboard_event_scan::@29
  [219] return 
  to:@return
keyboard_event_scan::@4: scope:[keyboard_event_scan]  from keyboard_event_scan::@25 keyboard_event_scan::@5
  [220] (byte) keyboard_events_size#10 ← phi( keyboard_event_scan::@25/(byte) keyboard_events_size#29 keyboard_event_scan::@5/(byte) keyboard_events_size#30 )
  [220] (byte) keyboard_event_scan::keycode#10 ← phi( keyboard_event_scan::@25/(byte) keyboard_event_scan::keycode#11 keyboard_event_scan::@5/(byte) keyboard_event_scan::keycode#15 )
  [220] (byte) keyboard_event_scan::col#2 ← phi( keyboard_event_scan::@25/(byte/signed byte/word/signed word/dword/signed dword) 0 keyboard_event_scan::@5/(byte) keyboard_event_scan::col#1 )
  [221] (byte~) keyboard_event_scan::$3 ← (byte) keyboard_event_scan::row_scan#0 ^ *((const byte[8]) keyboard_scan_values#0 + (byte) keyboard_event_scan::row#2)
  [222] (byte~) keyboard_event_scan::$4 ← (byte~) keyboard_event_scan::$3 & *((const byte[8]) keyboard_matrix_col_bitmask#0 + (byte) keyboard_event_scan::col#2)
  [223] if((byte~) keyboard_event_scan::$4==(byte/signed byte/word/signed word/dword/signed dword) 0) goto keyboard_event_scan::@5
  to:keyboard_event_scan::@15
keyboard_event_scan::@15: scope:[keyboard_event_scan]  from keyboard_event_scan::@4
  [224] if((byte) keyboard_events_size#10==(byte/signed byte/word/signed word/dword/signed dword) 8) goto keyboard_event_scan::@5
  to:keyboard_event_scan::@16
keyboard_event_scan::@16: scope:[keyboard_event_scan]  from keyboard_event_scan::@15
  [225] (byte) keyboard_event_scan::event_type#0 ← (byte) keyboard_event_scan::row_scan#0 & *((const byte[8]) keyboard_matrix_col_bitmask#0 + (byte) keyboard_event_scan::col#2)
  [226] if((byte) keyboard_event_scan::event_type#0==(byte/signed byte/word/signed word/dword/signed dword) 0) goto keyboard_event_scan::@7
  to:keyboard_event_scan::@17
keyboard_event_scan::@17: scope:[keyboard_event_scan]  from keyboard_event_scan::@16
  [227] *((const byte[8]) keyboard_events#0 + (byte) keyboard_events_size#10) ← (byte) keyboard_event_scan::keycode#10
  [228] (byte) keyboard_events_size#2 ← ++ (byte) keyboard_events_size#10
  to:keyboard_event_scan::@5
keyboard_event_scan::@5: scope:[keyboard_event_scan]  from keyboard_event_scan::@15 keyboard_event_scan::@17 keyboard_event_scan::@4 keyboard_event_scan::@7
  [229] (byte) keyboard_events_size#30 ← phi( keyboard_event_scan::@17/(byte) keyboard_events_size#2 keyboard_event_scan::@4/(byte) keyboard_events_size#10 keyboard_event_scan::@15/(byte) keyboard_events_size#10 keyboard_event_scan::@7/(byte) keyboard_events_size#1 )
  [230] (byte) keyboard_event_scan::keycode#15 ← ++ (byte) keyboard_event_scan::keycode#10
  [231] (byte) keyboard_event_scan::col#1 ← ++ (byte) keyboard_event_scan::col#2
  [232] if((byte) keyboard_event_scan::col#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto keyboard_event_scan::@4
  to:keyboard_event_scan::@19
keyboard_event_scan::@19: scope:[keyboard_event_scan]  from keyboard_event_scan::@5
  [233] *((const byte[8]) keyboard_scan_values#0 + (byte) keyboard_event_scan::row#2) ← (byte) keyboard_event_scan::row_scan#0
  to:keyboard_event_scan::@3
keyboard_event_scan::@7: scope:[keyboard_event_scan]  from keyboard_event_scan::@16
  [234] (byte/word/dword~) keyboard_event_scan::$11 ← (byte) keyboard_event_scan::keycode#10 | (byte/signed byte/word/signed word/dword/signed dword) 64
  [235] *((const byte[8]) keyboard_events#0 + (byte) keyboard_events_size#10) ← (byte/word/dword~) keyboard_event_scan::$11
  [236] (byte) keyboard_events_size#1 ← ++ (byte) keyboard_events_size#10
  to:keyboard_event_scan::@5
keyboard_matrix_read: scope:[keyboard_matrix_read]  from keyboard_event_scan::@1
  [237] *((const byte*) CIA1_PORT_A#0) ← *((const byte[8]) keyboard_matrix_row_bitmask#0 + (byte) keyboard_matrix_read::rowid#0)
  [238] (byte) keyboard_matrix_read::return#0 ← ~ *((const byte*) CIA1_PORT_B#0)
  to:keyboard_matrix_read::@return
keyboard_matrix_read::@return: scope:[keyboard_matrix_read]  from keyboard_matrix_read
  [239] return 
  to:@return
init: scope:[init]  from main
  [240] phi()
  [241] call fill 
  to:init::@9
init::@9: scope:[init]  from init
  [242] phi()
  [243] call fill 
  to:init::@1
init::@1: scope:[init]  from init::@1 init::@9
  [244] (byte*) init::li#2 ← phi( init::@1/(byte*) init::li#1 init::@9/(const byte*) COLS#0+(byte/signed byte/word/signed word/dword/signed dword) 40+(byte/signed byte/word/signed word/dword/signed dword) 15 )
  [244] (byte) init::i#2 ← phi( init::@1/(byte) init::i#1 init::@9/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [245] (byte~) init::$5 ← (byte) init::i#2 << (byte/signed byte/word/signed word/dword/signed dword) 1
  [246] *((const byte*[PLAYFIELD_LINES#0+3]) screen_lines#0 + (byte~) init::$5) ← (byte*) init::li#2
  [247] (byte*) init::li#1 ← (byte*) init::li#2 + (byte/signed byte/word/signed word/dword/signed dword) 40
  [248] (byte) init::i#1 ← ++ (byte) init::i#2
  [249] if((byte) init::i#1!=(const byte) PLAYFIELD_LINES#0+(byte/signed byte/word/signed word/dword/signed dword) 2+(byte/signed byte/word/signed word/dword/signed dword) 1) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1 init::@2
  [250] (byte*) init::pli#2 ← phi( init::@2/(byte*) init::pli#1 init::@1/(const byte[PLAYFIELD_LINES#0*PLAYFIELD_COLS#0]) playfield#0 )
  [250] (byte) init::j#2 ← phi( init::@2/(byte) init::j#1 init::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [251] (byte~) init::$8 ← (byte) init::j#2 << (byte/signed byte/word/signed word/dword/signed dword) 1
  [252] *((const byte*[PLAYFIELD_LINES#0]) playfield_lines#0 + (byte~) init::$8) ← (byte*) init::pli#2
  [253] (byte*) init::pli#1 ← (byte*) init::pli#2 + (byte/signed byte/word/signed word/dword/signed dword) 10
  [254] (byte) init::j#1 ← ++ (byte) init::j#2
  [255] if((byte) init::j#1!=(const byte) PLAYFIELD_LINES#0-(byte/signed byte/word/signed word/dword/signed dword) 1+(byte/signed byte/word/signed word/dword/signed dword) 1) goto init::@2
  to:init::@3
init::@3: scope:[init]  from init::@2 init::@7
  [256] (byte) init::l#4 ← phi( init::@2/(byte/signed byte/word/signed word/dword/signed dword) 0 init::@7/(byte) init::l#1 )
  [256] (byte*) init::line#4 ← phi( init::@2/(const byte*) COLS#0+(byte/signed byte/word/signed word/dword/signed dword) 14 init::@7/(byte*) init::line#1 )
  to:init::@4
init::@4: scope:[init]  from init::@3 init::@4
  [257] (byte) init::c#2 ← phi( init::@3/(byte/signed byte/word/signed word/dword/signed dword) 0 init::@4/(byte) init::c#1 )
  [258] (byte*~) init::$13 ← (byte*) init::line#4 + (byte) init::c#2
  [259] *((byte*~) init::$13) ← (const byte) DARK_GREY#0
  [260] (byte) init::c#1 ← ++ (byte) init::c#2
  [261] if((byte) init::c#1!=(const byte) PLAYFIELD_COLS#0+(byte/signed byte/word/signed word/dword/signed dword) 1+(byte/signed byte/word/signed word/dword/signed dword) 1) goto init::@4
  to:init::@7
init::@7: scope:[init]  from init::@4
  [262] (byte*) init::line#1 ← (byte*) init::line#4 + (byte/signed byte/word/signed word/dword/signed dword) 40
  [263] (byte) init::l#1 ← ++ (byte) init::l#4
  [264] if((byte) init::l#1!=(const byte) PLAYFIELD_LINES#0+(byte/signed byte/word/signed word/dword/signed dword) 1+(byte/signed byte/word/signed word/dword/signed dword) 1) goto init::@3
  to:init::@return
init::@return: scope:[init]  from init::@7
  [265] return 
  to:@return
fill: scope:[fill]  from init init::@9
  [266] (byte) fill::val#3 ← phi( init/(byte/word/signed word/dword/signed dword) 160 init::@9/(const byte) BLACK#0 )
  [266] (byte*) fill::addr#0 ← phi( init/(const byte*) SCREEN#0 init::@9/(const byte*) COLS#0 )
  [267] (byte*) fill::end#0 ← (byte*) fill::addr#0 + (word/signed word/dword/signed dword) 1000
  to:fill::@1
fill::@1: scope:[fill]  from fill fill::@1
  [268] (byte*) fill::addr#2 ← phi( fill/(byte*) fill::addr#0 fill::@1/(byte*) fill::addr#1 )
  [269] *((byte*) fill::addr#2) ← (byte) fill::val#3
  [270] (byte*) fill::addr#1 ← ++ (byte*) fill::addr#2
  [271] if((byte*) fill::addr#1!=(byte*) fill::end#0) goto fill::@1
  to:fill::@return
fill::@return: scope:[fill]  from fill::@1
  [272] return 
  to:@return
