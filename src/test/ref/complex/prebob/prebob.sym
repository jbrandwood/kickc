(label) @1
(label) @begin
(label) @end
(const byte*) BOB_CHARSET = (byte*) 24576
(const byte) BOB_SHIFTS_X = (number) 4
(const byte) BOB_SHIFTS_Y = (number) 8
(const byte) BOB_SUBTABLE_SIZE = (const byte) BOB_SHIFTS_X*(const byte) BOB_SHIFTS_Y
(const byte*) BOB_TABLES = { fill( 9*8*4, 0) }
(const byte*) BORDERCOL = (byte*) 53280
(const byte*) CIA2_PORT_A = (byte*) 56576
(const byte*) CIA2_PORT_A_DDR = (byte*) 56578
(const byte*) D018 = (byte*) 53272
(const byte*) PROTO_BOB = kickasm {{ .var pic = LoadPicture("smiley.png", List().add($000000, $ffffff))
	.for (var x=0;x<3; x++)
    	.for (var y=0; y<24; y++)
            .byte pic.getSinglecolorByte(x,y)
 }}
(const byte*) RASTER = (byte*) 53266
(const byte*) SCREEN = (byte*) 16384
(const byte*) SIN_X_TAB = kickasm {{ .fill $200, 75.5+75.5*sin(i*2*PI/256)  }}
(const byte*) SIN_Y_TAB = kickasm {{ .fill $200, 91.5+91.5*sin(i*2*PI/256)  }}
(byte()) bobCharsetFindOrAddGlyph((byte*) bobCharsetFindOrAddGlyph::bob_glyph)
(label) bobCharsetFindOrAddGlyph::@1
(label) bobCharsetFindOrAddGlyph::@2
(label) bobCharsetFindOrAddGlyph::@3
(label) bobCharsetFindOrAddGlyph::@4
(label) bobCharsetFindOrAddGlyph::@5
(label) bobCharsetFindOrAddGlyph::@6
(label) bobCharsetFindOrAddGlyph::@7
(label) bobCharsetFindOrAddGlyph::@8
(label) bobCharsetFindOrAddGlyph::@9
(label) bobCharsetFindOrAddGlyph::@return
(byte*) bobCharsetFindOrAddGlyph::bob_glyph
(byte*) bobCharsetFindOrAddGlyph::bob_glyph#1 bob_glyph zp[2]:5 2002.0
(byte*) bobCharsetFindOrAddGlyph::bob_glyph#10 bob_glyph zp[2]:5 7400.200000000001
(byte) bobCharsetFindOrAddGlyph::found
(byte) bobCharsetFindOrAddGlyph::found#2 reg byte a 10001.0
(byte*) bobCharsetFindOrAddGlyph::glyph_cursor
(byte*) bobCharsetFindOrAddGlyph::glyph_cursor#1 glyph_cursor zp[2]:12 20002.0
(byte*) bobCharsetFindOrAddGlyph::glyph_cursor#11 glyph_cursor zp[2]:12 10000.307692307691
(byte) bobCharsetFindOrAddGlyph::glyph_id
(byte) bobCharsetFindOrAddGlyph::glyph_id#1 glyph_id zp[1]:9 10001.0
(byte) bobCharsetFindOrAddGlyph::glyph_id#11 glyph_id zp[1]:9 1937.75
(byte) bobCharsetFindOrAddGlyph::i
(byte) bobCharsetFindOrAddGlyph::i#1 i zp[1]:7 200002.0
(byte) bobCharsetFindOrAddGlyph::i#2 i zp[1]:7 166668.3333333333
(byte) bobCharsetFindOrAddGlyph::i1
(byte) bobCharsetFindOrAddGlyph::i1#1 reg byte x 20002.0
(byte) bobCharsetFindOrAddGlyph::i1#2 reg byte x 16668.333333333332
(byte) bobCharsetFindOrAddGlyph::return
(byte) bobCharsetFindOrAddGlyph::return#1 reg byte a 2002.0
(byte) bob_charset_next_id
(byte) bob_charset_next_id#14 bob_charset_next_id zp[1]:14 12.0
(byte) bob_charset_next_id#16 bob_charset_next_id zp[1]:14 1100.6000000000001
(byte) bob_charset_next_id#21 bob_charset_next_id zp[1]:14 275.5
(byte) bob_charset_next_id#23 bob_charset_next_id zp[1]:14 1400.3333333333335
(byte) bob_charset_next_id#30 bob_charset_next_id zp[1]:14 37.33333333333333
(byte) bob_charset_next_id#8 bob_charset_next_id zp[1]:14 4.0
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(byte) main::sin_x_idx
(byte) main::sin_x_idx#1 sin_x_idx zp[1]:2 7.333333333333333
(byte) main::sin_x_idx#7 sin_x_idx zp[1]:2 4.583333333333333
(byte) main::sin_y_idx
(byte) main::sin_y_idx#1 sin_y_idx zp[1]:3 11.0
(byte) main::sin_y_idx#7 sin_y_idx zp[1]:3 4.230769230769231
(label) main::toD0181
(byte*) main::toD0181_gfx
(byte) main::toD0181_return
(const byte) main::toD0181_return#0 toD0181_return = >(word)(const byte*) BOB_CHARSET/(byte) 4&(byte) $f
(byte*) main::toD0181_screen
(label) main::vicSelectGfxBank1
(label) main::vicSelectGfxBank1_@1
(byte*) main::vicSelectGfxBank1_gfx
(label) main::vicSelectGfxBank1_toDd001
(byte*) main::vicSelectGfxBank1_toDd001_gfx
(byte) main::vicSelectGfxBank1_toDd001_return
(const byte) main::vicSelectGfxBank1_toDd001_return#0 vicSelectGfxBank1_toDd001_return = (byte) 3^>(word)(const byte*) SCREEN/(byte) $40
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(label) memset::@1
(label) memset::@2
(label) memset::@return
(byte) memset::c
(const byte) memset::c#0 c = (byte) 0
(byte*) memset::dst
(byte*) memset::dst#1 dst zp[2]:5 22.0
(byte*) memset::dst#2 dst zp[2]:5 14.666666666666666
(byte*) memset::end
(const byte*) memset::end#0 end = (byte*)(const void*) memset::str#0+(const word) memset::num#0
(word) memset::num
(const word) memset::num#0 num = (word) $3e8
(void*) memset::return
(void*) memset::str
(const void*) memset::str#0 str = (void*)(const byte*) SCREEN
(void()) prepareBobs()
(byte~) prepareBobs::$5 reg byte a 2002.0
(label) prepareBobs::@1
(label) prepareBobs::@10
(label) prepareBobs::@11
(label) prepareBobs::@2
(label) prepareBobs::@3
(label) prepareBobs::@4
(label) prepareBobs::@5
(label) prepareBobs::@6
(label) prepareBobs::@7
(label) prepareBobs::@8
(label) prepareBobs::@9
(label) prepareBobs::@return
(byte*) prepareBobs::bob_glyph
(byte*) prepareBobs::bob_glyph#1 bob_glyph zp[2]:5 667.3333333333334
(byte*) prepareBobs::bob_glyph#2 bob_glyph zp[2]:5 429.0
(byte*) prepareBobs::bob_table
(byte*) prepareBobs::bob_table#0 bob_table zp[2]:10 202.0
(byte*) prepareBobs::bob_table#1 bob_table zp[2]:10 1001.0
(byte*) prepareBobs::bob_table#2 bob_table zp[2]:10 388.0
(byte) prepareBobs::bob_table_idx
(byte) prepareBobs::bob_table_idx#1 bob_table_idx zp[1]:3 40.4
(byte) prepareBobs::bob_table_idx#12 bob_table_idx zp[1]:3 20.3125
(byte) prepareBobs::bob_table_idx#6 bob_table_idx zp[1]:3 11.0
(byte) prepareBobs::cell
(byte) prepareBobs::cell#1 cell zp[1]:8 2002.0
(byte) prepareBobs::cell#2 cell zp[1]:8 333.6666666666667
(byte) prepareBobs::shift_x
(byte) prepareBobs::shift_x#1 shift_x zp[1]:4 202.0
(byte) prepareBobs::shift_x#2 shift_x zp[1]:4 17.823529411764707
(byte) prepareBobs::shift_y
(byte) prepareBobs::shift_y#1 shift_y zp[1]:2 22.0
(byte) prepareBobs::shift_y#2 shift_y zp[1]:2 1.5
(void()) renderBob((byte) renderBob::xpos , (byte) renderBob::ypos)
(word~) renderBob::$10 zp[2]:12 4.0
(word~) renderBob::$11 zp[2]:10 4.0
(word~) renderBob::$2 zp[2]:10 3.0
(byte*~) renderBob::$4 zp[2]:10 4.0
(byte~) renderBob::$6 reg byte a 4.0
(byte~) renderBob::$7 zp[1]:14 2.0
(byte~) renderBob::$8 reg byte a 4.0
(label) renderBob::@return
(byte) renderBob::bob_table_idx
(byte) renderBob::bob_table_idx#0 reg byte x 2.2222222222222228
(byte*) renderBob::screen
(byte*) renderBob::screen#0 screen zp[2]:10 1.5384615384615383
(byte) renderBob::x_char_offset
(byte) renderBob::x_char_offset#0 reg byte y 0.5714285714285714
(byte) renderBob::xpos
(byte) renderBob::xpos#0 xpos zp[1]:4 11.0
(byte) renderBob::xpos#1 xpos zp[1]:4 11.0
(byte) renderBob::xpos#2 xpos zp[1]:4 11.0
(byte) renderBob::xpos#3 xpos zp[1]:4 3.3636363636363633
(byte) renderBob::y_char_offset
(byte) renderBob::y_char_offset#0 reg byte a 2.0
(word) renderBob::y_offset
(word) renderBob::y_offset#0 y_offset zp[2]:10 4.0
(byte) renderBob::ypos
(byte) renderBob::ypos#0 reg byte x 22.0
(byte) renderBob::ypos#1 reg byte x 22.0
(byte) renderBob::ypos#2 reg byte x 22.0
(byte) renderBob::ypos#3 reg byte x 4.111111111111112
(void()) shiftProtoBobDown()
(label) shiftProtoBobDown::@1
(label) shiftProtoBobDown::@2
(label) shiftProtoBobDown::@3
(label) shiftProtoBobDown::@return
(byte) shiftProtoBobDown::i
(byte) shiftProtoBobDown::i#1 reg byte x 202.0
(byte) shiftProtoBobDown::i#2 reg byte x 161.6
(void()) shiftProtoBobRight()
(byte~) shiftProtoBobRight::$1 reg byte a 2002.0
(byte~) shiftProtoBobRight::$5 reg byte a 2002.0
(byte~) shiftProtoBobRight::$6 reg byte a 2002.0
(label) shiftProtoBobRight::@1
(label) shiftProtoBobRight::@2
(label) shiftProtoBobRight::@3
(label) shiftProtoBobRight::@4
(label) shiftProtoBobRight::@5
(label) shiftProtoBobRight::@6
(label) shiftProtoBobRight::@7
(label) shiftProtoBobRight::@return
(byte) shiftProtoBobRight::carry
(byte) shiftProtoBobRight::carry#1 carry zp[1]:9 111.22222222222223
(byte) shiftProtoBobRight::carry#10 reg byte y 2002.0
(byte) shiftProtoBobRight::carry#2 reg byte y 286.0
(byte) shiftProtoBobRight::i
(byte) shiftProtoBobRight::i#1 i zp[1]:8 1001.0
(byte) shiftProtoBobRight::i#2 i zp[1]:8 231.0
(byte) shiftProtoBobRight::j
(byte) shiftProtoBobRight::j#1 reg byte x 2002.0
(byte) shiftProtoBobRight::j#10 reg byte x 1001.0
(byte) shiftProtoBobRight::j#2 reg byte x 2002.0
(byte) shiftProtoBobRight::j#3 reg byte x 700.7
(byte) shiftProtoBobRight::new_carry

reg byte x [ renderBob::ypos#3 renderBob::ypos#1 renderBob::ypos#2 renderBob::ypos#0 ]
zp[1]:2 [ prepareBobs::shift_y#2 prepareBobs::shift_y#1 main::sin_x_idx#7 main::sin_x_idx#1 ]
zp[1]:3 [ prepareBobs::bob_table_idx#6 prepareBobs::bob_table_idx#12 prepareBobs::bob_table_idx#1 main::sin_y_idx#7 main::sin_y_idx#1 ]
zp[1]:4 [ prepareBobs::shift_x#2 prepareBobs::shift_x#1 renderBob::xpos#3 renderBob::xpos#1 renderBob::xpos#2 renderBob::xpos#0 ]
zp[2]:5 [ prepareBobs::bob_glyph#2 prepareBobs::bob_glyph#1 bobCharsetFindOrAddGlyph::bob_glyph#10 bobCharsetFindOrAddGlyph::bob_glyph#1 memset::dst#2 memset::dst#1 ]
reg byte x [ bobCharsetFindOrAddGlyph::i1#2 bobCharsetFindOrAddGlyph::i1#1 ]
zp[1]:7 [ bobCharsetFindOrAddGlyph::i#2 bobCharsetFindOrAddGlyph::i#1 ]
reg byte a [ bobCharsetFindOrAddGlyph::found#2 ]
zp[1]:8 [ shiftProtoBobRight::i#2 shiftProtoBobRight::i#1 prepareBobs::cell#2 prepareBobs::cell#1 ]
reg byte x [ shiftProtoBobRight::j#3 shiftProtoBobRight::j#10 shiftProtoBobRight::j#2 shiftProtoBobRight::j#1 ]
reg byte y [ shiftProtoBobRight::carry#2 shiftProtoBobRight::carry#10 ]
zp[1]:9 [ shiftProtoBobRight::carry#1 bobCharsetFindOrAddGlyph::glyph_id#11 bobCharsetFindOrAddGlyph::glyph_id#1 ]
reg byte x [ shiftProtoBobDown::i#2 shiftProtoBobDown::i#1 ]
reg byte y [ renderBob::x_char_offset#0 ]
reg byte a [ renderBob::y_char_offset#0 ]
zp[2]:10 [ renderBob::$2 renderBob::$11 renderBob::y_offset#0 renderBob::$4 renderBob::screen#0 prepareBobs::bob_table#2 prepareBobs::bob_table#1 prepareBobs::bob_table#0 ]
zp[2]:12 [ renderBob::$10 bobCharsetFindOrAddGlyph::glyph_cursor#11 bobCharsetFindOrAddGlyph::glyph_cursor#1 ]
reg byte a [ renderBob::$6 ]
zp[1]:14 [ renderBob::$7 bob_charset_next_id#23 bob_charset_next_id#14 bob_charset_next_id#16 bob_charset_next_id#30 bob_charset_next_id#21 bob_charset_next_id#8 ]
reg byte a [ renderBob::$8 ]
reg byte x [ renderBob::bob_table_idx#0 ]
reg byte a [ bobCharsetFindOrAddGlyph::return#1 ]
reg byte a [ prepareBobs::$5 ]
reg byte a [ shiftProtoBobRight::$1 ]
reg byte a [ shiftProtoBobRight::$5 ]
reg byte a [ shiftProtoBobRight::$6 ]
