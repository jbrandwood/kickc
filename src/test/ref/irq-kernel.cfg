
interrupt(KERNEL_KEYBOARD)(void()) irq()
irq: scope:[irq]  from
  [0] *((const nomodify byte*) BG_COLOR) ← (const nomodify byte) WHITE
  [1] *((const nomodify byte*) BG_COLOR) ← (const nomodify byte) BLACK
  [2] *((const nomodify byte*) IRQ_STATUS) ← (const nomodify byte) IRQ_RASTER
  to:irq::@return
irq::@return: scope:[irq]  from irq
  [3] return 
  to:@return

(void()) main()
main: scope:[main]  from
  asm { sei  }
  [5] *((const nomodify byte*) CIA1_INTERRUPT) ← (const nomodify byte) CIA_INTERRUPT_CLEAR
  [6] *((const nomodify byte*) VIC_CONTROL) ← *((const nomodify byte*) VIC_CONTROL) | (byte) $80
  [7] *((const nomodify byte*) RASTER) ← (byte) 0
  [8] *((const nomodify byte*) IRQ_ENABLE) ← (const nomodify byte) IRQ_RASTER
  [9] *((const nomodify void()**) KERNEL_IRQ) ← &interrupt(KERNEL_KEYBOARD)(void()) irq()
  asm { cli  }
  to:main::@return
main::@return: scope:[main]  from main
  [11] return 
  to:@return
