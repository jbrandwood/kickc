(label) @1
(label) @2
(label) @3
(label) @begin
(label) @end
(const nomodify byte) BLACK = (byte) 0
(const nomodify byte) BORDER_YPOS_BOTTOM = (byte) $fa
(const nomodify byte*) CANVAS1 = (byte*) 12288
(const nomodify byte*) CANVAS2 = (byte*) 14336
(const nomodify struct MOS6526_CIA*) CIA1 = (struct MOS6526_CIA*) 56320
(const nomodify struct MOS6526_CIA*) CIA2 = (struct MOS6526_CIA*) 56576
(const nomodify dword*) CIA2_TIMER_AB = (dword*) 56580
(const nomodify byte) CIA_INTERRUPT_CLEAR = (byte) $7f
(const nomodify byte) CIA_TIMER_CONTROL_B_COUNT_UNDERFLOW_A = (byte) $40
(const nomodify byte) CIA_TIMER_CONTROL_START = (byte) 1
(const nomodify byte*) COLS = (byte*) 55296
(const nomodify byte*) CONIO_CIA1_PORT_A = (byte*) 56320
(const nomodify byte*) CONIO_CIA1_PORT_B = (byte*) 56321
(const nomodify byte*) CONIO_SCREEN_COLORS = (byte*) 55296
(const nomodify byte*) CONIO_SCREEN_TEXT = (byte*) 1024
(const nomodify byte) CONIO_TEXTCOLOR_DEFAULT = (byte) $e
(const nomodify byte*) CONSOLE = (byte*) 1024
(const byte*) COSTAB = (const byte*) SINTAB+(byte) $40
(const byte*) DIGITS[]  = (byte*) "0123456789abcdef"z
(const nomodify byte) IRQ_RASTER = (byte) 1
(const nomodify void()**) KERNEL_IRQ = (void()**) 788
(byte) MOS6526_CIA::INTERRUPT
(byte) MOS6526_CIA::PORT_A
(byte) MOS6526_CIA::PORT_A_DDR
(byte) MOS6526_CIA::PORT_B
(byte) MOS6526_CIA::PORT_B_DDR
(byte) MOS6526_CIA::SERIAL_DATA
(word) MOS6526_CIA::TIMER_A
(byte) MOS6526_CIA::TIMER_A_CONTROL
(word) MOS6526_CIA::TIMER_B
(byte) MOS6526_CIA::TIMER_B_CONTROL
(byte) MOS6526_CIA::TOD_10THS
(byte) MOS6526_CIA::TOD_HOURS
(byte) MOS6526_CIA::TOD_MIN
(byte) MOS6526_CIA::TOD_SEC
(byte) MOS6569_VICII::BG_COLOR
(byte) MOS6569_VICII::BG_COLOR1
(byte) MOS6569_VICII::BG_COLOR2
(byte) MOS6569_VICII::BG_COLOR3
(byte) MOS6569_VICII::BORDER_COLOR
(byte) MOS6569_VICII::CONTROL1
(byte) MOS6569_VICII::CONTROL2
(byte) MOS6569_VICII::IRQ_ENABLE
(byte) MOS6569_VICII::IRQ_STATUS
(byte) MOS6569_VICII::LIGHTPEN_X
(byte) MOS6569_VICII::LIGHTPEN_Y
(byte) MOS6569_VICII::MEMORY
(byte) MOS6569_VICII::RASTER
(byte) MOS6569_VICII::SPRITE0_COLOR
(byte) MOS6569_VICII::SPRITE0_X
(byte) MOS6569_VICII::SPRITE0_Y
(byte) MOS6569_VICII::SPRITE1_COLOR
(byte) MOS6569_VICII::SPRITE1_X
(byte) MOS6569_VICII::SPRITE1_Y
(byte) MOS6569_VICII::SPRITE2_COLOR
(byte) MOS6569_VICII::SPRITE2_X
(byte) MOS6569_VICII::SPRITE2_Y
(byte) MOS6569_VICII::SPRITE3_COLOR
(byte) MOS6569_VICII::SPRITE3_X
(byte) MOS6569_VICII::SPRITE3_Y
(byte) MOS6569_VICII::SPRITE4_COLOR
(byte) MOS6569_VICII::SPRITE4_X
(byte) MOS6569_VICII::SPRITE4_Y
(byte) MOS6569_VICII::SPRITE5_COLOR
(byte) MOS6569_VICII::SPRITE5_X
(byte) MOS6569_VICII::SPRITE5_Y
(byte) MOS6569_VICII::SPRITE6_COLOR
(byte) MOS6569_VICII::SPRITE6_X
(byte) MOS6569_VICII::SPRITE6_Y
(byte) MOS6569_VICII::SPRITE7_COLOR
(byte) MOS6569_VICII::SPRITE7_X
(byte) MOS6569_VICII::SPRITE7_Y
(byte) MOS6569_VICII::SPRITES_BG_COLLISION
(byte) MOS6569_VICII::SPRITES_COLLISION
(byte) MOS6569_VICII::SPRITES_ENABLE
(byte) MOS6569_VICII::SPRITES_EXPAND_X
(byte) MOS6569_VICII::SPRITES_EXPAND_Y
(byte) MOS6569_VICII::SPRITES_MC
(byte) MOS6569_VICII::SPRITES_MCOLOR1
(byte) MOS6569_VICII::SPRITES_MCOLOR2
(byte) MOS6569_VICII::SPRITES_PRIORITY
(byte) MOS6569_VICII::SPRITES_XMSB
(byte) MOS6581_SID::CH1_ATTACK_DECAY
(byte) MOS6581_SID::CH1_CONTROL
(word) MOS6581_SID::CH1_FREQ
(word) MOS6581_SID::CH1_PULSE_WIDTH
(byte) MOS6581_SID::CH1_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH2_ATTACK_DECAY
(byte) MOS6581_SID::CH2_CONTROL
(word) MOS6581_SID::CH2_FREQ
(word) MOS6581_SID::CH2_PULSE_WIDTH
(byte) MOS6581_SID::CH2_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH3_ATTACK_DECAY
(byte) MOS6581_SID::CH3_CONTROL
(byte) MOS6581_SID::CH3_ENV
(word) MOS6581_SID::CH3_FREQ
(byte) MOS6581_SID::CH3_OSC
(word) MOS6581_SID::CH3_PULSE_WIDTH
(byte) MOS6581_SID::CH3_SUSTAIN_RELEASE
(byte) MOS6581_SID::FILTER_CUTOFF_HIGH
(byte) MOS6581_SID::FILTER_CUTOFF_LOW
(byte) MOS6581_SID::FILTER_SETUP
(byte) MOS6581_SID::POT_X
(byte) MOS6581_SID::POT_Y
(byte) MOS6581_SID::VOLUME_FILTER_MODE
(const byte) OFFSET_STRUCT_MOS6526_CIA_INTERRUPT = (byte) $d
(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL = (byte) $e
(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL = (byte) $f
(const byte) OFFSET_STRUCT_MOS6569_VICII_BG_COLOR = (byte) $21
(const byte) OFFSET_STRUCT_MOS6569_VICII_BORDER_COLOR = (byte) $20
(const byte) OFFSET_STRUCT_MOS6569_VICII_CONTROL1 = (byte) $11
(const byte) OFFSET_STRUCT_MOS6569_VICII_IRQ_ENABLE = (byte) $1a
(const byte) OFFSET_STRUCT_MOS6569_VICII_IRQ_STATUS = (byte) $19
(const byte) OFFSET_STRUCT_MOS6569_VICII_MEMORY = (byte) $18
(const byte) OFFSET_STRUCT_MOS6569_VICII_RASTER = (byte) $12
(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = (byte) 1
(const nomodify byte*) PETSCII = (byte*) 4096
(const byte) RADIX::BINARY = (number) 2
(const byte) RADIX::DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL = (number) 8
(const byte*) RADIX_HEXADECIMAL_VALUES_CHAR[]  = { (byte) $10 }
(const nomodify byte*) SCREEN = (byte*) 11264
(const byte*) SINTAB[(number) $140]  = kickasm {{ .fill $200, 63 + 63*sin(i*2*PI/$100)
 }}
(const byte) SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = (byte) $c
(const nomodify struct MOS6569_VICII*) VICII = (struct MOS6569_VICII*) 53248
(const nomodify byte) WHITE = (byte) 1
(byte()) abs_u8((byte) abs_u8::u)
(byte~) abs_u8::$0 reg byte x 20002.0
(label) abs_u8::@1
(label) abs_u8::@return
(byte) abs_u8::return
(byte) abs_u8::return#0 reg byte a 2002.0
(byte) abs_u8::return#1 reg byte a 2002.0
(byte) abs_u8::return#2 reg byte a 20002.0
(byte) abs_u8::return#4 reg byte a 5501.0
(byte) abs_u8::u
(byte) abs_u8::u#0 reg byte a 2002.0
(byte) abs_u8::u#1 reg byte a 2002.0
(byte) abs_u8::u#2 reg byte a 10668.333333333332
(volatile byte) canvas_show_flag loadstore zp[1]:27 553.0
(volatile byte) canvas_show_memory loadstore zp[1]:26 2.8611111111111107
(dword()) clock()
(label) clock::@return
(dword) clock::return
(void()) clock_start()
(label) clock_start::@return
(byte*) conio_cursor_color loadstore zp[2]:23 1.2185792404372131E12
(byte*) conio_cursor_text loadstore zp[2]:21 1.205405410810865E12
(byte) conio_cursor_x loadstore zp[1]:19 1.3714286285719427E11
(byte) conio_cursor_y loadstore zp[1]:20 1.6597938195876804E12
(byte) conio_textcolor loadstore zp[1]:25 3.7827715355844574E11
(void()) cputc((byte) cputc::c)
(label) cputc::@1
(label) cputc::@2
(label) cputc::@3
(label) cputc::@return
(byte) cputc::c
(byte) cputc::c#0 reg byte a 2.00000000002E11
(byte) cputc::c#2 reg byte a 2.0000002E7
(byte) cputc::c#3 reg byte a 1.050005000002E12
(void()) cputln()
(byte*~) cputln::$1 zp[2]:21 2.0000000000002E13
(byte*~) cputln::$2 zp[2]:23 2.0000000000002E13
(label) cputln::@return
(word) cputln::ln_offset
(word) cputln::ln_offset#0 ln_offset zp[2]:43 1.0000000000001E13
(void()) cputs((to_nomodify byte*) cputs::s)
(label) cputs::@1
(label) cputs::@2
(label) cputs::@return
(byte) cputs::c
(byte) cputs::c#1 reg byte a 1.00000000001E11
(to_nomodify byte*) cputs::s
(to_nomodify byte*) cputs::s#0 s zp[2]:39 5.00000000005E10
(to_nomodify byte*) cputs::s#21 s zp[2]:39 1.50050000002E11
(to_nomodify byte*) cputs::s#22 s zp[2]:39 1.00000001E8
(void()) cscroll()
(byte*~) cscroll::$7 zp[2]:21 2.00000000000002E14
(byte*~) cscroll::$8 zp[2]:23 2.00000000000002E14
(label) cscroll::@1
(label) cscroll::@2
(label) cscroll::@3
(label) cscroll::@4
(label) cscroll::@5
(label) cscroll::@return
(void()) gotoxy((byte) gotoxy::x , (byte) gotoxy::y)
(word~) gotoxy::$10 zp[2]:23 2000002.0
(word~) gotoxy::$4 zp[2]:23 2000002.0
(byte*~) gotoxy::$6 zp[2]:21 2000002.0
(byte*~) gotoxy::$7 zp[2]:23 2000002.0
(word~) gotoxy::$8 zp[2]:23 1500001.5
(word~) gotoxy::$9 zp[2]:43 2000002.0
(label) gotoxy::@1
(label) gotoxy::@2
(label) gotoxy::@3
(label) gotoxy::@4
(label) gotoxy::@return
(word) gotoxy::offset
(word) gotoxy::offset#0 offset zp[2]:23 1000001.0
(byte) gotoxy::x
(byte) gotoxy::x#10 reg byte x 366667.3333333334
(byte) gotoxy::x#5 reg byte x 100001.0
(byte) gotoxy::x#7 reg byte x 100001.0
(byte) gotoxy::x#9 reg byte x 428571.85714285716
(byte) gotoxy::y
(byte) gotoxy::y#10 reg byte a 333333.6666666667
(byte) gotoxy::y#5 reg byte a 200002.0
(byte) gotoxy::y#7 reg byte a 200002.0
(byte) gotoxy::y#8 reg byte a 733334.6666666667
interrupt(KERNEL_MIN)(void()) irq_bottom_1()
(label) irq_bottom_1::@1
(label) irq_bottom_1::@return
(label) irq_bottom_1::toD0181
(byte*) irq_bottom_1::toD0181_gfx
(byte) irq_bottom_1::toD0181_return
(const byte) irq_bottom_1::toD0181_return#0 toD0181_return = >(word)(const nomodify byte*) CONSOLE&(word) $3fff*(byte) 4|>(word)(const nomodify byte*) PETSCII/(byte) 4&(byte) $f
(byte*) irq_bottom_1::toD0181_screen
interrupt(KERNEL_KEYBOARD)(void()) irq_bottom_2()
(byte~) irq_bottom_2::$0 reg byte a 4.0
(label) irq_bottom_2::@1
(label) irq_bottom_2::@2
(label) irq_bottom_2::@3
(label) irq_bottom_2::@return
(byte()) kbhit()
(label) kbhit::@return
(byte) kbhit::return
(byte) kbhit::return#0 reg byte a 4.333333333333333
(byte) kbhit::return#2 reg byte a 4.0
(void()) line((byte*) line::canvas , (byte) line::x1 , (byte) line::y1 , (byte) line::x2 , (byte) line::y2)
(label) line::@1
(label) line::@10
(label) line::@11
(label) line::@12
(label) line::@13
(label) line::@14
(label) line::@15
(label) line::@16
(label) line::@17
(label) line::@18
(label) line::@19
(label) line::@2
(label) line::@20
(label) line::@21
(label) line::@22
(label) line::@23
(label) line::@24
(label) line::@25
(label) line::@26
(label) line::@27
(label) line::@28
(label) line::@29
(label) line::@3
(label) line::@30
(label) line::@31
(label) line::@32
(label) line::@33
(label) line::@34
(label) line::@35
(label) line::@36
(label) line::@37
(label) line::@38
(label) line::@39
(label) line::@4
(label) line::@40
(label) line::@41
(label) line::@42
(label) line::@43
(label) line::@44
(label) line::@45
(label) line::@46
(label) line::@47
(label) line::@48
(label) line::@49
(label) line::@5
(label) line::@50
(label) line::@51
(label) line::@52
(label) line::@53
(label) line::@54
(label) line::@55
(label) line::@6
(label) line::@7
(label) line::@8
(label) line::@9
(label) line::@return
(byte*) line::canvas
(byte*) line::canvas#0 canvas zp[2]:6 1578.9453125
(byte) line::dx
(byte) line::dx#0 dx zp[1]:33 2576.330508474576
(byte) line::dy
(byte) line::dy#0 dy zp[1]:34 2666.728070175439
(byte) line::e
(byte) line::e#0 e zp[1]:11 166.83333333333334
(byte) line::e#1 e zp[1]:11 80000.8
(byte) line::e#10 e zp[1]:11 12500.125
(byte) line::e#4 e zp[1]:11 100501.5
(byte) line::e#8 e zp[1]:11 150001.5
(byte) line::e1
(byte) line::e1#0 e1 zp[1]:18 2002.0
(byte) line::e1#1 e1 zp[1]:18 133334.66666666666
(byte) line::e1#10 e1 zp[1]:18 12040.16
(byte) line::e1#14 e1 zp[1]:18 150001.5
(byte) line::e1#2 e1 zp[1]:18 200002.0
(label) line::plot1
(byte~) line::plot1_$0 reg byte a 2002.0
(byte~) line::plot1_$2 reg byte a 2002.0
(byte~) line::plot1_$3 reg byte a 2002.0
(byte*) line::plot1_canvas
(byte*) line::plot1_column
(byte*) line::plot1_column#0 plot1_column zp[2]:37 1501.5
(byte) line::plot1_x
(byte) line::plot1_y
(byte) line::plot1_y#0 plot1_y zp[1]:16 184.39473684210526
(label) line::plot2
(byte~) line::plot2_$0 reg byte a 200002.0
(byte~) line::plot2_$2 reg byte a 200002.0
(byte~) line::plot2_$3 reg byte a 200002.0
(byte*) line::plot2_canvas
(byte*) line::plot2_column
(byte*) line::plot2_column#0 plot2_column zp[2]:39 150001.5
(byte) line::plot2_x
(byte) line::plot2_x#0 plot2_x zp[1]:15 20000.2
(byte) line::plot2_y
(label) line::plot3
(byte~) line::plot3_$0 reg byte a 200002.0
(byte~) line::plot3_$2 reg byte a 200002.0
(byte~) line::plot3_$3 reg byte a 200002.0
(byte*) line::plot3_canvas
(byte*) line::plot3_column
(byte*) line::plot3_column#0 plot3_column zp[2]:41 150001.5
(byte) line::plot3_x
(byte) line::plot3_y
(label) line::plot4
(byte~) line::plot4_$0 reg byte a 2002.0
(byte~) line::plot4_$2 reg byte a 2002.0
(byte~) line::plot4_$3 reg byte a 2002.0
(byte*) line::plot4_canvas
(byte*) line::plot4_column
(byte*) line::plot4_column#0 plot4_column zp[2]:43 1501.5
(byte) line::plot4_x
(byte) line::plot4_y
(byte) line::print_col
(byte) line::print_col#10 print_col_1 zp[1]:14 35294.470588235294
(byte) line::print_col#14 print_col zp[1]:12 29166.95833333333
(byte) line::print_col#16 print_col_1 zp[1]:14 30769.53846153846
(byte) line::print_col#2 print_col zp[1]:12 200002.0
(byte) line::print_col#20 print_col zp[1]:12 150001.5
(byte) line::print_col#29 print_col zp[1]:12 66667.33333333333
(byte) line::print_col#3 print_col_1 zp[1]:14 200002.0
(byte) line::print_row
(byte) line::print_row#10 print_row zp[1]:13 22727.5
(byte) line::print_row#11 print_row_1 zp[1]:17 26666.933333333334
(byte) line::print_row#22 print_row_1 zp[1]:17 23077.153846153844
(byte) line::print_row#26 print_row zp[1]:13 150001.5
(byte) line::print_row#3 print_row zp[1]:13 150001.5
(byte) line::print_row#35 print_row zp[1]:13 50000.5
(byte) line::print_row#5 print_row_1 zp[1]:17 150001.5
(const byte*) line::s[(byte) 4]  = (byte*) "dx:"
(const byte*) line::s1[(byte) 5]  = (byte*) " dy:"
(const byte*) line::s2[(byte) 5]  = (byte*) " sx:"
(const byte*) line::s3[(byte) 5]  = (byte*) " sy:"
(const byte*) line::s4[(byte) 2]  = (byte*) " "
(const byte*) line::s6[(byte) 2]  = (byte*) "*"
(byte) line::sx
(byte) line::sx#0 sx zp[1]:35 1845.5
(byte) line::sy
(byte) line::sy#0 sy zp[1]:36 1905.698113207547
(byte) line::x
(byte) line::x#10 x zp[1]:15 20875.249999999996
(byte) line::x#12 x zp[1]:15 30200.5
(byte) line::x#18 x zp[1]:15 50167.33333333333
(byte) line::x#22 x zp[1]:15 50167.333333333336
(byte) line::x1
(byte) line::x1#0 x1 zp[1]:15 116.52459016393443
(byte) line::x2
(byte) line::x2#0 x2 zp[1]:30 1418.111111111111
(byte) line::y
(byte) line::y#1 y zp[1]:16 1001.0
(byte) line::y#11 y zp[1]:16 15025.175
(byte) line::y#12 y zp[1]:16 22259.51851851852
(byte) line::y#15 y zp[1]:16 50334.16666666667
(byte) line::y#3 y zp[1]:16 100001.0
(byte) line::y#7 y zp[1]:16 201003.0
(byte) line::y1
(byte) line::y1#0 y1 zp[1]:16 205.25
(byte) line::y2
(byte) line::y2#0 y2 zp[1]:10 216.05263157894734
(byte) line::y2#1 y2 zp[1]:10 2002.0
(byte) line::y2#17 y2 zp[1]:10 1457.185714285714
(void()) main()
(label) main::@1
(label) main::@10
(label) main::@11
(label) main::@12
(label) main::@13
(label) main::@14
(label) main::@15
(label) main::@16
(label) main::@17
(label) main::@18
(label) main::@19
(label) main::@2
(label) main::@20
(label) main::@21
(label) main::@22
(label) main::@23
(label) main::@24
(label) main::@25
(label) main::@26
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::@8
(label) main::@9
(byte) main::c
(byte) main::c#1 reg byte x 1001.0
(byte) main::c#2 reg byte x 776.0
(byte) main::c#4 reg byte x 202.0
(byte*) main::canvas
(word) main::canvas#1 canvas zp[2]:6 4.208333333333333
(byte*) main::canvas#10 canvas zp[2]:6 16.833333333333332
(byte*) main::canvas#25 canvas zp[2]:6 202.0
(byte*) main::cols
(byte*) main::cols#1 cols zp[2]:2 67.33333333333333
(byte*) main::cols#5 cols zp[2]:2 133.66666666666669
(const byte) main::p0_idx = (byte) $88
(byte) main::p1_idx
(const byte) main::p1_idx#0 p1_idx = (const byte) main::p0_idx+(byte) $f
(const byte*) main::s2[(byte) 4]  = (byte*) ")-("
(byte*) main::screen
(byte*) main::screen#1 screen zp[2]:4 101.0
(byte*) main::screen#5 screen zp[2]:4 120.3
(label) main::toD0181
(byte*) main::toD0181_gfx
(byte) main::toD0181_return
(const byte) main::toD0181_return#0 toD0181_return = >(word)(const nomodify byte*) SCREEN&(word) $3fff*(byte) 4|>(word)(const nomodify byte*) CANVAS1/(byte) 4&(byte) $f
(byte*) main::toD0181_screen
(label) main::toD0182
(byte*) main::toD0182_gfx
(byte) main::toD0182_return
(const byte) main::toD0182_return#0 toD0182_return = >(word)(const nomodify byte*) SCREEN&(word) $3fff*(byte) 4|>(word)(const nomodify byte*) CANVAS2/(byte) 4&(byte) $f
(byte*) main::toD0182_screen
(byte) main::x
(byte) main::x#1 reg byte y 2002.0
(byte) main::x#2 reg byte y 1001.0
(byte) main::x0
(byte) main::x0#0 x0 zp[1]:28 15.947368421052632
(byte) main::x1
(byte) main::x1#0 x1 zp[1]:30 12.120000000000001
(byte) main::y
(byte) main::y#1 y zp[1]:19 202.0
(byte) main::y#2 y zp[1]:19 36.72727272727273
(byte) main::y0
(byte) main::y0#0 y0 zp[1]:29 13.772727272727273
(byte) main::y1
(byte) main::y1#0 y1 zp[1]:31 10.821428571428571
(void*()) memcpy((void*) memcpy::destination , (void*) memcpy::source , (word) memcpy::num)
(label) memcpy::@1
(label) memcpy::@2
(label) memcpy::@return
(void*) memcpy::destination
(void*) memcpy::destination#2 destination zp[2]:43
(byte*) memcpy::dst
(byte*) memcpy::dst#1 dst zp[2]:43 1.0E19
(byte*) memcpy::dst#2 dst zp[2]:43 1.0000333333333334E19
(byte*) memcpy::dst#4 dst zp[2]:43 2.000000000000002E15
(word) memcpy::num
(void*) memcpy::return
(void*) memcpy::source
(void*) memcpy::source#2 source zp[2]:41
(byte*) memcpy::src
(byte*) memcpy::src#1 src zp[2]:41 2.0E19
(byte*) memcpy::src#2 src zp[2]:41 1.000025E19
(byte*) memcpy::src#4 src zp[2]:41 1.000000000000001E15
(byte*) memcpy::src_end
(byte*) memcpy::src_end#0 src_end zp[2]:37 1.250125E18
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(label) memset::@1
(label) memset::@2
(label) memset::@3
(label) memset::@return
(byte) memset::c
(byte) memset::c#1 reg byte x 2.00000000000002E14
(byte) memset::c#7 reg byte x 1.25125E16
(byte*) memset::dst
(byte*) memset::dst#1 dst zp[2]:43 2.0E17
(byte*) memset::dst#2 dst zp[2]:43 1.33666666666666656E17
(byte*) memset::dst#4 dst zp[2]:43 2.000000000000002E15
(byte*) memset::end
(byte*) memset::end#0 end zp[2]:41 1.6833333333333332E16
(word) memset::num
(word) memset::num#5 num zp[2]:41 1.000000000000001E15
(void*) memset::return
(void*) memset::str
(void*) memset::str#4 str zp[2]:43 202.0
(void*) memset::str#6 str zp[2]:43 33.666666666666664
(const byte*) plot_bit[]  = { (byte) $80, (byte) $40, (byte) $20, (byte) $10, (byte) 8, (byte) 4, (byte) 2, (byte) 1 }
(const word*) plot_column[]  = { (word) 0, (word)(number) 1*(number) $80, (word)(number) 2*(number) $80, (word)(number) 3*(number) $80, (word)(number) 4*(number) $80, (word)(number) 5*(number) $80, (word)(number) 6*(number) $80, (word)(number) 7*(number) $80, (word)(number) 8*(number) $80, (word)(number) 9*(number) $80, (word)(number) $a*(number) $80, (word)(number) $b*(number) $80, (word)(number) $c*(number) $80, (word)(number) $d*(number) $80, (word)(number) $e*(number) $80, (word)(number) $f*(number) $80 }
(struct printf_buffer_number) printf_buffer loadstore mem[12] = {}
(const byte*) printf_buffer_number::digits[(number) $b]  = { fill( $b, 0) }
(byte) printf_buffer_number::sign
(byte) printf_format_number::justify_left
(byte) printf_format_number::min_length
(byte) printf_format_number::radix
(byte) printf_format_number::sign_always
(byte) printf_format_number::upper_case
(byte) printf_format_number::zero_padding
(byte) printf_format_string::justify_left
(byte) printf_format_string::min_length
(void()) printf_number_buffer((byte) printf_number_buffer::buffer_sign , (byte*) printf_number_buffer::buffer_digits , (byte) printf_number_buffer::format_min_length , (byte) printf_number_buffer::format_justify_left , (byte) printf_number_buffer::format_sign_always , (byte) printf_number_buffer::format_zero_padding , (byte) printf_number_buffer::format_upper_case , (byte) printf_number_buffer::format_radix)
(word~) printf_number_buffer::$19 zp[2]:41 1.0000001E7
(label) printf_number_buffer::@1
(label) printf_number_buffer::@10
(label) printf_number_buffer::@11
(label) printf_number_buffer::@2
(label) printf_number_buffer::@3
(label) printf_number_buffer::@4
(label) printf_number_buffer::@5
(label) printf_number_buffer::@6
(label) printf_number_buffer::@7
(label) printf_number_buffer::@8
(label) printf_number_buffer::@9
(label) printf_number_buffer::@return
(struct printf_buffer_number) printf_number_buffer::buffer
(byte*) printf_number_buffer::buffer_digits
(const byte*) printf_number_buffer::buffer_digits#0 buffer_digits = (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
(byte) printf_number_buffer::buffer_sign
(byte) printf_number_buffer::buffer_sign#0 reg byte x 2066666.933333333
(struct printf_format_number) printf_number_buffer::format
(byte) printf_number_buffer::format_justify_left
(byte) printf_number_buffer::format_min_length
(const byte) printf_number_buffer::format_min_length#0 format_min_length = (byte) 2
(byte) printf_number_buffer::format_radix
(byte) printf_number_buffer::format_sign_always
(byte) printf_number_buffer::format_upper_case
(byte) printf_number_buffer::format_zero_padding
(signed byte) printf_number_buffer::len
(signed byte) printf_number_buffer::len#0 reg byte a 1.50000015E7
(signed byte) printf_number_buffer::len#1 reg byte a 2.0000002E7
(signed byte) printf_number_buffer::len#2 reg byte a 3.0000003E7
(signed byte) printf_number_buffer::padding
(signed byte) printf_number_buffer::padding#1 padding zp[1]:8 1.0000001E7
(signed byte) printf_number_buffer::padding#10 padding zp[1]:8 4000000.4
(void()) printf_padding((byte) printf_padding::pad , (byte) printf_padding::length)
(label) printf_padding::@1
(label) printf_padding::@2
(label) printf_padding::@3
(label) printf_padding::@return
(byte) printf_padding::i
(byte) printf_padding::i#1 i zp[1]:9 2.00000000002E11
(byte) printf_padding::i#2 i zp[1]:9 7.500000000075E10
(byte) printf_padding::length
(byte) printf_padding::length#1 length zp[1]:8 1.4287142857428572E10
(byte) printf_padding::pad
(void()) printf_uchar((byte) printf_uchar::uvalue , (byte) printf_uchar::format_min_length , (byte) printf_uchar::format_justify_left , (byte) printf_uchar::format_sign_always , (byte) printf_uchar::format_zero_padding , (byte) printf_uchar::format_upper_case , (byte) printf_uchar::format_radix)
(label) printf_uchar::@1
(label) printf_uchar::@2
(label) printf_uchar::@return
(struct printf_format_number) printf_uchar::format
(byte) printf_uchar::format_justify_left
(byte) printf_uchar::format_min_length
(byte) printf_uchar::format_radix
(byte) printf_uchar::format_sign_always
(byte) printf_uchar::format_upper_case
(byte) printf_uchar::format_zero_padding
(byte) printf_uchar::uvalue
(byte) printf_uchar::uvalue#0 reg byte x 202.0
(byte) printf_uchar::uvalue#1 reg byte x 202.0
(byte) printf_uchar::uvalue#10 reg byte x 2002.0
(byte) printf_uchar::uvalue#11 reg byte x 200002.0
(byte) printf_uchar::uvalue#12 reg byte x 200002.0
(byte) printf_uchar::uvalue#13 reg byte x 200002.0
(byte) printf_uchar::uvalue#14 reg byte x 2002.0
(byte) printf_uchar::uvalue#15 reg byte x 2002.0
(byte) printf_uchar::uvalue#16 reg byte x 200002.0
(byte) printf_uchar::uvalue#17 reg byte x 200002.0
(byte) printf_uchar::uvalue#18 reg byte x 200002.0
(byte) printf_uchar::uvalue#19 reg byte x 804710.0
(byte) printf_uchar::uvalue#2 reg byte x 202.0
(byte) printf_uchar::uvalue#3 reg byte x 202.0
(byte) printf_uchar::uvalue#4 reg byte x 2002.0
(byte) printf_uchar::uvalue#5 reg byte x 2002.0
(byte) printf_uchar::uvalue#6 reg byte x 2002.0
(byte) printf_uchar::uvalue#7 reg byte x 2002.0
(byte) printf_uchar::uvalue#8 reg byte x 2002.0
(byte) printf_uchar::uvalue#9 reg byte x 2002.0
(const byte*) s[(byte) 2]  = (byte*) "("
(const byte*) s1[(byte) 2]  = (byte*) ","
(const byte*) s4[(byte) 2]  = (byte*) ")"
(void()) setup_irq()
(label) setup_irq::@return
(byte()) sgn_u8((byte) sgn_u8::u)
(byte~) sgn_u8::$0 reg byte a 20002.0
(label) sgn_u8::@1
(label) sgn_u8::@return
(byte) sgn_u8::return
(byte) sgn_u8::return#0 reg byte a 2002.0
(byte) sgn_u8::return#1 reg byte a 2002.0
(byte) sgn_u8::return#4 reg byte a 500.5
(byte) sgn_u8::u
(byte) sgn_u8::u#0 reg byte a 2002.0
(byte) sgn_u8::u#1 reg byte a 2002.0
(byte) sgn_u8::u#2 reg byte a 12003.0
(word()) strlen((byte*) strlen::str)
(label) strlen::@1
(label) strlen::@2
(label) strlen::@return
(word) strlen::len
(word) strlen::len#1 len zp[2]:41 1.00000000001E11
(word) strlen::len#2 len zp[2]:41 5.000250000075E10
(word) strlen::return
(word) strlen::return#2 return zp[2]:41 2.0000002E7
(byte*) strlen::str
(byte*) strlen::str#0 str zp[2]:39 2.00000000002E11
(byte*) strlen::str#2 str zp[2]:39 1.00000000001E11
(byte()) textcolor((byte) textcolor::color)
(label) textcolor::@return
(byte) textcolor::color
(byte) textcolor::old
(byte) textcolor::return
(label) toD0181
(byte*) toD0181_gfx
(byte) toD0181_return
(const byte) toD0181_return#0 toD0181_return = >(word)(const nomodify byte*) SCREEN&(word) $3fff*(byte) 4|>(word)(const nomodify byte*) CANVAS2/(byte) 4&(byte) $f
(byte*) toD0181_screen
(void()) uctoa((byte) uctoa::value , (byte*) uctoa::buffer , (byte) uctoa::radix)
(label) uctoa::@1
(label) uctoa::@2
(label) uctoa::@3
(label) uctoa::@4
(label) uctoa::@5
(label) uctoa::@6
(label) uctoa::@7
(label) uctoa::@return
(byte*) uctoa::buffer
(byte*) uctoa::buffer#11 buffer zp[2]:41 3.3350000004999995E9
(byte*) uctoa::buffer#14 buffer zp[2]:41 1.50000000015E10
(byte*) uctoa::buffer#3 buffer zp[2]:41 2.0000002E7
(byte*) uctoa::buffer#4 buffer zp[2]:41 2.0000000002E10
(byte) uctoa::digit
(byte) uctoa::digit#1 digit zp[1]:8 2.0000000002E10
(byte) uctoa::digit#2 digit zp[1]:8 3.076923077230769E9
(byte) uctoa::digit_value
(byte) uctoa::digit_value#0 digit_value zp[1]:32 6.0000000006E9
(byte*) uctoa::digit_values
(byte) uctoa::max_digits
(byte) uctoa::radix
(byte) uctoa::started
(byte) uctoa::started#2 started zp[1]:9 6.0000000006E9
(byte) uctoa::started#4 started zp[1]:9 1.0000000001E10
(byte) uctoa::value
(byte) uctoa::value#0 reg byte x 1.0000000001E10
(byte) uctoa::value#1 reg byte x 5500001.0
(byte) uctoa::value#2 reg byte x 6.670000000999999E9
(byte) uctoa::value#6 reg byte x 1.50000000015E10
(byte()) uctoa_append((byte*) uctoa_append::buffer , (byte) uctoa_append::value , (byte) uctoa_append::sub)
(label) uctoa_append::@1
(label) uctoa_append::@2
(label) uctoa_append::@3
(label) uctoa_append::@return
(byte*) uctoa_append::buffer
(byte*) uctoa_append::buffer#0 buffer zp[2]:41 1.375000000025E10
(byte) uctoa_append::digit
(byte) uctoa_append::digit#1 reg byte y 1.000000000000001E15
(byte) uctoa_append::digit#2 reg byte y 1.0000500000000015E15
(byte) uctoa_append::return
(byte) uctoa_append::return#0 reg byte x 2.0000000002E10
(byte) uctoa_append::sub
(byte) uctoa_append::sub#0 sub zp[1]:32 3.333350000000005E14
(byte) uctoa_append::value
(byte) uctoa_append::value#0 reg byte x 3.6666666667333336E10
(byte) uctoa_append::value#1 reg byte x 2.000000000000002E15
(byte) uctoa_append::value#2 reg byte x 5.0001833333333425E14

zp[2]:2 [ main::cols#5 main::cols#1 ]
zp[2]:4 [ main::screen#5 main::screen#1 ]
zp[2]:6 [ main::canvas#10 main::canvas#25 main::canvas#1 line::canvas#0 ]
reg byte y [ main::x#2 main::x#1 ]
reg byte x [ main::c#2 main::c#4 main::c#1 ]
reg byte a [ cputc::c#3 cputc::c#0 cputc::c#2 ]
reg byte x [ memset::c#7 memset::c#1 ]
reg byte x [ printf_uchar::uvalue#19 printf_uchar::uvalue#4 printf_uchar::uvalue#5 printf_uchar::uvalue#6 printf_uchar::uvalue#7 printf_uchar::uvalue#8 printf_uchar::uvalue#9 printf_uchar::uvalue#10 printf_uchar::uvalue#11 printf_uchar::uvalue#12 printf_uchar::uvalue#13 printf_uchar::uvalue#14 printf_uchar::uvalue#15 printf_uchar::uvalue#16 printf_uchar::uvalue#17 printf_uchar::uvalue#18 printf_uchar::uvalue#0 printf_uchar::uvalue#1 printf_uchar::uvalue#2 printf_uchar::uvalue#3 ]
reg byte a [ printf_number_buffer::len#2 printf_number_buffer::len#0 printf_number_buffer::len#1 ]
zp[1]:8 [ uctoa::digit#2 uctoa::digit#1 printf_number_buffer::padding#10 printf_number_buffer::padding#1 printf_padding::length#1 ]
reg byte x [ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 ]
zp[1]:9 [ uctoa::started#2 uctoa::started#4 printf_padding::i#2 printf_padding::i#1 ]
reg byte x [ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ]
reg byte y [ uctoa_append::digit#2 uctoa_append::digit#1 ]
reg byte a [ gotoxy::y#10 gotoxy::y#8 gotoxy::y#5 gotoxy::y#7 ]
reg byte x [ gotoxy::x#9 gotoxy::x#10 gotoxy::x#5 gotoxy::x#7 ]
zp[1]:10 [ line::y2#17 line::y2#0 line::y2#1 ]
zp[1]:11 [ line::e#4 line::e#8 line::e#0 line::e#1 line::e#10 ]
zp[1]:12 [ line::print_col#14 line::print_col#20 line::print_col#29 line::print_col#2 ]
zp[1]:13 [ line::print_row#10 line::print_row#26 line::print_row#35 line::print_row#3 ]
zp[1]:14 [ line::print_col#10 line::print_col#16 line::print_col#3 ]
zp[1]:15 [ line::x#10 line::x#12 line::x#18 line::x#22 line::x1#0 line::plot2_x#0 ]
zp[1]:16 [ line::y#12 line::y#15 line::y#7 line::y#11 line::plot1_y#0 line::y1#0 line::y#1 line::y#3 ]
zp[1]:17 [ line::print_row#11 line::print_row#22 line::print_row#5 ]
zp[1]:18 [ line::e1#10 line::e1#14 line::e1#0 line::e1#2 line::e1#1 ]
reg byte a [ sgn_u8::u#2 sgn_u8::u#0 sgn_u8::u#1 ]
reg byte a [ sgn_u8::return#4 ]
reg byte a [ abs_u8::return#4 abs_u8::return#2 abs_u8::u#2 abs_u8::u#0 abs_u8::u#1 ]
zp[1]:19 [ conio_cursor_x main::y#2 main::y#1 ]
zp[1]:20 [ conio_cursor_y ]
zp[2]:21 [ conio_cursor_text cputln::$1 cscroll::$7 gotoxy::$6 ]
zp[2]:23 [ conio_cursor_color cputln::$2 cscroll::$8 gotoxy::$7 gotoxy::$4 gotoxy::offset#0 gotoxy::$8 gotoxy::$10 ]
zp[1]:25 [ conio_textcolor ]
zp[1]:26 [ canvas_show_memory ]
zp[1]:27 [ canvas_show_flag ]
zp[1]:28 [ main::x0#0 ]
zp[1]:29 [ main::y0#0 ]
zp[1]:30 [ main::x1#0 line::x2#0 ]
zp[1]:31 [ main::y1#0 ]
reg byte a [ cputs::c#1 ]
reg byte x [ printf_number_buffer::buffer_sign#0 ]
zp[1]:32 [ uctoa::digit_value#0 uctoa_append::sub#0 ]
reg byte x [ uctoa_append::return#0 ]
reg byte a [ abs_u8::return#0 ]
zp[1]:33 [ line::dx#0 ]
reg byte a [ abs_u8::return#1 ]
zp[1]:34 [ line::dy#0 ]
reg byte a [ sgn_u8::return#0 ]
zp[1]:35 [ line::sx#0 ]
reg byte a [ sgn_u8::return#1 ]
zp[1]:36 [ line::sy#0 ]
reg byte a [ line::plot1_$0 ]
reg byte a [ line::plot1_$3 ]
zp[2]:37 [ line::plot1_column#0 memcpy::src_end#0 ]
reg byte a [ line::plot1_$2 ]
reg byte a [ line::plot2_$0 ]
reg byte a [ line::plot2_$3 ]
zp[2]:39 [ line::plot2_column#0 strlen::str#2 strlen::str#0 cputs::s#21 cputs::s#22 cputs::s#0 ]
reg byte a [ line::plot2_$2 ]
reg byte a [ line::plot3_$0 ]
reg byte a [ line::plot3_$3 ]
zp[2]:41 [ line::plot3_column#0 uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 uctoa::buffer#3 uctoa_append::buffer#0 strlen::len#2 strlen::len#1 strlen::return#2 printf_number_buffer::$19 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 memset::num#5 memset::end#0 ]
reg byte a [ line::plot3_$2 ]
reg byte a [ line::plot4_$0 ]
reg byte a [ line::plot4_$3 ]
zp[2]:43 [ line::plot4_column#0 gotoxy::$9 cputln::ln_offset#0 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 memset::str#6 memset::str#4 memset::dst#2 memset::dst#4 memset::dst#1 ]
reg byte a [ line::plot4_$2 ]
reg byte a [ sgn_u8::$0 ]
reg byte x [ abs_u8::$0 ]
reg byte a [ kbhit::return#2 ]
reg byte a [ irq_bottom_2::$0 ]
reg byte a [ kbhit::return#0 ]
mem[12] [ printf_buffer ]
