
(void()) main()
main: scope:[main]  from
  [0] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@1
  [1] (byte) main::i#2 ← phi( main/(byte) 0 main::@1/(byte) main::i#1 )
  [2] (byte~) main::$1 ← (byte) main::i#2 << (byte) 1
  [3] *((const struct Point*) points + (byte~) main::$1) ← memcpy(*(&(const struct Point) $0), struct Point, (const byte) SIZEOF_STRUCT_POINT)
  [4] (byte) main::i#1 ← ++ (byte) main::i#2
  [5] if((byte) main::i#1!=(byte) 3) goto main::@1
  to:main::@2
main::@2: scope:[main]  from main::@1
  [6] *((const nomodify byte*) SCREEN) ← *((byte*)(const struct Point*) points+(byte) 2*(const byte) SIZEOF_STRUCT_POINT)
  [7] *((const nomodify byte*) SCREEN+(byte) 1) ← *((byte*)(const struct Point*) points+(const byte) OFFSET_STRUCT_POINT_Y+(byte) 2*(const byte) SIZEOF_STRUCT_POINT)
  to:main::@return
main::@return: scope:[main]  from main::@2
  [8] return 
  to:@return
