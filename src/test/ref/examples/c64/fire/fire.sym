__constant const char BLACK = 0
__constant char *BUFFER = (char *) 16384
__constant char *CHARSET = (char *) 12288
__constant char * const COLS = (char *) 55296
__constant char * const D018 = (char *) 53272
__constant char OFFSET_STRUCT_MOS6569_VICII_BG_COLOR = $21
__constant char OFFSET_STRUCT_MOS6569_VICII_BORDER_COLOR = $20
__constant char OFFSET_STRUCT_MOS6581_SID_CH3_CONTROL = $12
__constant char OFFSET_STRUCT_MOS6581_SID_CH3_FREQ = $e
__constant char OFFSET_STRUCT_MOS6581_SID_CH3_OSC = $1b
__constant char *SCREEN1 = (char *) 14336
__constant char *SCREEN2 = (char *) 15360
__constant struct MOS6581_SID * const SID = (struct MOS6581_SID *) 54272
__constant const char SID_CONTROL_NOISE = $80
__constant struct MOS6569_VICII * const VICII = (struct MOS6569_VICII *) 53248
__constant const char YELLOW = 7
void fillscreen(char *screen , char fill)
char fillscreen::fill
char fillscreen::fill#5 // reg byte x 16.833333333333332
unsigned int fillscreen::i
unsigned int fillscreen::i#1 // i zp[2]:10 151.5
unsigned int fillscreen::i#2 // i zp[2]:10 67.33333333333333
char *fillscreen::screen
char *fillscreen::screen#4 // screen zp[2]:2 67.33333333333333
char *fillscreen::screen#5 // screen zp[2]:2 157.0
char *fillscreen::screen#6 // screen zp[2]:2 11.0
void fire(char *screenbase)
char fire::$13 // reg byte a 20002.0
char fire::$14 // reg byte a 20002.0
char fire::$4 // reg byte a 20002.0
char fire::$5 // reg byte a 20002.0
char fire::$6 // reg byte a 20002.0
char *fire::buffer
char *fire::buffer#10 // buffer_1 zp[2]:4 6250.625
char *fire::buffer#2 // buffer zp[2]:2 20002.0
char *fire::buffer#3 // buffer_1 zp[2]:4 20002.0
char *fire::buffer#4 // buffer zp[2]:2 7500.750000000001
char fire::c
char fire::c#0 // reg byte a 20002.0
char fire::c#1 // reg byte a 20002.0
char fire::c#2 // reg byte a 30003.0
char *fire::screen
char *fire::screen#0 // screen zp[2]:7 13.466666666666667
char *fire::screen#1 // screen zp[2]:7 202.0
char *fire::screen#10 // screen zp[2]:7 4300.571428571429
char *fire::screen#12 // screen_1 zp[2]:10 202.0
char *fire::screen#2 // screen_1 zp[2]:10 10001.0
char *fire::screen#3 // screen zp[2]:7 10001.0
char *fire::screen#4 // screen_1 zp[2]:10 2736.7272727272725
char *fire::screenbase
char fire::sid_rnd1_return
char fire::sid_rnd1_return#0 // reg byte a 20002.0
void main()
char *main::toD0181_gfx
char main::toD0181_return
__constant char main::toD0181_return#0 = byte1 (unsigned int)SCREEN1&$3fff*4|byte1 (unsigned int)CHARSET/4&$f // toD0181_return
char *main::toD0181_screen
char *main::toD0182_gfx
char main::toD0182_return
__constant char main::toD0182_return#0 = byte1 (unsigned int)SCREEN2&$3fff*4|byte1 (unsigned int)CHARSET/4&$f // toD0182_return
char *main::toD0182_screen
void makecharset(char *charset)
char makecharset::$11 // reg byte a 20002.0
char makecharset::$12 // reg byte a 20002.0
char makecharset::$13 // zp[1]:9 20002.0
unsigned int makecharset::$15 // zp[2]:7 2002.0
unsigned int makecharset::$16 // zp[2]:7 2002.0
unsigned int makecharset::$17 // zp[2]:7 2002.0
char *makecharset::$18 // zp[2]:7 2002.0
char makecharset::b
char makecharset::b#1 // reg byte y 20002.0
char makecharset::b#2 // reg byte y 2583.6666666666665
char makecharset::b#6 // reg byte y 15001.5
char makecharset::bc
char makecharset::bc#1 // reg byte x 20002.0
char makecharset::bc#2 // reg byte x 4000.4
char makecharset::bc#3 // reg byte x 2750.5
char makecharset::bc#6 // reg byte x 1001.0
char makecharset::bc#7 // reg byte x 15001.5
__constant const char makecharset::bittab[8] = { 1, 2, 4, 8, $10, $20, $40, $80 }
char makecharset::c
char makecharset::c#1 // c zp[1]:13 202.0
char makecharset::c#2 // c zp[1]:13 490.6666666666667
char *makecharset::charset
char *makecharset::font
char *makecharset::font#1 // font zp[2]:2 202.0
char *makecharset::font#2 // font zp[2]:2 134.66666666666666
char *makecharset::font1
char *makecharset::font1#1 // font1 zp[2]:10 202.0
char *makecharset::font1#2 // font1 zp[2]:10 134.66666666666666
char makecharset::i
char makecharset::i#1 // i zp[1]:12 2002.0
char makecharset::i#2 // i zp[1]:12 778.0555555555555
char makecharset::ii
char makecharset::ii#1 // ii zp[1]:6 20002.0
char makecharset::ii#2 // ii zp[1]:6 4000.4

reg byte x [ fillscreen::fill#5 ]
zp[1]:13 [ makecharset::c#2 makecharset::c#1 ]
zp[1]:12 [ makecharset::i#2 makecharset::i#1 ]
reg byte x [ makecharset::bc#6 makecharset::bc#3 makecharset::bc#7 makecharset::bc#1 makecharset::bc#2 ]
zp[1]:6 [ makecharset::ii#2 makecharset::ii#1 ]
reg byte y [ makecharset::b#2 makecharset::b#6 makecharset::b#1 ]
zp[2]:2 [ fire::buffer#4 fire::buffer#2 makecharset::font#2 makecharset::font#1 fillscreen::screen#5 fillscreen::screen#6 fillscreen::screen#4 ]
zp[2]:10 [ fire::screen#4 fire::screen#12 fire::screen#2 makecharset::font1#2 makecharset::font1#1 fillscreen::i#2 fillscreen::i#1 ]
zp[2]:4 [ fire::buffer#10 fire::buffer#3 ]
reg byte a [ fire::c#2 fire::c#0 fire::c#1 ]
zp[2]:7 [ makecharset::$17 makecharset::$15 makecharset::$16 makecharset::$18 fire::screen#0 fire::screen#10 fire::screen#1 fire::screen#3 ]
reg byte a [ makecharset::$11 ]
reg byte a [ makecharset::$12 ]
zp[1]:9 [ makecharset::$13 ]
reg byte a [ fire::sid_rnd1_return#0 ]
reg byte a [ fire::$13 ]
reg byte a [ fire::$14 ]
reg byte a [ fire::$4 ]
reg byte a [ fire::$5 ]
reg byte a [ fire::$6 ]
