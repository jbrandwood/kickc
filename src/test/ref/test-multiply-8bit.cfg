
(void()) main()
main: scope:[main]  from
  [0] *((const byte*) BG_COLOR) ← (byte) 5
  [1] call print_cls 
  to:main::@1
main::@1: scope:[main]  from main
  [2] phi()
  [3] call mulf_init 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [4] phi()
  [5] call mulf_init_asm 
  to:main::@3
main::@3: scope:[main]  from main::@2
  [6] phi()
  [7] call mulf_tables_cmp 
  to:main::@4
main::@4: scope:[main]  from main::@3
  [8] phi()
  [9] call mul8u_compare 
  to:main::@5
main::@5: scope:[main]  from main::@4
  [10] phi()
  [11] call mul8s_compare 
  to:main::@return
main::@return: scope:[main]  from main::@5
  [12] return 
  to:@return

(void()) mul8s_compare()
mul8s_compare: scope:[mul8s_compare]  from main::@5
  [13] phi()
  to:mul8s_compare::@1
mul8s_compare::@1: scope:[mul8s_compare]  from mul8s_compare mul8s_compare::@5
  [14] (signed byte) mul8s_compare::a#10 ← phi( mul8s_compare/(signed byte) -$80 mul8s_compare::@5/(signed byte) mul8s_compare::a#1 )
  [15] if((signed byte) mul8s_compare::a#10!=(signed byte) -$80) goto mul8s_compare::@3
  to:mul8s_compare::@2
mul8s_compare::@2: scope:[mul8s_compare]  from mul8s_compare::@1
  [16] (byte*) print_char_cursor#192 ← (byte*) print_line_cursor#0
  [17] call print_str 
  to:mul8s_compare::@11
mul8s_compare::@11: scope:[mul8s_compare]  from mul8s_compare::@2
  [18] phi()
  [19] call print_ln 
  to:mul8s_compare::@return
mul8s_compare::@return: scope:[mul8s_compare]  from mul8s_compare::@10 mul8s_compare::@11
  [20] return 
  to:@return
mul8s_compare::@3: scope:[mul8s_compare]  from mul8s_compare::@1 mul8s_compare::@8
  [21] (signed byte) mul8s_compare::b#10 ← phi( mul8s_compare::@1/(signed byte) -$80 mul8s_compare::@8/(signed byte) mul8s_compare::b#1 )
  [22] if((signed byte) mul8s_compare::b#10!=(signed byte) -$80) goto mul8s_compare::@4
  to:mul8s_compare::@5
mul8s_compare::@5: scope:[mul8s_compare]  from mul8s_compare::@3
  [23] (signed byte) mul8s_compare::a#1 ← ++ (signed byte) mul8s_compare::a#10
  to:mul8s_compare::@1
mul8s_compare::@4: scope:[mul8s_compare]  from mul8s_compare::@3
  [24] (signed byte) muls8s::a#0 ← (signed byte) mul8s_compare::a#10
  [25] (signed byte) muls8s::b#0 ← (signed byte) mul8s_compare::b#10
  [26] call muls8s 
  [27] (signed word) muls8s::return#2 ← (signed word) muls8s::return#0
  to:mul8s_compare::@12
mul8s_compare::@12: scope:[mul8s_compare]  from mul8s_compare::@4
  [28] (signed word) mul8s_compare::ms#0 ← (signed word) muls8s::return#2
  [29] (signed byte) mulf8s::a#0 ← (signed byte) mul8s_compare::a#10
  [30] (signed byte) mulf8s::b#0 ← (signed byte) mul8s_compare::b#10
  [31] call mulf8s 
  [32] (signed word) mulf8s::return#2 ← (signed word) mulf8s::return#0
  to:mul8s_compare::@13
mul8s_compare::@13: scope:[mul8s_compare]  from mul8s_compare::@12
  [33] (signed word) mul8s_compare::mf#0 ← (signed word) mulf8s::return#2
  [34] (signed byte) mul8s::a#0 ← (signed byte) mul8s_compare::a#10
  [35] (signed byte) mul8s::b#0 ← (signed byte) mul8s_compare::b#10
  [36] call mul8s 
  to:mul8s_compare::@14
mul8s_compare::@14: scope:[mul8s_compare]  from mul8s_compare::@13
  [37] (signed word) mul8s_compare::mn#0 ← (signed word)(word) mul8s::m#4
  [38] if((signed word) mul8s_compare::ms#0==(signed word) mul8s_compare::mf#0) goto mul8s_compare::@6
  to:mul8s_compare::@9
mul8s_compare::@9: scope:[mul8s_compare]  from mul8s_compare::@14
  [39] phi()
  to:mul8s_compare::@6
mul8s_compare::@6: scope:[mul8s_compare]  from mul8s_compare::@14 mul8s_compare::@9
  [40] (byte) mul8s_compare::ok#4 ← phi( mul8s_compare::@9/(byte) 0 mul8s_compare::@14/(byte) 1 )
  [41] if((signed word) mul8s_compare::ms#0==(signed word) mul8s_compare::mn#0) goto mul8s_compare::@15
  to:mul8s_compare::@7
mul8s_compare::@15: scope:[mul8s_compare]  from mul8s_compare::@6
  [42] phi()
  to:mul8s_compare::@7
mul8s_compare::@7: scope:[mul8s_compare]  from mul8s_compare::@15 mul8s_compare::@6
  [43] (byte) mul8s_compare::ok#3 ← phi( mul8s_compare::@6/(byte) 0 mul8s_compare::@15/(byte) mul8s_compare::ok#4 )
  [44] if((byte) mul8s_compare::ok#3!=(byte) 0) goto mul8s_compare::@8
  to:mul8s_compare::@10
mul8s_compare::@10: scope:[mul8s_compare]  from mul8s_compare::@7
  [45] *((const byte*) BG_COLOR) ← (byte) 2
  [46] (signed byte) mul8s_error::a#0 ← (signed byte) mul8s_compare::a#10
  [47] (signed byte) mul8s_error::b#0 ← (signed byte) mul8s_compare::b#10
  [48] (signed word) mul8s_error::ms#0 ← (signed word) mul8s_compare::ms#0
  [49] (signed word) mul8s_error::mn#0 ← (signed word) mul8s_compare::mn#0
  [50] (signed word) mul8s_error::mf#0 ← (signed word) mul8s_compare::mf#0
  [51] call mul8s_error 
  to:mul8s_compare::@return
mul8s_compare::@8: scope:[mul8s_compare]  from mul8s_compare::@7
  [52] (signed byte) mul8s_compare::b#1 ← ++ (signed byte) mul8s_compare::b#10
  to:mul8s_compare::@3

(void()) mul8s_error((signed byte) mul8s_error::a , (signed byte) mul8s_error::b , (signed word) mul8s_error::ms , (signed word) mul8s_error::mn , (signed word) mul8s_error::mf)
mul8s_error: scope:[mul8s_error]  from mul8s_compare::@10
  [53] (byte*) print_char_cursor#193 ← (byte*) print_line_cursor#0
  [54] call print_str 
  to:mul8s_error::@1
mul8s_error::@1: scope:[mul8s_error]  from mul8s_error
  [55] (signed byte) print_schar::b#1 ← (signed byte) mul8s_error::a#0
  [56] call print_schar 
  to:mul8s_error::@2
mul8s_error::@2: scope:[mul8s_error]  from mul8s_error::@1
  [57] phi()
  [58] call print_str 
  to:mul8s_error::@3
mul8s_error::@3: scope:[mul8s_error]  from mul8s_error::@2
  [59] (signed byte) print_schar::b#2 ← (signed byte) mul8s_error::b#0
  [60] call print_schar 
  to:mul8s_error::@4
mul8s_error::@4: scope:[mul8s_error]  from mul8s_error::@3
  [61] phi()
  [62] call print_str 
  to:mul8s_error::@5
mul8s_error::@5: scope:[mul8s_error]  from mul8s_error::@4
  [63] (signed word) print_sint::w#1 ← (signed word) mul8s_error::ms#0
  [64] call print_sint 
  to:mul8s_error::@6
mul8s_error::@6: scope:[mul8s_error]  from mul8s_error::@5
  [65] phi()
  [66] call print_str 
  to:mul8s_error::@7
mul8s_error::@7: scope:[mul8s_error]  from mul8s_error::@6
  [67] (signed word) print_sint::w#2 ← (signed word) mul8s_error::mn#0
  [68] call print_sint 
  to:mul8s_error::@8
mul8s_error::@8: scope:[mul8s_error]  from mul8s_error::@7
  [69] phi()
  [70] call print_str 
  to:mul8s_error::@9
mul8s_error::@9: scope:[mul8s_error]  from mul8s_error::@8
  [71] (signed word) print_sint::w#3 ← (signed word) mul8s_error::mf#0
  [72] call print_sint 
  to:mul8s_error::@10
mul8s_error::@10: scope:[mul8s_error]  from mul8s_error::@9
  [73] phi()
  [74] call print_ln 
  to:mul8s_error::@return
mul8s_error::@return: scope:[mul8s_error]  from mul8s_error::@10
  [75] return 
  to:@return

(void()) print_ln()
print_ln: scope:[print_ln]  from mul8s_compare::@11 mul8s_error::@10 mul8u_compare::@13 mul8u_error::@10 mulf_tables_cmp::@6
  [76] (byte*) print_char_cursor#138 ← phi( mul8s_compare::@11/(byte*) print_char_cursor#1 mul8s_error::@10/(byte*) print_char_cursor#18 mul8u_compare::@13/(byte*) print_char_cursor#1 mul8u_error::@10/(byte*) print_char_cursor#18 mulf_tables_cmp::@6/(byte*) print_char_cursor#1 )
  [76] (byte*) print_line_cursor#47 ← phi( mul8s_compare::@11/(byte*) print_line_cursor#0 mul8s_error::@10/(byte*) print_line_cursor#0 mul8u_compare::@13/(byte*) print_line_cursor#10 mul8u_error::@10/(byte*) print_line_cursor#10 mulf_tables_cmp::@6/(const byte*) print_screen#0 )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  [77] (byte*) print_line_cursor#24 ← phi( print_ln/(byte*) print_line_cursor#47 print_ln::@1/(byte*) print_line_cursor#0 )
  [78] (byte*) print_line_cursor#0 ← (byte*) print_line_cursor#24 + (byte) $28
  [79] if((byte*) print_line_cursor#0<(byte*) print_char_cursor#138) goto print_ln::@1
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@1
  [80] return 
  to:@return

(void()) print_sint((signed word) print_sint::w)
print_sint: scope:[print_sint]  from mul8s_error::@5 mul8s_error::@7 mul8s_error::@9
  [81] (signed word) print_sint::w#4 ← phi( mul8s_error::@5/(signed word) print_sint::w#1 mul8s_error::@7/(signed word) print_sint::w#2 mul8s_error::@9/(signed word) print_sint::w#3 )
  [82] if((signed word) print_sint::w#4<(signed byte) 0) goto print_sint::@1
  to:print_sint::@3
print_sint::@3: scope:[print_sint]  from print_sint
  [83] phi()
  [84] call print_char 
  to:print_sint::@2
print_sint::@2: scope:[print_sint]  from print_sint::@3 print_sint::@4
  [85] (signed word) print_sint::w#6 ← phi( print_sint::@4/(signed word) print_sint::w#0 print_sint::@3/(signed word) print_sint::w#4 )
  [86] (word) print_uint::w#0 ← (word)(signed word) print_sint::w#6
  [87] call print_uint 
  to:print_sint::@return
print_sint::@return: scope:[print_sint]  from print_sint::@2
  [88] return 
  to:@return
print_sint::@1: scope:[print_sint]  from print_sint
  [89] phi()
  [90] call print_char 
  to:print_sint::@4
print_sint::@4: scope:[print_sint]  from print_sint::@1
  [91] (signed word) print_sint::w#0 ← - (signed word) print_sint::w#4
  to:print_sint::@2

(void()) print_char((byte) print_char::ch)
print_char: scope:[print_char]  from print_schar::@1 print_schar::@3 print_sint::@1 print_sint::@3 print_str::@2 print_uchar print_uchar::@1
  [92] (byte*) print_char_cursor#87 ← phi( print_schar::@1/(byte*) print_char_cursor#1 print_schar::@3/(byte*) print_char_cursor#1 print_sint::@1/(byte*) print_char_cursor#1 print_sint::@3/(byte*) print_char_cursor#1 print_str::@2/(byte*) print_char_cursor#1 print_uchar/(byte*) print_char_cursor#146 print_uchar::@1/(byte*) print_char_cursor#18 )
  [92] (byte) print_char::ch#7 ← phi( print_schar::@1/(byte) '-' print_schar::@3/(byte) ' ' print_sint::@1/(byte) '-' print_sint::@3/(byte) ' ' print_str::@2/(byte) print_char::ch#0 print_uchar/(byte) print_char::ch#5 print_uchar::@1/(byte) print_char::ch#6 )
  [93] *((byte*) print_char_cursor#87) ← (byte) print_char::ch#7
  [94] (byte*) print_char_cursor#18 ← ++ (byte*) print_char_cursor#87
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  [95] return 
  to:@return

(void()) print_uint((word) print_uint::w)
print_uint: scope:[print_uint]  from mul8u_error::@5 mul8u_error::@7 mul8u_error::@9 mulf_tables_cmp::@10 mulf_tables_cmp::@8 print_sint::@2
  [96] (byte*) print_char_cursor#145 ← phi( mul8u_error::@5/(byte*) print_char_cursor#1 mul8u_error::@7/(byte*) print_char_cursor#1 mul8u_error::@9/(byte*) print_char_cursor#1 mulf_tables_cmp::@10/(byte*) print_char_cursor#1 mulf_tables_cmp::@8/(byte*) print_char_cursor#1 print_sint::@2/(byte*) print_char_cursor#18 )
  [96] (word) print_uint::w#6 ← phi( mul8u_error::@5/(word) print_uint::w#3 mul8u_error::@7/(word) print_uint::w#4 mul8u_error::@9/(word) print_uint::w#5 mulf_tables_cmp::@10/(word) print_uint::w#2 mulf_tables_cmp::@8/(word) print_uint::w#1 print_sint::@2/(word) print_uint::w#0 )
  [97] (byte) print_uchar::b#1 ← > (word) print_uint::w#6
  [98] call print_uchar 
  to:print_uint::@1
print_uint::@1: scope:[print_uint]  from print_uint
  [99] (byte) print_uchar::b#2 ← < (word) print_uint::w#6
  [100] call print_uchar 
  to:print_uint::@return
print_uint::@return: scope:[print_uint]  from print_uint::@1
  [101] return 
  to:@return

(void()) print_uchar((byte) print_uchar::b)
print_uchar: scope:[print_uchar]  from mul8u_error::@1 mul8u_error::@3 print_schar::@2 print_uint print_uint::@1
  [102] (byte*) print_char_cursor#146 ← phi( mul8u_error::@1/(byte*) print_char_cursor#1 mul8u_error::@3/(byte*) print_char_cursor#1 print_schar::@2/(byte*) print_char_cursor#18 print_uint/(byte*) print_char_cursor#145 print_uint::@1/(byte*) print_char_cursor#18 )
  [102] (byte) print_uchar::b#5 ← phi( mul8u_error::@1/(byte) print_uchar::b#3 mul8u_error::@3/(byte) print_uchar::b#4 print_schar::@2/(byte) print_uchar::b#0 print_uint/(byte) print_uchar::b#1 print_uint::@1/(byte) print_uchar::b#2 )
  [103] (byte~) print_uchar::$0 ← (byte) print_uchar::b#5 >> (byte) 4
  [104] (byte) print_char::ch#5 ← *((const to_nomodify byte*) print_hextab + (byte~) print_uchar::$0)
  [105] call print_char 
  to:print_uchar::@1
print_uchar::@1: scope:[print_uchar]  from print_uchar
  [106] (byte~) print_uchar::$2 ← (byte) print_uchar::b#5 & (byte) $f
  [107] (byte) print_char::ch#6 ← *((const to_nomodify byte*) print_hextab + (byte~) print_uchar::$2)
  [108] call print_char 
  to:print_uchar::@return
print_uchar::@return: scope:[print_uchar]  from print_uchar::@1
  [109] return 
  to:@return

(void()) print_str((byte*) print_str::str)
print_str: scope:[print_str]  from mul8s_compare::@2 mul8s_error mul8s_error::@2 mul8s_error::@4 mul8s_error::@6 mul8s_error::@8 mul8u_compare::@9 mul8u_error mul8u_error::@2 mul8u_error::@4 mul8u_error::@6 mul8u_error::@8 mulf_tables_cmp::@3 mulf_tables_cmp::@5 mulf_tables_cmp::@9
  [110] (byte*) print_char_cursor#158 ← phi( mul8s_compare::@2/(byte*) print_char_cursor#192 mul8s_error/(byte*) print_char_cursor#193 mul8s_error::@2/(byte*) print_char_cursor#18 mul8s_error::@4/(byte*) print_char_cursor#18 mul8s_error::@6/(byte*) print_char_cursor#18 mul8s_error::@8/(byte*) print_char_cursor#18 mul8u_compare::@9/(byte*) print_char_cursor#101 mul8u_error/(byte*) print_char_cursor#101 mul8u_error::@2/(byte*) print_char_cursor#18 mul8u_error::@4/(byte*) print_char_cursor#18 mul8u_error::@6/(byte*) print_char_cursor#18 mul8u_error::@8/(byte*) print_char_cursor#18 mulf_tables_cmp::@3/(const byte*) print_screen#0 mulf_tables_cmp::@5/(const byte*) print_screen#0 mulf_tables_cmp::@9/(byte*) print_char_cursor#18 )
  [110] (byte*) print_str::str#19 ← phi( mul8s_compare::@2/(const byte*) mul8s_compare::str mul8s_error/(const byte*) mul8s_error::str mul8s_error::@2/(const byte*) str1 mul8s_error::@4/(const byte*) str2 mul8s_error::@6/(const byte*) str3 mul8s_error::@8/(const byte*) str4 mul8u_compare::@9/(const byte*) mul8u_compare::str mul8u_error/(const byte*) mul8u_error::str mul8u_error::@2/(const byte*) str1 mul8u_error::@4/(const byte*) str2 mul8u_error::@6/(const byte*) str3 mul8u_error::@8/(const byte*) str4 mulf_tables_cmp::@3/(const byte*) mulf_tables_cmp::str mulf_tables_cmp::@5/(const byte*) mulf_tables_cmp::str1 mulf_tables_cmp::@9/(const byte*) mulf_tables_cmp::str2 )
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@3
  [111] (byte*) print_char_cursor#1 ← phi( print_str/(byte*) print_char_cursor#158 print_str::@3/(byte*) print_char_cursor#18 )
  [111] (byte*) print_str::str#16 ← phi( print_str/(byte*) print_str::str#19 print_str::@3/(byte*) print_str::str#0 )
  [112] if((byte) 0!=*((byte*) print_str::str#16)) goto print_str::@2
  to:print_str::@return
print_str::@return: scope:[print_str]  from print_str::@1
  [113] return 
  to:@return
print_str::@2: scope:[print_str]  from print_str::@1
  [114] (byte) print_char::ch#0 ← *((byte*) print_str::str#16)
  [115] call print_char 
  to:print_str::@3
print_str::@3: scope:[print_str]  from print_str::@2
  [116] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#16
  to:print_str::@1

(void()) print_schar((signed byte) print_schar::b)
print_schar: scope:[print_schar]  from mul8s_error::@1 mul8s_error::@3
  [117] (signed byte) print_schar::b#3 ← phi( mul8s_error::@1/(signed byte) print_schar::b#1 mul8s_error::@3/(signed byte) print_schar::b#2 )
  [118] if((signed byte) print_schar::b#3<(signed byte) 0) goto print_schar::@1
  to:print_schar::@3
print_schar::@3: scope:[print_schar]  from print_schar
  [119] phi()
  [120] call print_char 
  to:print_schar::@2
print_schar::@2: scope:[print_schar]  from print_schar::@3 print_schar::@4
  [121] (signed byte) print_schar::b#5 ← phi( print_schar::@4/(signed byte) print_schar::b#0 print_schar::@3/(signed byte) print_schar::b#3 )
  [122] (byte) print_uchar::b#0 ← (byte)(signed byte) print_schar::b#5
  [123] call print_uchar 
  to:print_schar::@return
print_schar::@return: scope:[print_schar]  from print_schar::@2
  [124] return 
  to:@return
print_schar::@1: scope:[print_schar]  from print_schar
  [125] phi()
  [126] call print_char 
  to:print_schar::@4
print_schar::@4: scope:[print_schar]  from print_schar::@1
  [127] (signed byte) print_schar::b#0 ← - (signed byte) print_schar::b#3
  to:print_schar::@2

(signed word()) mul8s((signed byte) mul8s::a , (signed byte) mul8s::b)
mul8s: scope:[mul8s]  from mul8s_compare::@13
  [128] (byte) mul8u::a#1 ← (byte)(signed byte) mul8s::a#0
  [129] (byte) mul8u::b#0 ← (byte)(signed byte) mul8s::b#0
  [130] call mul8u 
  [131] (word) mul8u::return#2 ← (word) mul8u::res#2
  to:mul8s::@5
mul8s::@5: scope:[mul8s]  from mul8s
  [132] (word) mul8s::m#0 ← (word) mul8u::return#2
  [133] if((signed byte) mul8s::a#0>=(signed byte) 0) goto mul8s::@1
  to:mul8s::@3
mul8s::@3: scope:[mul8s]  from mul8s::@5
  [134] (byte~) mul8s::$6 ← > (word) mul8s::m#0
  [135] (byte~) mul8s::$11 ← (byte~) mul8s::$6 - (byte)(signed byte) mul8s::b#0
  [136] (word) mul8s::m#1 ← (word) mul8s::m#0 hi= (byte~) mul8s::$11
  to:mul8s::@1
mul8s::@1: scope:[mul8s]  from mul8s::@3 mul8s::@5
  [137] (word) mul8s::m#5 ← phi( mul8s::@3/(word) mul8s::m#1 mul8s::@5/(word) mul8s::m#0 )
  [138] if((signed byte) mul8s::b#0>=(signed byte) 0) goto mul8s::@2
  to:mul8s::@4
mul8s::@4: scope:[mul8s]  from mul8s::@1
  [139] (byte~) mul8s::$9 ← > (word) mul8s::m#5
  [140] (byte~) mul8s::$12 ← (byte~) mul8s::$9 - (byte)(signed byte) mul8s::a#0
  [141] (word) mul8s::m#2 ← (word) mul8s::m#5 hi= (byte~) mul8s::$12
  to:mul8s::@2
mul8s::@2: scope:[mul8s]  from mul8s::@1 mul8s::@4
  [142] (word) mul8s::m#4 ← phi( mul8s::@1/(word) mul8s::m#5 mul8s::@4/(word) mul8s::m#2 )
  to:mul8s::@return
mul8s::@return: scope:[mul8s]  from mul8s::@2
  [143] return 
  to:@return

(word()) mul8u((byte) mul8u::a , (byte) mul8u::b)
mul8u: scope:[mul8u]  from mul8s mul8u_compare::@11
  [144] (byte) mul8u::a#6 ← phi( mul8s/(byte) mul8u::a#1 mul8u_compare::@11/(byte) mul8u::a#2 )
  [144] (byte) mul8u::b#2 ← phi( mul8s/(byte) mul8u::b#0 mul8u_compare::@11/(byte) mul8u::b#1 )
  [145] (word) mul8u::mb#0 ← (word)(byte) mul8u::b#2
  to:mul8u::@1
mul8u::@1: scope:[mul8u]  from mul8u mul8u::@3
  [146] (word) mul8u::mb#2 ← phi( mul8u/(word) mul8u::mb#0 mul8u::@3/(word) mul8u::mb#1 )
  [146] (word) mul8u::res#2 ← phi( mul8u/(word) 0 mul8u::@3/(word) mul8u::res#6 )
  [146] (byte) mul8u::a#3 ← phi( mul8u/(byte) mul8u::a#6 mul8u::@3/(byte) mul8u::a#0 )
  [147] if((byte) mul8u::a#3!=(byte) 0) goto mul8u::@2
  to:mul8u::@return
mul8u::@return: scope:[mul8u]  from mul8u::@1
  [148] return 
  to:@return
mul8u::@2: scope:[mul8u]  from mul8u::@1
  [149] (byte~) mul8u::$1 ← (byte) mul8u::a#3 & (byte) 1
  [150] if((byte~) mul8u::$1==(byte) 0) goto mul8u::@3
  to:mul8u::@4
mul8u::@4: scope:[mul8u]  from mul8u::@2
  [151] (word) mul8u::res#1 ← (word) mul8u::res#2 + (word) mul8u::mb#2
  to:mul8u::@3
mul8u::@3: scope:[mul8u]  from mul8u::@2 mul8u::@4
  [152] (word) mul8u::res#6 ← phi( mul8u::@2/(word) mul8u::res#2 mul8u::@4/(word) mul8u::res#1 )
  [153] (byte) mul8u::a#0 ← (byte) mul8u::a#3 >> (byte) 1
  [154] (word) mul8u::mb#1 ← (word) mul8u::mb#2 << (byte) 1
  to:mul8u::@1

(signed word()) mulf8s((signed byte) mulf8s::a , (signed byte) mulf8s::b)
mulf8s: scope:[mulf8s]  from mul8s_compare::@12
  [155] phi()
  to:mulf8s::mulf8s_prepare1
mulf8s::mulf8s_prepare1: scope:[mulf8s]  from mulf8s
  [156] (byte) mulf8u_prepare::a#1 ← (byte)(signed byte) mulf8s::a#0
  [157] call mulf8u_prepare 
  to:mulf8s::@1
mulf8s::@1: scope:[mulf8s]  from mulf8s::mulf8s_prepare1
  [158] (signed byte) mulf8s_prepared::b#0 ← (signed byte) mulf8s::b#0
  [159] call mulf8s_prepared 
  to:mulf8s::@2
mulf8s::@2: scope:[mulf8s]  from mulf8s::@1
  [160] (signed word) mulf8s::return#0 ← (signed word)(word) mulf8s_prepared::m#4
  to:mulf8s::@return
mulf8s::@return: scope:[mulf8s]  from mulf8s::@2
  [161] return 
  to:@return

(signed word()) mulf8s_prepared((signed byte) mulf8s_prepared::b)
mulf8s_prepared: scope:[mulf8s_prepared]  from mulf8s::@1
  [162] (byte) mulf8u_prepared::b#1 ← (byte)(signed byte) mulf8s_prepared::b#0
  [163] call mulf8u_prepared 
  [164] (word) mulf8u_prepared::return#3 ← (word) mulf8u_prepared::return#0
  to:mulf8s_prepared::@5
mulf8s_prepared::@5: scope:[mulf8s_prepared]  from mulf8s_prepared
  [165] (word) mulf8s_prepared::m#0 ← (word) mulf8u_prepared::return#3
  [166] if(*((const nomodify signed byte*) mulf8s_prepared::memA)>=(signed byte) 0) goto mulf8s_prepared::@1
  to:mulf8s_prepared::@3
mulf8s_prepared::@3: scope:[mulf8s_prepared]  from mulf8s_prepared::@5
  [167] (byte~) mulf8s_prepared::$6 ← > (word) mulf8s_prepared::m#0
  [168] (byte~) mulf8s_prepared::$11 ← (byte~) mulf8s_prepared::$6 - (byte)(signed byte) mulf8s_prepared::b#0
  [169] (word) mulf8s_prepared::m#1 ← (word) mulf8s_prepared::m#0 hi= (byte~) mulf8s_prepared::$11
  to:mulf8s_prepared::@1
mulf8s_prepared::@1: scope:[mulf8s_prepared]  from mulf8s_prepared::@3 mulf8s_prepared::@5
  [170] (word) mulf8s_prepared::m#5 ← phi( mulf8s_prepared::@3/(word) mulf8s_prepared::m#1 mulf8s_prepared::@5/(word) mulf8s_prepared::m#0 )
  [171] if((signed byte) mulf8s_prepared::b#0>=(signed byte) 0) goto mulf8s_prepared::@2
  to:mulf8s_prepared::@4
mulf8s_prepared::@4: scope:[mulf8s_prepared]  from mulf8s_prepared::@1
  [172] (byte~) mulf8s_prepared::$9 ← > (word) mulf8s_prepared::m#5
  [173] (byte~) mulf8s_prepared::$12 ← (byte~) mulf8s_prepared::$9 - (byte)*((const nomodify signed byte*) mulf8s_prepared::memA)
  [174] (word) mulf8s_prepared::m#2 ← (word) mulf8s_prepared::m#5 hi= (byte~) mulf8s_prepared::$12
  to:mulf8s_prepared::@2
mulf8s_prepared::@2: scope:[mulf8s_prepared]  from mulf8s_prepared::@1 mulf8s_prepared::@4
  [175] (word) mulf8s_prepared::m#4 ← phi( mulf8s_prepared::@1/(word) mulf8s_prepared::m#5 mulf8s_prepared::@4/(word) mulf8s_prepared::m#2 )
  to:mulf8s_prepared::@return
mulf8s_prepared::@return: scope:[mulf8s_prepared]  from mulf8s_prepared::@2
  [176] return 
  to:@return

(word()) mulf8u_prepared((byte) mulf8u_prepared::b)
mulf8u_prepared: scope:[mulf8u_prepared]  from mulf8s_prepared mulf8u::@1
  [177] (byte) mulf8u_prepared::b#2 ← phi( mulf8s_prepared/(byte) mulf8u_prepared::b#1 mulf8u::@1/(byte) mulf8u_prepared::b#0 )
  [178] *((const nomodify byte*) mulf8u_prepared::memB) ← (byte) mulf8u_prepared::b#2
  asm { ldxmemB sec sm1: ldamulf_sqr1_lo,x sm2: sbcmulf_sqr2_lo,x staresL sm3: ldamulf_sqr1_hi,x sm4: sbcmulf_sqr2_hi,x stamemB  }
  [180] (word) mulf8u_prepared::return#0 ← *((const nomodify byte*) mulf8u_prepared::memB) w= *((const nomodify byte*) mulf8u_prepared::resL)
  to:mulf8u_prepared::@return
mulf8u_prepared::@return: scope:[mulf8u_prepared]  from mulf8u_prepared
  [181] return 
  to:@return

(void()) mulf8u_prepare((byte) mulf8u_prepare::a)
mulf8u_prepare: scope:[mulf8u_prepare]  from mulf8s::mulf8s_prepare1 mulf8u
  [182] (byte) mulf8u_prepare::a#2 ← phi( mulf8s::mulf8s_prepare1/(byte) mulf8u_prepare::a#1 mulf8u/(byte) mulf8u_prepare::a#0 )
  [183] *((const nomodify byte*) mulf8u_prepare::memA) ← (byte) mulf8u_prepare::a#2
  asm { ldamemA stamulf8u_prepared.sm1+1 stamulf8u_prepared.sm3+1 eor#$ff stamulf8u_prepared.sm2+1 stamulf8u_prepared.sm4+1  }
  to:mulf8u_prepare::@return
mulf8u_prepare::@return: scope:[mulf8u_prepare]  from mulf8u_prepare
  [185] return 
  to:@return

(signed word()) muls8s((signed byte) muls8s::a , (signed byte) muls8s::b)
muls8s: scope:[muls8s]  from mul8s_compare::@4
  [186] if((signed byte) muls8s::a#0<(signed byte) 0) goto muls8s::@5
  to:muls8s::@2
muls8s::@2: scope:[muls8s]  from muls8s
  [187] if((signed byte) muls8s::a#0<=(signed byte) 0) goto muls8s::@1
  to:muls8s::@3
muls8s::@3: scope:[muls8s]  from muls8s::@2 muls8s::@4
  [188] (signed word) muls8s::m#3 ← phi( muls8s::@2/(signed word) 0 muls8s::@4/(signed word) muls8s::m#1 )
  [188] (signed byte) muls8s::j#2 ← phi( muls8s::@2/(signed byte) 0 muls8s::@4/(signed byte) muls8s::j#1 )
  [189] if((signed byte) muls8s::j#2!=(signed byte) muls8s::a#0) goto muls8s::@4
  to:muls8s::@1
muls8s::@1: scope:[muls8s]  from muls8s::@2 muls8s::@3 muls8s::@5
  [190] (signed word) muls8s::return#0 ← phi( muls8s::@2/(signed word) 0 muls8s::@3/(signed word) muls8s::m#3 muls8s::@5/(signed word) muls8s::m#5 )
  to:muls8s::@return
muls8s::@return: scope:[muls8s]  from muls8s::@1
  [191] return 
  to:@return
muls8s::@4: scope:[muls8s]  from muls8s::@3
  [192] (signed word) muls8s::m#1 ← (signed word) muls8s::m#3 + (signed byte) muls8s::b#0
  [193] (signed byte) muls8s::j#1 ← ++ (signed byte) muls8s::j#2
  to:muls8s::@3
muls8s::@5: scope:[muls8s]  from muls8s muls8s::@6
  [194] (signed word) muls8s::m#5 ← phi( muls8s/(signed word) 0 muls8s::@6/(signed word) muls8s::m#2 )
  [194] (signed byte) muls8s::i#2 ← phi( muls8s/(signed byte) 0 muls8s::@6/(signed byte) muls8s::i#1 )
  [195] if((signed byte) muls8s::i#2!=(signed byte) muls8s::a#0) goto muls8s::@6
  to:muls8s::@1
muls8s::@6: scope:[muls8s]  from muls8s::@5
  [196] (signed word) muls8s::m#2 ← (signed word) muls8s::m#5 - (signed byte) muls8s::b#0
  [197] (signed byte) muls8s::i#1 ← -- (signed byte) muls8s::i#2
  to:muls8s::@5

(void()) mul8u_compare()
mul8u_compare: scope:[mul8u_compare]  from main::@4
  [198] phi()
  to:mul8u_compare::@1
mul8u_compare::@1: scope:[mul8u_compare]  from mul8u_compare mul8u_compare::@8
  [199] (byte) mul8u_compare::a#7 ← phi( mul8u_compare/(byte) 0 mul8u_compare::@8/(byte) mul8u_compare::a#1 )
  to:mul8u_compare::@2
mul8u_compare::@2: scope:[mul8u_compare]  from mul8u_compare::@1 mul8u_compare::@5
  [200] (byte) mul8u_compare::b#10 ← phi( mul8u_compare::@1/(byte) 0 mul8u_compare::@5/(byte) mul8u_compare::b#1 )
  [201] (byte) muls8u::a#0 ← (byte) mul8u_compare::a#7
  [202] (byte) muls8u::b#0 ← (byte) mul8u_compare::b#10
  [203] call muls8u 
  [204] (word) muls8u::return#2 ← (word) muls8u::return#0
  to:mul8u_compare::@10
mul8u_compare::@10: scope:[mul8u_compare]  from mul8u_compare::@2
  [205] (word) mul8u_compare::ms#0 ← (word) muls8u::return#2
  [206] (byte) mulf8u::a#0 ← (byte) mul8u_compare::a#7
  [207] (byte) mulf8u::b#0 ← (byte) mul8u_compare::b#10
  [208] call mulf8u 
  [209] (word) mulf8u::return#2 ← (word) mulf8u::return#0
  to:mul8u_compare::@11
mul8u_compare::@11: scope:[mul8u_compare]  from mul8u_compare::@10
  [210] (word) mul8u_compare::mf#0 ← (word) mulf8u::return#2
  [211] (byte) mul8u::a#2 ← (byte) mul8u_compare::a#7
  [212] (byte) mul8u::b#1 ← (byte) mul8u_compare::b#10
  [213] call mul8u 
  [214] (word) mul8u::return#3 ← (word) mul8u::res#2
  to:mul8u_compare::@12
mul8u_compare::@12: scope:[mul8u_compare]  from mul8u_compare::@11
  [215] (word) mul8u_compare::mn#0 ← (word) mul8u::return#3
  [216] if((word) mul8u_compare::ms#0==(word) mul8u_compare::mf#0) goto mul8u_compare::@3
  to:mul8u_compare::@6
mul8u_compare::@6: scope:[mul8u_compare]  from mul8u_compare::@12
  [217] phi()
  to:mul8u_compare::@3
mul8u_compare::@3: scope:[mul8u_compare]  from mul8u_compare::@12 mul8u_compare::@6
  [218] (byte) mul8u_compare::ok#4 ← phi( mul8u_compare::@12/(byte) 1 mul8u_compare::@6/(byte) 0 )
  [219] if((word) mul8u_compare::ms#0==(word) mul8u_compare::mn#0) goto mul8u_compare::@14
  to:mul8u_compare::@4
mul8u_compare::@14: scope:[mul8u_compare]  from mul8u_compare::@3
  [220] phi()
  to:mul8u_compare::@4
mul8u_compare::@4: scope:[mul8u_compare]  from mul8u_compare::@14 mul8u_compare::@3
  [221] (byte) mul8u_compare::ok#3 ← phi( mul8u_compare::@14/(byte) mul8u_compare::ok#4 mul8u_compare::@3/(byte) 0 )
  [222] if((byte) mul8u_compare::ok#3!=(byte) 0) goto mul8u_compare::@5
  to:mul8u_compare::@7
mul8u_compare::@7: scope:[mul8u_compare]  from mul8u_compare::@4
  [223] *((const byte*) BG_COLOR) ← (byte) 2
  [224] (byte) mul8u_error::a#0 ← (byte) mul8u_compare::a#7
  [225] (byte) mul8u_error::b#0 ← (byte) mul8u_compare::b#10
  [226] (word) mul8u_error::ms#0 ← (word) mul8u_compare::ms#0
  [227] (word) mul8u_error::mn#0 ← (word) mul8u_compare::mn#0
  [228] (word) mul8u_error::mf#0 ← (word) mul8u_compare::mf#0
  [229] call mul8u_error 
  to:mul8u_compare::@return
mul8u_compare::@return: scope:[mul8u_compare]  from mul8u_compare::@13 mul8u_compare::@7
  [230] return 
  to:@return
mul8u_compare::@5: scope:[mul8u_compare]  from mul8u_compare::@4
  [231] (byte) mul8u_compare::b#1 ← ++ (byte) mul8u_compare::b#10
  [232] if((byte) mul8u_compare::b#1!=(byte) 0) goto mul8u_compare::@2
  to:mul8u_compare::@8
mul8u_compare::@8: scope:[mul8u_compare]  from mul8u_compare::@5
  [233] (byte) mul8u_compare::a#1 ← ++ (byte) mul8u_compare::a#7
  [234] if((byte) mul8u_compare::a#1!=(byte) 0) goto mul8u_compare::@1
  to:mul8u_compare::@9
mul8u_compare::@9: scope:[mul8u_compare]  from mul8u_compare::@8
  [235] phi()
  [236] call print_str 
  to:mul8u_compare::@13
mul8u_compare::@13: scope:[mul8u_compare]  from mul8u_compare::@9
  [237] phi()
  [238] call print_ln 
  to:mul8u_compare::@return

(void()) mul8u_error((byte) mul8u_error::a , (byte) mul8u_error::b , (word) mul8u_error::ms , (word) mul8u_error::mn , (word) mul8u_error::mf)
mul8u_error: scope:[mul8u_error]  from mul8u_compare::@7
  [239] phi()
  [240] call print_str 
  to:mul8u_error::@1
mul8u_error::@1: scope:[mul8u_error]  from mul8u_error
  [241] (byte) print_uchar::b#3 ← (byte) mul8u_error::a#0
  [242] call print_uchar 
  to:mul8u_error::@2
mul8u_error::@2: scope:[mul8u_error]  from mul8u_error::@1
  [243] phi()
  [244] call print_str 
  to:mul8u_error::@3
mul8u_error::@3: scope:[mul8u_error]  from mul8u_error::@2
  [245] (byte) print_uchar::b#4 ← (byte) mul8u_error::b#0
  [246] call print_uchar 
  to:mul8u_error::@4
mul8u_error::@4: scope:[mul8u_error]  from mul8u_error::@3
  [247] phi()
  [248] call print_str 
  to:mul8u_error::@5
mul8u_error::@5: scope:[mul8u_error]  from mul8u_error::@4
  [249] (word) print_uint::w#3 ← (word) mul8u_error::ms#0
  [250] call print_uint 
  to:mul8u_error::@6
mul8u_error::@6: scope:[mul8u_error]  from mul8u_error::@5
  [251] phi()
  [252] call print_str 
  to:mul8u_error::@7
mul8u_error::@7: scope:[mul8u_error]  from mul8u_error::@6
  [253] (word) print_uint::w#4 ← (word) mul8u_error::mn#0
  [254] call print_uint 
  to:mul8u_error::@8
mul8u_error::@8: scope:[mul8u_error]  from mul8u_error::@7
  [255] phi()
  [256] call print_str 
  to:mul8u_error::@9
mul8u_error::@9: scope:[mul8u_error]  from mul8u_error::@8
  [257] (word) print_uint::w#5 ← (word) mul8u_error::mf#0
  [258] call print_uint 
  to:mul8u_error::@10
mul8u_error::@10: scope:[mul8u_error]  from mul8u_error::@9
  [259] phi()
  [260] call print_ln 
  to:mul8u_error::@return
mul8u_error::@return: scope:[mul8u_error]  from mul8u_error::@10
  [261] return 
  to:@return

(word()) mulf8u((byte) mulf8u::a , (byte) mulf8u::b)
mulf8u: scope:[mulf8u]  from mul8u_compare::@10
  [262] (byte) mulf8u_prepare::a#0 ← (byte) mulf8u::a#0
  [263] call mulf8u_prepare 
  to:mulf8u::@1
mulf8u::@1: scope:[mulf8u]  from mulf8u
  [264] (byte) mulf8u_prepared::b#0 ← (byte) mulf8u::b#0
  [265] call mulf8u_prepared 
  [266] (word) mulf8u_prepared::return#2 ← (word) mulf8u_prepared::return#0
  to:mulf8u::@2
mulf8u::@2: scope:[mulf8u]  from mulf8u::@1
  [267] (word) mulf8u::return#0 ← (word) mulf8u_prepared::return#2
  to:mulf8u::@return
mulf8u::@return: scope:[mulf8u]  from mulf8u::@2
  [268] return 
  to:@return

(word()) muls8u((byte) muls8u::a , (byte) muls8u::b)
muls8u: scope:[muls8u]  from mul8u_compare::@2
  [269] if((byte) muls8u::a#0==(byte) 0) goto muls8u::@1
  to:muls8u::@2
muls8u::@2: scope:[muls8u]  from muls8u muls8u::@3
  [270] (word) muls8u::m#3 ← phi( muls8u/(word) 0 muls8u::@3/(word) muls8u::m#1 )
  [270] (byte) muls8u::i#2 ← phi( muls8u/(byte) 0 muls8u::@3/(byte) muls8u::i#1 )
  [271] if((byte) muls8u::i#2!=(byte) muls8u::a#0) goto muls8u::@3
  to:muls8u::@1
muls8u::@1: scope:[muls8u]  from muls8u muls8u::@2
  [272] (word) muls8u::return#0 ← phi( muls8u/(word) 0 muls8u::@2/(word) muls8u::m#3 )
  to:muls8u::@return
muls8u::@return: scope:[muls8u]  from muls8u::@1
  [273] return 
  to:@return
muls8u::@3: scope:[muls8u]  from muls8u::@2
  [274] (word) muls8u::m#1 ← (word) muls8u::m#3 + (byte) muls8u::b#0
  [275] (byte) muls8u::i#1 ← ++ (byte) muls8u::i#2
  to:muls8u::@2

(void()) mulf_tables_cmp()
mulf_tables_cmp: scope:[mulf_tables_cmp]  from main::@3
  [276] phi()
  to:mulf_tables_cmp::@1
mulf_tables_cmp::@1: scope:[mulf_tables_cmp]  from mulf_tables_cmp mulf_tables_cmp::@4
  [277] (byte*) mulf_tables_cmp::asm_sqr#2 ← phi( mulf_tables_cmp/(const byte*) mula_sqr1_lo mulf_tables_cmp::@4/(byte*) mulf_tables_cmp::asm_sqr#1 )
  [277] (byte*) mulf_tables_cmp::kc_sqr#2 ← phi( mulf_tables_cmp/(const byte*) mulf_sqr1_lo mulf_tables_cmp::@4/(byte*) mulf_tables_cmp::kc_sqr#1 )
  [278] if((byte*) mulf_tables_cmp::kc_sqr#2<(const byte*) mulf_sqr1_lo+(word)(number) $200*(number) 4) goto mulf_tables_cmp::@2
  to:mulf_tables_cmp::@3
mulf_tables_cmp::@3: scope:[mulf_tables_cmp]  from mulf_tables_cmp::@1
  [279] phi()
  [280] call print_str 
  to:mulf_tables_cmp::@6
mulf_tables_cmp::@6: scope:[mulf_tables_cmp]  from mulf_tables_cmp::@3
  [281] phi()
  [282] call print_ln 
  to:mulf_tables_cmp::@7
mulf_tables_cmp::@7: scope:[mulf_tables_cmp]  from mulf_tables_cmp::@6
  [283] (byte*) print_char_cursor#231 ← (byte*) print_line_cursor#0
  to:mulf_tables_cmp::@return
mulf_tables_cmp::@return: scope:[mulf_tables_cmp]  from mulf_tables_cmp::@10 mulf_tables_cmp::@7
  [284] (byte*) print_line_cursor#10 ← phi( mulf_tables_cmp::@10/(const byte*) print_screen#0 mulf_tables_cmp::@7/(byte*) print_line_cursor#0 )
  [284] (byte*) print_char_cursor#101 ← phi( mulf_tables_cmp::@10/(byte*) print_char_cursor#18 mulf_tables_cmp::@7/(byte*) print_char_cursor#231 )
  [285] return 
  to:@return
mulf_tables_cmp::@2: scope:[mulf_tables_cmp]  from mulf_tables_cmp::@1
  [286] if(*((byte*) mulf_tables_cmp::kc_sqr#2)==*((byte*) mulf_tables_cmp::asm_sqr#2)) goto mulf_tables_cmp::@4
  to:mulf_tables_cmp::@5
mulf_tables_cmp::@5: scope:[mulf_tables_cmp]  from mulf_tables_cmp::@2
  [287] *((const byte*) BG_COLOR) ← (byte) 2
  [288] call print_str 
  to:mulf_tables_cmp::@8
mulf_tables_cmp::@8: scope:[mulf_tables_cmp]  from mulf_tables_cmp::@5
  [289] (word) print_uint::w#1 ← (word)(byte*) mulf_tables_cmp::asm_sqr#2
  [290] call print_uint 
  to:mulf_tables_cmp::@9
mulf_tables_cmp::@9: scope:[mulf_tables_cmp]  from mulf_tables_cmp::@8
  [291] phi()
  [292] call print_str 
  to:mulf_tables_cmp::@10
mulf_tables_cmp::@10: scope:[mulf_tables_cmp]  from mulf_tables_cmp::@9
  [293] (word) print_uint::w#2 ← (word)(byte*) mulf_tables_cmp::kc_sqr#2
  [294] call print_uint 
  to:mulf_tables_cmp::@return
mulf_tables_cmp::@4: scope:[mulf_tables_cmp]  from mulf_tables_cmp::@2
  [295] (byte*) mulf_tables_cmp::asm_sqr#1 ← ++ (byte*) mulf_tables_cmp::asm_sqr#2
  [296] (byte*) mulf_tables_cmp::kc_sqr#1 ← ++ (byte*) mulf_tables_cmp::kc_sqr#2
  to:mulf_tables_cmp::@1

(void()) mulf_init_asm()
mulf_init_asm: scope:[mulf_init_asm]  from main::@2
  asm { ldx#$00 txa .byte$c9 lb1: tya adc#$00 ml1: stamula_sqr1_hi,x tay cmp#$40 txa ror ml9: adc#$00 staml9+1 inx ml0: stamula_sqr1_lo,x bnelb1 incml0+2 incml1+2 clc iny bnelb1 ldx#$00 ldy#$ff !: ldamula_sqr1_hi+1,x stamula_sqr2_hi+$100,x ldamula_sqr1_hi,x stamula_sqr2_hi,y ldamula_sqr1_lo+1,x stamula_sqr2_lo+$100,x ldamula_sqr1_lo,x stamula_sqr2_lo,y dey inx bne!-  }
  [298] *((const byte*) mulf_init_asm::mem) ← *((const byte*) mula_sqr1_lo)
  [299] *((const byte*) mulf_init_asm::mem) ← *((const byte*) mula_sqr1_hi)
  [300] *((const byte*) mulf_init_asm::mem) ← *((const byte*) mula_sqr2_lo)
  [301] *((const byte*) mulf_init_asm::mem) ← *((const byte*) mula_sqr2_hi)
  to:mulf_init_asm::@return
mulf_init_asm::@return: scope:[mulf_init_asm]  from mulf_init_asm
  [302] return 
  to:@return

(void()) mulf_init()
mulf_init: scope:[mulf_init]  from main::@1
  [303] phi()
  to:mulf_init::@1
mulf_init::@1: scope:[mulf_init]  from mulf_init mulf_init::@3
  [304] (byte) mulf_init::x_2#3 ← phi( mulf_init/(byte) 0 mulf_init::@3/(byte) mulf_init::x_2#2 )
  [304] (byte*) mulf_init::sqr1_hi#2 ← phi( mulf_init/(const byte*) mulf_sqr1_hi+(byte) 1 mulf_init::@3/(byte*) mulf_init::sqr1_hi#1 )
  [304] (word) mulf_init::sqr#4 ← phi( mulf_init/(word) 0 mulf_init::@3/(word) mulf_init::sqr#1 )
  [304] (byte) mulf_init::c#2 ← phi( mulf_init/(byte) 0 mulf_init::@3/(byte) mulf_init::c#1 )
  [304] (byte*) mulf_init::sqr1_lo#2 ← phi( mulf_init/(const byte*) mulf_sqr1_lo+(byte) 1 mulf_init::@3/(byte*) mulf_init::sqr1_lo#1 )
  [305] if((byte*) mulf_init::sqr1_lo#2!=(const byte*) mulf_sqr1_lo+(word) $200) goto mulf_init::@2
  to:mulf_init::@5
mulf_init::@5: scope:[mulf_init]  from mulf_init::@1 mulf_init::@8
  [306] (byte) mulf_init::dir#2 ← phi( mulf_init::@1/(byte) $ff mulf_init::@8/(byte) mulf_init::dir#4 )
  [306] (byte*) mulf_init::sqr2_hi#2 ← phi( mulf_init::@1/(const byte*) mulf_sqr2_hi mulf_init::@8/(byte*) mulf_init::sqr2_hi#1 )
  [306] (byte) mulf_init::x_255#2 ← phi( mulf_init::@1/(byte) -1 mulf_init::@8/(byte) mulf_init::x_255#1 )
  [306] (byte*) mulf_init::sqr2_lo#2 ← phi( mulf_init::@1/(const byte*) mulf_sqr2_lo mulf_init::@8/(byte*) mulf_init::sqr2_lo#1 )
  [307] if((byte*) mulf_init::sqr2_lo#2!=(const byte*) mulf_sqr2_lo+(word) $1ff) goto mulf_init::@6
  to:mulf_init::@7
mulf_init::@7: scope:[mulf_init]  from mulf_init::@5
  [308] *((const byte*) mulf_sqr2_lo+(word) $1ff) ← *((const byte*) mulf_sqr1_lo+(word) $100)
  [309] *((const byte*) mulf_sqr2_hi+(word) $1ff) ← *((const byte*) mulf_sqr1_hi+(word) $100)
  to:mulf_init::@return
mulf_init::@return: scope:[mulf_init]  from mulf_init::@7
  [310] return 
  to:@return
mulf_init::@6: scope:[mulf_init]  from mulf_init::@5
  [311] *((byte*) mulf_init::sqr2_lo#2) ← *((const byte*) mulf_sqr1_lo + (byte) mulf_init::x_255#2)
  [312] *((byte*) mulf_init::sqr2_hi#2) ← *((const byte*) mulf_sqr1_hi + (byte) mulf_init::x_255#2)
  [313] (byte*) mulf_init::sqr2_hi#1 ← ++ (byte*) mulf_init::sqr2_hi#2
  [314] (byte) mulf_init::x_255#1 ← (byte) mulf_init::x_255#2 + (byte) mulf_init::dir#2
  [315] if((byte) mulf_init::x_255#1!=(byte) 0) goto mulf_init::@9
  to:mulf_init::@8
mulf_init::@9: scope:[mulf_init]  from mulf_init::@6
  [316] phi()
  to:mulf_init::@8
mulf_init::@8: scope:[mulf_init]  from mulf_init::@6 mulf_init::@9
  [317] (byte) mulf_init::dir#4 ← phi( mulf_init::@6/(byte) 1 mulf_init::@9/(byte) mulf_init::dir#2 )
  [318] (byte*) mulf_init::sqr2_lo#1 ← ++ (byte*) mulf_init::sqr2_lo#2
  to:mulf_init::@5
mulf_init::@2: scope:[mulf_init]  from mulf_init::@1
  [319] (byte) mulf_init::c#1 ← ++ (byte) mulf_init::c#2
  [320] (byte~) mulf_init::$1 ← (byte) mulf_init::c#1 & (byte) 1
  [321] if((byte~) mulf_init::$1!=(byte) 0) goto mulf_init::@3
  to:mulf_init::@4
mulf_init::@4: scope:[mulf_init]  from mulf_init::@2
  [322] (byte) mulf_init::x_2#1 ← ++ (byte) mulf_init::x_2#3
  [323] (word) mulf_init::sqr#2 ← ++ (word) mulf_init::sqr#4
  to:mulf_init::@3
mulf_init::@3: scope:[mulf_init]  from mulf_init::@2 mulf_init::@4
  [324] (byte) mulf_init::x_2#2 ← phi( mulf_init::@2/(byte) mulf_init::x_2#3 mulf_init::@4/(byte) mulf_init::x_2#1 )
  [324] (word) mulf_init::sqr#3 ← phi( mulf_init::@2/(word) mulf_init::sqr#4 mulf_init::@4/(word) mulf_init::sqr#2 )
  [325] (byte~) mulf_init::$4 ← < (word) mulf_init::sqr#3
  [326] *((byte*) mulf_init::sqr1_lo#2) ← (byte~) mulf_init::$4
  [327] (byte~) mulf_init::$5 ← > (word) mulf_init::sqr#3
  [328] *((byte*) mulf_init::sqr1_hi#2) ← (byte~) mulf_init::$5
  [329] (byte*) mulf_init::sqr1_hi#1 ← ++ (byte*) mulf_init::sqr1_hi#2
  [330] (word) mulf_init::sqr#1 ← (word) mulf_init::sqr#3 + (byte) mulf_init::x_2#2
  [331] (byte*) mulf_init::sqr1_lo#1 ← ++ (byte*) mulf_init::sqr1_lo#2
  to:mulf_init::@1

(void()) print_cls()
print_cls: scope:[print_cls]  from main
  [332] phi()
  [333] call memset 
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls
  [334] return 
  to:@return

(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
memset: scope:[memset]  from print_cls
  [335] phi()
  to:memset::@1
memset::@1: scope:[memset]  from memset memset::@2
  [336] (byte*) memset::dst#2 ← phi( memset/(byte*)(const void*) memset::str#0 memset::@2/(byte*) memset::dst#1 )
  [337] if((byte*) memset::dst#2!=(const byte*) memset::end#0) goto memset::@2
  to:memset::@return
memset::@return: scope:[memset]  from memset::@1
  [338] return 
  to:@return
memset::@2: scope:[memset]  from memset::@1
  [339] *((byte*) memset::dst#2) ← (const byte) memset::c#0
  [340] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2
  to:memset::@1
