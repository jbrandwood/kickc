const nomodify byte* CHARSET = (byte*) 8192
const nomodify struct MOS6526_CIA* CIA2 = (struct MOS6526_CIA*) 56576
const nomodify dword* CIA2_TIMER_AB = (dword*) 56580
const nomodify byte CIA_TIMER_CONTROL_B_COUNT_UNDERFLOW_A = $40
const nomodify byte CIA_TIMER_CONTROL_START = 1
const nomodify dword CLOCKS_PER_INIT = $12
const word* CORDIC_ATAN2_ANGLES_16[CORDIC_ITERATIONS_16]  = kickasm {{ .for (var i=0; i<CORDIC_ITERATIONS_16; i++)
        .word 256*2*256*atan(1/pow(2,i))/PI/2
 }}
const nomodify byte CORDIC_ITERATIONS_16 = $f
const nomodify byte* D018 = (byte*) 53272
const byte* FONT_HEX_PROTO[]  = { 2, 5, 5, 5, 2, 6, 2, 2, 2, 7, 6, 1, 2, 4, 7, 6, 1, 2, 1, 6, 5, 5, 7, 1, 1, 7, 4, 6, 1, 6, 3, 4, 6, 5, 2, 7, 1, 1, 1, 1, 2, 5, 2, 5, 2, 2, 5, 3, 1, 1, 2, 5, 7, 5, 5, 6, 5, 6, 5, 6, 2, 5, 4, 5, 2, 6, 5, 5, 5, 6, 7, 4, 6, 4, 7, 7, 4, 6, 4, 4 }
byte MOS6526_CIA::INTERRUPT
byte MOS6526_CIA::PORT_A
byte MOS6526_CIA::PORT_A_DDR
byte MOS6526_CIA::PORT_B
byte MOS6526_CIA::PORT_B_DDR
byte MOS6526_CIA::SERIAL_DATA
word MOS6526_CIA::TIMER_A
byte MOS6526_CIA::TIMER_A_CONTROL
word MOS6526_CIA::TIMER_B
byte MOS6526_CIA::TIMER_B_CONTROL
byte MOS6526_CIA::TOD_10THS
byte MOS6526_CIA::TOD_HOURS
byte MOS6526_CIA::TOD_MIN
byte MOS6526_CIA::TOD_SEC
byte MOS6569_VICII::BG_COLOR
byte MOS6569_VICII::BG_COLOR1
byte MOS6569_VICII::BG_COLOR2
byte MOS6569_VICII::BG_COLOR3
byte MOS6569_VICII::BORDER_COLOR
byte MOS6569_VICII::CONTROL1
byte MOS6569_VICII::CONTROL2
byte MOS6569_VICII::IRQ_ENABLE
byte MOS6569_VICII::IRQ_STATUS
byte MOS6569_VICII::LIGHTPEN_X
byte MOS6569_VICII::LIGHTPEN_Y
byte MOS6569_VICII::MEMORY
byte MOS6569_VICII::RASTER
byte MOS6569_VICII::SPRITE0_COLOR
byte MOS6569_VICII::SPRITE0_X
byte MOS6569_VICII::SPRITE0_Y
byte MOS6569_VICII::SPRITE1_COLOR
byte MOS6569_VICII::SPRITE1_X
byte MOS6569_VICII::SPRITE1_Y
byte MOS6569_VICII::SPRITE2_COLOR
byte MOS6569_VICII::SPRITE2_X
byte MOS6569_VICII::SPRITE2_Y
byte MOS6569_VICII::SPRITE3_COLOR
byte MOS6569_VICII::SPRITE3_X
byte MOS6569_VICII::SPRITE3_Y
byte MOS6569_VICII::SPRITE4_COLOR
byte MOS6569_VICII::SPRITE4_X
byte MOS6569_VICII::SPRITE4_Y
byte MOS6569_VICII::SPRITE5_COLOR
byte MOS6569_VICII::SPRITE5_X
byte MOS6569_VICII::SPRITE5_Y
byte MOS6569_VICII::SPRITE6_COLOR
byte MOS6569_VICII::SPRITE6_X
byte MOS6569_VICII::SPRITE6_Y
byte MOS6569_VICII::SPRITE7_COLOR
byte MOS6569_VICII::SPRITE7_X
byte MOS6569_VICII::SPRITE7_Y
byte MOS6569_VICII::SPRITES_BG_COLLISION
byte MOS6569_VICII::SPRITES_COLLISION
byte MOS6569_VICII::SPRITES_ENABLE
byte MOS6569_VICII::SPRITES_EXPAND_X
byte MOS6569_VICII::SPRITES_EXPAND_Y
byte MOS6569_VICII::SPRITES_MC
byte MOS6569_VICII::SPRITES_MCOLOR1
byte MOS6569_VICII::SPRITES_MCOLOR2
byte MOS6569_VICII::SPRITES_PRIORITY
byte MOS6569_VICII::SPRITES_XMSB
byte MOS6581_SID::CH1_ATTACK_DECAY
byte MOS6581_SID::CH1_CONTROL
word MOS6581_SID::CH1_FREQ
word MOS6581_SID::CH1_PULSE_WIDTH
byte MOS6581_SID::CH1_SUSTAIN_RELEASE
byte MOS6581_SID::CH2_ATTACK_DECAY
byte MOS6581_SID::CH2_CONTROL
word MOS6581_SID::CH2_FREQ
word MOS6581_SID::CH2_PULSE_WIDTH
byte MOS6581_SID::CH2_SUSTAIN_RELEASE
byte MOS6581_SID::CH3_ATTACK_DECAY
byte MOS6581_SID::CH3_CONTROL
byte MOS6581_SID::CH3_ENV
word MOS6581_SID::CH3_FREQ
byte MOS6581_SID::CH3_OSC
word MOS6581_SID::CH3_PULSE_WIDTH
byte MOS6581_SID::CH3_SUSTAIN_RELEASE
byte MOS6581_SID::FILTER_CUTOFF_HIGH
byte MOS6581_SID::FILTER_CUTOFF_LOW
byte MOS6581_SID::FILTER_SETUP
byte MOS6581_SID::POT_X
byte MOS6581_SID::POT_Y
byte MOS6581_SID::VOLUME_FILTER_MODE
const byte OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL = $e
const byte OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL = $f
const byte RADIX::BINARY = 2
const byte RADIX::DECIMAL = $a
const byte RADIX::HEXADECIMAL = $10
const byte RADIX::OCTAL = 8
const nomodify byte* SCREEN = (byte*) 10240
word atan2_16(signed word atan2_16::x , signed word atan2_16::y)
signed word~ atan2_16::$2 zp[2]:9 20002.0
byte~ atan2_16::$22 reg byte a 2.0000002E7
byte~ atan2_16::$23 reg byte a 2.0000002E7
signed word~ atan2_16::$7 zp[2]:13 20002.0
label atan2_16::@1
label atan2_16::@10
label atan2_16::@11
label atan2_16::@12
label atan2_16::@13
label atan2_16::@14
label atan2_16::@15
label atan2_16::@16
label atan2_16::@17
label atan2_16::@18
label atan2_16::@19
label atan2_16::@2
label atan2_16::@20
label atan2_16::@21
label atan2_16::@3
label atan2_16::@4
label atan2_16::@5
label atan2_16::@6
label atan2_16::@7
label atan2_16::@8
label atan2_16::@9
label atan2_16::@return
word atan2_16::angle
word atan2_16::angle#1 angle zp[2]:15 15001.5
word atan2_16::angle#11 angle zp[2]:15 20002.0
word atan2_16::angle#12 angle zp[2]:15 1904762.0952380951
word atan2_16::angle#13 angle zp[2]:15 1.3333334666666666E7
word atan2_16::angle#2 angle zp[2]:15 2.0000002E7
word atan2_16::angle#3 angle zp[2]:15 2.0000002E7
word atan2_16::angle#4 angle zp[2]:15 20002.0
word atan2_16::angle#5 angle zp[2]:15 20002.0
word atan2_16::angle#6 angle zp[2]:15 2.0010003E7
byte atan2_16::i
byte atan2_16::i#1 reg byte x 1.50000015E7
byte atan2_16::i#2 reg byte x 2083333.5416666665
word atan2_16::return
word atan2_16::return#0 return zp[2]:15 7001.0
word atan2_16::return#2 return zp[2]:15 2002.0
byte atan2_16::shift
byte atan2_16::shift#1 reg byte y 2.00000002E8
byte atan2_16::shift#2 reg byte y 8.000000125E7
byte atan2_16::shift#5 reg byte y 6666667.333333333
signed word atan2_16::x
signed word atan2_16::x#0 x zp[2]:23 1079.078947368421
signed word atan2_16::xd
signed word atan2_16::xd#1 xd zp[2]:11 6.6666667333333336E7
signed word atan2_16::xd#10 xd zp[2]:11 1.0000001E7
signed word atan2_16::xd#2 xd zp[2]:11 1.0000001E7
signed word atan2_16::xd#3 xd zp[2]:11 7.666666833333333E7
signed word atan2_16::xd#5 xd zp[2]:11 1.0000001E7
signed word atan2_16::xi
signed word atan2_16::xi#0 xi zp[2]:13 30003.0
signed word atan2_16::xi#1 xi zp[2]:13 5000000.5
signed word atan2_16::xi#13 xi zp[2]:13 20002.0
signed word atan2_16::xi#2 xi zp[2]:13 5000000.5
signed word atan2_16::xi#3 xi zp[2]:13 2667333.6666666665
signed word atan2_16::xi#8 xi zp[2]:13 1.0000001E7
signed word atan2_16::y
signed word atan2_16::y#0 y zp[2]:25 1025.125
signed word atan2_16::yd
signed word atan2_16::yd#1 yd zp[2]:17 1.00000001E8
signed word atan2_16::yd#10 yd zp[2]:17 2.0000002E7
signed word atan2_16::yd#2 yd zp[2]:17 2.0000002E7
signed word atan2_16::yd#3 yd zp[2]:17 4.6000001E7
signed word atan2_16::yd#5 yd zp[2]:17 2.0000002E7
signed word atan2_16::yi
signed word atan2_16::yi#0 yi zp[2]:9 6000.6
signed word atan2_16::yi#1 yi zp[2]:9 6666667.333333333
signed word atan2_16::yi#16 yi zp[2]:9 20002.0
signed word atan2_16::yi#2 yi zp[2]:9 6666667.333333333
signed word atan2_16::yi#3 yi zp[2]:9 3530000.4117647056
signed word atan2_16::yi#8 yi zp[2]:9 1.0000001E7
dword clock()
label clock::@return
dword clock::return
dword clock::return#0 return zp[4]:19 4.333333333333333
dword clock::return#2 return zp[4]:19 4.0
void clock_start()
label clock_start::@return
void init_angle_screen(byte* init_angle_screen::screen)
byte~ init_angle_screen::$10 reg byte a 2002.0
byte~ init_angle_screen::$11 reg byte a 2002.0
byte~ init_angle_screen::$3 reg byte a 2002.0
byte~ init_angle_screen::$4 reg byte a 2002.0
byte~ init_angle_screen::$5 reg byte a 2002.0
word~ init_angle_screen::$7 zp[2]:15 2002.0
byte~ init_angle_screen::$9 reg byte a 2002.0
label init_angle_screen::@1
label init_angle_screen::@2
label init_angle_screen::@3
label init_angle_screen::@4
label init_angle_screen::@5
label init_angle_screen::@return
byte init_angle_screen::ang_w
byte init_angle_screen::ang_w#0 ang_w zp[1]:27 834.1666666666667
word init_angle_screen::angle_w
word init_angle_screen::angle_w#0 angle_w zp[2]:15 2002.0
byte* init_angle_screen::screen
byte* init_angle_screen::screen_bottomline
byte* init_angle_screen::screen_bottomline#1 screen_bottomline zp[2]:5 67.33333333333333
byte* init_angle_screen::screen_bottomline#6 screen_bottomline zp[2]:5 88.16
byte* init_angle_screen::screen_topline
byte* init_angle_screen::screen_topline#1 screen_topline zp[2]:3 50.5
byte* init_angle_screen::screen_topline#6 screen_topline zp[2]:3 91.83333333333334
byte init_angle_screen::x
byte init_angle_screen::x#1 x zp[1]:7 1001.0
byte init_angle_screen::x#2 x zp[1]:7 286.0
byte init_angle_screen::xb
byte init_angle_screen::xb#1 xb zp[1]:8 2002.0
byte init_angle_screen::xb#2 xb zp[1]:8 182.0
signed word init_angle_screen::xw
word init_angle_screen::xw#0 xw zp[2]:23 333.6666666666667
byte init_angle_screen::y
byte init_angle_screen::y#1 y zp[1]:2 151.5
byte init_angle_screen::y#5 y zp[1]:2 46.26923076923077
signed word init_angle_screen::yw
word init_angle_screen::yw#0 yw zp[2]:25 500.5
void init_font_hex(byte* init_font_hex::charset)
byte~ init_font_hex::$0 zp[1]:27 10001.0
byte~ init_font_hex::$1 reg byte a 20002.0
byte~ init_font_hex::$2 reg byte a 20002.0
label init_font_hex::@1
label init_font_hex::@2
label init_font_hex::@3
label init_font_hex::@4
label init_font_hex::@5
label init_font_hex::@return
byte init_font_hex::c
byte init_font_hex::c#1 c zp[1]:2 151.5
byte init_font_hex::c#6 c zp[1]:2 10.631578947368421
byte init_font_hex::c1
byte init_font_hex::c1#1 c1 zp[1]:7 1501.5
byte init_font_hex::c1#4 c1 zp[1]:7 133.46666666666667
byte* init_font_hex::charset
byte* init_font_hex::charset#0 charset zp[2]:5 350.5
byte* init_font_hex::charset#2 charset zp[2]:5 1079.0714285714287
byte* init_font_hex::charset#5 charset zp[2]:5 202.0
byte init_font_hex::i
byte init_font_hex::i#1 reg byte x 15001.5
byte init_font_hex::i#2 reg byte x 6667.333333333333
byte init_font_hex::idx
byte init_font_hex::idx#2 idx zp[1]:8 5501.0
byte init_font_hex::idx#3 reg byte y 2002.0
byte init_font_hex::idx#5 idx zp[1]:8 6000.6
byte* init_font_hex::proto_hi
byte* init_font_hex::proto_hi#1 proto_hi zp[2]:3 67.33333333333333
byte* init_font_hex::proto_hi#6 proto_hi zp[2]:3 566.8333333333333
byte* init_font_hex::proto_lo
byte* init_font_hex::proto_lo#1 proto_lo zp[2]:9 500.5
byte* init_font_hex::proto_lo#4 proto_lo zp[2]:9 923.3076923076923
void main()
dword~ main::$4 zp[4]:19 4.0
label main::@1
label main::@2
label main::@3
label main::@4
label main::@5
label main::@return
const byte* main::BASE_CHARSET = (byte*) 4096
const byte* main::BASE_SCREEN = (byte*) 1024
dword main::cyclecount
dword main::cyclecount#0 cyclecount zp[4]:19 4.0
label main::toD0181
byte* main::toD0181_gfx
byte main::toD0181_return
const byte main::toD0181_return#0 toD0181_return = >(word)SCREEN&$3fff*4|>(word)CHARSET/4&$f
byte* main::toD0181_screen
label main::toD0182
byte* main::toD0182_gfx
byte main::toD0182_return
const byte main::toD0182_return#0 toD0182_return = >(word)main::BASE_SCREEN&$3fff*4|>(word)main::BASE_CHARSET/4&$f
byte* main::toD0182_screen
void print_char_at(byte print_char_at::ch , byte* print_char_at::at)
label print_char_at::@return
byte* print_char_at::at
byte* print_char_at::at#0 at zp[2]:17 2002.0
byte* print_char_at::at#1 at zp[2]:17 1001.0
byte* print_char_at::at#2 at zp[2]:17 12003.0
byte print_char_at::ch
byte print_char_at::ch#0 reg byte x 1001.0
byte print_char_at::ch#1 reg byte x 2002.0
byte print_char_at::ch#2 reg byte x 12003.0
const to_nomodify byte* print_hextab[]  = "0123456789abcdef"z
void print_uchar_at(byte print_uchar_at::b , byte* print_uchar_at::at)
byte~ print_uchar_at::$0 reg byte a 2002.0
byte~ print_uchar_at::$2 reg byte y 1001.0
label print_uchar_at::@1
label print_uchar_at::@return
byte* print_uchar_at::at
byte* print_uchar_at::at#0 at zp[2]:15 202.0
byte* print_uchar_at::at#1 at zp[2]:15 202.0
byte* print_uchar_at::at#2 at zp[2]:15 367.33333333333337
byte print_uchar_at::b
byte print_uchar_at::b#0 b zp[1]:27 101.0
byte print_uchar_at::b#1 b zp[1]:27 101.0
byte print_uchar_at::b#2 b zp[1]:27 440.79999999999995
void print_uint_at(word print_uint_at::w , byte* print_uint_at::at)
label print_uint_at::@1
label print_uint_at::@return
byte* print_uint_at::at
byte* print_uint_at::at#2 at zp[2]:15 40.4
word print_uint_at::w
word print_uint_at::w#0 w zp[2]:13 22.0
word print_uint_at::w#1 w zp[2]:13 22.0
word print_uint_at::w#2 w zp[2]:13 56.0
void print_ulong_at(dword print_ulong_at::dw , byte* print_ulong_at::at)
label print_ulong_at::@1
label print_ulong_at::@return
byte* print_ulong_at::at
dword print_ulong_at::dw
dword print_ulong_at::dw#0 dw zp[4]:19 8.0

reg byte x [ init_font_hex::i#2 init_font_hex::i#1 ]
zp[1]:2 [ init_angle_screen::y#5 init_angle_screen::y#1 init_font_hex::c#6 init_font_hex::c#1 ]
zp[2]:3 [ init_angle_screen::screen_topline#6 init_angle_screen::screen_topline#1 init_font_hex::proto_hi#6 init_font_hex::proto_hi#1 ]
zp[2]:5 [ init_angle_screen::screen_bottomline#6 init_angle_screen::screen_bottomline#1 init_font_hex::charset#2 init_font_hex::charset#5 init_font_hex::charset#0 ]
zp[1]:7 [ init_angle_screen::x#2 init_angle_screen::x#1 init_font_hex::c1#4 init_font_hex::c1#1 ]
zp[1]:8 [ init_angle_screen::xb#2 init_angle_screen::xb#1 init_font_hex::idx#5 init_font_hex::idx#2 ]
zp[2]:9 [ atan2_16::yi#3 atan2_16::yi#8 atan2_16::yi#0 atan2_16::yi#16 atan2_16::$2 atan2_16::yi#1 atan2_16::yi#2 init_font_hex::proto_lo#4 init_font_hex::proto_lo#1 ]
reg byte x [ atan2_16::i#2 atan2_16::i#1 ]
reg byte y [ atan2_16::shift#2 atan2_16::shift#5 atan2_16::shift#1 ]
zp[2]:11 [ atan2_16::xd#5 atan2_16::xd#3 atan2_16::xd#10 atan2_16::xd#1 atan2_16::xd#2 ]
zp[2]:13 [ print_uint_at::w#2 print_uint_at::w#0 print_uint_at::w#1 atan2_16::xi#3 atan2_16::xi#8 atan2_16::xi#0 atan2_16::xi#13 atan2_16::$7 atan2_16::xi#1 atan2_16::xi#2 ]
zp[2]:15 [ print_uint_at::at#2 print_uchar_at::at#2 print_uchar_at::at#0 print_uchar_at::at#1 atan2_16::angle#6 atan2_16::angle#12 atan2_16::angle#13 atan2_16::angle#2 atan2_16::angle#3 atan2_16::return#0 atan2_16::angle#11 atan2_16::angle#1 atan2_16::angle#4 atan2_16::angle#5 atan2_16::return#2 init_angle_screen::angle_w#0 init_angle_screen::$7 ]
reg byte x [ print_char_at::ch#2 print_char_at::ch#0 print_char_at::ch#1 ]
zp[2]:17 [ print_char_at::at#2 print_char_at::at#0 print_char_at::at#1 atan2_16::yd#5 atan2_16::yd#3 atan2_16::yd#10 atan2_16::yd#1 atan2_16::yd#2 ]
zp[4]:19 [ clock::return#2 main::$4 clock::return#0 main::cyclecount#0 print_ulong_at::dw#0 ]
reg byte a [ init_font_hex::$1 ]
reg byte a [ init_font_hex::$2 ]
reg byte y [ init_font_hex::idx#3 ]
reg byte a [ init_angle_screen::$3 ]
reg byte a [ init_angle_screen::$4 ]
zp[2]:23 [ init_angle_screen::xw#0 atan2_16::x#0 ]
reg byte a [ init_angle_screen::$5 ]
zp[2]:25 [ init_angle_screen::yw#0 atan2_16::y#0 ]
zp[1]:27 [ init_angle_screen::ang_w#0 init_font_hex::$0 print_uchar_at::b#2 print_uchar_at::b#0 print_uchar_at::b#1 ]
reg byte a [ init_angle_screen::$9 ]
reg byte a [ init_angle_screen::$10 ]
reg byte a [ init_angle_screen::$11 ]
reg byte a [ atan2_16::$23 ]
reg byte a [ atan2_16::$22 ]
reg byte a [ print_uchar_at::$0 ]
reg byte y [ print_uchar_at::$2 ]
