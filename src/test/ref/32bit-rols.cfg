
void __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] conio_cursor_x = 0
  [2] conio_cursor_y = 0
  [3] conio_line_text = DEFAULT_SCREEN
  [4] conio_line_color = COLORRAM
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  [5] phi()
  [6] call main 
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [7] return 
  to:@return

void main()
main: scope:[main]  from __start::@1
  [8] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@10
  [9] main::i#12 = phi( main/0, main::@10/main::i#1 )
  to:main::@2
main::@2: scope:[main]  from main::@1
  [10] phi()
  [11] call clrscr 
  to:main::@11
main::@11: scope:[main]  from main::@2
  [12] main::$19 = main::i#12 << 2
  [13] rol_fixed::val#0 = main::vals[main::$19]
  [14] call rol_fixed 
  to:main::@3
main::@3: scope:[main]  from main::@11 main::@12
  [15] phi()
  [16] call kbhit 
  [17] kbhit::return#2 = kbhit::return#0
  to:main::@12
main::@12: scope:[main]  from main::@3
  [18] main::$2 = kbhit::return#2
  [19] if(0==main::$2) goto main::@3
  to:main::@4
main::@4: scope:[main]  from main::@12
  [20] phi()
  [21] call clrscr 
  to:main::@13
main::@13: scope:[main]  from main::@4
  [22] ror_fixed::val#0 = main::vals[main::$19]
  [23] call ror_fixed 
  to:main::@5
main::@5: scope:[main]  from main::@13 main::@14
  [24] phi()
  [25] call kbhit 
  [26] kbhit::return#3 = kbhit::return#0
  to:main::@14
main::@14: scope:[main]  from main::@5
  [27] main::$6 = kbhit::return#3
  [28] if(0==main::$6) goto main::@5
  to:main::@6
main::@6: scope:[main]  from main::@14
  [29] phi()
  [30] call clrscr 
  to:main::@15
main::@15: scope:[main]  from main::@6
  [31] rol_var::val#0 = main::vals[main::$19]
  [32] call rol_var 
  to:main::@7
main::@7: scope:[main]  from main::@15 main::@16
  [33] phi()
  [34] call kbhit 
  [35] kbhit::return#4 = kbhit::return#0
  to:main::@16
main::@16: scope:[main]  from main::@7
  [36] main::$10 = kbhit::return#4
  [37] if(0==main::$10) goto main::@7
  to:main::@8
main::@8: scope:[main]  from main::@16
  [38] phi()
  [39] call clrscr 
  to:main::@17
main::@17: scope:[main]  from main::@8
  [40] ror_var::val#0 = main::vals[main::$19]
  [41] call ror_var 
  to:main::@9
main::@9: scope:[main]  from main::@17 main::@18
  [42] phi()
  [43] call kbhit 
  [44] kbhit::return#10 = kbhit::return#0
  to:main::@18
main::@18: scope:[main]  from main::@9
  [45] main::$14 = kbhit::return#10
  [46] if(0==main::$14) goto main::@9
  to:main::@10
main::@10: scope:[main]  from main::@18
  [47] main::$16 = main::i#12 + 1
  [48] main::i#1 = main::$16 & 1
  to:main::@1

void clrscr()
clrscr: scope:[clrscr]  from main::@2 main::@4 main::@6 main::@8
  [49] phi()
  to:clrscr::@1
clrscr::@1: scope:[clrscr]  from clrscr clrscr::@5
  [50] clrscr::line_cols#5 = phi( clrscr/COLORRAM, clrscr::@5/clrscr::line_cols#1 )
  [50] clrscr::line_text#5 = phi( clrscr/DEFAULT_SCREEN, clrscr::@5/clrscr::line_text#1 )
  [50] clrscr::l#2 = phi( clrscr/0, clrscr::@5/clrscr::l#1 )
  [51] if(clrscr::l#2<$19) goto clrscr::@3
  to:clrscr::@2
clrscr::@2: scope:[clrscr]  from clrscr::@1
  [52] conio_cursor_x = 0
  [53] conio_cursor_y = 0
  [54] conio_line_text = DEFAULT_SCREEN
  [55] conio_line_color = COLORRAM
  to:clrscr::@return
clrscr::@return: scope:[clrscr]  from clrscr::@2
  [56] return 
  to:@return
clrscr::@3: scope:[clrscr]  from clrscr::@1 clrscr::@4
  [57] clrscr::c#2 = phi( clrscr::@1/0, clrscr::@4/clrscr::c#1 )
  [58] if(clrscr::c#2<$28) goto clrscr::@4
  to:clrscr::@5
clrscr::@5: scope:[clrscr]  from clrscr::@3
  [59] clrscr::line_text#1 = clrscr::line_text#5 + $28
  [60] clrscr::line_cols#1 = clrscr::line_cols#5 + $28
  [61] clrscr::l#1 = ++ clrscr::l#2
  to:clrscr::@1
clrscr::@4: scope:[clrscr]  from clrscr::@3
  [62] clrscr::line_text#5[clrscr::c#2] = ' '
  [63] clrscr::line_cols#5[clrscr::c#2] = LIGHT_BLUE
  [64] clrscr::c#1 = ++ clrscr::c#2
  to:clrscr::@3

void rol_fixed(dword rol_fixed::val)
rol_fixed: scope:[rol_fixed]  from main::@11
  [65] phi()
  [66] call cputs 
  to:rol_fixed::@1
rol_fixed::@1: scope:[rol_fixed]  from rol_fixed
  [67] printf_ulong::uvalue#0 = rol_fixed::val#0 << 0
  [68] call printf_sint 
  to:rol_fixed::@2
rol_fixed::@2: scope:[rol_fixed]  from rol_fixed::@1
  [69] phi()
  [70] call cputs 
  to:rol_fixed::@3
rol_fixed::@3: scope:[rol_fixed]  from rol_fixed::@2
  [71] phi()
  [72] call printf_ulong 
  to:rol_fixed::@4
rol_fixed::@4: scope:[rol_fixed]  from rol_fixed::@3
  [73] phi()
  [74] call cputs 
  to:rol_fixed::@5
rol_fixed::@5: scope:[rol_fixed]  from rol_fixed::@4
  [75] printf_ulong::uvalue#1 = rol_fixed::val#0 << 1
  [76] call printf_sint 
  to:rol_fixed::@6
rol_fixed::@6: scope:[rol_fixed]  from rol_fixed::@5
  [77] phi()
  [78] call cputs 
  to:rol_fixed::@7
rol_fixed::@7: scope:[rol_fixed]  from rol_fixed::@6
  [79] phi()
  [80] call printf_ulong 
  to:rol_fixed::@8
rol_fixed::@8: scope:[rol_fixed]  from rol_fixed::@7
  [81] phi()
  [82] call cputs 
  to:rol_fixed::@9
rol_fixed::@9: scope:[rol_fixed]  from rol_fixed::@8
  [83] printf_ulong::uvalue#2 = rol_fixed::val#0 << 2
  [84] call printf_sint 
  to:rol_fixed::@10
rol_fixed::@10: scope:[rol_fixed]  from rol_fixed::@9
  [85] phi()
  [86] call cputs 
  to:rol_fixed::@11
rol_fixed::@11: scope:[rol_fixed]  from rol_fixed::@10
  [87] phi()
  [88] call printf_ulong 
  to:rol_fixed::@12
rol_fixed::@12: scope:[rol_fixed]  from rol_fixed::@11
  [89] phi()
  [90] call cputs 
  to:rol_fixed::@13
rol_fixed::@13: scope:[rol_fixed]  from rol_fixed::@12
  [91] printf_ulong::uvalue#3 = rol_fixed::val#0 << 3
  [92] call printf_sint 
  to:rol_fixed::@14
rol_fixed::@14: scope:[rol_fixed]  from rol_fixed::@13
  [93] phi()
  [94] call cputs 
  to:rol_fixed::@15
rol_fixed::@15: scope:[rol_fixed]  from rol_fixed::@14
  [95] phi()
  [96] call printf_ulong 
  to:rol_fixed::@16
rol_fixed::@16: scope:[rol_fixed]  from rol_fixed::@15
  [97] phi()
  [98] call cputs 
  to:rol_fixed::@17
rol_fixed::@17: scope:[rol_fixed]  from rol_fixed::@16
  [99] printf_ulong::uvalue#4 = rol_fixed::val#0 << 4
  [100] call printf_sint 
  to:rol_fixed::@18
rol_fixed::@18: scope:[rol_fixed]  from rol_fixed::@17
  [101] phi()
  [102] call cputs 
  to:rol_fixed::@19
rol_fixed::@19: scope:[rol_fixed]  from rol_fixed::@18
  [103] phi()
  [104] call printf_ulong 
  to:rol_fixed::@20
rol_fixed::@20: scope:[rol_fixed]  from rol_fixed::@19
  [105] phi()
  [106] call cputs 
  to:rol_fixed::@21
rol_fixed::@21: scope:[rol_fixed]  from rol_fixed::@20
  [107] printf_ulong::uvalue#5 = rol_fixed::val#0 << 5
  [108] call printf_sint 
  to:rol_fixed::@22
rol_fixed::@22: scope:[rol_fixed]  from rol_fixed::@21
  [109] phi()
  [110] call cputs 
  to:rol_fixed::@23
rol_fixed::@23: scope:[rol_fixed]  from rol_fixed::@22
  [111] phi()
  [112] call printf_ulong 
  to:rol_fixed::@24
rol_fixed::@24: scope:[rol_fixed]  from rol_fixed::@23
  [113] phi()
  [114] call cputs 
  to:rol_fixed::@25
rol_fixed::@25: scope:[rol_fixed]  from rol_fixed::@24
  [115] printf_ulong::uvalue#6 = rol_fixed::val#0 << 6
  [116] call printf_sint 
  to:rol_fixed::@26
rol_fixed::@26: scope:[rol_fixed]  from rol_fixed::@25
  [117] phi()
  [118] call cputs 
  to:rol_fixed::@27
rol_fixed::@27: scope:[rol_fixed]  from rol_fixed::@26
  [119] phi()
  [120] call printf_ulong 
  to:rol_fixed::@28
rol_fixed::@28: scope:[rol_fixed]  from rol_fixed::@27
  [121] phi()
  [122] call cputs 
  to:rol_fixed::@29
rol_fixed::@29: scope:[rol_fixed]  from rol_fixed::@28
  [123] printf_ulong::uvalue#7 = rol_fixed::val#0 << 7
  [124] call printf_sint 
  to:rol_fixed::@30
rol_fixed::@30: scope:[rol_fixed]  from rol_fixed::@29
  [125] phi()
  [126] call cputs 
  to:rol_fixed::@31
rol_fixed::@31: scope:[rol_fixed]  from rol_fixed::@30
  [127] phi()
  [128] call printf_ulong 
  to:rol_fixed::@32
rol_fixed::@32: scope:[rol_fixed]  from rol_fixed::@31
  [129] phi()
  [130] call cputs 
  to:rol_fixed::@33
rol_fixed::@33: scope:[rol_fixed]  from rol_fixed::@32
  [131] printf_ulong::uvalue#8 = rol_fixed::val#0 << 8
  [132] call printf_sint 
  to:rol_fixed::@34
rol_fixed::@34: scope:[rol_fixed]  from rol_fixed::@33
  [133] phi()
  [134] call cputs 
  to:rol_fixed::@35
rol_fixed::@35: scope:[rol_fixed]  from rol_fixed::@34
  [135] phi()
  [136] call printf_ulong 
  to:rol_fixed::@36
rol_fixed::@36: scope:[rol_fixed]  from rol_fixed::@35
  [137] phi()
  [138] call cputs 
  to:rol_fixed::@37
rol_fixed::@37: scope:[rol_fixed]  from rol_fixed::@36
  [139] printf_ulong::uvalue#9 = rol_fixed::val#0 << 9
  [140] call printf_sint 
  to:rol_fixed::@38
rol_fixed::@38: scope:[rol_fixed]  from rol_fixed::@37
  [141] phi()
  [142] call cputs 
  to:rol_fixed::@39
rol_fixed::@39: scope:[rol_fixed]  from rol_fixed::@38
  [143] phi()
  [144] call printf_ulong 
  to:rol_fixed::@40
rol_fixed::@40: scope:[rol_fixed]  from rol_fixed::@39
  [145] phi()
  [146] call cputs 
  to:rol_fixed::@41
rol_fixed::@41: scope:[rol_fixed]  from rol_fixed::@40
  [147] printf_ulong::uvalue#10 = rol_fixed::val#0 << $c
  [148] call printf_sint 
  to:rol_fixed::@42
rol_fixed::@42: scope:[rol_fixed]  from rol_fixed::@41
  [149] phi()
  [150] call cputs 
  to:rol_fixed::@43
rol_fixed::@43: scope:[rol_fixed]  from rol_fixed::@42
  [151] phi()
  [152] call printf_ulong 
  to:rol_fixed::@44
rol_fixed::@44: scope:[rol_fixed]  from rol_fixed::@43
  [153] phi()
  [154] call cputs 
  to:rol_fixed::@45
rol_fixed::@45: scope:[rol_fixed]  from rol_fixed::@44
  [155] printf_ulong::uvalue#11 = rol_fixed::val#0 << $f
  [156] call printf_sint 
  to:rol_fixed::@46
rol_fixed::@46: scope:[rol_fixed]  from rol_fixed::@45
  [157] phi()
  [158] call cputs 
  to:rol_fixed::@47
rol_fixed::@47: scope:[rol_fixed]  from rol_fixed::@46
  [159] phi()
  [160] call printf_ulong 
  to:rol_fixed::@48
rol_fixed::@48: scope:[rol_fixed]  from rol_fixed::@47
  [161] phi()
  [162] call cputs 
  to:rol_fixed::@49
rol_fixed::@49: scope:[rol_fixed]  from rol_fixed::@48
  [163] printf_ulong::uvalue#12 = rol_fixed::val#0 << $10
  [164] call printf_sint 
  to:rol_fixed::@50
rol_fixed::@50: scope:[rol_fixed]  from rol_fixed::@49
  [165] phi()
  [166] call cputs 
  to:rol_fixed::@51
rol_fixed::@51: scope:[rol_fixed]  from rol_fixed::@50
  [167] phi()
  [168] call printf_ulong 
  to:rol_fixed::@52
rol_fixed::@52: scope:[rol_fixed]  from rol_fixed::@51
  [169] phi()
  [170] call cputs 
  to:rol_fixed::@53
rol_fixed::@53: scope:[rol_fixed]  from rol_fixed::@52
  [171] printf_ulong::uvalue#13 = rol_fixed::val#0 << $11
  [172] call printf_sint 
  to:rol_fixed::@54
rol_fixed::@54: scope:[rol_fixed]  from rol_fixed::@53
  [173] phi()
  [174] call cputs 
  to:rol_fixed::@55
rol_fixed::@55: scope:[rol_fixed]  from rol_fixed::@54
  [175] phi()
  [176] call printf_ulong 
  to:rol_fixed::@56
rol_fixed::@56: scope:[rol_fixed]  from rol_fixed::@55
  [177] phi()
  [178] call cputs 
  to:rol_fixed::@57
rol_fixed::@57: scope:[rol_fixed]  from rol_fixed::@56
  [179] printf_ulong::uvalue#14 = rol_fixed::val#0 << $14
  [180] call printf_sint 
  to:rol_fixed::@58
rol_fixed::@58: scope:[rol_fixed]  from rol_fixed::@57
  [181] phi()
  [182] call cputs 
  to:rol_fixed::@59
rol_fixed::@59: scope:[rol_fixed]  from rol_fixed::@58
  [183] phi()
  [184] call printf_ulong 
  to:rol_fixed::@60
rol_fixed::@60: scope:[rol_fixed]  from rol_fixed::@59
  [185] phi()
  [186] call cputs 
  to:rol_fixed::@61
rol_fixed::@61: scope:[rol_fixed]  from rol_fixed::@60
  [187] printf_ulong::uvalue#15 = rol_fixed::val#0 << $17
  [188] call printf_sint 
  to:rol_fixed::@62
rol_fixed::@62: scope:[rol_fixed]  from rol_fixed::@61
  [189] phi()
  [190] call cputs 
  to:rol_fixed::@63
rol_fixed::@63: scope:[rol_fixed]  from rol_fixed::@62
  [191] phi()
  [192] call printf_ulong 
  to:rol_fixed::@64
rol_fixed::@64: scope:[rol_fixed]  from rol_fixed::@63
  [193] phi()
  [194] call cputs 
  to:rol_fixed::@65
rol_fixed::@65: scope:[rol_fixed]  from rol_fixed::@64
  [195] printf_ulong::uvalue#16 = rol_fixed::val#0 << $18
  [196] call printf_sint 
  to:rol_fixed::@66
rol_fixed::@66: scope:[rol_fixed]  from rol_fixed::@65
  [197] phi()
  [198] call cputs 
  to:rol_fixed::@67
rol_fixed::@67: scope:[rol_fixed]  from rol_fixed::@66
  [199] phi()
  [200] call printf_ulong 
  to:rol_fixed::@68
rol_fixed::@68: scope:[rol_fixed]  from rol_fixed::@67
  [201] phi()
  [202] call cputs 
  to:rol_fixed::@69
rol_fixed::@69: scope:[rol_fixed]  from rol_fixed::@68
  [203] printf_ulong::uvalue#17 = rol_fixed::val#0 << $19
  [204] call printf_sint 
  to:rol_fixed::@70
rol_fixed::@70: scope:[rol_fixed]  from rol_fixed::@69
  [205] phi()
  [206] call cputs 
  to:rol_fixed::@71
rol_fixed::@71: scope:[rol_fixed]  from rol_fixed::@70
  [207] phi()
  [208] call printf_ulong 
  to:rol_fixed::@72
rol_fixed::@72: scope:[rol_fixed]  from rol_fixed::@71
  [209] phi()
  [210] call cputs 
  to:rol_fixed::@73
rol_fixed::@73: scope:[rol_fixed]  from rol_fixed::@72
  [211] printf_ulong::uvalue#18 = rol_fixed::val#0 << $1c
  [212] call printf_sint 
  to:rol_fixed::@74
rol_fixed::@74: scope:[rol_fixed]  from rol_fixed::@73
  [213] phi()
  [214] call cputs 
  to:rol_fixed::@75
rol_fixed::@75: scope:[rol_fixed]  from rol_fixed::@74
  [215] phi()
  [216] call printf_ulong 
  to:rol_fixed::@76
rol_fixed::@76: scope:[rol_fixed]  from rol_fixed::@75
  [217] phi()
  [218] call cputs 
  to:rol_fixed::@77
rol_fixed::@77: scope:[rol_fixed]  from rol_fixed::@76
  [219] printf_ulong::uvalue#19 = rol_fixed::val#0 << $1f
  [220] call printf_sint 
  to:rol_fixed::@78
rol_fixed::@78: scope:[rol_fixed]  from rol_fixed::@77
  [221] phi()
  [222] call cputs 
  to:rol_fixed::@79
rol_fixed::@79: scope:[rol_fixed]  from rol_fixed::@78
  [223] phi()
  [224] call printf_ulong 
  to:rol_fixed::@80
rol_fixed::@80: scope:[rol_fixed]  from rol_fixed::@79
  [225] phi()
  [226] call cputs 
  to:rol_fixed::@81
rol_fixed::@81: scope:[rol_fixed]  from rol_fixed::@80
  [227] printf_ulong::uvalue#20 = rol_fixed::val#0 << $20
  [228] call printf_sint 
  to:rol_fixed::@82
rol_fixed::@82: scope:[rol_fixed]  from rol_fixed::@81
  [229] phi()
  [230] call cputs 
  to:rol_fixed::@83
rol_fixed::@83: scope:[rol_fixed]  from rol_fixed::@82
  [231] phi()
  [232] call printf_ulong 
  to:rol_fixed::@84
rol_fixed::@84: scope:[rol_fixed]  from rol_fixed::@83
  [233] phi()
  [234] call cputs 
  to:rol_fixed::@return
rol_fixed::@return: scope:[rol_fixed]  from rol_fixed::@84
  [235] return 
  to:@return

byte kbhit()
kbhit: scope:[kbhit]  from main::@3 main::@5 main::@7 main::@9
  [236] *kbhit::CIA1_PORT_A = 0
  [237] kbhit::return#0 = ~ *kbhit::CIA1_PORT_B
  to:kbhit::@return
kbhit::@return: scope:[kbhit]  from kbhit
  [238] return 
  to:@return

void ror_fixed(dword ror_fixed::val)
ror_fixed: scope:[ror_fixed]  from main::@13
  [239] phi()
  [240] call cputs 
  to:ror_fixed::@1
ror_fixed::@1: scope:[ror_fixed]  from ror_fixed
  [241] printf_ulong::uvalue#21 = ror_fixed::val#0 >> 0
  [242] call printf_sint 
  to:ror_fixed::@2
ror_fixed::@2: scope:[ror_fixed]  from ror_fixed::@1
  [243] phi()
  [244] call cputs 
  to:ror_fixed::@3
ror_fixed::@3: scope:[ror_fixed]  from ror_fixed::@2
  [245] phi()
  [246] call printf_ulong 
  to:ror_fixed::@4
ror_fixed::@4: scope:[ror_fixed]  from ror_fixed::@3
  [247] phi()
  [248] call cputs 
  to:ror_fixed::@5
ror_fixed::@5: scope:[ror_fixed]  from ror_fixed::@4
  [249] printf_ulong::uvalue#22 = ror_fixed::val#0 >> 1
  [250] call printf_sint 
  to:ror_fixed::@6
ror_fixed::@6: scope:[ror_fixed]  from ror_fixed::@5
  [251] phi()
  [252] call cputs 
  to:ror_fixed::@7
ror_fixed::@7: scope:[ror_fixed]  from ror_fixed::@6
  [253] phi()
  [254] call printf_ulong 
  to:ror_fixed::@8
ror_fixed::@8: scope:[ror_fixed]  from ror_fixed::@7
  [255] phi()
  [256] call cputs 
  to:ror_fixed::@9
ror_fixed::@9: scope:[ror_fixed]  from ror_fixed::@8
  [257] printf_ulong::uvalue#23 = ror_fixed::val#0 >> 2
  [258] call printf_sint 
  to:ror_fixed::@10
ror_fixed::@10: scope:[ror_fixed]  from ror_fixed::@9
  [259] phi()
  [260] call cputs 
  to:ror_fixed::@11
ror_fixed::@11: scope:[ror_fixed]  from ror_fixed::@10
  [261] phi()
  [262] call printf_ulong 
  to:ror_fixed::@12
ror_fixed::@12: scope:[ror_fixed]  from ror_fixed::@11
  [263] phi()
  [264] call cputs 
  to:ror_fixed::@13
ror_fixed::@13: scope:[ror_fixed]  from ror_fixed::@12
  [265] printf_ulong::uvalue#24 = ror_fixed::val#0 >> 3
  [266] call printf_sint 
  to:ror_fixed::@14
ror_fixed::@14: scope:[ror_fixed]  from ror_fixed::@13
  [267] phi()
  [268] call cputs 
  to:ror_fixed::@15
ror_fixed::@15: scope:[ror_fixed]  from ror_fixed::@14
  [269] phi()
  [270] call printf_ulong 
  to:ror_fixed::@16
ror_fixed::@16: scope:[ror_fixed]  from ror_fixed::@15
  [271] phi()
  [272] call cputs 
  to:ror_fixed::@17
ror_fixed::@17: scope:[ror_fixed]  from ror_fixed::@16
  [273] printf_ulong::uvalue#25 = ror_fixed::val#0 >> 4
  [274] call printf_sint 
  to:ror_fixed::@18
ror_fixed::@18: scope:[ror_fixed]  from ror_fixed::@17
  [275] phi()
  [276] call cputs 
  to:ror_fixed::@19
ror_fixed::@19: scope:[ror_fixed]  from ror_fixed::@18
  [277] phi()
  [278] call printf_ulong 
  to:ror_fixed::@20
ror_fixed::@20: scope:[ror_fixed]  from ror_fixed::@19
  [279] phi()
  [280] call cputs 
  to:ror_fixed::@21
ror_fixed::@21: scope:[ror_fixed]  from ror_fixed::@20
  [281] printf_ulong::uvalue#26 = ror_fixed::val#0 >> 5
  [282] call printf_sint 
  to:ror_fixed::@22
ror_fixed::@22: scope:[ror_fixed]  from ror_fixed::@21
  [283] phi()
  [284] call cputs 
  to:ror_fixed::@23
ror_fixed::@23: scope:[ror_fixed]  from ror_fixed::@22
  [285] phi()
  [286] call printf_ulong 
  to:ror_fixed::@24
ror_fixed::@24: scope:[ror_fixed]  from ror_fixed::@23
  [287] phi()
  [288] call cputs 
  to:ror_fixed::@25
ror_fixed::@25: scope:[ror_fixed]  from ror_fixed::@24
  [289] printf_ulong::uvalue#27 = ror_fixed::val#0 >> 6
  [290] call printf_sint 
  to:ror_fixed::@26
ror_fixed::@26: scope:[ror_fixed]  from ror_fixed::@25
  [291] phi()
  [292] call cputs 
  to:ror_fixed::@27
ror_fixed::@27: scope:[ror_fixed]  from ror_fixed::@26
  [293] phi()
  [294] call printf_ulong 
  to:ror_fixed::@28
ror_fixed::@28: scope:[ror_fixed]  from ror_fixed::@27
  [295] phi()
  [296] call cputs 
  to:ror_fixed::@29
ror_fixed::@29: scope:[ror_fixed]  from ror_fixed::@28
  [297] printf_ulong::uvalue#28 = ror_fixed::val#0 >> 7
  [298] call printf_sint 
  to:ror_fixed::@30
ror_fixed::@30: scope:[ror_fixed]  from ror_fixed::@29
  [299] phi()
  [300] call cputs 
  to:ror_fixed::@31
ror_fixed::@31: scope:[ror_fixed]  from ror_fixed::@30
  [301] phi()
  [302] call printf_ulong 
  to:ror_fixed::@32
ror_fixed::@32: scope:[ror_fixed]  from ror_fixed::@31
  [303] phi()
  [304] call cputs 
  to:ror_fixed::@33
ror_fixed::@33: scope:[ror_fixed]  from ror_fixed::@32
  [305] printf_ulong::uvalue#29 = ror_fixed::val#0 >> 8
  [306] call printf_sint 
  to:ror_fixed::@34
ror_fixed::@34: scope:[ror_fixed]  from ror_fixed::@33
  [307] phi()
  [308] call cputs 
  to:ror_fixed::@35
ror_fixed::@35: scope:[ror_fixed]  from ror_fixed::@34
  [309] phi()
  [310] call printf_ulong 
  to:ror_fixed::@36
ror_fixed::@36: scope:[ror_fixed]  from ror_fixed::@35
  [311] phi()
  [312] call cputs 
  to:ror_fixed::@37
ror_fixed::@37: scope:[ror_fixed]  from ror_fixed::@36
  [313] printf_ulong::uvalue#30 = ror_fixed::val#0 >> 9
  [314] call printf_sint 
  to:ror_fixed::@38
ror_fixed::@38: scope:[ror_fixed]  from ror_fixed::@37
  [315] phi()
  [316] call cputs 
  to:ror_fixed::@39
ror_fixed::@39: scope:[ror_fixed]  from ror_fixed::@38
  [317] phi()
  [318] call printf_ulong 
  to:ror_fixed::@40
ror_fixed::@40: scope:[ror_fixed]  from ror_fixed::@39
  [319] phi()
  [320] call cputs 
  to:ror_fixed::@41
ror_fixed::@41: scope:[ror_fixed]  from ror_fixed::@40
  [321] printf_ulong::uvalue#31 = ror_fixed::val#0 >> $c
  [322] call printf_sint 
  to:ror_fixed::@42
ror_fixed::@42: scope:[ror_fixed]  from ror_fixed::@41
  [323] phi()
  [324] call cputs 
  to:ror_fixed::@43
ror_fixed::@43: scope:[ror_fixed]  from ror_fixed::@42
  [325] phi()
  [326] call printf_ulong 
  to:ror_fixed::@44
ror_fixed::@44: scope:[ror_fixed]  from ror_fixed::@43
  [327] phi()
  [328] call cputs 
  to:ror_fixed::@45
ror_fixed::@45: scope:[ror_fixed]  from ror_fixed::@44
  [329] printf_ulong::uvalue#32 = ror_fixed::val#0 >> $f
  [330] call printf_sint 
  to:ror_fixed::@46
ror_fixed::@46: scope:[ror_fixed]  from ror_fixed::@45
  [331] phi()
  [332] call cputs 
  to:ror_fixed::@47
ror_fixed::@47: scope:[ror_fixed]  from ror_fixed::@46
  [333] phi()
  [334] call printf_ulong 
  to:ror_fixed::@48
ror_fixed::@48: scope:[ror_fixed]  from ror_fixed::@47
  [335] phi()
  [336] call cputs 
  to:ror_fixed::@49
ror_fixed::@49: scope:[ror_fixed]  from ror_fixed::@48
  [337] printf_ulong::uvalue#33 = ror_fixed::val#0 >> $10
  [338] call printf_sint 
  to:ror_fixed::@50
ror_fixed::@50: scope:[ror_fixed]  from ror_fixed::@49
  [339] phi()
  [340] call cputs 
  to:ror_fixed::@51
ror_fixed::@51: scope:[ror_fixed]  from ror_fixed::@50
  [341] phi()
  [342] call printf_ulong 
  to:ror_fixed::@52
ror_fixed::@52: scope:[ror_fixed]  from ror_fixed::@51
  [343] phi()
  [344] call cputs 
  to:ror_fixed::@53
ror_fixed::@53: scope:[ror_fixed]  from ror_fixed::@52
  [345] printf_ulong::uvalue#34 = ror_fixed::val#0 >> $11
  [346] call printf_sint 
  to:ror_fixed::@54
ror_fixed::@54: scope:[ror_fixed]  from ror_fixed::@53
  [347] phi()
  [348] call cputs 
  to:ror_fixed::@55
ror_fixed::@55: scope:[ror_fixed]  from ror_fixed::@54
  [349] phi()
  [350] call printf_ulong 
  to:ror_fixed::@56
ror_fixed::@56: scope:[ror_fixed]  from ror_fixed::@55
  [351] phi()
  [352] call cputs 
  to:ror_fixed::@57
ror_fixed::@57: scope:[ror_fixed]  from ror_fixed::@56
  [353] printf_ulong::uvalue#35 = ror_fixed::val#0 >> $14
  [354] call printf_sint 
  to:ror_fixed::@58
ror_fixed::@58: scope:[ror_fixed]  from ror_fixed::@57
  [355] phi()
  [356] call cputs 
  to:ror_fixed::@59
ror_fixed::@59: scope:[ror_fixed]  from ror_fixed::@58
  [357] phi()
  [358] call printf_ulong 
  to:ror_fixed::@60
ror_fixed::@60: scope:[ror_fixed]  from ror_fixed::@59
  [359] phi()
  [360] call cputs 
  to:ror_fixed::@61
ror_fixed::@61: scope:[ror_fixed]  from ror_fixed::@60
  [361] printf_ulong::uvalue#36 = ror_fixed::val#0 >> $17
  [362] call printf_sint 
  to:ror_fixed::@62
ror_fixed::@62: scope:[ror_fixed]  from ror_fixed::@61
  [363] phi()
  [364] call cputs 
  to:ror_fixed::@63
ror_fixed::@63: scope:[ror_fixed]  from ror_fixed::@62
  [365] phi()
  [366] call printf_ulong 
  to:ror_fixed::@64
ror_fixed::@64: scope:[ror_fixed]  from ror_fixed::@63
  [367] phi()
  [368] call cputs 
  to:ror_fixed::@65
ror_fixed::@65: scope:[ror_fixed]  from ror_fixed::@64
  [369] printf_ulong::uvalue#37 = ror_fixed::val#0 >> $18
  [370] call printf_sint 
  to:ror_fixed::@66
ror_fixed::@66: scope:[ror_fixed]  from ror_fixed::@65
  [371] phi()
  [372] call cputs 
  to:ror_fixed::@67
ror_fixed::@67: scope:[ror_fixed]  from ror_fixed::@66
  [373] phi()
  [374] call printf_ulong 
  to:ror_fixed::@68
ror_fixed::@68: scope:[ror_fixed]  from ror_fixed::@67
  [375] phi()
  [376] call cputs 
  to:ror_fixed::@69
ror_fixed::@69: scope:[ror_fixed]  from ror_fixed::@68
  [377] printf_ulong::uvalue#38 = ror_fixed::val#0 >> $19
  [378] call printf_sint 
  to:ror_fixed::@70
ror_fixed::@70: scope:[ror_fixed]  from ror_fixed::@69
  [379] phi()
  [380] call cputs 
  to:ror_fixed::@71
ror_fixed::@71: scope:[ror_fixed]  from ror_fixed::@70
  [381] phi()
  [382] call printf_ulong 
  to:ror_fixed::@72
ror_fixed::@72: scope:[ror_fixed]  from ror_fixed::@71
  [383] phi()
  [384] call cputs 
  to:ror_fixed::@73
ror_fixed::@73: scope:[ror_fixed]  from ror_fixed::@72
  [385] printf_ulong::uvalue#39 = ror_fixed::val#0 >> $1c
  [386] call printf_sint 
  to:ror_fixed::@74
ror_fixed::@74: scope:[ror_fixed]  from ror_fixed::@73
  [387] phi()
  [388] call cputs 
  to:ror_fixed::@75
ror_fixed::@75: scope:[ror_fixed]  from ror_fixed::@74
  [389] phi()
  [390] call printf_ulong 
  to:ror_fixed::@76
ror_fixed::@76: scope:[ror_fixed]  from ror_fixed::@75
  [391] phi()
  [392] call cputs 
  to:ror_fixed::@77
ror_fixed::@77: scope:[ror_fixed]  from ror_fixed::@76
  [393] printf_ulong::uvalue#40 = ror_fixed::val#0 >> $1f
  [394] call printf_sint 
  to:ror_fixed::@78
ror_fixed::@78: scope:[ror_fixed]  from ror_fixed::@77
  [395] phi()
  [396] call cputs 
  to:ror_fixed::@79
ror_fixed::@79: scope:[ror_fixed]  from ror_fixed::@78
  [397] phi()
  [398] call printf_ulong 
  to:ror_fixed::@80
ror_fixed::@80: scope:[ror_fixed]  from ror_fixed::@79
  [399] phi()
  [400] call cputs 
  to:ror_fixed::@81
ror_fixed::@81: scope:[ror_fixed]  from ror_fixed::@80
  [401] printf_ulong::uvalue#41 = ror_fixed::val#0 >> $20
  [402] call printf_sint 
  to:ror_fixed::@82
ror_fixed::@82: scope:[ror_fixed]  from ror_fixed::@81
  [403] phi()
  [404] call cputs 
  to:ror_fixed::@83
ror_fixed::@83: scope:[ror_fixed]  from ror_fixed::@82
  [405] phi()
  [406] call printf_ulong 
  to:ror_fixed::@84
ror_fixed::@84: scope:[ror_fixed]  from ror_fixed::@83
  [407] phi()
  [408] call cputs 
  to:ror_fixed::@return
ror_fixed::@return: scope:[ror_fixed]  from ror_fixed::@84
  [409] return 
  to:@return

void rol_var(dword rol_var::val)
rol_var: scope:[rol_var]  from main::@15
  [410] phi()
  [411] call cputs 
  to:rol_var::@1
rol_var::@1: scope:[rol_var]  from rol_var rol_var::@6
  [412] rol_var::i#2 = phi( rol_var/0, rol_var::@6/rol_var::i#1 )
  [413] if(rol_var::i#2<$15*SIZEOF_BYTE) goto rol_var::@2
  to:rol_var::@return
rol_var::@return: scope:[rol_var]  from rol_var::@1
  [414] return 
  to:@return
rol_var::@2: scope:[rol_var]  from rol_var::@1
  [415] printf_ulong::uvalue#42 = rol_var::val#0 << rols[rol_var::i#2]
  [416] printf_uchar::uvalue#0 = rols[rol_var::i#2]
  [417] call printf_uchar 
  to:rol_var::@3
rol_var::@3: scope:[rol_var]  from rol_var::@2
  [418] phi()
  [419] call cputs 
  to:rol_var::@4
rol_var::@4: scope:[rol_var]  from rol_var::@3
  [420] phi()
  [421] call printf_ulong 
  to:rol_var::@5
rol_var::@5: scope:[rol_var]  from rol_var::@4
  [422] phi()
  [423] call cputs 
  to:rol_var::@6
rol_var::@6: scope:[rol_var]  from rol_var::@5
  [424] rol_var::i#1 = ++ rol_var::i#2
  to:rol_var::@1

void ror_var(dword ror_var::val)
ror_var: scope:[ror_var]  from main::@17
  [425] phi()
  [426] call cputs 
  to:ror_var::@1
ror_var::@1: scope:[ror_var]  from ror_var ror_var::@6
  [427] ror_var::i#2 = phi( ror_var/0, ror_var::@6/ror_var::i#1 )
  [428] if(ror_var::i#2<$15*SIZEOF_BYTE) goto ror_var::@2
  to:ror_var::@return
ror_var::@return: scope:[ror_var]  from ror_var::@1
  [429] return 
  to:@return
ror_var::@2: scope:[ror_var]  from ror_var::@1
  [430] printf_ulong::uvalue#43 = ror_var::val#0 >> rols[ror_var::i#2]
  [431] printf_uchar::uvalue#1 = rols[ror_var::i#2]
  [432] call printf_uchar 
  to:ror_var::@3
ror_var::@3: scope:[ror_var]  from ror_var::@2
  [433] phi()
  [434] call cputs 
  to:ror_var::@4
ror_var::@4: scope:[ror_var]  from ror_var::@3
  [435] phi()
  [436] call printf_ulong 
  to:ror_var::@5
ror_var::@5: scope:[ror_var]  from ror_var::@4
  [437] phi()
  [438] call cputs 
  to:ror_var::@6
ror_var::@6: scope:[ror_var]  from ror_var::@5
  [439] ror_var::i#1 = ++ ror_var::i#2
  to:ror_var::@1

void cputs(to_nomodify byte* cputs::s)
cputs: scope:[cputs]  from printf_number_buffer::@4 rol_fixed rol_fixed::@10 rol_fixed::@12 rol_fixed::@14 rol_fixed::@16 rol_fixed::@18 rol_fixed::@2 rol_fixed::@20 rol_fixed::@22 rol_fixed::@24 rol_fixed::@26 rol_fixed::@28 rol_fixed::@30 rol_fixed::@32 rol_fixed::@34 rol_fixed::@36 rol_fixed::@38 rol_fixed::@4 rol_fixed::@40 rol_fixed::@42 rol_fixed::@44 rol_fixed::@46 rol_fixed::@48 rol_fixed::@50 rol_fixed::@52 rol_fixed::@54 rol_fixed::@56 rol_fixed::@58 rol_fixed::@6 rol_fixed::@60 rol_fixed::@62 rol_fixed::@64 rol_fixed::@66 rol_fixed::@68 rol_fixed::@70 rol_fixed::@72 rol_fixed::@74 rol_fixed::@76 rol_fixed::@78 rol_fixed::@8 rol_fixed::@80 rol_fixed::@82 rol_fixed::@84 rol_var rol_var::@3 rol_var::@5 ror_fixed ror_fixed::@10 ror_fixed::@12 ror_fixed::@14 ror_fixed::@16 ror_fixed::@18 ror_fixed::@2 ror_fixed::@20 ror_fixed::@22 ror_fixed::@24 ror_fixed::@26 ror_fixed::@28 ror_fixed::@30 ror_fixed::@32 ror_fixed::@34 ror_fixed::@36 ror_fixed::@38 ror_fixed::@4 ror_fixed::@40 ror_fixed::@42 ror_fixed::@44 ror_fixed::@46 ror_fixed::@48 ror_fixed::@50 ror_fixed::@52 ror_fixed::@54 ror_fixed::@56 ror_fixed::@58 ror_fixed::@6 ror_fixed::@60 ror_fixed::@62 ror_fixed::@64 ror_fixed::@66 ror_fixed::@68 ror_fixed::@70 ror_fixed::@72 ror_fixed::@74 ror_fixed::@76 ror_fixed::@78 ror_fixed::@8 ror_fixed::@80 ror_fixed::@82 ror_fixed::@84 ror_var ror_var::@3 ror_var::@5
  [440] cputs::s#95 = phi( printf_number_buffer::@4/(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS, rol_fixed/rol_fixed::s, rol_fixed::@10/s1, rol_fixed::@12/s2, rol_fixed::@14/s1, rol_fixed::@16/s2, rol_fixed::@18/s1, rol_fixed::@2/s1, rol_fixed::@20/s2, rol_fixed::@22/s1, rol_fixed::@24/s2, rol_fixed::@26/s1, rol_fixed::@28/s2, rol_fixed::@30/s1, rol_fixed::@32/s2, rol_fixed::@34/s1, rol_fixed::@36/s2, rol_fixed::@38/s1, rol_fixed::@4/s2, rol_fixed::@40/s2, rol_fixed::@42/s1, rol_fixed::@44/s2, rol_fixed::@46/s1, rol_fixed::@48/s2, rol_fixed::@50/s1, rol_fixed::@52/s2, rol_fixed::@54/s1, rol_fixed::@56/s2, rol_fixed::@58/s1, rol_fixed::@6/s1, rol_fixed::@60/s2, rol_fixed::@62/s1, rol_fixed::@64/s2, rol_fixed::@66/s1, rol_fixed::@68/s2, rol_fixed::@70/s1, rol_fixed::@72/s2, rol_fixed::@74/s1, rol_fixed::@76/s2, rol_fixed::@78/s1, rol_fixed::@8/s2, rol_fixed::@80/s2, rol_fixed::@82/s1, rol_fixed::@84/s2, rol_var/rol_var::s, rol_var::@3/s1, rol_var::@5/s2, ror_fixed/ror_fixed::s, ror_fixed::@10/s1, ror_fixed::@12/s2, ror_fixed::@14/s1, ror_fixed::@16/s2, ror_fixed::@18/s1, ror_fixed::@2/s1, ror_fixed::@20/s2, ror_fixed::@22/s1, ror_fixed::@24/s2, ror_fixed::@26/s1, ror_fixed::@28/s2, ror_fixed::@30/s1, ror_fixed::@32/s2, ror_fixed::@34/s1, ror_fixed::@36/s2, ror_fixed::@38/s1, ror_fixed::@4/s2, ror_fixed::@40/s2, ror_fixed::@42/s1, ror_fixed::@44/s2, ror_fixed::@46/s1, ror_fixed::@48/s2, ror_fixed::@50/s1, ror_fixed::@52/s2, ror_fixed::@54/s1, ror_fixed::@56/s2, ror_fixed::@58/s1, ror_fixed::@6/s1, ror_fixed::@60/s2, ror_fixed::@62/s1, ror_fixed::@64/s2, ror_fixed::@66/s1, ror_fixed::@68/s2, ror_fixed::@70/s1, ror_fixed::@72/s2, ror_fixed::@74/s1, ror_fixed::@76/s2, ror_fixed::@78/s1, ror_fixed::@8/s2, ror_fixed::@80/s2, ror_fixed::@82/s1, ror_fixed::@84/s2, ror_var/ror_var::s, ror_var::@3/s1, ror_var::@5/s2 )
  to:cputs::@1
cputs::@1: scope:[cputs]  from cputs cputs::@2
  [441] cputs::s#94 = phi( cputs/cputs::s#95, cputs::@2/cputs::s#0 )
  [442] cputs::c#1 = *cputs::s#94
  [443] cputs::s#0 = ++ cputs::s#94
  [444] if(0!=cputs::c#1) goto cputs::@2
  to:cputs::@return
cputs::@return: scope:[cputs]  from cputs::@1
  [445] return 
  to:@return
cputs::@2: scope:[cputs]  from cputs::@1
  [446] cputc::c#0 = cputs::c#1
  [447] call cputc 
  to:cputs::@1

void printf_sint(signed word printf_sint::value , byte printf_sint::format_min_length , byte printf_sint::format_justify_left , byte printf_sint::format_sign_always , byte printf_sint::format_zero_padding , byte printf_sint::format_upper_case , byte printf_sint::format_radix)
printf_sint: scope:[printf_sint]  from rol_fixed::@1 rol_fixed::@13 rol_fixed::@17 rol_fixed::@21 rol_fixed::@25 rol_fixed::@29 rol_fixed::@33 rol_fixed::@37 rol_fixed::@41 rol_fixed::@45 rol_fixed::@49 rol_fixed::@5 rol_fixed::@53 rol_fixed::@57 rol_fixed::@61 rol_fixed::@65 rol_fixed::@69 rol_fixed::@73 rol_fixed::@77 rol_fixed::@81 rol_fixed::@9 ror_fixed::@1 ror_fixed::@13 ror_fixed::@17 ror_fixed::@21 ror_fixed::@25 ror_fixed::@29 ror_fixed::@33 ror_fixed::@37 ror_fixed::@41 ror_fixed::@45 ror_fixed::@49 ror_fixed::@5 ror_fixed::@53 ror_fixed::@57 ror_fixed::@61 ror_fixed::@65 ror_fixed::@69 ror_fixed::@73 ror_fixed::@77 ror_fixed::@81 ror_fixed::@9
  [448] printf_sint::value#43 = phi( rol_fixed::@1/0, rol_fixed::@13/3, rol_fixed::@17/4, rol_fixed::@21/5, rol_fixed::@25/6, rol_fixed::@29/7, rol_fixed::@33/8, rol_fixed::@37/9, rol_fixed::@41/$c, rol_fixed::@45/$f, rol_fixed::@49/$10, rol_fixed::@5/1, rol_fixed::@53/$11, rol_fixed::@57/$14, rol_fixed::@61/$17, rol_fixed::@65/$18, rol_fixed::@69/$19, rol_fixed::@73/$1c, rol_fixed::@77/$1f, rol_fixed::@81/$20, rol_fixed::@9/2, ror_fixed::@1/0, ror_fixed::@13/3, ror_fixed::@17/4, ror_fixed::@21/5, ror_fixed::@25/6, ror_fixed::@29/7, ror_fixed::@33/8, ror_fixed::@37/9, ror_fixed::@41/$c, ror_fixed::@45/$f, ror_fixed::@49/$10, ror_fixed::@5/1, ror_fixed::@53/$11, ror_fixed::@57/$14, ror_fixed::@61/$17, ror_fixed::@65/$18, ror_fixed::@69/$19, ror_fixed::@73/$1c, ror_fixed::@77/$1f, ror_fixed::@81/$20, ror_fixed::@9/2 )
  [449] *((byte*)&printf_buffer) = 0
  [450] if(printf_sint::value#43<0) goto printf_sint::@1
  to:printf_sint::@2
printf_sint::@1: scope:[printf_sint]  from printf_sint
  [451] printf_sint::value#0 = - printf_sint::value#43
  [452] *((byte*)&printf_buffer) = '-'
  to:printf_sint::@2
printf_sint::@2: scope:[printf_sint]  from printf_sint printf_sint::@1
  [453] printf_sint::value#45 = phi( printf_sint::@1/printf_sint::value#0, printf_sint/printf_sint::value#43 )
  [454] utoa::value#1 = (word)printf_sint::value#45
  [455] call utoa 
  to:printf_sint::@3
printf_sint::@3: scope:[printf_sint]  from printf_sint::@2
  [456] printf_number_buffer::buffer_sign#1 = *((byte*)&printf_buffer)
  [457] call printf_number_buffer 
  to:printf_sint::@return
printf_sint::@return: scope:[printf_sint]  from printf_sint::@3
  [458] return 
  to:@return

void printf_ulong(dword printf_ulong::uvalue , byte printf_ulong::format_min_length , byte printf_ulong::format_justify_left , byte printf_ulong::format_sign_always , byte printf_ulong::format_zero_padding , byte printf_ulong::format_upper_case , byte printf_ulong::format_radix)
printf_ulong: scope:[printf_ulong]  from rol_fixed::@11 rol_fixed::@15 rol_fixed::@19 rol_fixed::@23 rol_fixed::@27 rol_fixed::@3 rol_fixed::@31 rol_fixed::@35 rol_fixed::@39 rol_fixed::@43 rol_fixed::@47 rol_fixed::@51 rol_fixed::@55 rol_fixed::@59 rol_fixed::@63 rol_fixed::@67 rol_fixed::@7 rol_fixed::@71 rol_fixed::@75 rol_fixed::@79 rol_fixed::@83 rol_var::@4 ror_fixed::@11 ror_fixed::@15 ror_fixed::@19 ror_fixed::@23 ror_fixed::@27 ror_fixed::@3 ror_fixed::@31 ror_fixed::@35 ror_fixed::@39 ror_fixed::@43 ror_fixed::@47 ror_fixed::@51 ror_fixed::@55 ror_fixed::@59 ror_fixed::@63 ror_fixed::@67 ror_fixed::@7 ror_fixed::@71 ror_fixed::@75 ror_fixed::@79 ror_fixed::@83 ror_var::@4
  [459] printf_ulong::uvalue#44 = phi( rol_fixed::@11/printf_ulong::uvalue#2, rol_fixed::@15/printf_ulong::uvalue#3, rol_fixed::@19/printf_ulong::uvalue#4, rol_fixed::@23/printf_ulong::uvalue#5, rol_fixed::@27/printf_ulong::uvalue#6, rol_fixed::@3/printf_ulong::uvalue#0, rol_fixed::@31/printf_ulong::uvalue#7, rol_fixed::@35/printf_ulong::uvalue#8, rol_fixed::@39/printf_ulong::uvalue#9, rol_fixed::@43/printf_ulong::uvalue#10, rol_fixed::@47/printf_ulong::uvalue#11, rol_fixed::@51/printf_ulong::uvalue#12, rol_fixed::@55/printf_ulong::uvalue#13, rol_fixed::@59/printf_ulong::uvalue#14, rol_fixed::@63/printf_ulong::uvalue#15, rol_fixed::@67/printf_ulong::uvalue#16, rol_fixed::@7/printf_ulong::uvalue#1, rol_fixed::@71/printf_ulong::uvalue#17, rol_fixed::@75/printf_ulong::uvalue#18, rol_fixed::@79/printf_ulong::uvalue#19, rol_fixed::@83/printf_ulong::uvalue#20, rol_var::@4/printf_ulong::uvalue#42, ror_fixed::@11/printf_ulong::uvalue#23, ror_fixed::@15/printf_ulong::uvalue#24, ror_fixed::@19/printf_ulong::uvalue#25, ror_fixed::@23/printf_ulong::uvalue#26, ror_fixed::@27/printf_ulong::uvalue#27, ror_fixed::@3/printf_ulong::uvalue#21, ror_fixed::@31/printf_ulong::uvalue#28, ror_fixed::@35/printf_ulong::uvalue#29, ror_fixed::@39/printf_ulong::uvalue#30, ror_fixed::@43/printf_ulong::uvalue#31, ror_fixed::@47/printf_ulong::uvalue#32, ror_fixed::@51/printf_ulong::uvalue#33, ror_fixed::@55/printf_ulong::uvalue#34, ror_fixed::@59/printf_ulong::uvalue#35, ror_fixed::@63/printf_ulong::uvalue#36, ror_fixed::@67/printf_ulong::uvalue#37, ror_fixed::@7/printf_ulong::uvalue#22, ror_fixed::@71/printf_ulong::uvalue#38, ror_fixed::@75/printf_ulong::uvalue#39, ror_fixed::@79/printf_ulong::uvalue#40, ror_fixed::@83/printf_ulong::uvalue#41, ror_var::@4/printf_ulong::uvalue#43 )
  to:printf_ulong::@1
printf_ulong::@1: scope:[printf_ulong]  from printf_ulong
  [460] *((byte*)&printf_buffer) = 0
  [461] ultoa::value#1 = printf_ulong::uvalue#44
  [462] call ultoa 
  to:printf_ulong::@2
printf_ulong::@2: scope:[printf_ulong]  from printf_ulong::@1
  [463] printf_number_buffer::buffer_sign#0 = *((byte*)&printf_buffer)
  [464] call printf_number_buffer 
  to:printf_ulong::@return
printf_ulong::@return: scope:[printf_ulong]  from printf_ulong::@2
  [465] return 
  to:@return

void printf_uchar(byte printf_uchar::uvalue , byte printf_uchar::format_min_length , byte printf_uchar::format_justify_left , byte printf_uchar::format_sign_always , byte printf_uchar::format_zero_padding , byte printf_uchar::format_upper_case , byte printf_uchar::format_radix)
printf_uchar: scope:[printf_uchar]  from rol_var::@2 ror_var::@2
  [466] printf_uchar::uvalue#2 = phi( rol_var::@2/printf_uchar::uvalue#0, ror_var::@2/printf_uchar::uvalue#1 )
  to:printf_uchar::@1
printf_uchar::@1: scope:[printf_uchar]  from printf_uchar
  [467] *((byte*)&printf_buffer) = 0
  [468] uctoa::value#1 = printf_uchar::uvalue#2
  [469] call uctoa 
  to:printf_uchar::@2
printf_uchar::@2: scope:[printf_uchar]  from printf_uchar::@1
  [470] printf_number_buffer::buffer_sign#2 = *((byte*)&printf_buffer)
  [471] call printf_number_buffer 
  to:printf_uchar::@return
printf_uchar::@return: scope:[printf_uchar]  from printf_uchar::@2
  [472] return 
  to:@return

void cputc(byte cputc::c)
cputc: scope:[cputc]  from cputs::@2 printf_number_buffer::@8 printf_padding::@2
  [473] cputc::c#3 = phi( cputs::@2/cputc::c#0, printf_number_buffer::@8/cputc::c#2, printf_padding::@2/cputc::c#1 )
  [474] if(cputc::c#3=='
') goto cputc::@1
  to:cputc::@2
cputc::@2: scope:[cputc]  from cputc
  [475] conio_line_text[conio_cursor_x] = cputc::c#3
  [476] conio_line_color[conio_cursor_x] = LIGHT_BLUE
  [477] conio_cursor_x = ++ conio_cursor_x
  [478] if(conio_cursor_x!=$28) goto cputc::@return
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc::@2
  [479] phi()
  [480] call cputln 
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@1 cputc::@2 cputc::@3
  [481] return 
  to:@return
cputc::@1: scope:[cputc]  from cputc
  [482] phi()
  [483] call cputln 
  to:cputc::@return

void utoa(word utoa::value , byte* utoa::buffer , byte utoa::radix)
utoa: scope:[utoa]  from printf_sint::@2
  [484] phi()
  to:utoa::@1
utoa::@1: scope:[utoa]  from utoa utoa::@4
  [485] utoa::buffer#11 = phi( utoa::@4/utoa::buffer#14, utoa/(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  [485] utoa::started#2 = phi( utoa::@4/utoa::started#4, utoa/0 )
  [485] utoa::value#2 = phi( utoa::@4/utoa::value#6, utoa/utoa::value#1 )
  [485] utoa::digit#2 = phi( utoa::@4/utoa::digit#1, utoa/0 )
  [486] if(utoa::digit#2<5-1) goto utoa::@2
  to:utoa::@3
utoa::@3: scope:[utoa]  from utoa::@1
  [487] utoa::$11 = (byte)utoa::value#2
  [488] *utoa::buffer#11 = DIGITS[utoa::$11]
  [489] utoa::buffer#3 = ++ utoa::buffer#11
  [490] *utoa::buffer#3 = 0
  to:utoa::@return
utoa::@return: scope:[utoa]  from utoa::@3
  [491] return 
  to:@return
utoa::@2: scope:[utoa]  from utoa::@1
  [492] utoa::$10 = utoa::digit#2 << 1
  [493] utoa::digit_value#0 = RADIX_DECIMAL_VALUES[utoa::$10]
  [494] if(0!=utoa::started#2) goto utoa::@5
  to:utoa::@7
utoa::@7: scope:[utoa]  from utoa::@2
  [495] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@5
  to:utoa::@4
utoa::@4: scope:[utoa]  from utoa::@6 utoa::@7
  [496] utoa::buffer#14 = phi( utoa::@7/utoa::buffer#11, utoa::@6/utoa::buffer#4 )
  [496] utoa::started#4 = phi( utoa::@7/utoa::started#2, utoa::@6/1 )
  [496] utoa::value#6 = phi( utoa::@7/utoa::value#2, utoa::@6/utoa::value#0 )
  [497] utoa::digit#1 = ++ utoa::digit#2
  to:utoa::@1
utoa::@5: scope:[utoa]  from utoa::@2 utoa::@7
  [498] utoa_append::buffer#0 = utoa::buffer#11
  [499] utoa_append::value#0 = utoa::value#2
  [500] utoa_append::sub#0 = utoa::digit_value#0
  [501] call utoa_append 
  [502] utoa_append::return#0 = utoa_append::value#2
  to:utoa::@6
utoa::@6: scope:[utoa]  from utoa::@5
  [503] utoa::value#0 = utoa_append::return#0
  [504] utoa::buffer#4 = ++ utoa::buffer#11
  to:utoa::@4

void printf_number_buffer(byte printf_number_buffer::buffer_sign , byte* printf_number_buffer::buffer_digits , byte printf_number_buffer::format_min_length , byte printf_number_buffer::format_justify_left , byte printf_number_buffer::format_sign_always , byte printf_number_buffer::format_zero_padding , byte printf_number_buffer::format_upper_case , byte printf_number_buffer::format_radix)
printf_number_buffer: scope:[printf_number_buffer]  from printf_sint::@3 printf_uchar::@2 printf_ulong::@2
  [505] printf_number_buffer::buffer_sign#10 = phi( printf_sint::@3/printf_number_buffer::buffer_sign#1, printf_uchar::@2/printf_number_buffer::buffer_sign#2, printf_ulong::@2/printf_number_buffer::buffer_sign#0 )
  [505] printf_number_buffer::format_zero_padding#10 = phi( printf_sint::@3/0, printf_uchar::@2/0, printf_ulong::@2/1 )
  [505] printf_number_buffer::format_min_length#3 = phi( printf_sint::@3/2, printf_uchar::@2/2, printf_ulong::@2/8 )
  [506] if(0==printf_number_buffer::format_min_length#3) goto printf_number_buffer::@1
  to:printf_number_buffer::@5
printf_number_buffer::@5: scope:[printf_number_buffer]  from printf_number_buffer
  [507] phi()
  [508] call strlen 
  [509] strlen::return#2 = strlen::len#2
  to:printf_number_buffer::@11
printf_number_buffer::@11: scope:[printf_number_buffer]  from printf_number_buffer::@5
  [510] printf_number_buffer::$19 = strlen::return#2
  [511] printf_number_buffer::len#0 = (signed byte)printf_number_buffer::$19
  [512] if(0==printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@10
  to:printf_number_buffer::@6
printf_number_buffer::@6: scope:[printf_number_buffer]  from printf_number_buffer::@11
  [513] printf_number_buffer::len#1 = ++ printf_number_buffer::len#0
  to:printf_number_buffer::@10
printf_number_buffer::@10: scope:[printf_number_buffer]  from printf_number_buffer::@11 printf_number_buffer::@6
  [514] printf_number_buffer::len#2 = phi( printf_number_buffer::@11/printf_number_buffer::len#0, printf_number_buffer::@6/printf_number_buffer::len#1 )
  [515] printf_number_buffer::padding#1 = (signed byte)printf_number_buffer::format_min_length#3 - printf_number_buffer::len#2
  [516] if(printf_number_buffer::padding#1>=0) goto printf_number_buffer::@15
  to:printf_number_buffer::@1
printf_number_buffer::@15: scope:[printf_number_buffer]  from printf_number_buffer::@10
  [517] phi()
  to:printf_number_buffer::@1
printf_number_buffer::@1: scope:[printf_number_buffer]  from printf_number_buffer printf_number_buffer::@10 printf_number_buffer::@15
  [518] printf_number_buffer::padding#10 = phi( printf_number_buffer/0, printf_number_buffer::@15/printf_number_buffer::padding#1, printf_number_buffer::@10/0 )
  to:printf_number_buffer::@13
printf_number_buffer::@13: scope:[printf_number_buffer]  from printf_number_buffer::@1
  [519] if(0!=printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@2
  to:printf_number_buffer::@12
printf_number_buffer::@12: scope:[printf_number_buffer]  from printf_number_buffer::@13
  [520] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@7
  to:printf_number_buffer::@2
printf_number_buffer::@7: scope:[printf_number_buffer]  from printf_number_buffer::@12
  [521] printf_padding::length#0 = (byte)printf_number_buffer::padding#10
  [522] call printf_padding 
  to:printf_number_buffer::@2
printf_number_buffer::@2: scope:[printf_number_buffer]  from printf_number_buffer::@12 printf_number_buffer::@13 printf_number_buffer::@7
  [523] if(0==printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@3
  to:printf_number_buffer::@8
printf_number_buffer::@8: scope:[printf_number_buffer]  from printf_number_buffer::@2
  [524] cputc::c#2 = printf_number_buffer::buffer_sign#10
  [525] call cputc 
  to:printf_number_buffer::@3
printf_number_buffer::@3: scope:[printf_number_buffer]  from printf_number_buffer::@2 printf_number_buffer::@8
  [526] if(0==printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@4
  to:printf_number_buffer::@14
printf_number_buffer::@14: scope:[printf_number_buffer]  from printf_number_buffer::@3
  [527] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@9
  to:printf_number_buffer::@4
printf_number_buffer::@9: scope:[printf_number_buffer]  from printf_number_buffer::@14
  [528] printf_padding::length#1 = (byte)printf_number_buffer::padding#10
  [529] call printf_padding 
  to:printf_number_buffer::@4
printf_number_buffer::@4: scope:[printf_number_buffer]  from printf_number_buffer::@14 printf_number_buffer::@3 printf_number_buffer::@9
  [530] phi()
  [531] call cputs 
  to:printf_number_buffer::@return
printf_number_buffer::@return: scope:[printf_number_buffer]  from printf_number_buffer::@4
  [532] return 
  to:@return

void ultoa(dword ultoa::value , byte* ultoa::buffer , byte ultoa::radix)
ultoa: scope:[ultoa]  from printf_ulong::@1
  [533] phi()
  to:ultoa::@1
ultoa::@1: scope:[ultoa]  from ultoa ultoa::@4
  [534] ultoa::buffer#11 = phi( ultoa::@4/ultoa::buffer#14, ultoa/(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  [534] ultoa::started#2 = phi( ultoa::@4/ultoa::started#4, ultoa/0 )
  [534] ultoa::value#2 = phi( ultoa::@4/ultoa::value#6, ultoa/ultoa::value#1 )
  [534] ultoa::digit#2 = phi( ultoa::@4/ultoa::digit#1, ultoa/0 )
  [535] if(ultoa::digit#2<8-1) goto ultoa::@2
  to:ultoa::@3
ultoa::@3: scope:[ultoa]  from ultoa::@1
  [536] ultoa::$11 = (byte)ultoa::value#2
  [537] *ultoa::buffer#11 = DIGITS[ultoa::$11]
  [538] ultoa::buffer#3 = ++ ultoa::buffer#11
  [539] *ultoa::buffer#3 = 0
  to:ultoa::@return
ultoa::@return: scope:[ultoa]  from ultoa::@3
  [540] return 
  to:@return
ultoa::@2: scope:[ultoa]  from ultoa::@1
  [541] ultoa::$10 = ultoa::digit#2 << 2
  [542] ultoa::digit_value#0 = RADIX_HEXADECIMAL_VALUES_LONG[ultoa::$10]
  [543] if(0!=ultoa::started#2) goto ultoa::@5
  to:ultoa::@7
ultoa::@7: scope:[ultoa]  from ultoa::@2
  [544] if(ultoa::value#2>=ultoa::digit_value#0) goto ultoa::@5
  to:ultoa::@4
ultoa::@4: scope:[ultoa]  from ultoa::@6 ultoa::@7
  [545] ultoa::buffer#14 = phi( ultoa::@7/ultoa::buffer#11, ultoa::@6/ultoa::buffer#4 )
  [545] ultoa::started#4 = phi( ultoa::@7/ultoa::started#2, ultoa::@6/1 )
  [545] ultoa::value#6 = phi( ultoa::@7/ultoa::value#2, ultoa::@6/ultoa::value#0 )
  [546] ultoa::digit#1 = ++ ultoa::digit#2
  to:ultoa::@1
ultoa::@5: scope:[ultoa]  from ultoa::@2 ultoa::@7
  [547] ultoa_append::buffer#0 = ultoa::buffer#11
  [548] ultoa_append::value#0 = ultoa::value#2
  [549] ultoa_append::sub#0 = ultoa::digit_value#0
  [550] call ultoa_append 
  [551] ultoa_append::return#0 = ultoa_append::value#2
  to:ultoa::@6
ultoa::@6: scope:[ultoa]  from ultoa::@5
  [552] ultoa::value#0 = ultoa_append::return#0
  [553] ultoa::buffer#4 = ++ ultoa::buffer#11
  to:ultoa::@4

void uctoa(byte uctoa::value , byte* uctoa::buffer , byte uctoa::radix)
uctoa: scope:[uctoa]  from printf_uchar::@1
  [554] phi()
  to:uctoa::@1
uctoa::@1: scope:[uctoa]  from uctoa uctoa::@4
  [555] uctoa::buffer#11 = phi( uctoa::@4/uctoa::buffer#14, uctoa/(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  [555] uctoa::started#2 = phi( uctoa::@4/uctoa::started#4, uctoa/0 )
  [555] uctoa::value#2 = phi( uctoa::@4/uctoa::value#6, uctoa/uctoa::value#1 )
  [555] uctoa::digit#2 = phi( uctoa::@4/uctoa::digit#1, uctoa/0 )
  [556] if(uctoa::digit#2<3-1) goto uctoa::@2
  to:uctoa::@3
uctoa::@3: scope:[uctoa]  from uctoa::@1
  [557] *uctoa::buffer#11 = DIGITS[uctoa::value#2]
  [558] uctoa::buffer#3 = ++ uctoa::buffer#11
  [559] *uctoa::buffer#3 = 0
  to:uctoa::@return
uctoa::@return: scope:[uctoa]  from uctoa::@3
  [560] return 
  to:@return
uctoa::@2: scope:[uctoa]  from uctoa::@1
  [561] uctoa::digit_value#0 = RADIX_DECIMAL_VALUES_CHAR[uctoa::digit#2]
  [562] if(0!=uctoa::started#2) goto uctoa::@5
  to:uctoa::@7
uctoa::@7: scope:[uctoa]  from uctoa::@2
  [563] if(uctoa::value#2>=uctoa::digit_value#0) goto uctoa::@5
  to:uctoa::@4
uctoa::@4: scope:[uctoa]  from uctoa::@6 uctoa::@7
  [564] uctoa::buffer#14 = phi( uctoa::@7/uctoa::buffer#11, uctoa::@6/uctoa::buffer#4 )
  [564] uctoa::started#4 = phi( uctoa::@7/uctoa::started#2, uctoa::@6/1 )
  [564] uctoa::value#6 = phi( uctoa::@7/uctoa::value#2, uctoa::@6/uctoa::value#0 )
  [565] uctoa::digit#1 = ++ uctoa::digit#2
  to:uctoa::@1
uctoa::@5: scope:[uctoa]  from uctoa::@2 uctoa::@7
  [566] uctoa_append::buffer#0 = uctoa::buffer#11
  [567] uctoa_append::value#0 = uctoa::value#2
  [568] uctoa_append::sub#0 = uctoa::digit_value#0
  [569] call uctoa_append 
  [570] uctoa_append::return#0 = uctoa_append::value#2
  to:uctoa::@6
uctoa::@6: scope:[uctoa]  from uctoa::@5
  [571] uctoa::value#0 = uctoa_append::return#0
  [572] uctoa::buffer#4 = ++ uctoa::buffer#11
  to:uctoa::@4

void cputln()
cputln: scope:[cputln]  from cputc::@1 cputc::@3
  [573] conio_line_text = conio_line_text + $28
  [574] conio_line_color = conio_line_color + $28
  [575] conio_cursor_x = 0
  [576] conio_cursor_y = ++ conio_cursor_y
  [577] call cscroll 
  to:cputln::@return
cputln::@return: scope:[cputln]  from cputln
  [578] return 
  to:@return

word utoa_append(byte* utoa_append::buffer , word utoa_append::value , word utoa_append::sub)
utoa_append: scope:[utoa_append]  from utoa::@5
  [579] phi()
  to:utoa_append::@1
utoa_append::@1: scope:[utoa_append]  from utoa_append utoa_append::@2
  [580] utoa_append::digit#2 = phi( utoa_append/0, utoa_append::@2/utoa_append::digit#1 )
  [580] utoa_append::value#2 = phi( utoa_append/utoa_append::value#0, utoa_append::@2/utoa_append::value#1 )
  [581] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2
  to:utoa_append::@3
utoa_append::@3: scope:[utoa_append]  from utoa_append::@1
  [582] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2]
  to:utoa_append::@return
utoa_append::@return: scope:[utoa_append]  from utoa_append::@3
  [583] return 
  to:@return
utoa_append::@2: scope:[utoa_append]  from utoa_append::@1
  [584] utoa_append::digit#1 = ++ utoa_append::digit#2
  [585] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0
  to:utoa_append::@1

word strlen(byte* strlen::str)
strlen: scope:[strlen]  from printf_number_buffer::@5
  [586] phi()
  to:strlen::@1
strlen::@1: scope:[strlen]  from strlen strlen::@2
  [587] strlen::len#2 = phi( strlen/0, strlen::@2/strlen::len#1 )
  [587] strlen::str#2 = phi( strlen/(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS, strlen::@2/strlen::str#0 )
  [588] if(0!=*strlen::str#2) goto strlen::@2
  to:strlen::@return
strlen::@return: scope:[strlen]  from strlen::@1
  [589] return 
  to:@return
strlen::@2: scope:[strlen]  from strlen::@1
  [590] strlen::len#1 = ++ strlen::len#2
  [591] strlen::str#0 = ++ strlen::str#2
  to:strlen::@1

void printf_padding(byte printf_padding::pad , byte printf_padding::length)
printf_padding: scope:[printf_padding]  from printf_number_buffer::@7 printf_number_buffer::@9
  [592] printf_padding::pad#5 = phi( printf_number_buffer::@9/'0', printf_number_buffer::@7/' ' )
  [592] printf_padding::length#4 = phi( printf_number_buffer::@9/printf_padding::length#1, printf_number_buffer::@7/printf_padding::length#0 )
  to:printf_padding::@1
printf_padding::@1: scope:[printf_padding]  from printf_padding printf_padding::@3
  [593] printf_padding::i#2 = phi( printf_padding/0, printf_padding::@3/printf_padding::i#1 )
  [594] if(printf_padding::i#2<printf_padding::length#4) goto printf_padding::@2
  to:printf_padding::@return
printf_padding::@return: scope:[printf_padding]  from printf_padding::@1
  [595] return 
  to:@return
printf_padding::@2: scope:[printf_padding]  from printf_padding::@1
  [596] cputc::c#1 = printf_padding::pad#5
  [597] call cputc 
  to:printf_padding::@3
printf_padding::@3: scope:[printf_padding]  from printf_padding::@2
  [598] printf_padding::i#1 = ++ printf_padding::i#2
  to:printf_padding::@1

dword ultoa_append(byte* ultoa_append::buffer , dword ultoa_append::value , dword ultoa_append::sub)
ultoa_append: scope:[ultoa_append]  from ultoa::@5
  [599] phi()
  to:ultoa_append::@1
ultoa_append::@1: scope:[ultoa_append]  from ultoa_append ultoa_append::@2
  [600] ultoa_append::digit#2 = phi( ultoa_append/0, ultoa_append::@2/ultoa_append::digit#1 )
  [600] ultoa_append::value#2 = phi( ultoa_append/ultoa_append::value#0, ultoa_append::@2/ultoa_append::value#1 )
  [601] if(ultoa_append::value#2>=ultoa_append::sub#0) goto ultoa_append::@2
  to:ultoa_append::@3
ultoa_append::@3: scope:[ultoa_append]  from ultoa_append::@1
  [602] *ultoa_append::buffer#0 = DIGITS[ultoa_append::digit#2]
  to:ultoa_append::@return
ultoa_append::@return: scope:[ultoa_append]  from ultoa_append::@3
  [603] return 
  to:@return
ultoa_append::@2: scope:[ultoa_append]  from ultoa_append::@1
  [604] ultoa_append::digit#1 = ++ ultoa_append::digit#2
  [605] ultoa_append::value#1 = ultoa_append::value#2 - ultoa_append::sub#0
  to:ultoa_append::@1

byte uctoa_append(byte* uctoa_append::buffer , byte uctoa_append::value , byte uctoa_append::sub)
uctoa_append: scope:[uctoa_append]  from uctoa::@5
  [606] phi()
  to:uctoa_append::@1
uctoa_append::@1: scope:[uctoa_append]  from uctoa_append uctoa_append::@2
  [607] uctoa_append::digit#2 = phi( uctoa_append/0, uctoa_append::@2/uctoa_append::digit#1 )
  [607] uctoa_append::value#2 = phi( uctoa_append/uctoa_append::value#0, uctoa_append::@2/uctoa_append::value#1 )
  [608] if(uctoa_append::value#2>=uctoa_append::sub#0) goto uctoa_append::@2
  to:uctoa_append::@3
uctoa_append::@3: scope:[uctoa_append]  from uctoa_append::@1
  [609] *uctoa_append::buffer#0 = DIGITS[uctoa_append::digit#2]
  to:uctoa_append::@return
uctoa_append::@return: scope:[uctoa_append]  from uctoa_append::@3
  [610] return 
  to:@return
uctoa_append::@2: scope:[uctoa_append]  from uctoa_append::@1
  [611] uctoa_append::digit#1 = ++ uctoa_append::digit#2
  [612] uctoa_append::value#1 = uctoa_append::value#2 - uctoa_append::sub#0
  to:uctoa_append::@1

void cscroll()
cscroll: scope:[cscroll]  from cputln
  [613] if(conio_cursor_y!=$19) goto cscroll::@return
  to:cscroll::@1
cscroll::@1: scope:[cscroll]  from cscroll
  [614] phi()
  [615] call memcpy 
  to:cscroll::@2
cscroll::@2: scope:[cscroll]  from cscroll::@1
  [616] phi()
  [617] call memcpy 
  to:cscroll::@3
cscroll::@3: scope:[cscroll]  from cscroll::@2
  [618] phi()
  [619] call memset 
  to:cscroll::@4
cscroll::@4: scope:[cscroll]  from cscroll::@3
  [620] phi()
  [621] call memset 
  to:cscroll::@5
cscroll::@5: scope:[cscroll]  from cscroll::@4
  [622] conio_line_text = conio_line_text - $28
  [623] conio_line_color = conio_line_color - $28
  [624] conio_cursor_y = -- conio_cursor_y
  to:cscroll::@return
cscroll::@return: scope:[cscroll]  from cscroll cscroll::@5
  [625] return 
  to:@return

void* memcpy(void* memcpy::destination , void* memcpy::source , word memcpy::num)
memcpy: scope:[memcpy]  from cscroll::@1 cscroll::@2
  [626] memcpy::destination#2 = phi( cscroll::@1/(void*)DEFAULT_SCREEN, cscroll::@2/(void*)COLORRAM )
  [626] memcpy::source#2 = phi( cscroll::@1/(void*)DEFAULT_SCREEN+$28, cscroll::@2/(void*)COLORRAM+$28 )
  [627] memcpy::src_end#0 = (byte*)memcpy::source#2 + (word)$19*$28-$28
  [628] memcpy::src#4 = (byte*)memcpy::source#2
  [629] memcpy::dst#4 = (byte*)memcpy::destination#2
  to:memcpy::@1
memcpy::@1: scope:[memcpy]  from memcpy memcpy::@2
  [630] memcpy::dst#2 = phi( memcpy/memcpy::dst#4, memcpy::@2/memcpy::dst#1 )
  [630] memcpy::src#2 = phi( memcpy/memcpy::src#4, memcpy::@2/memcpy::src#1 )
  [631] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2
  to:memcpy::@return
memcpy::@return: scope:[memcpy]  from memcpy::@1
  [632] return 
  to:@return
memcpy::@2: scope:[memcpy]  from memcpy::@1
  [633] *memcpy::dst#2 = *memcpy::src#2
  [634] memcpy::dst#1 = ++ memcpy::dst#2
  [635] memcpy::src#1 = ++ memcpy::src#2
  to:memcpy::@1

void* memset(void* memset::str , byte memset::c , word memset::num)
memset: scope:[memset]  from cscroll::@3 cscroll::@4
  [636] memset::c#4 = phi( cscroll::@3/' ', cscroll::@4/LIGHT_BLUE )
  [636] memset::str#3 = phi( cscroll::@3/(void*)DEFAULT_SCREEN+(word)$19*$28-$28, cscroll::@4/(void*)COLORRAM+(word)$19*$28-$28 )
  to:memset::@1
memset::@1: scope:[memset]  from memset
  [637] memset::end#0 = (byte*)memset::str#3 + $28
  [638] memset::dst#4 = (byte*)memset::str#3
  to:memset::@2
memset::@2: scope:[memset]  from memset::@1 memset::@3
  [639] memset::dst#2 = phi( memset::@1/memset::dst#4, memset::@3/memset::dst#1 )
  [640] if(memset::dst#2!=memset::end#0) goto memset::@3
  to:memset::@return
memset::@return: scope:[memset]  from memset::@2
  [641] return 
  to:@return
memset::@3: scope:[memset]  from memset::@2
  [642] *memset::dst#2 = memset::c#4
  [643] memset::dst#1 = ++ memset::dst#2
  to:memset::@2
