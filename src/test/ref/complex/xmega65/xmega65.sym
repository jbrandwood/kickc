__constant char * const BG_COLOR = (char *) 53281
__constant const char BLACK = 0
__constant char * const COLS = (char *) 55296
__constant const char JMP = $4c
__constant char MESSAGE[] = "hello world!"
__constant const char NOP = $ea
__constant char * const RASTER = (char *) 53266
__constant char * const SCREEN = (char *) 1024
__constant struct SysCall SYSCALLS[] = { { xjmp: JMP, syscall: &syscall1, xnop: NOP }, { xjmp: JMP, syscall: &syscall2, xnop: NOP } }
__constant struct SysCall SYSCALL_RESET[] = { { xjmp: JMP, syscall: &main, xnop: NOP } }
__constant char * const VICII_MEMORY = (char *) 53272
__constant const char WHITE = 1
void main()
char *main::msg
char *main::msg#1 // msg zp[2]:4 22.0
char *main::msg#2 // msg zp[2]:4 11.0
char *main::sc
char *main::sc#1 // sc zp[2]:6 11.0
char *main::sc#2 // sc zp[2]:6 11.0
void * memset(void *str , char c , unsigned int num)
char memset::c
char memset::c#4 // reg byte x 14.428571428571429
char *memset::dst
char *memset::dst#1 // dst zp[2]:2 202.0
char *memset::dst#2 // dst zp[2]:2 138.33333333333331
char *memset::dst#4 // dst zp[2]:2 22.0
char *memset::end
char *memset::end#0 // end zp[2]:8 18.666666666666664
unsigned int memset::num
void *memset::return
void *memset::str
void *memset::str#3 // str zp[2]:2
void syscall1()
void syscall2()

zp[2]:4 [ main::msg#2 main::msg#1 ]
zp[2]:6 [ main::sc#2 main::sc#1 ]
zp[2]:2 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 ]
reg byte x [ memset::c#4 ]
zp[2]:8 [ memset::end#0 ]
