
void main()
main: scope:[main]  from
  [0] phi()
  [1] call memset 
  to:main::@10
main::@10: scope:[main]  from main
  [2] phi()
  [3] call memset 
  to:main::@11
main::@11: scope:[main]  from main::@10
  [4] phi()
  [5] call memset 
  to:main::@12
main::@12: scope:[main]  from main::@11
  [6] *((byte*)TED+OFFSET_STRUCT_MOS7360_TED_BG_COLOR) = 0
  [7] *((byte*)TED+OFFSET_STRUCT_MOS7360_TED_BORDER_COLOR) = 0
  to:main::@1
main::@1: scope:[main]  from main::@12 main::@6
  [8] rand_state#12 = phi( main::@12/1, main::@6/rand_state#10 )
  [8] main::x#11 = phi( main::@12/$14, main::@6/main::x#10 )
  [8] main::y#11 = phi( main::@12/$c, main::@6/main::y#10 )
  to:main::@2
main::@2: scope:[main]  from main::@1
  [9] main::$24 = (word)main::y#11
  [10] main::$29 = main::$24 << 2
  [11] main::$30 = main::$29 + main::$24
  [12] main::$3 = main::$30 << 3
  [13] main::offset#0 = main::$3 + main::x#11
  [14] main::$6 = VISITS + main::offset#0
  [15] *main::$6 = ++ *main::$6
  [16] main::cnt#0 = *main::$6
  [17] main::$8 = DEFAULT_COLORRAM + main::offset#0
  [18] main::$9 = main::cnt#0 & $f
  [19] *main::$8 = FADE[main::$9]
  [20] call rand 
  [21] rand::return#2 = rand::return#0
  to:main::@13
main::@13: scope:[main]  from main::@2
  [22] main::$10 = rand::return#2
  [23] main::rnd#0 = > main::$10
  [24] main::$12 = main::rnd#0 & $80
  [25] if(0!=main::$12) goto main::@3
  to:main::@7
main::@7: scope:[main]  from main::@13
  [26] main::$13 = main::rnd#0 & $40
  [27] if(0!=main::$13) goto main::@4
  to:main::@8
main::@8: scope:[main]  from main::@7
  [28] main::y#2 = -- main::y#11
  [29] if(main::y#2!=$ff) goto main::@14
  to:main::@6
main::@14: scope:[main]  from main::@8
  [30] phi()
  to:main::@6
main::@6: scope:[main]  from main::@14 main::@15 main::@16 main::@17 main::@4 main::@5 main::@6 main::@8 main::@9
  [31] main::x#10 = phi( main::@14/main::x#11, main::@8/main::x#11, main::@15/main::x#2, main::@9/0, main::@16/main::x#11, main::@4/main::x#11, main::@17/main::x#1, main::@5/$27, main::@6/main::x#10 )
  [31] main::y#10 = phi( main::@14/main::y#2, main::@8/0, main::@15/main::y#11, main::@9/main::y#11, main::@16/main::y#1, main::@4/$18, main::@17/main::y#11, main::@5/main::y#11, main::@6/main::y#10 )
  [32] if(*((byte*)TED+OFFSET_STRUCT_MOS7360_TED_RASTER_LO)!=$ff) goto main::@6
  to:main::@1
main::@4: scope:[main]  from main::@7
  [33] main::y#1 = ++ main::y#11
  [34] if(main::y#1!=$19) goto main::@16
  to:main::@6
main::@16: scope:[main]  from main::@4
  [35] phi()
  to:main::@6
main::@3: scope:[main]  from main::@13
  [36] main::$18 = main::rnd#0 & $40
  [37] if(0!=main::$18) goto main::@5
  to:main::@9
main::@9: scope:[main]  from main::@3
  [38] main::x#2 = -- main::x#11
  [39] if(main::x#2!=$ff) goto main::@15
  to:main::@6
main::@15: scope:[main]  from main::@9
  [40] phi()
  to:main::@6
main::@5: scope:[main]  from main::@3
  [41] main::x#1 = ++ main::x#11
  [42] if(main::x#1!=$28) goto main::@17
  to:main::@6
main::@17: scope:[main]  from main::@5
  [43] phi()
  to:main::@6

void* memset(void* memset::str , byte memset::c , word memset::num)
memset: scope:[memset]  from main main::@10 main::@11
  [44] memset::c#5 = phi( main/$a0, main::@10/0, main::@11/0 )
  [44] memset::str#4 = phi( main/(void*)DEFAULT_SCREEN, main::@10/(void*)DEFAULT_COLORRAM, main::@11/(void*)VISITS )
  to:memset::@1
memset::@1: scope:[memset]  from memset
  [45] memset::end#0 = (byte*)memset::str#4 + $3e8
  [46] memset::dst#4 = (byte*)memset::str#4
  to:memset::@2
memset::@2: scope:[memset]  from memset::@1 memset::@3
  [47] memset::dst#2 = phi( memset::@1/memset::dst#4, memset::@3/memset::dst#1 )
  [48] if(memset::dst#2!=memset::end#0) goto memset::@3
  to:memset::@return
memset::@return: scope:[memset]  from memset::@2
  [49] return 
  to:@return
memset::@3: scope:[memset]  from memset::@2
  [50] *memset::dst#2 = memset::c#5
  [51] memset::dst#1 = ++ memset::dst#2
  to:memset::@2

word rand()
rand: scope:[rand]  from main::@2
  [52] rand::$0 = rand_state#12 << 7
  [53] rand_state#0 = rand_state#12 ^ rand::$0
  [54] rand::$1 = rand_state#0 >> 9
  [55] rand_state#1 = rand_state#0 ^ rand::$1
  [56] rand::$2 = rand_state#1 << 8
  [57] rand_state#10 = rand_state#1 ^ rand::$2
  [58] rand::return#0 = rand_state#10
  to:rand::@return
rand::@return: scope:[rand]  from rand
  [59] return 
  to:@return
