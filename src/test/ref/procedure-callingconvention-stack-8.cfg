
(void()) _start()
_start: scope:[_start]  from
  [0] phi()
  to:_start::_init1
_start::_init1: scope:[_start]  from _start
  [1] (byte) val ← (byte) 0
  to:_start::@1
_start::@1: scope:[_start]  from _start::_init1
  [2] phi()
  [3] callexecute main 
  to:_start::@return
_start::@return: scope:[_start]  from _start::@1
  [4] return 
  to:@return

__stackcall (void()) printline()
printline: scope:[printline]  from
  [5] phi()
  to:printline::@1
printline::@1: scope:[printline]  from printline printline::@2
  [6] (byte) printline::i#2 ← phi( printline/(byte) 0 printline::@2/(byte) printline::i#1 )
  [7] if((byte) printline::i#2<(byte) $28) goto printline::@2
  to:printline::@return
printline::@return: scope:[printline]  from printline::@1
  [8] return 
  to:@return
printline::@2: scope:[printline]  from printline::@1
  [9] *((const nomodify byte*) SCREEN + (byte) printline::i#2) ← (byte) '*'
  [10] (byte) printline::i#1 ← ++ (byte) printline::i#2
  to:printline::@1

__stackcall (void()) main()
main: scope:[main]  from
  [11] (byte) val ← (byte) '-'
  [12] callexecute printline 
  [13] *((const nomodify byte*) SCREEN+(byte) $50) ← (byte) val
  to:main::@return
main::@return: scope:[main]  from main
  [14] return 
  to:@return
