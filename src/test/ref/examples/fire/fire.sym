(label) @1
(label) @begin
(label) @end
(byte*) BGCOL
(const byte*) BGCOL#0 BGCOL = (byte*) 53281
(byte) BLACK
(const byte) BLACK#0 BLACK = (byte) 0
(byte*) BORDERCOL
(const byte*) BORDERCOL#0 BORDERCOL = (byte*) 53280
(byte*) BUFFER
(const byte*) BUFFER#0 BUFFER = (byte*) 16384
(byte*) CHARSET
(const byte*) CHARSET#0 CHARSET = (byte*) 12288
(byte*) COLS
(const byte*) COLS#0 COLS = (byte*) 55296
(byte*) D018
(const byte*) D018#0 D018 = (byte*) 53272
(byte*) SCREEN1
(const byte*) SCREEN1#0 SCREEN1 = (byte*) 14336
(byte*) SCREEN2
(const byte*) SCREEN2#0 SCREEN2 = (byte*) 15360
(byte) SID_CONTROL_NOISE
(const byte) SID_CONTROL_NOISE#0 SID_CONTROL_NOISE = (byte) $80
(byte*) SID_VOICE3_CONTROL
(const byte*) SID_VOICE3_CONTROL#0 SID_VOICE3_CONTROL = (byte*) 54290
(word*) SID_VOICE3_FREQ
(const word*) SID_VOICE3_FREQ#0 SID_VOICE3_FREQ = (word*) 54286
(byte*) SID_VOICE3_OSC
(const byte*) SID_VOICE3_OSC#0 SID_VOICE3_OSC = (byte*) 54299
(byte) YELLOW
(const byte) YELLOW#0 YELLOW = (byte) 7
(void()) fillscreen((byte*) fillscreen::screen , (byte) fillscreen::fill)
(label) fillscreen::@1
(label) fillscreen::@return
(byte) fillscreen::fill
(byte) fillscreen::fill#5 reg byte x 1.8333333333333333
(word) fillscreen::i
(word) fillscreen::i#1 i zp ZP_WORD:9 16.5
(word) fillscreen::i#2 i zp ZP_WORD:9 7.333333333333333
(byte*) fillscreen::screen
(byte*) fillscreen::screen#4 screen zp ZP_WORD:12 7.333333333333333
(byte*) fillscreen::screen#5 screen zp ZP_WORD:12 17.5
(byte*) fillscreen::screen#6 screen zp ZP_WORD:12 2.0
(void()) fire((byte*) fire::screenbase)
(byte~) fire::$10 reg byte a 202.0
(byte~) fire::$11 reg byte a 202.0
(byte~) fire::$12 reg byte a 202.0
(byte~) fire::$4 reg byte a 202.0
(byte~) fire::$5 reg byte a 202.0
(byte~) fire::$6 reg byte a 202.0
(label) fire::@1
(label) fire::@1_1
(label) fire::@2
(label) fire::@3
(label) fire::@4
(label) fire::@5
(label) fire::@6
(label) fire::@7
(label) fire::@return
(byte*) fire::buffer
(byte*) fire::buffer#10 buffer zp ZP_WORD:4 73.45454545454545
(byte*) fire::buffer#2 buffer zp ZP_WORD:4 151.5
(byte*) fire::buffer#3 buffer#3 zp ZP_WORD:9 151.5
(byte*) fire::buffer#7 buffer#7 zp ZP_WORD:9 44.888888888888886
(byte) fire::c
(byte) fire::c#0 reg byte a 202.0
(byte) fire::c#1 reg byte a 202.0
(byte) fire::c#2 reg byte a 303.0
(byte*) fire::screen
(byte*) fire::screen#0 screen zp ZP_WORD:2 0.26666666666666666
(byte*) fire::screen#1 screen zp ZP_WORD:2 4.0
(byte*) fire::screen#10 screen#10 zp ZP_WORD:12 30.5
(byte*~) fire::screen#15 screen#15 zp ZP_WORD:12 4.0
(byte*) fire::screen#2 screen#2 zp ZP_WORD:12 67.33333333333333
(byte*) fire::screen#3 screen zp ZP_WORD:2 67.33333333333333
(byte*) fire::screen#5 screen zp ZP_WORD:2 38.125
(byte*) fire::screenbase
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::@8
(label) main::toD0181
(word~) main::toD0181_$0
(number~) main::toD0181_$1
(number~) main::toD0181_$2
(number~) main::toD0181_$3
(word~) main::toD0181_$4
(byte~) main::toD0181_$5
(number~) main::toD0181_$6
(number~) main::toD0181_$7
(number~) main::toD0181_$8
(byte*) main::toD0181_gfx
(byte) main::toD0181_return
(const byte) main::toD0181_return#0 toD0181_return = >(word)(const byte*) SCREEN1#0&(word) $3fff*(byte) 4|>(word)(const byte*) CHARSET#0/(byte) 4&(byte) $f
(byte*) main::toD0181_screen
(label) main::toD0182
(word~) main::toD0182_$0
(number~) main::toD0182_$1
(number~) main::toD0182_$2
(number~) main::toD0182_$3
(word~) main::toD0182_$4
(byte~) main::toD0182_$5
(number~) main::toD0182_$6
(number~) main::toD0182_$7
(number~) main::toD0182_$8
(byte*) main::toD0182_gfx
(byte) main::toD0182_return
(const byte) main::toD0182_return#0 toD0182_return = >(word)(const byte*) SCREEN2#0&(word) $3fff*(byte) 4|>(word)(const byte*) CHARSET#0/(byte) 4&(byte) $f
(byte*) main::toD0182_screen
(void()) makecharset((byte*) makecharset::charset)
(byte~) makecharset::$10 $10 zp ZP_BYTE:11 2002.0
(word~) makecharset::$13 $13 zp ZP_WORD:12 202.0
(word~) makecharset::$14 $14 zp ZP_WORD:12 202.0
(word~) makecharset::$15 $15 zp ZP_WORD:12 202.0
(byte*~) makecharset::$18 $18 zp ZP_WORD:12 202.0
(byte~) makecharset::$8 reg byte a 2002.0
(byte~) makecharset::$9 reg byte a 2002.0
(label) makecharset::@1
(label) makecharset::@2
(label) makecharset::@3
(label) makecharset::@4
(label) makecharset::@5
(label) makecharset::@6
(label) makecharset::@7
(label) makecharset::@8
(label) makecharset::@9
(label) makecharset::@return
(byte) makecharset::b
(byte) makecharset::b#1 reg byte y 2002.0
(byte) makecharset::b#2 reg byte y 429.0
(byte) makecharset::b#3 reg byte y 443.42857142857144
(byte) makecharset::bc
(byte) makecharset::bc#1 reg byte x 2002.0
(byte) makecharset::bc#2 reg byte x 400.4
(byte) makecharset::bc#3 reg byte x 2103.0
(byte) makecharset::bc#5 reg byte x 202.0
(byte) makecharset::bc#6 reg byte x 310.4
(byte[8]) makecharset::bittab
(const byte[8]) makecharset::bittab#0 bittab = { (byte) 1, (byte) 2, (byte) 4, (byte) 8, (byte) $10, (byte) $20, (byte) $40, (byte) $80 }
(byte) makecharset::c
(byte) makecharset::c#1 c zp ZP_BYTE:6 16.5
(byte) makecharset::c#7 c zp ZP_BYTE:6 51.14999999999999
(byte*) makecharset::charset
(byte*) makecharset::font
(byte*) makecharset::font#1 font zp ZP_WORD:2 16.5
(byte*) makecharset::font#2 font zp ZP_WORD:2 16.5
(byte*) makecharset::font1
(byte*) makecharset::font1#1 font1 zp ZP_WORD:4 16.5
(byte*) makecharset::font1#2 font1 zp ZP_WORD:4 16.5
(byte) makecharset::i
(byte) makecharset::i#1 i zp ZP_BYTE:7 151.5
(byte) makecharset::i#6 i zp ZP_BYTE:7 76.70588235294117
(byte) makecharset::ii
(byte) makecharset::ii#1 ii zp ZP_BYTE:8 1501.5
(byte) makecharset::ii#2 ii zp ZP_BYTE:8 333.6666666666667
(byte()) sid_rnd()
(label) sid_rnd::@return
(byte) sid_rnd::return
(byte) sid_rnd::return#0 reg byte a 34.33333333333333
(byte) sid_rnd::return#2 reg byte a 202.0
(void()) sid_rnd_init()
(label) sid_rnd_init::@return

reg byte a [ fire::c#2 fire::c#0 fire::c#1 ]
zp ZP_WORD:2 [ makecharset::font#2 makecharset::font#1 fire::screen#0 fire::screen#5 fire::screen#3 fire::screen#1 ]
zp ZP_WORD:4 [ makecharset::font1#2 makecharset::font1#1 fire::buffer#10 fire::buffer#2 ]
zp ZP_BYTE:6 [ makecharset::c#7 makecharset::c#1 ]
zp ZP_BYTE:7 [ makecharset::i#6 makecharset::i#1 ]
reg byte x [ makecharset::bc#3 makecharset::bc#5 makecharset::bc#6 makecharset::bc#1 makecharset::bc#2 ]
zp ZP_BYTE:8 [ makecharset::ii#2 makecharset::ii#1 ]
reg byte y [ makecharset::b#2 makecharset::b#3 makecharset::b#1 ]
reg byte x [ fillscreen::fill#5 ]
zp ZP_WORD:9 [ fillscreen::i#2 fillscreen::i#1 fire::buffer#7 fire::buffer#3 ]
reg byte a [ fire::$4 ]
reg byte a [ fire::$5 ]
reg byte a [ fire::$6 ]
reg byte a [ sid_rnd::return#2 ]
reg byte a [ fire::$10 ]
reg byte a [ fire::$11 ]
reg byte a [ fire::$12 ]
reg byte a [ sid_rnd::return#0 ]
reg byte a [ makecharset::$8 ]
reg byte a [ makecharset::$9 ]
zp ZP_BYTE:11 [ makecharset::$10 ]
zp ZP_WORD:12 [ makecharset::$13 makecharset::$14 makecharset::$15 makecharset::$18 fillscreen::screen#5 fillscreen::screen#6 fillscreen::screen#4 fire::screen#10 fire::screen#2 fire::screen#15 ]
