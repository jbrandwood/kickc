__constant char * const CHARSET = (char *) 24576
__constant struct F018_DMAGIC * const DMA = (struct F018_DMAGIC *) 55040
__constant const char DMA_COMMAND_FILL = 3
__constant const char DMA_OPTION_DEST_MB = $81
__constant const char DMA_OPTION_END = 0
__constant const char DMA_OPTION_FORMAT_F018B = $a
__constant char LOGO[$2d*$19*8] = kickasm {{ .var pic = LoadPicture("camelot.png", List().add($ffffff, $000000))
	.for (var x=0;x<45; x++)
    	.for (var y=0; y<25*8; y++)
            .byte pic.getSinglecolorByte(x,y)
 }}
__constant char OFFSET_STRUCT_DMA_LIST_F018B_COUNT = 1
__constant char OFFSET_STRUCT_DMA_LIST_F018B_DEST = 6
__constant char OFFSET_STRUCT_DMA_LIST_F018B_DEST_BANK = 8
__constant char OFFSET_STRUCT_DMA_LIST_F018B_SRC = 3
__constant char OFFSET_STRUCT_F018_DMAGIC_ADDRBANK = 2
__constant char OFFSET_STRUCT_F018_DMAGIC_ADDRMB = 4
__constant char OFFSET_STRUCT_F018_DMAGIC_ADDRMSB = 1
__constant char OFFSET_STRUCT_F018_DMAGIC_EN018B = 3
__constant char OFFSET_STRUCT_F018_DMAGIC_ETRIG = 5
__constant char OFFSET_STRUCT_MEGA65_VICIV_BBDRPOS_HI = $4b
__constant char OFFSET_STRUCT_MEGA65_VICIV_BBDRPOS_LO = $4a
__constant char OFFSET_STRUCT_MEGA65_VICIV_BG_COLOR = $21
__constant char OFFSET_STRUCT_MEGA65_VICIV_CHARPTR_HILO = $6a
__constant char OFFSET_STRUCT_MEGA65_VICIV_CHARPTR_LOHI = $69
__constant char OFFSET_STRUCT_MEGA65_VICIV_CHARPTR_LOLO = $68
__constant char OFFSET_STRUCT_MEGA65_VICIV_CHARSTEP_HI = $59
__constant char OFFSET_STRUCT_MEGA65_VICIV_CHARSTEP_LO = $58
__constant char OFFSET_STRUCT_MEGA65_VICIV_CHRCOUNT = $5e
__constant char OFFSET_STRUCT_MEGA65_VICIV_CONTROLB = $31
__constant char OFFSET_STRUCT_MEGA65_VICIV_CONTROLC = $54
__constant char OFFSET_STRUCT_MEGA65_VICIV_KEY = $2f
__constant char OFFSET_STRUCT_MEGA65_VICIV_SCRNPTR_HIHI = $63
__constant char OFFSET_STRUCT_MEGA65_VICIV_SCRNPTR_HILO = $62
__constant char OFFSET_STRUCT_MEGA65_VICIV_SCRNPTR_LOHI = $61
__constant char OFFSET_STRUCT_MEGA65_VICIV_SCRNPTR_LOLO = $60
__constant char OFFSET_STRUCT_MEGA65_VICIV_SIDBDRWD_HI = $5d
__constant char OFFSET_STRUCT_MEGA65_VICIV_SIDBDRWD_LO = $5c
__constant char OFFSET_STRUCT_MEGA65_VICIV_TBDRPOS_HI = $49
__constant char OFFSET_STRUCT_MEGA65_VICIV_TBDRPOS_LO = $48
__constant char OFFSET_STRUCT_MEGA65_VICIV_TEXTXPOS_HI = $4d
__constant char OFFSET_STRUCT_MEGA65_VICIV_TEXTXPOS_LO = $4c
__constant char OFFSET_STRUCT_MOS6569_VICII_RASTER = $12
__constant char * const SCREEN = (char *) 20480
__constant char SIZEOF_UNSIGNED_INT = 2
__constant struct MOS6569_VICII * const VICII = (struct MOS6569_VICII *) 53248
__constant struct MEGA65_VICIV * const VICIV = (struct MEGA65_VICIV *) 53248
__constant const char WHITE = 1
void main()
char main::$10 // reg byte a 202.0
unsigned int main::c
unsigned int main::c#0 // c zp[2]:2 22.0
unsigned int main::c#1 // c zp[2]:2 101.0
unsigned int main::c#2 // c zp[2]:2 78.5
char main::col
char main::col#1 // reg byte x 22.0
char main::col#2 // reg byte x 4.125
unsigned int *main::erow
unsigned int *main::erow#1 // erow zp[2]:8 11.0
unsigned int *main::erow#5 // erow zp[2]:8 13.666666666666666
char main::i
char main::i#1 // reg byte z 202.0
char main::i#2 // reg byte z 80.8
char *main::logo_dest
char *main::logo_dest#1 // logo_dest zp[2]:6 7.333333333333333
char *main::logo_dest#5 // logo_dest zp[2]:6 20.5
char *main::logo_src
char *main::logo_src#1 // logo_src zp[2]:4 11.0
char *main::logo_src#5 // logo_src zp[2]:4 17.571428571428573
char main::r
char main::r#1 // reg byte x 22.0
char main::r#2 // reg byte x 3.3000000000000003
char main::y
char main::y#1 // reg byte y 202.0
char main::y#2 // reg byte y 168.33333333333331
void memoryRemap(char remapBlocks , unsigned int lowerPageOffset , unsigned int upperPageOffset)
__loadstore volatile char memoryRemap::aVal // zp[1]:15 2.75
unsigned int memoryRemap::lowerPageOffset
char memoryRemap::remapBlocks
unsigned int memoryRemap::upperPageOffset
__loadstore volatile char memoryRemap::xVal // zp[1]:14 3.6666666666666665
__loadstore volatile char memoryRemap::yVal // zp[1]:13 5.5
__loadstore volatile char memoryRemap::zVal // zp[1]:10 11.0
void memset_dma(void *dest , char fill , unsigned int num)
void *memset_dma::dest
void *memset_dma::dest#2 // dest zp[2]:16
char memset_dma::dmaMode
char memset_dma::dmaMode#0 // reg byte x 2.4444444444444446
char memset_dma::fill
char memset_dma::fill#2 // reg byte z
unsigned int memset_dma::num
unsigned int memset_dma::num#2 // num zp[2]:11 5.5
void memset_dma256(char dest_mb , char dest_bank , void *dest , char fill , unsigned int num)
void *memset_dma256::dest
__constant void *memset_dma256::dest#0 = (void *) 0 // dest
char memset_dma256::dest_bank
__constant char memset_dma256::dest_bank#0 = 8 // dest_bank
char memset_dma256::dest_mb
__constant char memset_dma256::dest_mb#0 = $ff // dest_mb
char memset_dma256::dmaMode
char memset_dma256::dmaMode#0 // reg byte x 2.0
struct DMA_LIST_F018B *memset_dma256::f018b
__constant struct DMA_LIST_F018B *memset_dma256::f018b#0 = (struct DMA_LIST_F018B *)memset_dma_command256+4 // f018b
char memset_dma256::fill
unsigned int memset_dma256::num
__constant unsigned int memset_dma256::num#0 = (unsigned int)$2d*$19*2 // num
__loadstore volatile struct DMA_LIST_F018B memset_dma_command = { command: DMA_COMMAND_FILL, count: 0, src: 0, src_bank: 0, dest: 0, dest_bank: 0, sub_command: 0, modulo: 0 } // mem[12]
__constant char memset_dma_command256[] = { DMA_OPTION_DEST_MB, 0, DMA_OPTION_FORMAT_F018B, DMA_OPTION_END, DMA_COMMAND_FILL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }

reg byte x [ main::r#2 main::r#1 ]
zp[2]:8 [ main::erow#5 main::erow#1 ]
reg byte x [ main::col#2 main::col#1 ]
zp[2]:4 [ main::logo_src#5 main::logo_src#1 ]
zp[2]:6 [ main::logo_dest#5 main::logo_dest#1 ]
reg byte y [ main::y#2 main::y#1 ]
reg byte z [ main::i#2 main::i#1 ]
zp[2]:2 [ main::c#2 main::c#0 main::c#1 ]
zp[2]:11 [ memset_dma::num#2 ]
reg byte z [ memset_dma::fill#2 ]
zp[2]:16 [ memset_dma::dest#2 ]
reg byte a [ main::$10 ]
zp[1]:15 [ memoryRemap::aVal ]
zp[1]:14 [ memoryRemap::xVal ]
zp[1]:13 [ memoryRemap::yVal ]
zp[1]:10 [ memoryRemap::zVal ]
reg byte x [ memset_dma::dmaMode#0 ]
reg byte x [ memset_dma256::dmaMode#0 ]
mem[12] [ memset_dma_command ]
