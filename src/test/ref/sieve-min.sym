(label) @1
(label) @begin
(label) @end
(const word) COUNT COUNT = (word) $4000
(const byte) RADIX::BINARY BINARY = (number) 2
(const byte) RADIX::DECIMAL DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL OCTAL = (number) 8
(const byte*) SCREEN SCREEN = (byte*) 1024
(const byte) SQRT_COUNT SQRT_COUNT = (byte) $80
(void()) main()
(byte*~) main::$19 $19 zp ZP_WORD:12 22.0
(label) main::@1
(label) main::@10
(label) main::@11
(label) main::@12
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::@8
(label) main::@9
(word) main::i
(word) main::i#10 i#10 zp ZP_WORD:2 6.111111111111112
(word) main::i#12 i zp ZP_WORD:8 24.6
(word) main::i#2 i zp ZP_WORD:8 11.0
(word) main::i#3 i#3 zp ZP_WORD:2 22.0
(word) main::j
(word) main::j#0 j zp ZP_WORD:4 16.5
(word) main::j#1 j zp ZP_WORD:4 202.0
(word) main::j#2 j zp ZP_WORD:4 78.5
(byte*) main::s
(byte*) main::s#0 s zp ZP_WORD:6 22.0
(byte*) main::s#1 s zp ZP_WORD:6 101.0
(byte*) main::s#2 s zp ZP_WORD:6 104.66666666666666
(byte*) main::sieve_i
(byte*) main::sieve_i#1 sieve_i zp ZP_WORD:10 22.0
(byte*) main::sieve_i#2 sieve_i zp ZP_WORD:10 3.0
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(label) memset::@1
(label) memset::@2
(label) memset::@return
(byte) memset::c
(const byte) memset::c#0 c = (byte) 0
(byte*) memset::dst
(byte*) memset::dst#1 dst zp ZP_WORD:10 22.0
(byte*) memset::dst#2 dst zp ZP_WORD:10 14.666666666666666
(byte*) memset::end
(const byte*) memset::end#0 end = (byte*)(const void*) memset::str#0+(const word) COUNT
(word) memset::num
(void*) memset::return
(void*) memset::str
(const void*) memset::str#0 str = (void*)(const byte*) sieve#0
(void()) print_byte((byte) print_byte::b)
(byte~) print_byte::$0 reg byte a 4.0
(byte~) print_byte::$2 reg byte x 4.0
(label) print_byte::@1
(label) print_byte::@return
(byte) print_byte::b
(byte) print_byte::b#0 reg byte x 4.0
(byte) print_byte::b#1 reg byte x 4.0
(byte) print_byte::b#2 reg byte x 2.0
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(byte) print_char::ch#0 reg byte a 4.0
(byte) print_char::ch#1 reg byte a 4.0
(byte) print_char::ch#3 reg byte a 6.0
(byte*) print_char_cursor
(byte*) print_char_cursor#19 print_char_cursor zp ZP_WORD:8 9.5
(byte*) print_char_cursor#20 print_char_cursor zp ZP_WORD:8 1.9999999999999998
(byte*) print_char_cursor#26 print_char_cursor zp ZP_WORD:8 2.0
(byte*) print_char_cursor#27 print_char_cursor zp ZP_WORD:8 4.0
(byte*) print_char_cursor#35 print_char_cursor zp ZP_WORD:8 16.5
(const byte[]) print_hextab print_hextab = (string) "0123456789abcdef"z
(byte*) print_line_cursor
(byte*) print_screen
(void()) print_word((word) print_word::w)
(label) print_word::@1
(label) print_word::@return
(word) print_word::w
(word) print_word::w#0 w zp ZP_WORD:2 5.0
(byte*) sieve
(const byte*) sieve#0 sieve = (byte*) 4096

zp ZP_WORD:2 [ main::i#10 main::i#3 print_word::w#0 ]
zp ZP_WORD:4 [ main::j#2 main::j#0 main::j#1 ]
zp ZP_WORD:6 [ main::s#2 main::s#0 main::s#1 ]
reg byte a [ print_char::ch#3 print_char::ch#0 print_char::ch#1 ]
zp ZP_WORD:8 [ print_char_cursor#19 print_char_cursor#27 print_char_cursor#35 print_char_cursor#20 print_char_cursor#26 main::i#12 main::i#2 ]
reg byte x [ print_byte::b#2 print_byte::b#0 print_byte::b#1 ]
zp ZP_WORD:10 [ memset::dst#2 memset::dst#1 main::sieve_i#2 main::sieve_i#1 ]
zp ZP_WORD:12 [ main::$19 ]
reg byte a [ print_byte::$0 ]
reg byte x [ print_byte::$2 ]
