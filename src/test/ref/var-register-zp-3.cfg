
void main()
main: scope:[main]  from
  [0] phi()
  [1] call print2 
  to:main::@1
main::@1: scope:[main]  from main
  [2] phi()
  [3] call print2 
  to:main::@return
main::@return: scope:[main]  from main::@1
  [4] return 
  to:@return

void print2(byte* print2::at , byte* print2::msg)
print2: scope:[print2]  from main main::@1
  [5] print2::at#4 = phi( main/screen, main::@1/screen+$50 )
  [5] print2::msg#4 = phi( main/main::msg, main::@1/main::msg1 )
  to:print2::@1
print2::@1: scope:[print2]  from print2 print2::@3
  [6] print2::j#2 = phi( print2/0, print2::@3/print2::j#1 )
  [6] print2::i#2 = phi( print2/0, print2::@3/print2::i#1 )
  [7] if(0!=print2::msg#4[print2::i#2]) goto print2::@2
  to:print2::@return
print2::@return: scope:[print2]  from print2::@1
  [8] return 
  to:@return
print2::@2: scope:[print2]  from print2::@1
  [9] print_char::at#0 = print2::at#4
  [10] print_char::idx#0 = print2::j#2
  [11] print_char::ch#0 = print2::msg#4[print2::i#2]
  [12] call print_char 
  to:print2::@3
print2::@3: scope:[print2]  from print2::@2
  [13] print2::j#1 = print2::j#2 + 2
  [14] print2::i#1 = ++ print2::i#2
  to:print2::@1

void print_char(byte* print_char::at , byte print_char::idx , byte print_char::ch)
print_char: scope:[print_char]  from print2::@2
  [15] print_char::at#0[print_char::idx#0] = print_char::ch#0
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  [16] return 
  to:@return
