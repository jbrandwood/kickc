
(void()) main()
main: scope:[main]  from
  [0] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@1
  [1] (byte) main::idx#4 ← phi( main/(byte) 0 main::@1/(byte) main::idx#3 )
  [1] (byte) main::i#2 ← phi( main/(byte) 0 main::@1/(byte) main::i#1 )
  [2] (byte~) main::$6 ← (byte) main::i#2 << (byte) 1
  [3] (byte~) main::$4 ← (byte~) main::$6 + (byte) main::i#2
  [4] *((const nomodify byte*) main::SCREEN + (byte) main::idx#4) ← *((byte*)(const struct Point*) points + (byte~) main::$4)
  [5] (byte) main::idx#1 ← ++ (byte) main::idx#4
  [6] (byte~) main::$0 ← < *((signed word*)(const struct Point*) points+(const byte) OFFSET_STRUCT_POINT_Y + (byte~) main::$4)
  [7] *((const nomodify byte*) main::SCREEN + (byte) main::idx#1) ← (byte~) main::$0
  [8] (byte) main::idx#2 ← ++ (byte) main::idx#1
  [9] (byte~) main::$1 ← > *((signed word*)(const struct Point*) points+(const byte) OFFSET_STRUCT_POINT_Y + (byte~) main::$4)
  [10] *((const nomodify byte*) main::SCREEN + (byte) main::idx#2) ← (byte~) main::$1
  [11] (byte) main::idx#3 ← ++ (byte) main::idx#2
  [12] (byte) main::i#1 ← ++ (byte) main::i#2
  [13] if((byte) main::i#1!=(byte) 3) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@1
  [14] return 
  to:@return
