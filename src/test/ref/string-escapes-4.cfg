
(void()) main()
main: scope:[main]  from
  [0] *((byte*) 53272) ← (byte) $17
  to:main::@1
main::@1: scope:[main]  from main main::@4
  [1] (byte) main::i#2 ← phi( main/(byte) 0 main::@4/(byte) main::i#1 )
  [2] if((byte) 0!=*((const byte*) MSG1 + (byte) main::i#2)) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@1
  [3] *((const byte*) SCREEN2) ← (const byte) CH
  to:main::@return
main::@return: scope:[main]  from main::@3
  [4] return 
  to:@return
main::@2: scope:[main]  from main::@1
  [5] (byte) chrout::petscii#0 ← *((const byte*) MSG1 + (byte) main::i#2)
  [6] call chrout 
  to:main::@4
main::@4: scope:[main]  from main::@2
  [7] *((const byte*) SCREEN1 + (byte) main::i#2) ← *((const byte*) MSG2 + (byte) main::i#2)
  [8] (byte) main::i#1 ← ++ (byte) main::i#2
  to:main::@1

(void()) chrout((byte) chrout::petscii)
chrout: scope:[chrout]  from main::@2
  [9] (byte) chrout::petscii#1 ← phi( main::@2/(byte) chrout::petscii#0 )
  kickasm( uses chrout::petscii#1) {{ jsr $ffd2
     }}
  to:chrout::@return
chrout::@return: scope:[chrout]  from chrout
  [11] return 
  to:@return
