@begin: scope:[]  from
  [0] phi()
  to:@3
@3: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @3
  [3] phi()
main: scope:[main]  from @3
  [4] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@5
  [5] (byte) main::i#2 ← phi( main/(byte/signed byte/word/signed word/dword/signed dword) 0 main::@5/(byte) main::i#1 )
  [6] (byte) line::l#0 ← (byte) main::i#2
  [7] call line 
  to:main::@5
main::@5: scope:[main]  from main::@1
  [8] (byte) main::i#1 ← ++ (byte) main::i#2
  [9] if((byte) main::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 9) goto main::@1
  to:main::@2
main::@2: scope:[main]  from main::@5 main::@6
  [10] (byte) main::j#2 ← phi( main::@5/(byte/signed byte/word/signed word/dword/signed dword) 10 main::@6/(byte) main::j#1 )
  [11] (byte) line::l#1 ← (byte) main::j#2
  [12] call line 
  to:main::@6
main::@6: scope:[main]  from main::@2
  [13] (byte) main::j#1 ← ++ (byte) main::j#2
  [14] if((byte) main::j#1!=(byte/signed byte/word/signed word/dword/signed dword) 19) goto main::@2
  to:main::@return
main::@return: scope:[main]  from main::@6
  [15] return 
  to:@return
line: scope:[line]  from main::@1 main::@2
  [16] (byte) line::l#2 ← phi( main::@1/(byte) line::l#0 main::@2/(byte) line::l#1 )
  [17] (byte) plot::x#0 ← (byte) line::l#2
  [18] call plot 
  to:line::@1
line::@1: scope:[line]  from line
  [19] (byte) plot::x#1 ← (byte) line::l#2 + (byte/signed byte/word/signed word/dword/signed dword) 20
  [20] call plot 
  to:line::@return
line::@return: scope:[line]  from line::@1
  [21] return 
  to:@return
plot: scope:[plot]  from line line::@1
  [22] (byte) plot::x#2 ← phi( line/(byte) plot::x#0 line::@1/(byte) plot::x#1 )
  [23] *((const byte*) SCREEN#0 + (byte) plot::x#2) ← (byte) '*'
  to:plot::@return
plot::@return: scope:[plot]  from plot
  [24] return 
  to:@return
