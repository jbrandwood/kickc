@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()
main: scope:[main]  from @1
  [4] phi()
  [5] call print_cls 
  to:main::@1
main::@1: scope:[main]  from main main::@68
  [6] (byte*) print_line_cursor#27 ← phi( main/(byte*) 1024 main::@68/(byte*) print_line_cursor#1 )
  [6] (byte) main::i#10 ← phi( main/(byte) 0 main::@68/(byte) main::i#1 )
  [6] (byte*) print_char_cursor#120 ← phi( main/(byte*) 1024 main::@68/(byte*~) print_char_cursor#151 )
  [6] (byte) main::a#10 ← phi( main/(byte) 7 main::@68/(byte) main::a#1 )
  [7] (byte) main::b#0 ← (byte) $ce - (byte) main::a#10
  [8] if((byte) main::a#10>=(byte) main::b#0) goto main::@2
  to:main::@22
main::@22: scope:[main]  from main::@1
  [9] phi()
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@22
  [10] (byte) main::r#41 ← phi( main::@1/(byte) '-' main::@22/(byte) '+' )
  [11] (byte) printu::a#0 ← (byte) main::a#10
  [12] (byte) printu::b#0 ← (byte) main::b#0
  [13] (byte) printu::res#0 ← (byte) main::r#41
  [14] call printu 
  to:main::@43
main::@43: scope:[main]  from main::@2
  [15] if((byte) main::a#10>=(byte) $37) goto main::@3
  to:main::@23
main::@23: scope:[main]  from main::@43
  [16] phi()
  to:main::@3
main::@3: scope:[main]  from main::@23 main::@43
  [17] (byte) main::r#42 ← phi( main::@23/(byte) '+' main::@43/(byte) '-' )
  [18] (byte) printu::a#1 ← (byte) main::a#10
  [19] (byte) printu::res#1 ← (byte) main::r#42
  [20] call printu 
  to:main::@44
main::@44: scope:[main]  from main::@3
  [21] if((byte) main::a#10>=*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@4
  to:main::@24
main::@24: scope:[main]  from main::@44
  [22] phi()
  to:main::@4
main::@4: scope:[main]  from main::@24 main::@44
  [23] (byte) main::r#43 ← phi( main::@24/(byte) '+' main::@44/(byte) '-' )
  [24] (byte) printu::a#2 ← (byte) main::a#10
  [25] (byte) printu::b#2 ← *((const byte[5]) main::cs#0 + (byte) main::i#10)
  [26] (byte) printu::res#2 ← (byte) main::r#43
  [27] call printu 
  to:main::@45
main::@45: scope:[main]  from main::@4
  [28] if((byte) main::a#10>=(byte) main::a#10) goto main::@5
  to:main::@25
main::@25: scope:[main]  from main::@45
  [29] phi()
  to:main::@5
main::@5: scope:[main]  from main::@25 main::@45
  [30] (byte) main::r#44 ← phi( main::@25/(byte) '+' main::@45/(byte) '-' )
  [31] (byte) printu::a#3 ← (byte) main::a#10
  [32] (byte) printu::b#3 ← (byte) main::a#10
  [33] (byte) printu::res#3 ← (byte) main::r#44
  [34] call printu 
  to:main::@46
main::@46: scope:[main]  from main::@5
  [35] phi()
  [36] call print_ln 
  to:main::@47
main::@47: scope:[main]  from main::@46
  [37] if((byte) main::a#10<=(byte) main::b#0) goto main::@6
  to:main::@26
main::@26: scope:[main]  from main::@47
  [38] phi()
  to:main::@6
main::@6: scope:[main]  from main::@26 main::@47
  [39] (byte) main::r#45 ← phi( main::@26/(byte) '+' main::@47/(byte) '-' )
  [40] (byte) printu::a#4 ← (byte) main::a#10
  [41] (byte) printu::b#4 ← (byte) main::b#0
  [42] (byte) printu::res#4 ← (byte) main::r#45
  [43] (byte*~) print_char_cursor#168 ← (byte*) print_line_cursor#1
  [44] call printu 
  to:main::@48
main::@48: scope:[main]  from main::@6
  [45] if((byte) main::a#10<(byte) $37+(byte) 1) goto main::@7
  to:main::@27
main::@27: scope:[main]  from main::@48
  [46] phi()
  to:main::@7
main::@7: scope:[main]  from main::@27 main::@48
  [47] (byte) main::r#46 ← phi( main::@27/(byte) '+' main::@48/(byte) '-' )
  [48] (byte) printu::a#5 ← (byte) main::a#10
  [49] (byte) printu::res#5 ← (byte) main::r#46
  [50] call printu 
  to:main::@49
main::@49: scope:[main]  from main::@7
  [51] if((byte) main::a#10<=*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@8
  to:main::@28
main::@28: scope:[main]  from main::@49
  [52] phi()
  to:main::@8
main::@8: scope:[main]  from main::@28 main::@49
  [53] (byte) main::r#47 ← phi( main::@28/(byte) '+' main::@49/(byte) '-' )
  [54] (byte) printu::a#6 ← (byte) main::a#10
  [55] (byte) printu::b#6 ← *((const byte[5]) main::cs#0 + (byte) main::i#10)
  [56] (byte) printu::res#6 ← (byte) main::r#47
  [57] call printu 
  to:main::@50
main::@50: scope:[main]  from main::@8
  [58] if((byte) main::a#10<=(byte) main::a#10) goto main::@9
  to:main::@29
main::@29: scope:[main]  from main::@50
  [59] phi()
  to:main::@9
main::@9: scope:[main]  from main::@29 main::@50
  [60] (byte) main::r#48 ← phi( main::@29/(byte) '+' main::@50/(byte) '-' )
  [61] (byte) printu::a#7 ← (byte) main::a#10
  [62] (byte) printu::b#7 ← (byte) main::a#10
  [63] (byte) printu::res#7 ← (byte) main::r#48
  [64] call printu 
  to:main::@51
main::@51: scope:[main]  from main::@9
  [65] phi()
  [66] call print_ln 
  to:main::@52
main::@52: scope:[main]  from main::@51
  [67] if((byte) main::a#10>(byte) main::b#0) goto main::@10
  to:main::@30
main::@30: scope:[main]  from main::@52
  [68] phi()
  to:main::@10
main::@10: scope:[main]  from main::@30 main::@52
  [69] (byte) main::r#49 ← phi( main::@30/(byte) '+' main::@52/(byte) '-' )
  [70] (byte) printu::a#8 ← (byte) main::a#10
  [71] (byte) printu::b#8 ← (byte) main::b#0
  [72] (byte) printu::res#8 ← (byte) main::r#49
  [73] (byte*~) print_char_cursor#152 ← (byte*) print_line_cursor#1
  [74] call printu 
  to:main::@53
main::@53: scope:[main]  from main::@10
  [75] if((byte) main::a#10>=(byte) $37+(byte) 1) goto main::@11
  to:main::@31
main::@31: scope:[main]  from main::@53
  [76] phi()
  to:main::@11
main::@11: scope:[main]  from main::@31 main::@53
  [77] (byte) main::r#50 ← phi( main::@31/(byte) '+' main::@53/(byte) '-' )
  [78] (byte) printu::a#9 ← (byte) main::a#10
  [79] (byte) printu::res#9 ← (byte) main::r#50
  [80] call printu 
  to:main::@54
main::@54: scope:[main]  from main::@11
  [81] if((byte) main::a#10>*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@12
  to:main::@32
main::@32: scope:[main]  from main::@54
  [82] phi()
  to:main::@12
main::@12: scope:[main]  from main::@32 main::@54
  [83] (byte) main::r#51 ← phi( main::@32/(byte) '+' main::@54/(byte) '-' )
  [84] (byte) printu::a#10 ← (byte) main::a#10
  [85] (byte) printu::b#10 ← *((const byte[5]) main::cs#0 + (byte) main::i#10)
  [86] (byte) printu::res#10 ← (byte) main::r#51
  [87] call printu 
  to:main::@55
main::@55: scope:[main]  from main::@12
  [88] if((byte) main::a#10>(byte) main::a#10) goto main::@13
  to:main::@33
main::@33: scope:[main]  from main::@55
  [89] phi()
  to:main::@13
main::@13: scope:[main]  from main::@33 main::@55
  [90] (byte) main::r#52 ← phi( main::@33/(byte) '+' main::@55/(byte) '-' )
  [91] (byte) printu::a#11 ← (byte) main::a#10
  [92] (byte) printu::b#11 ← (byte) main::a#10
  [93] (byte) printu::res#11 ← (byte) main::r#52
  [94] call printu 
  to:main::@56
main::@56: scope:[main]  from main::@13
  [95] phi()
  [96] call print_ln 
  to:main::@57
main::@57: scope:[main]  from main::@56
  [97] if((byte) main::a#10<(byte) main::b#0) goto main::@14
  to:main::@34
main::@34: scope:[main]  from main::@57
  [98] phi()
  to:main::@14
main::@14: scope:[main]  from main::@34 main::@57
  [99] (byte) main::r#53 ← phi( main::@34/(byte) '+' main::@57/(byte) '-' )
  [100] (byte) printu::a#12 ← (byte) main::a#10
  [101] (byte) printu::b#12 ← (byte) main::b#0
  [102] (byte) printu::res#12 ← (byte) main::r#53
  [103] (byte*~) print_char_cursor#156 ← (byte*) print_line_cursor#1
  [104] call printu 
  to:main::@58
main::@58: scope:[main]  from main::@14
  [105] if((byte) main::a#10<(byte) $37) goto main::@15
  to:main::@35
main::@35: scope:[main]  from main::@58
  [106] phi()
  to:main::@15
main::@15: scope:[main]  from main::@35 main::@58
  [107] (byte) main::r#54 ← phi( main::@35/(byte) '+' main::@58/(byte) '-' )
  [108] (byte) printu::a#13 ← (byte) main::a#10
  [109] (byte) printu::res#13 ← (byte) main::r#54
  [110] call printu 
  to:main::@59
main::@59: scope:[main]  from main::@15
  [111] if((byte) main::a#10<*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@16
  to:main::@36
main::@36: scope:[main]  from main::@59
  [112] phi()
  to:main::@16
main::@16: scope:[main]  from main::@36 main::@59
  [113] (byte) main::r#55 ← phi( main::@36/(byte) '+' main::@59/(byte) '-' )
  [114] (byte) printu::a#14 ← (byte) main::a#10
  [115] (byte) printu::b#14 ← *((const byte[5]) main::cs#0 + (byte) main::i#10)
  [116] (byte) printu::res#14 ← (byte) main::r#55
  [117] call printu 
  to:main::@60
main::@60: scope:[main]  from main::@16
  [118] if((byte) main::a#10<(byte) main::a#10) goto main::@17
  to:main::@37
main::@37: scope:[main]  from main::@60
  [119] phi()
  to:main::@17
main::@17: scope:[main]  from main::@37 main::@60
  [120] (byte) main::r#56 ← phi( main::@37/(byte) '+' main::@60/(byte) '-' )
  [121] (byte) printu::a#15 ← (byte) main::a#10
  [122] (byte) printu::b#15 ← (byte) main::a#10
  [123] (byte) printu::res#15 ← (byte) main::r#56
  [124] call printu 
  to:main::@61
main::@61: scope:[main]  from main::@17
  [125] phi()
  [126] call print_ln 
  to:main::@62
main::@62: scope:[main]  from main::@61
  [127] if((byte) main::a#10!=(byte) main::b#0) goto main::@18
  to:main::@38
main::@38: scope:[main]  from main::@62
  [128] phi()
  to:main::@18
main::@18: scope:[main]  from main::@38 main::@62
  [129] (byte) main::r#57 ← phi( main::@38/(byte) '+' main::@62/(byte) '-' )
  [130] (byte) printu::a#16 ← (byte) main::a#10
  [131] (byte) printu::b#16 ← (byte) main::b#0
  [132] (byte) printu::res#16 ← (byte) main::r#57
  [133] (byte*~) print_char_cursor#160 ← (byte*) print_line_cursor#1
  [134] call printu 
  to:main::@63
main::@63: scope:[main]  from main::@18
  [135] if((byte) main::a#10!=(byte) $37) goto main::@19
  to:main::@39
main::@39: scope:[main]  from main::@63
  [136] phi()
  to:main::@19
main::@19: scope:[main]  from main::@39 main::@63
  [137] (byte) main::r#58 ← phi( main::@39/(byte) '+' main::@63/(byte) '-' )
  [138] (byte) printu::a#17 ← (byte) main::a#10
  [139] (byte) printu::res#17 ← (byte) main::r#58
  [140] call printu 
  to:main::@64
main::@64: scope:[main]  from main::@19
  [141] if((byte) main::a#10!=*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@20
  to:main::@40
main::@40: scope:[main]  from main::@64
  [142] phi()
  to:main::@20
main::@20: scope:[main]  from main::@40 main::@64
  [143] (byte) main::r#59 ← phi( main::@40/(byte) '+' main::@64/(byte) '-' )
  [144] (byte) printu::a#18 ← (byte) main::a#10
  [145] (byte) printu::b#18 ← *((const byte[5]) main::cs#0 + (byte) main::i#10)
  [146] (byte) printu::res#18 ← (byte) main::r#59
  [147] call printu 
  to:main::@65
main::@65: scope:[main]  from main::@20
  [148] if((byte) main::a#10!=(byte) main::a#10) goto main::@21
  to:main::@41
main::@41: scope:[main]  from main::@65
  [149] phi()
  to:main::@21
main::@21: scope:[main]  from main::@41 main::@65
  [150] (byte) main::r#60 ← phi( main::@41/(byte) '+' main::@65/(byte) '-' )
  [151] (byte) printu::a#19 ← (byte) main::a#10
  [152] (byte) printu::b#19 ← (byte) main::a#10
  [153] (byte) printu::res#19 ← (byte) main::r#60
  [154] call printu 
  to:main::@66
main::@66: scope:[main]  from main::@21
  [155] phi()
  [156] call print_ln 
  to:main::@67
main::@67: scope:[main]  from main::@66
  [157] (byte) main::a#1 ← (byte) main::a#10 + (byte) $30
  [158] (byte) main::i#1 ← ++ (byte) main::i#10
  [159] if((byte) main::i#1!=(byte) 5) goto main::@68
  to:main::@42
main::@42: scope:[main]  from main::@42 main::@67
  [160] phi()
  to:main::@42
main::@68: scope:[main]  from main::@67
  [161] (byte*~) print_char_cursor#151 ← (byte*) print_line_cursor#1
  to:main::@1
print_ln: scope:[print_ln]  from main::@46 main::@51 main::@56 main::@61 main::@66
  [162] (byte*) print_line_cursor#25 ← phi( main::@46/(byte*) print_line_cursor#27 main::@51/(byte*) print_line_cursor#1 main::@56/(byte*) print_line_cursor#1 main::@61/(byte*) print_line_cursor#1 main::@66/(byte*) print_line_cursor#1 )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  [163] (byte*) print_line_cursor#13 ← phi( print_ln/(byte*) print_line_cursor#25 print_ln::@1/(byte*) print_line_cursor#1 )
  [164] (byte*) print_line_cursor#1 ← (byte*) print_line_cursor#13 + (byte) $28
  [165] if((byte*) print_line_cursor#1<(byte*) print_char_cursor#55) goto print_ln::@1
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@1
  [166] return 
  to:@return
printu: scope:[printu]  from main::@10 main::@11 main::@12 main::@13 main::@14 main::@15 main::@16 main::@17 main::@18 main::@19 main::@2 main::@20 main::@21 main::@3 main::@4 main::@5 main::@6 main::@7 main::@8 main::@9
  [167] (byte) printu::res#20 ← phi( main::@10/(byte) printu::res#8 main::@11/(byte) printu::res#9 main::@12/(byte) printu::res#10 main::@13/(byte) printu::res#11 main::@14/(byte) printu::res#12 main::@15/(byte) printu::res#13 main::@16/(byte) printu::res#14 main::@17/(byte) printu::res#15 main::@18/(byte) printu::res#16 main::@19/(byte) printu::res#17 main::@2/(byte) printu::res#0 main::@20/(byte) printu::res#18 main::@21/(byte) printu::res#19 main::@3/(byte) printu::res#1 main::@4/(byte) printu::res#2 main::@5/(byte) printu::res#3 main::@6/(byte) printu::res#4 main::@7/(byte) printu::res#5 main::@8/(byte) printu::res#6 main::@9/(byte) printu::res#7 )
  [167] (byte) printu::b#20 ← phi( main::@10/(byte) printu::b#8 main::@11/(byte) $37 main::@12/(byte) printu::b#10 main::@13/(byte) printu::b#11 main::@14/(byte) printu::b#12 main::@15/(byte) $37 main::@16/(byte) printu::b#14 main::@17/(byte) printu::b#15 main::@18/(byte) printu::b#16 main::@19/(byte) $37 main::@2/(byte) printu::b#0 main::@20/(byte) printu::b#18 main::@21/(byte) printu::b#19 main::@3/(byte) $37 main::@4/(byte) printu::b#2 main::@5/(byte) printu::b#3 main::@6/(byte) printu::b#4 main::@7/(byte) $37 main::@8/(byte) printu::b#6 main::@9/(byte) printu::b#7 )
  [167] (byte[]) printu::op#20 ← phi( main::@10/(const string) main::op8 main::@11/(const string) main::op8 main::@12/(const string) main::op8 main::@13/(const string) main::op8 main::@14/(const string) main::op12 main::@15/(const string) main::op12 main::@16/(const string) main::op12 main::@17/(const string) main::op12 main::@18/(const string) main::op16 main::@19/(const string) main::op16 main::@2/(const string) main::op main::@20/(const string) main::op16 main::@21/(const string) main::op16 main::@3/(const string) main::op main::@4/(const string) main::op main::@5/(const string) main::op main::@6/(const string) main::op4 main::@7/(const string) main::op4 main::@8/(const string) main::op4 main::@9/(const string) main::op4 )
  [167] (byte) printu::a#20 ← phi( main::@10/(byte) printu::a#8 main::@11/(byte) printu::a#9 main::@12/(byte) printu::a#10 main::@13/(byte) printu::a#11 main::@14/(byte) printu::a#12 main::@15/(byte) printu::a#13 main::@16/(byte) printu::a#14 main::@17/(byte) printu::a#15 main::@18/(byte) printu::a#16 main::@19/(byte) printu::a#17 main::@2/(byte) printu::a#0 main::@20/(byte) printu::a#18 main::@21/(byte) printu::a#19 main::@3/(byte) printu::a#1 main::@4/(byte) printu::a#2 main::@5/(byte) printu::a#3 main::@6/(byte) printu::a#4 main::@7/(byte) printu::a#5 main::@8/(byte) printu::a#6 main::@9/(byte) printu::a#7 )
  [167] (byte*) print_char_cursor#95 ← phi( main::@10/(byte*~) print_char_cursor#152 main::@11/(byte*) print_char_cursor#55 main::@12/(byte*) print_char_cursor#55 main::@13/(byte*) print_char_cursor#55 main::@14/(byte*~) print_char_cursor#156 main::@15/(byte*) print_char_cursor#55 main::@16/(byte*) print_char_cursor#55 main::@17/(byte*) print_char_cursor#55 main::@18/(byte*~) print_char_cursor#160 main::@19/(byte*) print_char_cursor#55 main::@2/(byte*) print_char_cursor#120 main::@20/(byte*) print_char_cursor#55 main::@21/(byte*) print_char_cursor#55 main::@3/(byte*) print_char_cursor#55 main::@4/(byte*) print_char_cursor#55 main::@5/(byte*) print_char_cursor#55 main::@6/(byte*~) print_char_cursor#168 main::@7/(byte*) print_char_cursor#55 main::@8/(byte*) print_char_cursor#55 main::@9/(byte*) print_char_cursor#55 )
  [168] call print_char 
  to:printu::@1
printu::@1: scope:[printu]  from printu
  [169] (byte) print_byte::b#0 ← (byte) printu::a#20
  [170] call print_byte 
  to:printu::@2
printu::@2: scope:[printu]  from printu::@1
  [171] (byte*) print_str::str#1 ← (byte[]) printu::op#20
  [172] call print_str 
  to:printu::@3
printu::@3: scope:[printu]  from printu::@2
  [173] (byte) print_byte::b#1 ← (byte) printu::b#20
  [174] call print_byte 
  to:printu::@4
printu::@4: scope:[printu]  from printu::@3
  [175] phi()
  [176] call print_char 
  to:printu::@5
printu::@5: scope:[printu]  from printu::@4
  [177] (byte) print_char::ch#4 ← (byte) printu::res#20
  [178] call print_char 
  to:printu::@return
printu::@return: scope:[printu]  from printu::@5
  [179] return 
  to:@return
print_char: scope:[print_char]  from print_byte print_byte::@1 printu printu::@4 printu::@5
  [180] (byte*) print_char_cursor#54 ← phi( print_byte/(byte*) print_char_cursor#94 print_byte::@1/(byte*) print_char_cursor#55 printu/(byte*) print_char_cursor#95 printu::@4/(byte*) print_char_cursor#55 printu::@5/(byte*) print_char_cursor#55 )
  [180] (byte) print_char::ch#5 ← phi( print_byte/(byte) print_char::ch#0 print_byte::@1/(byte) print_char::ch#1 printu/(byte) ' ' printu::@4/(byte) ' ' printu::@5/(byte) print_char::ch#4 )
  [181] *((byte*) print_char_cursor#54) ← (byte) print_char::ch#5
  [182] (byte*) print_char_cursor#55 ← ++ (byte*) print_char_cursor#54
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  [183] return 
  to:@return
print_byte: scope:[print_byte]  from printu::@1 printu::@3
  [184] (byte*) print_char_cursor#94 ← phi( printu::@1/(byte*) print_char_cursor#55 printu::@3/(byte*) print_char_cursor#2 )
  [184] (byte) print_byte::b#2 ← phi( printu::@1/(byte) print_byte::b#0 printu::@3/(byte) print_byte::b#1 )
  [185] (byte~) print_byte::$0 ← (byte) print_byte::b#2 >> (byte) 4
  [186] (byte) print_char::ch#0 ← *((const byte[]) print_hextab#0 + (byte~) print_byte::$0)
  [187] call print_char 
  to:print_byte::@1
print_byte::@1: scope:[print_byte]  from print_byte
  [188] (byte~) print_byte::$2 ← (byte) print_byte::b#2 & (byte) $f
  [189] (byte) print_char::ch#1 ← *((const byte[]) print_hextab#0 + (byte~) print_byte::$2)
  [190] call print_char 
  to:print_byte::@return
print_byte::@return: scope:[print_byte]  from print_byte::@1
  [191] return 
  to:@return
print_str: scope:[print_str]  from printu::@2
  [192] phi()
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@2
  [193] (byte*) print_char_cursor#2 ← phi( print_str/(byte*) print_char_cursor#55 print_str::@2/(byte*) print_char_cursor#1 )
  [193] (byte*) print_str::str#2 ← phi( print_str/(byte*) print_str::str#1 print_str::@2/(byte*) print_str::str#0 )
  [194] if(*((byte*) print_str::str#2)!=(byte) '@') goto print_str::@2
  to:print_str::@return
print_str::@return: scope:[print_str]  from print_str::@1
  [195] return 
  to:@return
print_str::@2: scope:[print_str]  from print_str::@1
  [196] *((byte*) print_char_cursor#2) ← *((byte*) print_str::str#2)
  [197] (byte*) print_char_cursor#1 ← ++ (byte*) print_char_cursor#2
  [198] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#2
  to:print_str::@1
print_cls: scope:[print_cls]  from main
  [199] phi()
  [200] call memset 
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls
  [201] return 
  to:@return
memset: scope:[memset]  from print_cls
  [202] phi()
  to:memset::@1
memset::@1: scope:[memset]  from memset memset::@1
  [203] (byte*) memset::dst#2 ← phi( memset/(byte*)(const void*) memset::str#0 memset::@1/(byte*) memset::dst#1 )
  [204] *((byte*) memset::dst#2) ← (const byte) memset::c#0
  [205] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2
  [206] if((byte*) memset::dst#1!=(const byte*) memset::end#0) goto memset::@1
  to:memset::@return
memset::@return: scope:[memset]  from memset::@1
  [207] return 
  to:@return
