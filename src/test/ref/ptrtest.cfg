
(void()) main()
main: scope:[main]  from
  [0] phi()
  [1] call lvalue 
  to:main::@1
main::@1: scope:[main]  from main
  [2] phi()
  [3] call rvalue 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [4] phi()
  [5] call rvaluevar 
  to:main::@3
main::@3: scope:[main]  from main::@2
  [6] phi()
  [7] call lvaluevar 
  to:main::@return
main::@return: scope:[main]  from main::@3
  [8] return 
  to:@return

(void()) lvaluevar()
lvaluevar: scope:[lvaluevar]  from main::@3
  [9] phi()
  to:lvaluevar::@1
lvaluevar::@1: scope:[lvaluevar]  from lvaluevar lvaluevar::@2
  [10] (byte*) lvaluevar::screen#2 ← phi( lvaluevar/(byte*) 1024 lvaluevar::@2/(byte*) lvaluevar::screen#1 )
  [10] (byte) lvaluevar::i#2 ← phi( lvaluevar/(byte) 2 lvaluevar::@2/(byte) lvaluevar::i#1 )
  [11] if((byte) lvaluevar::i#2<(byte) $a) goto lvaluevar::@2
  to:lvaluevar::@return
lvaluevar::@return: scope:[lvaluevar]  from lvaluevar::@1
  [12] return 
  to:@return
lvaluevar::@2: scope:[lvaluevar]  from lvaluevar::@1
  [13] *((byte*) lvaluevar::screen#2) ← (const byte) lvaluevar::b
  [14] (byte*) lvaluevar::screen#1 ← ++ (byte*) lvaluevar::screen#2
  [15] (byte) lvaluevar::i#1 ← ++ (byte) lvaluevar::i#2
  to:lvaluevar::@1

(void()) rvaluevar()
rvaluevar: scope:[rvaluevar]  from main::@2
  [16] phi()
  to:rvaluevar::@1
rvaluevar::@1: scope:[rvaluevar]  from rvaluevar rvaluevar::@2
  [17] (byte) rvaluevar::b#2 ← phi( rvaluevar/(byte) 0 rvaluevar::@2/(byte) rvaluevar::b#1 )
  [17] (byte*) rvaluevar::screen#2 ← phi( rvaluevar/(byte*) 1024 rvaluevar::@2/(byte*) rvaluevar::screen#1 )
  [17] (byte) rvaluevar::i#2 ← phi( rvaluevar/(byte) 2 rvaluevar::@2/(byte) rvaluevar::i#1 )
  [18] if((byte) rvaluevar::i#2<(byte) $a) goto rvaluevar::@2
  to:rvaluevar::@3
rvaluevar::@3: scope:[rvaluevar]  from rvaluevar::@1
  [19] *((const byte*) rvaluevar::screen2) ← (byte) rvaluevar::b#2
  to:rvaluevar::@return
rvaluevar::@return: scope:[rvaluevar]  from rvaluevar::@3
  [20] return 
  to:@return
rvaluevar::@2: scope:[rvaluevar]  from rvaluevar::@1
  [21] (byte) rvaluevar::b#1 ← *((byte*) rvaluevar::screen#2)
  [22] (byte*) rvaluevar::screen#1 ← ++ (byte*) rvaluevar::screen#2
  [23] (byte) rvaluevar::i#1 ← ++ (byte) rvaluevar::i#2
  to:rvaluevar::@1

(void()) rvalue()
rvalue: scope:[rvalue]  from main::@1
  [24] (byte) rvalue::b#1 ← *((const byte*) rvalue::SCREEN+(byte) 1)
  to:rvalue::@1
rvalue::@1: scope:[rvalue]  from rvalue rvalue::@2
  [25] (byte) rvalue::b#3 ← phi( rvalue/(byte) rvalue::b#1 rvalue::@2/(byte) rvalue::b#2 )
  [25] (byte) rvalue::i#2 ← phi( rvalue/(byte) 2 rvalue::@2/(byte) rvalue::i#1 )
  [26] if((byte) rvalue::i#2<(byte) $a) goto rvalue::@2
  to:rvalue::@3
rvalue::@3: scope:[rvalue]  from rvalue::@1
  [27] *((const byte*) rvalue::screen2) ← (byte) rvalue::b#3
  to:rvalue::@return
rvalue::@return: scope:[rvalue]  from rvalue::@3
  [28] return 
  to:@return
rvalue::@2: scope:[rvalue]  from rvalue::@1
  [29] (byte) rvalue::b#2 ← *((const byte*) rvalue::SCREEN + (byte) rvalue::i#2)
  [30] (byte) rvalue::i#1 ← ++ (byte) rvalue::i#2
  to:rvalue::@1

(void()) lvalue()
lvalue: scope:[lvalue]  from main
  [31] *((const byte*) lvalue::SCREEN) ← (byte) 1
  [32] *((const byte*) lvalue::SCREEN+(byte) 1) ← (byte) 2
  to:lvalue::@1
lvalue::@1: scope:[lvalue]  from lvalue lvalue::@2
  [33] (byte) lvalue::i#2 ← phi( lvalue/(byte) 2 lvalue::@2/(byte) lvalue::i#1 )
  [34] if((byte) lvalue::i#2<(byte) $a) goto lvalue::@2
  to:lvalue::@return
lvalue::@return: scope:[lvalue]  from lvalue::@1
  [35] return 
  to:@return
lvalue::@2: scope:[lvalue]  from lvalue::@1
  [36] *((const byte*) lvalue::SCREEN + (byte) lvalue::i#2) ← (byte) 3
  [37] (byte) lvalue::i#1 ← ++ (byte) lvalue::i#2
  to:lvalue::@1
