@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] (byte) tod_init::tod_TENTHS#0 ← *((byte*)&(struct TIME_OF_DAY) TOD_ZERO)
  [5] (byte) tod_init::tod_SEC#0 ← *((byte*)&(struct TIME_OF_DAY) TOD_ZERO+(const byte) OFFSET_STRUCT_TIME_OF_DAY_SEC)
  [6] (byte) tod_init::tod_MIN#0 ← *((byte*)&(struct TIME_OF_DAY) TOD_ZERO+(const byte) OFFSET_STRUCT_TIME_OF_DAY_MIN)
  [7] (byte) tod_init::tod_HOURS#0 ← *((byte*)&(struct TIME_OF_DAY) TOD_ZERO+(const byte) OFFSET_STRUCT_TIME_OF_DAY_HOURS)
  [8] call tod_init 
  to:main::@1
main::@1: scope:[main]  from main main::@4
  [9] phi()
  [10] call tod_read 
  [11] (byte) tod_read::return_TENTHS#2 ← (byte) tod_read::return_TENTHS#0
  [12] (byte) tod_read::return_SEC#2 ← (byte) tod_read::return_SEC#0
  [13] (byte) tod_read::return_MIN#2 ← (byte) tod_read::return_MIN#0
  [14] (byte) tod_read::return_HOURS#2 ← (byte) tod_read::return_HOURS#0
  to:main::@2
main::@2: scope:[main]  from main::@1
  [15] (byte) main::tod_TENTHS#0 ← (byte) tod_read::return_TENTHS#2
  [16] (byte) main::tod_SEC#0 ← (byte) tod_read::return_SEC#2
  [17] (byte) main::tod_MIN#0 ← (byte) tod_read::return_MIN#2
  [18] (byte) main::tod_HOURS#0 ← (byte) tod_read::return_HOURS#2
  [19] call gotoxy 
  to:main::@3
main::@3: scope:[main]  from main::@2
  [20] (byte) tod_str::tod_TENTHS#0 ← (byte) main::tod_TENTHS#0
  [21] (byte) tod_str::tod_SEC#0 ← (byte) main::tod_SEC#0
  [22] (byte) tod_str::tod_MIN#0 ← (byte) main::tod_MIN#0
  [23] (byte) tod_str::tod_HOURS#0 ← (byte) main::tod_HOURS#0
  [24] call tod_str 
  to:main::@4
main::@4: scope:[main]  from main::@3
  [25] phi()
  [26] call cputs 
  to:main::@1

(void()) cputs((to_nomodify byte*) cputs::s)
cputs: scope:[cputs]  from main::@4
  [27] phi()
  to:cputs::@1
cputs::@1: scope:[cputs]  from cputs cputs::@2
  [28] (byte*) conio_cursor_color#19 ← phi( cputs/(byte*) conio_cursor_color#1 cputs::@2/(byte*) conio_cursor_color#17 )
  [28] (byte*) conio_cursor_text#19 ← phi( cputs/(byte*) conio_cursor_text#1 cputs::@2/(byte*) conio_cursor_text#17 )
  [28] (byte) conio_cursor_y#20 ← phi( cputs/(byte) conio_cursor_y#1 cputs::@2/(byte) conio_cursor_y#18 )
  [28] (byte) conio_cursor_x#20 ← phi( cputs/(byte) 0 cputs::@2/(byte) conio_cursor_x#18 )
  [28] (to_nomodify byte*) cputs::s#2 ← phi( cputs/(const byte*) tod_buffer cputs::@2/(to_nomodify byte*) cputs::s#0 )
  [29] (byte) cputs::c#1 ← *((to_nomodify byte*) cputs::s#2)
  [30] (to_nomodify byte*) cputs::s#0 ← ++ (to_nomodify byte*) cputs::s#2
  [31] if((byte) 0!=(byte) cputs::c#1) goto cputs::@2
  to:cputs::@return
cputs::@return: scope:[cputs]  from cputs::@1
  [32] return 
  to:@return
cputs::@2: scope:[cputs]  from cputs::@1
  [33] (byte) cputc::c#0 ← (byte) cputs::c#1
  [34] call cputc 
  to:cputs::@1

(void()) cputc((byte) cputc::c)
cputc: scope:[cputc]  from cputs::@2
  [35] if((byte) cputc::c#0==(byte) '
') goto cputc::@1
  to:cputc::@2
cputc::@2: scope:[cputc]  from cputc
  [36] *((byte*) conio_cursor_text#19) ← (byte) cputc::c#0
  [37] (byte*) conio_cursor_text#26 ← ++ (byte*) conio_cursor_text#19
  [38] *((byte*) conio_cursor_color#19) ← (const nomodify byte) CONIO_TEXTCOLOR_DEFAULT
  [39] (byte*) conio_cursor_color#26 ← ++ (byte*) conio_cursor_color#19
  [40] (byte) conio_cursor_x#4 ← ++ (byte) conio_cursor_x#20
  [41] if((byte) conio_cursor_x#4!=(const nomodify byte) CONIO_WIDTH) goto cputc::@return
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc::@2
  [42] (byte) conio_cursor_y#27 ← ++ (byte) conio_cursor_y#20
  [43] if((byte) conio_cursor_y#27!=(const nomodify byte) CONIO_HEIGHT) goto cputc::@return
  to:cputc::@4
cputc::@4: scope:[cputc]  from cputc::@3
  [44] phi()
  [45] call gotoxy 
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@1 cputc::@2 cputc::@3 cputc::@4
  [46] (byte*) conio_cursor_color#17 ← phi( cputc::@2/(byte*) conio_cursor_color#26 cputc::@3/(byte*) conio_cursor_color#26 cputc::@1/(byte*) conio_cursor_color#1 cputc::@4/(byte*) conio_cursor_color#1 )
  [46] (byte*) conio_cursor_text#17 ← phi( cputc::@2/(byte*) conio_cursor_text#26 cputc::@3/(byte*) conio_cursor_text#26 cputc::@1/(byte*) conio_cursor_text#1 cputc::@4/(byte*) conio_cursor_text#1 )
  [46] (byte) conio_cursor_y#18 ← phi( cputc::@2/(byte) conio_cursor_y#20 cputc::@3/(byte) conio_cursor_y#27 cputc::@1/(byte) conio_cursor_y#1 cputc::@4/(byte) conio_cursor_y#1 )
  [46] (byte) conio_cursor_x#18 ← phi( cputc::@2/(byte) conio_cursor_x#4 cputc::@3/(byte) 0 cputc::@1/(byte) 0 cputc::@4/(byte) 0 )
  [47] return 
  to:@return
cputc::@1: scope:[cputc]  from cputc
  [48] (byte) gotoxy::y#1 ← (byte) conio_cursor_y#20 + (byte) 1
  [49] call gotoxy 
  to:cputc::@return

(void()) gotoxy((byte) gotoxy::x , (byte) gotoxy::y)
gotoxy: scope:[gotoxy]  from cputc::@1 cputc::@4 main::@2
  [50] (byte) gotoxy::y#4 ← phi( cputc::@1/(byte) gotoxy::y#1 cputc::@4/(byte) 0 main::@2/(byte) 0 )
  to:gotoxy::@1
gotoxy::@1: scope:[gotoxy]  from gotoxy
  [51] if((byte) gotoxy::y#4<(const nomodify byte) CONIO_HEIGHT) goto gotoxy::@3
  to:gotoxy::@2
gotoxy::@3: scope:[gotoxy]  from gotoxy::@1
  [52] phi()
  to:gotoxy::@2
gotoxy::@2: scope:[gotoxy]  from gotoxy::@1 gotoxy::@3
  [53] (byte) gotoxy::y#5 ← phi( gotoxy::@3/(byte) gotoxy::y#4 gotoxy::@1/(byte) 0 )
  [54] (byte) conio_cursor_y#1 ← (byte) gotoxy::y#5
  [55] (word~) gotoxy::$8 ← (word)(byte) gotoxy::y#5
  [56] (word~) gotoxy::$9 ← (word~) gotoxy::$8 << (byte) 2
  [57] (word~) gotoxy::$10 ← (word~) gotoxy::$9 + (word~) gotoxy::$8
  [58] (word) gotoxy::offset#0 ← (word~) gotoxy::$10 << (byte) 3
  [59] (byte*) conio_cursor_text#1 ← (const nomodify byte*) CONIO_SCREEN_TEXT + (word) gotoxy::offset#0
  [60] (byte*) conio_cursor_color#1 ← (const nomodify byte*) CONIO_SCREEN_COLORS + (word) gotoxy::offset#0
  to:gotoxy::@return
gotoxy::@return: scope:[gotoxy]  from gotoxy::@2
  [61] return 
  to:@return

(byte*()) tod_str((byte) tod_str::tod_TENTHS , (byte) tod_str::tod_SEC , (byte) tod_str::tod_MIN , (byte) tod_str::tod_HOURS)
tod_str: scope:[tod_str]  from main::@3
  [62] (byte~) tod_str::$0 ← (byte) tod_str::tod_HOURS#0 >> (byte) 4
  [63] (byte~) tod_str::$1 ← (byte) '0' + (byte~) tod_str::$0
  [64] *((const byte*) tod_buffer) ← (byte~) tod_str::$1
  [65] (byte~) tod_str::$2 ← (byte) tod_str::tod_HOURS#0 & (byte) $f
  [66] (byte~) tod_str::$3 ← (byte) '0' + (byte~) tod_str::$2
  [67] *((const byte*) tod_buffer+(byte) 1) ← (byte~) tod_str::$3
  [68] (byte~) tod_str::$4 ← (byte) tod_str::tod_MIN#0 >> (byte) 4
  [69] (byte~) tod_str::$5 ← (byte) '0' + (byte~) tod_str::$4
  [70] *((const byte*) tod_buffer+(byte) 3) ← (byte~) tod_str::$5
  [71] (byte~) tod_str::$6 ← (byte) tod_str::tod_MIN#0 & (byte) $f
  [72] (byte~) tod_str::$7 ← (byte) '0' + (byte~) tod_str::$6
  [73] *((const byte*) tod_buffer+(byte) 4) ← (byte~) tod_str::$7
  [74] (byte~) tod_str::$8 ← (byte) tod_str::tod_SEC#0 >> (byte) 4
  [75] (byte~) tod_str::$9 ← (byte) '0' + (byte~) tod_str::$8
  [76] *((const byte*) tod_buffer+(byte) 6) ← (byte~) tod_str::$9
  [77] (byte~) tod_str::$10 ← (byte) tod_str::tod_SEC#0 & (byte) $f
  [78] (byte~) tod_str::$11 ← (byte) '0' + (byte~) tod_str::$10
  [79] *((const byte*) tod_buffer+(byte) 7) ← (byte~) tod_str::$11
  [80] (byte~) tod_str::$12 ← (byte) tod_str::tod_TENTHS#0 >> (byte) 4
  [81] (byte~) tod_str::$13 ← (byte) '0' + (byte~) tod_str::$12
  [82] *((const byte*) tod_buffer+(byte) 9) ← (byte~) tod_str::$13
  [83] (byte~) tod_str::$14 ← (byte) tod_str::tod_TENTHS#0 & (byte) $f
  [84] (byte~) tod_str::$15 ← (byte) '0' + (byte~) tod_str::$14
  [85] *((const byte*) tod_buffer+(byte) $a) ← (byte~) tod_str::$15
  to:tod_str::@return
tod_str::@return: scope:[tod_str]  from tod_str
  [86] return 
  to:@return

(struct TIME_OF_DAY()) tod_read()
tod_read: scope:[tod_read]  from main::@1
  [87] (byte) tod_read::return_HOURS#0 ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS)
  [88] (byte) tod_read::return_MIN#0 ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_MIN)
  [89] (byte) tod_read::return_SEC#0 ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_SEC)
  [90] (byte) tod_read::return_TENTHS#0 ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_10THS)
  to:tod_read::@return
tod_read::@return: scope:[tod_read]  from tod_read
  [91] return 
  to:@return

(void()) tod_init((byte) tod_init::tod_TENTHS , (byte) tod_init::tod_SEC , (byte) tod_init::tod_MIN , (byte) tod_init::tod_HOURS)
tod_init: scope:[tod_init]  from main
  [92] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL) ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL) | (byte) $80
  [93] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL) ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL) & (byte) $7f
  [94] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS) ← (byte) tod_init::tod_HOURS#0
  [95] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_MIN) ← (byte) tod_init::tod_MIN#0
  [96] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_SEC) ← (byte) tod_init::tod_SEC#0
  [97] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_10THS) ← (byte) tod_init::tod_TENTHS#0
  to:tod_init::@return
tod_init::@return: scope:[tod_init]  from tod_init
  [98] return 
  to:@return
