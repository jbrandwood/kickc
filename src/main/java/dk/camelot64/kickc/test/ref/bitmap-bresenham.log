byte* COLS = $d800;
byte* BGCOL = $d020;
byte* FGCOL = $d021;
byte* SCROLL = $d016;
byte* D018 = $d018;

byte* D011 = $d011;
byte RST8 = %10000000;
byte ECM =  %01000000;
byte BMM =  %00100000;
byte DEN =  %00010000;
byte RSEL =  %00001000;

byte* D016 = $d016;
byte MCM =  %00010000;
byte CSEL = %00001000;

byte* SCREEN = $400;
const byte* BITMAP = $2000;

const byte[] plot_xlo = $1000;
const byte[] plot_xhi = $1100;
const byte[] plot_ylo = $1200;
const byte[] plot_yhi = $1300;
const byte[] plot_bit = $1400;

byte[] lines_x = { 60, 80, 110, 80, 60, 40, 10, 40, 60 };
byte[] lines_y = { 10, 40, 60, 80, 110, 80, 60, 40, 10 };
byte lines_cnt = 8;

void main() {
    *BGCOL = 0;
    *FGCOL = 0;
    *D011 = BMM|DEN|RSEL|3;
    *D018 = $18; // Needs casting for *D018 = ((word)SCREEN/$40)|((word)BITMAP/$400);
    init_screen();
    init_plot_tables();
    do {
        lines();
    } while (true);
}

void lines() {
    for(byte l=0; l<lines_cnt;l++) {
        line(lines_x[l], lines_x[l+1], lines_y[l], lines_y[l+1]);
    }
}

void line(byte x0, byte x1, byte y0, byte y1) {
    byte xd;
    byte yd;
    if(x0<x1) {
        xd = x1-x0;
        if(y0<y1) {
            yd = y1-y0;
            if(yd<xd) {
                line_xdyi(x0, y0, x1, xd, yd);
            } else {
                line_ydxi(y0, x0, y1, yd, xd);
            }
        } else {
            yd = y0-y1;
            if(yd<xd) {
                line_xdyd(x0, y0, x1, xd, yd);
            } else {
                line_ydxd(y1, x1, y0, yd, xd);
            }
        }
    } else {
        xd = x0-x1;
        if(y0<y1) {
            yd = y1-y0;
            if(yd<xd) {
                line_xdyd(x1, y1, x0, xd, yd);
            } else {
                line_ydxd(y0, x0, y1, yd, xd);
            }
        } else {
            yd = y0-y1;
            if(yd<xd) {
                line_xdyi(x1, y1, x0, xd, yd);
            } else {
                line_ydxi(y1, x1, y0, yd, xd);
            }
        }
    }
}

void line_xdyi(byte x, byte y, byte x1, byte xd, byte yd) {
  byte e = yd>>1;
  do  {
      plot(x,y);
      x = x + 1;
      e = e+yd;
      if(xd<e) {
          y = y+1;
          e = e - xd;
      }
  } while (x<(x1+1));
}

void line_xdyd(byte x, byte y, byte x1, byte xd, byte yd) {
  byte e = yd>>1;
  do  {
      plot(x,y);
      x = x + 1;
      e = e+yd;
      if(xd<e) {
          y = y-1;
          e = e - xd;
      }
  } while (x<(x1+1));
}

void line_ydxi(byte y, byte x, byte y1, byte yd, byte xd) {
  byte e = xd>>1;
  do  {
      plot(x,y);
      y = y + 1;
      e = e+xd;
      if(yd<e) {
          x = x+1;
          e = e - yd;
      }
  } while (y<(y1+1));
}

void line_ydxd(byte y, byte x, byte y1, byte yd, byte xd) {
  byte e = xd>>1;
  do  {
      plot(x,y);
      y = y + 1;
      e = e+xd;
      if(yd<e) {
          x = x-1;
          e = e - yd;
      }
  } while (y<(y1+1));
}

void plot(byte x, byte y) {
    byte* plotter_x = 0;
    word plotter_y = 0;
    >plotter_x = plot_xhi[x];  // Needs word arrays arranged as two underlying byte arrays to allow byte* plotter_x = plot_x[x]; - and eventually - byte* plotter = plot_x[x] + plot_y[y];
    <plotter_x = plot_xlo[x];
    >plotter_y = plot_yhi[y];
    <plotter_y = plot_ylo[y];
    byte* plotter = plotter_x+plotter_y;
    *plotter = *plotter | plot_bit[x];
}

void init_plot_tables() {
    byte bits = $80;
    for(byte x : 0..255) {
        plot_xlo[x] = x&$f8;
        plot_xhi[x] = >BITMAP;
        plot_bit[x] = bits;
        bits = bits>>1;
        if(bits==0) {
          bits = $80;
        }
    }
    byte* yoffs = $0;
    for(byte y : 0..255) {
        plot_ylo[y] = y&$7 | <yoffs;
        plot_yhi[y] = >yoffs;
        if((y&$7)==7) {
            yoffs = yoffs + 320; // Needs better constant type inference for yoffs = yoffs + 40*8;
        }
    }
}

void init_screen() {
    for(byte* b = BITMAP; b!=BITMAP+$2000; b++) {
        *b = 0;
    }
    for(byte* c = SCREEN; c!=SCREEN+$400;c++) {
        *c = $14;
    }
}

Adding pre/post-modifier (byte) lines::l ← ++ (byte) lines::l
Adding pre/post-modifier (byte*) init_screen::b ← ++ (byte*) init_screen::b
Adding pre/post-modifier (byte*) init_screen::c ← ++ (byte*) init_screen::c
Fixing lo/hi-lvalue hi=(plot::plotter_x) ← plot::$0
Fixing lo/hi-lvalue lo=(plot::plotter_x) ← plot::$1
Fixing lo/hi-lvalue hi=(plot::plotter_y) ← plot::$2
Fixing lo/hi-lvalue lo=(plot::plotter_y) ← plot::$3
PROGRAM
  (byte*) COLS ← (word) 55296
  (byte*) BGCOL ← (word) 53280
  (byte*) FGCOL ← (word) 53281
  (byte*) SCROLL ← (word) 53270
  (byte*) D018 ← (word) 53272
  (byte*) D011 ← (word) 53265
  (byte) RST8 ← (byte/word/signed word) 128
  (byte) ECM ← (byte/signed byte/word/signed word) 64
  (byte) BMM ← (byte/signed byte/word/signed word) 32
  (byte) DEN ← (byte/signed byte/word/signed word) 16
  (byte) RSEL ← (byte/signed byte/word/signed word) 8
  (byte*) D016 ← (word) 53270
  (byte) MCM ← (byte/signed byte/word/signed word) 16
  (byte) CSEL ← (byte/signed byte/word/signed word) 8
  (byte*) SCREEN ← (word/signed word) 1024
  (byte*) BITMAP ← (word/signed word) 8192
  (byte[]) plot_xlo ← (word/signed word) 4096
  (byte[]) plot_xhi ← (word/signed word) 4352
  (byte[]) plot_ylo ← (word/signed word) 4608
  (byte[]) plot_yhi ← (word/signed word) 4864
  (byte[]) plot_bit ← (word/signed word) 5120
  (byte[]) lines_x ← { (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60 }
  (byte[]) lines_y ← { (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10 }
  (byte) lines_cnt ← (byte/signed byte/word/signed word) 8
proc (void()) main()
  *((byte*) BGCOL) ← (byte/signed byte/word/signed word) 0
  *((byte*) FGCOL) ← (byte/signed byte/word/signed word) 0
  (byte~) main::$0 ← (byte) BMM | (byte) DEN
  (byte~) main::$1 ← (byte~) main::$0 | (byte) RSEL
  (byte~) main::$2 ← (byte~) main::$1 | (byte/signed byte/word/signed word) 3
  *((byte*) D011) ← (byte~) main::$2
  *((byte*) D018) ← (byte/signed byte/word/signed word) 24
  (void~) main::$3 ← call init_screen 
  (void~) main::$4 ← call init_plot_tables 
main::@1:
  (void~) main::$5 ← call lines 
  if(true) goto main::@1
main::@return:
  return 
endproc // main()
proc (void()) lines()
  (byte) lines::l ← (byte/signed byte/word/signed word) 0
lines::@1:
  (byte~) lines::$0 ← (byte[]) lines_x *idx (byte) lines::l
  (byte~) lines::$1 ← (byte) lines::l + (byte/signed byte/word/signed word) 1
  (byte~) lines::$2 ← (byte[]) lines_x *idx (byte~) lines::$1
  (byte~) lines::$3 ← (byte[]) lines_y *idx (byte) lines::l
  (byte~) lines::$4 ← (byte) lines::l + (byte/signed byte/word/signed word) 1
  (byte~) lines::$5 ← (byte[]) lines_y *idx (byte~) lines::$4
  (void~) lines::$6 ← call line (byte~) lines::$0 (byte~) lines::$2 (byte~) lines::$3 (byte~) lines::$5 
  (byte) lines::l ← ++ (byte) lines::l
  (boolean~) lines::$7 ← (byte) lines::l < (byte) lines_cnt
  if((boolean~) lines::$7) goto lines::@1
lines::@return:
  return 
endproc // lines()
proc (void()) line((byte) line::x0 , (byte) line::x1 , (byte) line::y0 , (byte) line::y1)
  (boolean~) line::$0 ← (byte) line::x0 < (byte) line::x1
  (boolean~) line::$1 ← ! (boolean~) line::$0
  if((boolean~) line::$1) goto line::@1
  (byte~) line::$2 ← (byte) line::x1 - (byte) line::x0
  (byte) line::xd ← (byte~) line::$2
  (boolean~) line::$3 ← (byte) line::y0 < (byte) line::y1
  (boolean~) line::$4 ← ! (boolean~) line::$3
  if((boolean~) line::$4) goto line::@2
  (byte~) line::$5 ← (byte) line::y1 - (byte) line::y0
  (byte) line::yd ← (byte~) line::$5
  (boolean~) line::$6 ← (byte) line::yd < (byte) line::xd
  (boolean~) line::$7 ← ! (boolean~) line::$6
  if((boolean~) line::$7) goto line::@3
  (void~) line::$8 ← call line_xdyi (byte) line::x0 (byte) line::y0 (byte) line::x1 (byte) line::xd (byte) line::yd 
  goto line::@4
line::@3:
  (void~) line::$9 ← call line_ydxi (byte) line::y0 (byte) line::x0 (byte) line::y1 (byte) line::yd (byte) line::xd 
line::@4:
  goto line::@5
line::@2:
  (byte~) line::$10 ← (byte) line::y0 - (byte) line::y1
  (byte) line::yd ← (byte~) line::$10
  (boolean~) line::$11 ← (byte) line::yd < (byte) line::xd
  (boolean~) line::$12 ← ! (boolean~) line::$11
  if((boolean~) line::$12) goto line::@6
  (void~) line::$13 ← call line_xdyd (byte) line::x0 (byte) line::y0 (byte) line::x1 (byte) line::xd (byte) line::yd 
  goto line::@7
line::@6:
  (void~) line::$14 ← call line_ydxd (byte) line::y1 (byte) line::x1 (byte) line::y0 (byte) line::yd (byte) line::xd 
line::@7:
line::@5:
  goto line::@8
line::@1:
  (byte~) line::$15 ← (byte) line::x0 - (byte) line::x1
  (byte) line::xd ← (byte~) line::$15
  (boolean~) line::$16 ← (byte) line::y0 < (byte) line::y1
  (boolean~) line::$17 ← ! (boolean~) line::$16
  if((boolean~) line::$17) goto line::@9
  (byte~) line::$18 ← (byte) line::y1 - (byte) line::y0
  (byte) line::yd ← (byte~) line::$18
  (boolean~) line::$19 ← (byte) line::yd < (byte) line::xd
  (boolean~) line::$20 ← ! (boolean~) line::$19
  if((boolean~) line::$20) goto line::@10
  (void~) line::$21 ← call line_xdyd (byte) line::x1 (byte) line::y1 (byte) line::x0 (byte) line::xd (byte) line::yd 
  goto line::@11
line::@10:
  (void~) line::$22 ← call line_ydxd (byte) line::y0 (byte) line::x0 (byte) line::y1 (byte) line::yd (byte) line::xd 
line::@11:
  goto line::@12
line::@9:
  (byte~) line::$23 ← (byte) line::y0 - (byte) line::y1
  (byte) line::yd ← (byte~) line::$23
  (boolean~) line::$24 ← (byte) line::yd < (byte) line::xd
  (boolean~) line::$25 ← ! (boolean~) line::$24
  if((boolean~) line::$25) goto line::@13
  (void~) line::$26 ← call line_xdyi (byte) line::x1 (byte) line::y1 (byte) line::x0 (byte) line::xd (byte) line::yd 
  goto line::@14
line::@13:
  (void~) line::$27 ← call line_ydxi (byte) line::y1 (byte) line::x1 (byte) line::y0 (byte) line::yd (byte) line::xd 
line::@14:
line::@12:
line::@8:
line::@return:
  return 
endproc // line()
proc (void()) line_xdyi((byte) line_xdyi::x , (byte) line_xdyi::y , (byte) line_xdyi::x1 , (byte) line_xdyi::xd , (byte) line_xdyi::yd)
  (byte~) line_xdyi::$0 ← (byte) line_xdyi::yd >> (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e ← (byte~) line_xdyi::$0
line_xdyi::@1:
  (void~) line_xdyi::$1 ← call plot (byte) line_xdyi::x (byte) line_xdyi::y 
  (byte~) line_xdyi::$2 ← (byte) line_xdyi::x + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::x ← (byte~) line_xdyi::$2
  (byte~) line_xdyi::$3 ← (byte) line_xdyi::e + (byte) line_xdyi::yd
  (byte) line_xdyi::e ← (byte~) line_xdyi::$3
  (boolean~) line_xdyi::$4 ← (byte) line_xdyi::xd < (byte) line_xdyi::e
  (boolean~) line_xdyi::$5 ← ! (boolean~) line_xdyi::$4
  if((boolean~) line_xdyi::$5) goto line_xdyi::@2
  (byte~) line_xdyi::$6 ← (byte) line_xdyi::y + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::y ← (byte~) line_xdyi::$6
  (byte~) line_xdyi::$7 ← (byte) line_xdyi::e - (byte) line_xdyi::xd
  (byte) line_xdyi::e ← (byte~) line_xdyi::$7
line_xdyi::@2:
  (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyi::$9 ← (byte) line_xdyi::x < (byte~) line_xdyi::$8
  if((boolean~) line_xdyi::$9) goto line_xdyi::@1
line_xdyi::@return:
  return 
endproc // line_xdyi()
proc (void()) line_xdyd((byte) line_xdyd::x , (byte) line_xdyd::y , (byte) line_xdyd::x1 , (byte) line_xdyd::xd , (byte) line_xdyd::yd)
  (byte~) line_xdyd::$0 ← (byte) line_xdyd::yd >> (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e ← (byte~) line_xdyd::$0
line_xdyd::@1:
  (void~) line_xdyd::$1 ← call plot (byte) line_xdyd::x (byte) line_xdyd::y 
  (byte~) line_xdyd::$2 ← (byte) line_xdyd::x + (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::x ← (byte~) line_xdyd::$2
  (byte~) line_xdyd::$3 ← (byte) line_xdyd::e + (byte) line_xdyd::yd
  (byte) line_xdyd::e ← (byte~) line_xdyd::$3
  (boolean~) line_xdyd::$4 ← (byte) line_xdyd::xd < (byte) line_xdyd::e
  (boolean~) line_xdyd::$5 ← ! (boolean~) line_xdyd::$4
  if((boolean~) line_xdyd::$5) goto line_xdyd::@2
  (byte~) line_xdyd::$6 ← (byte) line_xdyd::y - (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::y ← (byte~) line_xdyd::$6
  (byte~) line_xdyd::$7 ← (byte) line_xdyd::e - (byte) line_xdyd::xd
  (byte) line_xdyd::e ← (byte~) line_xdyd::$7
line_xdyd::@2:
  (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyd::$9 ← (byte) line_xdyd::x < (byte~) line_xdyd::$8
  if((boolean~) line_xdyd::$9) goto line_xdyd::@1
line_xdyd::@return:
  return 
endproc // line_xdyd()
proc (void()) line_ydxi((byte) line_ydxi::y , (byte) line_ydxi::x , (byte) line_ydxi::y1 , (byte) line_ydxi::yd , (byte) line_ydxi::xd)
  (byte~) line_ydxi::$0 ← (byte) line_ydxi::xd >> (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e ← (byte~) line_ydxi::$0
line_ydxi::@1:
  (void~) line_ydxi::$1 ← call plot (byte) line_ydxi::x (byte) line_ydxi::y 
  (byte~) line_ydxi::$2 ← (byte) line_ydxi::y + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::y ← (byte~) line_ydxi::$2
  (byte~) line_ydxi::$3 ← (byte) line_ydxi::e + (byte) line_ydxi::xd
  (byte) line_ydxi::e ← (byte~) line_ydxi::$3
  (boolean~) line_ydxi::$4 ← (byte) line_ydxi::yd < (byte) line_ydxi::e
  (boolean~) line_ydxi::$5 ← ! (boolean~) line_ydxi::$4
  if((boolean~) line_ydxi::$5) goto line_ydxi::@2
  (byte~) line_ydxi::$6 ← (byte) line_ydxi::x + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::x ← (byte~) line_ydxi::$6
  (byte~) line_ydxi::$7 ← (byte) line_ydxi::e - (byte) line_ydxi::yd
  (byte) line_ydxi::e ← (byte~) line_ydxi::$7
line_ydxi::@2:
  (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxi::$9 ← (byte) line_ydxi::y < (byte~) line_ydxi::$8
  if((boolean~) line_ydxi::$9) goto line_ydxi::@1
line_ydxi::@return:
  return 
endproc // line_ydxi()
proc (void()) line_ydxd((byte) line_ydxd::y , (byte) line_ydxd::x , (byte) line_ydxd::y1 , (byte) line_ydxd::yd , (byte) line_ydxd::xd)
  (byte~) line_ydxd::$0 ← (byte) line_ydxd::xd >> (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e ← (byte~) line_ydxd::$0
line_ydxd::@1:
  (void~) line_ydxd::$1 ← call plot (byte) line_ydxd::x (byte) line_ydxd::y 
  (byte~) line_ydxd::$2 ← (byte) line_ydxd::y + (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::y ← (byte~) line_ydxd::$2
  (byte~) line_ydxd::$3 ← (byte) line_ydxd::e + (byte) line_ydxd::xd
  (byte) line_ydxd::e ← (byte~) line_ydxd::$3
  (boolean~) line_ydxd::$4 ← (byte) line_ydxd::yd < (byte) line_ydxd::e
  (boolean~) line_ydxd::$5 ← ! (boolean~) line_ydxd::$4
  if((boolean~) line_ydxd::$5) goto line_ydxd::@2
  (byte~) line_ydxd::$6 ← (byte) line_ydxd::x - (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::x ← (byte~) line_ydxd::$6
  (byte~) line_ydxd::$7 ← (byte) line_ydxd::e - (byte) line_ydxd::yd
  (byte) line_ydxd::e ← (byte~) line_ydxd::$7
line_ydxd::@2:
  (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxd::$9 ← (byte) line_ydxd::y < (byte~) line_ydxd::$8
  if((boolean~) line_ydxd::$9) goto line_ydxd::@1
line_ydxd::@return:
  return 
endproc // line_ydxd()
proc (void()) plot((byte) plot::x , (byte) plot::y)
  (byte*) plot::plotter_x ← (byte/signed byte/word/signed word) 0
  (word) plot::plotter_y ← (byte/signed byte/word/signed word) 0
  (byte~) plot::$0 ← (byte[]) plot_xhi *idx (byte) plot::x
  (byte*) plot::plotter_x ← (byte*) plot::plotter_x hi= (byte~) plot::$0
  (byte~) plot::$1 ← (byte[]) plot_xlo *idx (byte) plot::x
  (byte*) plot::plotter_x ← (byte*) plot::plotter_x lo= (byte~) plot::$1
  (byte~) plot::$2 ← (byte[]) plot_yhi *idx (byte) plot::y
  (word) plot::plotter_y ← (word) plot::plotter_y hi= (byte~) plot::$2
  (byte~) plot::$3 ← (byte[]) plot_ylo *idx (byte) plot::y
  (word) plot::plotter_y ← (word) plot::plotter_y lo= (byte~) plot::$3
  (byte*~) plot::$4 ← (byte*) plot::plotter_x + (word) plot::plotter_y
  (byte*) plot::plotter ← (byte*~) plot::$4
  (byte~) plot::$5 ← (byte[]) plot_bit *idx (byte) plot::x
  (byte~) plot::$6 ← *((byte*) plot::plotter) | (byte~) plot::$5
  *((byte*) plot::plotter) ← (byte~) plot::$6
plot::@return:
  return 
endproc // plot()
proc (void()) init_plot_tables()
  (byte) init_plot_tables::bits ← (byte/word/signed word) 128
  (byte) init_plot_tables::x ← (byte/signed byte/word/signed word) 0
init_plot_tables::@1:
  (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x & (byte/word/signed word) 248
  *((byte[]) plot_xlo + (byte) init_plot_tables::x) ← (byte~) init_plot_tables::$0
  (byte~) init_plot_tables::$1 ← > (byte*) BITMAP
  *((byte[]) plot_xhi + (byte) init_plot_tables::x) ← (byte~) init_plot_tables::$1
  *((byte[]) plot_bit + (byte) init_plot_tables::x) ← (byte) init_plot_tables::bits
  (byte~) init_plot_tables::$2 ← (byte) init_plot_tables::bits >> (byte/signed byte/word/signed word) 1
  (byte) init_plot_tables::bits ← (byte~) init_plot_tables::$2
  (boolean~) init_plot_tables::$3 ← (byte) init_plot_tables::bits == (byte/signed byte/word/signed word) 0
  (boolean~) init_plot_tables::$4 ← ! (boolean~) init_plot_tables::$3
  if((boolean~) init_plot_tables::$4) goto init_plot_tables::@2
  (byte) init_plot_tables::bits ← (byte/word/signed word) 128
init_plot_tables::@2:
  (byte) init_plot_tables::x ← ++ (byte) init_plot_tables::x
  (boolean~) init_plot_tables::$5 ← (byte) init_plot_tables::x != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$5) goto init_plot_tables::@1
  (byte*) init_plot_tables::yoffs ← (byte/signed byte/word/signed word) 0
  (byte) init_plot_tables::y ← (byte/signed byte/word/signed word) 0
init_plot_tables::@3:
  (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y & (byte/signed byte/word/signed word) 7
  (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs
  (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7
  *((byte[]) plot_ylo + (byte) init_plot_tables::y) ← (byte~) init_plot_tables::$8
  (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs
  *((byte[]) plot_yhi + (byte) init_plot_tables::y) ← (byte~) init_plot_tables::$9
  (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y & (byte/signed byte/word/signed word) 7
  (boolean~) init_plot_tables::$11 ← (byte~) init_plot_tables::$10 == (byte/signed byte/word/signed word) 7
  (boolean~) init_plot_tables::$12 ← ! (boolean~) init_plot_tables::$11
  if((boolean~) init_plot_tables::$12) goto init_plot_tables::@4
  (byte*~) init_plot_tables::$13 ← (byte*) init_plot_tables::yoffs + (word/signed word) 320
  (byte*) init_plot_tables::yoffs ← (byte*~) init_plot_tables::$13
init_plot_tables::@4:
  (byte) init_plot_tables::y ← ++ (byte) init_plot_tables::y
  (boolean~) init_plot_tables::$14 ← (byte) init_plot_tables::y != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$14) goto init_plot_tables::@3
init_plot_tables::@return:
  return 
endproc // init_plot_tables()
proc (void()) init_screen()
  (byte*) init_screen::b ← (byte*) BITMAP
init_screen::@1:
  *((byte*) init_screen::b) ← (byte/signed byte/word/signed word) 0
  (byte*) init_screen::b ← ++ (byte*) init_screen::b
  (byte*~) init_screen::$0 ← (byte*) BITMAP + (word/signed word) 8192
  (boolean~) init_screen::$1 ← (byte*) init_screen::b != (byte*~) init_screen::$0
  if((boolean~) init_screen::$1) goto init_screen::@1
  (byte*) init_screen::c ← (byte*) SCREEN
init_screen::@2:
  *((byte*) init_screen::c) ← (byte/signed byte/word/signed word) 20
  (byte*) init_screen::c ← ++ (byte*) init_screen::c
  (byte*~) init_screen::$2 ← (byte*) SCREEN + (word/signed word) 1024
  (boolean~) init_screen::$3 ← (byte*) init_screen::c != (byte*~) init_screen::$2
  if((boolean~) init_screen::$3) goto init_screen::@2
init_screen::@return:
  return 
endproc // init_screen()
  call main 

SYMBOLS
(byte*) BGCOL
(byte*) BITMAP
(byte) BMM
(byte*) COLS
(byte) CSEL
(byte*) D011
(byte*) D016
(byte*) D018
(byte) DEN
(byte) ECM
(byte*) FGCOL
(byte) MCM
(byte) RSEL
(byte) RST8
(byte*) SCREEN
(byte*) SCROLL
(void()) init_plot_tables()
(byte~) init_plot_tables::$0
(byte~) init_plot_tables::$1
(byte~) init_plot_tables::$10
(boolean~) init_plot_tables::$11
(boolean~) init_plot_tables::$12
(byte*~) init_plot_tables::$13
(boolean~) init_plot_tables::$14
(byte~) init_plot_tables::$2
(boolean~) init_plot_tables::$3
(boolean~) init_plot_tables::$4
(boolean~) init_plot_tables::$5
(byte~) init_plot_tables::$6
(byte~) init_plot_tables::$7
(byte~) init_plot_tables::$8
(byte~) init_plot_tables::$9
(label) init_plot_tables::@1
(label) init_plot_tables::@2
(label) init_plot_tables::@3
(label) init_plot_tables::@4
(label) init_plot_tables::@return
(byte) init_plot_tables::bits
(byte) init_plot_tables::x
(byte) init_plot_tables::y
(byte*) init_plot_tables::yoffs
(void()) init_screen()
(byte*~) init_screen::$0
(boolean~) init_screen::$1
(byte*~) init_screen::$2
(boolean~) init_screen::$3
(label) init_screen::@1
(label) init_screen::@2
(label) init_screen::@return
(byte*) init_screen::b
(byte*) init_screen::c
(void()) line((byte) line::x0 , (byte) line::x1 , (byte) line::y0 , (byte) line::y1)
(boolean~) line::$0
(boolean~) line::$1
(byte~) line::$10
(boolean~) line::$11
(boolean~) line::$12
(void~) line::$13
(void~) line::$14
(byte~) line::$15
(boolean~) line::$16
(boolean~) line::$17
(byte~) line::$18
(boolean~) line::$19
(byte~) line::$2
(boolean~) line::$20
(void~) line::$21
(void~) line::$22
(byte~) line::$23
(boolean~) line::$24
(boolean~) line::$25
(void~) line::$26
(void~) line::$27
(boolean~) line::$3
(boolean~) line::$4
(byte~) line::$5
(boolean~) line::$6
(boolean~) line::$7
(void~) line::$8
(void~) line::$9
(label) line::@1
(label) line::@10
(label) line::@11
(label) line::@12
(label) line::@13
(label) line::@14
(label) line::@2
(label) line::@3
(label) line::@4
(label) line::@5
(label) line::@6
(label) line::@7
(label) line::@8
(label) line::@9
(label) line::@return
(byte) line::x0
(byte) line::x1
(byte) line::xd
(byte) line::y0
(byte) line::y1
(byte) line::yd
(void()) line_xdyd((byte) line_xdyd::x , (byte) line_xdyd::y , (byte) line_xdyd::x1 , (byte) line_xdyd::xd , (byte) line_xdyd::yd)
(byte~) line_xdyd::$0
(void~) line_xdyd::$1
(byte~) line_xdyd::$2
(byte~) line_xdyd::$3
(boolean~) line_xdyd::$4
(boolean~) line_xdyd::$5
(byte~) line_xdyd::$6
(byte~) line_xdyd::$7
(byte~) line_xdyd::$8
(boolean~) line_xdyd::$9
(label) line_xdyd::@1
(label) line_xdyd::@2
(label) line_xdyd::@return
(byte) line_xdyd::e
(byte) line_xdyd::x
(byte) line_xdyd::x1
(byte) line_xdyd::xd
(byte) line_xdyd::y
(byte) line_xdyd::yd
(void()) line_xdyi((byte) line_xdyi::x , (byte) line_xdyi::y , (byte) line_xdyi::x1 , (byte) line_xdyi::xd , (byte) line_xdyi::yd)
(byte~) line_xdyi::$0
(void~) line_xdyi::$1
(byte~) line_xdyi::$2
(byte~) line_xdyi::$3
(boolean~) line_xdyi::$4
(boolean~) line_xdyi::$5
(byte~) line_xdyi::$6
(byte~) line_xdyi::$7
(byte~) line_xdyi::$8
(boolean~) line_xdyi::$9
(label) line_xdyi::@1
(label) line_xdyi::@2
(label) line_xdyi::@return
(byte) line_xdyi::e
(byte) line_xdyi::x
(byte) line_xdyi::x1
(byte) line_xdyi::xd
(byte) line_xdyi::y
(byte) line_xdyi::yd
(void()) line_ydxd((byte) line_ydxd::y , (byte) line_ydxd::x , (byte) line_ydxd::y1 , (byte) line_ydxd::yd , (byte) line_ydxd::xd)
(byte~) line_ydxd::$0
(void~) line_ydxd::$1
(byte~) line_ydxd::$2
(byte~) line_ydxd::$3
(boolean~) line_ydxd::$4
(boolean~) line_ydxd::$5
(byte~) line_ydxd::$6
(byte~) line_ydxd::$7
(byte~) line_ydxd::$8
(boolean~) line_ydxd::$9
(label) line_ydxd::@1
(label) line_ydxd::@2
(label) line_ydxd::@return
(byte) line_ydxd::e
(byte) line_ydxd::x
(byte) line_ydxd::xd
(byte) line_ydxd::y
(byte) line_ydxd::y1
(byte) line_ydxd::yd
(void()) line_ydxi((byte) line_ydxi::y , (byte) line_ydxi::x , (byte) line_ydxi::y1 , (byte) line_ydxi::yd , (byte) line_ydxi::xd)
(byte~) line_ydxi::$0
(void~) line_ydxi::$1
(byte~) line_ydxi::$2
(byte~) line_ydxi::$3
(boolean~) line_ydxi::$4
(boolean~) line_ydxi::$5
(byte~) line_ydxi::$6
(byte~) line_ydxi::$7
(byte~) line_ydxi::$8
(boolean~) line_ydxi::$9
(label) line_ydxi::@1
(label) line_ydxi::@2
(label) line_ydxi::@return
(byte) line_ydxi::e
(byte) line_ydxi::x
(byte) line_ydxi::xd
(byte) line_ydxi::y
(byte) line_ydxi::y1
(byte) line_ydxi::yd
(void()) lines()
(byte~) lines::$0
(byte~) lines::$1
(byte~) lines::$2
(byte~) lines::$3
(byte~) lines::$4
(byte~) lines::$5
(void~) lines::$6
(boolean~) lines::$7
(label) lines::@1
(label) lines::@return
(byte) lines::l
(byte) lines_cnt
(byte[]) lines_x
(byte[]) lines_y
(void()) main()
(byte~) main::$0
(byte~) main::$1
(byte~) main::$2
(void~) main::$3
(void~) main::$4
(void~) main::$5
(label) main::@1
(label) main::@return
(void()) plot((byte) plot::x , (byte) plot::y)
(byte~) plot::$0
(byte~) plot::$1
(byte~) plot::$2
(byte~) plot::$3
(byte*~) plot::$4
(byte~) plot::$5
(byte~) plot::$6
(label) plot::@return
(byte*) plot::plotter
(byte*) plot::plotter_x
(word) plot::plotter_y
(byte) plot::x
(byte) plot::y
(byte[]) plot_bit
(byte[]) plot_xhi
(byte[]) plot_xlo
(byte[]) plot_yhi
(byte[]) plot_ylo

Promoting word to byte* in COLS ← ((byte*)) 55296
Promoting word to byte* in BGCOL ← ((byte*)) 53280
Promoting word to byte* in FGCOL ← ((byte*)) 53281
Promoting word to byte* in SCROLL ← ((byte*)) 53270
Promoting word to byte* in D018 ← ((byte*)) 53272
Promoting word to byte* in D011 ← ((byte*)) 53265
Promoting word to byte* in D016 ← ((byte*)) 53270
Promoting word/signed word to byte* in SCREEN ← ((byte*)) 1024
Promoting word/signed word to byte* in BITMAP ← ((byte*)) 8192
Promoting word/signed word to byte[] in plot_xlo ← ((byte*)) 4096
Promoting word/signed word to byte[] in plot_xhi ← ((byte*)) 4352
Promoting word/signed word to byte[] in plot_ylo ← ((byte*)) 4608
Promoting word/signed word to byte[] in plot_yhi ← ((byte*)) 4864
Promoting word/signed word to byte[] in plot_bit ← ((byte*)) 5120
Promoting byte/signed byte/word/signed word to byte* in plot::plotter_x ← ((byte*)) 0
Promoting byte/signed byte/word/signed word to byte* in init_plot_tables::yoffs ← ((byte*)) 0
INITIAL CONTROL FLOW GRAPH
@begin: scope:[]  from
  (byte*) COLS ← ((byte*)) (word) 55296
  (byte*) BGCOL ← ((byte*)) (word) 53280
  (byte*) FGCOL ← ((byte*)) (word) 53281
  (byte*) SCROLL ← ((byte*)) (word) 53270
  (byte*) D018 ← ((byte*)) (word) 53272
  (byte*) D011 ← ((byte*)) (word) 53265
  (byte) RST8 ← (byte/word/signed word) 128
  (byte) ECM ← (byte/signed byte/word/signed word) 64
  (byte) BMM ← (byte/signed byte/word/signed word) 32
  (byte) DEN ← (byte/signed byte/word/signed word) 16
  (byte) RSEL ← (byte/signed byte/word/signed word) 8
  (byte*) D016 ← ((byte*)) (word) 53270
  (byte) MCM ← (byte/signed byte/word/signed word) 16
  (byte) CSEL ← (byte/signed byte/word/signed word) 8
  (byte*) SCREEN ← ((byte*)) (word/signed word) 1024
  (byte*) BITMAP ← ((byte*)) (word/signed word) 8192
  (byte[]) plot_xlo ← ((byte*)) (word/signed word) 4096
  (byte[]) plot_xhi ← ((byte*)) (word/signed word) 4352
  (byte[]) plot_ylo ← ((byte*)) (word/signed word) 4608
  (byte[]) plot_yhi ← ((byte*)) (word/signed word) 4864
  (byte[]) plot_bit ← ((byte*)) (word/signed word) 5120
  (byte[]) lines_x ← { (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60 }
  (byte[]) lines_y ← { (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10 }
  (byte) lines_cnt ← (byte/signed byte/word/signed word) 8
  to:@1
main: scope:[main]  from
  *((byte*) BGCOL) ← (byte/signed byte/word/signed word) 0
  *((byte*) FGCOL) ← (byte/signed byte/word/signed word) 0
  (byte~) main::$0 ← (byte) BMM | (byte) DEN
  (byte~) main::$1 ← (byte~) main::$0 | (byte) RSEL
  (byte~) main::$2 ← (byte~) main::$1 | (byte/signed byte/word/signed word) 3
  *((byte*) D011) ← (byte~) main::$2
  *((byte*) D018) ← (byte/signed byte/word/signed word) 24
  (void~) main::$3 ← call init_screen 
  (void~) main::$4 ← call init_plot_tables 
  to:main::@1
main::@1: scope:[main]  from main main::@1
  (void~) main::$5 ← call lines 
  if(true) goto main::@1
  to:main::@2
main::@2: scope:[main]  from main::@1
  to:main::@return
main::@return: scope:[main]  from main::@2
  return 
  to:@return
@1: scope:[]  from @begin
  to:@2
lines: scope:[lines]  from
  (byte) lines::l ← (byte/signed byte/word/signed word) 0
  to:lines::@1
lines::@1: scope:[lines]  from lines lines::@1
  (byte~) lines::$0 ← (byte[]) lines_x *idx (byte) lines::l
  (byte~) lines::$1 ← (byte) lines::l + (byte/signed byte/word/signed word) 1
  (byte~) lines::$2 ← (byte[]) lines_x *idx (byte~) lines::$1
  (byte~) lines::$3 ← (byte[]) lines_y *idx (byte) lines::l
  (byte~) lines::$4 ← (byte) lines::l + (byte/signed byte/word/signed word) 1
  (byte~) lines::$5 ← (byte[]) lines_y *idx (byte~) lines::$4
  (void~) lines::$6 ← call line (byte~) lines::$0 (byte~) lines::$2 (byte~) lines::$3 (byte~) lines::$5 
  (byte) lines::l ← ++ (byte) lines::l
  (boolean~) lines::$7 ← (byte) lines::l < (byte) lines_cnt
  if((boolean~) lines::$7) goto lines::@1
  to:lines::@2
lines::@2: scope:[lines]  from lines::@1
  to:lines::@return
lines::@return: scope:[lines]  from lines::@2
  return 
  to:@return
@2: scope:[]  from @1
  to:@3
line: scope:[line]  from
  (boolean~) line::$0 ← (byte) line::x0 < (byte) line::x1
  (boolean~) line::$1 ← ! (boolean~) line::$0
  if((boolean~) line::$1) goto line::@1
  to:line::@15
line::@1: scope:[line]  from line line::@22
  (byte~) line::$15 ← (byte) line::x0 - (byte) line::x1
  (byte) line::xd ← (byte~) line::$15
  (boolean~) line::$16 ← (byte) line::y0 < (byte) line::y1
  (boolean~) line::$17 ← ! (boolean~) line::$16
  if((boolean~) line::$17) goto line::@9
  to:line::@23
line::@15: scope:[line]  from line
  (byte~) line::$2 ← (byte) line::x1 - (byte) line::x0
  (byte) line::xd ← (byte~) line::$2
  (boolean~) line::$3 ← (byte) line::y0 < (byte) line::y1
  (boolean~) line::$4 ← ! (boolean~) line::$3
  if((boolean~) line::$4) goto line::@2
  to:line::@16
line::@2: scope:[line]  from line::@15 line::@19
  (byte~) line::$10 ← (byte) line::y0 - (byte) line::y1
  (byte) line::yd ← (byte~) line::$10
  (boolean~) line::$11 ← (byte) line::yd < (byte) line::xd
  (boolean~) line::$12 ← ! (boolean~) line::$11
  if((boolean~) line::$12) goto line::@6
  to:line::@20
line::@16: scope:[line]  from line::@15
  (byte~) line::$5 ← (byte) line::y1 - (byte) line::y0
  (byte) line::yd ← (byte~) line::$5
  (boolean~) line::$6 ← (byte) line::yd < (byte) line::xd
  (boolean~) line::$7 ← ! (boolean~) line::$6
  if((boolean~) line::$7) goto line::@3
  to:line::@17
line::@3: scope:[line]  from line::@16 line::@18
  (void~) line::$9 ← call line_ydxi (byte) line::y0 (byte) line::x0 (byte) line::y1 (byte) line::yd (byte) line::xd 
  to:line::@4
line::@17: scope:[line]  from line::@16
  (void~) line::$8 ← call line_xdyi (byte) line::x0 (byte) line::y0 (byte) line::x1 (byte) line::xd (byte) line::yd 
  to:line::@4
line::@4: scope:[line]  from line::@17 line::@3
  to:line::@5
line::@18: scope:[line]  from
  to:line::@3
line::@5: scope:[line]  from line::@4 line::@7
  to:line::@8
line::@19: scope:[line]  from
  to:line::@2
line::@6: scope:[line]  from line::@2 line::@21
  (void~) line::$14 ← call line_ydxd (byte) line::y1 (byte) line::x1 (byte) line::y0 (byte) line::yd (byte) line::xd 
  to:line::@7
line::@20: scope:[line]  from line::@2
  (void~) line::$13 ← call line_xdyd (byte) line::x0 (byte) line::y0 (byte) line::x1 (byte) line::xd (byte) line::yd 
  to:line::@7
line::@7: scope:[line]  from line::@20 line::@6
  to:line::@5
line::@21: scope:[line]  from
  to:line::@6
line::@8: scope:[line]  from line::@12 line::@5
  to:line::@return
line::@22: scope:[line]  from
  to:line::@1
line::@9: scope:[line]  from line::@1 line::@26
  (byte~) line::$23 ← (byte) line::y0 - (byte) line::y1
  (byte) line::yd ← (byte~) line::$23
  (boolean~) line::$24 ← (byte) line::yd < (byte) line::xd
  (boolean~) line::$25 ← ! (boolean~) line::$24
  if((boolean~) line::$25) goto line::@13
  to:line::@27
line::@23: scope:[line]  from line::@1
  (byte~) line::$18 ← (byte) line::y1 - (byte) line::y0
  (byte) line::yd ← (byte~) line::$18
  (boolean~) line::$19 ← (byte) line::yd < (byte) line::xd
  (boolean~) line::$20 ← ! (boolean~) line::$19
  if((boolean~) line::$20) goto line::@10
  to:line::@24
line::@10: scope:[line]  from line::@23 line::@25
  (void~) line::$22 ← call line_ydxd (byte) line::y0 (byte) line::x0 (byte) line::y1 (byte) line::yd (byte) line::xd 
  to:line::@11
line::@24: scope:[line]  from line::@23
  (void~) line::$21 ← call line_xdyd (byte) line::x1 (byte) line::y1 (byte) line::x0 (byte) line::xd (byte) line::yd 
  to:line::@11
line::@11: scope:[line]  from line::@10 line::@24
  to:line::@12
line::@25: scope:[line]  from
  to:line::@10
line::@12: scope:[line]  from line::@11 line::@14
  to:line::@8
line::@26: scope:[line]  from
  to:line::@9
line::@13: scope:[line]  from line::@28 line::@9
  (void~) line::$27 ← call line_ydxi (byte) line::y1 (byte) line::x1 (byte) line::y0 (byte) line::yd (byte) line::xd 
  to:line::@14
line::@27: scope:[line]  from line::@9
  (void~) line::$26 ← call line_xdyi (byte) line::x1 (byte) line::y1 (byte) line::x0 (byte) line::xd (byte) line::yd 
  to:line::@14
line::@14: scope:[line]  from line::@13 line::@27
  to:line::@12
line::@28: scope:[line]  from
  to:line::@13
line::@return: scope:[line]  from line::@8
  return 
  to:@return
@3: scope:[]  from @2
  to:@4
line_xdyi: scope:[line_xdyi]  from
  (byte~) line_xdyi::$0 ← (byte) line_xdyi::yd >> (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e ← (byte~) line_xdyi::$0
  to:line_xdyi::@1
line_xdyi::@1: scope:[line_xdyi]  from line_xdyi line_xdyi::@2
  (void~) line_xdyi::$1 ← call plot (byte) line_xdyi::x (byte) line_xdyi::y 
  (byte~) line_xdyi::$2 ← (byte) line_xdyi::x + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::x ← (byte~) line_xdyi::$2
  (byte~) line_xdyi::$3 ← (byte) line_xdyi::e + (byte) line_xdyi::yd
  (byte) line_xdyi::e ← (byte~) line_xdyi::$3
  (boolean~) line_xdyi::$4 ← (byte) line_xdyi::xd < (byte) line_xdyi::e
  (boolean~) line_xdyi::$5 ← ! (boolean~) line_xdyi::$4
  if((boolean~) line_xdyi::$5) goto line_xdyi::@2
  to:line_xdyi::@3
line_xdyi::@2: scope:[line_xdyi]  from line_xdyi::@1 line_xdyi::@3
  (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyi::$9 ← (byte) line_xdyi::x < (byte~) line_xdyi::$8
  if((boolean~) line_xdyi::$9) goto line_xdyi::@1
  to:line_xdyi::@4
line_xdyi::@3: scope:[line_xdyi]  from line_xdyi::@1
  (byte~) line_xdyi::$6 ← (byte) line_xdyi::y + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::y ← (byte~) line_xdyi::$6
  (byte~) line_xdyi::$7 ← (byte) line_xdyi::e - (byte) line_xdyi::xd
  (byte) line_xdyi::e ← (byte~) line_xdyi::$7
  to:line_xdyi::@2
line_xdyi::@4: scope:[line_xdyi]  from line_xdyi::@2
  to:line_xdyi::@return
line_xdyi::@return: scope:[line_xdyi]  from line_xdyi::@4
  return 
  to:@return
@4: scope:[]  from @3
  to:@5
line_xdyd: scope:[line_xdyd]  from
  (byte~) line_xdyd::$0 ← (byte) line_xdyd::yd >> (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e ← (byte~) line_xdyd::$0
  to:line_xdyd::@1
line_xdyd::@1: scope:[line_xdyd]  from line_xdyd line_xdyd::@2
  (void~) line_xdyd::$1 ← call plot (byte) line_xdyd::x (byte) line_xdyd::y 
  (byte~) line_xdyd::$2 ← (byte) line_xdyd::x + (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::x ← (byte~) line_xdyd::$2
  (byte~) line_xdyd::$3 ← (byte) line_xdyd::e + (byte) line_xdyd::yd
  (byte) line_xdyd::e ← (byte~) line_xdyd::$3
  (boolean~) line_xdyd::$4 ← (byte) line_xdyd::xd < (byte) line_xdyd::e
  (boolean~) line_xdyd::$5 ← ! (boolean~) line_xdyd::$4
  if((boolean~) line_xdyd::$5) goto line_xdyd::@2
  to:line_xdyd::@3
line_xdyd::@2: scope:[line_xdyd]  from line_xdyd::@1 line_xdyd::@3
  (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyd::$9 ← (byte) line_xdyd::x < (byte~) line_xdyd::$8
  if((boolean~) line_xdyd::$9) goto line_xdyd::@1
  to:line_xdyd::@4
line_xdyd::@3: scope:[line_xdyd]  from line_xdyd::@1
  (byte~) line_xdyd::$6 ← (byte) line_xdyd::y - (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::y ← (byte~) line_xdyd::$6
  (byte~) line_xdyd::$7 ← (byte) line_xdyd::e - (byte) line_xdyd::xd
  (byte) line_xdyd::e ← (byte~) line_xdyd::$7
  to:line_xdyd::@2
line_xdyd::@4: scope:[line_xdyd]  from line_xdyd::@2
  to:line_xdyd::@return
line_xdyd::@return: scope:[line_xdyd]  from line_xdyd::@4
  return 
  to:@return
@5: scope:[]  from @4
  to:@6
line_ydxi: scope:[line_ydxi]  from
  (byte~) line_ydxi::$0 ← (byte) line_ydxi::xd >> (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e ← (byte~) line_ydxi::$0
  to:line_ydxi::@1
line_ydxi::@1: scope:[line_ydxi]  from line_ydxi line_ydxi::@2
  (void~) line_ydxi::$1 ← call plot (byte) line_ydxi::x (byte) line_ydxi::y 
  (byte~) line_ydxi::$2 ← (byte) line_ydxi::y + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::y ← (byte~) line_ydxi::$2
  (byte~) line_ydxi::$3 ← (byte) line_ydxi::e + (byte) line_ydxi::xd
  (byte) line_ydxi::e ← (byte~) line_ydxi::$3
  (boolean~) line_ydxi::$4 ← (byte) line_ydxi::yd < (byte) line_ydxi::e
  (boolean~) line_ydxi::$5 ← ! (boolean~) line_ydxi::$4
  if((boolean~) line_ydxi::$5) goto line_ydxi::@2
  to:line_ydxi::@3
line_ydxi::@2: scope:[line_ydxi]  from line_ydxi::@1 line_ydxi::@3
  (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxi::$9 ← (byte) line_ydxi::y < (byte~) line_ydxi::$8
  if((boolean~) line_ydxi::$9) goto line_ydxi::@1
  to:line_ydxi::@4
line_ydxi::@3: scope:[line_ydxi]  from line_ydxi::@1
  (byte~) line_ydxi::$6 ← (byte) line_ydxi::x + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::x ← (byte~) line_ydxi::$6
  (byte~) line_ydxi::$7 ← (byte) line_ydxi::e - (byte) line_ydxi::yd
  (byte) line_ydxi::e ← (byte~) line_ydxi::$7
  to:line_ydxi::@2
line_ydxi::@4: scope:[line_ydxi]  from line_ydxi::@2
  to:line_ydxi::@return
line_ydxi::@return: scope:[line_ydxi]  from line_ydxi::@4
  return 
  to:@return
@6: scope:[]  from @5
  to:@7
line_ydxd: scope:[line_ydxd]  from
  (byte~) line_ydxd::$0 ← (byte) line_ydxd::xd >> (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e ← (byte~) line_ydxd::$0
  to:line_ydxd::@1
line_ydxd::@1: scope:[line_ydxd]  from line_ydxd line_ydxd::@2
  (void~) line_ydxd::$1 ← call plot (byte) line_ydxd::x (byte) line_ydxd::y 
  (byte~) line_ydxd::$2 ← (byte) line_ydxd::y + (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::y ← (byte~) line_ydxd::$2
  (byte~) line_ydxd::$3 ← (byte) line_ydxd::e + (byte) line_ydxd::xd
  (byte) line_ydxd::e ← (byte~) line_ydxd::$3
  (boolean~) line_ydxd::$4 ← (byte) line_ydxd::yd < (byte) line_ydxd::e
  (boolean~) line_ydxd::$5 ← ! (boolean~) line_ydxd::$4
  if((boolean~) line_ydxd::$5) goto line_ydxd::@2
  to:line_ydxd::@3
line_ydxd::@2: scope:[line_ydxd]  from line_ydxd::@1 line_ydxd::@3
  (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxd::$9 ← (byte) line_ydxd::y < (byte~) line_ydxd::$8
  if((boolean~) line_ydxd::$9) goto line_ydxd::@1
  to:line_ydxd::@4
line_ydxd::@3: scope:[line_ydxd]  from line_ydxd::@1
  (byte~) line_ydxd::$6 ← (byte) line_ydxd::x - (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::x ← (byte~) line_ydxd::$6
  (byte~) line_ydxd::$7 ← (byte) line_ydxd::e - (byte) line_ydxd::yd
  (byte) line_ydxd::e ← (byte~) line_ydxd::$7
  to:line_ydxd::@2
line_ydxd::@4: scope:[line_ydxd]  from line_ydxd::@2
  to:line_ydxd::@return
line_ydxd::@return: scope:[line_ydxd]  from line_ydxd::@4
  return 
  to:@return
@7: scope:[]  from @6
  to:@8
plot: scope:[plot]  from
  (byte*) plot::plotter_x ← ((byte*)) (byte/signed byte/word/signed word) 0
  (word) plot::plotter_y ← (byte/signed byte/word/signed word) 0
  (byte~) plot::$0 ← (byte[]) plot_xhi *idx (byte) plot::x
  (byte*) plot::plotter_x ← (byte*) plot::plotter_x hi= (byte~) plot::$0
  (byte~) plot::$1 ← (byte[]) plot_xlo *idx (byte) plot::x
  (byte*) plot::plotter_x ← (byte*) plot::plotter_x lo= (byte~) plot::$1
  (byte~) plot::$2 ← (byte[]) plot_yhi *idx (byte) plot::y
  (word) plot::plotter_y ← (word) plot::plotter_y hi= (byte~) plot::$2
  (byte~) plot::$3 ← (byte[]) plot_ylo *idx (byte) plot::y
  (word) plot::plotter_y ← (word) plot::plotter_y lo= (byte~) plot::$3
  (byte*~) plot::$4 ← (byte*) plot::plotter_x + (word) plot::plotter_y
  (byte*) plot::plotter ← (byte*~) plot::$4
  (byte~) plot::$5 ← (byte[]) plot_bit *idx (byte) plot::x
  (byte~) plot::$6 ← *((byte*) plot::plotter) | (byte~) plot::$5
  *((byte*) plot::plotter) ← (byte~) plot::$6
  to:plot::@return
plot::@return: scope:[plot]  from plot
  return 
  to:@return
@8: scope:[]  from @7
  to:@9
init_plot_tables: scope:[init_plot_tables]  from
  (byte) init_plot_tables::bits ← (byte/word/signed word) 128
  (byte) init_plot_tables::x ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@1
init_plot_tables::@1: scope:[init_plot_tables]  from init_plot_tables init_plot_tables::@2
  (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x & (byte/word/signed word) 248
  *((byte[]) plot_xlo + (byte) init_plot_tables::x) ← (byte~) init_plot_tables::$0
  (byte~) init_plot_tables::$1 ← > (byte*) BITMAP
  *((byte[]) plot_xhi + (byte) init_plot_tables::x) ← (byte~) init_plot_tables::$1
  *((byte[]) plot_bit + (byte) init_plot_tables::x) ← (byte) init_plot_tables::bits
  (byte~) init_plot_tables::$2 ← (byte) init_plot_tables::bits >> (byte/signed byte/word/signed word) 1
  (byte) init_plot_tables::bits ← (byte~) init_plot_tables::$2
  (boolean~) init_plot_tables::$3 ← (byte) init_plot_tables::bits == (byte/signed byte/word/signed word) 0
  (boolean~) init_plot_tables::$4 ← ! (boolean~) init_plot_tables::$3
  if((boolean~) init_plot_tables::$4) goto init_plot_tables::@2
  to:init_plot_tables::@5
init_plot_tables::@2: scope:[init_plot_tables]  from init_plot_tables::@1 init_plot_tables::@5
  (byte) init_plot_tables::x ← ++ (byte) init_plot_tables::x
  (boolean~) init_plot_tables::$5 ← (byte) init_plot_tables::x != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$5) goto init_plot_tables::@1
  to:init_plot_tables::@6
init_plot_tables::@5: scope:[init_plot_tables]  from init_plot_tables::@1
  (byte) init_plot_tables::bits ← (byte/word/signed word) 128
  to:init_plot_tables::@2
init_plot_tables::@6: scope:[init_plot_tables]  from init_plot_tables::@2
  (byte*) init_plot_tables::yoffs ← ((byte*)) (byte/signed byte/word/signed word) 0
  (byte) init_plot_tables::y ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@3
init_plot_tables::@3: scope:[init_plot_tables]  from init_plot_tables::@4 init_plot_tables::@6
  (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y & (byte/signed byte/word/signed word) 7
  (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs
  (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7
  *((byte[]) plot_ylo + (byte) init_plot_tables::y) ← (byte~) init_plot_tables::$8
  (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs
  *((byte[]) plot_yhi + (byte) init_plot_tables::y) ← (byte~) init_plot_tables::$9
  (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y & (byte/signed byte/word/signed word) 7
  (boolean~) init_plot_tables::$11 ← (byte~) init_plot_tables::$10 == (byte/signed byte/word/signed word) 7
  (boolean~) init_plot_tables::$12 ← ! (boolean~) init_plot_tables::$11
  if((boolean~) init_plot_tables::$12) goto init_plot_tables::@4
  to:init_plot_tables::@7
init_plot_tables::@4: scope:[init_plot_tables]  from init_plot_tables::@3 init_plot_tables::@7
  (byte) init_plot_tables::y ← ++ (byte) init_plot_tables::y
  (boolean~) init_plot_tables::$14 ← (byte) init_plot_tables::y != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$14) goto init_plot_tables::@3
  to:init_plot_tables::@8
init_plot_tables::@7: scope:[init_plot_tables]  from init_plot_tables::@3
  (byte*~) init_plot_tables::$13 ← (byte*) init_plot_tables::yoffs + (word/signed word) 320
  (byte*) init_plot_tables::yoffs ← (byte*~) init_plot_tables::$13
  to:init_plot_tables::@4
init_plot_tables::@8: scope:[init_plot_tables]  from init_plot_tables::@4
  to:init_plot_tables::@return
init_plot_tables::@return: scope:[init_plot_tables]  from init_plot_tables::@8
  return 
  to:@return
@9: scope:[]  from @8
  to:@10
init_screen: scope:[init_screen]  from
  (byte*) init_screen::b ← (byte*) BITMAP
  to:init_screen::@1
init_screen::@1: scope:[init_screen]  from init_screen init_screen::@1
  *((byte*) init_screen::b) ← (byte/signed byte/word/signed word) 0
  (byte*) init_screen::b ← ++ (byte*) init_screen::b
  (byte*~) init_screen::$0 ← (byte*) BITMAP + (word/signed word) 8192
  (boolean~) init_screen::$1 ← (byte*) init_screen::b != (byte*~) init_screen::$0
  if((boolean~) init_screen::$1) goto init_screen::@1
  to:init_screen::@3
init_screen::@3: scope:[init_screen]  from init_screen::@1
  (byte*) init_screen::c ← (byte*) SCREEN
  to:init_screen::@2
init_screen::@2: scope:[init_screen]  from init_screen::@2 init_screen::@3
  *((byte*) init_screen::c) ← (byte/signed byte/word/signed word) 20
  (byte*) init_screen::c ← ++ (byte*) init_screen::c
  (byte*~) init_screen::$2 ← (byte*) SCREEN + (word/signed word) 1024
  (boolean~) init_screen::$3 ← (byte*) init_screen::c != (byte*~) init_screen::$2
  if((boolean~) init_screen::$3) goto init_screen::@2
  to:init_screen::@4
init_screen::@4: scope:[init_screen]  from init_screen::@2
  to:init_screen::@return
init_screen::@return: scope:[init_screen]  from init_screen::@4
  return 
  to:@return
@10: scope:[]  from @9
  call main 
  to:@end
@end: scope:[]  from @10

Eliminating unused variable (byte*) COLS and assignment [0] (byte*) COLS ← ((byte*)) (word) 55296
Eliminating unused variable (byte*) SCROLL and assignment [3] (byte*) SCROLL ← ((byte*)) (word) 53270
Eliminating unused variable (byte) RST8 and assignment [6] (byte) RST8 ← (byte/word/signed word) 128
Eliminating unused variable (byte) ECM and assignment [7] (byte) ECM ← (byte/signed byte/word/signed word) 64
Eliminating unused variable (byte*) D016 and assignment [11] (byte*) D016 ← ((byte*)) (word) 53270
Eliminating unused variable (byte) MCM and assignment [12] (byte) MCM ← (byte/signed byte/word/signed word) 16
Eliminating unused variable (byte) CSEL and assignment [13] (byte) CSEL ← (byte/signed byte/word/signed word) 8
Eliminating unused variable - keeping the call (void~) main::$3
Eliminating unused variable - keeping the call (void~) main::$4
Eliminating unused variable - keeping the call (void~) main::$5
Eliminating unused variable - keeping the call (void~) lines::$6
Eliminating unused variable - keeping the call (void~) line::$9
Eliminating unused variable - keeping the call (void~) line::$8
Eliminating unused variable - keeping the call (void~) line::$14
Eliminating unused variable - keeping the call (void~) line::$13
Eliminating unused variable - keeping the call (void~) line::$22
Eliminating unused variable - keeping the call (void~) line::$21
Eliminating unused variable - keeping the call (void~) line::$27
Eliminating unused variable - keeping the call (void~) line::$26
Eliminating unused variable - keeping the call (void~) line_xdyi::$1
Eliminating unused variable - keeping the call (void~) line_xdyd::$1
Eliminating unused variable - keeping the call (void~) line_ydxi::$1
Eliminating unused variable - keeping the call (void~) line_ydxd::$1
Removing empty block main::@2
Removing empty block @1
Removing empty block lines::@2
Removing empty block @2
Removing empty block line::@4
Removing empty block line::@18
Removing empty block line::@5
Removing empty block line::@19
Removing empty block line::@7
Removing empty block line::@21
Removing empty block line::@8
Removing empty block line::@22
Removing empty block line::@11
Removing empty block line::@25
Removing empty block line::@12
Removing empty block line::@26
Removing empty block line::@14
Removing empty block line::@28
Removing empty block @3
Removing empty block line_xdyi::@4
Removing empty block @4
Removing empty block line_xdyd::@4
Removing empty block @5
Removing empty block line_ydxi::@4
Removing empty block @6
Removing empty block line_ydxd::@4
Removing empty block @7
Removing empty block @8
Removing empty block init_plot_tables::@8
Removing empty block @9
Removing empty block init_screen::@4
CONTROL FLOW GRAPH
@begin: scope:[]  from
  (byte*) BGCOL ← ((byte*)) (word) 53280
  (byte*) FGCOL ← ((byte*)) (word) 53281
  (byte*) D018 ← ((byte*)) (word) 53272
  (byte*) D011 ← ((byte*)) (word) 53265
  (byte) BMM ← (byte/signed byte/word/signed word) 32
  (byte) DEN ← (byte/signed byte/word/signed word) 16
  (byte) RSEL ← (byte/signed byte/word/signed word) 8
  (byte*) SCREEN ← ((byte*)) (word/signed word) 1024
  (byte*) BITMAP ← ((byte*)) (word/signed word) 8192
  (byte[]) plot_xlo ← ((byte*)) (word/signed word) 4096
  (byte[]) plot_xhi ← ((byte*)) (word/signed word) 4352
  (byte[]) plot_ylo ← ((byte*)) (word/signed word) 4608
  (byte[]) plot_yhi ← ((byte*)) (word/signed word) 4864
  (byte[]) plot_bit ← ((byte*)) (word/signed word) 5120
  (byte[]) lines_x ← { (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60 }
  (byte[]) lines_y ← { (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10 }
  (byte) lines_cnt ← (byte/signed byte/word/signed word) 8
  to:@10
main: scope:[main]  from
  *((byte*) BGCOL) ← (byte/signed byte/word/signed word) 0
  *((byte*) FGCOL) ← (byte/signed byte/word/signed word) 0
  (byte~) main::$0 ← (byte) BMM | (byte) DEN
  (byte~) main::$1 ← (byte~) main::$0 | (byte) RSEL
  (byte~) main::$2 ← (byte~) main::$1 | (byte/signed byte/word/signed word) 3
  *((byte*) D011) ← (byte~) main::$2
  *((byte*) D018) ← (byte/signed byte/word/signed word) 24
  call init_screen 
  call init_plot_tables 
  to:main::@1
main::@1: scope:[main]  from main main::@1
  call lines 
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@1
  return 
  to:@return
lines: scope:[lines]  from
  (byte) lines::l ← (byte/signed byte/word/signed word) 0
  to:lines::@1
lines::@1: scope:[lines]  from lines lines::@1
  (byte~) lines::$0 ← (byte[]) lines_x *idx (byte) lines::l
  (byte~) lines::$1 ← (byte) lines::l + (byte/signed byte/word/signed word) 1
  (byte~) lines::$2 ← (byte[]) lines_x *idx (byte~) lines::$1
  (byte~) lines::$3 ← (byte[]) lines_y *idx (byte) lines::l
  (byte~) lines::$4 ← (byte) lines::l + (byte/signed byte/word/signed word) 1
  (byte~) lines::$5 ← (byte[]) lines_y *idx (byte~) lines::$4
  call line (byte~) lines::$0 (byte~) lines::$2 (byte~) lines::$3 (byte~) lines::$5 
  (byte) lines::l ← ++ (byte) lines::l
  (boolean~) lines::$7 ← (byte) lines::l < (byte) lines_cnt
  if((boolean~) lines::$7) goto lines::@1
  to:lines::@return
lines::@return: scope:[lines]  from lines::@1
  return 
  to:@return
line: scope:[line]  from
  (boolean~) line::$0 ← (byte) line::x0 < (byte) line::x1
  (boolean~) line::$1 ← ! (boolean~) line::$0
  if((boolean~) line::$1) goto line::@1
  to:line::@15
line::@1: scope:[line]  from line
  (byte~) line::$15 ← (byte) line::x0 - (byte) line::x1
  (byte) line::xd ← (byte~) line::$15
  (boolean~) line::$16 ← (byte) line::y0 < (byte) line::y1
  (boolean~) line::$17 ← ! (boolean~) line::$16
  if((boolean~) line::$17) goto line::@9
  to:line::@23
line::@15: scope:[line]  from line
  (byte~) line::$2 ← (byte) line::x1 - (byte) line::x0
  (byte) line::xd ← (byte~) line::$2
  (boolean~) line::$3 ← (byte) line::y0 < (byte) line::y1
  (boolean~) line::$4 ← ! (boolean~) line::$3
  if((boolean~) line::$4) goto line::@2
  to:line::@16
line::@2: scope:[line]  from line::@15
  (byte~) line::$10 ← (byte) line::y0 - (byte) line::y1
  (byte) line::yd ← (byte~) line::$10
  (boolean~) line::$11 ← (byte) line::yd < (byte) line::xd
  (boolean~) line::$12 ← ! (boolean~) line::$11
  if((boolean~) line::$12) goto line::@6
  to:line::@20
line::@16: scope:[line]  from line::@15
  (byte~) line::$5 ← (byte) line::y1 - (byte) line::y0
  (byte) line::yd ← (byte~) line::$5
  (boolean~) line::$6 ← (byte) line::yd < (byte) line::xd
  (boolean~) line::$7 ← ! (boolean~) line::$6
  if((boolean~) line::$7) goto line::@3
  to:line::@17
line::@3: scope:[line]  from line::@16
  call line_ydxi (byte) line::y0 (byte) line::x0 (byte) line::y1 (byte) line::yd (byte) line::xd 
  to:line::@return
line::@17: scope:[line]  from line::@16
  call line_xdyi (byte) line::x0 (byte) line::y0 (byte) line::x1 (byte) line::xd (byte) line::yd 
  to:line::@return
line::@6: scope:[line]  from line::@2
  call line_ydxd (byte) line::y1 (byte) line::x1 (byte) line::y0 (byte) line::yd (byte) line::xd 
  to:line::@return
line::@20: scope:[line]  from line::@2
  call line_xdyd (byte) line::x0 (byte) line::y0 (byte) line::x1 (byte) line::xd (byte) line::yd 
  to:line::@return
line::@9: scope:[line]  from line::@1
  (byte~) line::$23 ← (byte) line::y0 - (byte) line::y1
  (byte) line::yd ← (byte~) line::$23
  (boolean~) line::$24 ← (byte) line::yd < (byte) line::xd
  (boolean~) line::$25 ← ! (boolean~) line::$24
  if((boolean~) line::$25) goto line::@13
  to:line::@27
line::@23: scope:[line]  from line::@1
  (byte~) line::$18 ← (byte) line::y1 - (byte) line::y0
  (byte) line::yd ← (byte~) line::$18
  (boolean~) line::$19 ← (byte) line::yd < (byte) line::xd
  (boolean~) line::$20 ← ! (boolean~) line::$19
  if((boolean~) line::$20) goto line::@10
  to:line::@24
line::@10: scope:[line]  from line::@23
  call line_ydxd (byte) line::y0 (byte) line::x0 (byte) line::y1 (byte) line::yd (byte) line::xd 
  to:line::@return
line::@24: scope:[line]  from line::@23
  call line_xdyd (byte) line::x1 (byte) line::y1 (byte) line::x0 (byte) line::xd (byte) line::yd 
  to:line::@return
line::@13: scope:[line]  from line::@9
  call line_ydxi (byte) line::y1 (byte) line::x1 (byte) line::y0 (byte) line::yd (byte) line::xd 
  to:line::@return
line::@27: scope:[line]  from line::@9
  call line_xdyi (byte) line::x1 (byte) line::y1 (byte) line::x0 (byte) line::xd (byte) line::yd 
  to:line::@return
line::@return: scope:[line]  from line::@10 line::@13 line::@17 line::@20 line::@24 line::@27 line::@3 line::@6
  return 
  to:@return
line_xdyi: scope:[line_xdyi]  from
  (byte~) line_xdyi::$0 ← (byte) line_xdyi::yd >> (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e ← (byte~) line_xdyi::$0
  to:line_xdyi::@1
line_xdyi::@1: scope:[line_xdyi]  from line_xdyi line_xdyi::@2
  call plot (byte) line_xdyi::x (byte) line_xdyi::y 
  (byte~) line_xdyi::$2 ← (byte) line_xdyi::x + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::x ← (byte~) line_xdyi::$2
  (byte~) line_xdyi::$3 ← (byte) line_xdyi::e + (byte) line_xdyi::yd
  (byte) line_xdyi::e ← (byte~) line_xdyi::$3
  (boolean~) line_xdyi::$4 ← (byte) line_xdyi::xd < (byte) line_xdyi::e
  (boolean~) line_xdyi::$5 ← ! (boolean~) line_xdyi::$4
  if((boolean~) line_xdyi::$5) goto line_xdyi::@2
  to:line_xdyi::@3
line_xdyi::@2: scope:[line_xdyi]  from line_xdyi::@1 line_xdyi::@3
  (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyi::$9 ← (byte) line_xdyi::x < (byte~) line_xdyi::$8
  if((boolean~) line_xdyi::$9) goto line_xdyi::@1
  to:line_xdyi::@return
line_xdyi::@3: scope:[line_xdyi]  from line_xdyi::@1
  (byte~) line_xdyi::$6 ← (byte) line_xdyi::y + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::y ← (byte~) line_xdyi::$6
  (byte~) line_xdyi::$7 ← (byte) line_xdyi::e - (byte) line_xdyi::xd
  (byte) line_xdyi::e ← (byte~) line_xdyi::$7
  to:line_xdyi::@2
line_xdyi::@return: scope:[line_xdyi]  from line_xdyi::@2
  return 
  to:@return
line_xdyd: scope:[line_xdyd]  from
  (byte~) line_xdyd::$0 ← (byte) line_xdyd::yd >> (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e ← (byte~) line_xdyd::$0
  to:line_xdyd::@1
line_xdyd::@1: scope:[line_xdyd]  from line_xdyd line_xdyd::@2
  call plot (byte) line_xdyd::x (byte) line_xdyd::y 
  (byte~) line_xdyd::$2 ← (byte) line_xdyd::x + (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::x ← (byte~) line_xdyd::$2
  (byte~) line_xdyd::$3 ← (byte) line_xdyd::e + (byte) line_xdyd::yd
  (byte) line_xdyd::e ← (byte~) line_xdyd::$3
  (boolean~) line_xdyd::$4 ← (byte) line_xdyd::xd < (byte) line_xdyd::e
  (boolean~) line_xdyd::$5 ← ! (boolean~) line_xdyd::$4
  if((boolean~) line_xdyd::$5) goto line_xdyd::@2
  to:line_xdyd::@3
line_xdyd::@2: scope:[line_xdyd]  from line_xdyd::@1 line_xdyd::@3
  (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyd::$9 ← (byte) line_xdyd::x < (byte~) line_xdyd::$8
  if((boolean~) line_xdyd::$9) goto line_xdyd::@1
  to:line_xdyd::@return
line_xdyd::@3: scope:[line_xdyd]  from line_xdyd::@1
  (byte~) line_xdyd::$6 ← (byte) line_xdyd::y - (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::y ← (byte~) line_xdyd::$6
  (byte~) line_xdyd::$7 ← (byte) line_xdyd::e - (byte) line_xdyd::xd
  (byte) line_xdyd::e ← (byte~) line_xdyd::$7
  to:line_xdyd::@2
line_xdyd::@return: scope:[line_xdyd]  from line_xdyd::@2
  return 
  to:@return
line_ydxi: scope:[line_ydxi]  from
  (byte~) line_ydxi::$0 ← (byte) line_ydxi::xd >> (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e ← (byte~) line_ydxi::$0
  to:line_ydxi::@1
line_ydxi::@1: scope:[line_ydxi]  from line_ydxi line_ydxi::@2
  call plot (byte) line_ydxi::x (byte) line_ydxi::y 
  (byte~) line_ydxi::$2 ← (byte) line_ydxi::y + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::y ← (byte~) line_ydxi::$2
  (byte~) line_ydxi::$3 ← (byte) line_ydxi::e + (byte) line_ydxi::xd
  (byte) line_ydxi::e ← (byte~) line_ydxi::$3
  (boolean~) line_ydxi::$4 ← (byte) line_ydxi::yd < (byte) line_ydxi::e
  (boolean~) line_ydxi::$5 ← ! (boolean~) line_ydxi::$4
  if((boolean~) line_ydxi::$5) goto line_ydxi::@2
  to:line_ydxi::@3
line_ydxi::@2: scope:[line_ydxi]  from line_ydxi::@1 line_ydxi::@3
  (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxi::$9 ← (byte) line_ydxi::y < (byte~) line_ydxi::$8
  if((boolean~) line_ydxi::$9) goto line_ydxi::@1
  to:line_ydxi::@return
line_ydxi::@3: scope:[line_ydxi]  from line_ydxi::@1
  (byte~) line_ydxi::$6 ← (byte) line_ydxi::x + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::x ← (byte~) line_ydxi::$6
  (byte~) line_ydxi::$7 ← (byte) line_ydxi::e - (byte) line_ydxi::yd
  (byte) line_ydxi::e ← (byte~) line_ydxi::$7
  to:line_ydxi::@2
line_ydxi::@return: scope:[line_ydxi]  from line_ydxi::@2
  return 
  to:@return
line_ydxd: scope:[line_ydxd]  from
  (byte~) line_ydxd::$0 ← (byte) line_ydxd::xd >> (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e ← (byte~) line_ydxd::$0
  to:line_ydxd::@1
line_ydxd::@1: scope:[line_ydxd]  from line_ydxd line_ydxd::@2
  call plot (byte) line_ydxd::x (byte) line_ydxd::y 
  (byte~) line_ydxd::$2 ← (byte) line_ydxd::y + (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::y ← (byte~) line_ydxd::$2
  (byte~) line_ydxd::$3 ← (byte) line_ydxd::e + (byte) line_ydxd::xd
  (byte) line_ydxd::e ← (byte~) line_ydxd::$3
  (boolean~) line_ydxd::$4 ← (byte) line_ydxd::yd < (byte) line_ydxd::e
  (boolean~) line_ydxd::$5 ← ! (boolean~) line_ydxd::$4
  if((boolean~) line_ydxd::$5) goto line_ydxd::@2
  to:line_ydxd::@3
line_ydxd::@2: scope:[line_ydxd]  from line_ydxd::@1 line_ydxd::@3
  (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxd::$9 ← (byte) line_ydxd::y < (byte~) line_ydxd::$8
  if((boolean~) line_ydxd::$9) goto line_ydxd::@1
  to:line_ydxd::@return
line_ydxd::@3: scope:[line_ydxd]  from line_ydxd::@1
  (byte~) line_ydxd::$6 ← (byte) line_ydxd::x - (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::x ← (byte~) line_ydxd::$6
  (byte~) line_ydxd::$7 ← (byte) line_ydxd::e - (byte) line_ydxd::yd
  (byte) line_ydxd::e ← (byte~) line_ydxd::$7
  to:line_ydxd::@2
line_ydxd::@return: scope:[line_ydxd]  from line_ydxd::@2
  return 
  to:@return
plot: scope:[plot]  from
  (byte*) plot::plotter_x ← ((byte*)) (byte/signed byte/word/signed word) 0
  (word) plot::plotter_y ← (byte/signed byte/word/signed word) 0
  (byte~) plot::$0 ← (byte[]) plot_xhi *idx (byte) plot::x
  (byte*) plot::plotter_x ← (byte*) plot::plotter_x hi= (byte~) plot::$0
  (byte~) plot::$1 ← (byte[]) plot_xlo *idx (byte) plot::x
  (byte*) plot::plotter_x ← (byte*) plot::plotter_x lo= (byte~) plot::$1
  (byte~) plot::$2 ← (byte[]) plot_yhi *idx (byte) plot::y
  (word) plot::plotter_y ← (word) plot::plotter_y hi= (byte~) plot::$2
  (byte~) plot::$3 ← (byte[]) plot_ylo *idx (byte) plot::y
  (word) plot::plotter_y ← (word) plot::plotter_y lo= (byte~) plot::$3
  (byte*~) plot::$4 ← (byte*) plot::plotter_x + (word) plot::plotter_y
  (byte*) plot::plotter ← (byte*~) plot::$4
  (byte~) plot::$5 ← (byte[]) plot_bit *idx (byte) plot::x
  (byte~) plot::$6 ← *((byte*) plot::plotter) | (byte~) plot::$5
  *((byte*) plot::plotter) ← (byte~) plot::$6
  to:plot::@return
plot::@return: scope:[plot]  from plot
  return 
  to:@return
init_plot_tables: scope:[init_plot_tables]  from
  (byte) init_plot_tables::bits ← (byte/word/signed word) 128
  (byte) init_plot_tables::x ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@1
init_plot_tables::@1: scope:[init_plot_tables]  from init_plot_tables init_plot_tables::@2
  (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x & (byte/word/signed word) 248
  *((byte[]) plot_xlo + (byte) init_plot_tables::x) ← (byte~) init_plot_tables::$0
  (byte~) init_plot_tables::$1 ← > (byte*) BITMAP
  *((byte[]) plot_xhi + (byte) init_plot_tables::x) ← (byte~) init_plot_tables::$1
  *((byte[]) plot_bit + (byte) init_plot_tables::x) ← (byte) init_plot_tables::bits
  (byte~) init_plot_tables::$2 ← (byte) init_plot_tables::bits >> (byte/signed byte/word/signed word) 1
  (byte) init_plot_tables::bits ← (byte~) init_plot_tables::$2
  (boolean~) init_plot_tables::$3 ← (byte) init_plot_tables::bits == (byte/signed byte/word/signed word) 0
  (boolean~) init_plot_tables::$4 ← ! (boolean~) init_plot_tables::$3
  if((boolean~) init_plot_tables::$4) goto init_plot_tables::@2
  to:init_plot_tables::@5
init_plot_tables::@2: scope:[init_plot_tables]  from init_plot_tables::@1 init_plot_tables::@5
  (byte) init_plot_tables::x ← ++ (byte) init_plot_tables::x
  (boolean~) init_plot_tables::$5 ← (byte) init_plot_tables::x != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$5) goto init_plot_tables::@1
  to:init_plot_tables::@6
init_plot_tables::@5: scope:[init_plot_tables]  from init_plot_tables::@1
  (byte) init_plot_tables::bits ← (byte/word/signed word) 128
  to:init_plot_tables::@2
init_plot_tables::@6: scope:[init_plot_tables]  from init_plot_tables::@2
  (byte*) init_plot_tables::yoffs ← ((byte*)) (byte/signed byte/word/signed word) 0
  (byte) init_plot_tables::y ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@3
init_plot_tables::@3: scope:[init_plot_tables]  from init_plot_tables::@4 init_plot_tables::@6
  (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y & (byte/signed byte/word/signed word) 7
  (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs
  (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7
  *((byte[]) plot_ylo + (byte) init_plot_tables::y) ← (byte~) init_plot_tables::$8
  (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs
  *((byte[]) plot_yhi + (byte) init_plot_tables::y) ← (byte~) init_plot_tables::$9
  (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y & (byte/signed byte/word/signed word) 7
  (boolean~) init_plot_tables::$11 ← (byte~) init_plot_tables::$10 == (byte/signed byte/word/signed word) 7
  (boolean~) init_plot_tables::$12 ← ! (boolean~) init_plot_tables::$11
  if((boolean~) init_plot_tables::$12) goto init_plot_tables::@4
  to:init_plot_tables::@7
init_plot_tables::@4: scope:[init_plot_tables]  from init_plot_tables::@3 init_plot_tables::@7
  (byte) init_plot_tables::y ← ++ (byte) init_plot_tables::y
  (boolean~) init_plot_tables::$14 ← (byte) init_plot_tables::y != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$14) goto init_plot_tables::@3
  to:init_plot_tables::@return
init_plot_tables::@7: scope:[init_plot_tables]  from init_plot_tables::@3
  (byte*~) init_plot_tables::$13 ← (byte*) init_plot_tables::yoffs + (word/signed word) 320
  (byte*) init_plot_tables::yoffs ← (byte*~) init_plot_tables::$13
  to:init_plot_tables::@4
init_plot_tables::@return: scope:[init_plot_tables]  from init_plot_tables::@4
  return 
  to:@return
init_screen: scope:[init_screen]  from
  (byte*) init_screen::b ← (byte*) BITMAP
  to:init_screen::@1
init_screen::@1: scope:[init_screen]  from init_screen init_screen::@1
  *((byte*) init_screen::b) ← (byte/signed byte/word/signed word) 0
  (byte*) init_screen::b ← ++ (byte*) init_screen::b
  (byte*~) init_screen::$0 ← (byte*) BITMAP + (word/signed word) 8192
  (boolean~) init_screen::$1 ← (byte*) init_screen::b != (byte*~) init_screen::$0
  if((boolean~) init_screen::$1) goto init_screen::@1
  to:init_screen::@3
init_screen::@3: scope:[init_screen]  from init_screen::@1
  (byte*) init_screen::c ← (byte*) SCREEN
  to:init_screen::@2
init_screen::@2: scope:[init_screen]  from init_screen::@2 init_screen::@3
  *((byte*) init_screen::c) ← (byte/signed byte/word/signed word) 20
  (byte*) init_screen::c ← ++ (byte*) init_screen::c
  (byte*~) init_screen::$2 ← (byte*) SCREEN + (word/signed word) 1024
  (boolean~) init_screen::$3 ← (byte*) init_screen::c != (byte*~) init_screen::$2
  if((boolean~) init_screen::$3) goto init_screen::@2
  to:init_screen::@return
init_screen::@return: scope:[init_screen]  from init_screen::@2
  return 
  to:@return
@10: scope:[]  from @begin
  call main 
  to:@end
@end: scope:[]  from @10

PROCEDURE MODIFY VARIABLE ANALYSIS

CONTROL FLOW GRAPH WITH ASSIGNMENT CALL
@begin: scope:[]  from
  (byte*) BGCOL ← ((byte*)) (word) 53280
  (byte*) FGCOL ← ((byte*)) (word) 53281
  (byte*) D018 ← ((byte*)) (word) 53272
  (byte*) D011 ← ((byte*)) (word) 53265
  (byte) BMM ← (byte/signed byte/word/signed word) 32
  (byte) DEN ← (byte/signed byte/word/signed word) 16
  (byte) RSEL ← (byte/signed byte/word/signed word) 8
  (byte*) SCREEN ← ((byte*)) (word/signed word) 1024
  (byte*) BITMAP ← ((byte*)) (word/signed word) 8192
  (byte[]) plot_xlo ← ((byte*)) (word/signed word) 4096
  (byte[]) plot_xhi ← ((byte*)) (word/signed word) 4352
  (byte[]) plot_ylo ← ((byte*)) (word/signed word) 4608
  (byte[]) plot_yhi ← ((byte*)) (word/signed word) 4864
  (byte[]) plot_bit ← ((byte*)) (word/signed word) 5120
  (byte[]) lines_x ← { (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60 }
  (byte[]) lines_y ← { (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10 }
  (byte) lines_cnt ← (byte/signed byte/word/signed word) 8
  to:@10
main: scope:[main]  from @10
  *((byte*) BGCOL) ← (byte/signed byte/word/signed word) 0
  *((byte*) FGCOL) ← (byte/signed byte/word/signed word) 0
  (byte~) main::$0 ← (byte) BMM | (byte) DEN
  (byte~) main::$1 ← (byte~) main::$0 | (byte) RSEL
  (byte~) main::$2 ← (byte~) main::$1 | (byte/signed byte/word/signed word) 3
  *((byte*) D011) ← (byte~) main::$2
  *((byte*) D018) ← (byte/signed byte/word/signed word) 24
  call init_screen param-assignment
  to:main::@3
main::@3: scope:[main]  from main
  call init_plot_tables param-assignment
  to:main::@4
main::@4: scope:[main]  from main::@3
  to:main::@1
main::@1: scope:[main]  from main::@4 main::@5
  call lines param-assignment
  to:main::@5
main::@5: scope:[main]  from main::@1
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@5
  return 
  to:@return
lines: scope:[lines]  from main::@1
  (byte) lines::l ← (byte/signed byte/word/signed word) 0
  to:lines::@1
lines::@1: scope:[lines]  from lines lines::@3
  (byte~) lines::$0 ← (byte[]) lines_x *idx (byte) lines::l
  (byte~) lines::$1 ← (byte) lines::l + (byte/signed byte/word/signed word) 1
  (byte~) lines::$2 ← (byte[]) lines_x *idx (byte~) lines::$1
  (byte~) lines::$3 ← (byte[]) lines_y *idx (byte) lines::l
  (byte~) lines::$4 ← (byte) lines::l + (byte/signed byte/word/signed word) 1
  (byte~) lines::$5 ← (byte[]) lines_y *idx (byte~) lines::$4
  (byte) line::x0 ← (byte~) lines::$0
  (byte) line::x1 ← (byte~) lines::$2
  (byte) line::y0 ← (byte~) lines::$3
  (byte) line::y1 ← (byte~) lines::$5
  call line param-assignment
  to:lines::@3
lines::@3: scope:[lines]  from lines::@1
  (byte) lines::l ← ++ (byte) lines::l
  (boolean~) lines::$7 ← (byte) lines::l < (byte) lines_cnt
  if((boolean~) lines::$7) goto lines::@1
  to:lines::@return
lines::@return: scope:[lines]  from lines::@3
  return 
  to:@return
line: scope:[line]  from lines::@1
  (boolean~) line::$0 ← (byte) line::x0 < (byte) line::x1
  (boolean~) line::$1 ← ! (boolean~) line::$0
  if((boolean~) line::$1) goto line::@1
  to:line::@15
line::@1: scope:[line]  from line
  (byte~) line::$15 ← (byte) line::x0 - (byte) line::x1
  (byte) line::xd ← (byte~) line::$15
  (boolean~) line::$16 ← (byte) line::y0 < (byte) line::y1
  (boolean~) line::$17 ← ! (boolean~) line::$16
  if((boolean~) line::$17) goto line::@9
  to:line::@23
line::@15: scope:[line]  from line
  (byte~) line::$2 ← (byte) line::x1 - (byte) line::x0
  (byte) line::xd ← (byte~) line::$2
  (boolean~) line::$3 ← (byte) line::y0 < (byte) line::y1
  (boolean~) line::$4 ← ! (boolean~) line::$3
  if((boolean~) line::$4) goto line::@2
  to:line::@16
line::@2: scope:[line]  from line::@15
  (byte~) line::$10 ← (byte) line::y0 - (byte) line::y1
  (byte) line::yd ← (byte~) line::$10
  (boolean~) line::$11 ← (byte) line::yd < (byte) line::xd
  (boolean~) line::$12 ← ! (boolean~) line::$11
  if((boolean~) line::$12) goto line::@6
  to:line::@20
line::@16: scope:[line]  from line::@15
  (byte~) line::$5 ← (byte) line::y1 - (byte) line::y0
  (byte) line::yd ← (byte~) line::$5
  (boolean~) line::$6 ← (byte) line::yd < (byte) line::xd
  (boolean~) line::$7 ← ! (boolean~) line::$6
  if((boolean~) line::$7) goto line::@3
  to:line::@17
line::@3: scope:[line]  from line::@16
  (byte) line_ydxi::y ← (byte) line::y0
  (byte) line_ydxi::x ← (byte) line::x0
  (byte) line_ydxi::y1 ← (byte) line::y1
  (byte) line_ydxi::yd ← (byte) line::yd
  (byte) line_ydxi::xd ← (byte) line::xd
  call line_ydxi param-assignment
  to:line::@29
line::@29: scope:[line]  from line::@3
  to:line::@return
line::@17: scope:[line]  from line::@16
  (byte) line_xdyi::x ← (byte) line::x0
  (byte) line_xdyi::y ← (byte) line::y0
  (byte) line_xdyi::x1 ← (byte) line::x1
  (byte) line_xdyi::xd ← (byte) line::xd
  (byte) line_xdyi::yd ← (byte) line::yd
  call line_xdyi param-assignment
  to:line::@30
line::@30: scope:[line]  from line::@17
  to:line::@return
line::@6: scope:[line]  from line::@2
  (byte) line_ydxd::y ← (byte) line::y1
  (byte) line_ydxd::x ← (byte) line::x1
  (byte) line_ydxd::y1 ← (byte) line::y0
  (byte) line_ydxd::yd ← (byte) line::yd
  (byte) line_ydxd::xd ← (byte) line::xd
  call line_ydxd param-assignment
  to:line::@31
line::@31: scope:[line]  from line::@6
  to:line::@return
line::@20: scope:[line]  from line::@2
  (byte) line_xdyd::x ← (byte) line::x0
  (byte) line_xdyd::y ← (byte) line::y0
  (byte) line_xdyd::x1 ← (byte) line::x1
  (byte) line_xdyd::xd ← (byte) line::xd
  (byte) line_xdyd::yd ← (byte) line::yd
  call line_xdyd param-assignment
  to:line::@32
line::@32: scope:[line]  from line::@20
  to:line::@return
line::@9: scope:[line]  from line::@1
  (byte~) line::$23 ← (byte) line::y0 - (byte) line::y1
  (byte) line::yd ← (byte~) line::$23
  (boolean~) line::$24 ← (byte) line::yd < (byte) line::xd
  (boolean~) line::$25 ← ! (boolean~) line::$24
  if((boolean~) line::$25) goto line::@13
  to:line::@27
line::@23: scope:[line]  from line::@1
  (byte~) line::$18 ← (byte) line::y1 - (byte) line::y0
  (byte) line::yd ← (byte~) line::$18
  (boolean~) line::$19 ← (byte) line::yd < (byte) line::xd
  (boolean~) line::$20 ← ! (boolean~) line::$19
  if((boolean~) line::$20) goto line::@10
  to:line::@24
line::@10: scope:[line]  from line::@23
  (byte) line_ydxd::y ← (byte) line::y0
  (byte) line_ydxd::x ← (byte) line::x0
  (byte) line_ydxd::y1 ← (byte) line::y1
  (byte) line_ydxd::yd ← (byte) line::yd
  (byte) line_ydxd::xd ← (byte) line::xd
  call line_ydxd param-assignment
  to:line::@33
line::@33: scope:[line]  from line::@10
  to:line::@return
line::@24: scope:[line]  from line::@23
  (byte) line_xdyd::x ← (byte) line::x1
  (byte) line_xdyd::y ← (byte) line::y1
  (byte) line_xdyd::x1 ← (byte) line::x0
  (byte) line_xdyd::xd ← (byte) line::xd
  (byte) line_xdyd::yd ← (byte) line::yd
  call line_xdyd param-assignment
  to:line::@34
line::@34: scope:[line]  from line::@24
  to:line::@return
line::@13: scope:[line]  from line::@9
  (byte) line_ydxi::y ← (byte) line::y1
  (byte) line_ydxi::x ← (byte) line::x1
  (byte) line_ydxi::y1 ← (byte) line::y0
  (byte) line_ydxi::yd ← (byte) line::yd
  (byte) line_ydxi::xd ← (byte) line::xd
  call line_ydxi param-assignment
  to:line::@35
line::@35: scope:[line]  from line::@13
  to:line::@return
line::@27: scope:[line]  from line::@9
  (byte) line_xdyi::x ← (byte) line::x1
  (byte) line_xdyi::y ← (byte) line::y1
  (byte) line_xdyi::x1 ← (byte) line::x0
  (byte) line_xdyi::xd ← (byte) line::xd
  (byte) line_xdyi::yd ← (byte) line::yd
  call line_xdyi param-assignment
  to:line::@36
line::@36: scope:[line]  from line::@27
  to:line::@return
line::@return: scope:[line]  from line::@29 line::@30 line::@31 line::@32 line::@33 line::@34 line::@35 line::@36
  return 
  to:@return
line_xdyi: scope:[line_xdyi]  from line::@17 line::@27
  (byte~) line_xdyi::$0 ← (byte) line_xdyi::yd >> (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e ← (byte~) line_xdyi::$0
  to:line_xdyi::@1
line_xdyi::@1: scope:[line_xdyi]  from line_xdyi line_xdyi::@2
  (byte) plot::x ← (byte) line_xdyi::x
  (byte) plot::y ← (byte) line_xdyi::y
  call plot param-assignment
  to:line_xdyi::@5
line_xdyi::@5: scope:[line_xdyi]  from line_xdyi::@1
  (byte~) line_xdyi::$2 ← (byte) line_xdyi::x + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::x ← (byte~) line_xdyi::$2
  (byte~) line_xdyi::$3 ← (byte) line_xdyi::e + (byte) line_xdyi::yd
  (byte) line_xdyi::e ← (byte~) line_xdyi::$3
  (boolean~) line_xdyi::$4 ← (byte) line_xdyi::xd < (byte) line_xdyi::e
  (boolean~) line_xdyi::$5 ← ! (boolean~) line_xdyi::$4
  if((boolean~) line_xdyi::$5) goto line_xdyi::@2
  to:line_xdyi::@3
line_xdyi::@2: scope:[line_xdyi]  from line_xdyi::@3 line_xdyi::@5
  (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyi::$9 ← (byte) line_xdyi::x < (byte~) line_xdyi::$8
  if((boolean~) line_xdyi::$9) goto line_xdyi::@1
  to:line_xdyi::@return
line_xdyi::@3: scope:[line_xdyi]  from line_xdyi::@5
  (byte~) line_xdyi::$6 ← (byte) line_xdyi::y + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::y ← (byte~) line_xdyi::$6
  (byte~) line_xdyi::$7 ← (byte) line_xdyi::e - (byte) line_xdyi::xd
  (byte) line_xdyi::e ← (byte~) line_xdyi::$7
  to:line_xdyi::@2
line_xdyi::@return: scope:[line_xdyi]  from line_xdyi::@2
  return 
  to:@return
line_xdyd: scope:[line_xdyd]  from line::@20 line::@24
  (byte~) line_xdyd::$0 ← (byte) line_xdyd::yd >> (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e ← (byte~) line_xdyd::$0
  to:line_xdyd::@1
line_xdyd::@1: scope:[line_xdyd]  from line_xdyd line_xdyd::@2
  (byte) plot::x ← (byte) line_xdyd::x
  (byte) plot::y ← (byte) line_xdyd::y
  call plot param-assignment
  to:line_xdyd::@5
line_xdyd::@5: scope:[line_xdyd]  from line_xdyd::@1
  (byte~) line_xdyd::$2 ← (byte) line_xdyd::x + (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::x ← (byte~) line_xdyd::$2
  (byte~) line_xdyd::$3 ← (byte) line_xdyd::e + (byte) line_xdyd::yd
  (byte) line_xdyd::e ← (byte~) line_xdyd::$3
  (boolean~) line_xdyd::$4 ← (byte) line_xdyd::xd < (byte) line_xdyd::e
  (boolean~) line_xdyd::$5 ← ! (boolean~) line_xdyd::$4
  if((boolean~) line_xdyd::$5) goto line_xdyd::@2
  to:line_xdyd::@3
line_xdyd::@2: scope:[line_xdyd]  from line_xdyd::@3 line_xdyd::@5
  (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyd::$9 ← (byte) line_xdyd::x < (byte~) line_xdyd::$8
  if((boolean~) line_xdyd::$9) goto line_xdyd::@1
  to:line_xdyd::@return
line_xdyd::@3: scope:[line_xdyd]  from line_xdyd::@5
  (byte~) line_xdyd::$6 ← (byte) line_xdyd::y - (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::y ← (byte~) line_xdyd::$6
  (byte~) line_xdyd::$7 ← (byte) line_xdyd::e - (byte) line_xdyd::xd
  (byte) line_xdyd::e ← (byte~) line_xdyd::$7
  to:line_xdyd::@2
line_xdyd::@return: scope:[line_xdyd]  from line_xdyd::@2
  return 
  to:@return
line_ydxi: scope:[line_ydxi]  from line::@13 line::@3
  (byte~) line_ydxi::$0 ← (byte) line_ydxi::xd >> (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e ← (byte~) line_ydxi::$0
  to:line_ydxi::@1
line_ydxi::@1: scope:[line_ydxi]  from line_ydxi line_ydxi::@2
  (byte) plot::x ← (byte) line_ydxi::x
  (byte) plot::y ← (byte) line_ydxi::y
  call plot param-assignment
  to:line_ydxi::@5
line_ydxi::@5: scope:[line_ydxi]  from line_ydxi::@1
  (byte~) line_ydxi::$2 ← (byte) line_ydxi::y + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::y ← (byte~) line_ydxi::$2
  (byte~) line_ydxi::$3 ← (byte) line_ydxi::e + (byte) line_ydxi::xd
  (byte) line_ydxi::e ← (byte~) line_ydxi::$3
  (boolean~) line_ydxi::$4 ← (byte) line_ydxi::yd < (byte) line_ydxi::e
  (boolean~) line_ydxi::$5 ← ! (boolean~) line_ydxi::$4
  if((boolean~) line_ydxi::$5) goto line_ydxi::@2
  to:line_ydxi::@3
line_ydxi::@2: scope:[line_ydxi]  from line_ydxi::@3 line_ydxi::@5
  (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxi::$9 ← (byte) line_ydxi::y < (byte~) line_ydxi::$8
  if((boolean~) line_ydxi::$9) goto line_ydxi::@1
  to:line_ydxi::@return
line_ydxi::@3: scope:[line_ydxi]  from line_ydxi::@5
  (byte~) line_ydxi::$6 ← (byte) line_ydxi::x + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::x ← (byte~) line_ydxi::$6
  (byte~) line_ydxi::$7 ← (byte) line_ydxi::e - (byte) line_ydxi::yd
  (byte) line_ydxi::e ← (byte~) line_ydxi::$7
  to:line_ydxi::@2
line_ydxi::@return: scope:[line_ydxi]  from line_ydxi::@2
  return 
  to:@return
line_ydxd: scope:[line_ydxd]  from line::@10 line::@6
  (byte~) line_ydxd::$0 ← (byte) line_ydxd::xd >> (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e ← (byte~) line_ydxd::$0
  to:line_ydxd::@1
line_ydxd::@1: scope:[line_ydxd]  from line_ydxd line_ydxd::@2
  (byte) plot::x ← (byte) line_ydxd::x
  (byte) plot::y ← (byte) line_ydxd::y
  call plot param-assignment
  to:line_ydxd::@5
line_ydxd::@5: scope:[line_ydxd]  from line_ydxd::@1
  (byte~) line_ydxd::$2 ← (byte) line_ydxd::y + (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::y ← (byte~) line_ydxd::$2
  (byte~) line_ydxd::$3 ← (byte) line_ydxd::e + (byte) line_ydxd::xd
  (byte) line_ydxd::e ← (byte~) line_ydxd::$3
  (boolean~) line_ydxd::$4 ← (byte) line_ydxd::yd < (byte) line_ydxd::e
  (boolean~) line_ydxd::$5 ← ! (boolean~) line_ydxd::$4
  if((boolean~) line_ydxd::$5) goto line_ydxd::@2
  to:line_ydxd::@3
line_ydxd::@2: scope:[line_ydxd]  from line_ydxd::@3 line_ydxd::@5
  (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxd::$9 ← (byte) line_ydxd::y < (byte~) line_ydxd::$8
  if((boolean~) line_ydxd::$9) goto line_ydxd::@1
  to:line_ydxd::@return
line_ydxd::@3: scope:[line_ydxd]  from line_ydxd::@5
  (byte~) line_ydxd::$6 ← (byte) line_ydxd::x - (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::x ← (byte~) line_ydxd::$6
  (byte~) line_ydxd::$7 ← (byte) line_ydxd::e - (byte) line_ydxd::yd
  (byte) line_ydxd::e ← (byte~) line_ydxd::$7
  to:line_ydxd::@2
line_ydxd::@return: scope:[line_ydxd]  from line_ydxd::@2
  return 
  to:@return
plot: scope:[plot]  from line_xdyd::@1 line_xdyi::@1 line_ydxd::@1 line_ydxi::@1
  (byte*) plot::plotter_x ← ((byte*)) (byte/signed byte/word/signed word) 0
  (word) plot::plotter_y ← (byte/signed byte/word/signed word) 0
  (byte~) plot::$0 ← (byte[]) plot_xhi *idx (byte) plot::x
  (byte*) plot::plotter_x ← (byte*) plot::plotter_x hi= (byte~) plot::$0
  (byte~) plot::$1 ← (byte[]) plot_xlo *idx (byte) plot::x
  (byte*) plot::plotter_x ← (byte*) plot::plotter_x lo= (byte~) plot::$1
  (byte~) plot::$2 ← (byte[]) plot_yhi *idx (byte) plot::y
  (word) plot::plotter_y ← (word) plot::plotter_y hi= (byte~) plot::$2
  (byte~) plot::$3 ← (byte[]) plot_ylo *idx (byte) plot::y
  (word) plot::plotter_y ← (word) plot::plotter_y lo= (byte~) plot::$3
  (byte*~) plot::$4 ← (byte*) plot::plotter_x + (word) plot::plotter_y
  (byte*) plot::plotter ← (byte*~) plot::$4
  (byte~) plot::$5 ← (byte[]) plot_bit *idx (byte) plot::x
  (byte~) plot::$6 ← *((byte*) plot::plotter) | (byte~) plot::$5
  *((byte*) plot::plotter) ← (byte~) plot::$6
  to:plot::@return
plot::@return: scope:[plot]  from plot
  return 
  to:@return
init_plot_tables: scope:[init_plot_tables]  from main::@3
  (byte) init_plot_tables::bits ← (byte/word/signed word) 128
  (byte) init_plot_tables::x ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@1
init_plot_tables::@1: scope:[init_plot_tables]  from init_plot_tables init_plot_tables::@2
  (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x & (byte/word/signed word) 248
  *((byte[]) plot_xlo + (byte) init_plot_tables::x) ← (byte~) init_plot_tables::$0
  (byte~) init_plot_tables::$1 ← > (byte*) BITMAP
  *((byte[]) plot_xhi + (byte) init_plot_tables::x) ← (byte~) init_plot_tables::$1
  *((byte[]) plot_bit + (byte) init_plot_tables::x) ← (byte) init_plot_tables::bits
  (byte~) init_plot_tables::$2 ← (byte) init_plot_tables::bits >> (byte/signed byte/word/signed word) 1
  (byte) init_plot_tables::bits ← (byte~) init_plot_tables::$2
  (boolean~) init_plot_tables::$3 ← (byte) init_plot_tables::bits == (byte/signed byte/word/signed word) 0
  (boolean~) init_plot_tables::$4 ← ! (boolean~) init_plot_tables::$3
  if((boolean~) init_plot_tables::$4) goto init_plot_tables::@2
  to:init_plot_tables::@5
init_plot_tables::@2: scope:[init_plot_tables]  from init_plot_tables::@1 init_plot_tables::@5
  (byte) init_plot_tables::x ← ++ (byte) init_plot_tables::x
  (boolean~) init_plot_tables::$5 ← (byte) init_plot_tables::x != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$5) goto init_plot_tables::@1
  to:init_plot_tables::@6
init_plot_tables::@5: scope:[init_plot_tables]  from init_plot_tables::@1
  (byte) init_plot_tables::bits ← (byte/word/signed word) 128
  to:init_plot_tables::@2
init_plot_tables::@6: scope:[init_plot_tables]  from init_plot_tables::@2
  (byte*) init_plot_tables::yoffs ← ((byte*)) (byte/signed byte/word/signed word) 0
  (byte) init_plot_tables::y ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@3
init_plot_tables::@3: scope:[init_plot_tables]  from init_plot_tables::@4 init_plot_tables::@6
  (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y & (byte/signed byte/word/signed word) 7
  (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs
  (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7
  *((byte[]) plot_ylo + (byte) init_plot_tables::y) ← (byte~) init_plot_tables::$8
  (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs
  *((byte[]) plot_yhi + (byte) init_plot_tables::y) ← (byte~) init_plot_tables::$9
  (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y & (byte/signed byte/word/signed word) 7
  (boolean~) init_plot_tables::$11 ← (byte~) init_plot_tables::$10 == (byte/signed byte/word/signed word) 7
  (boolean~) init_plot_tables::$12 ← ! (boolean~) init_plot_tables::$11
  if((boolean~) init_plot_tables::$12) goto init_plot_tables::@4
  to:init_plot_tables::@7
init_plot_tables::@4: scope:[init_plot_tables]  from init_plot_tables::@3 init_plot_tables::@7
  (byte) init_plot_tables::y ← ++ (byte) init_plot_tables::y
  (boolean~) init_plot_tables::$14 ← (byte) init_plot_tables::y != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$14) goto init_plot_tables::@3
  to:init_plot_tables::@return
init_plot_tables::@7: scope:[init_plot_tables]  from init_plot_tables::@3
  (byte*~) init_plot_tables::$13 ← (byte*) init_plot_tables::yoffs + (word/signed word) 320
  (byte*) init_plot_tables::yoffs ← (byte*~) init_plot_tables::$13
  to:init_plot_tables::@4
init_plot_tables::@return: scope:[init_plot_tables]  from init_plot_tables::@4
  return 
  to:@return
init_screen: scope:[init_screen]  from main
  (byte*) init_screen::b ← (byte*) BITMAP
  to:init_screen::@1
init_screen::@1: scope:[init_screen]  from init_screen init_screen::@1
  *((byte*) init_screen::b) ← (byte/signed byte/word/signed word) 0
  (byte*) init_screen::b ← ++ (byte*) init_screen::b
  (byte*~) init_screen::$0 ← (byte*) BITMAP + (word/signed word) 8192
  (boolean~) init_screen::$1 ← (byte*) init_screen::b != (byte*~) init_screen::$0
  if((boolean~) init_screen::$1) goto init_screen::@1
  to:init_screen::@3
init_screen::@3: scope:[init_screen]  from init_screen::@1
  (byte*) init_screen::c ← (byte*) SCREEN
  to:init_screen::@2
init_screen::@2: scope:[init_screen]  from init_screen::@2 init_screen::@3
  *((byte*) init_screen::c) ← (byte/signed byte/word/signed word) 20
  (byte*) init_screen::c ← ++ (byte*) init_screen::c
  (byte*~) init_screen::$2 ← (byte*) SCREEN + (word/signed word) 1024
  (boolean~) init_screen::$3 ← (byte*) init_screen::c != (byte*~) init_screen::$2
  if((boolean~) init_screen::$3) goto init_screen::@2
  to:init_screen::@return
init_screen::@return: scope:[init_screen]  from init_screen::@2
  return 
  to:@return
@10: scope:[]  from @begin
  call main param-assignment
  to:@11
@11: scope:[]  from @10
  to:@end
@end: scope:[]  from @11

Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
CONTROL FLOW GRAPH SSA
@begin: scope:[]  from
  (byte*) BGCOL#0 ← ((byte*)) (word) 53280
  (byte*) FGCOL#0 ← ((byte*)) (word) 53281
  (byte*) D018#0 ← ((byte*)) (word) 53272
  (byte*) D011#0 ← ((byte*)) (word) 53265
  (byte) BMM#0 ← (byte/signed byte/word/signed word) 32
  (byte) DEN#0 ← (byte/signed byte/word/signed word) 16
  (byte) RSEL#0 ← (byte/signed byte/word/signed word) 8
  (byte*) SCREEN#0 ← ((byte*)) (word/signed word) 1024
  (byte*) BITMAP#0 ← ((byte*)) (word/signed word) 8192
  (byte[]) plot_xlo#0 ← ((byte*)) (word/signed word) 4096
  (byte[]) plot_xhi#0 ← ((byte*)) (word/signed word) 4352
  (byte[]) plot_ylo#0 ← ((byte*)) (word/signed word) 4608
  (byte[]) plot_yhi#0 ← ((byte*)) (word/signed word) 4864
  (byte[]) plot_bit#0 ← ((byte*)) (word/signed word) 5120
  (byte[]) lines_x#0 ← { (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60 }
  (byte[]) lines_y#0 ← { (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10 }
  (byte) lines_cnt#0 ← (byte/signed byte/word/signed word) 8
  to:@10
main: scope:[main]  from @10
  (byte[]) plot_yhi#45 ← phi( @10/(byte[]) plot_yhi#47 )
  (byte[]) plot_ylo#45 ← phi( @10/(byte[]) plot_ylo#47 )
  (byte) lines_cnt#8 ← phi( @10/(byte) lines_cnt#9 )
  (byte[]) lines_y#8 ← phi( @10/(byte[]) lines_y#9 )
  (byte[]) lines_x#8 ← phi( @10/(byte[]) lines_x#9 )
  (byte*) SCREEN#5 ← phi( @10/(byte*) SCREEN#6 )
  (byte[]) plot_bit#19 ← phi( @10/(byte[]) plot_bit#36 )
  (byte[]) plot_xhi#19 ← phi( @10/(byte[]) plot_xhi#36 )
  (byte[]) plot_xlo#19 ← phi( @10/(byte[]) plot_xlo#36 )
  (byte*) BITMAP#6 ← phi( @10/(byte*) BITMAP#7 )
  (byte*) D018#1 ← phi( @10/(byte*) D018#2 )
  (byte*) D011#1 ← phi( @10/(byte*) D011#2 )
  (byte) RSEL#1 ← phi( @10/(byte) RSEL#2 )
  (byte) DEN#1 ← phi( @10/(byte) DEN#2 )
  (byte) BMM#1 ← phi( @10/(byte) BMM#2 )
  (byte*) FGCOL#1 ← phi( @10/(byte*) FGCOL#2 )
  (byte*) BGCOL#1 ← phi( @10/(byte*) BGCOL#2 )
  *((byte*) BGCOL#1) ← (byte/signed byte/word/signed word) 0
  *((byte*) FGCOL#1) ← (byte/signed byte/word/signed word) 0
  (byte~) main::$0 ← (byte) BMM#1 | (byte) DEN#1
  (byte~) main::$1 ← (byte~) main::$0 | (byte) RSEL#1
  (byte~) main::$2 ← (byte~) main::$1 | (byte/signed byte/word/signed word) 3
  *((byte*) D011#1) ← (byte~) main::$2
  *((byte*) D018#1) ← (byte/signed byte/word/signed word) 24
  call init_screen param-assignment
  to:main::@3
main::@3: scope:[main]  from main
  (byte[]) plot_yhi#44 ← phi( main/(byte[]) plot_yhi#45 )
  (byte[]) plot_ylo#44 ← phi( main/(byte[]) plot_ylo#45 )
  (byte) lines_cnt#7 ← phi( main/(byte) lines_cnt#8 )
  (byte[]) lines_y#7 ← phi( main/(byte[]) lines_y#8 )
  (byte[]) lines_x#7 ← phi( main/(byte[]) lines_x#8 )
  (byte[]) plot_bit#17 ← phi( main/(byte[]) plot_bit#19 )
  (byte[]) plot_xhi#17 ← phi( main/(byte[]) plot_xhi#19 )
  (byte*) BITMAP#8 ← phi( main/(byte*) BITMAP#6 )
  (byte[]) plot_xlo#17 ← phi( main/(byte[]) plot_xlo#19 )
  call init_plot_tables param-assignment
  to:main::@4
main::@4: scope:[main]  from main::@3
  (byte[]) plot_bit#48 ← phi( main::@3/(byte[]) plot_bit#17 )
  (byte[]) plot_ylo#52 ← phi( main::@3/(byte[]) plot_ylo#44 )
  (byte[]) plot_yhi#52 ← phi( main::@3/(byte[]) plot_yhi#44 )
  (byte[]) plot_xlo#48 ← phi( main::@3/(byte[]) plot_xlo#17 )
  (byte[]) plot_xhi#48 ← phi( main::@3/(byte[]) plot_xhi#17 )
  (byte) lines_cnt#5 ← phi( main::@3/(byte) lines_cnt#7 )
  (byte[]) lines_y#5 ← phi( main::@3/(byte[]) lines_y#7 )
  (byte[]) lines_x#5 ← phi( main::@3/(byte[]) lines_x#7 )
  to:main::@1
main::@1: scope:[main]  from main::@4 main::@5
  (byte[]) plot_bit#47 ← phi( main::@4/(byte[]) plot_bit#48 main::@5/(byte[]) plot_bit#49 )
  (byte[]) plot_ylo#51 ← phi( main::@4/(byte[]) plot_ylo#52 main::@5/(byte[]) plot_ylo#53 )
  (byte[]) plot_yhi#51 ← phi( main::@4/(byte[]) plot_yhi#52 main::@5/(byte[]) plot_yhi#53 )
  (byte[]) plot_xlo#47 ← phi( main::@4/(byte[]) plot_xlo#48 main::@5/(byte[]) plot_xlo#49 )
  (byte[]) plot_xhi#47 ← phi( main::@4/(byte[]) plot_xhi#48 main::@5/(byte[]) plot_xhi#49 )
  (byte) lines_cnt#4 ← phi( main::@4/(byte) lines_cnt#5 main::@5/(byte) lines_cnt#6 )
  (byte[]) lines_y#4 ← phi( main::@4/(byte[]) lines_y#5 main::@5/(byte[]) lines_y#6 )
  (byte[]) lines_x#4 ← phi( main::@4/(byte[]) lines_x#5 main::@5/(byte[]) lines_x#6 )
  call lines param-assignment
  to:main::@5
main::@5: scope:[main]  from main::@1
  (byte[]) plot_bit#49 ← phi( main::@1/(byte[]) plot_bit#47 )
  (byte[]) plot_ylo#53 ← phi( main::@1/(byte[]) plot_ylo#51 )
  (byte[]) plot_yhi#53 ← phi( main::@1/(byte[]) plot_yhi#51 )
  (byte[]) plot_xlo#49 ← phi( main::@1/(byte[]) plot_xlo#47 )
  (byte[]) plot_xhi#49 ← phi( main::@1/(byte[]) plot_xhi#47 )
  (byte) lines_cnt#6 ← phi( main::@1/(byte) lines_cnt#4 )
  (byte[]) lines_y#6 ← phi( main::@1/(byte[]) lines_y#4 )
  (byte[]) lines_x#6 ← phi( main::@1/(byte[]) lines_x#4 )
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@5
  return 
  to:@return
lines: scope:[lines]  from main::@1
  (byte[]) plot_bit#45 ← phi( main::@1/(byte[]) plot_bit#47 )
  (byte[]) plot_ylo#49 ← phi( main::@1/(byte[]) plot_ylo#51 )
  (byte[]) plot_yhi#49 ← phi( main::@1/(byte[]) plot_yhi#51 )
  (byte[]) plot_xlo#45 ← phi( main::@1/(byte[]) plot_xlo#47 )
  (byte[]) plot_xhi#45 ← phi( main::@1/(byte[]) plot_xhi#47 )
  (byte) lines_cnt#3 ← phi( main::@1/(byte) lines_cnt#4 )
  (byte[]) lines_y#2 ← phi( main::@1/(byte[]) lines_y#4 )
  (byte[]) lines_x#2 ← phi( main::@1/(byte[]) lines_x#4 )
  (byte) lines::l#0 ← (byte/signed byte/word/signed word) 0
  to:lines::@1
lines::@1: scope:[lines]  from lines lines::@3
  (byte[]) plot_bit#44 ← phi( lines/(byte[]) plot_bit#45 lines::@3/(byte[]) plot_bit#46 )
  (byte[]) plot_ylo#48 ← phi( lines/(byte[]) plot_ylo#49 lines::@3/(byte[]) plot_ylo#50 )
  (byte[]) plot_yhi#48 ← phi( lines/(byte[]) plot_yhi#49 lines::@3/(byte[]) plot_yhi#50 )
  (byte[]) plot_xlo#44 ← phi( lines/(byte[]) plot_xlo#45 lines::@3/(byte[]) plot_xlo#46 )
  (byte[]) plot_xhi#44 ← phi( lines/(byte[]) plot_xhi#45 lines::@3/(byte[]) plot_xhi#46 )
  (byte) lines_cnt#2 ← phi( lines/(byte) lines_cnt#3 lines::@3/(byte) lines_cnt#1 )
  (byte[]) lines_y#1 ← phi( lines/(byte[]) lines_y#2 lines::@3/(byte[]) lines_y#3 )
  (byte) lines::l#2 ← phi( lines/(byte) lines::l#0 lines::@3/(byte) lines::l#1 )
  (byte[]) lines_x#1 ← phi( lines/(byte[]) lines_x#2 lines::@3/(byte[]) lines_x#3 )
  (byte~) lines::$0 ← (byte[]) lines_x#1 *idx (byte) lines::l#2
  (byte~) lines::$1 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$2 ← (byte[]) lines_x#1 *idx (byte~) lines::$1
  (byte~) lines::$3 ← (byte[]) lines_y#1 *idx (byte) lines::l#2
  (byte~) lines::$4 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$5 ← (byte[]) lines_y#1 *idx (byte~) lines::$4
  (byte) line::x0#0 ← (byte~) lines::$0
  (byte) line::x1#0 ← (byte~) lines::$2
  (byte) line::y0#0 ← (byte~) lines::$3
  (byte) line::y1#0 ← (byte~) lines::$5
  call line param-assignment
  to:lines::@3
lines::@3: scope:[lines]  from lines::@1
  (byte[]) plot_bit#46 ← phi( lines::@1/(byte[]) plot_bit#44 )
  (byte[]) plot_ylo#50 ← phi( lines::@1/(byte[]) plot_ylo#48 )
  (byte[]) plot_yhi#50 ← phi( lines::@1/(byte[]) plot_yhi#48 )
  (byte[]) plot_xlo#46 ← phi( lines::@1/(byte[]) plot_xlo#44 )
  (byte[]) plot_xhi#46 ← phi( lines::@1/(byte[]) plot_xhi#44 )
  (byte[]) lines_y#3 ← phi( lines::@1/(byte[]) lines_y#1 )
  (byte[]) lines_x#3 ← phi( lines::@1/(byte[]) lines_x#1 )
  (byte) lines_cnt#1 ← phi( lines::@1/(byte) lines_cnt#2 )
  (byte) lines::l#3 ← phi( lines::@1/(byte) lines::l#2 )
  (byte) lines::l#1 ← ++ (byte) lines::l#3
  (boolean~) lines::$7 ← (byte) lines::l#1 < (byte) lines_cnt#1
  if((boolean~) lines::$7) goto lines::@1
  to:lines::@return
lines::@return: scope:[lines]  from lines::@3
  return 
  to:@return
line: scope:[line]  from lines::@1
  (byte[]) plot_bit#43 ← phi( lines::@1/(byte[]) plot_bit#44 )
  (byte[]) plot_ylo#46 ← phi( lines::@1/(byte[]) plot_ylo#48 )
  (byte[]) plot_yhi#46 ← phi( lines::@1/(byte[]) plot_yhi#48 )
  (byte[]) plot_xlo#43 ← phi( lines::@1/(byte[]) plot_xlo#44 )
  (byte[]) plot_xhi#43 ← phi( lines::@1/(byte[]) plot_xhi#44 )
  (byte) line::y1#13 ← phi( lines::@1/(byte) line::y1#0 )
  (byte) line::y0#13 ← phi( lines::@1/(byte) line::y0#0 )
  (byte) line::x1#1 ← phi( lines::@1/(byte) line::x1#0 )
  (byte) line::x0#1 ← phi( lines::@1/(byte) line::x0#0 )
  (boolean~) line::$0 ← (byte) line::x0#1 < (byte) line::x1#1
  (boolean~) line::$1 ← ! (boolean~) line::$0
  if((boolean~) line::$1) goto line::@1
  to:line::@15
line::@1: scope:[line]  from line
  (byte[]) plot_bit#42 ← phi( line/(byte[]) plot_bit#43 )
  (byte[]) plot_ylo#43 ← phi( line/(byte[]) plot_ylo#46 )
  (byte[]) plot_yhi#43 ← phi( line/(byte[]) plot_yhi#46 )
  (byte[]) plot_xlo#42 ← phi( line/(byte[]) plot_xlo#43 )
  (byte[]) plot_xhi#42 ← phi( line/(byte[]) plot_xhi#43 )
  (byte) line::y1#1 ← phi( line/(byte) line::y1#13 )
  (byte) line::y0#1 ← phi( line/(byte) line::y0#13 )
  (byte) line::x1#2 ← phi( line/(byte) line::x1#1 )
  (byte) line::x0#2 ← phi( line/(byte) line::x0#1 )
  (byte~) line::$15 ← (byte) line::x0#2 - (byte) line::x1#2
  (byte) line::xd#0 ← (byte~) line::$15
  (boolean~) line::$16 ← (byte) line::y0#1 < (byte) line::y1#1
  (boolean~) line::$17 ← ! (boolean~) line::$16
  if((boolean~) line::$17) goto line::@9
  to:line::@23
line::@15: scope:[line]  from line
  (byte[]) plot_bit#41 ← phi( line/(byte[]) plot_bit#43 )
  (byte[]) plot_ylo#42 ← phi( line/(byte[]) plot_ylo#46 )
  (byte[]) plot_yhi#42 ← phi( line/(byte[]) plot_yhi#46 )
  (byte[]) plot_xlo#41 ← phi( line/(byte[]) plot_xlo#43 )
  (byte[]) plot_xhi#41 ← phi( line/(byte[]) plot_xhi#43 )
  (byte) line::y1#2 ← phi( line/(byte) line::y1#13 )
  (byte) line::y0#2 ← phi( line/(byte) line::y0#13 )
  (byte) line::x0#3 ← phi( line/(byte) line::x0#1 )
  (byte) line::x1#3 ← phi( line/(byte) line::x1#1 )
  (byte~) line::$2 ← (byte) line::x1#3 - (byte) line::x0#3
  (byte) line::xd#1 ← (byte~) line::$2
  (boolean~) line::$3 ← (byte) line::y0#2 < (byte) line::y1#2
  (boolean~) line::$4 ← ! (boolean~) line::$3
  if((boolean~) line::$4) goto line::@2
  to:line::@16
line::@2: scope:[line]  from line::@15
  (byte[]) plot_bit#38 ← phi( line::@15/(byte[]) plot_bit#41 )
  (byte[]) plot_ylo#38 ← phi( line::@15/(byte[]) plot_ylo#42 )
  (byte[]) plot_yhi#38 ← phi( line::@15/(byte[]) plot_yhi#42 )
  (byte[]) plot_xlo#38 ← phi( line::@15/(byte[]) plot_xlo#41 )
  (byte[]) plot_xhi#38 ← phi( line::@15/(byte[]) plot_xhi#41 )
  (byte) line::x0#11 ← phi( line::@15/(byte) line::x0#3 )
  (byte) line::x1#11 ← phi( line::@15/(byte) line::x1#3 )
  (byte) line::xd#2 ← phi( line::@15/(byte) line::xd#1 )
  (byte) line::y1#3 ← phi( line::@15/(byte) line::y1#2 )
  (byte) line::y0#3 ← phi( line::@15/(byte) line::y0#2 )
  (byte~) line::$10 ← (byte) line::y0#3 - (byte) line::y1#3
  (byte) line::yd#0 ← (byte~) line::$10
  (boolean~) line::$11 ← (byte) line::yd#0 < (byte) line::xd#2
  (boolean~) line::$12 ← ! (boolean~) line::$11
  if((boolean~) line::$12) goto line::@6
  to:line::@20
line::@16: scope:[line]  from line::@15
  (byte[]) plot_bit#37 ← phi( line::@15/(byte[]) plot_bit#41 )
  (byte[]) plot_ylo#37 ← phi( line::@15/(byte[]) plot_ylo#42 )
  (byte[]) plot_yhi#37 ← phi( line::@15/(byte[]) plot_yhi#42 )
  (byte[]) plot_xlo#37 ← phi( line::@15/(byte[]) plot_xlo#41 )
  (byte[]) plot_xhi#37 ← phi( line::@15/(byte[]) plot_xhi#41 )
  (byte) line::x1#10 ← phi( line::@15/(byte) line::x1#3 )
  (byte) line::x0#10 ← phi( line::@15/(byte) line::x0#3 )
  (byte) line::xd#3 ← phi( line::@15/(byte) line::xd#1 )
  (byte) line::y0#4 ← phi( line::@15/(byte) line::y0#2 )
  (byte) line::y1#4 ← phi( line::@15/(byte) line::y1#2 )
  (byte~) line::$5 ← (byte) line::y1#4 - (byte) line::y0#4
  (byte) line::yd#1 ← (byte~) line::$5
  (boolean~) line::$6 ← (byte) line::yd#1 < (byte) line::xd#3
  (boolean~) line::$7 ← ! (boolean~) line::$6
  if((boolean~) line::$7) goto line::@3
  to:line::@17
line::@3: scope:[line]  from line::@16
  (byte[]) plot_bit#29 ← phi( line::@16/(byte[]) plot_bit#37 )
  (byte[]) plot_ylo#28 ← phi( line::@16/(byte[]) plot_ylo#37 )
  (byte[]) plot_yhi#28 ← phi( line::@16/(byte[]) plot_yhi#37 )
  (byte[]) plot_xlo#29 ← phi( line::@16/(byte[]) plot_xlo#37 )
  (byte[]) plot_xhi#29 ← phi( line::@16/(byte[]) plot_xhi#37 )
  (byte) line::xd#4 ← phi( line::@16/(byte) line::xd#3 )
  (byte) line::yd#4 ← phi( line::@16/(byte) line::yd#1 )
  (byte) line::y1#5 ← phi( line::@16/(byte) line::y1#4 )
  (byte) line::x0#4 ← phi( line::@16/(byte) line::x0#10 )
  (byte) line::y0#5 ← phi( line::@16/(byte) line::y0#4 )
  (byte) line_ydxi::y#0 ← (byte) line::y0#5
  (byte) line_ydxi::x#0 ← (byte) line::x0#4
  (byte) line_ydxi::y1#0 ← (byte) line::y1#5
  (byte) line_ydxi::yd#0 ← (byte) line::yd#4
  (byte) line_ydxi::xd#0 ← (byte) line::xd#4
  call line_ydxi param-assignment
  to:line::@29
line::@29: scope:[line]  from line::@3
  to:line::@return
line::@17: scope:[line]  from line::@16
  (byte[]) plot_bit#20 ← phi( line::@16/(byte[]) plot_bit#37 )
  (byte[]) plot_ylo#19 ← phi( line::@16/(byte[]) plot_ylo#37 )
  (byte[]) plot_yhi#19 ← phi( line::@16/(byte[]) plot_yhi#37 )
  (byte[]) plot_xlo#20 ← phi( line::@16/(byte[]) plot_xlo#37 )
  (byte[]) plot_xhi#20 ← phi( line::@16/(byte[]) plot_xhi#37 )
  (byte) line::yd#5 ← phi( line::@16/(byte) line::yd#1 )
  (byte) line::xd#5 ← phi( line::@16/(byte) line::xd#3 )
  (byte) line::x1#4 ← phi( line::@16/(byte) line::x1#10 )
  (byte) line::y0#6 ← phi( line::@16/(byte) line::y0#4 )
  (byte) line::x0#5 ← phi( line::@16/(byte) line::x0#10 )
  (byte) line_xdyi::x#0 ← (byte) line::x0#5
  (byte) line_xdyi::y#0 ← (byte) line::y0#6
  (byte) line_xdyi::x1#0 ← (byte) line::x1#4
  (byte) line_xdyi::xd#0 ← (byte) line::xd#5
  (byte) line_xdyi::yd#0 ← (byte) line::yd#5
  call line_xdyi param-assignment
  to:line::@30
line::@30: scope:[line]  from line::@17
  to:line::@return
line::@6: scope:[line]  from line::@2
  (byte[]) plot_bit#33 ← phi( line::@2/(byte[]) plot_bit#38 )
  (byte[]) plot_ylo#32 ← phi( line::@2/(byte[]) plot_ylo#38 )
  (byte[]) plot_yhi#32 ← phi( line::@2/(byte[]) plot_yhi#38 )
  (byte[]) plot_xlo#33 ← phi( line::@2/(byte[]) plot_xlo#38 )
  (byte[]) plot_xhi#33 ← phi( line::@2/(byte[]) plot_xhi#38 )
  (byte) line::xd#6 ← phi( line::@2/(byte) line::xd#2 )
  (byte) line::yd#6 ← phi( line::@2/(byte) line::yd#0 )
  (byte) line::y0#7 ← phi( line::@2/(byte) line::y0#3 )
  (byte) line::x1#5 ← phi( line::@2/(byte) line::x1#11 )
  (byte) line::y1#6 ← phi( line::@2/(byte) line::y1#3 )
  (byte) line_ydxd::y#0 ← (byte) line::y1#6
  (byte) line_ydxd::x#0 ← (byte) line::x1#5
  (byte) line_ydxd::y1#0 ← (byte) line::y0#7
  (byte) line_ydxd::yd#0 ← (byte) line::yd#6
  (byte) line_ydxd::xd#0 ← (byte) line::xd#6
  call line_ydxd param-assignment
  to:line::@31
line::@31: scope:[line]  from line::@6
  to:line::@return
line::@20: scope:[line]  from line::@2
  (byte[]) plot_bit#24 ← phi( line::@2/(byte[]) plot_bit#38 )
  (byte[]) plot_ylo#23 ← phi( line::@2/(byte[]) plot_ylo#38 )
  (byte[]) plot_yhi#23 ← phi( line::@2/(byte[]) plot_yhi#38 )
  (byte[]) plot_xlo#24 ← phi( line::@2/(byte[]) plot_xlo#38 )
  (byte[]) plot_xhi#24 ← phi( line::@2/(byte[]) plot_xhi#38 )
  (byte) line::yd#7 ← phi( line::@2/(byte) line::yd#0 )
  (byte) line::xd#7 ← phi( line::@2/(byte) line::xd#2 )
  (byte) line::x1#6 ← phi( line::@2/(byte) line::x1#11 )
  (byte) line::y0#8 ← phi( line::@2/(byte) line::y0#3 )
  (byte) line::x0#6 ← phi( line::@2/(byte) line::x0#11 )
  (byte) line_xdyd::x#0 ← (byte) line::x0#6
  (byte) line_xdyd::y#0 ← (byte) line::y0#8
  (byte) line_xdyd::x1#0 ← (byte) line::x1#6
  (byte) line_xdyd::xd#0 ← (byte) line::xd#7
  (byte) line_xdyd::yd#0 ← (byte) line::yd#7
  call line_xdyd param-assignment
  to:line::@32
line::@32: scope:[line]  from line::@20
  to:line::@return
line::@9: scope:[line]  from line::@1
  (byte[]) plot_bit#40 ← phi( line::@1/(byte[]) plot_bit#42 )
  (byte[]) plot_ylo#40 ← phi( line::@1/(byte[]) plot_ylo#43 )
  (byte[]) plot_yhi#40 ← phi( line::@1/(byte[]) plot_yhi#43 )
  (byte[]) plot_xlo#40 ← phi( line::@1/(byte[]) plot_xlo#42 )
  (byte[]) plot_xhi#40 ← phi( line::@1/(byte[]) plot_xhi#42 )
  (byte) line::x0#13 ← phi( line::@1/(byte) line::x0#2 )
  (byte) line::x1#13 ← phi( line::@1/(byte) line::x1#2 )
  (byte) line::xd#8 ← phi( line::@1/(byte) line::xd#0 )
  (byte) line::y1#7 ← phi( line::@1/(byte) line::y1#1 )
  (byte) line::y0#9 ← phi( line::@1/(byte) line::y0#1 )
  (byte~) line::$23 ← (byte) line::y0#9 - (byte) line::y1#7
  (byte) line::yd#2 ← (byte~) line::$23
  (boolean~) line::$24 ← (byte) line::yd#2 < (byte) line::xd#8
  (boolean~) line::$25 ← ! (boolean~) line::$24
  if((boolean~) line::$25) goto line::@13
  to:line::@27
line::@23: scope:[line]  from line::@1
  (byte[]) plot_bit#39 ← phi( line::@1/(byte[]) plot_bit#42 )
  (byte[]) plot_ylo#39 ← phi( line::@1/(byte[]) plot_ylo#43 )
  (byte[]) plot_yhi#39 ← phi( line::@1/(byte[]) plot_yhi#43 )
  (byte[]) plot_xlo#39 ← phi( line::@1/(byte[]) plot_xlo#42 )
  (byte[]) plot_xhi#39 ← phi( line::@1/(byte[]) plot_xhi#42 )
  (byte) line::x1#12 ← phi( line::@1/(byte) line::x1#2 )
  (byte) line::x0#12 ← phi( line::@1/(byte) line::x0#2 )
  (byte) line::xd#9 ← phi( line::@1/(byte) line::xd#0 )
  (byte) line::y0#10 ← phi( line::@1/(byte) line::y0#1 )
  (byte) line::y1#8 ← phi( line::@1/(byte) line::y1#1 )
  (byte~) line::$18 ← (byte) line::y1#8 - (byte) line::y0#10
  (byte) line::yd#3 ← (byte~) line::$18
  (boolean~) line::$19 ← (byte) line::yd#3 < (byte) line::xd#9
  (boolean~) line::$20 ← ! (boolean~) line::$19
  if((boolean~) line::$20) goto line::@10
  to:line::@24
line::@10: scope:[line]  from line::@23
  (byte[]) plot_bit#32 ← phi( line::@23/(byte[]) plot_bit#39 )
  (byte[]) plot_ylo#31 ← phi( line::@23/(byte[]) plot_ylo#39 )
  (byte[]) plot_yhi#31 ← phi( line::@23/(byte[]) plot_yhi#39 )
  (byte[]) plot_xlo#32 ← phi( line::@23/(byte[]) plot_xlo#39 )
  (byte[]) plot_xhi#32 ← phi( line::@23/(byte[]) plot_xhi#39 )
  (byte) line::xd#10 ← phi( line::@23/(byte) line::xd#9 )
  (byte) line::yd#8 ← phi( line::@23/(byte) line::yd#3 )
  (byte) line::y1#9 ← phi( line::@23/(byte) line::y1#8 )
  (byte) line::x0#7 ← phi( line::@23/(byte) line::x0#12 )
  (byte) line::y0#11 ← phi( line::@23/(byte) line::y0#10 )
  (byte) line_ydxd::y#1 ← (byte) line::y0#11
  (byte) line_ydxd::x#1 ← (byte) line::x0#7
  (byte) line_ydxd::y1#1 ← (byte) line::y1#9
  (byte) line_ydxd::yd#1 ← (byte) line::yd#8
  (byte) line_ydxd::xd#1 ← (byte) line::xd#10
  call line_ydxd param-assignment
  to:line::@33
line::@33: scope:[line]  from line::@10
  to:line::@return
line::@24: scope:[line]  from line::@23
  (byte[]) plot_bit#25 ← phi( line::@23/(byte[]) plot_bit#39 )
  (byte[]) plot_ylo#24 ← phi( line::@23/(byte[]) plot_ylo#39 )
  (byte[]) plot_yhi#24 ← phi( line::@23/(byte[]) plot_yhi#39 )
  (byte[]) plot_xlo#25 ← phi( line::@23/(byte[]) plot_xlo#39 )
  (byte[]) plot_xhi#25 ← phi( line::@23/(byte[]) plot_xhi#39 )
  (byte) line::yd#9 ← phi( line::@23/(byte) line::yd#3 )
  (byte) line::xd#11 ← phi( line::@23/(byte) line::xd#9 )
  (byte) line::x0#8 ← phi( line::@23/(byte) line::x0#12 )
  (byte) line::y1#10 ← phi( line::@23/(byte) line::y1#8 )
  (byte) line::x1#7 ← phi( line::@23/(byte) line::x1#12 )
  (byte) line_xdyd::x#1 ← (byte) line::x1#7
  (byte) line_xdyd::y#1 ← (byte) line::y1#10
  (byte) line_xdyd::x1#1 ← (byte) line::x0#8
  (byte) line_xdyd::xd#1 ← (byte) line::xd#11
  (byte) line_xdyd::yd#1 ← (byte) line::yd#9
  call line_xdyd param-assignment
  to:line::@34
line::@34: scope:[line]  from line::@24
  to:line::@return
line::@13: scope:[line]  from line::@9
  (byte[]) plot_bit#28 ← phi( line::@9/(byte[]) plot_bit#40 )
  (byte[]) plot_ylo#27 ← phi( line::@9/(byte[]) plot_ylo#40 )
  (byte[]) plot_yhi#27 ← phi( line::@9/(byte[]) plot_yhi#40 )
  (byte[]) plot_xlo#28 ← phi( line::@9/(byte[]) plot_xlo#40 )
  (byte[]) plot_xhi#28 ← phi( line::@9/(byte[]) plot_xhi#40 )
  (byte) line::xd#12 ← phi( line::@9/(byte) line::xd#8 )
  (byte) line::yd#10 ← phi( line::@9/(byte) line::yd#2 )
  (byte) line::y0#12 ← phi( line::@9/(byte) line::y0#9 )
  (byte) line::x1#8 ← phi( line::@9/(byte) line::x1#13 )
  (byte) line::y1#11 ← phi( line::@9/(byte) line::y1#7 )
  (byte) line_ydxi::y#1 ← (byte) line::y1#11
  (byte) line_ydxi::x#1 ← (byte) line::x1#8
  (byte) line_ydxi::y1#1 ← (byte) line::y0#12
  (byte) line_ydxi::yd#1 ← (byte) line::yd#10
  (byte) line_ydxi::xd#1 ← (byte) line::xd#12
  call line_ydxi param-assignment
  to:line::@35
line::@35: scope:[line]  from line::@13
  to:line::@return
line::@27: scope:[line]  from line::@9
  (byte[]) plot_bit#21 ← phi( line::@9/(byte[]) plot_bit#40 )
  (byte[]) plot_ylo#20 ← phi( line::@9/(byte[]) plot_ylo#40 )
  (byte[]) plot_yhi#20 ← phi( line::@9/(byte[]) plot_yhi#40 )
  (byte[]) plot_xlo#21 ← phi( line::@9/(byte[]) plot_xlo#40 )
  (byte[]) plot_xhi#21 ← phi( line::@9/(byte[]) plot_xhi#40 )
  (byte) line::yd#11 ← phi( line::@9/(byte) line::yd#2 )
  (byte) line::xd#13 ← phi( line::@9/(byte) line::xd#8 )
  (byte) line::x0#9 ← phi( line::@9/(byte) line::x0#13 )
  (byte) line::y1#12 ← phi( line::@9/(byte) line::y1#7 )
  (byte) line::x1#9 ← phi( line::@9/(byte) line::x1#13 )
  (byte) line_xdyi::x#1 ← (byte) line::x1#9
  (byte) line_xdyi::y#1 ← (byte) line::y1#12
  (byte) line_xdyi::x1#1 ← (byte) line::x0#9
  (byte) line_xdyi::xd#1 ← (byte) line::xd#13
  (byte) line_xdyi::yd#1 ← (byte) line::yd#11
  call line_xdyi param-assignment
  to:line::@36
line::@36: scope:[line]  from line::@27
  to:line::@return
line::@return: scope:[line]  from line::@29 line::@30 line::@31 line::@32 line::@33 line::@34 line::@35 line::@36
  return 
  to:@return
line_xdyi: scope:[line_xdyi]  from line::@17 line::@27
  (byte) line_xdyi::x1#6 ← phi( line::@17/(byte) line_xdyi::x1#0 line::@27/(byte) line_xdyi::x1#1 )
  (byte[]) plot_bit#9 ← phi( line::@17/(byte[]) plot_bit#20 line::@27/(byte[]) plot_bit#21 )
  (byte[]) plot_ylo#9 ← phi( line::@17/(byte[]) plot_ylo#19 line::@27/(byte[]) plot_ylo#20 )
  (byte[]) plot_yhi#9 ← phi( line::@17/(byte[]) plot_yhi#19 line::@27/(byte[]) plot_yhi#20 )
  (byte[]) plot_xlo#9 ← phi( line::@17/(byte[]) plot_xlo#20 line::@27/(byte[]) plot_xlo#21 )
  (byte[]) plot_xhi#9 ← phi( line::@17/(byte[]) plot_xhi#20 line::@27/(byte[]) plot_xhi#21 )
  (byte) line_xdyi::xd#5 ← phi( line::@17/(byte) line_xdyi::xd#0 line::@27/(byte) line_xdyi::xd#1 )
  (byte) line_xdyi::y#5 ← phi( line::@17/(byte) line_xdyi::y#0 line::@27/(byte) line_xdyi::y#1 )
  (byte) line_xdyi::x#6 ← phi( line::@17/(byte) line_xdyi::x#0 line::@27/(byte) line_xdyi::x#1 )
  (byte) line_xdyi::yd#2 ← phi( line::@17/(byte) line_xdyi::yd#0 line::@27/(byte) line_xdyi::yd#1 )
  (byte~) line_xdyi::$0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#0 ← (byte~) line_xdyi::$0
  to:line_xdyi::@1
line_xdyi::@1: scope:[line_xdyi]  from line_xdyi line_xdyi::@2
  (byte) line_xdyi::x1#5 ← phi( line_xdyi/(byte) line_xdyi::x1#6 line_xdyi::@2/(byte) line_xdyi::x1#2 )
  (byte[]) plot_bit#4 ← phi( line_xdyi/(byte[]) plot_bit#9 line_xdyi::@2/(byte[]) plot_bit#10 )
  (byte[]) plot_ylo#4 ← phi( line_xdyi/(byte[]) plot_ylo#9 line_xdyi::@2/(byte[]) plot_ylo#10 )
  (byte[]) plot_yhi#4 ← phi( line_xdyi/(byte[]) plot_yhi#9 line_xdyi::@2/(byte[]) plot_yhi#10 )
  (byte[]) plot_xlo#4 ← phi( line_xdyi/(byte[]) plot_xlo#9 line_xdyi::@2/(byte[]) plot_xlo#10 )
  (byte[]) plot_xhi#4 ← phi( line_xdyi/(byte[]) plot_xhi#9 line_xdyi::@2/(byte[]) plot_xhi#10 )
  (byte) line_xdyi::xd#4 ← phi( line_xdyi/(byte) line_xdyi::xd#5 line_xdyi::@2/(byte) line_xdyi::xd#6 )
  (byte) line_xdyi::yd#4 ← phi( line_xdyi/(byte) line_xdyi::yd#2 line_xdyi::@2/(byte) line_xdyi::yd#5 )
  (byte) line_xdyi::e#5 ← phi( line_xdyi/(byte) line_xdyi::e#0 line_xdyi::@2/(byte) line_xdyi::e#6 )
  (byte) line_xdyi::y#3 ← phi( line_xdyi/(byte) line_xdyi::y#5 line_xdyi::@2/(byte) line_xdyi::y#6 )
  (byte) line_xdyi::x#3 ← phi( line_xdyi/(byte) line_xdyi::x#6 line_xdyi::@2/(byte) line_xdyi::x#5 )
  (byte) plot::x#0 ← (byte) line_xdyi::x#3
  (byte) plot::y#0 ← (byte) line_xdyi::y#3
  call plot param-assignment
  to:line_xdyi::@5
line_xdyi::@5: scope:[line_xdyi]  from line_xdyi::@1
  (byte[]) plot_bit#23 ← phi( line_xdyi::@1/(byte[]) plot_bit#4 )
  (byte[]) plot_ylo#22 ← phi( line_xdyi::@1/(byte[]) plot_ylo#4 )
  (byte[]) plot_yhi#22 ← phi( line_xdyi::@1/(byte[]) plot_yhi#4 )
  (byte[]) plot_xlo#23 ← phi( line_xdyi::@1/(byte[]) plot_xlo#4 )
  (byte[]) plot_xhi#23 ← phi( line_xdyi::@1/(byte[]) plot_xhi#4 )
  (byte) line_xdyi::y#7 ← phi( line_xdyi::@1/(byte) line_xdyi::y#3 )
  (byte) line_xdyi::x1#4 ← phi( line_xdyi::@1/(byte) line_xdyi::x1#5 )
  (byte) line_xdyi::xd#2 ← phi( line_xdyi::@1/(byte) line_xdyi::xd#4 )
  (byte) line_xdyi::yd#3 ← phi( line_xdyi::@1/(byte) line_xdyi::yd#4 )
  (byte) line_xdyi::e#3 ← phi( line_xdyi::@1/(byte) line_xdyi::e#5 )
  (byte) line_xdyi::x#4 ← phi( line_xdyi::@1/(byte) line_xdyi::x#3 )
  (byte~) line_xdyi::$2 ← (byte) line_xdyi::x#4 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::x#2 ← (byte~) line_xdyi::$2
  (byte~) line_xdyi::$3 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#3
  (byte) line_xdyi::e#1 ← (byte~) line_xdyi::$3
  (boolean~) line_xdyi::$4 ← (byte) line_xdyi::xd#2 < (byte) line_xdyi::e#1
  (boolean~) line_xdyi::$5 ← ! (boolean~) line_xdyi::$4
  if((boolean~) line_xdyi::$5) goto line_xdyi::@2
  to:line_xdyi::@3
line_xdyi::@2: scope:[line_xdyi]  from line_xdyi::@3 line_xdyi::@5
  (byte[]) plot_bit#10 ← phi( line_xdyi::@3/(byte[]) plot_bit#22 line_xdyi::@5/(byte[]) plot_bit#23 )
  (byte[]) plot_ylo#10 ← phi( line_xdyi::@3/(byte[]) plot_ylo#21 line_xdyi::@5/(byte[]) plot_ylo#22 )
  (byte[]) plot_yhi#10 ← phi( line_xdyi::@3/(byte[]) plot_yhi#21 line_xdyi::@5/(byte[]) plot_yhi#22 )
  (byte[]) plot_xlo#10 ← phi( line_xdyi::@3/(byte[]) plot_xlo#22 line_xdyi::@5/(byte[]) plot_xlo#23 )
  (byte[]) plot_xhi#10 ← phi( line_xdyi::@3/(byte[]) plot_xhi#22 line_xdyi::@5/(byte[]) plot_xhi#23 )
  (byte) line_xdyi::xd#6 ← phi( line_xdyi::@3/(byte) line_xdyi::xd#3 line_xdyi::@5/(byte) line_xdyi::xd#2 )
  (byte) line_xdyi::yd#5 ← phi( line_xdyi::@3/(byte) line_xdyi::yd#6 line_xdyi::@5/(byte) line_xdyi::yd#3 )
  (byte) line_xdyi::e#6 ← phi( line_xdyi::@3/(byte) line_xdyi::e#2 line_xdyi::@5/(byte) line_xdyi::e#1 )
  (byte) line_xdyi::y#6 ← phi( line_xdyi::@3/(byte) line_xdyi::y#2 line_xdyi::@5/(byte) line_xdyi::y#7 )
  (byte) line_xdyi::x#5 ← phi( line_xdyi::@3/(byte) line_xdyi::x#7 line_xdyi::@5/(byte) line_xdyi::x#2 )
  (byte) line_xdyi::x1#2 ← phi( line_xdyi::@3/(byte) line_xdyi::x1#3 line_xdyi::@5/(byte) line_xdyi::x1#4 )
  (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyi::$9 ← (byte) line_xdyi::x#5 < (byte~) line_xdyi::$8
  if((boolean~) line_xdyi::$9) goto line_xdyi::@1
  to:line_xdyi::@return
line_xdyi::@3: scope:[line_xdyi]  from line_xdyi::@5
  (byte[]) plot_bit#22 ← phi( line_xdyi::@5/(byte[]) plot_bit#23 )
  (byte[]) plot_ylo#21 ← phi( line_xdyi::@5/(byte[]) plot_ylo#22 )
  (byte[]) plot_yhi#21 ← phi( line_xdyi::@5/(byte[]) plot_yhi#22 )
  (byte[]) plot_xlo#22 ← phi( line_xdyi::@5/(byte[]) plot_xlo#23 )
  (byte[]) plot_xhi#22 ← phi( line_xdyi::@5/(byte[]) plot_xhi#23 )
  (byte) line_xdyi::yd#6 ← phi( line_xdyi::@5/(byte) line_xdyi::yd#3 )
  (byte) line_xdyi::x#7 ← phi( line_xdyi::@5/(byte) line_xdyi::x#2 )
  (byte) line_xdyi::x1#3 ← phi( line_xdyi::@5/(byte) line_xdyi::x1#4 )
  (byte) line_xdyi::xd#3 ← phi( line_xdyi::@5/(byte) line_xdyi::xd#2 )
  (byte) line_xdyi::e#4 ← phi( line_xdyi::@5/(byte) line_xdyi::e#1 )
  (byte) line_xdyi::y#4 ← phi( line_xdyi::@5/(byte) line_xdyi::y#7 )
  (byte~) line_xdyi::$6 ← (byte) line_xdyi::y#4 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::y#2 ← (byte~) line_xdyi::$6
  (byte~) line_xdyi::$7 ← (byte) line_xdyi::e#4 - (byte) line_xdyi::xd#3
  (byte) line_xdyi::e#2 ← (byte~) line_xdyi::$7
  to:line_xdyi::@2
line_xdyi::@return: scope:[line_xdyi]  from line_xdyi::@2
  return 
  to:@return
line_xdyd: scope:[line_xdyd]  from line::@20 line::@24
  (byte) line_xdyd::x1#6 ← phi( line::@20/(byte) line_xdyd::x1#0 line::@24/(byte) line_xdyd::x1#1 )
  (byte[]) plot_bit#11 ← phi( line::@20/(byte[]) plot_bit#24 line::@24/(byte[]) plot_bit#25 )
  (byte[]) plot_ylo#11 ← phi( line::@20/(byte[]) plot_ylo#23 line::@24/(byte[]) plot_ylo#24 )
  (byte[]) plot_yhi#11 ← phi( line::@20/(byte[]) plot_yhi#23 line::@24/(byte[]) plot_yhi#24 )
  (byte[]) plot_xlo#11 ← phi( line::@20/(byte[]) plot_xlo#24 line::@24/(byte[]) plot_xlo#25 )
  (byte[]) plot_xhi#11 ← phi( line::@20/(byte[]) plot_xhi#24 line::@24/(byte[]) plot_xhi#25 )
  (byte) line_xdyd::xd#5 ← phi( line::@20/(byte) line_xdyd::xd#0 line::@24/(byte) line_xdyd::xd#1 )
  (byte) line_xdyd::y#5 ← phi( line::@20/(byte) line_xdyd::y#0 line::@24/(byte) line_xdyd::y#1 )
  (byte) line_xdyd::x#6 ← phi( line::@20/(byte) line_xdyd::x#0 line::@24/(byte) line_xdyd::x#1 )
  (byte) line_xdyd::yd#2 ← phi( line::@20/(byte) line_xdyd::yd#0 line::@24/(byte) line_xdyd::yd#1 )
  (byte~) line_xdyd::$0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#0 ← (byte~) line_xdyd::$0
  to:line_xdyd::@1
line_xdyd::@1: scope:[line_xdyd]  from line_xdyd line_xdyd::@2
  (byte) line_xdyd::x1#5 ← phi( line_xdyd/(byte) line_xdyd::x1#6 line_xdyd::@2/(byte) line_xdyd::x1#2 )
  (byte[]) plot_bit#3 ← phi( line_xdyd/(byte[]) plot_bit#11 line_xdyd::@2/(byte[]) plot_bit#12 )
  (byte[]) plot_ylo#3 ← phi( line_xdyd/(byte[]) plot_ylo#11 line_xdyd::@2/(byte[]) plot_ylo#12 )
  (byte[]) plot_yhi#3 ← phi( line_xdyd/(byte[]) plot_yhi#11 line_xdyd::@2/(byte[]) plot_yhi#12 )
  (byte[]) plot_xlo#3 ← phi( line_xdyd/(byte[]) plot_xlo#11 line_xdyd::@2/(byte[]) plot_xlo#12 )
  (byte[]) plot_xhi#3 ← phi( line_xdyd/(byte[]) plot_xhi#11 line_xdyd::@2/(byte[]) plot_xhi#12 )
  (byte) line_xdyd::xd#4 ← phi( line_xdyd/(byte) line_xdyd::xd#5 line_xdyd::@2/(byte) line_xdyd::xd#6 )
  (byte) line_xdyd::yd#4 ← phi( line_xdyd/(byte) line_xdyd::yd#2 line_xdyd::@2/(byte) line_xdyd::yd#5 )
  (byte) line_xdyd::e#5 ← phi( line_xdyd/(byte) line_xdyd::e#0 line_xdyd::@2/(byte) line_xdyd::e#6 )
  (byte) line_xdyd::y#3 ← phi( line_xdyd/(byte) line_xdyd::y#5 line_xdyd::@2/(byte) line_xdyd::y#6 )
  (byte) line_xdyd::x#3 ← phi( line_xdyd/(byte) line_xdyd::x#6 line_xdyd::@2/(byte) line_xdyd::x#5 )
  (byte) plot::x#1 ← (byte) line_xdyd::x#3
  (byte) plot::y#1 ← (byte) line_xdyd::y#3
  call plot param-assignment
  to:line_xdyd::@5
line_xdyd::@5: scope:[line_xdyd]  from line_xdyd::@1
  (byte[]) plot_bit#27 ← phi( line_xdyd::@1/(byte[]) plot_bit#3 )
  (byte[]) plot_ylo#26 ← phi( line_xdyd::@1/(byte[]) plot_ylo#3 )
  (byte[]) plot_yhi#26 ← phi( line_xdyd::@1/(byte[]) plot_yhi#3 )
  (byte[]) plot_xlo#27 ← phi( line_xdyd::@1/(byte[]) plot_xlo#3 )
  (byte[]) plot_xhi#27 ← phi( line_xdyd::@1/(byte[]) plot_xhi#3 )
  (byte) line_xdyd::y#7 ← phi( line_xdyd::@1/(byte) line_xdyd::y#3 )
  (byte) line_xdyd::x1#4 ← phi( line_xdyd::@1/(byte) line_xdyd::x1#5 )
  (byte) line_xdyd::xd#2 ← phi( line_xdyd::@1/(byte) line_xdyd::xd#4 )
  (byte) line_xdyd::yd#3 ← phi( line_xdyd::@1/(byte) line_xdyd::yd#4 )
  (byte) line_xdyd::e#3 ← phi( line_xdyd::@1/(byte) line_xdyd::e#5 )
  (byte) line_xdyd::x#4 ← phi( line_xdyd::@1/(byte) line_xdyd::x#3 )
  (byte~) line_xdyd::$2 ← (byte) line_xdyd::x#4 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::x#2 ← (byte~) line_xdyd::$2
  (byte~) line_xdyd::$3 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#3
  (byte) line_xdyd::e#1 ← (byte~) line_xdyd::$3
  (boolean~) line_xdyd::$4 ← (byte) line_xdyd::xd#2 < (byte) line_xdyd::e#1
  (boolean~) line_xdyd::$5 ← ! (boolean~) line_xdyd::$4
  if((boolean~) line_xdyd::$5) goto line_xdyd::@2
  to:line_xdyd::@3
line_xdyd::@2: scope:[line_xdyd]  from line_xdyd::@3 line_xdyd::@5
  (byte[]) plot_bit#12 ← phi( line_xdyd::@3/(byte[]) plot_bit#26 line_xdyd::@5/(byte[]) plot_bit#27 )
  (byte[]) plot_ylo#12 ← phi( line_xdyd::@3/(byte[]) plot_ylo#25 line_xdyd::@5/(byte[]) plot_ylo#26 )
  (byte[]) plot_yhi#12 ← phi( line_xdyd::@3/(byte[]) plot_yhi#25 line_xdyd::@5/(byte[]) plot_yhi#26 )
  (byte[]) plot_xlo#12 ← phi( line_xdyd::@3/(byte[]) plot_xlo#26 line_xdyd::@5/(byte[]) plot_xlo#27 )
  (byte[]) plot_xhi#12 ← phi( line_xdyd::@3/(byte[]) plot_xhi#26 line_xdyd::@5/(byte[]) plot_xhi#27 )
  (byte) line_xdyd::xd#6 ← phi( line_xdyd::@3/(byte) line_xdyd::xd#3 line_xdyd::@5/(byte) line_xdyd::xd#2 )
  (byte) line_xdyd::yd#5 ← phi( line_xdyd::@3/(byte) line_xdyd::yd#6 line_xdyd::@5/(byte) line_xdyd::yd#3 )
  (byte) line_xdyd::e#6 ← phi( line_xdyd::@3/(byte) line_xdyd::e#2 line_xdyd::@5/(byte) line_xdyd::e#1 )
  (byte) line_xdyd::y#6 ← phi( line_xdyd::@3/(byte) line_xdyd::y#2 line_xdyd::@5/(byte) line_xdyd::y#7 )
  (byte) line_xdyd::x#5 ← phi( line_xdyd::@3/(byte) line_xdyd::x#7 line_xdyd::@5/(byte) line_xdyd::x#2 )
  (byte) line_xdyd::x1#2 ← phi( line_xdyd::@3/(byte) line_xdyd::x1#3 line_xdyd::@5/(byte) line_xdyd::x1#4 )
  (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyd::$9 ← (byte) line_xdyd::x#5 < (byte~) line_xdyd::$8
  if((boolean~) line_xdyd::$9) goto line_xdyd::@1
  to:line_xdyd::@return
line_xdyd::@3: scope:[line_xdyd]  from line_xdyd::@5
  (byte[]) plot_bit#26 ← phi( line_xdyd::@5/(byte[]) plot_bit#27 )
  (byte[]) plot_ylo#25 ← phi( line_xdyd::@5/(byte[]) plot_ylo#26 )
  (byte[]) plot_yhi#25 ← phi( line_xdyd::@5/(byte[]) plot_yhi#26 )
  (byte[]) plot_xlo#26 ← phi( line_xdyd::@5/(byte[]) plot_xlo#27 )
  (byte[]) plot_xhi#26 ← phi( line_xdyd::@5/(byte[]) plot_xhi#27 )
  (byte) line_xdyd::yd#6 ← phi( line_xdyd::@5/(byte) line_xdyd::yd#3 )
  (byte) line_xdyd::x#7 ← phi( line_xdyd::@5/(byte) line_xdyd::x#2 )
  (byte) line_xdyd::x1#3 ← phi( line_xdyd::@5/(byte) line_xdyd::x1#4 )
  (byte) line_xdyd::xd#3 ← phi( line_xdyd::@5/(byte) line_xdyd::xd#2 )
  (byte) line_xdyd::e#4 ← phi( line_xdyd::@5/(byte) line_xdyd::e#1 )
  (byte) line_xdyd::y#4 ← phi( line_xdyd::@5/(byte) line_xdyd::y#7 )
  (byte~) line_xdyd::$6 ← (byte) line_xdyd::y#4 - (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::y#2 ← (byte~) line_xdyd::$6
  (byte~) line_xdyd::$7 ← (byte) line_xdyd::e#4 - (byte) line_xdyd::xd#3
  (byte) line_xdyd::e#2 ← (byte~) line_xdyd::$7
  to:line_xdyd::@2
line_xdyd::@return: scope:[line_xdyd]  from line_xdyd::@2
  return 
  to:@return
line_ydxi: scope:[line_ydxi]  from line::@13 line::@3
  (byte) line_ydxi::y1#6 ← phi( line::@13/(byte) line_ydxi::y1#1 line::@3/(byte) line_ydxi::y1#0 )
  (byte[]) plot_bit#13 ← phi( line::@13/(byte[]) plot_bit#28 line::@3/(byte[]) plot_bit#29 )
  (byte[]) plot_ylo#13 ← phi( line::@13/(byte[]) plot_ylo#27 line::@3/(byte[]) plot_ylo#28 )
  (byte[]) plot_yhi#13 ← phi( line::@13/(byte[]) plot_yhi#27 line::@3/(byte[]) plot_yhi#28 )
  (byte[]) plot_xlo#13 ← phi( line::@13/(byte[]) plot_xlo#28 line::@3/(byte[]) plot_xlo#29 )
  (byte[]) plot_xhi#13 ← phi( line::@13/(byte[]) plot_xhi#28 line::@3/(byte[]) plot_xhi#29 )
  (byte) line_ydxi::yd#5 ← phi( line::@13/(byte) line_ydxi::yd#1 line::@3/(byte) line_ydxi::yd#0 )
  (byte) line_ydxi::y#6 ← phi( line::@13/(byte) line_ydxi::y#1 line::@3/(byte) line_ydxi::y#0 )
  (byte) line_ydxi::x#5 ← phi( line::@13/(byte) line_ydxi::x#1 line::@3/(byte) line_ydxi::x#0 )
  (byte) line_ydxi::xd#2 ← phi( line::@13/(byte) line_ydxi::xd#1 line::@3/(byte) line_ydxi::xd#0 )
  (byte~) line_ydxi::$0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#0 ← (byte~) line_ydxi::$0
  to:line_ydxi::@1
line_ydxi::@1: scope:[line_ydxi]  from line_ydxi line_ydxi::@2
  (byte) line_ydxi::y1#5 ← phi( line_ydxi/(byte) line_ydxi::y1#6 line_ydxi::@2/(byte) line_ydxi::y1#2 )
  (byte[]) plot_bit#6 ← phi( line_ydxi/(byte[]) plot_bit#13 line_ydxi::@2/(byte[]) plot_bit#14 )
  (byte[]) plot_ylo#6 ← phi( line_ydxi/(byte[]) plot_ylo#13 line_ydxi::@2/(byte[]) plot_ylo#14 )
  (byte[]) plot_yhi#6 ← phi( line_ydxi/(byte[]) plot_yhi#13 line_ydxi::@2/(byte[]) plot_yhi#14 )
  (byte[]) plot_xlo#6 ← phi( line_ydxi/(byte[]) plot_xlo#13 line_ydxi::@2/(byte[]) plot_xlo#14 )
  (byte[]) plot_xhi#6 ← phi( line_ydxi/(byte[]) plot_xhi#13 line_ydxi::@2/(byte[]) plot_xhi#14 )
  (byte) line_ydxi::yd#4 ← phi( line_ydxi/(byte) line_ydxi::yd#5 line_ydxi::@2/(byte) line_ydxi::yd#6 )
  (byte) line_ydxi::xd#4 ← phi( line_ydxi/(byte) line_ydxi::xd#2 line_ydxi::@2/(byte) line_ydxi::xd#5 )
  (byte) line_ydxi::e#5 ← phi( line_ydxi/(byte) line_ydxi::e#0 line_ydxi::@2/(byte) line_ydxi::e#6 )
  (byte) line_ydxi::y#3 ← phi( line_ydxi/(byte) line_ydxi::y#6 line_ydxi::@2/(byte) line_ydxi::y#5 )
  (byte) line_ydxi::x#3 ← phi( line_ydxi/(byte) line_ydxi::x#5 line_ydxi::@2/(byte) line_ydxi::x#6 )
  (byte) plot::x#2 ← (byte) line_ydxi::x#3
  (byte) plot::y#2 ← (byte) line_ydxi::y#3
  call plot param-assignment
  to:line_ydxi::@5
line_ydxi::@5: scope:[line_ydxi]  from line_ydxi::@1
  (byte[]) plot_bit#31 ← phi( line_ydxi::@1/(byte[]) plot_bit#6 )
  (byte[]) plot_ylo#30 ← phi( line_ydxi::@1/(byte[]) plot_ylo#6 )
  (byte[]) plot_yhi#30 ← phi( line_ydxi::@1/(byte[]) plot_yhi#6 )
  (byte[]) plot_xlo#31 ← phi( line_ydxi::@1/(byte[]) plot_xlo#6 )
  (byte[]) plot_xhi#31 ← phi( line_ydxi::@1/(byte[]) plot_xhi#6 )
  (byte) line_ydxi::x#7 ← phi( line_ydxi::@1/(byte) line_ydxi::x#3 )
  (byte) line_ydxi::y1#4 ← phi( line_ydxi::@1/(byte) line_ydxi::y1#5 )
  (byte) line_ydxi::yd#2 ← phi( line_ydxi::@1/(byte) line_ydxi::yd#4 )
  (byte) line_ydxi::xd#3 ← phi( line_ydxi::@1/(byte) line_ydxi::xd#4 )
  (byte) line_ydxi::e#3 ← phi( line_ydxi::@1/(byte) line_ydxi::e#5 )
  (byte) line_ydxi::y#4 ← phi( line_ydxi::@1/(byte) line_ydxi::y#3 )
  (byte~) line_ydxi::$2 ← (byte) line_ydxi::y#4 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::y#2 ← (byte~) line_ydxi::$2
  (byte~) line_ydxi::$3 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#3
  (byte) line_ydxi::e#1 ← (byte~) line_ydxi::$3
  (boolean~) line_ydxi::$4 ← (byte) line_ydxi::yd#2 < (byte) line_ydxi::e#1
  (boolean~) line_ydxi::$5 ← ! (boolean~) line_ydxi::$4
  if((boolean~) line_ydxi::$5) goto line_ydxi::@2
  to:line_ydxi::@3
line_ydxi::@2: scope:[line_ydxi]  from line_ydxi::@3 line_ydxi::@5
  (byte[]) plot_bit#14 ← phi( line_ydxi::@3/(byte[]) plot_bit#30 line_ydxi::@5/(byte[]) plot_bit#31 )
  (byte[]) plot_ylo#14 ← phi( line_ydxi::@3/(byte[]) plot_ylo#29 line_ydxi::@5/(byte[]) plot_ylo#30 )
  (byte[]) plot_yhi#14 ← phi( line_ydxi::@3/(byte[]) plot_yhi#29 line_ydxi::@5/(byte[]) plot_yhi#30 )
  (byte[]) plot_xlo#14 ← phi( line_ydxi::@3/(byte[]) plot_xlo#30 line_ydxi::@5/(byte[]) plot_xlo#31 )
  (byte[]) plot_xhi#14 ← phi( line_ydxi::@3/(byte[]) plot_xhi#30 line_ydxi::@5/(byte[]) plot_xhi#31 )
  (byte) line_ydxi::yd#6 ← phi( line_ydxi::@3/(byte) line_ydxi::yd#3 line_ydxi::@5/(byte) line_ydxi::yd#2 )
  (byte) line_ydxi::xd#5 ← phi( line_ydxi::@3/(byte) line_ydxi::xd#6 line_ydxi::@5/(byte) line_ydxi::xd#3 )
  (byte) line_ydxi::e#6 ← phi( line_ydxi::@3/(byte) line_ydxi::e#2 line_ydxi::@5/(byte) line_ydxi::e#1 )
  (byte) line_ydxi::x#6 ← phi( line_ydxi::@3/(byte) line_ydxi::x#2 line_ydxi::@5/(byte) line_ydxi::x#7 )
  (byte) line_ydxi::y#5 ← phi( line_ydxi::@3/(byte) line_ydxi::y#7 line_ydxi::@5/(byte) line_ydxi::y#2 )
  (byte) line_ydxi::y1#2 ← phi( line_ydxi::@3/(byte) line_ydxi::y1#3 line_ydxi::@5/(byte) line_ydxi::y1#4 )
  (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxi::$9 ← (byte) line_ydxi::y#5 < (byte~) line_ydxi::$8
  if((boolean~) line_ydxi::$9) goto line_ydxi::@1
  to:line_ydxi::@return
line_ydxi::@3: scope:[line_ydxi]  from line_ydxi::@5
  (byte[]) plot_bit#30 ← phi( line_ydxi::@5/(byte[]) plot_bit#31 )
  (byte[]) plot_ylo#29 ← phi( line_ydxi::@5/(byte[]) plot_ylo#30 )
  (byte[]) plot_yhi#29 ← phi( line_ydxi::@5/(byte[]) plot_yhi#30 )
  (byte[]) plot_xlo#30 ← phi( line_ydxi::@5/(byte[]) plot_xlo#31 )
  (byte[]) plot_xhi#30 ← phi( line_ydxi::@5/(byte[]) plot_xhi#31 )
  (byte) line_ydxi::xd#6 ← phi( line_ydxi::@5/(byte) line_ydxi::xd#3 )
  (byte) line_ydxi::y#7 ← phi( line_ydxi::@5/(byte) line_ydxi::y#2 )
  (byte) line_ydxi::y1#3 ← phi( line_ydxi::@5/(byte) line_ydxi::y1#4 )
  (byte) line_ydxi::yd#3 ← phi( line_ydxi::@5/(byte) line_ydxi::yd#2 )
  (byte) line_ydxi::e#4 ← phi( line_ydxi::@5/(byte) line_ydxi::e#1 )
  (byte) line_ydxi::x#4 ← phi( line_ydxi::@5/(byte) line_ydxi::x#7 )
  (byte~) line_ydxi::$6 ← (byte) line_ydxi::x#4 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::x#2 ← (byte~) line_ydxi::$6
  (byte~) line_ydxi::$7 ← (byte) line_ydxi::e#4 - (byte) line_ydxi::yd#3
  (byte) line_ydxi::e#2 ← (byte~) line_ydxi::$7
  to:line_ydxi::@2
line_ydxi::@return: scope:[line_ydxi]  from line_ydxi::@2
  return 
  to:@return
line_ydxd: scope:[line_ydxd]  from line::@10 line::@6
  (byte) line_ydxd::y1#6 ← phi( line::@10/(byte) line_ydxd::y1#1 line::@6/(byte) line_ydxd::y1#0 )
  (byte[]) plot_bit#15 ← phi( line::@10/(byte[]) plot_bit#32 line::@6/(byte[]) plot_bit#33 )
  (byte[]) plot_ylo#15 ← phi( line::@10/(byte[]) plot_ylo#31 line::@6/(byte[]) plot_ylo#32 )
  (byte[]) plot_yhi#15 ← phi( line::@10/(byte[]) plot_yhi#31 line::@6/(byte[]) plot_yhi#32 )
  (byte[]) plot_xlo#15 ← phi( line::@10/(byte[]) plot_xlo#32 line::@6/(byte[]) plot_xlo#33 )
  (byte[]) plot_xhi#15 ← phi( line::@10/(byte[]) plot_xhi#32 line::@6/(byte[]) plot_xhi#33 )
  (byte) line_ydxd::yd#5 ← phi( line::@10/(byte) line_ydxd::yd#1 line::@6/(byte) line_ydxd::yd#0 )
  (byte) line_ydxd::y#6 ← phi( line::@10/(byte) line_ydxd::y#1 line::@6/(byte) line_ydxd::y#0 )
  (byte) line_ydxd::x#5 ← phi( line::@10/(byte) line_ydxd::x#1 line::@6/(byte) line_ydxd::x#0 )
  (byte) line_ydxd::xd#2 ← phi( line::@10/(byte) line_ydxd::xd#1 line::@6/(byte) line_ydxd::xd#0 )
  (byte~) line_ydxd::$0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#0 ← (byte~) line_ydxd::$0
  to:line_ydxd::@1
line_ydxd::@1: scope:[line_ydxd]  from line_ydxd line_ydxd::@2
  (byte) line_ydxd::y1#5 ← phi( line_ydxd/(byte) line_ydxd::y1#6 line_ydxd::@2/(byte) line_ydxd::y1#2 )
  (byte[]) plot_bit#5 ← phi( line_ydxd/(byte[]) plot_bit#15 line_ydxd::@2/(byte[]) plot_bit#16 )
  (byte[]) plot_ylo#5 ← phi( line_ydxd/(byte[]) plot_ylo#15 line_ydxd::@2/(byte[]) plot_ylo#16 )
  (byte[]) plot_yhi#5 ← phi( line_ydxd/(byte[]) plot_yhi#15 line_ydxd::@2/(byte[]) plot_yhi#16 )
  (byte[]) plot_xlo#5 ← phi( line_ydxd/(byte[]) plot_xlo#15 line_ydxd::@2/(byte[]) plot_xlo#16 )
  (byte[]) plot_xhi#5 ← phi( line_ydxd/(byte[]) plot_xhi#15 line_ydxd::@2/(byte[]) plot_xhi#16 )
  (byte) line_ydxd::yd#4 ← phi( line_ydxd/(byte) line_ydxd::yd#5 line_ydxd::@2/(byte) line_ydxd::yd#6 )
  (byte) line_ydxd::xd#4 ← phi( line_ydxd/(byte) line_ydxd::xd#2 line_ydxd::@2/(byte) line_ydxd::xd#5 )
  (byte) line_ydxd::e#5 ← phi( line_ydxd/(byte) line_ydxd::e#0 line_ydxd::@2/(byte) line_ydxd::e#6 )
  (byte) line_ydxd::y#3 ← phi( line_ydxd/(byte) line_ydxd::y#6 line_ydxd::@2/(byte) line_ydxd::y#5 )
  (byte) line_ydxd::x#3 ← phi( line_ydxd/(byte) line_ydxd::x#5 line_ydxd::@2/(byte) line_ydxd::x#6 )
  (byte) plot::x#3 ← (byte) line_ydxd::x#3
  (byte) plot::y#3 ← (byte) line_ydxd::y#3
  call plot param-assignment
  to:line_ydxd::@5
line_ydxd::@5: scope:[line_ydxd]  from line_ydxd::@1
  (byte[]) plot_bit#35 ← phi( line_ydxd::@1/(byte[]) plot_bit#5 )
  (byte[]) plot_ylo#34 ← phi( line_ydxd::@1/(byte[]) plot_ylo#5 )
  (byte[]) plot_yhi#34 ← phi( line_ydxd::@1/(byte[]) plot_yhi#5 )
  (byte[]) plot_xlo#35 ← phi( line_ydxd::@1/(byte[]) plot_xlo#5 )
  (byte[]) plot_xhi#35 ← phi( line_ydxd::@1/(byte[]) plot_xhi#5 )
  (byte) line_ydxd::x#7 ← phi( line_ydxd::@1/(byte) line_ydxd::x#3 )
  (byte) line_ydxd::y1#4 ← phi( line_ydxd::@1/(byte) line_ydxd::y1#5 )
  (byte) line_ydxd::yd#2 ← phi( line_ydxd::@1/(byte) line_ydxd::yd#4 )
  (byte) line_ydxd::xd#3 ← phi( line_ydxd::@1/(byte) line_ydxd::xd#4 )
  (byte) line_ydxd::e#3 ← phi( line_ydxd::@1/(byte) line_ydxd::e#5 )
  (byte) line_ydxd::y#4 ← phi( line_ydxd::@1/(byte) line_ydxd::y#3 )
  (byte~) line_ydxd::$2 ← (byte) line_ydxd::y#4 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::y#2 ← (byte~) line_ydxd::$2
  (byte~) line_ydxd::$3 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#3
  (byte) line_ydxd::e#1 ← (byte~) line_ydxd::$3
  (boolean~) line_ydxd::$4 ← (byte) line_ydxd::yd#2 < (byte) line_ydxd::e#1
  (boolean~) line_ydxd::$5 ← ! (boolean~) line_ydxd::$4
  if((boolean~) line_ydxd::$5) goto line_ydxd::@2
  to:line_ydxd::@3
line_ydxd::@2: scope:[line_ydxd]  from line_ydxd::@3 line_ydxd::@5
  (byte[]) plot_bit#16 ← phi( line_ydxd::@3/(byte[]) plot_bit#34 line_ydxd::@5/(byte[]) plot_bit#35 )
  (byte[]) plot_ylo#16 ← phi( line_ydxd::@3/(byte[]) plot_ylo#33 line_ydxd::@5/(byte[]) plot_ylo#34 )
  (byte[]) plot_yhi#16 ← phi( line_ydxd::@3/(byte[]) plot_yhi#33 line_ydxd::@5/(byte[]) plot_yhi#34 )
  (byte[]) plot_xlo#16 ← phi( line_ydxd::@3/(byte[]) plot_xlo#34 line_ydxd::@5/(byte[]) plot_xlo#35 )
  (byte[]) plot_xhi#16 ← phi( line_ydxd::@3/(byte[]) plot_xhi#34 line_ydxd::@5/(byte[]) plot_xhi#35 )
  (byte) line_ydxd::yd#6 ← phi( line_ydxd::@3/(byte) line_ydxd::yd#3 line_ydxd::@5/(byte) line_ydxd::yd#2 )
  (byte) line_ydxd::xd#5 ← phi( line_ydxd::@3/(byte) line_ydxd::xd#6 line_ydxd::@5/(byte) line_ydxd::xd#3 )
  (byte) line_ydxd::e#6 ← phi( line_ydxd::@3/(byte) line_ydxd::e#2 line_ydxd::@5/(byte) line_ydxd::e#1 )
  (byte) line_ydxd::x#6 ← phi( line_ydxd::@3/(byte) line_ydxd::x#2 line_ydxd::@5/(byte) line_ydxd::x#7 )
  (byte) line_ydxd::y#5 ← phi( line_ydxd::@3/(byte) line_ydxd::y#7 line_ydxd::@5/(byte) line_ydxd::y#2 )
  (byte) line_ydxd::y1#2 ← phi( line_ydxd::@3/(byte) line_ydxd::y1#3 line_ydxd::@5/(byte) line_ydxd::y1#4 )
  (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxd::$9 ← (byte) line_ydxd::y#5 < (byte~) line_ydxd::$8
  if((boolean~) line_ydxd::$9) goto line_ydxd::@1
  to:line_ydxd::@return
line_ydxd::@3: scope:[line_ydxd]  from line_ydxd::@5
  (byte[]) plot_bit#34 ← phi( line_ydxd::@5/(byte[]) plot_bit#35 )
  (byte[]) plot_ylo#33 ← phi( line_ydxd::@5/(byte[]) plot_ylo#34 )
  (byte[]) plot_yhi#33 ← phi( line_ydxd::@5/(byte[]) plot_yhi#34 )
  (byte[]) plot_xlo#34 ← phi( line_ydxd::@5/(byte[]) plot_xlo#35 )
  (byte[]) plot_xhi#34 ← phi( line_ydxd::@5/(byte[]) plot_xhi#35 )
  (byte) line_ydxd::xd#6 ← phi( line_ydxd::@5/(byte) line_ydxd::xd#3 )
  (byte) line_ydxd::y#7 ← phi( line_ydxd::@5/(byte) line_ydxd::y#2 )
  (byte) line_ydxd::y1#3 ← phi( line_ydxd::@5/(byte) line_ydxd::y1#4 )
  (byte) line_ydxd::yd#3 ← phi( line_ydxd::@5/(byte) line_ydxd::yd#2 )
  (byte) line_ydxd::e#4 ← phi( line_ydxd::@5/(byte) line_ydxd::e#1 )
  (byte) line_ydxd::x#4 ← phi( line_ydxd::@5/(byte) line_ydxd::x#7 )
  (byte~) line_ydxd::$6 ← (byte) line_ydxd::x#4 - (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::x#2 ← (byte~) line_ydxd::$6
  (byte~) line_ydxd::$7 ← (byte) line_ydxd::e#4 - (byte) line_ydxd::yd#3
  (byte) line_ydxd::e#2 ← (byte~) line_ydxd::$7
  to:line_ydxd::@2
line_ydxd::@return: scope:[line_ydxd]  from line_ydxd::@2
  return 
  to:@return
plot: scope:[plot]  from line_xdyd::@1 line_xdyi::@1 line_ydxd::@1 line_ydxi::@1
  (byte[]) plot_bit#1 ← phi( line_xdyd::@1/(byte[]) plot_bit#3 line_xdyi::@1/(byte[]) plot_bit#4 line_ydxd::@1/(byte[]) plot_bit#5 line_ydxi::@1/(byte[]) plot_bit#6 )
  (byte[]) plot_ylo#1 ← phi( line_xdyd::@1/(byte[]) plot_ylo#3 line_xdyi::@1/(byte[]) plot_ylo#4 line_ydxd::@1/(byte[]) plot_ylo#5 line_ydxi::@1/(byte[]) plot_ylo#6 )
  (byte) plot::y#4 ← phi( line_xdyd::@1/(byte) plot::y#1 line_xdyi::@1/(byte) plot::y#0 line_ydxd::@1/(byte) plot::y#3 line_ydxi::@1/(byte) plot::y#2 )
  (byte[]) plot_yhi#1 ← phi( line_xdyd::@1/(byte[]) plot_yhi#3 line_xdyi::@1/(byte[]) plot_yhi#4 line_ydxd::@1/(byte[]) plot_yhi#5 line_ydxi::@1/(byte[]) plot_yhi#6 )
  (byte[]) plot_xlo#1 ← phi( line_xdyd::@1/(byte[]) plot_xlo#3 line_xdyi::@1/(byte[]) plot_xlo#4 line_ydxd::@1/(byte[]) plot_xlo#5 line_ydxi::@1/(byte[]) plot_xlo#6 )
  (byte) plot::x#4 ← phi( line_xdyd::@1/(byte) plot::x#1 line_xdyi::@1/(byte) plot::x#0 line_ydxd::@1/(byte) plot::x#3 line_ydxi::@1/(byte) plot::x#2 )
  (byte[]) plot_xhi#1 ← phi( line_xdyd::@1/(byte[]) plot_xhi#3 line_xdyi::@1/(byte[]) plot_xhi#4 line_ydxd::@1/(byte[]) plot_xhi#5 line_ydxi::@1/(byte[]) plot_xhi#6 )
  (byte*) plot::plotter_x#0 ← ((byte*)) (byte/signed byte/word/signed word) 0
  (word) plot::plotter_y#0 ← (byte/signed byte/word/signed word) 0
  (byte~) plot::$0 ← (byte[]) plot_xhi#1 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#1 ← (byte*) plot::plotter_x#0 hi= (byte~) plot::$0
  (byte~) plot::$1 ← (byte[]) plot_xlo#1 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1
  (byte~) plot::$2 ← (byte[]) plot_yhi#1 *idx (byte) plot::y#4
  (word) plot::plotter_y#1 ← (word) plot::plotter_y#0 hi= (byte~) plot::$2
  (byte~) plot::$3 ← (byte[]) plot_ylo#1 *idx (byte) plot::y#4
  (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3
  (byte*~) plot::$4 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2
  (byte*) plot::plotter#0 ← (byte*~) plot::$4
  (byte~) plot::$5 ← (byte[]) plot_bit#1 *idx (byte) plot::x#4
  (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5
  *((byte*) plot::plotter#0) ← (byte~) plot::$6
  to:plot::@return
plot::@return: scope:[plot]  from plot
  return 
  to:@return
init_plot_tables: scope:[init_plot_tables]  from main::@3
  (byte[]) plot_yhi#41 ← phi( main::@3/(byte[]) plot_yhi#44 )
  (byte[]) plot_ylo#41 ← phi( main::@3/(byte[]) plot_ylo#44 )
  (byte[]) plot_bit#7 ← phi( main::@3/(byte[]) plot_bit#17 )
  (byte[]) plot_xhi#7 ← phi( main::@3/(byte[]) plot_xhi#17 )
  (byte*) BITMAP#4 ← phi( main::@3/(byte*) BITMAP#8 )
  (byte[]) plot_xlo#7 ← phi( main::@3/(byte[]) plot_xlo#17 )
  (byte) init_plot_tables::bits#0 ← (byte/word/signed word) 128
  (byte) init_plot_tables::x#0 ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@1
init_plot_tables::@1: scope:[init_plot_tables]  from init_plot_tables init_plot_tables::@2
  (byte[]) plot_yhi#35 ← phi( init_plot_tables/(byte[]) plot_yhi#41 init_plot_tables::@2/(byte[]) plot_yhi#17 )
  (byte[]) plot_ylo#35 ← phi( init_plot_tables/(byte[]) plot_ylo#41 init_plot_tables::@2/(byte[]) plot_ylo#17 )
  (byte[]) plot_bit#2 ← phi( init_plot_tables/(byte[]) plot_bit#7 init_plot_tables::@2/(byte[]) plot_bit#8 )
  (byte) init_plot_tables::bits#3 ← phi( init_plot_tables/(byte) init_plot_tables::bits#0 init_plot_tables::@2/(byte) init_plot_tables::bits#4 )
  (byte[]) plot_xhi#2 ← phi( init_plot_tables/(byte[]) plot_xhi#7 init_plot_tables::@2/(byte[]) plot_xhi#8 )
  (byte*) BITMAP#1 ← phi( init_plot_tables/(byte*) BITMAP#4 init_plot_tables::@2/(byte*) BITMAP#5 )
  (byte[]) plot_xlo#2 ← phi( init_plot_tables/(byte[]) plot_xlo#7 init_plot_tables::@2/(byte[]) plot_xlo#8 )
  (byte) init_plot_tables::x#2 ← phi( init_plot_tables/(byte) init_plot_tables::x#0 init_plot_tables::@2/(byte) init_plot_tables::x#1 )
  (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248
  *((byte[]) plot_xlo#2 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0
  (byte~) init_plot_tables::$1 ← > (byte*) BITMAP#1
  *((byte[]) plot_xhi#2 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$1
  *((byte[]) plot_bit#2 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3
  (byte~) init_plot_tables::$2 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1
  (byte) init_plot_tables::bits#1 ← (byte~) init_plot_tables::$2
  (boolean~) init_plot_tables::$3 ← (byte) init_plot_tables::bits#1 == (byte/signed byte/word/signed word) 0
  (boolean~) init_plot_tables::$4 ← ! (boolean~) init_plot_tables::$3
  if((boolean~) init_plot_tables::$4) goto init_plot_tables::@2
  to:init_plot_tables::@5
init_plot_tables::@2: scope:[init_plot_tables]  from init_plot_tables::@1 init_plot_tables::@5
  (byte[]) plot_yhi#17 ← phi( init_plot_tables::@1/(byte[]) plot_yhi#35 init_plot_tables::@5/(byte[]) plot_yhi#36 )
  (byte[]) plot_ylo#17 ← phi( init_plot_tables::@1/(byte[]) plot_ylo#35 init_plot_tables::@5/(byte[]) plot_ylo#36 )
  (byte[]) plot_bit#8 ← phi( init_plot_tables::@1/(byte[]) plot_bit#2 init_plot_tables::@5/(byte[]) plot_bit#18 )
  (byte) init_plot_tables::bits#4 ← phi( init_plot_tables::@1/(byte) init_plot_tables::bits#1 init_plot_tables::@5/(byte) init_plot_tables::bits#2 )
  (byte[]) plot_xhi#8 ← phi( init_plot_tables::@1/(byte[]) plot_xhi#2 init_plot_tables::@5/(byte[]) plot_xhi#18 )
  (byte*) BITMAP#5 ← phi( init_plot_tables::@1/(byte*) BITMAP#1 init_plot_tables::@5/(byte*) BITMAP#9 )
  (byte[]) plot_xlo#8 ← phi( init_plot_tables::@1/(byte[]) plot_xlo#2 init_plot_tables::@5/(byte[]) plot_xlo#18 )
  (byte) init_plot_tables::x#3 ← phi( init_plot_tables::@1/(byte) init_plot_tables::x#2 init_plot_tables::@5/(byte) init_plot_tables::x#4 )
  (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#3
  (boolean~) init_plot_tables::$5 ← (byte) init_plot_tables::x#1 != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$5) goto init_plot_tables::@1
  to:init_plot_tables::@6
init_plot_tables::@5: scope:[init_plot_tables]  from init_plot_tables::@1
  (byte[]) plot_yhi#36 ← phi( init_plot_tables::@1/(byte[]) plot_yhi#35 )
  (byte[]) plot_ylo#36 ← phi( init_plot_tables::@1/(byte[]) plot_ylo#35 )
  (byte[]) plot_bit#18 ← phi( init_plot_tables::@1/(byte[]) plot_bit#2 )
  (byte[]) plot_xhi#18 ← phi( init_plot_tables::@1/(byte[]) plot_xhi#2 )
  (byte*) BITMAP#9 ← phi( init_plot_tables::@1/(byte*) BITMAP#1 )
  (byte[]) plot_xlo#18 ← phi( init_plot_tables::@1/(byte[]) plot_xlo#2 )
  (byte) init_plot_tables::x#4 ← phi( init_plot_tables::@1/(byte) init_plot_tables::x#2 )
  (byte) init_plot_tables::bits#2 ← (byte/word/signed word) 128
  to:init_plot_tables::@2
init_plot_tables::@6: scope:[init_plot_tables]  from init_plot_tables::@2
  (byte[]) plot_yhi#8 ← phi( init_plot_tables::@2/(byte[]) plot_yhi#17 )
  (byte[]) plot_ylo#8 ← phi( init_plot_tables::@2/(byte[]) plot_ylo#17 )
  (byte*) init_plot_tables::yoffs#0 ← ((byte*)) (byte/signed byte/word/signed word) 0
  (byte) init_plot_tables::y#0 ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@3
init_plot_tables::@3: scope:[init_plot_tables]  from init_plot_tables::@4 init_plot_tables::@6
  (byte[]) plot_yhi#2 ← phi( init_plot_tables::@4/(byte[]) plot_yhi#7 init_plot_tables::@6/(byte[]) plot_yhi#8 )
  (byte[]) plot_ylo#2 ← phi( init_plot_tables::@4/(byte[]) plot_ylo#7 init_plot_tables::@6/(byte[]) plot_ylo#8 )
  (byte*) init_plot_tables::yoffs#2 ← phi( init_plot_tables::@4/(byte*) init_plot_tables::yoffs#4 init_plot_tables::@6/(byte*) init_plot_tables::yoffs#0 )
  (byte) init_plot_tables::y#2 ← phi( init_plot_tables::@4/(byte) init_plot_tables::y#1 init_plot_tables::@6/(byte) init_plot_tables::y#0 )
  (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2
  (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7
  *((byte[]) plot_ylo#2 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8
  (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2
  *((byte[]) plot_yhi#2 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9
  (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (boolean~) init_plot_tables::$11 ← (byte~) init_plot_tables::$10 == (byte/signed byte/word/signed word) 7
  (boolean~) init_plot_tables::$12 ← ! (boolean~) init_plot_tables::$11
  if((boolean~) init_plot_tables::$12) goto init_plot_tables::@4
  to:init_plot_tables::@7
init_plot_tables::@4: scope:[init_plot_tables]  from init_plot_tables::@3 init_plot_tables::@7
  (byte[]) plot_yhi#7 ← phi( init_plot_tables::@3/(byte[]) plot_yhi#2 init_plot_tables::@7/(byte[]) plot_yhi#18 )
  (byte[]) plot_ylo#7 ← phi( init_plot_tables::@3/(byte[]) plot_ylo#2 init_plot_tables::@7/(byte[]) plot_ylo#18 )
  (byte*) init_plot_tables::yoffs#4 ← phi( init_plot_tables::@3/(byte*) init_plot_tables::yoffs#2 init_plot_tables::@7/(byte*) init_plot_tables::yoffs#1 )
  (byte) init_plot_tables::y#3 ← phi( init_plot_tables::@3/(byte) init_plot_tables::y#2 init_plot_tables::@7/(byte) init_plot_tables::y#4 )
  (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#3
  (boolean~) init_plot_tables::$14 ← (byte) init_plot_tables::y#1 != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$14) goto init_plot_tables::@3
  to:init_plot_tables::@return
init_plot_tables::@7: scope:[init_plot_tables]  from init_plot_tables::@3
  (byte[]) plot_yhi#18 ← phi( init_plot_tables::@3/(byte[]) plot_yhi#2 )
  (byte[]) plot_ylo#18 ← phi( init_plot_tables::@3/(byte[]) plot_ylo#2 )
  (byte) init_plot_tables::y#4 ← phi( init_plot_tables::@3/(byte) init_plot_tables::y#2 )
  (byte*) init_plot_tables::yoffs#3 ← phi( init_plot_tables::@3/(byte*) init_plot_tables::yoffs#2 )
  (byte*~) init_plot_tables::$13 ← (byte*) init_plot_tables::yoffs#3 + (word/signed word) 320
  (byte*) init_plot_tables::yoffs#1 ← (byte*~) init_plot_tables::$13
  to:init_plot_tables::@4
init_plot_tables::@return: scope:[init_plot_tables]  from init_plot_tables::@4
  return 
  to:@return
init_screen: scope:[init_screen]  from main
  (byte*) SCREEN#4 ← phi( main/(byte*) SCREEN#5 )
  (byte*) BITMAP#2 ← phi( main/(byte*) BITMAP#6 )
  (byte*) init_screen::b#0 ← (byte*) BITMAP#2
  to:init_screen::@1
init_screen::@1: scope:[init_screen]  from init_screen init_screen::@1
  (byte*) SCREEN#3 ← phi( init_screen/(byte*) SCREEN#4 init_screen::@1/(byte*) SCREEN#3 )
  (byte*) BITMAP#3 ← phi( init_screen/(byte*) BITMAP#2 init_screen::@1/(byte*) BITMAP#3 )
  (byte*) init_screen::b#2 ← phi( init_screen/(byte*) init_screen::b#0 init_screen::@1/(byte*) init_screen::b#1 )
  *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0
  (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2
  (byte*~) init_screen::$0 ← (byte*) BITMAP#3 + (word/signed word) 8192
  (boolean~) init_screen::$1 ← (byte*) init_screen::b#1 != (byte*~) init_screen::$0
  if((boolean~) init_screen::$1) goto init_screen::@1
  to:init_screen::@3
init_screen::@3: scope:[init_screen]  from init_screen::@1
  (byte*) SCREEN#1 ← phi( init_screen::@1/(byte*) SCREEN#3 )
  (byte*) init_screen::c#0 ← (byte*) SCREEN#1
  to:init_screen::@2
init_screen::@2: scope:[init_screen]  from init_screen::@2 init_screen::@3
  (byte*) SCREEN#2 ← phi( init_screen::@2/(byte*) SCREEN#2 init_screen::@3/(byte*) SCREEN#1 )
  (byte*) init_screen::c#2 ← phi( init_screen::@2/(byte*) init_screen::c#1 init_screen::@3/(byte*) init_screen::c#0 )
  *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20
  (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2
  (byte*~) init_screen::$2 ← (byte*) SCREEN#2 + (word/signed word) 1024
  (boolean~) init_screen::$3 ← (byte*) init_screen::c#1 != (byte*~) init_screen::$2
  if((boolean~) init_screen::$3) goto init_screen::@2
  to:init_screen::@return
init_screen::@return: scope:[init_screen]  from init_screen::@2
  return 
  to:@return
@10: scope:[]  from @begin
  (byte[]) plot_yhi#47 ← phi( @begin/(byte[]) plot_yhi#0 )
  (byte[]) plot_ylo#47 ← phi( @begin/(byte[]) plot_ylo#0 )
  (byte) lines_cnt#9 ← phi( @begin/(byte) lines_cnt#0 )
  (byte[]) lines_y#9 ← phi( @begin/(byte[]) lines_y#0 )
  (byte[]) lines_x#9 ← phi( @begin/(byte[]) lines_x#0 )
  (byte*) SCREEN#6 ← phi( @begin/(byte*) SCREEN#0 )
  (byte[]) plot_bit#36 ← phi( @begin/(byte[]) plot_bit#0 )
  (byte[]) plot_xhi#36 ← phi( @begin/(byte[]) plot_xhi#0 )
  (byte[]) plot_xlo#36 ← phi( @begin/(byte[]) plot_xlo#0 )
  (byte*) BITMAP#7 ← phi( @begin/(byte*) BITMAP#0 )
  (byte*) D018#2 ← phi( @begin/(byte*) D018#0 )
  (byte*) D011#2 ← phi( @begin/(byte*) D011#0 )
  (byte) RSEL#2 ← phi( @begin/(byte) RSEL#0 )
  (byte) DEN#2 ← phi( @begin/(byte) DEN#0 )
  (byte) BMM#2 ← phi( @begin/(byte) BMM#0 )
  (byte*) FGCOL#2 ← phi( @begin/(byte*) FGCOL#0 )
  (byte*) BGCOL#2 ← phi( @begin/(byte*) BGCOL#0 )
  call main param-assignment
  to:@11
@11: scope:[]  from @10
  to:@end
@end: scope:[]  from @11

CONTROL FLOW GRAPH WITH ASSIGNMENT CALL & RETURN
@begin: scope:[]  from
  (byte*) BGCOL#0 ← ((byte*)) (word) 53280
  (byte*) FGCOL#0 ← ((byte*)) (word) 53281
  (byte*) D018#0 ← ((byte*)) (word) 53272
  (byte*) D011#0 ← ((byte*)) (word) 53265
  (byte) BMM#0 ← (byte/signed byte/word/signed word) 32
  (byte) DEN#0 ← (byte/signed byte/word/signed word) 16
  (byte) RSEL#0 ← (byte/signed byte/word/signed word) 8
  (byte*) SCREEN#0 ← ((byte*)) (word/signed word) 1024
  (byte*) BITMAP#0 ← ((byte*)) (word/signed word) 8192
  (byte[]) plot_xlo#0 ← ((byte*)) (word/signed word) 4096
  (byte[]) plot_xhi#0 ← ((byte*)) (word/signed word) 4352
  (byte[]) plot_ylo#0 ← ((byte*)) (word/signed word) 4608
  (byte[]) plot_yhi#0 ← ((byte*)) (word/signed word) 4864
  (byte[]) plot_bit#0 ← ((byte*)) (word/signed word) 5120
  (byte[]) lines_x#0 ← { (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60 }
  (byte[]) lines_y#0 ← { (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10 }
  (byte) lines_cnt#0 ← (byte/signed byte/word/signed word) 8
  to:@10
main: scope:[main]  from @10
  (byte[]) plot_yhi#45 ← phi( @10/(byte[]) plot_yhi#47 )
  (byte[]) plot_ylo#45 ← phi( @10/(byte[]) plot_ylo#47 )
  (byte) lines_cnt#8 ← phi( @10/(byte) lines_cnt#9 )
  (byte[]) lines_y#8 ← phi( @10/(byte[]) lines_y#9 )
  (byte[]) lines_x#8 ← phi( @10/(byte[]) lines_x#9 )
  (byte*) SCREEN#5 ← phi( @10/(byte*) SCREEN#6 )
  (byte[]) plot_bit#19 ← phi( @10/(byte[]) plot_bit#36 )
  (byte[]) plot_xhi#19 ← phi( @10/(byte[]) plot_xhi#36 )
  (byte[]) plot_xlo#19 ← phi( @10/(byte[]) plot_xlo#36 )
  (byte*) BITMAP#6 ← phi( @10/(byte*) BITMAP#7 )
  (byte*) D018#1 ← phi( @10/(byte*) D018#2 )
  (byte*) D011#1 ← phi( @10/(byte*) D011#2 )
  (byte) RSEL#1 ← phi( @10/(byte) RSEL#2 )
  (byte) DEN#1 ← phi( @10/(byte) DEN#2 )
  (byte) BMM#1 ← phi( @10/(byte) BMM#2 )
  (byte*) FGCOL#1 ← phi( @10/(byte*) FGCOL#2 )
  (byte*) BGCOL#1 ← phi( @10/(byte*) BGCOL#2 )
  *((byte*) BGCOL#1) ← (byte/signed byte/word/signed word) 0
  *((byte*) FGCOL#1) ← (byte/signed byte/word/signed word) 0
  (byte~) main::$0 ← (byte) BMM#1 | (byte) DEN#1
  (byte~) main::$1 ← (byte~) main::$0 | (byte) RSEL#1
  (byte~) main::$2 ← (byte~) main::$1 | (byte/signed byte/word/signed word) 3
  *((byte*) D011#1) ← (byte~) main::$2
  *((byte*) D018#1) ← (byte/signed byte/word/signed word) 24
  call init_screen param-assignment
  to:main::@3
main::@3: scope:[main]  from main
  (byte[]) plot_yhi#44 ← phi( main/(byte[]) plot_yhi#45 )
  (byte[]) plot_ylo#44 ← phi( main/(byte[]) plot_ylo#45 )
  (byte) lines_cnt#7 ← phi( main/(byte) lines_cnt#8 )
  (byte[]) lines_y#7 ← phi( main/(byte[]) lines_y#8 )
  (byte[]) lines_x#7 ← phi( main/(byte[]) lines_x#8 )
  (byte[]) plot_bit#17 ← phi( main/(byte[]) plot_bit#19 )
  (byte[]) plot_xhi#17 ← phi( main/(byte[]) plot_xhi#19 )
  (byte*) BITMAP#8 ← phi( main/(byte*) BITMAP#6 )
  (byte[]) plot_xlo#17 ← phi( main/(byte[]) plot_xlo#19 )
  call init_plot_tables param-assignment
  to:main::@4
main::@4: scope:[main]  from main::@3
  (byte[]) plot_bit#48 ← phi( main::@3/(byte[]) plot_bit#17 )
  (byte[]) plot_ylo#52 ← phi( main::@3/(byte[]) plot_ylo#44 )
  (byte[]) plot_yhi#52 ← phi( main::@3/(byte[]) plot_yhi#44 )
  (byte[]) plot_xlo#48 ← phi( main::@3/(byte[]) plot_xlo#17 )
  (byte[]) plot_xhi#48 ← phi( main::@3/(byte[]) plot_xhi#17 )
  (byte) lines_cnt#5 ← phi( main::@3/(byte) lines_cnt#7 )
  (byte[]) lines_y#5 ← phi( main::@3/(byte[]) lines_y#7 )
  (byte[]) lines_x#5 ← phi( main::@3/(byte[]) lines_x#7 )
  to:main::@1
main::@1: scope:[main]  from main::@4 main::@5
  (byte[]) plot_bit#47 ← phi( main::@4/(byte[]) plot_bit#48 main::@5/(byte[]) plot_bit#49 )
  (byte[]) plot_ylo#51 ← phi( main::@4/(byte[]) plot_ylo#52 main::@5/(byte[]) plot_ylo#53 )
  (byte[]) plot_yhi#51 ← phi( main::@4/(byte[]) plot_yhi#52 main::@5/(byte[]) plot_yhi#53 )
  (byte[]) plot_xlo#47 ← phi( main::@4/(byte[]) plot_xlo#48 main::@5/(byte[]) plot_xlo#49 )
  (byte[]) plot_xhi#47 ← phi( main::@4/(byte[]) plot_xhi#48 main::@5/(byte[]) plot_xhi#49 )
  (byte) lines_cnt#4 ← phi( main::@4/(byte) lines_cnt#5 main::@5/(byte) lines_cnt#6 )
  (byte[]) lines_y#4 ← phi( main::@4/(byte[]) lines_y#5 main::@5/(byte[]) lines_y#6 )
  (byte[]) lines_x#4 ← phi( main::@4/(byte[]) lines_x#5 main::@5/(byte[]) lines_x#6 )
  call lines param-assignment
  to:main::@5
main::@5: scope:[main]  from main::@1
  (byte[]) plot_bit#49 ← phi( main::@1/(byte[]) plot_bit#47 )
  (byte[]) plot_ylo#53 ← phi( main::@1/(byte[]) plot_ylo#51 )
  (byte[]) plot_yhi#53 ← phi( main::@1/(byte[]) plot_yhi#51 )
  (byte[]) plot_xlo#49 ← phi( main::@1/(byte[]) plot_xlo#47 )
  (byte[]) plot_xhi#49 ← phi( main::@1/(byte[]) plot_xhi#47 )
  (byte) lines_cnt#6 ← phi( main::@1/(byte) lines_cnt#4 )
  (byte[]) lines_y#6 ← phi( main::@1/(byte[]) lines_y#4 )
  (byte[]) lines_x#6 ← phi( main::@1/(byte[]) lines_x#4 )
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@5
  return 
  to:@return
lines: scope:[lines]  from main::@1
  (byte[]) plot_bit#45 ← phi( main::@1/(byte[]) plot_bit#47 )
  (byte[]) plot_ylo#49 ← phi( main::@1/(byte[]) plot_ylo#51 )
  (byte[]) plot_yhi#49 ← phi( main::@1/(byte[]) plot_yhi#51 )
  (byte[]) plot_xlo#45 ← phi( main::@1/(byte[]) plot_xlo#47 )
  (byte[]) plot_xhi#45 ← phi( main::@1/(byte[]) plot_xhi#47 )
  (byte) lines_cnt#3 ← phi( main::@1/(byte) lines_cnt#4 )
  (byte[]) lines_y#2 ← phi( main::@1/(byte[]) lines_y#4 )
  (byte[]) lines_x#2 ← phi( main::@1/(byte[]) lines_x#4 )
  (byte) lines::l#0 ← (byte/signed byte/word/signed word) 0
  to:lines::@1
lines::@1: scope:[lines]  from lines lines::@3
  (byte[]) plot_bit#44 ← phi( lines/(byte[]) plot_bit#45 lines::@3/(byte[]) plot_bit#46 )
  (byte[]) plot_ylo#48 ← phi( lines/(byte[]) plot_ylo#49 lines::@3/(byte[]) plot_ylo#50 )
  (byte[]) plot_yhi#48 ← phi( lines/(byte[]) plot_yhi#49 lines::@3/(byte[]) plot_yhi#50 )
  (byte[]) plot_xlo#44 ← phi( lines/(byte[]) plot_xlo#45 lines::@3/(byte[]) plot_xlo#46 )
  (byte[]) plot_xhi#44 ← phi( lines/(byte[]) plot_xhi#45 lines::@3/(byte[]) plot_xhi#46 )
  (byte) lines_cnt#2 ← phi( lines/(byte) lines_cnt#3 lines::@3/(byte) lines_cnt#1 )
  (byte[]) lines_y#1 ← phi( lines/(byte[]) lines_y#2 lines::@3/(byte[]) lines_y#3 )
  (byte) lines::l#2 ← phi( lines/(byte) lines::l#0 lines::@3/(byte) lines::l#1 )
  (byte[]) lines_x#1 ← phi( lines/(byte[]) lines_x#2 lines::@3/(byte[]) lines_x#3 )
  (byte~) lines::$0 ← (byte[]) lines_x#1 *idx (byte) lines::l#2
  (byte~) lines::$1 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$2 ← (byte[]) lines_x#1 *idx (byte~) lines::$1
  (byte~) lines::$3 ← (byte[]) lines_y#1 *idx (byte) lines::l#2
  (byte~) lines::$4 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$5 ← (byte[]) lines_y#1 *idx (byte~) lines::$4
  (byte) line::x0#0 ← (byte~) lines::$0
  (byte) line::x1#0 ← (byte~) lines::$2
  (byte) line::y0#0 ← (byte~) lines::$3
  (byte) line::y1#0 ← (byte~) lines::$5
  call line param-assignment
  to:lines::@3
lines::@3: scope:[lines]  from lines::@1
  (byte[]) plot_bit#46 ← phi( lines::@1/(byte[]) plot_bit#44 )
  (byte[]) plot_ylo#50 ← phi( lines::@1/(byte[]) plot_ylo#48 )
  (byte[]) plot_yhi#50 ← phi( lines::@1/(byte[]) plot_yhi#48 )
  (byte[]) plot_xlo#46 ← phi( lines::@1/(byte[]) plot_xlo#44 )
  (byte[]) plot_xhi#46 ← phi( lines::@1/(byte[]) plot_xhi#44 )
  (byte[]) lines_y#3 ← phi( lines::@1/(byte[]) lines_y#1 )
  (byte[]) lines_x#3 ← phi( lines::@1/(byte[]) lines_x#1 )
  (byte) lines_cnt#1 ← phi( lines::@1/(byte) lines_cnt#2 )
  (byte) lines::l#3 ← phi( lines::@1/(byte) lines::l#2 )
  (byte) lines::l#1 ← ++ (byte) lines::l#3
  (boolean~) lines::$7 ← (byte) lines::l#1 < (byte) lines_cnt#1
  if((boolean~) lines::$7) goto lines::@1
  to:lines::@return
lines::@return: scope:[lines]  from lines::@3
  return 
  to:@return
line: scope:[line]  from lines::@1
  (byte[]) plot_bit#43 ← phi( lines::@1/(byte[]) plot_bit#44 )
  (byte[]) plot_ylo#46 ← phi( lines::@1/(byte[]) plot_ylo#48 )
  (byte[]) plot_yhi#46 ← phi( lines::@1/(byte[]) plot_yhi#48 )
  (byte[]) plot_xlo#43 ← phi( lines::@1/(byte[]) plot_xlo#44 )
  (byte[]) plot_xhi#43 ← phi( lines::@1/(byte[]) plot_xhi#44 )
  (byte) line::y1#13 ← phi( lines::@1/(byte) line::y1#0 )
  (byte) line::y0#13 ← phi( lines::@1/(byte) line::y0#0 )
  (byte) line::x1#1 ← phi( lines::@1/(byte) line::x1#0 )
  (byte) line::x0#1 ← phi( lines::@1/(byte) line::x0#0 )
  (boolean~) line::$0 ← (byte) line::x0#1 < (byte) line::x1#1
  (boolean~) line::$1 ← ! (boolean~) line::$0
  if((boolean~) line::$1) goto line::@1
  to:line::@15
line::@1: scope:[line]  from line
  (byte[]) plot_bit#42 ← phi( line/(byte[]) plot_bit#43 )
  (byte[]) plot_ylo#43 ← phi( line/(byte[]) plot_ylo#46 )
  (byte[]) plot_yhi#43 ← phi( line/(byte[]) plot_yhi#46 )
  (byte[]) plot_xlo#42 ← phi( line/(byte[]) plot_xlo#43 )
  (byte[]) plot_xhi#42 ← phi( line/(byte[]) plot_xhi#43 )
  (byte) line::y1#1 ← phi( line/(byte) line::y1#13 )
  (byte) line::y0#1 ← phi( line/(byte) line::y0#13 )
  (byte) line::x1#2 ← phi( line/(byte) line::x1#1 )
  (byte) line::x0#2 ← phi( line/(byte) line::x0#1 )
  (byte~) line::$15 ← (byte) line::x0#2 - (byte) line::x1#2
  (byte) line::xd#0 ← (byte~) line::$15
  (boolean~) line::$16 ← (byte) line::y0#1 < (byte) line::y1#1
  (boolean~) line::$17 ← ! (boolean~) line::$16
  if((boolean~) line::$17) goto line::@9
  to:line::@23
line::@15: scope:[line]  from line
  (byte[]) plot_bit#41 ← phi( line/(byte[]) plot_bit#43 )
  (byte[]) plot_ylo#42 ← phi( line/(byte[]) plot_ylo#46 )
  (byte[]) plot_yhi#42 ← phi( line/(byte[]) plot_yhi#46 )
  (byte[]) plot_xlo#41 ← phi( line/(byte[]) plot_xlo#43 )
  (byte[]) plot_xhi#41 ← phi( line/(byte[]) plot_xhi#43 )
  (byte) line::y1#2 ← phi( line/(byte) line::y1#13 )
  (byte) line::y0#2 ← phi( line/(byte) line::y0#13 )
  (byte) line::x0#3 ← phi( line/(byte) line::x0#1 )
  (byte) line::x1#3 ← phi( line/(byte) line::x1#1 )
  (byte~) line::$2 ← (byte) line::x1#3 - (byte) line::x0#3
  (byte) line::xd#1 ← (byte~) line::$2
  (boolean~) line::$3 ← (byte) line::y0#2 < (byte) line::y1#2
  (boolean~) line::$4 ← ! (boolean~) line::$3
  if((boolean~) line::$4) goto line::@2
  to:line::@16
line::@2: scope:[line]  from line::@15
  (byte[]) plot_bit#38 ← phi( line::@15/(byte[]) plot_bit#41 )
  (byte[]) plot_ylo#38 ← phi( line::@15/(byte[]) plot_ylo#42 )
  (byte[]) plot_yhi#38 ← phi( line::@15/(byte[]) plot_yhi#42 )
  (byte[]) plot_xlo#38 ← phi( line::@15/(byte[]) plot_xlo#41 )
  (byte[]) plot_xhi#38 ← phi( line::@15/(byte[]) plot_xhi#41 )
  (byte) line::x0#11 ← phi( line::@15/(byte) line::x0#3 )
  (byte) line::x1#11 ← phi( line::@15/(byte) line::x1#3 )
  (byte) line::xd#2 ← phi( line::@15/(byte) line::xd#1 )
  (byte) line::y1#3 ← phi( line::@15/(byte) line::y1#2 )
  (byte) line::y0#3 ← phi( line::@15/(byte) line::y0#2 )
  (byte~) line::$10 ← (byte) line::y0#3 - (byte) line::y1#3
  (byte) line::yd#0 ← (byte~) line::$10
  (boolean~) line::$11 ← (byte) line::yd#0 < (byte) line::xd#2
  (boolean~) line::$12 ← ! (boolean~) line::$11
  if((boolean~) line::$12) goto line::@6
  to:line::@20
line::@16: scope:[line]  from line::@15
  (byte[]) plot_bit#37 ← phi( line::@15/(byte[]) plot_bit#41 )
  (byte[]) plot_ylo#37 ← phi( line::@15/(byte[]) plot_ylo#42 )
  (byte[]) plot_yhi#37 ← phi( line::@15/(byte[]) plot_yhi#42 )
  (byte[]) plot_xlo#37 ← phi( line::@15/(byte[]) plot_xlo#41 )
  (byte[]) plot_xhi#37 ← phi( line::@15/(byte[]) plot_xhi#41 )
  (byte) line::x1#10 ← phi( line::@15/(byte) line::x1#3 )
  (byte) line::x0#10 ← phi( line::@15/(byte) line::x0#3 )
  (byte) line::xd#3 ← phi( line::@15/(byte) line::xd#1 )
  (byte) line::y0#4 ← phi( line::@15/(byte) line::y0#2 )
  (byte) line::y1#4 ← phi( line::@15/(byte) line::y1#2 )
  (byte~) line::$5 ← (byte) line::y1#4 - (byte) line::y0#4
  (byte) line::yd#1 ← (byte~) line::$5
  (boolean~) line::$6 ← (byte) line::yd#1 < (byte) line::xd#3
  (boolean~) line::$7 ← ! (boolean~) line::$6
  if((boolean~) line::$7) goto line::@3
  to:line::@17
line::@3: scope:[line]  from line::@16
  (byte[]) plot_bit#29 ← phi( line::@16/(byte[]) plot_bit#37 )
  (byte[]) plot_ylo#28 ← phi( line::@16/(byte[]) plot_ylo#37 )
  (byte[]) plot_yhi#28 ← phi( line::@16/(byte[]) plot_yhi#37 )
  (byte[]) plot_xlo#29 ← phi( line::@16/(byte[]) plot_xlo#37 )
  (byte[]) plot_xhi#29 ← phi( line::@16/(byte[]) plot_xhi#37 )
  (byte) line::xd#4 ← phi( line::@16/(byte) line::xd#3 )
  (byte) line::yd#4 ← phi( line::@16/(byte) line::yd#1 )
  (byte) line::y1#5 ← phi( line::@16/(byte) line::y1#4 )
  (byte) line::x0#4 ← phi( line::@16/(byte) line::x0#10 )
  (byte) line::y0#5 ← phi( line::@16/(byte) line::y0#4 )
  (byte) line_ydxi::y#0 ← (byte) line::y0#5
  (byte) line_ydxi::x#0 ← (byte) line::x0#4
  (byte) line_ydxi::y1#0 ← (byte) line::y1#5
  (byte) line_ydxi::yd#0 ← (byte) line::yd#4
  (byte) line_ydxi::xd#0 ← (byte) line::xd#4
  call line_ydxi param-assignment
  to:line::@29
line::@29: scope:[line]  from line::@3
  to:line::@return
line::@17: scope:[line]  from line::@16
  (byte[]) plot_bit#20 ← phi( line::@16/(byte[]) plot_bit#37 )
  (byte[]) plot_ylo#19 ← phi( line::@16/(byte[]) plot_ylo#37 )
  (byte[]) plot_yhi#19 ← phi( line::@16/(byte[]) plot_yhi#37 )
  (byte[]) plot_xlo#20 ← phi( line::@16/(byte[]) plot_xlo#37 )
  (byte[]) plot_xhi#20 ← phi( line::@16/(byte[]) plot_xhi#37 )
  (byte) line::yd#5 ← phi( line::@16/(byte) line::yd#1 )
  (byte) line::xd#5 ← phi( line::@16/(byte) line::xd#3 )
  (byte) line::x1#4 ← phi( line::@16/(byte) line::x1#10 )
  (byte) line::y0#6 ← phi( line::@16/(byte) line::y0#4 )
  (byte) line::x0#5 ← phi( line::@16/(byte) line::x0#10 )
  (byte) line_xdyi::x#0 ← (byte) line::x0#5
  (byte) line_xdyi::y#0 ← (byte) line::y0#6
  (byte) line_xdyi::x1#0 ← (byte) line::x1#4
  (byte) line_xdyi::xd#0 ← (byte) line::xd#5
  (byte) line_xdyi::yd#0 ← (byte) line::yd#5
  call line_xdyi param-assignment
  to:line::@30
line::@30: scope:[line]  from line::@17
  to:line::@return
line::@6: scope:[line]  from line::@2
  (byte[]) plot_bit#33 ← phi( line::@2/(byte[]) plot_bit#38 )
  (byte[]) plot_ylo#32 ← phi( line::@2/(byte[]) plot_ylo#38 )
  (byte[]) plot_yhi#32 ← phi( line::@2/(byte[]) plot_yhi#38 )
  (byte[]) plot_xlo#33 ← phi( line::@2/(byte[]) plot_xlo#38 )
  (byte[]) plot_xhi#33 ← phi( line::@2/(byte[]) plot_xhi#38 )
  (byte) line::xd#6 ← phi( line::@2/(byte) line::xd#2 )
  (byte) line::yd#6 ← phi( line::@2/(byte) line::yd#0 )
  (byte) line::y0#7 ← phi( line::@2/(byte) line::y0#3 )
  (byte) line::x1#5 ← phi( line::@2/(byte) line::x1#11 )
  (byte) line::y1#6 ← phi( line::@2/(byte) line::y1#3 )
  (byte) line_ydxd::y#0 ← (byte) line::y1#6
  (byte) line_ydxd::x#0 ← (byte) line::x1#5
  (byte) line_ydxd::y1#0 ← (byte) line::y0#7
  (byte) line_ydxd::yd#0 ← (byte) line::yd#6
  (byte) line_ydxd::xd#0 ← (byte) line::xd#6
  call line_ydxd param-assignment
  to:line::@31
line::@31: scope:[line]  from line::@6
  to:line::@return
line::@20: scope:[line]  from line::@2
  (byte[]) plot_bit#24 ← phi( line::@2/(byte[]) plot_bit#38 )
  (byte[]) plot_ylo#23 ← phi( line::@2/(byte[]) plot_ylo#38 )
  (byte[]) plot_yhi#23 ← phi( line::@2/(byte[]) plot_yhi#38 )
  (byte[]) plot_xlo#24 ← phi( line::@2/(byte[]) plot_xlo#38 )
  (byte[]) plot_xhi#24 ← phi( line::@2/(byte[]) plot_xhi#38 )
  (byte) line::yd#7 ← phi( line::@2/(byte) line::yd#0 )
  (byte) line::xd#7 ← phi( line::@2/(byte) line::xd#2 )
  (byte) line::x1#6 ← phi( line::@2/(byte) line::x1#11 )
  (byte) line::y0#8 ← phi( line::@2/(byte) line::y0#3 )
  (byte) line::x0#6 ← phi( line::@2/(byte) line::x0#11 )
  (byte) line_xdyd::x#0 ← (byte) line::x0#6
  (byte) line_xdyd::y#0 ← (byte) line::y0#8
  (byte) line_xdyd::x1#0 ← (byte) line::x1#6
  (byte) line_xdyd::xd#0 ← (byte) line::xd#7
  (byte) line_xdyd::yd#0 ← (byte) line::yd#7
  call line_xdyd param-assignment
  to:line::@32
line::@32: scope:[line]  from line::@20
  to:line::@return
line::@9: scope:[line]  from line::@1
  (byte[]) plot_bit#40 ← phi( line::@1/(byte[]) plot_bit#42 )
  (byte[]) plot_ylo#40 ← phi( line::@1/(byte[]) plot_ylo#43 )
  (byte[]) plot_yhi#40 ← phi( line::@1/(byte[]) plot_yhi#43 )
  (byte[]) plot_xlo#40 ← phi( line::@1/(byte[]) plot_xlo#42 )
  (byte[]) plot_xhi#40 ← phi( line::@1/(byte[]) plot_xhi#42 )
  (byte) line::x0#13 ← phi( line::@1/(byte) line::x0#2 )
  (byte) line::x1#13 ← phi( line::@1/(byte) line::x1#2 )
  (byte) line::xd#8 ← phi( line::@1/(byte) line::xd#0 )
  (byte) line::y1#7 ← phi( line::@1/(byte) line::y1#1 )
  (byte) line::y0#9 ← phi( line::@1/(byte) line::y0#1 )
  (byte~) line::$23 ← (byte) line::y0#9 - (byte) line::y1#7
  (byte) line::yd#2 ← (byte~) line::$23
  (boolean~) line::$24 ← (byte) line::yd#2 < (byte) line::xd#8
  (boolean~) line::$25 ← ! (boolean~) line::$24
  if((boolean~) line::$25) goto line::@13
  to:line::@27
line::@23: scope:[line]  from line::@1
  (byte[]) plot_bit#39 ← phi( line::@1/(byte[]) plot_bit#42 )
  (byte[]) plot_ylo#39 ← phi( line::@1/(byte[]) plot_ylo#43 )
  (byte[]) plot_yhi#39 ← phi( line::@1/(byte[]) plot_yhi#43 )
  (byte[]) plot_xlo#39 ← phi( line::@1/(byte[]) plot_xlo#42 )
  (byte[]) plot_xhi#39 ← phi( line::@1/(byte[]) plot_xhi#42 )
  (byte) line::x1#12 ← phi( line::@1/(byte) line::x1#2 )
  (byte) line::x0#12 ← phi( line::@1/(byte) line::x0#2 )
  (byte) line::xd#9 ← phi( line::@1/(byte) line::xd#0 )
  (byte) line::y0#10 ← phi( line::@1/(byte) line::y0#1 )
  (byte) line::y1#8 ← phi( line::@1/(byte) line::y1#1 )
  (byte~) line::$18 ← (byte) line::y1#8 - (byte) line::y0#10
  (byte) line::yd#3 ← (byte~) line::$18
  (boolean~) line::$19 ← (byte) line::yd#3 < (byte) line::xd#9
  (boolean~) line::$20 ← ! (boolean~) line::$19
  if((boolean~) line::$20) goto line::@10
  to:line::@24
line::@10: scope:[line]  from line::@23
  (byte[]) plot_bit#32 ← phi( line::@23/(byte[]) plot_bit#39 )
  (byte[]) plot_ylo#31 ← phi( line::@23/(byte[]) plot_ylo#39 )
  (byte[]) plot_yhi#31 ← phi( line::@23/(byte[]) plot_yhi#39 )
  (byte[]) plot_xlo#32 ← phi( line::@23/(byte[]) plot_xlo#39 )
  (byte[]) plot_xhi#32 ← phi( line::@23/(byte[]) plot_xhi#39 )
  (byte) line::xd#10 ← phi( line::@23/(byte) line::xd#9 )
  (byte) line::yd#8 ← phi( line::@23/(byte) line::yd#3 )
  (byte) line::y1#9 ← phi( line::@23/(byte) line::y1#8 )
  (byte) line::x0#7 ← phi( line::@23/(byte) line::x0#12 )
  (byte) line::y0#11 ← phi( line::@23/(byte) line::y0#10 )
  (byte) line_ydxd::y#1 ← (byte) line::y0#11
  (byte) line_ydxd::x#1 ← (byte) line::x0#7
  (byte) line_ydxd::y1#1 ← (byte) line::y1#9
  (byte) line_ydxd::yd#1 ← (byte) line::yd#8
  (byte) line_ydxd::xd#1 ← (byte) line::xd#10
  call line_ydxd param-assignment
  to:line::@33
line::@33: scope:[line]  from line::@10
  to:line::@return
line::@24: scope:[line]  from line::@23
  (byte[]) plot_bit#25 ← phi( line::@23/(byte[]) plot_bit#39 )
  (byte[]) plot_ylo#24 ← phi( line::@23/(byte[]) plot_ylo#39 )
  (byte[]) plot_yhi#24 ← phi( line::@23/(byte[]) plot_yhi#39 )
  (byte[]) plot_xlo#25 ← phi( line::@23/(byte[]) plot_xlo#39 )
  (byte[]) plot_xhi#25 ← phi( line::@23/(byte[]) plot_xhi#39 )
  (byte) line::yd#9 ← phi( line::@23/(byte) line::yd#3 )
  (byte) line::xd#11 ← phi( line::@23/(byte) line::xd#9 )
  (byte) line::x0#8 ← phi( line::@23/(byte) line::x0#12 )
  (byte) line::y1#10 ← phi( line::@23/(byte) line::y1#8 )
  (byte) line::x1#7 ← phi( line::@23/(byte) line::x1#12 )
  (byte) line_xdyd::x#1 ← (byte) line::x1#7
  (byte) line_xdyd::y#1 ← (byte) line::y1#10
  (byte) line_xdyd::x1#1 ← (byte) line::x0#8
  (byte) line_xdyd::xd#1 ← (byte) line::xd#11
  (byte) line_xdyd::yd#1 ← (byte) line::yd#9
  call line_xdyd param-assignment
  to:line::@34
line::@34: scope:[line]  from line::@24
  to:line::@return
line::@13: scope:[line]  from line::@9
  (byte[]) plot_bit#28 ← phi( line::@9/(byte[]) plot_bit#40 )
  (byte[]) plot_ylo#27 ← phi( line::@9/(byte[]) plot_ylo#40 )
  (byte[]) plot_yhi#27 ← phi( line::@9/(byte[]) plot_yhi#40 )
  (byte[]) plot_xlo#28 ← phi( line::@9/(byte[]) plot_xlo#40 )
  (byte[]) plot_xhi#28 ← phi( line::@9/(byte[]) plot_xhi#40 )
  (byte) line::xd#12 ← phi( line::@9/(byte) line::xd#8 )
  (byte) line::yd#10 ← phi( line::@9/(byte) line::yd#2 )
  (byte) line::y0#12 ← phi( line::@9/(byte) line::y0#9 )
  (byte) line::x1#8 ← phi( line::@9/(byte) line::x1#13 )
  (byte) line::y1#11 ← phi( line::@9/(byte) line::y1#7 )
  (byte) line_ydxi::y#1 ← (byte) line::y1#11
  (byte) line_ydxi::x#1 ← (byte) line::x1#8
  (byte) line_ydxi::y1#1 ← (byte) line::y0#12
  (byte) line_ydxi::yd#1 ← (byte) line::yd#10
  (byte) line_ydxi::xd#1 ← (byte) line::xd#12
  call line_ydxi param-assignment
  to:line::@35
line::@35: scope:[line]  from line::@13
  to:line::@return
line::@27: scope:[line]  from line::@9
  (byte[]) plot_bit#21 ← phi( line::@9/(byte[]) plot_bit#40 )
  (byte[]) plot_ylo#20 ← phi( line::@9/(byte[]) plot_ylo#40 )
  (byte[]) plot_yhi#20 ← phi( line::@9/(byte[]) plot_yhi#40 )
  (byte[]) plot_xlo#21 ← phi( line::@9/(byte[]) plot_xlo#40 )
  (byte[]) plot_xhi#21 ← phi( line::@9/(byte[]) plot_xhi#40 )
  (byte) line::yd#11 ← phi( line::@9/(byte) line::yd#2 )
  (byte) line::xd#13 ← phi( line::@9/(byte) line::xd#8 )
  (byte) line::x0#9 ← phi( line::@9/(byte) line::x0#13 )
  (byte) line::y1#12 ← phi( line::@9/(byte) line::y1#7 )
  (byte) line::x1#9 ← phi( line::@9/(byte) line::x1#13 )
  (byte) line_xdyi::x#1 ← (byte) line::x1#9
  (byte) line_xdyi::y#1 ← (byte) line::y1#12
  (byte) line_xdyi::x1#1 ← (byte) line::x0#9
  (byte) line_xdyi::xd#1 ← (byte) line::xd#13
  (byte) line_xdyi::yd#1 ← (byte) line::yd#11
  call line_xdyi param-assignment
  to:line::@36
line::@36: scope:[line]  from line::@27
  to:line::@return
line::@return: scope:[line]  from line::@29 line::@30 line::@31 line::@32 line::@33 line::@34 line::@35 line::@36
  return 
  to:@return
line_xdyi: scope:[line_xdyi]  from line::@17 line::@27
  (byte) line_xdyi::x1#6 ← phi( line::@17/(byte) line_xdyi::x1#0 line::@27/(byte) line_xdyi::x1#1 )
  (byte[]) plot_bit#9 ← phi( line::@17/(byte[]) plot_bit#20 line::@27/(byte[]) plot_bit#21 )
  (byte[]) plot_ylo#9 ← phi( line::@17/(byte[]) plot_ylo#19 line::@27/(byte[]) plot_ylo#20 )
  (byte[]) plot_yhi#9 ← phi( line::@17/(byte[]) plot_yhi#19 line::@27/(byte[]) plot_yhi#20 )
  (byte[]) plot_xlo#9 ← phi( line::@17/(byte[]) plot_xlo#20 line::@27/(byte[]) plot_xlo#21 )
  (byte[]) plot_xhi#9 ← phi( line::@17/(byte[]) plot_xhi#20 line::@27/(byte[]) plot_xhi#21 )
  (byte) line_xdyi::xd#5 ← phi( line::@17/(byte) line_xdyi::xd#0 line::@27/(byte) line_xdyi::xd#1 )
  (byte) line_xdyi::y#5 ← phi( line::@17/(byte) line_xdyi::y#0 line::@27/(byte) line_xdyi::y#1 )
  (byte) line_xdyi::x#6 ← phi( line::@17/(byte) line_xdyi::x#0 line::@27/(byte) line_xdyi::x#1 )
  (byte) line_xdyi::yd#2 ← phi( line::@17/(byte) line_xdyi::yd#0 line::@27/(byte) line_xdyi::yd#1 )
  (byte~) line_xdyi::$0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#0 ← (byte~) line_xdyi::$0
  to:line_xdyi::@1
line_xdyi::@1: scope:[line_xdyi]  from line_xdyi line_xdyi::@2
  (byte) line_xdyi::x1#5 ← phi( line_xdyi/(byte) line_xdyi::x1#6 line_xdyi::@2/(byte) line_xdyi::x1#2 )
  (byte[]) plot_bit#4 ← phi( line_xdyi/(byte[]) plot_bit#9 line_xdyi::@2/(byte[]) plot_bit#10 )
  (byte[]) plot_ylo#4 ← phi( line_xdyi/(byte[]) plot_ylo#9 line_xdyi::@2/(byte[]) plot_ylo#10 )
  (byte[]) plot_yhi#4 ← phi( line_xdyi/(byte[]) plot_yhi#9 line_xdyi::@2/(byte[]) plot_yhi#10 )
  (byte[]) plot_xlo#4 ← phi( line_xdyi/(byte[]) plot_xlo#9 line_xdyi::@2/(byte[]) plot_xlo#10 )
  (byte[]) plot_xhi#4 ← phi( line_xdyi/(byte[]) plot_xhi#9 line_xdyi::@2/(byte[]) plot_xhi#10 )
  (byte) line_xdyi::xd#4 ← phi( line_xdyi/(byte) line_xdyi::xd#5 line_xdyi::@2/(byte) line_xdyi::xd#6 )
  (byte) line_xdyi::yd#4 ← phi( line_xdyi/(byte) line_xdyi::yd#2 line_xdyi::@2/(byte) line_xdyi::yd#5 )
  (byte) line_xdyi::e#5 ← phi( line_xdyi/(byte) line_xdyi::e#0 line_xdyi::@2/(byte) line_xdyi::e#6 )
  (byte) line_xdyi::y#3 ← phi( line_xdyi/(byte) line_xdyi::y#5 line_xdyi::@2/(byte) line_xdyi::y#6 )
  (byte) line_xdyi::x#3 ← phi( line_xdyi/(byte) line_xdyi::x#6 line_xdyi::@2/(byte) line_xdyi::x#5 )
  (byte) plot::x#0 ← (byte) line_xdyi::x#3
  (byte) plot::y#0 ← (byte) line_xdyi::y#3
  call plot param-assignment
  to:line_xdyi::@5
line_xdyi::@5: scope:[line_xdyi]  from line_xdyi::@1
  (byte[]) plot_bit#23 ← phi( line_xdyi::@1/(byte[]) plot_bit#4 )
  (byte[]) plot_ylo#22 ← phi( line_xdyi::@1/(byte[]) plot_ylo#4 )
  (byte[]) plot_yhi#22 ← phi( line_xdyi::@1/(byte[]) plot_yhi#4 )
  (byte[]) plot_xlo#23 ← phi( line_xdyi::@1/(byte[]) plot_xlo#4 )
  (byte[]) plot_xhi#23 ← phi( line_xdyi::@1/(byte[]) plot_xhi#4 )
  (byte) line_xdyi::y#7 ← phi( line_xdyi::@1/(byte) line_xdyi::y#3 )
  (byte) line_xdyi::x1#4 ← phi( line_xdyi::@1/(byte) line_xdyi::x1#5 )
  (byte) line_xdyi::xd#2 ← phi( line_xdyi::@1/(byte) line_xdyi::xd#4 )
  (byte) line_xdyi::yd#3 ← phi( line_xdyi::@1/(byte) line_xdyi::yd#4 )
  (byte) line_xdyi::e#3 ← phi( line_xdyi::@1/(byte) line_xdyi::e#5 )
  (byte) line_xdyi::x#4 ← phi( line_xdyi::@1/(byte) line_xdyi::x#3 )
  (byte~) line_xdyi::$2 ← (byte) line_xdyi::x#4 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::x#2 ← (byte~) line_xdyi::$2
  (byte~) line_xdyi::$3 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#3
  (byte) line_xdyi::e#1 ← (byte~) line_xdyi::$3
  (boolean~) line_xdyi::$4 ← (byte) line_xdyi::xd#2 < (byte) line_xdyi::e#1
  (boolean~) line_xdyi::$5 ← ! (boolean~) line_xdyi::$4
  if((boolean~) line_xdyi::$5) goto line_xdyi::@2
  to:line_xdyi::@3
line_xdyi::@2: scope:[line_xdyi]  from line_xdyi::@3 line_xdyi::@5
  (byte[]) plot_bit#10 ← phi( line_xdyi::@3/(byte[]) plot_bit#22 line_xdyi::@5/(byte[]) plot_bit#23 )
  (byte[]) plot_ylo#10 ← phi( line_xdyi::@3/(byte[]) plot_ylo#21 line_xdyi::@5/(byte[]) plot_ylo#22 )
  (byte[]) plot_yhi#10 ← phi( line_xdyi::@3/(byte[]) plot_yhi#21 line_xdyi::@5/(byte[]) plot_yhi#22 )
  (byte[]) plot_xlo#10 ← phi( line_xdyi::@3/(byte[]) plot_xlo#22 line_xdyi::@5/(byte[]) plot_xlo#23 )
  (byte[]) plot_xhi#10 ← phi( line_xdyi::@3/(byte[]) plot_xhi#22 line_xdyi::@5/(byte[]) plot_xhi#23 )
  (byte) line_xdyi::xd#6 ← phi( line_xdyi::@3/(byte) line_xdyi::xd#3 line_xdyi::@5/(byte) line_xdyi::xd#2 )
  (byte) line_xdyi::yd#5 ← phi( line_xdyi::@3/(byte) line_xdyi::yd#6 line_xdyi::@5/(byte) line_xdyi::yd#3 )
  (byte) line_xdyi::e#6 ← phi( line_xdyi::@3/(byte) line_xdyi::e#2 line_xdyi::@5/(byte) line_xdyi::e#1 )
  (byte) line_xdyi::y#6 ← phi( line_xdyi::@3/(byte) line_xdyi::y#2 line_xdyi::@5/(byte) line_xdyi::y#7 )
  (byte) line_xdyi::x#5 ← phi( line_xdyi::@3/(byte) line_xdyi::x#7 line_xdyi::@5/(byte) line_xdyi::x#2 )
  (byte) line_xdyi::x1#2 ← phi( line_xdyi::@3/(byte) line_xdyi::x1#3 line_xdyi::@5/(byte) line_xdyi::x1#4 )
  (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyi::$9 ← (byte) line_xdyi::x#5 < (byte~) line_xdyi::$8
  if((boolean~) line_xdyi::$9) goto line_xdyi::@1
  to:line_xdyi::@return
line_xdyi::@3: scope:[line_xdyi]  from line_xdyi::@5
  (byte[]) plot_bit#22 ← phi( line_xdyi::@5/(byte[]) plot_bit#23 )
  (byte[]) plot_ylo#21 ← phi( line_xdyi::@5/(byte[]) plot_ylo#22 )
  (byte[]) plot_yhi#21 ← phi( line_xdyi::@5/(byte[]) plot_yhi#22 )
  (byte[]) plot_xlo#22 ← phi( line_xdyi::@5/(byte[]) plot_xlo#23 )
  (byte[]) plot_xhi#22 ← phi( line_xdyi::@5/(byte[]) plot_xhi#23 )
  (byte) line_xdyi::yd#6 ← phi( line_xdyi::@5/(byte) line_xdyi::yd#3 )
  (byte) line_xdyi::x#7 ← phi( line_xdyi::@5/(byte) line_xdyi::x#2 )
  (byte) line_xdyi::x1#3 ← phi( line_xdyi::@5/(byte) line_xdyi::x1#4 )
  (byte) line_xdyi::xd#3 ← phi( line_xdyi::@5/(byte) line_xdyi::xd#2 )
  (byte) line_xdyi::e#4 ← phi( line_xdyi::@5/(byte) line_xdyi::e#1 )
  (byte) line_xdyi::y#4 ← phi( line_xdyi::@5/(byte) line_xdyi::y#7 )
  (byte~) line_xdyi::$6 ← (byte) line_xdyi::y#4 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::y#2 ← (byte~) line_xdyi::$6
  (byte~) line_xdyi::$7 ← (byte) line_xdyi::e#4 - (byte) line_xdyi::xd#3
  (byte) line_xdyi::e#2 ← (byte~) line_xdyi::$7
  to:line_xdyi::@2
line_xdyi::@return: scope:[line_xdyi]  from line_xdyi::@2
  return 
  to:@return
line_xdyd: scope:[line_xdyd]  from line::@20 line::@24
  (byte) line_xdyd::x1#6 ← phi( line::@20/(byte) line_xdyd::x1#0 line::@24/(byte) line_xdyd::x1#1 )
  (byte[]) plot_bit#11 ← phi( line::@20/(byte[]) plot_bit#24 line::@24/(byte[]) plot_bit#25 )
  (byte[]) plot_ylo#11 ← phi( line::@20/(byte[]) plot_ylo#23 line::@24/(byte[]) plot_ylo#24 )
  (byte[]) plot_yhi#11 ← phi( line::@20/(byte[]) plot_yhi#23 line::@24/(byte[]) plot_yhi#24 )
  (byte[]) plot_xlo#11 ← phi( line::@20/(byte[]) plot_xlo#24 line::@24/(byte[]) plot_xlo#25 )
  (byte[]) plot_xhi#11 ← phi( line::@20/(byte[]) plot_xhi#24 line::@24/(byte[]) plot_xhi#25 )
  (byte) line_xdyd::xd#5 ← phi( line::@20/(byte) line_xdyd::xd#0 line::@24/(byte) line_xdyd::xd#1 )
  (byte) line_xdyd::y#5 ← phi( line::@20/(byte) line_xdyd::y#0 line::@24/(byte) line_xdyd::y#1 )
  (byte) line_xdyd::x#6 ← phi( line::@20/(byte) line_xdyd::x#0 line::@24/(byte) line_xdyd::x#1 )
  (byte) line_xdyd::yd#2 ← phi( line::@20/(byte) line_xdyd::yd#0 line::@24/(byte) line_xdyd::yd#1 )
  (byte~) line_xdyd::$0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#0 ← (byte~) line_xdyd::$0
  to:line_xdyd::@1
line_xdyd::@1: scope:[line_xdyd]  from line_xdyd line_xdyd::@2
  (byte) line_xdyd::x1#5 ← phi( line_xdyd/(byte) line_xdyd::x1#6 line_xdyd::@2/(byte) line_xdyd::x1#2 )
  (byte[]) plot_bit#3 ← phi( line_xdyd/(byte[]) plot_bit#11 line_xdyd::@2/(byte[]) plot_bit#12 )
  (byte[]) plot_ylo#3 ← phi( line_xdyd/(byte[]) plot_ylo#11 line_xdyd::@2/(byte[]) plot_ylo#12 )
  (byte[]) plot_yhi#3 ← phi( line_xdyd/(byte[]) plot_yhi#11 line_xdyd::@2/(byte[]) plot_yhi#12 )
  (byte[]) plot_xlo#3 ← phi( line_xdyd/(byte[]) plot_xlo#11 line_xdyd::@2/(byte[]) plot_xlo#12 )
  (byte[]) plot_xhi#3 ← phi( line_xdyd/(byte[]) plot_xhi#11 line_xdyd::@2/(byte[]) plot_xhi#12 )
  (byte) line_xdyd::xd#4 ← phi( line_xdyd/(byte) line_xdyd::xd#5 line_xdyd::@2/(byte) line_xdyd::xd#6 )
  (byte) line_xdyd::yd#4 ← phi( line_xdyd/(byte) line_xdyd::yd#2 line_xdyd::@2/(byte) line_xdyd::yd#5 )
  (byte) line_xdyd::e#5 ← phi( line_xdyd/(byte) line_xdyd::e#0 line_xdyd::@2/(byte) line_xdyd::e#6 )
  (byte) line_xdyd::y#3 ← phi( line_xdyd/(byte) line_xdyd::y#5 line_xdyd::@2/(byte) line_xdyd::y#6 )
  (byte) line_xdyd::x#3 ← phi( line_xdyd/(byte) line_xdyd::x#6 line_xdyd::@2/(byte) line_xdyd::x#5 )
  (byte) plot::x#1 ← (byte) line_xdyd::x#3
  (byte) plot::y#1 ← (byte) line_xdyd::y#3
  call plot param-assignment
  to:line_xdyd::@5
line_xdyd::@5: scope:[line_xdyd]  from line_xdyd::@1
  (byte[]) plot_bit#27 ← phi( line_xdyd::@1/(byte[]) plot_bit#3 )
  (byte[]) plot_ylo#26 ← phi( line_xdyd::@1/(byte[]) plot_ylo#3 )
  (byte[]) plot_yhi#26 ← phi( line_xdyd::@1/(byte[]) plot_yhi#3 )
  (byte[]) plot_xlo#27 ← phi( line_xdyd::@1/(byte[]) plot_xlo#3 )
  (byte[]) plot_xhi#27 ← phi( line_xdyd::@1/(byte[]) plot_xhi#3 )
  (byte) line_xdyd::y#7 ← phi( line_xdyd::@1/(byte) line_xdyd::y#3 )
  (byte) line_xdyd::x1#4 ← phi( line_xdyd::@1/(byte) line_xdyd::x1#5 )
  (byte) line_xdyd::xd#2 ← phi( line_xdyd::@1/(byte) line_xdyd::xd#4 )
  (byte) line_xdyd::yd#3 ← phi( line_xdyd::@1/(byte) line_xdyd::yd#4 )
  (byte) line_xdyd::e#3 ← phi( line_xdyd::@1/(byte) line_xdyd::e#5 )
  (byte) line_xdyd::x#4 ← phi( line_xdyd::@1/(byte) line_xdyd::x#3 )
  (byte~) line_xdyd::$2 ← (byte) line_xdyd::x#4 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::x#2 ← (byte~) line_xdyd::$2
  (byte~) line_xdyd::$3 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#3
  (byte) line_xdyd::e#1 ← (byte~) line_xdyd::$3
  (boolean~) line_xdyd::$4 ← (byte) line_xdyd::xd#2 < (byte) line_xdyd::e#1
  (boolean~) line_xdyd::$5 ← ! (boolean~) line_xdyd::$4
  if((boolean~) line_xdyd::$5) goto line_xdyd::@2
  to:line_xdyd::@3
line_xdyd::@2: scope:[line_xdyd]  from line_xdyd::@3 line_xdyd::@5
  (byte[]) plot_bit#12 ← phi( line_xdyd::@3/(byte[]) plot_bit#26 line_xdyd::@5/(byte[]) plot_bit#27 )
  (byte[]) plot_ylo#12 ← phi( line_xdyd::@3/(byte[]) plot_ylo#25 line_xdyd::@5/(byte[]) plot_ylo#26 )
  (byte[]) plot_yhi#12 ← phi( line_xdyd::@3/(byte[]) plot_yhi#25 line_xdyd::@5/(byte[]) plot_yhi#26 )
  (byte[]) plot_xlo#12 ← phi( line_xdyd::@3/(byte[]) plot_xlo#26 line_xdyd::@5/(byte[]) plot_xlo#27 )
  (byte[]) plot_xhi#12 ← phi( line_xdyd::@3/(byte[]) plot_xhi#26 line_xdyd::@5/(byte[]) plot_xhi#27 )
  (byte) line_xdyd::xd#6 ← phi( line_xdyd::@3/(byte) line_xdyd::xd#3 line_xdyd::@5/(byte) line_xdyd::xd#2 )
  (byte) line_xdyd::yd#5 ← phi( line_xdyd::@3/(byte) line_xdyd::yd#6 line_xdyd::@5/(byte) line_xdyd::yd#3 )
  (byte) line_xdyd::e#6 ← phi( line_xdyd::@3/(byte) line_xdyd::e#2 line_xdyd::@5/(byte) line_xdyd::e#1 )
  (byte) line_xdyd::y#6 ← phi( line_xdyd::@3/(byte) line_xdyd::y#2 line_xdyd::@5/(byte) line_xdyd::y#7 )
  (byte) line_xdyd::x#5 ← phi( line_xdyd::@3/(byte) line_xdyd::x#7 line_xdyd::@5/(byte) line_xdyd::x#2 )
  (byte) line_xdyd::x1#2 ← phi( line_xdyd::@3/(byte) line_xdyd::x1#3 line_xdyd::@5/(byte) line_xdyd::x1#4 )
  (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyd::$9 ← (byte) line_xdyd::x#5 < (byte~) line_xdyd::$8
  if((boolean~) line_xdyd::$9) goto line_xdyd::@1
  to:line_xdyd::@return
line_xdyd::@3: scope:[line_xdyd]  from line_xdyd::@5
  (byte[]) plot_bit#26 ← phi( line_xdyd::@5/(byte[]) plot_bit#27 )
  (byte[]) plot_ylo#25 ← phi( line_xdyd::@5/(byte[]) plot_ylo#26 )
  (byte[]) plot_yhi#25 ← phi( line_xdyd::@5/(byte[]) plot_yhi#26 )
  (byte[]) plot_xlo#26 ← phi( line_xdyd::@5/(byte[]) plot_xlo#27 )
  (byte[]) plot_xhi#26 ← phi( line_xdyd::@5/(byte[]) plot_xhi#27 )
  (byte) line_xdyd::yd#6 ← phi( line_xdyd::@5/(byte) line_xdyd::yd#3 )
  (byte) line_xdyd::x#7 ← phi( line_xdyd::@5/(byte) line_xdyd::x#2 )
  (byte) line_xdyd::x1#3 ← phi( line_xdyd::@5/(byte) line_xdyd::x1#4 )
  (byte) line_xdyd::xd#3 ← phi( line_xdyd::@5/(byte) line_xdyd::xd#2 )
  (byte) line_xdyd::e#4 ← phi( line_xdyd::@5/(byte) line_xdyd::e#1 )
  (byte) line_xdyd::y#4 ← phi( line_xdyd::@5/(byte) line_xdyd::y#7 )
  (byte~) line_xdyd::$6 ← (byte) line_xdyd::y#4 - (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::y#2 ← (byte~) line_xdyd::$6
  (byte~) line_xdyd::$7 ← (byte) line_xdyd::e#4 - (byte) line_xdyd::xd#3
  (byte) line_xdyd::e#2 ← (byte~) line_xdyd::$7
  to:line_xdyd::@2
line_xdyd::@return: scope:[line_xdyd]  from line_xdyd::@2
  return 
  to:@return
line_ydxi: scope:[line_ydxi]  from line::@13 line::@3
  (byte) line_ydxi::y1#6 ← phi( line::@13/(byte) line_ydxi::y1#1 line::@3/(byte) line_ydxi::y1#0 )
  (byte[]) plot_bit#13 ← phi( line::@13/(byte[]) plot_bit#28 line::@3/(byte[]) plot_bit#29 )
  (byte[]) plot_ylo#13 ← phi( line::@13/(byte[]) plot_ylo#27 line::@3/(byte[]) plot_ylo#28 )
  (byte[]) plot_yhi#13 ← phi( line::@13/(byte[]) plot_yhi#27 line::@3/(byte[]) plot_yhi#28 )
  (byte[]) plot_xlo#13 ← phi( line::@13/(byte[]) plot_xlo#28 line::@3/(byte[]) plot_xlo#29 )
  (byte[]) plot_xhi#13 ← phi( line::@13/(byte[]) plot_xhi#28 line::@3/(byte[]) plot_xhi#29 )
  (byte) line_ydxi::yd#5 ← phi( line::@13/(byte) line_ydxi::yd#1 line::@3/(byte) line_ydxi::yd#0 )
  (byte) line_ydxi::y#6 ← phi( line::@13/(byte) line_ydxi::y#1 line::@3/(byte) line_ydxi::y#0 )
  (byte) line_ydxi::x#5 ← phi( line::@13/(byte) line_ydxi::x#1 line::@3/(byte) line_ydxi::x#0 )
  (byte) line_ydxi::xd#2 ← phi( line::@13/(byte) line_ydxi::xd#1 line::@3/(byte) line_ydxi::xd#0 )
  (byte~) line_ydxi::$0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#0 ← (byte~) line_ydxi::$0
  to:line_ydxi::@1
line_ydxi::@1: scope:[line_ydxi]  from line_ydxi line_ydxi::@2
  (byte) line_ydxi::y1#5 ← phi( line_ydxi/(byte) line_ydxi::y1#6 line_ydxi::@2/(byte) line_ydxi::y1#2 )
  (byte[]) plot_bit#6 ← phi( line_ydxi/(byte[]) plot_bit#13 line_ydxi::@2/(byte[]) plot_bit#14 )
  (byte[]) plot_ylo#6 ← phi( line_ydxi/(byte[]) plot_ylo#13 line_ydxi::@2/(byte[]) plot_ylo#14 )
  (byte[]) plot_yhi#6 ← phi( line_ydxi/(byte[]) plot_yhi#13 line_ydxi::@2/(byte[]) plot_yhi#14 )
  (byte[]) plot_xlo#6 ← phi( line_ydxi/(byte[]) plot_xlo#13 line_ydxi::@2/(byte[]) plot_xlo#14 )
  (byte[]) plot_xhi#6 ← phi( line_ydxi/(byte[]) plot_xhi#13 line_ydxi::@2/(byte[]) plot_xhi#14 )
  (byte) line_ydxi::yd#4 ← phi( line_ydxi/(byte) line_ydxi::yd#5 line_ydxi::@2/(byte) line_ydxi::yd#6 )
  (byte) line_ydxi::xd#4 ← phi( line_ydxi/(byte) line_ydxi::xd#2 line_ydxi::@2/(byte) line_ydxi::xd#5 )
  (byte) line_ydxi::e#5 ← phi( line_ydxi/(byte) line_ydxi::e#0 line_ydxi::@2/(byte) line_ydxi::e#6 )
  (byte) line_ydxi::y#3 ← phi( line_ydxi/(byte) line_ydxi::y#6 line_ydxi::@2/(byte) line_ydxi::y#5 )
  (byte) line_ydxi::x#3 ← phi( line_ydxi/(byte) line_ydxi::x#5 line_ydxi::@2/(byte) line_ydxi::x#6 )
  (byte) plot::x#2 ← (byte) line_ydxi::x#3
  (byte) plot::y#2 ← (byte) line_ydxi::y#3
  call plot param-assignment
  to:line_ydxi::@5
line_ydxi::@5: scope:[line_ydxi]  from line_ydxi::@1
  (byte[]) plot_bit#31 ← phi( line_ydxi::@1/(byte[]) plot_bit#6 )
  (byte[]) plot_ylo#30 ← phi( line_ydxi::@1/(byte[]) plot_ylo#6 )
  (byte[]) plot_yhi#30 ← phi( line_ydxi::@1/(byte[]) plot_yhi#6 )
  (byte[]) plot_xlo#31 ← phi( line_ydxi::@1/(byte[]) plot_xlo#6 )
  (byte[]) plot_xhi#31 ← phi( line_ydxi::@1/(byte[]) plot_xhi#6 )
  (byte) line_ydxi::x#7 ← phi( line_ydxi::@1/(byte) line_ydxi::x#3 )
  (byte) line_ydxi::y1#4 ← phi( line_ydxi::@1/(byte) line_ydxi::y1#5 )
  (byte) line_ydxi::yd#2 ← phi( line_ydxi::@1/(byte) line_ydxi::yd#4 )
  (byte) line_ydxi::xd#3 ← phi( line_ydxi::@1/(byte) line_ydxi::xd#4 )
  (byte) line_ydxi::e#3 ← phi( line_ydxi::@1/(byte) line_ydxi::e#5 )
  (byte) line_ydxi::y#4 ← phi( line_ydxi::@1/(byte) line_ydxi::y#3 )
  (byte~) line_ydxi::$2 ← (byte) line_ydxi::y#4 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::y#2 ← (byte~) line_ydxi::$2
  (byte~) line_ydxi::$3 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#3
  (byte) line_ydxi::e#1 ← (byte~) line_ydxi::$3
  (boolean~) line_ydxi::$4 ← (byte) line_ydxi::yd#2 < (byte) line_ydxi::e#1
  (boolean~) line_ydxi::$5 ← ! (boolean~) line_ydxi::$4
  if((boolean~) line_ydxi::$5) goto line_ydxi::@2
  to:line_ydxi::@3
line_ydxi::@2: scope:[line_ydxi]  from line_ydxi::@3 line_ydxi::@5
  (byte[]) plot_bit#14 ← phi( line_ydxi::@3/(byte[]) plot_bit#30 line_ydxi::@5/(byte[]) plot_bit#31 )
  (byte[]) plot_ylo#14 ← phi( line_ydxi::@3/(byte[]) plot_ylo#29 line_ydxi::@5/(byte[]) plot_ylo#30 )
  (byte[]) plot_yhi#14 ← phi( line_ydxi::@3/(byte[]) plot_yhi#29 line_ydxi::@5/(byte[]) plot_yhi#30 )
  (byte[]) plot_xlo#14 ← phi( line_ydxi::@3/(byte[]) plot_xlo#30 line_ydxi::@5/(byte[]) plot_xlo#31 )
  (byte[]) plot_xhi#14 ← phi( line_ydxi::@3/(byte[]) plot_xhi#30 line_ydxi::@5/(byte[]) plot_xhi#31 )
  (byte) line_ydxi::yd#6 ← phi( line_ydxi::@3/(byte) line_ydxi::yd#3 line_ydxi::@5/(byte) line_ydxi::yd#2 )
  (byte) line_ydxi::xd#5 ← phi( line_ydxi::@3/(byte) line_ydxi::xd#6 line_ydxi::@5/(byte) line_ydxi::xd#3 )
  (byte) line_ydxi::e#6 ← phi( line_ydxi::@3/(byte) line_ydxi::e#2 line_ydxi::@5/(byte) line_ydxi::e#1 )
  (byte) line_ydxi::x#6 ← phi( line_ydxi::@3/(byte) line_ydxi::x#2 line_ydxi::@5/(byte) line_ydxi::x#7 )
  (byte) line_ydxi::y#5 ← phi( line_ydxi::@3/(byte) line_ydxi::y#7 line_ydxi::@5/(byte) line_ydxi::y#2 )
  (byte) line_ydxi::y1#2 ← phi( line_ydxi::@3/(byte) line_ydxi::y1#3 line_ydxi::@5/(byte) line_ydxi::y1#4 )
  (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxi::$9 ← (byte) line_ydxi::y#5 < (byte~) line_ydxi::$8
  if((boolean~) line_ydxi::$9) goto line_ydxi::@1
  to:line_ydxi::@return
line_ydxi::@3: scope:[line_ydxi]  from line_ydxi::@5
  (byte[]) plot_bit#30 ← phi( line_ydxi::@5/(byte[]) plot_bit#31 )
  (byte[]) plot_ylo#29 ← phi( line_ydxi::@5/(byte[]) plot_ylo#30 )
  (byte[]) plot_yhi#29 ← phi( line_ydxi::@5/(byte[]) plot_yhi#30 )
  (byte[]) plot_xlo#30 ← phi( line_ydxi::@5/(byte[]) plot_xlo#31 )
  (byte[]) plot_xhi#30 ← phi( line_ydxi::@5/(byte[]) plot_xhi#31 )
  (byte) line_ydxi::xd#6 ← phi( line_ydxi::@5/(byte) line_ydxi::xd#3 )
  (byte) line_ydxi::y#7 ← phi( line_ydxi::@5/(byte) line_ydxi::y#2 )
  (byte) line_ydxi::y1#3 ← phi( line_ydxi::@5/(byte) line_ydxi::y1#4 )
  (byte) line_ydxi::yd#3 ← phi( line_ydxi::@5/(byte) line_ydxi::yd#2 )
  (byte) line_ydxi::e#4 ← phi( line_ydxi::@5/(byte) line_ydxi::e#1 )
  (byte) line_ydxi::x#4 ← phi( line_ydxi::@5/(byte) line_ydxi::x#7 )
  (byte~) line_ydxi::$6 ← (byte) line_ydxi::x#4 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::x#2 ← (byte~) line_ydxi::$6
  (byte~) line_ydxi::$7 ← (byte) line_ydxi::e#4 - (byte) line_ydxi::yd#3
  (byte) line_ydxi::e#2 ← (byte~) line_ydxi::$7
  to:line_ydxi::@2
line_ydxi::@return: scope:[line_ydxi]  from line_ydxi::@2
  return 
  to:@return
line_ydxd: scope:[line_ydxd]  from line::@10 line::@6
  (byte) line_ydxd::y1#6 ← phi( line::@10/(byte) line_ydxd::y1#1 line::@6/(byte) line_ydxd::y1#0 )
  (byte[]) plot_bit#15 ← phi( line::@10/(byte[]) plot_bit#32 line::@6/(byte[]) plot_bit#33 )
  (byte[]) plot_ylo#15 ← phi( line::@10/(byte[]) plot_ylo#31 line::@6/(byte[]) plot_ylo#32 )
  (byte[]) plot_yhi#15 ← phi( line::@10/(byte[]) plot_yhi#31 line::@6/(byte[]) plot_yhi#32 )
  (byte[]) plot_xlo#15 ← phi( line::@10/(byte[]) plot_xlo#32 line::@6/(byte[]) plot_xlo#33 )
  (byte[]) plot_xhi#15 ← phi( line::@10/(byte[]) plot_xhi#32 line::@6/(byte[]) plot_xhi#33 )
  (byte) line_ydxd::yd#5 ← phi( line::@10/(byte) line_ydxd::yd#1 line::@6/(byte) line_ydxd::yd#0 )
  (byte) line_ydxd::y#6 ← phi( line::@10/(byte) line_ydxd::y#1 line::@6/(byte) line_ydxd::y#0 )
  (byte) line_ydxd::x#5 ← phi( line::@10/(byte) line_ydxd::x#1 line::@6/(byte) line_ydxd::x#0 )
  (byte) line_ydxd::xd#2 ← phi( line::@10/(byte) line_ydxd::xd#1 line::@6/(byte) line_ydxd::xd#0 )
  (byte~) line_ydxd::$0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#0 ← (byte~) line_ydxd::$0
  to:line_ydxd::@1
line_ydxd::@1: scope:[line_ydxd]  from line_ydxd line_ydxd::@2
  (byte) line_ydxd::y1#5 ← phi( line_ydxd/(byte) line_ydxd::y1#6 line_ydxd::@2/(byte) line_ydxd::y1#2 )
  (byte[]) plot_bit#5 ← phi( line_ydxd/(byte[]) plot_bit#15 line_ydxd::@2/(byte[]) plot_bit#16 )
  (byte[]) plot_ylo#5 ← phi( line_ydxd/(byte[]) plot_ylo#15 line_ydxd::@2/(byte[]) plot_ylo#16 )
  (byte[]) plot_yhi#5 ← phi( line_ydxd/(byte[]) plot_yhi#15 line_ydxd::@2/(byte[]) plot_yhi#16 )
  (byte[]) plot_xlo#5 ← phi( line_ydxd/(byte[]) plot_xlo#15 line_ydxd::@2/(byte[]) plot_xlo#16 )
  (byte[]) plot_xhi#5 ← phi( line_ydxd/(byte[]) plot_xhi#15 line_ydxd::@2/(byte[]) plot_xhi#16 )
  (byte) line_ydxd::yd#4 ← phi( line_ydxd/(byte) line_ydxd::yd#5 line_ydxd::@2/(byte) line_ydxd::yd#6 )
  (byte) line_ydxd::xd#4 ← phi( line_ydxd/(byte) line_ydxd::xd#2 line_ydxd::@2/(byte) line_ydxd::xd#5 )
  (byte) line_ydxd::e#5 ← phi( line_ydxd/(byte) line_ydxd::e#0 line_ydxd::@2/(byte) line_ydxd::e#6 )
  (byte) line_ydxd::y#3 ← phi( line_ydxd/(byte) line_ydxd::y#6 line_ydxd::@2/(byte) line_ydxd::y#5 )
  (byte) line_ydxd::x#3 ← phi( line_ydxd/(byte) line_ydxd::x#5 line_ydxd::@2/(byte) line_ydxd::x#6 )
  (byte) plot::x#3 ← (byte) line_ydxd::x#3
  (byte) plot::y#3 ← (byte) line_ydxd::y#3
  call plot param-assignment
  to:line_ydxd::@5
line_ydxd::@5: scope:[line_ydxd]  from line_ydxd::@1
  (byte[]) plot_bit#35 ← phi( line_ydxd::@1/(byte[]) plot_bit#5 )
  (byte[]) plot_ylo#34 ← phi( line_ydxd::@1/(byte[]) plot_ylo#5 )
  (byte[]) plot_yhi#34 ← phi( line_ydxd::@1/(byte[]) plot_yhi#5 )
  (byte[]) plot_xlo#35 ← phi( line_ydxd::@1/(byte[]) plot_xlo#5 )
  (byte[]) plot_xhi#35 ← phi( line_ydxd::@1/(byte[]) plot_xhi#5 )
  (byte) line_ydxd::x#7 ← phi( line_ydxd::@1/(byte) line_ydxd::x#3 )
  (byte) line_ydxd::y1#4 ← phi( line_ydxd::@1/(byte) line_ydxd::y1#5 )
  (byte) line_ydxd::yd#2 ← phi( line_ydxd::@1/(byte) line_ydxd::yd#4 )
  (byte) line_ydxd::xd#3 ← phi( line_ydxd::@1/(byte) line_ydxd::xd#4 )
  (byte) line_ydxd::e#3 ← phi( line_ydxd::@1/(byte) line_ydxd::e#5 )
  (byte) line_ydxd::y#4 ← phi( line_ydxd::@1/(byte) line_ydxd::y#3 )
  (byte~) line_ydxd::$2 ← (byte) line_ydxd::y#4 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::y#2 ← (byte~) line_ydxd::$2
  (byte~) line_ydxd::$3 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#3
  (byte) line_ydxd::e#1 ← (byte~) line_ydxd::$3
  (boolean~) line_ydxd::$4 ← (byte) line_ydxd::yd#2 < (byte) line_ydxd::e#1
  (boolean~) line_ydxd::$5 ← ! (boolean~) line_ydxd::$4
  if((boolean~) line_ydxd::$5) goto line_ydxd::@2
  to:line_ydxd::@3
line_ydxd::@2: scope:[line_ydxd]  from line_ydxd::@3 line_ydxd::@5
  (byte[]) plot_bit#16 ← phi( line_ydxd::@3/(byte[]) plot_bit#34 line_ydxd::@5/(byte[]) plot_bit#35 )
  (byte[]) plot_ylo#16 ← phi( line_ydxd::@3/(byte[]) plot_ylo#33 line_ydxd::@5/(byte[]) plot_ylo#34 )
  (byte[]) plot_yhi#16 ← phi( line_ydxd::@3/(byte[]) plot_yhi#33 line_ydxd::@5/(byte[]) plot_yhi#34 )
  (byte[]) plot_xlo#16 ← phi( line_ydxd::@3/(byte[]) plot_xlo#34 line_ydxd::@5/(byte[]) plot_xlo#35 )
  (byte[]) plot_xhi#16 ← phi( line_ydxd::@3/(byte[]) plot_xhi#34 line_ydxd::@5/(byte[]) plot_xhi#35 )
  (byte) line_ydxd::yd#6 ← phi( line_ydxd::@3/(byte) line_ydxd::yd#3 line_ydxd::@5/(byte) line_ydxd::yd#2 )
  (byte) line_ydxd::xd#5 ← phi( line_ydxd::@3/(byte) line_ydxd::xd#6 line_ydxd::@5/(byte) line_ydxd::xd#3 )
  (byte) line_ydxd::e#6 ← phi( line_ydxd::@3/(byte) line_ydxd::e#2 line_ydxd::@5/(byte) line_ydxd::e#1 )
  (byte) line_ydxd::x#6 ← phi( line_ydxd::@3/(byte) line_ydxd::x#2 line_ydxd::@5/(byte) line_ydxd::x#7 )
  (byte) line_ydxd::y#5 ← phi( line_ydxd::@3/(byte) line_ydxd::y#7 line_ydxd::@5/(byte) line_ydxd::y#2 )
  (byte) line_ydxd::y1#2 ← phi( line_ydxd::@3/(byte) line_ydxd::y1#3 line_ydxd::@5/(byte) line_ydxd::y1#4 )
  (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxd::$9 ← (byte) line_ydxd::y#5 < (byte~) line_ydxd::$8
  if((boolean~) line_ydxd::$9) goto line_ydxd::@1
  to:line_ydxd::@return
line_ydxd::@3: scope:[line_ydxd]  from line_ydxd::@5
  (byte[]) plot_bit#34 ← phi( line_ydxd::@5/(byte[]) plot_bit#35 )
  (byte[]) plot_ylo#33 ← phi( line_ydxd::@5/(byte[]) plot_ylo#34 )
  (byte[]) plot_yhi#33 ← phi( line_ydxd::@5/(byte[]) plot_yhi#34 )
  (byte[]) plot_xlo#34 ← phi( line_ydxd::@5/(byte[]) plot_xlo#35 )
  (byte[]) plot_xhi#34 ← phi( line_ydxd::@5/(byte[]) plot_xhi#35 )
  (byte) line_ydxd::xd#6 ← phi( line_ydxd::@5/(byte) line_ydxd::xd#3 )
  (byte) line_ydxd::y#7 ← phi( line_ydxd::@5/(byte) line_ydxd::y#2 )
  (byte) line_ydxd::y1#3 ← phi( line_ydxd::@5/(byte) line_ydxd::y1#4 )
  (byte) line_ydxd::yd#3 ← phi( line_ydxd::@5/(byte) line_ydxd::yd#2 )
  (byte) line_ydxd::e#4 ← phi( line_ydxd::@5/(byte) line_ydxd::e#1 )
  (byte) line_ydxd::x#4 ← phi( line_ydxd::@5/(byte) line_ydxd::x#7 )
  (byte~) line_ydxd::$6 ← (byte) line_ydxd::x#4 - (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::x#2 ← (byte~) line_ydxd::$6
  (byte~) line_ydxd::$7 ← (byte) line_ydxd::e#4 - (byte) line_ydxd::yd#3
  (byte) line_ydxd::e#2 ← (byte~) line_ydxd::$7
  to:line_ydxd::@2
line_ydxd::@return: scope:[line_ydxd]  from line_ydxd::@2
  return 
  to:@return
plot: scope:[plot]  from line_xdyd::@1 line_xdyi::@1 line_ydxd::@1 line_ydxi::@1
  (byte[]) plot_bit#1 ← phi( line_xdyd::@1/(byte[]) plot_bit#3 line_xdyi::@1/(byte[]) plot_bit#4 line_ydxd::@1/(byte[]) plot_bit#5 line_ydxi::@1/(byte[]) plot_bit#6 )
  (byte[]) plot_ylo#1 ← phi( line_xdyd::@1/(byte[]) plot_ylo#3 line_xdyi::@1/(byte[]) plot_ylo#4 line_ydxd::@1/(byte[]) plot_ylo#5 line_ydxi::@1/(byte[]) plot_ylo#6 )
  (byte) plot::y#4 ← phi( line_xdyd::@1/(byte) plot::y#1 line_xdyi::@1/(byte) plot::y#0 line_ydxd::@1/(byte) plot::y#3 line_ydxi::@1/(byte) plot::y#2 )
  (byte[]) plot_yhi#1 ← phi( line_xdyd::@1/(byte[]) plot_yhi#3 line_xdyi::@1/(byte[]) plot_yhi#4 line_ydxd::@1/(byte[]) plot_yhi#5 line_ydxi::@1/(byte[]) plot_yhi#6 )
  (byte[]) plot_xlo#1 ← phi( line_xdyd::@1/(byte[]) plot_xlo#3 line_xdyi::@1/(byte[]) plot_xlo#4 line_ydxd::@1/(byte[]) plot_xlo#5 line_ydxi::@1/(byte[]) plot_xlo#6 )
  (byte) plot::x#4 ← phi( line_xdyd::@1/(byte) plot::x#1 line_xdyi::@1/(byte) plot::x#0 line_ydxd::@1/(byte) plot::x#3 line_ydxi::@1/(byte) plot::x#2 )
  (byte[]) plot_xhi#1 ← phi( line_xdyd::@1/(byte[]) plot_xhi#3 line_xdyi::@1/(byte[]) plot_xhi#4 line_ydxd::@1/(byte[]) plot_xhi#5 line_ydxi::@1/(byte[]) plot_xhi#6 )
  (byte*) plot::plotter_x#0 ← ((byte*)) (byte/signed byte/word/signed word) 0
  (word) plot::plotter_y#0 ← (byte/signed byte/word/signed word) 0
  (byte~) plot::$0 ← (byte[]) plot_xhi#1 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#1 ← (byte*) plot::plotter_x#0 hi= (byte~) plot::$0
  (byte~) plot::$1 ← (byte[]) plot_xlo#1 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1
  (byte~) plot::$2 ← (byte[]) plot_yhi#1 *idx (byte) plot::y#4
  (word) plot::plotter_y#1 ← (word) plot::plotter_y#0 hi= (byte~) plot::$2
  (byte~) plot::$3 ← (byte[]) plot_ylo#1 *idx (byte) plot::y#4
  (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3
  (byte*~) plot::$4 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2
  (byte*) plot::plotter#0 ← (byte*~) plot::$4
  (byte~) plot::$5 ← (byte[]) plot_bit#1 *idx (byte) plot::x#4
  (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5
  *((byte*) plot::plotter#0) ← (byte~) plot::$6
  to:plot::@return
plot::@return: scope:[plot]  from plot
  return 
  to:@return
init_plot_tables: scope:[init_plot_tables]  from main::@3
  (byte[]) plot_yhi#41 ← phi( main::@3/(byte[]) plot_yhi#44 )
  (byte[]) plot_ylo#41 ← phi( main::@3/(byte[]) plot_ylo#44 )
  (byte[]) plot_bit#7 ← phi( main::@3/(byte[]) plot_bit#17 )
  (byte[]) plot_xhi#7 ← phi( main::@3/(byte[]) plot_xhi#17 )
  (byte*) BITMAP#4 ← phi( main::@3/(byte*) BITMAP#8 )
  (byte[]) plot_xlo#7 ← phi( main::@3/(byte[]) plot_xlo#17 )
  (byte) init_plot_tables::bits#0 ← (byte/word/signed word) 128
  (byte) init_plot_tables::x#0 ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@1
init_plot_tables::@1: scope:[init_plot_tables]  from init_plot_tables init_plot_tables::@2
  (byte[]) plot_yhi#35 ← phi( init_plot_tables/(byte[]) plot_yhi#41 init_plot_tables::@2/(byte[]) plot_yhi#17 )
  (byte[]) plot_ylo#35 ← phi( init_plot_tables/(byte[]) plot_ylo#41 init_plot_tables::@2/(byte[]) plot_ylo#17 )
  (byte[]) plot_bit#2 ← phi( init_plot_tables/(byte[]) plot_bit#7 init_plot_tables::@2/(byte[]) plot_bit#8 )
  (byte) init_plot_tables::bits#3 ← phi( init_plot_tables/(byte) init_plot_tables::bits#0 init_plot_tables::@2/(byte) init_plot_tables::bits#4 )
  (byte[]) plot_xhi#2 ← phi( init_plot_tables/(byte[]) plot_xhi#7 init_plot_tables::@2/(byte[]) plot_xhi#8 )
  (byte*) BITMAP#1 ← phi( init_plot_tables/(byte*) BITMAP#4 init_plot_tables::@2/(byte*) BITMAP#5 )
  (byte[]) plot_xlo#2 ← phi( init_plot_tables/(byte[]) plot_xlo#7 init_plot_tables::@2/(byte[]) plot_xlo#8 )
  (byte) init_plot_tables::x#2 ← phi( init_plot_tables/(byte) init_plot_tables::x#0 init_plot_tables::@2/(byte) init_plot_tables::x#1 )
  (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248
  *((byte[]) plot_xlo#2 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0
  (byte~) init_plot_tables::$1 ← > (byte*) BITMAP#1
  *((byte[]) plot_xhi#2 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$1
  *((byte[]) plot_bit#2 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3
  (byte~) init_plot_tables::$2 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1
  (byte) init_plot_tables::bits#1 ← (byte~) init_plot_tables::$2
  (boolean~) init_plot_tables::$3 ← (byte) init_plot_tables::bits#1 == (byte/signed byte/word/signed word) 0
  (boolean~) init_plot_tables::$4 ← ! (boolean~) init_plot_tables::$3
  if((boolean~) init_plot_tables::$4) goto init_plot_tables::@2
  to:init_plot_tables::@5
init_plot_tables::@2: scope:[init_plot_tables]  from init_plot_tables::@1 init_plot_tables::@5
  (byte[]) plot_yhi#17 ← phi( init_plot_tables::@1/(byte[]) plot_yhi#35 init_plot_tables::@5/(byte[]) plot_yhi#36 )
  (byte[]) plot_ylo#17 ← phi( init_plot_tables::@1/(byte[]) plot_ylo#35 init_plot_tables::@5/(byte[]) plot_ylo#36 )
  (byte[]) plot_bit#8 ← phi( init_plot_tables::@1/(byte[]) plot_bit#2 init_plot_tables::@5/(byte[]) plot_bit#18 )
  (byte) init_plot_tables::bits#4 ← phi( init_plot_tables::@1/(byte) init_plot_tables::bits#1 init_plot_tables::@5/(byte) init_plot_tables::bits#2 )
  (byte[]) plot_xhi#8 ← phi( init_plot_tables::@1/(byte[]) plot_xhi#2 init_plot_tables::@5/(byte[]) plot_xhi#18 )
  (byte*) BITMAP#5 ← phi( init_plot_tables::@1/(byte*) BITMAP#1 init_plot_tables::@5/(byte*) BITMAP#9 )
  (byte[]) plot_xlo#8 ← phi( init_plot_tables::@1/(byte[]) plot_xlo#2 init_plot_tables::@5/(byte[]) plot_xlo#18 )
  (byte) init_plot_tables::x#3 ← phi( init_plot_tables::@1/(byte) init_plot_tables::x#2 init_plot_tables::@5/(byte) init_plot_tables::x#4 )
  (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#3
  (boolean~) init_plot_tables::$5 ← (byte) init_plot_tables::x#1 != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$5) goto init_plot_tables::@1
  to:init_plot_tables::@6
init_plot_tables::@5: scope:[init_plot_tables]  from init_plot_tables::@1
  (byte[]) plot_yhi#36 ← phi( init_plot_tables::@1/(byte[]) plot_yhi#35 )
  (byte[]) plot_ylo#36 ← phi( init_plot_tables::@1/(byte[]) plot_ylo#35 )
  (byte[]) plot_bit#18 ← phi( init_plot_tables::@1/(byte[]) plot_bit#2 )
  (byte[]) plot_xhi#18 ← phi( init_plot_tables::@1/(byte[]) plot_xhi#2 )
  (byte*) BITMAP#9 ← phi( init_plot_tables::@1/(byte*) BITMAP#1 )
  (byte[]) plot_xlo#18 ← phi( init_plot_tables::@1/(byte[]) plot_xlo#2 )
  (byte) init_plot_tables::x#4 ← phi( init_plot_tables::@1/(byte) init_plot_tables::x#2 )
  (byte) init_plot_tables::bits#2 ← (byte/word/signed word) 128
  to:init_plot_tables::@2
init_plot_tables::@6: scope:[init_plot_tables]  from init_plot_tables::@2
  (byte[]) plot_yhi#8 ← phi( init_plot_tables::@2/(byte[]) plot_yhi#17 )
  (byte[]) plot_ylo#8 ← phi( init_plot_tables::@2/(byte[]) plot_ylo#17 )
  (byte*) init_plot_tables::yoffs#0 ← ((byte*)) (byte/signed byte/word/signed word) 0
  (byte) init_plot_tables::y#0 ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@3
init_plot_tables::@3: scope:[init_plot_tables]  from init_plot_tables::@4 init_plot_tables::@6
  (byte[]) plot_yhi#2 ← phi( init_plot_tables::@4/(byte[]) plot_yhi#7 init_plot_tables::@6/(byte[]) plot_yhi#8 )
  (byte[]) plot_ylo#2 ← phi( init_plot_tables::@4/(byte[]) plot_ylo#7 init_plot_tables::@6/(byte[]) plot_ylo#8 )
  (byte*) init_plot_tables::yoffs#2 ← phi( init_plot_tables::@4/(byte*) init_plot_tables::yoffs#4 init_plot_tables::@6/(byte*) init_plot_tables::yoffs#0 )
  (byte) init_plot_tables::y#2 ← phi( init_plot_tables::@4/(byte) init_plot_tables::y#1 init_plot_tables::@6/(byte) init_plot_tables::y#0 )
  (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2
  (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7
  *((byte[]) plot_ylo#2 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8
  (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2
  *((byte[]) plot_yhi#2 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9
  (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (boolean~) init_plot_tables::$11 ← (byte~) init_plot_tables::$10 == (byte/signed byte/word/signed word) 7
  (boolean~) init_plot_tables::$12 ← ! (boolean~) init_plot_tables::$11
  if((boolean~) init_plot_tables::$12) goto init_plot_tables::@4
  to:init_plot_tables::@7
init_plot_tables::@4: scope:[init_plot_tables]  from init_plot_tables::@3 init_plot_tables::@7
  (byte[]) plot_yhi#7 ← phi( init_plot_tables::@3/(byte[]) plot_yhi#2 init_plot_tables::@7/(byte[]) plot_yhi#18 )
  (byte[]) plot_ylo#7 ← phi( init_plot_tables::@3/(byte[]) plot_ylo#2 init_plot_tables::@7/(byte[]) plot_ylo#18 )
  (byte*) init_plot_tables::yoffs#4 ← phi( init_plot_tables::@3/(byte*) init_plot_tables::yoffs#2 init_plot_tables::@7/(byte*) init_plot_tables::yoffs#1 )
  (byte) init_plot_tables::y#3 ← phi( init_plot_tables::@3/(byte) init_plot_tables::y#2 init_plot_tables::@7/(byte) init_plot_tables::y#4 )
  (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#3
  (boolean~) init_plot_tables::$14 ← (byte) init_plot_tables::y#1 != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$14) goto init_plot_tables::@3
  to:init_plot_tables::@return
init_plot_tables::@7: scope:[init_plot_tables]  from init_plot_tables::@3
  (byte[]) plot_yhi#18 ← phi( init_plot_tables::@3/(byte[]) plot_yhi#2 )
  (byte[]) plot_ylo#18 ← phi( init_plot_tables::@3/(byte[]) plot_ylo#2 )
  (byte) init_plot_tables::y#4 ← phi( init_plot_tables::@3/(byte) init_plot_tables::y#2 )
  (byte*) init_plot_tables::yoffs#3 ← phi( init_plot_tables::@3/(byte*) init_plot_tables::yoffs#2 )
  (byte*~) init_plot_tables::$13 ← (byte*) init_plot_tables::yoffs#3 + (word/signed word) 320
  (byte*) init_plot_tables::yoffs#1 ← (byte*~) init_plot_tables::$13
  to:init_plot_tables::@4
init_plot_tables::@return: scope:[init_plot_tables]  from init_plot_tables::@4
  return 
  to:@return
init_screen: scope:[init_screen]  from main
  (byte*) SCREEN#4 ← phi( main/(byte*) SCREEN#5 )
  (byte*) BITMAP#2 ← phi( main/(byte*) BITMAP#6 )
  (byte*) init_screen::b#0 ← (byte*) BITMAP#2
  to:init_screen::@1
init_screen::@1: scope:[init_screen]  from init_screen init_screen::@1
  (byte*) SCREEN#3 ← phi( init_screen/(byte*) SCREEN#4 init_screen::@1/(byte*) SCREEN#3 )
  (byte*) BITMAP#3 ← phi( init_screen/(byte*) BITMAP#2 init_screen::@1/(byte*) BITMAP#3 )
  (byte*) init_screen::b#2 ← phi( init_screen/(byte*) init_screen::b#0 init_screen::@1/(byte*) init_screen::b#1 )
  *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0
  (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2
  (byte*~) init_screen::$0 ← (byte*) BITMAP#3 + (word/signed word) 8192
  (boolean~) init_screen::$1 ← (byte*) init_screen::b#1 != (byte*~) init_screen::$0
  if((boolean~) init_screen::$1) goto init_screen::@1
  to:init_screen::@3
init_screen::@3: scope:[init_screen]  from init_screen::@1
  (byte*) SCREEN#1 ← phi( init_screen::@1/(byte*) SCREEN#3 )
  (byte*) init_screen::c#0 ← (byte*) SCREEN#1
  to:init_screen::@2
init_screen::@2: scope:[init_screen]  from init_screen::@2 init_screen::@3
  (byte*) SCREEN#2 ← phi( init_screen::@2/(byte*) SCREEN#2 init_screen::@3/(byte*) SCREEN#1 )
  (byte*) init_screen::c#2 ← phi( init_screen::@2/(byte*) init_screen::c#1 init_screen::@3/(byte*) init_screen::c#0 )
  *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20
  (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2
  (byte*~) init_screen::$2 ← (byte*) SCREEN#2 + (word/signed word) 1024
  (boolean~) init_screen::$3 ← (byte*) init_screen::c#1 != (byte*~) init_screen::$2
  if((boolean~) init_screen::$3) goto init_screen::@2
  to:init_screen::@return
init_screen::@return: scope:[init_screen]  from init_screen::@2
  return 
  to:@return
@10: scope:[]  from @begin
  (byte[]) plot_yhi#47 ← phi( @begin/(byte[]) plot_yhi#0 )
  (byte[]) plot_ylo#47 ← phi( @begin/(byte[]) plot_ylo#0 )
  (byte) lines_cnt#9 ← phi( @begin/(byte) lines_cnt#0 )
  (byte[]) lines_y#9 ← phi( @begin/(byte[]) lines_y#0 )
  (byte[]) lines_x#9 ← phi( @begin/(byte[]) lines_x#0 )
  (byte*) SCREEN#6 ← phi( @begin/(byte*) SCREEN#0 )
  (byte[]) plot_bit#36 ← phi( @begin/(byte[]) plot_bit#0 )
  (byte[]) plot_xhi#36 ← phi( @begin/(byte[]) plot_xhi#0 )
  (byte[]) plot_xlo#36 ← phi( @begin/(byte[]) plot_xlo#0 )
  (byte*) BITMAP#7 ← phi( @begin/(byte*) BITMAP#0 )
  (byte*) D018#2 ← phi( @begin/(byte*) D018#0 )
  (byte*) D011#2 ← phi( @begin/(byte*) D011#0 )
  (byte) RSEL#2 ← phi( @begin/(byte) RSEL#0 )
  (byte) DEN#2 ← phi( @begin/(byte) DEN#0 )
  (byte) BMM#2 ← phi( @begin/(byte) BMM#0 )
  (byte*) FGCOL#2 ← phi( @begin/(byte*) FGCOL#0 )
  (byte*) BGCOL#2 ← phi( @begin/(byte*) BGCOL#0 )
  call main param-assignment
  to:@11
@11: scope:[]  from @10
  to:@end
@end: scope:[]  from @11

INITIAL SSA SYMBOL TABLE
(label) @10
(label) @11
(label) @begin
(label) @end
(byte*) BGCOL
(byte*) BGCOL#0
(byte*) BGCOL#1
(byte*) BGCOL#2
(byte*) BITMAP
(byte*) BITMAP#0
(byte*) BITMAP#1
(byte*) BITMAP#2
(byte*) BITMAP#3
(byte*) BITMAP#4
(byte*) BITMAP#5
(byte*) BITMAP#6
(byte*) BITMAP#7
(byte*) BITMAP#8
(byte*) BITMAP#9
(byte) BMM
(byte) BMM#0
(byte) BMM#1
(byte) BMM#2
(byte*) D011
(byte*) D011#0
(byte*) D011#1
(byte*) D011#2
(byte*) D018
(byte*) D018#0
(byte*) D018#1
(byte*) D018#2
(byte) DEN
(byte) DEN#0
(byte) DEN#1
(byte) DEN#2
(byte*) FGCOL
(byte*) FGCOL#0
(byte*) FGCOL#1
(byte*) FGCOL#2
(byte) RSEL
(byte) RSEL#0
(byte) RSEL#1
(byte) RSEL#2
(byte*) SCREEN
(byte*) SCREEN#0
(byte*) SCREEN#1
(byte*) SCREEN#2
(byte*) SCREEN#3
(byte*) SCREEN#4
(byte*) SCREEN#5
(byte*) SCREEN#6
(void()) init_plot_tables()
(byte~) init_plot_tables::$0
(byte~) init_plot_tables::$1
(byte~) init_plot_tables::$10
(boolean~) init_plot_tables::$11
(boolean~) init_plot_tables::$12
(byte*~) init_plot_tables::$13
(boolean~) init_plot_tables::$14
(byte~) init_plot_tables::$2
(boolean~) init_plot_tables::$3
(boolean~) init_plot_tables::$4
(boolean~) init_plot_tables::$5
(byte~) init_plot_tables::$6
(byte~) init_plot_tables::$7
(byte~) init_plot_tables::$8
(byte~) init_plot_tables::$9
(label) init_plot_tables::@1
(label) init_plot_tables::@2
(label) init_plot_tables::@3
(label) init_plot_tables::@4
(label) init_plot_tables::@5
(label) init_plot_tables::@6
(label) init_plot_tables::@7
(label) init_plot_tables::@return
(byte) init_plot_tables::bits
(byte) init_plot_tables::bits#0
(byte) init_plot_tables::bits#1
(byte) init_plot_tables::bits#2
(byte) init_plot_tables::bits#3
(byte) init_plot_tables::bits#4
(byte) init_plot_tables::x
(byte) init_plot_tables::x#0
(byte) init_plot_tables::x#1
(byte) init_plot_tables::x#2
(byte) init_plot_tables::x#3
(byte) init_plot_tables::x#4
(byte) init_plot_tables::y
(byte) init_plot_tables::y#0
(byte) init_plot_tables::y#1
(byte) init_plot_tables::y#2
(byte) init_plot_tables::y#3
(byte) init_plot_tables::y#4
(byte*) init_plot_tables::yoffs
(byte*) init_plot_tables::yoffs#0
(byte*) init_plot_tables::yoffs#1
(byte*) init_plot_tables::yoffs#2
(byte*) init_plot_tables::yoffs#3
(byte*) init_plot_tables::yoffs#4
(void()) init_screen()
(byte*~) init_screen::$0
(boolean~) init_screen::$1
(byte*~) init_screen::$2
(boolean~) init_screen::$3
(label) init_screen::@1
(label) init_screen::@2
(label) init_screen::@3
(label) init_screen::@return
(byte*) init_screen::b
(byte*) init_screen::b#0
(byte*) init_screen::b#1
(byte*) init_screen::b#2
(byte*) init_screen::c
(byte*) init_screen::c#0
(byte*) init_screen::c#1
(byte*) init_screen::c#2
(void()) line((byte) line::x0 , (byte) line::x1 , (byte) line::y0 , (byte) line::y1)
(boolean~) line::$0
(boolean~) line::$1
(byte~) line::$10
(boolean~) line::$11
(boolean~) line::$12
(byte~) line::$15
(boolean~) line::$16
(boolean~) line::$17
(byte~) line::$18
(boolean~) line::$19
(byte~) line::$2
(boolean~) line::$20
(byte~) line::$23
(boolean~) line::$24
(boolean~) line::$25
(boolean~) line::$3
(boolean~) line::$4
(byte~) line::$5
(boolean~) line::$6
(boolean~) line::$7
(label) line::@1
(label) line::@10
(label) line::@13
(label) line::@15
(label) line::@16
(label) line::@17
(label) line::@2
(label) line::@20
(label) line::@23
(label) line::@24
(label) line::@27
(label) line::@29
(label) line::@3
(label) line::@30
(label) line::@31
(label) line::@32
(label) line::@33
(label) line::@34
(label) line::@35
(label) line::@36
(label) line::@6
(label) line::@9
(label) line::@return
(byte) line::x0
(byte) line::x0#0
(byte) line::x0#1
(byte) line::x0#10
(byte) line::x0#11
(byte) line::x0#12
(byte) line::x0#13
(byte) line::x0#2
(byte) line::x0#3
(byte) line::x0#4
(byte) line::x0#5
(byte) line::x0#6
(byte) line::x0#7
(byte) line::x0#8
(byte) line::x0#9
(byte) line::x1
(byte) line::x1#0
(byte) line::x1#1
(byte) line::x1#10
(byte) line::x1#11
(byte) line::x1#12
(byte) line::x1#13
(byte) line::x1#2
(byte) line::x1#3
(byte) line::x1#4
(byte) line::x1#5
(byte) line::x1#6
(byte) line::x1#7
(byte) line::x1#8
(byte) line::x1#9
(byte) line::xd
(byte) line::xd#0
(byte) line::xd#1
(byte) line::xd#10
(byte) line::xd#11
(byte) line::xd#12
(byte) line::xd#13
(byte) line::xd#2
(byte) line::xd#3
(byte) line::xd#4
(byte) line::xd#5
(byte) line::xd#6
(byte) line::xd#7
(byte) line::xd#8
(byte) line::xd#9
(byte) line::y0
(byte) line::y0#0
(byte) line::y0#1
(byte) line::y0#10
(byte) line::y0#11
(byte) line::y0#12
(byte) line::y0#13
(byte) line::y0#2
(byte) line::y0#3
(byte) line::y0#4
(byte) line::y0#5
(byte) line::y0#6
(byte) line::y0#7
(byte) line::y0#8
(byte) line::y0#9
(byte) line::y1
(byte) line::y1#0
(byte) line::y1#1
(byte) line::y1#10
(byte) line::y1#11
(byte) line::y1#12
(byte) line::y1#13
(byte) line::y1#2
(byte) line::y1#3
(byte) line::y1#4
(byte) line::y1#5
(byte) line::y1#6
(byte) line::y1#7
(byte) line::y1#8
(byte) line::y1#9
(byte) line::yd
(byte) line::yd#0
(byte) line::yd#1
(byte) line::yd#10
(byte) line::yd#11
(byte) line::yd#2
(byte) line::yd#3
(byte) line::yd#4
(byte) line::yd#5
(byte) line::yd#6
(byte) line::yd#7
(byte) line::yd#8
(byte) line::yd#9
(void()) line_xdyd((byte) line_xdyd::x , (byte) line_xdyd::y , (byte) line_xdyd::x1 , (byte) line_xdyd::xd , (byte) line_xdyd::yd)
(byte~) line_xdyd::$0
(byte~) line_xdyd::$2
(byte~) line_xdyd::$3
(boolean~) line_xdyd::$4
(boolean~) line_xdyd::$5
(byte~) line_xdyd::$6
(byte~) line_xdyd::$7
(byte~) line_xdyd::$8
(boolean~) line_xdyd::$9
(label) line_xdyd::@1
(label) line_xdyd::@2
(label) line_xdyd::@3
(label) line_xdyd::@5
(label) line_xdyd::@return
(byte) line_xdyd::e
(byte) line_xdyd::e#0
(byte) line_xdyd::e#1
(byte) line_xdyd::e#2
(byte) line_xdyd::e#3
(byte) line_xdyd::e#4
(byte) line_xdyd::e#5
(byte) line_xdyd::e#6
(byte) line_xdyd::x
(byte) line_xdyd::x#0
(byte) line_xdyd::x#1
(byte) line_xdyd::x#2
(byte) line_xdyd::x#3
(byte) line_xdyd::x#4
(byte) line_xdyd::x#5
(byte) line_xdyd::x#6
(byte) line_xdyd::x#7
(byte) line_xdyd::x1
(byte) line_xdyd::x1#0
(byte) line_xdyd::x1#1
(byte) line_xdyd::x1#2
(byte) line_xdyd::x1#3
(byte) line_xdyd::x1#4
(byte) line_xdyd::x1#5
(byte) line_xdyd::x1#6
(byte) line_xdyd::xd
(byte) line_xdyd::xd#0
(byte) line_xdyd::xd#1
(byte) line_xdyd::xd#2
(byte) line_xdyd::xd#3
(byte) line_xdyd::xd#4
(byte) line_xdyd::xd#5
(byte) line_xdyd::xd#6
(byte) line_xdyd::y
(byte) line_xdyd::y#0
(byte) line_xdyd::y#1
(byte) line_xdyd::y#2
(byte) line_xdyd::y#3
(byte) line_xdyd::y#4
(byte) line_xdyd::y#5
(byte) line_xdyd::y#6
(byte) line_xdyd::y#7
(byte) line_xdyd::yd
(byte) line_xdyd::yd#0
(byte) line_xdyd::yd#1
(byte) line_xdyd::yd#2
(byte) line_xdyd::yd#3
(byte) line_xdyd::yd#4
(byte) line_xdyd::yd#5
(byte) line_xdyd::yd#6
(void()) line_xdyi((byte) line_xdyi::x , (byte) line_xdyi::y , (byte) line_xdyi::x1 , (byte) line_xdyi::xd , (byte) line_xdyi::yd)
(byte~) line_xdyi::$0
(byte~) line_xdyi::$2
(byte~) line_xdyi::$3
(boolean~) line_xdyi::$4
(boolean~) line_xdyi::$5
(byte~) line_xdyi::$6
(byte~) line_xdyi::$7
(byte~) line_xdyi::$8
(boolean~) line_xdyi::$9
(label) line_xdyi::@1
(label) line_xdyi::@2
(label) line_xdyi::@3
(label) line_xdyi::@5
(label) line_xdyi::@return
(byte) line_xdyi::e
(byte) line_xdyi::e#0
(byte) line_xdyi::e#1
(byte) line_xdyi::e#2
(byte) line_xdyi::e#3
(byte) line_xdyi::e#4
(byte) line_xdyi::e#5
(byte) line_xdyi::e#6
(byte) line_xdyi::x
(byte) line_xdyi::x#0
(byte) line_xdyi::x#1
(byte) line_xdyi::x#2
(byte) line_xdyi::x#3
(byte) line_xdyi::x#4
(byte) line_xdyi::x#5
(byte) line_xdyi::x#6
(byte) line_xdyi::x#7
(byte) line_xdyi::x1
(byte) line_xdyi::x1#0
(byte) line_xdyi::x1#1
(byte) line_xdyi::x1#2
(byte) line_xdyi::x1#3
(byte) line_xdyi::x1#4
(byte) line_xdyi::x1#5
(byte) line_xdyi::x1#6
(byte) line_xdyi::xd
(byte) line_xdyi::xd#0
(byte) line_xdyi::xd#1
(byte) line_xdyi::xd#2
(byte) line_xdyi::xd#3
(byte) line_xdyi::xd#4
(byte) line_xdyi::xd#5
(byte) line_xdyi::xd#6
(byte) line_xdyi::y
(byte) line_xdyi::y#0
(byte) line_xdyi::y#1
(byte) line_xdyi::y#2
(byte) line_xdyi::y#3
(byte) line_xdyi::y#4
(byte) line_xdyi::y#5
(byte) line_xdyi::y#6
(byte) line_xdyi::y#7
(byte) line_xdyi::yd
(byte) line_xdyi::yd#0
(byte) line_xdyi::yd#1
(byte) line_xdyi::yd#2
(byte) line_xdyi::yd#3
(byte) line_xdyi::yd#4
(byte) line_xdyi::yd#5
(byte) line_xdyi::yd#6
(void()) line_ydxd((byte) line_ydxd::y , (byte) line_ydxd::x , (byte) line_ydxd::y1 , (byte) line_ydxd::yd , (byte) line_ydxd::xd)
(byte~) line_ydxd::$0
(byte~) line_ydxd::$2
(byte~) line_ydxd::$3
(boolean~) line_ydxd::$4
(boolean~) line_ydxd::$5
(byte~) line_ydxd::$6
(byte~) line_ydxd::$7
(byte~) line_ydxd::$8
(boolean~) line_ydxd::$9
(label) line_ydxd::@1
(label) line_ydxd::@2
(label) line_ydxd::@3
(label) line_ydxd::@5
(label) line_ydxd::@return
(byte) line_ydxd::e
(byte) line_ydxd::e#0
(byte) line_ydxd::e#1
(byte) line_ydxd::e#2
(byte) line_ydxd::e#3
(byte) line_ydxd::e#4
(byte) line_ydxd::e#5
(byte) line_ydxd::e#6
(byte) line_ydxd::x
(byte) line_ydxd::x#0
(byte) line_ydxd::x#1
(byte) line_ydxd::x#2
(byte) line_ydxd::x#3
(byte) line_ydxd::x#4
(byte) line_ydxd::x#5
(byte) line_ydxd::x#6
(byte) line_ydxd::x#7
(byte) line_ydxd::xd
(byte) line_ydxd::xd#0
(byte) line_ydxd::xd#1
(byte) line_ydxd::xd#2
(byte) line_ydxd::xd#3
(byte) line_ydxd::xd#4
(byte) line_ydxd::xd#5
(byte) line_ydxd::xd#6
(byte) line_ydxd::y
(byte) line_ydxd::y#0
(byte) line_ydxd::y#1
(byte) line_ydxd::y#2
(byte) line_ydxd::y#3
(byte) line_ydxd::y#4
(byte) line_ydxd::y#5
(byte) line_ydxd::y#6
(byte) line_ydxd::y#7
(byte) line_ydxd::y1
(byte) line_ydxd::y1#0
(byte) line_ydxd::y1#1
(byte) line_ydxd::y1#2
(byte) line_ydxd::y1#3
(byte) line_ydxd::y1#4
(byte) line_ydxd::y1#5
(byte) line_ydxd::y1#6
(byte) line_ydxd::yd
(byte) line_ydxd::yd#0
(byte) line_ydxd::yd#1
(byte) line_ydxd::yd#2
(byte) line_ydxd::yd#3
(byte) line_ydxd::yd#4
(byte) line_ydxd::yd#5
(byte) line_ydxd::yd#6
(void()) line_ydxi((byte) line_ydxi::y , (byte) line_ydxi::x , (byte) line_ydxi::y1 , (byte) line_ydxi::yd , (byte) line_ydxi::xd)
(byte~) line_ydxi::$0
(byte~) line_ydxi::$2
(byte~) line_ydxi::$3
(boolean~) line_ydxi::$4
(boolean~) line_ydxi::$5
(byte~) line_ydxi::$6
(byte~) line_ydxi::$7
(byte~) line_ydxi::$8
(boolean~) line_ydxi::$9
(label) line_ydxi::@1
(label) line_ydxi::@2
(label) line_ydxi::@3
(label) line_ydxi::@5
(label) line_ydxi::@return
(byte) line_ydxi::e
(byte) line_ydxi::e#0
(byte) line_ydxi::e#1
(byte) line_ydxi::e#2
(byte) line_ydxi::e#3
(byte) line_ydxi::e#4
(byte) line_ydxi::e#5
(byte) line_ydxi::e#6
(byte) line_ydxi::x
(byte) line_ydxi::x#0
(byte) line_ydxi::x#1
(byte) line_ydxi::x#2
(byte) line_ydxi::x#3
(byte) line_ydxi::x#4
(byte) line_ydxi::x#5
(byte) line_ydxi::x#6
(byte) line_ydxi::x#7
(byte) line_ydxi::xd
(byte) line_ydxi::xd#0
(byte) line_ydxi::xd#1
(byte) line_ydxi::xd#2
(byte) line_ydxi::xd#3
(byte) line_ydxi::xd#4
(byte) line_ydxi::xd#5
(byte) line_ydxi::xd#6
(byte) line_ydxi::y
(byte) line_ydxi::y#0
(byte) line_ydxi::y#1
(byte) line_ydxi::y#2
(byte) line_ydxi::y#3
(byte) line_ydxi::y#4
(byte) line_ydxi::y#5
(byte) line_ydxi::y#6
(byte) line_ydxi::y#7
(byte) line_ydxi::y1
(byte) line_ydxi::y1#0
(byte) line_ydxi::y1#1
(byte) line_ydxi::y1#2
(byte) line_ydxi::y1#3
(byte) line_ydxi::y1#4
(byte) line_ydxi::y1#5
(byte) line_ydxi::y1#6
(byte) line_ydxi::yd
(byte) line_ydxi::yd#0
(byte) line_ydxi::yd#1
(byte) line_ydxi::yd#2
(byte) line_ydxi::yd#3
(byte) line_ydxi::yd#4
(byte) line_ydxi::yd#5
(byte) line_ydxi::yd#6
(void()) lines()
(byte~) lines::$0
(byte~) lines::$1
(byte~) lines::$2
(byte~) lines::$3
(byte~) lines::$4
(byte~) lines::$5
(boolean~) lines::$7
(label) lines::@1
(label) lines::@3
(label) lines::@return
(byte) lines::l
(byte) lines::l#0
(byte) lines::l#1
(byte) lines::l#2
(byte) lines::l#3
(byte) lines_cnt
(byte) lines_cnt#0
(byte) lines_cnt#1
(byte) lines_cnt#2
(byte) lines_cnt#3
(byte) lines_cnt#4
(byte) lines_cnt#5
(byte) lines_cnt#6
(byte) lines_cnt#7
(byte) lines_cnt#8
(byte) lines_cnt#9
(byte[]) lines_x
(byte[]) lines_x#0
(byte[]) lines_x#1
(byte[]) lines_x#2
(byte[]) lines_x#3
(byte[]) lines_x#4
(byte[]) lines_x#5
(byte[]) lines_x#6
(byte[]) lines_x#7
(byte[]) lines_x#8
(byte[]) lines_x#9
(byte[]) lines_y
(byte[]) lines_y#0
(byte[]) lines_y#1
(byte[]) lines_y#2
(byte[]) lines_y#3
(byte[]) lines_y#4
(byte[]) lines_y#5
(byte[]) lines_y#6
(byte[]) lines_y#7
(byte[]) lines_y#8
(byte[]) lines_y#9
(void()) main()
(byte~) main::$0
(byte~) main::$1
(byte~) main::$2
(label) main::@1
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@return
(void()) plot((byte) plot::x , (byte) plot::y)
(byte~) plot::$0
(byte~) plot::$1
(byte~) plot::$2
(byte~) plot::$3
(byte*~) plot::$4
(byte~) plot::$5
(byte~) plot::$6
(label) plot::@return
(byte*) plot::plotter
(byte*) plot::plotter#0
(byte*) plot::plotter_x
(byte*) plot::plotter_x#0
(byte*) plot::plotter_x#1
(byte*) plot::plotter_x#2
(word) plot::plotter_y
(word) plot::plotter_y#0
(word) plot::plotter_y#1
(word) plot::plotter_y#2
(byte) plot::x
(byte) plot::x#0
(byte) plot::x#1
(byte) plot::x#2
(byte) plot::x#3
(byte) plot::x#4
(byte) plot::y
(byte) plot::y#0
(byte) plot::y#1
(byte) plot::y#2
(byte) plot::y#3
(byte) plot::y#4
(byte[]) plot_bit
(byte[]) plot_bit#0
(byte[]) plot_bit#1
(byte[]) plot_bit#10
(byte[]) plot_bit#11
(byte[]) plot_bit#12
(byte[]) plot_bit#13
(byte[]) plot_bit#14
(byte[]) plot_bit#15
(byte[]) plot_bit#16
(byte[]) plot_bit#17
(byte[]) plot_bit#18
(byte[]) plot_bit#19
(byte[]) plot_bit#2
(byte[]) plot_bit#20
(byte[]) plot_bit#21
(byte[]) plot_bit#22
(byte[]) plot_bit#23
(byte[]) plot_bit#24
(byte[]) plot_bit#25
(byte[]) plot_bit#26
(byte[]) plot_bit#27
(byte[]) plot_bit#28
(byte[]) plot_bit#29
(byte[]) plot_bit#3
(byte[]) plot_bit#30
(byte[]) plot_bit#31
(byte[]) plot_bit#32
(byte[]) plot_bit#33
(byte[]) plot_bit#34
(byte[]) plot_bit#35
(byte[]) plot_bit#36
(byte[]) plot_bit#37
(byte[]) plot_bit#38
(byte[]) plot_bit#39
(byte[]) plot_bit#4
(byte[]) plot_bit#40
(byte[]) plot_bit#41
(byte[]) plot_bit#42
(byte[]) plot_bit#43
(byte[]) plot_bit#44
(byte[]) plot_bit#45
(byte[]) plot_bit#46
(byte[]) plot_bit#47
(byte[]) plot_bit#48
(byte[]) plot_bit#49
(byte[]) plot_bit#5
(byte[]) plot_bit#6
(byte[]) plot_bit#7
(byte[]) plot_bit#8
(byte[]) plot_bit#9
(byte[]) plot_xhi
(byte[]) plot_xhi#0
(byte[]) plot_xhi#1
(byte[]) plot_xhi#10
(byte[]) plot_xhi#11
(byte[]) plot_xhi#12
(byte[]) plot_xhi#13
(byte[]) plot_xhi#14
(byte[]) plot_xhi#15
(byte[]) plot_xhi#16
(byte[]) plot_xhi#17
(byte[]) plot_xhi#18
(byte[]) plot_xhi#19
(byte[]) plot_xhi#2
(byte[]) plot_xhi#20
(byte[]) plot_xhi#21
(byte[]) plot_xhi#22
(byte[]) plot_xhi#23
(byte[]) plot_xhi#24
(byte[]) plot_xhi#25
(byte[]) plot_xhi#26
(byte[]) plot_xhi#27
(byte[]) plot_xhi#28
(byte[]) plot_xhi#29
(byte[]) plot_xhi#3
(byte[]) plot_xhi#30
(byte[]) plot_xhi#31
(byte[]) plot_xhi#32
(byte[]) plot_xhi#33
(byte[]) plot_xhi#34
(byte[]) plot_xhi#35
(byte[]) plot_xhi#36
(byte[]) plot_xhi#37
(byte[]) plot_xhi#38
(byte[]) plot_xhi#39
(byte[]) plot_xhi#4
(byte[]) plot_xhi#40
(byte[]) plot_xhi#41
(byte[]) plot_xhi#42
(byte[]) plot_xhi#43
(byte[]) plot_xhi#44
(byte[]) plot_xhi#45
(byte[]) plot_xhi#46
(byte[]) plot_xhi#47
(byte[]) plot_xhi#48
(byte[]) plot_xhi#49
(byte[]) plot_xhi#5
(byte[]) plot_xhi#6
(byte[]) plot_xhi#7
(byte[]) plot_xhi#8
(byte[]) plot_xhi#9
(byte[]) plot_xlo
(byte[]) plot_xlo#0
(byte[]) plot_xlo#1
(byte[]) plot_xlo#10
(byte[]) plot_xlo#11
(byte[]) plot_xlo#12
(byte[]) plot_xlo#13
(byte[]) plot_xlo#14
(byte[]) plot_xlo#15
(byte[]) plot_xlo#16
(byte[]) plot_xlo#17
(byte[]) plot_xlo#18
(byte[]) plot_xlo#19
(byte[]) plot_xlo#2
(byte[]) plot_xlo#20
(byte[]) plot_xlo#21
(byte[]) plot_xlo#22
(byte[]) plot_xlo#23
(byte[]) plot_xlo#24
(byte[]) plot_xlo#25
(byte[]) plot_xlo#26
(byte[]) plot_xlo#27
(byte[]) plot_xlo#28
(byte[]) plot_xlo#29
(byte[]) plot_xlo#3
(byte[]) plot_xlo#30
(byte[]) plot_xlo#31
(byte[]) plot_xlo#32
(byte[]) plot_xlo#33
(byte[]) plot_xlo#34
(byte[]) plot_xlo#35
(byte[]) plot_xlo#36
(byte[]) plot_xlo#37
(byte[]) plot_xlo#38
(byte[]) plot_xlo#39
(byte[]) plot_xlo#4
(byte[]) plot_xlo#40
(byte[]) plot_xlo#41
(byte[]) plot_xlo#42
(byte[]) plot_xlo#43
(byte[]) plot_xlo#44
(byte[]) plot_xlo#45
(byte[]) plot_xlo#46
(byte[]) plot_xlo#47
(byte[]) plot_xlo#48
(byte[]) plot_xlo#49
(byte[]) plot_xlo#5
(byte[]) plot_xlo#6
(byte[]) plot_xlo#7
(byte[]) plot_xlo#8
(byte[]) plot_xlo#9
(byte[]) plot_yhi
(byte[]) plot_yhi#0
(byte[]) plot_yhi#1
(byte[]) plot_yhi#10
(byte[]) plot_yhi#11
(byte[]) plot_yhi#12
(byte[]) plot_yhi#13
(byte[]) plot_yhi#14
(byte[]) plot_yhi#15
(byte[]) plot_yhi#16
(byte[]) plot_yhi#17
(byte[]) plot_yhi#18
(byte[]) plot_yhi#19
(byte[]) plot_yhi#2
(byte[]) plot_yhi#20
(byte[]) plot_yhi#21
(byte[]) plot_yhi#22
(byte[]) plot_yhi#23
(byte[]) plot_yhi#24
(byte[]) plot_yhi#25
(byte[]) plot_yhi#26
(byte[]) plot_yhi#27
(byte[]) plot_yhi#28
(byte[]) plot_yhi#29
(byte[]) plot_yhi#3
(byte[]) plot_yhi#30
(byte[]) plot_yhi#31
(byte[]) plot_yhi#32
(byte[]) plot_yhi#33
(byte[]) plot_yhi#34
(byte[]) plot_yhi#35
(byte[]) plot_yhi#36
(byte[]) plot_yhi#37
(byte[]) plot_yhi#38
(byte[]) plot_yhi#39
(byte[]) plot_yhi#4
(byte[]) plot_yhi#40
(byte[]) plot_yhi#41
(byte[]) plot_yhi#42
(byte[]) plot_yhi#43
(byte[]) plot_yhi#44
(byte[]) plot_yhi#45
(byte[]) plot_yhi#46
(byte[]) plot_yhi#47
(byte[]) plot_yhi#48
(byte[]) plot_yhi#49
(byte[]) plot_yhi#5
(byte[]) plot_yhi#50
(byte[]) plot_yhi#51
(byte[]) plot_yhi#52
(byte[]) plot_yhi#53
(byte[]) plot_yhi#6
(byte[]) plot_yhi#7
(byte[]) plot_yhi#8
(byte[]) plot_yhi#9
(byte[]) plot_ylo
(byte[]) plot_ylo#0
(byte[]) plot_ylo#1
(byte[]) plot_ylo#10
(byte[]) plot_ylo#11
(byte[]) plot_ylo#12
(byte[]) plot_ylo#13
(byte[]) plot_ylo#14
(byte[]) plot_ylo#15
(byte[]) plot_ylo#16
(byte[]) plot_ylo#17
(byte[]) plot_ylo#18
(byte[]) plot_ylo#19
(byte[]) plot_ylo#2
(byte[]) plot_ylo#20
(byte[]) plot_ylo#21
(byte[]) plot_ylo#22
(byte[]) plot_ylo#23
(byte[]) plot_ylo#24
(byte[]) plot_ylo#25
(byte[]) plot_ylo#26
(byte[]) plot_ylo#27
(byte[]) plot_ylo#28
(byte[]) plot_ylo#29
(byte[]) plot_ylo#3
(byte[]) plot_ylo#30
(byte[]) plot_ylo#31
(byte[]) plot_ylo#32
(byte[]) plot_ylo#33
(byte[]) plot_ylo#34
(byte[]) plot_ylo#35
(byte[]) plot_ylo#36
(byte[]) plot_ylo#37
(byte[]) plot_ylo#38
(byte[]) plot_ylo#39
(byte[]) plot_ylo#4
(byte[]) plot_ylo#40
(byte[]) plot_ylo#41
(byte[]) plot_ylo#42
(byte[]) plot_ylo#43
(byte[]) plot_ylo#44
(byte[]) plot_ylo#45
(byte[]) plot_ylo#46
(byte[]) plot_ylo#47
(byte[]) plot_ylo#48
(byte[]) plot_ylo#49
(byte[]) plot_ylo#5
(byte[]) plot_ylo#50
(byte[]) plot_ylo#51
(byte[]) plot_ylo#52
(byte[]) plot_ylo#53
(byte[]) plot_ylo#6
(byte[]) plot_ylo#7
(byte[]) plot_ylo#8
(byte[]) plot_ylo#9

Culled Empty Block (label) line::@29
Culled Empty Block (label) line::@30
Culled Empty Block (label) line::@31
Culled Empty Block (label) line::@32
Culled Empty Block (label) line::@33
Culled Empty Block (label) line::@34
Culled Empty Block (label) line::@35
Culled Empty Block (label) line::@36
Culled Empty Block (label) @11
Succesful SSA optimization Pass2CullEmptyBlocks
CONTROL FLOW GRAPH
@begin: scope:[]  from
  (byte*) BGCOL#0 ← ((byte*)) (word) 53280
  (byte*) FGCOL#0 ← ((byte*)) (word) 53281
  (byte*) D018#0 ← ((byte*)) (word) 53272
  (byte*) D011#0 ← ((byte*)) (word) 53265
  (byte) BMM#0 ← (byte/signed byte/word/signed word) 32
  (byte) DEN#0 ← (byte/signed byte/word/signed word) 16
  (byte) RSEL#0 ← (byte/signed byte/word/signed word) 8
  (byte*) SCREEN#0 ← ((byte*)) (word/signed word) 1024
  (byte*) BITMAP#0 ← ((byte*)) (word/signed word) 8192
  (byte[]) plot_xlo#0 ← ((byte*)) (word/signed word) 4096
  (byte[]) plot_xhi#0 ← ((byte*)) (word/signed word) 4352
  (byte[]) plot_ylo#0 ← ((byte*)) (word/signed word) 4608
  (byte[]) plot_yhi#0 ← ((byte*)) (word/signed word) 4864
  (byte[]) plot_bit#0 ← ((byte*)) (word/signed word) 5120
  (byte[]) lines_x#0 ← { (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60 }
  (byte[]) lines_y#0 ← { (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10 }
  (byte) lines_cnt#0 ← (byte/signed byte/word/signed word) 8
  to:@10
main: scope:[main]  from @10
  (byte[]) plot_yhi#45 ← phi( @10/(byte[]) plot_yhi#47 )
  (byte[]) plot_ylo#45 ← phi( @10/(byte[]) plot_ylo#47 )
  (byte) lines_cnt#8 ← phi( @10/(byte) lines_cnt#9 )
  (byte[]) lines_y#8 ← phi( @10/(byte[]) lines_y#9 )
  (byte[]) lines_x#8 ← phi( @10/(byte[]) lines_x#9 )
  (byte*) SCREEN#5 ← phi( @10/(byte*) SCREEN#6 )
  (byte[]) plot_bit#19 ← phi( @10/(byte[]) plot_bit#36 )
  (byte[]) plot_xhi#19 ← phi( @10/(byte[]) plot_xhi#36 )
  (byte[]) plot_xlo#19 ← phi( @10/(byte[]) plot_xlo#36 )
  (byte*) BITMAP#6 ← phi( @10/(byte*) BITMAP#7 )
  (byte*) D018#1 ← phi( @10/(byte*) D018#2 )
  (byte*) D011#1 ← phi( @10/(byte*) D011#2 )
  (byte) RSEL#1 ← phi( @10/(byte) RSEL#2 )
  (byte) DEN#1 ← phi( @10/(byte) DEN#2 )
  (byte) BMM#1 ← phi( @10/(byte) BMM#2 )
  (byte*) FGCOL#1 ← phi( @10/(byte*) FGCOL#2 )
  (byte*) BGCOL#1 ← phi( @10/(byte*) BGCOL#2 )
  *((byte*) BGCOL#1) ← (byte/signed byte/word/signed word) 0
  *((byte*) FGCOL#1) ← (byte/signed byte/word/signed word) 0
  (byte~) main::$0 ← (byte) BMM#1 | (byte) DEN#1
  (byte~) main::$1 ← (byte~) main::$0 | (byte) RSEL#1
  (byte~) main::$2 ← (byte~) main::$1 | (byte/signed byte/word/signed word) 3
  *((byte*) D011#1) ← (byte~) main::$2
  *((byte*) D018#1) ← (byte/signed byte/word/signed word) 24
  call init_screen param-assignment
  to:main::@3
main::@3: scope:[main]  from main
  (byte[]) plot_yhi#44 ← phi( main/(byte[]) plot_yhi#45 )
  (byte[]) plot_ylo#44 ← phi( main/(byte[]) plot_ylo#45 )
  (byte) lines_cnt#7 ← phi( main/(byte) lines_cnt#8 )
  (byte[]) lines_y#7 ← phi( main/(byte[]) lines_y#8 )
  (byte[]) lines_x#7 ← phi( main/(byte[]) lines_x#8 )
  (byte[]) plot_bit#17 ← phi( main/(byte[]) plot_bit#19 )
  (byte[]) plot_xhi#17 ← phi( main/(byte[]) plot_xhi#19 )
  (byte*) BITMAP#8 ← phi( main/(byte*) BITMAP#6 )
  (byte[]) plot_xlo#17 ← phi( main/(byte[]) plot_xlo#19 )
  call init_plot_tables param-assignment
  to:main::@4
main::@4: scope:[main]  from main::@3
  (byte[]) plot_bit#48 ← phi( main::@3/(byte[]) plot_bit#17 )
  (byte[]) plot_ylo#52 ← phi( main::@3/(byte[]) plot_ylo#44 )
  (byte[]) plot_yhi#52 ← phi( main::@3/(byte[]) plot_yhi#44 )
  (byte[]) plot_xlo#48 ← phi( main::@3/(byte[]) plot_xlo#17 )
  (byte[]) plot_xhi#48 ← phi( main::@3/(byte[]) plot_xhi#17 )
  (byte) lines_cnt#5 ← phi( main::@3/(byte) lines_cnt#7 )
  (byte[]) lines_y#5 ← phi( main::@3/(byte[]) lines_y#7 )
  (byte[]) lines_x#5 ← phi( main::@3/(byte[]) lines_x#7 )
  to:main::@1
main::@1: scope:[main]  from main::@4 main::@5
  (byte[]) plot_bit#47 ← phi( main::@4/(byte[]) plot_bit#48 main::@5/(byte[]) plot_bit#49 )
  (byte[]) plot_ylo#51 ← phi( main::@4/(byte[]) plot_ylo#52 main::@5/(byte[]) plot_ylo#53 )
  (byte[]) plot_yhi#51 ← phi( main::@4/(byte[]) plot_yhi#52 main::@5/(byte[]) plot_yhi#53 )
  (byte[]) plot_xlo#47 ← phi( main::@4/(byte[]) plot_xlo#48 main::@5/(byte[]) plot_xlo#49 )
  (byte[]) plot_xhi#47 ← phi( main::@4/(byte[]) plot_xhi#48 main::@5/(byte[]) plot_xhi#49 )
  (byte) lines_cnt#4 ← phi( main::@4/(byte) lines_cnt#5 main::@5/(byte) lines_cnt#6 )
  (byte[]) lines_y#4 ← phi( main::@4/(byte[]) lines_y#5 main::@5/(byte[]) lines_y#6 )
  (byte[]) lines_x#4 ← phi( main::@4/(byte[]) lines_x#5 main::@5/(byte[]) lines_x#6 )
  call lines param-assignment
  to:main::@5
main::@5: scope:[main]  from main::@1
  (byte[]) plot_bit#49 ← phi( main::@1/(byte[]) plot_bit#47 )
  (byte[]) plot_ylo#53 ← phi( main::@1/(byte[]) plot_ylo#51 )
  (byte[]) plot_yhi#53 ← phi( main::@1/(byte[]) plot_yhi#51 )
  (byte[]) plot_xlo#49 ← phi( main::@1/(byte[]) plot_xlo#47 )
  (byte[]) plot_xhi#49 ← phi( main::@1/(byte[]) plot_xhi#47 )
  (byte) lines_cnt#6 ← phi( main::@1/(byte) lines_cnt#4 )
  (byte[]) lines_y#6 ← phi( main::@1/(byte[]) lines_y#4 )
  (byte[]) lines_x#6 ← phi( main::@1/(byte[]) lines_x#4 )
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@5
  return 
  to:@return
lines: scope:[lines]  from main::@1
  (byte[]) plot_bit#45 ← phi( main::@1/(byte[]) plot_bit#47 )
  (byte[]) plot_ylo#49 ← phi( main::@1/(byte[]) plot_ylo#51 )
  (byte[]) plot_yhi#49 ← phi( main::@1/(byte[]) plot_yhi#51 )
  (byte[]) plot_xlo#45 ← phi( main::@1/(byte[]) plot_xlo#47 )
  (byte[]) plot_xhi#45 ← phi( main::@1/(byte[]) plot_xhi#47 )
  (byte) lines_cnt#3 ← phi( main::@1/(byte) lines_cnt#4 )
  (byte[]) lines_y#2 ← phi( main::@1/(byte[]) lines_y#4 )
  (byte[]) lines_x#2 ← phi( main::@1/(byte[]) lines_x#4 )
  (byte) lines::l#0 ← (byte/signed byte/word/signed word) 0
  to:lines::@1
lines::@1: scope:[lines]  from lines lines::@3
  (byte[]) plot_bit#44 ← phi( lines/(byte[]) plot_bit#45 lines::@3/(byte[]) plot_bit#46 )
  (byte[]) plot_ylo#48 ← phi( lines/(byte[]) plot_ylo#49 lines::@3/(byte[]) plot_ylo#50 )
  (byte[]) plot_yhi#48 ← phi( lines/(byte[]) plot_yhi#49 lines::@3/(byte[]) plot_yhi#50 )
  (byte[]) plot_xlo#44 ← phi( lines/(byte[]) plot_xlo#45 lines::@3/(byte[]) plot_xlo#46 )
  (byte[]) plot_xhi#44 ← phi( lines/(byte[]) plot_xhi#45 lines::@3/(byte[]) plot_xhi#46 )
  (byte) lines_cnt#2 ← phi( lines/(byte) lines_cnt#3 lines::@3/(byte) lines_cnt#1 )
  (byte[]) lines_y#1 ← phi( lines/(byte[]) lines_y#2 lines::@3/(byte[]) lines_y#3 )
  (byte) lines::l#2 ← phi( lines/(byte) lines::l#0 lines::@3/(byte) lines::l#1 )
  (byte[]) lines_x#1 ← phi( lines/(byte[]) lines_x#2 lines::@3/(byte[]) lines_x#3 )
  (byte~) lines::$0 ← (byte[]) lines_x#1 *idx (byte) lines::l#2
  (byte~) lines::$1 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$2 ← (byte[]) lines_x#1 *idx (byte~) lines::$1
  (byte~) lines::$3 ← (byte[]) lines_y#1 *idx (byte) lines::l#2
  (byte~) lines::$4 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$5 ← (byte[]) lines_y#1 *idx (byte~) lines::$4
  (byte) line::x0#0 ← (byte~) lines::$0
  (byte) line::x1#0 ← (byte~) lines::$2
  (byte) line::y0#0 ← (byte~) lines::$3
  (byte) line::y1#0 ← (byte~) lines::$5
  call line param-assignment
  to:lines::@3
lines::@3: scope:[lines]  from lines::@1
  (byte[]) plot_bit#46 ← phi( lines::@1/(byte[]) plot_bit#44 )
  (byte[]) plot_ylo#50 ← phi( lines::@1/(byte[]) plot_ylo#48 )
  (byte[]) plot_yhi#50 ← phi( lines::@1/(byte[]) plot_yhi#48 )
  (byte[]) plot_xlo#46 ← phi( lines::@1/(byte[]) plot_xlo#44 )
  (byte[]) plot_xhi#46 ← phi( lines::@1/(byte[]) plot_xhi#44 )
  (byte[]) lines_y#3 ← phi( lines::@1/(byte[]) lines_y#1 )
  (byte[]) lines_x#3 ← phi( lines::@1/(byte[]) lines_x#1 )
  (byte) lines_cnt#1 ← phi( lines::@1/(byte) lines_cnt#2 )
  (byte) lines::l#3 ← phi( lines::@1/(byte) lines::l#2 )
  (byte) lines::l#1 ← ++ (byte) lines::l#3
  (boolean~) lines::$7 ← (byte) lines::l#1 < (byte) lines_cnt#1
  if((boolean~) lines::$7) goto lines::@1
  to:lines::@return
lines::@return: scope:[lines]  from lines::@3
  return 
  to:@return
line: scope:[line]  from lines::@1
  (byte[]) plot_bit#43 ← phi( lines::@1/(byte[]) plot_bit#44 )
  (byte[]) plot_ylo#46 ← phi( lines::@1/(byte[]) plot_ylo#48 )
  (byte[]) plot_yhi#46 ← phi( lines::@1/(byte[]) plot_yhi#48 )
  (byte[]) plot_xlo#43 ← phi( lines::@1/(byte[]) plot_xlo#44 )
  (byte[]) plot_xhi#43 ← phi( lines::@1/(byte[]) plot_xhi#44 )
  (byte) line::y1#13 ← phi( lines::@1/(byte) line::y1#0 )
  (byte) line::y0#13 ← phi( lines::@1/(byte) line::y0#0 )
  (byte) line::x1#1 ← phi( lines::@1/(byte) line::x1#0 )
  (byte) line::x0#1 ← phi( lines::@1/(byte) line::x0#0 )
  (boolean~) line::$0 ← (byte) line::x0#1 < (byte) line::x1#1
  (boolean~) line::$1 ← ! (boolean~) line::$0
  if((boolean~) line::$1) goto line::@1
  to:line::@15
line::@1: scope:[line]  from line
  (byte[]) plot_bit#42 ← phi( line/(byte[]) plot_bit#43 )
  (byte[]) plot_ylo#43 ← phi( line/(byte[]) plot_ylo#46 )
  (byte[]) plot_yhi#43 ← phi( line/(byte[]) plot_yhi#46 )
  (byte[]) plot_xlo#42 ← phi( line/(byte[]) plot_xlo#43 )
  (byte[]) plot_xhi#42 ← phi( line/(byte[]) plot_xhi#43 )
  (byte) line::y1#1 ← phi( line/(byte) line::y1#13 )
  (byte) line::y0#1 ← phi( line/(byte) line::y0#13 )
  (byte) line::x1#2 ← phi( line/(byte) line::x1#1 )
  (byte) line::x0#2 ← phi( line/(byte) line::x0#1 )
  (byte~) line::$15 ← (byte) line::x0#2 - (byte) line::x1#2
  (byte) line::xd#0 ← (byte~) line::$15
  (boolean~) line::$16 ← (byte) line::y0#1 < (byte) line::y1#1
  (boolean~) line::$17 ← ! (boolean~) line::$16
  if((boolean~) line::$17) goto line::@9
  to:line::@23
line::@15: scope:[line]  from line
  (byte[]) plot_bit#41 ← phi( line/(byte[]) plot_bit#43 )
  (byte[]) plot_ylo#42 ← phi( line/(byte[]) plot_ylo#46 )
  (byte[]) plot_yhi#42 ← phi( line/(byte[]) plot_yhi#46 )
  (byte[]) plot_xlo#41 ← phi( line/(byte[]) plot_xlo#43 )
  (byte[]) plot_xhi#41 ← phi( line/(byte[]) plot_xhi#43 )
  (byte) line::y1#2 ← phi( line/(byte) line::y1#13 )
  (byte) line::y0#2 ← phi( line/(byte) line::y0#13 )
  (byte) line::x0#3 ← phi( line/(byte) line::x0#1 )
  (byte) line::x1#3 ← phi( line/(byte) line::x1#1 )
  (byte~) line::$2 ← (byte) line::x1#3 - (byte) line::x0#3
  (byte) line::xd#1 ← (byte~) line::$2
  (boolean~) line::$3 ← (byte) line::y0#2 < (byte) line::y1#2
  (boolean~) line::$4 ← ! (boolean~) line::$3
  if((boolean~) line::$4) goto line::@2
  to:line::@16
line::@2: scope:[line]  from line::@15
  (byte[]) plot_bit#38 ← phi( line::@15/(byte[]) plot_bit#41 )
  (byte[]) plot_ylo#38 ← phi( line::@15/(byte[]) plot_ylo#42 )
  (byte[]) plot_yhi#38 ← phi( line::@15/(byte[]) plot_yhi#42 )
  (byte[]) plot_xlo#38 ← phi( line::@15/(byte[]) plot_xlo#41 )
  (byte[]) plot_xhi#38 ← phi( line::@15/(byte[]) plot_xhi#41 )
  (byte) line::x0#11 ← phi( line::@15/(byte) line::x0#3 )
  (byte) line::x1#11 ← phi( line::@15/(byte) line::x1#3 )
  (byte) line::xd#2 ← phi( line::@15/(byte) line::xd#1 )
  (byte) line::y1#3 ← phi( line::@15/(byte) line::y1#2 )
  (byte) line::y0#3 ← phi( line::@15/(byte) line::y0#2 )
  (byte~) line::$10 ← (byte) line::y0#3 - (byte) line::y1#3
  (byte) line::yd#0 ← (byte~) line::$10
  (boolean~) line::$11 ← (byte) line::yd#0 < (byte) line::xd#2
  (boolean~) line::$12 ← ! (boolean~) line::$11
  if((boolean~) line::$12) goto line::@6
  to:line::@20
line::@16: scope:[line]  from line::@15
  (byte[]) plot_bit#37 ← phi( line::@15/(byte[]) plot_bit#41 )
  (byte[]) plot_ylo#37 ← phi( line::@15/(byte[]) plot_ylo#42 )
  (byte[]) plot_yhi#37 ← phi( line::@15/(byte[]) plot_yhi#42 )
  (byte[]) plot_xlo#37 ← phi( line::@15/(byte[]) plot_xlo#41 )
  (byte[]) plot_xhi#37 ← phi( line::@15/(byte[]) plot_xhi#41 )
  (byte) line::x1#10 ← phi( line::@15/(byte) line::x1#3 )
  (byte) line::x0#10 ← phi( line::@15/(byte) line::x0#3 )
  (byte) line::xd#3 ← phi( line::@15/(byte) line::xd#1 )
  (byte) line::y0#4 ← phi( line::@15/(byte) line::y0#2 )
  (byte) line::y1#4 ← phi( line::@15/(byte) line::y1#2 )
  (byte~) line::$5 ← (byte) line::y1#4 - (byte) line::y0#4
  (byte) line::yd#1 ← (byte~) line::$5
  (boolean~) line::$6 ← (byte) line::yd#1 < (byte) line::xd#3
  (boolean~) line::$7 ← ! (boolean~) line::$6
  if((boolean~) line::$7) goto line::@3
  to:line::@17
line::@3: scope:[line]  from line::@16
  (byte[]) plot_bit#29 ← phi( line::@16/(byte[]) plot_bit#37 )
  (byte[]) plot_ylo#28 ← phi( line::@16/(byte[]) plot_ylo#37 )
  (byte[]) plot_yhi#28 ← phi( line::@16/(byte[]) plot_yhi#37 )
  (byte[]) plot_xlo#29 ← phi( line::@16/(byte[]) plot_xlo#37 )
  (byte[]) plot_xhi#29 ← phi( line::@16/(byte[]) plot_xhi#37 )
  (byte) line::xd#4 ← phi( line::@16/(byte) line::xd#3 )
  (byte) line::yd#4 ← phi( line::@16/(byte) line::yd#1 )
  (byte) line::y1#5 ← phi( line::@16/(byte) line::y1#4 )
  (byte) line::x0#4 ← phi( line::@16/(byte) line::x0#10 )
  (byte) line::y0#5 ← phi( line::@16/(byte) line::y0#4 )
  (byte) line_ydxi::y#0 ← (byte) line::y0#5
  (byte) line_ydxi::x#0 ← (byte) line::x0#4
  (byte) line_ydxi::y1#0 ← (byte) line::y1#5
  (byte) line_ydxi::yd#0 ← (byte) line::yd#4
  (byte) line_ydxi::xd#0 ← (byte) line::xd#4
  call line_ydxi param-assignment
  to:line::@return
line::@17: scope:[line]  from line::@16
  (byte[]) plot_bit#20 ← phi( line::@16/(byte[]) plot_bit#37 )
  (byte[]) plot_ylo#19 ← phi( line::@16/(byte[]) plot_ylo#37 )
  (byte[]) plot_yhi#19 ← phi( line::@16/(byte[]) plot_yhi#37 )
  (byte[]) plot_xlo#20 ← phi( line::@16/(byte[]) plot_xlo#37 )
  (byte[]) plot_xhi#20 ← phi( line::@16/(byte[]) plot_xhi#37 )
  (byte) line::yd#5 ← phi( line::@16/(byte) line::yd#1 )
  (byte) line::xd#5 ← phi( line::@16/(byte) line::xd#3 )
  (byte) line::x1#4 ← phi( line::@16/(byte) line::x1#10 )
  (byte) line::y0#6 ← phi( line::@16/(byte) line::y0#4 )
  (byte) line::x0#5 ← phi( line::@16/(byte) line::x0#10 )
  (byte) line_xdyi::x#0 ← (byte) line::x0#5
  (byte) line_xdyi::y#0 ← (byte) line::y0#6
  (byte) line_xdyi::x1#0 ← (byte) line::x1#4
  (byte) line_xdyi::xd#0 ← (byte) line::xd#5
  (byte) line_xdyi::yd#0 ← (byte) line::yd#5
  call line_xdyi param-assignment
  to:line::@return
line::@6: scope:[line]  from line::@2
  (byte[]) plot_bit#33 ← phi( line::@2/(byte[]) plot_bit#38 )
  (byte[]) plot_ylo#32 ← phi( line::@2/(byte[]) plot_ylo#38 )
  (byte[]) plot_yhi#32 ← phi( line::@2/(byte[]) plot_yhi#38 )
  (byte[]) plot_xlo#33 ← phi( line::@2/(byte[]) plot_xlo#38 )
  (byte[]) plot_xhi#33 ← phi( line::@2/(byte[]) plot_xhi#38 )
  (byte) line::xd#6 ← phi( line::@2/(byte) line::xd#2 )
  (byte) line::yd#6 ← phi( line::@2/(byte) line::yd#0 )
  (byte) line::y0#7 ← phi( line::@2/(byte) line::y0#3 )
  (byte) line::x1#5 ← phi( line::@2/(byte) line::x1#11 )
  (byte) line::y1#6 ← phi( line::@2/(byte) line::y1#3 )
  (byte) line_ydxd::y#0 ← (byte) line::y1#6
  (byte) line_ydxd::x#0 ← (byte) line::x1#5
  (byte) line_ydxd::y1#0 ← (byte) line::y0#7
  (byte) line_ydxd::yd#0 ← (byte) line::yd#6
  (byte) line_ydxd::xd#0 ← (byte) line::xd#6
  call line_ydxd param-assignment
  to:line::@return
line::@20: scope:[line]  from line::@2
  (byte[]) plot_bit#24 ← phi( line::@2/(byte[]) plot_bit#38 )
  (byte[]) plot_ylo#23 ← phi( line::@2/(byte[]) plot_ylo#38 )
  (byte[]) plot_yhi#23 ← phi( line::@2/(byte[]) plot_yhi#38 )
  (byte[]) plot_xlo#24 ← phi( line::@2/(byte[]) plot_xlo#38 )
  (byte[]) plot_xhi#24 ← phi( line::@2/(byte[]) plot_xhi#38 )
  (byte) line::yd#7 ← phi( line::@2/(byte) line::yd#0 )
  (byte) line::xd#7 ← phi( line::@2/(byte) line::xd#2 )
  (byte) line::x1#6 ← phi( line::@2/(byte) line::x1#11 )
  (byte) line::y0#8 ← phi( line::@2/(byte) line::y0#3 )
  (byte) line::x0#6 ← phi( line::@2/(byte) line::x0#11 )
  (byte) line_xdyd::x#0 ← (byte) line::x0#6
  (byte) line_xdyd::y#0 ← (byte) line::y0#8
  (byte) line_xdyd::x1#0 ← (byte) line::x1#6
  (byte) line_xdyd::xd#0 ← (byte) line::xd#7
  (byte) line_xdyd::yd#0 ← (byte) line::yd#7
  call line_xdyd param-assignment
  to:line::@return
line::@9: scope:[line]  from line::@1
  (byte[]) plot_bit#40 ← phi( line::@1/(byte[]) plot_bit#42 )
  (byte[]) plot_ylo#40 ← phi( line::@1/(byte[]) plot_ylo#43 )
  (byte[]) plot_yhi#40 ← phi( line::@1/(byte[]) plot_yhi#43 )
  (byte[]) plot_xlo#40 ← phi( line::@1/(byte[]) plot_xlo#42 )
  (byte[]) plot_xhi#40 ← phi( line::@1/(byte[]) plot_xhi#42 )
  (byte) line::x0#13 ← phi( line::@1/(byte) line::x0#2 )
  (byte) line::x1#13 ← phi( line::@1/(byte) line::x1#2 )
  (byte) line::xd#8 ← phi( line::@1/(byte) line::xd#0 )
  (byte) line::y1#7 ← phi( line::@1/(byte) line::y1#1 )
  (byte) line::y0#9 ← phi( line::@1/(byte) line::y0#1 )
  (byte~) line::$23 ← (byte) line::y0#9 - (byte) line::y1#7
  (byte) line::yd#2 ← (byte~) line::$23
  (boolean~) line::$24 ← (byte) line::yd#2 < (byte) line::xd#8
  (boolean~) line::$25 ← ! (boolean~) line::$24
  if((boolean~) line::$25) goto line::@13
  to:line::@27
line::@23: scope:[line]  from line::@1
  (byte[]) plot_bit#39 ← phi( line::@1/(byte[]) plot_bit#42 )
  (byte[]) plot_ylo#39 ← phi( line::@1/(byte[]) plot_ylo#43 )
  (byte[]) plot_yhi#39 ← phi( line::@1/(byte[]) plot_yhi#43 )
  (byte[]) plot_xlo#39 ← phi( line::@1/(byte[]) plot_xlo#42 )
  (byte[]) plot_xhi#39 ← phi( line::@1/(byte[]) plot_xhi#42 )
  (byte) line::x1#12 ← phi( line::@1/(byte) line::x1#2 )
  (byte) line::x0#12 ← phi( line::@1/(byte) line::x0#2 )
  (byte) line::xd#9 ← phi( line::@1/(byte) line::xd#0 )
  (byte) line::y0#10 ← phi( line::@1/(byte) line::y0#1 )
  (byte) line::y1#8 ← phi( line::@1/(byte) line::y1#1 )
  (byte~) line::$18 ← (byte) line::y1#8 - (byte) line::y0#10
  (byte) line::yd#3 ← (byte~) line::$18
  (boolean~) line::$19 ← (byte) line::yd#3 < (byte) line::xd#9
  (boolean~) line::$20 ← ! (boolean~) line::$19
  if((boolean~) line::$20) goto line::@10
  to:line::@24
line::@10: scope:[line]  from line::@23
  (byte[]) plot_bit#32 ← phi( line::@23/(byte[]) plot_bit#39 )
  (byte[]) plot_ylo#31 ← phi( line::@23/(byte[]) plot_ylo#39 )
  (byte[]) plot_yhi#31 ← phi( line::@23/(byte[]) plot_yhi#39 )
  (byte[]) plot_xlo#32 ← phi( line::@23/(byte[]) plot_xlo#39 )
  (byte[]) plot_xhi#32 ← phi( line::@23/(byte[]) plot_xhi#39 )
  (byte) line::xd#10 ← phi( line::@23/(byte) line::xd#9 )
  (byte) line::yd#8 ← phi( line::@23/(byte) line::yd#3 )
  (byte) line::y1#9 ← phi( line::@23/(byte) line::y1#8 )
  (byte) line::x0#7 ← phi( line::@23/(byte) line::x0#12 )
  (byte) line::y0#11 ← phi( line::@23/(byte) line::y0#10 )
  (byte) line_ydxd::y#1 ← (byte) line::y0#11
  (byte) line_ydxd::x#1 ← (byte) line::x0#7
  (byte) line_ydxd::y1#1 ← (byte) line::y1#9
  (byte) line_ydxd::yd#1 ← (byte) line::yd#8
  (byte) line_ydxd::xd#1 ← (byte) line::xd#10
  call line_ydxd param-assignment
  to:line::@return
line::@24: scope:[line]  from line::@23
  (byte[]) plot_bit#25 ← phi( line::@23/(byte[]) plot_bit#39 )
  (byte[]) plot_ylo#24 ← phi( line::@23/(byte[]) plot_ylo#39 )
  (byte[]) plot_yhi#24 ← phi( line::@23/(byte[]) plot_yhi#39 )
  (byte[]) plot_xlo#25 ← phi( line::@23/(byte[]) plot_xlo#39 )
  (byte[]) plot_xhi#25 ← phi( line::@23/(byte[]) plot_xhi#39 )
  (byte) line::yd#9 ← phi( line::@23/(byte) line::yd#3 )
  (byte) line::xd#11 ← phi( line::@23/(byte) line::xd#9 )
  (byte) line::x0#8 ← phi( line::@23/(byte) line::x0#12 )
  (byte) line::y1#10 ← phi( line::@23/(byte) line::y1#8 )
  (byte) line::x1#7 ← phi( line::@23/(byte) line::x1#12 )
  (byte) line_xdyd::x#1 ← (byte) line::x1#7
  (byte) line_xdyd::y#1 ← (byte) line::y1#10
  (byte) line_xdyd::x1#1 ← (byte) line::x0#8
  (byte) line_xdyd::xd#1 ← (byte) line::xd#11
  (byte) line_xdyd::yd#1 ← (byte) line::yd#9
  call line_xdyd param-assignment
  to:line::@return
line::@13: scope:[line]  from line::@9
  (byte[]) plot_bit#28 ← phi( line::@9/(byte[]) plot_bit#40 )
  (byte[]) plot_ylo#27 ← phi( line::@9/(byte[]) plot_ylo#40 )
  (byte[]) plot_yhi#27 ← phi( line::@9/(byte[]) plot_yhi#40 )
  (byte[]) plot_xlo#28 ← phi( line::@9/(byte[]) plot_xlo#40 )
  (byte[]) plot_xhi#28 ← phi( line::@9/(byte[]) plot_xhi#40 )
  (byte) line::xd#12 ← phi( line::@9/(byte) line::xd#8 )
  (byte) line::yd#10 ← phi( line::@9/(byte) line::yd#2 )
  (byte) line::y0#12 ← phi( line::@9/(byte) line::y0#9 )
  (byte) line::x1#8 ← phi( line::@9/(byte) line::x1#13 )
  (byte) line::y1#11 ← phi( line::@9/(byte) line::y1#7 )
  (byte) line_ydxi::y#1 ← (byte) line::y1#11
  (byte) line_ydxi::x#1 ← (byte) line::x1#8
  (byte) line_ydxi::y1#1 ← (byte) line::y0#12
  (byte) line_ydxi::yd#1 ← (byte) line::yd#10
  (byte) line_ydxi::xd#1 ← (byte) line::xd#12
  call line_ydxi param-assignment
  to:line::@return
line::@27: scope:[line]  from line::@9
  (byte[]) plot_bit#21 ← phi( line::@9/(byte[]) plot_bit#40 )
  (byte[]) plot_ylo#20 ← phi( line::@9/(byte[]) plot_ylo#40 )
  (byte[]) plot_yhi#20 ← phi( line::@9/(byte[]) plot_yhi#40 )
  (byte[]) plot_xlo#21 ← phi( line::@9/(byte[]) plot_xlo#40 )
  (byte[]) plot_xhi#21 ← phi( line::@9/(byte[]) plot_xhi#40 )
  (byte) line::yd#11 ← phi( line::@9/(byte) line::yd#2 )
  (byte) line::xd#13 ← phi( line::@9/(byte) line::xd#8 )
  (byte) line::x0#9 ← phi( line::@9/(byte) line::x0#13 )
  (byte) line::y1#12 ← phi( line::@9/(byte) line::y1#7 )
  (byte) line::x1#9 ← phi( line::@9/(byte) line::x1#13 )
  (byte) line_xdyi::x#1 ← (byte) line::x1#9
  (byte) line_xdyi::y#1 ← (byte) line::y1#12
  (byte) line_xdyi::x1#1 ← (byte) line::x0#9
  (byte) line_xdyi::xd#1 ← (byte) line::xd#13
  (byte) line_xdyi::yd#1 ← (byte) line::yd#11
  call line_xdyi param-assignment
  to:line::@return
line::@return: scope:[line]  from line::@10 line::@13 line::@17 line::@20 line::@24 line::@27 line::@3 line::@6
  return 
  to:@return
line_xdyi: scope:[line_xdyi]  from line::@17 line::@27
  (byte) line_xdyi::x1#6 ← phi( line::@17/(byte) line_xdyi::x1#0 line::@27/(byte) line_xdyi::x1#1 )
  (byte[]) plot_bit#9 ← phi( line::@17/(byte[]) plot_bit#20 line::@27/(byte[]) plot_bit#21 )
  (byte[]) plot_ylo#9 ← phi( line::@17/(byte[]) plot_ylo#19 line::@27/(byte[]) plot_ylo#20 )
  (byte[]) plot_yhi#9 ← phi( line::@17/(byte[]) plot_yhi#19 line::@27/(byte[]) plot_yhi#20 )
  (byte[]) plot_xlo#9 ← phi( line::@17/(byte[]) plot_xlo#20 line::@27/(byte[]) plot_xlo#21 )
  (byte[]) plot_xhi#9 ← phi( line::@17/(byte[]) plot_xhi#20 line::@27/(byte[]) plot_xhi#21 )
  (byte) line_xdyi::xd#5 ← phi( line::@17/(byte) line_xdyi::xd#0 line::@27/(byte) line_xdyi::xd#1 )
  (byte) line_xdyi::y#5 ← phi( line::@17/(byte) line_xdyi::y#0 line::@27/(byte) line_xdyi::y#1 )
  (byte) line_xdyi::x#6 ← phi( line::@17/(byte) line_xdyi::x#0 line::@27/(byte) line_xdyi::x#1 )
  (byte) line_xdyi::yd#2 ← phi( line::@17/(byte) line_xdyi::yd#0 line::@27/(byte) line_xdyi::yd#1 )
  (byte~) line_xdyi::$0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#0 ← (byte~) line_xdyi::$0
  to:line_xdyi::@1
line_xdyi::@1: scope:[line_xdyi]  from line_xdyi line_xdyi::@2
  (byte) line_xdyi::x1#5 ← phi( line_xdyi/(byte) line_xdyi::x1#6 line_xdyi::@2/(byte) line_xdyi::x1#2 )
  (byte[]) plot_bit#4 ← phi( line_xdyi/(byte[]) plot_bit#9 line_xdyi::@2/(byte[]) plot_bit#10 )
  (byte[]) plot_ylo#4 ← phi( line_xdyi/(byte[]) plot_ylo#9 line_xdyi::@2/(byte[]) plot_ylo#10 )
  (byte[]) plot_yhi#4 ← phi( line_xdyi/(byte[]) plot_yhi#9 line_xdyi::@2/(byte[]) plot_yhi#10 )
  (byte[]) plot_xlo#4 ← phi( line_xdyi/(byte[]) plot_xlo#9 line_xdyi::@2/(byte[]) plot_xlo#10 )
  (byte[]) plot_xhi#4 ← phi( line_xdyi/(byte[]) plot_xhi#9 line_xdyi::@2/(byte[]) plot_xhi#10 )
  (byte) line_xdyi::xd#4 ← phi( line_xdyi/(byte) line_xdyi::xd#5 line_xdyi::@2/(byte) line_xdyi::xd#6 )
  (byte) line_xdyi::yd#4 ← phi( line_xdyi/(byte) line_xdyi::yd#2 line_xdyi::@2/(byte) line_xdyi::yd#5 )
  (byte) line_xdyi::e#5 ← phi( line_xdyi/(byte) line_xdyi::e#0 line_xdyi::@2/(byte) line_xdyi::e#6 )
  (byte) line_xdyi::y#3 ← phi( line_xdyi/(byte) line_xdyi::y#5 line_xdyi::@2/(byte) line_xdyi::y#6 )
  (byte) line_xdyi::x#3 ← phi( line_xdyi/(byte) line_xdyi::x#6 line_xdyi::@2/(byte) line_xdyi::x#5 )
  (byte) plot::x#0 ← (byte) line_xdyi::x#3
  (byte) plot::y#0 ← (byte) line_xdyi::y#3
  call plot param-assignment
  to:line_xdyi::@5
line_xdyi::@5: scope:[line_xdyi]  from line_xdyi::@1
  (byte[]) plot_bit#23 ← phi( line_xdyi::@1/(byte[]) plot_bit#4 )
  (byte[]) plot_ylo#22 ← phi( line_xdyi::@1/(byte[]) plot_ylo#4 )
  (byte[]) plot_yhi#22 ← phi( line_xdyi::@1/(byte[]) plot_yhi#4 )
  (byte[]) plot_xlo#23 ← phi( line_xdyi::@1/(byte[]) plot_xlo#4 )
  (byte[]) plot_xhi#23 ← phi( line_xdyi::@1/(byte[]) plot_xhi#4 )
  (byte) line_xdyi::y#7 ← phi( line_xdyi::@1/(byte) line_xdyi::y#3 )
  (byte) line_xdyi::x1#4 ← phi( line_xdyi::@1/(byte) line_xdyi::x1#5 )
  (byte) line_xdyi::xd#2 ← phi( line_xdyi::@1/(byte) line_xdyi::xd#4 )
  (byte) line_xdyi::yd#3 ← phi( line_xdyi::@1/(byte) line_xdyi::yd#4 )
  (byte) line_xdyi::e#3 ← phi( line_xdyi::@1/(byte) line_xdyi::e#5 )
  (byte) line_xdyi::x#4 ← phi( line_xdyi::@1/(byte) line_xdyi::x#3 )
  (byte~) line_xdyi::$2 ← (byte) line_xdyi::x#4 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::x#2 ← (byte~) line_xdyi::$2
  (byte~) line_xdyi::$3 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#3
  (byte) line_xdyi::e#1 ← (byte~) line_xdyi::$3
  (boolean~) line_xdyi::$4 ← (byte) line_xdyi::xd#2 < (byte) line_xdyi::e#1
  (boolean~) line_xdyi::$5 ← ! (boolean~) line_xdyi::$4
  if((boolean~) line_xdyi::$5) goto line_xdyi::@2
  to:line_xdyi::@3
line_xdyi::@2: scope:[line_xdyi]  from line_xdyi::@3 line_xdyi::@5
  (byte[]) plot_bit#10 ← phi( line_xdyi::@3/(byte[]) plot_bit#22 line_xdyi::@5/(byte[]) plot_bit#23 )
  (byte[]) plot_ylo#10 ← phi( line_xdyi::@3/(byte[]) plot_ylo#21 line_xdyi::@5/(byte[]) plot_ylo#22 )
  (byte[]) plot_yhi#10 ← phi( line_xdyi::@3/(byte[]) plot_yhi#21 line_xdyi::@5/(byte[]) plot_yhi#22 )
  (byte[]) plot_xlo#10 ← phi( line_xdyi::@3/(byte[]) plot_xlo#22 line_xdyi::@5/(byte[]) plot_xlo#23 )
  (byte[]) plot_xhi#10 ← phi( line_xdyi::@3/(byte[]) plot_xhi#22 line_xdyi::@5/(byte[]) plot_xhi#23 )
  (byte) line_xdyi::xd#6 ← phi( line_xdyi::@3/(byte) line_xdyi::xd#3 line_xdyi::@5/(byte) line_xdyi::xd#2 )
  (byte) line_xdyi::yd#5 ← phi( line_xdyi::@3/(byte) line_xdyi::yd#6 line_xdyi::@5/(byte) line_xdyi::yd#3 )
  (byte) line_xdyi::e#6 ← phi( line_xdyi::@3/(byte) line_xdyi::e#2 line_xdyi::@5/(byte) line_xdyi::e#1 )
  (byte) line_xdyi::y#6 ← phi( line_xdyi::@3/(byte) line_xdyi::y#2 line_xdyi::@5/(byte) line_xdyi::y#7 )
  (byte) line_xdyi::x#5 ← phi( line_xdyi::@3/(byte) line_xdyi::x#7 line_xdyi::@5/(byte) line_xdyi::x#2 )
  (byte) line_xdyi::x1#2 ← phi( line_xdyi::@3/(byte) line_xdyi::x1#3 line_xdyi::@5/(byte) line_xdyi::x1#4 )
  (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyi::$9 ← (byte) line_xdyi::x#5 < (byte~) line_xdyi::$8
  if((boolean~) line_xdyi::$9) goto line_xdyi::@1
  to:line_xdyi::@return
line_xdyi::@3: scope:[line_xdyi]  from line_xdyi::@5
  (byte[]) plot_bit#22 ← phi( line_xdyi::@5/(byte[]) plot_bit#23 )
  (byte[]) plot_ylo#21 ← phi( line_xdyi::@5/(byte[]) plot_ylo#22 )
  (byte[]) plot_yhi#21 ← phi( line_xdyi::@5/(byte[]) plot_yhi#22 )
  (byte[]) plot_xlo#22 ← phi( line_xdyi::@5/(byte[]) plot_xlo#23 )
  (byte[]) plot_xhi#22 ← phi( line_xdyi::@5/(byte[]) plot_xhi#23 )
  (byte) line_xdyi::yd#6 ← phi( line_xdyi::@5/(byte) line_xdyi::yd#3 )
  (byte) line_xdyi::x#7 ← phi( line_xdyi::@5/(byte) line_xdyi::x#2 )
  (byte) line_xdyi::x1#3 ← phi( line_xdyi::@5/(byte) line_xdyi::x1#4 )
  (byte) line_xdyi::xd#3 ← phi( line_xdyi::@5/(byte) line_xdyi::xd#2 )
  (byte) line_xdyi::e#4 ← phi( line_xdyi::@5/(byte) line_xdyi::e#1 )
  (byte) line_xdyi::y#4 ← phi( line_xdyi::@5/(byte) line_xdyi::y#7 )
  (byte~) line_xdyi::$6 ← (byte) line_xdyi::y#4 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::y#2 ← (byte~) line_xdyi::$6
  (byte~) line_xdyi::$7 ← (byte) line_xdyi::e#4 - (byte) line_xdyi::xd#3
  (byte) line_xdyi::e#2 ← (byte~) line_xdyi::$7
  to:line_xdyi::@2
line_xdyi::@return: scope:[line_xdyi]  from line_xdyi::@2
  return 
  to:@return
line_xdyd: scope:[line_xdyd]  from line::@20 line::@24
  (byte) line_xdyd::x1#6 ← phi( line::@20/(byte) line_xdyd::x1#0 line::@24/(byte) line_xdyd::x1#1 )
  (byte[]) plot_bit#11 ← phi( line::@20/(byte[]) plot_bit#24 line::@24/(byte[]) plot_bit#25 )
  (byte[]) plot_ylo#11 ← phi( line::@20/(byte[]) plot_ylo#23 line::@24/(byte[]) plot_ylo#24 )
  (byte[]) plot_yhi#11 ← phi( line::@20/(byte[]) plot_yhi#23 line::@24/(byte[]) plot_yhi#24 )
  (byte[]) plot_xlo#11 ← phi( line::@20/(byte[]) plot_xlo#24 line::@24/(byte[]) plot_xlo#25 )
  (byte[]) plot_xhi#11 ← phi( line::@20/(byte[]) plot_xhi#24 line::@24/(byte[]) plot_xhi#25 )
  (byte) line_xdyd::xd#5 ← phi( line::@20/(byte) line_xdyd::xd#0 line::@24/(byte) line_xdyd::xd#1 )
  (byte) line_xdyd::y#5 ← phi( line::@20/(byte) line_xdyd::y#0 line::@24/(byte) line_xdyd::y#1 )
  (byte) line_xdyd::x#6 ← phi( line::@20/(byte) line_xdyd::x#0 line::@24/(byte) line_xdyd::x#1 )
  (byte) line_xdyd::yd#2 ← phi( line::@20/(byte) line_xdyd::yd#0 line::@24/(byte) line_xdyd::yd#1 )
  (byte~) line_xdyd::$0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#0 ← (byte~) line_xdyd::$0
  to:line_xdyd::@1
line_xdyd::@1: scope:[line_xdyd]  from line_xdyd line_xdyd::@2
  (byte) line_xdyd::x1#5 ← phi( line_xdyd/(byte) line_xdyd::x1#6 line_xdyd::@2/(byte) line_xdyd::x1#2 )
  (byte[]) plot_bit#3 ← phi( line_xdyd/(byte[]) plot_bit#11 line_xdyd::@2/(byte[]) plot_bit#12 )
  (byte[]) plot_ylo#3 ← phi( line_xdyd/(byte[]) plot_ylo#11 line_xdyd::@2/(byte[]) plot_ylo#12 )
  (byte[]) plot_yhi#3 ← phi( line_xdyd/(byte[]) plot_yhi#11 line_xdyd::@2/(byte[]) plot_yhi#12 )
  (byte[]) plot_xlo#3 ← phi( line_xdyd/(byte[]) plot_xlo#11 line_xdyd::@2/(byte[]) plot_xlo#12 )
  (byte[]) plot_xhi#3 ← phi( line_xdyd/(byte[]) plot_xhi#11 line_xdyd::@2/(byte[]) plot_xhi#12 )
  (byte) line_xdyd::xd#4 ← phi( line_xdyd/(byte) line_xdyd::xd#5 line_xdyd::@2/(byte) line_xdyd::xd#6 )
  (byte) line_xdyd::yd#4 ← phi( line_xdyd/(byte) line_xdyd::yd#2 line_xdyd::@2/(byte) line_xdyd::yd#5 )
  (byte) line_xdyd::e#5 ← phi( line_xdyd/(byte) line_xdyd::e#0 line_xdyd::@2/(byte) line_xdyd::e#6 )
  (byte) line_xdyd::y#3 ← phi( line_xdyd/(byte) line_xdyd::y#5 line_xdyd::@2/(byte) line_xdyd::y#6 )
  (byte) line_xdyd::x#3 ← phi( line_xdyd/(byte) line_xdyd::x#6 line_xdyd::@2/(byte) line_xdyd::x#5 )
  (byte) plot::x#1 ← (byte) line_xdyd::x#3
  (byte) plot::y#1 ← (byte) line_xdyd::y#3
  call plot param-assignment
  to:line_xdyd::@5
line_xdyd::@5: scope:[line_xdyd]  from line_xdyd::@1
  (byte[]) plot_bit#27 ← phi( line_xdyd::@1/(byte[]) plot_bit#3 )
  (byte[]) plot_ylo#26 ← phi( line_xdyd::@1/(byte[]) plot_ylo#3 )
  (byte[]) plot_yhi#26 ← phi( line_xdyd::@1/(byte[]) plot_yhi#3 )
  (byte[]) plot_xlo#27 ← phi( line_xdyd::@1/(byte[]) plot_xlo#3 )
  (byte[]) plot_xhi#27 ← phi( line_xdyd::@1/(byte[]) plot_xhi#3 )
  (byte) line_xdyd::y#7 ← phi( line_xdyd::@1/(byte) line_xdyd::y#3 )
  (byte) line_xdyd::x1#4 ← phi( line_xdyd::@1/(byte) line_xdyd::x1#5 )
  (byte) line_xdyd::xd#2 ← phi( line_xdyd::@1/(byte) line_xdyd::xd#4 )
  (byte) line_xdyd::yd#3 ← phi( line_xdyd::@1/(byte) line_xdyd::yd#4 )
  (byte) line_xdyd::e#3 ← phi( line_xdyd::@1/(byte) line_xdyd::e#5 )
  (byte) line_xdyd::x#4 ← phi( line_xdyd::@1/(byte) line_xdyd::x#3 )
  (byte~) line_xdyd::$2 ← (byte) line_xdyd::x#4 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::x#2 ← (byte~) line_xdyd::$2
  (byte~) line_xdyd::$3 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#3
  (byte) line_xdyd::e#1 ← (byte~) line_xdyd::$3
  (boolean~) line_xdyd::$4 ← (byte) line_xdyd::xd#2 < (byte) line_xdyd::e#1
  (boolean~) line_xdyd::$5 ← ! (boolean~) line_xdyd::$4
  if((boolean~) line_xdyd::$5) goto line_xdyd::@2
  to:line_xdyd::@3
line_xdyd::@2: scope:[line_xdyd]  from line_xdyd::@3 line_xdyd::@5
  (byte[]) plot_bit#12 ← phi( line_xdyd::@3/(byte[]) plot_bit#26 line_xdyd::@5/(byte[]) plot_bit#27 )
  (byte[]) plot_ylo#12 ← phi( line_xdyd::@3/(byte[]) plot_ylo#25 line_xdyd::@5/(byte[]) plot_ylo#26 )
  (byte[]) plot_yhi#12 ← phi( line_xdyd::@3/(byte[]) plot_yhi#25 line_xdyd::@5/(byte[]) plot_yhi#26 )
  (byte[]) plot_xlo#12 ← phi( line_xdyd::@3/(byte[]) plot_xlo#26 line_xdyd::@5/(byte[]) plot_xlo#27 )
  (byte[]) plot_xhi#12 ← phi( line_xdyd::@3/(byte[]) plot_xhi#26 line_xdyd::@5/(byte[]) plot_xhi#27 )
  (byte) line_xdyd::xd#6 ← phi( line_xdyd::@3/(byte) line_xdyd::xd#3 line_xdyd::@5/(byte) line_xdyd::xd#2 )
  (byte) line_xdyd::yd#5 ← phi( line_xdyd::@3/(byte) line_xdyd::yd#6 line_xdyd::@5/(byte) line_xdyd::yd#3 )
  (byte) line_xdyd::e#6 ← phi( line_xdyd::@3/(byte) line_xdyd::e#2 line_xdyd::@5/(byte) line_xdyd::e#1 )
  (byte) line_xdyd::y#6 ← phi( line_xdyd::@3/(byte) line_xdyd::y#2 line_xdyd::@5/(byte) line_xdyd::y#7 )
  (byte) line_xdyd::x#5 ← phi( line_xdyd::@3/(byte) line_xdyd::x#7 line_xdyd::@5/(byte) line_xdyd::x#2 )
  (byte) line_xdyd::x1#2 ← phi( line_xdyd::@3/(byte) line_xdyd::x1#3 line_xdyd::@5/(byte) line_xdyd::x1#4 )
  (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyd::$9 ← (byte) line_xdyd::x#5 < (byte~) line_xdyd::$8
  if((boolean~) line_xdyd::$9) goto line_xdyd::@1
  to:line_xdyd::@return
line_xdyd::@3: scope:[line_xdyd]  from line_xdyd::@5
  (byte[]) plot_bit#26 ← phi( line_xdyd::@5/(byte[]) plot_bit#27 )
  (byte[]) plot_ylo#25 ← phi( line_xdyd::@5/(byte[]) plot_ylo#26 )
  (byte[]) plot_yhi#25 ← phi( line_xdyd::@5/(byte[]) plot_yhi#26 )
  (byte[]) plot_xlo#26 ← phi( line_xdyd::@5/(byte[]) plot_xlo#27 )
  (byte[]) plot_xhi#26 ← phi( line_xdyd::@5/(byte[]) plot_xhi#27 )
  (byte) line_xdyd::yd#6 ← phi( line_xdyd::@5/(byte) line_xdyd::yd#3 )
  (byte) line_xdyd::x#7 ← phi( line_xdyd::@5/(byte) line_xdyd::x#2 )
  (byte) line_xdyd::x1#3 ← phi( line_xdyd::@5/(byte) line_xdyd::x1#4 )
  (byte) line_xdyd::xd#3 ← phi( line_xdyd::@5/(byte) line_xdyd::xd#2 )
  (byte) line_xdyd::e#4 ← phi( line_xdyd::@5/(byte) line_xdyd::e#1 )
  (byte) line_xdyd::y#4 ← phi( line_xdyd::@5/(byte) line_xdyd::y#7 )
  (byte~) line_xdyd::$6 ← (byte) line_xdyd::y#4 - (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::y#2 ← (byte~) line_xdyd::$6
  (byte~) line_xdyd::$7 ← (byte) line_xdyd::e#4 - (byte) line_xdyd::xd#3
  (byte) line_xdyd::e#2 ← (byte~) line_xdyd::$7
  to:line_xdyd::@2
line_xdyd::@return: scope:[line_xdyd]  from line_xdyd::@2
  return 
  to:@return
line_ydxi: scope:[line_ydxi]  from line::@13 line::@3
  (byte) line_ydxi::y1#6 ← phi( line::@13/(byte) line_ydxi::y1#1 line::@3/(byte) line_ydxi::y1#0 )
  (byte[]) plot_bit#13 ← phi( line::@13/(byte[]) plot_bit#28 line::@3/(byte[]) plot_bit#29 )
  (byte[]) plot_ylo#13 ← phi( line::@13/(byte[]) plot_ylo#27 line::@3/(byte[]) plot_ylo#28 )
  (byte[]) plot_yhi#13 ← phi( line::@13/(byte[]) plot_yhi#27 line::@3/(byte[]) plot_yhi#28 )
  (byte[]) plot_xlo#13 ← phi( line::@13/(byte[]) plot_xlo#28 line::@3/(byte[]) plot_xlo#29 )
  (byte[]) plot_xhi#13 ← phi( line::@13/(byte[]) plot_xhi#28 line::@3/(byte[]) plot_xhi#29 )
  (byte) line_ydxi::yd#5 ← phi( line::@13/(byte) line_ydxi::yd#1 line::@3/(byte) line_ydxi::yd#0 )
  (byte) line_ydxi::y#6 ← phi( line::@13/(byte) line_ydxi::y#1 line::@3/(byte) line_ydxi::y#0 )
  (byte) line_ydxi::x#5 ← phi( line::@13/(byte) line_ydxi::x#1 line::@3/(byte) line_ydxi::x#0 )
  (byte) line_ydxi::xd#2 ← phi( line::@13/(byte) line_ydxi::xd#1 line::@3/(byte) line_ydxi::xd#0 )
  (byte~) line_ydxi::$0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#0 ← (byte~) line_ydxi::$0
  to:line_ydxi::@1
line_ydxi::@1: scope:[line_ydxi]  from line_ydxi line_ydxi::@2
  (byte) line_ydxi::y1#5 ← phi( line_ydxi/(byte) line_ydxi::y1#6 line_ydxi::@2/(byte) line_ydxi::y1#2 )
  (byte[]) plot_bit#6 ← phi( line_ydxi/(byte[]) plot_bit#13 line_ydxi::@2/(byte[]) plot_bit#14 )
  (byte[]) plot_ylo#6 ← phi( line_ydxi/(byte[]) plot_ylo#13 line_ydxi::@2/(byte[]) plot_ylo#14 )
  (byte[]) plot_yhi#6 ← phi( line_ydxi/(byte[]) plot_yhi#13 line_ydxi::@2/(byte[]) plot_yhi#14 )
  (byte[]) plot_xlo#6 ← phi( line_ydxi/(byte[]) plot_xlo#13 line_ydxi::@2/(byte[]) plot_xlo#14 )
  (byte[]) plot_xhi#6 ← phi( line_ydxi/(byte[]) plot_xhi#13 line_ydxi::@2/(byte[]) plot_xhi#14 )
  (byte) line_ydxi::yd#4 ← phi( line_ydxi/(byte) line_ydxi::yd#5 line_ydxi::@2/(byte) line_ydxi::yd#6 )
  (byte) line_ydxi::xd#4 ← phi( line_ydxi/(byte) line_ydxi::xd#2 line_ydxi::@2/(byte) line_ydxi::xd#5 )
  (byte) line_ydxi::e#5 ← phi( line_ydxi/(byte) line_ydxi::e#0 line_ydxi::@2/(byte) line_ydxi::e#6 )
  (byte) line_ydxi::y#3 ← phi( line_ydxi/(byte) line_ydxi::y#6 line_ydxi::@2/(byte) line_ydxi::y#5 )
  (byte) line_ydxi::x#3 ← phi( line_ydxi/(byte) line_ydxi::x#5 line_ydxi::@2/(byte) line_ydxi::x#6 )
  (byte) plot::x#2 ← (byte) line_ydxi::x#3
  (byte) plot::y#2 ← (byte) line_ydxi::y#3
  call plot param-assignment
  to:line_ydxi::@5
line_ydxi::@5: scope:[line_ydxi]  from line_ydxi::@1
  (byte[]) plot_bit#31 ← phi( line_ydxi::@1/(byte[]) plot_bit#6 )
  (byte[]) plot_ylo#30 ← phi( line_ydxi::@1/(byte[]) plot_ylo#6 )
  (byte[]) plot_yhi#30 ← phi( line_ydxi::@1/(byte[]) plot_yhi#6 )
  (byte[]) plot_xlo#31 ← phi( line_ydxi::@1/(byte[]) plot_xlo#6 )
  (byte[]) plot_xhi#31 ← phi( line_ydxi::@1/(byte[]) plot_xhi#6 )
  (byte) line_ydxi::x#7 ← phi( line_ydxi::@1/(byte) line_ydxi::x#3 )
  (byte) line_ydxi::y1#4 ← phi( line_ydxi::@1/(byte) line_ydxi::y1#5 )
  (byte) line_ydxi::yd#2 ← phi( line_ydxi::@1/(byte) line_ydxi::yd#4 )
  (byte) line_ydxi::xd#3 ← phi( line_ydxi::@1/(byte) line_ydxi::xd#4 )
  (byte) line_ydxi::e#3 ← phi( line_ydxi::@1/(byte) line_ydxi::e#5 )
  (byte) line_ydxi::y#4 ← phi( line_ydxi::@1/(byte) line_ydxi::y#3 )
  (byte~) line_ydxi::$2 ← (byte) line_ydxi::y#4 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::y#2 ← (byte~) line_ydxi::$2
  (byte~) line_ydxi::$3 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#3
  (byte) line_ydxi::e#1 ← (byte~) line_ydxi::$3
  (boolean~) line_ydxi::$4 ← (byte) line_ydxi::yd#2 < (byte) line_ydxi::e#1
  (boolean~) line_ydxi::$5 ← ! (boolean~) line_ydxi::$4
  if((boolean~) line_ydxi::$5) goto line_ydxi::@2
  to:line_ydxi::@3
line_ydxi::@2: scope:[line_ydxi]  from line_ydxi::@3 line_ydxi::@5
  (byte[]) plot_bit#14 ← phi( line_ydxi::@3/(byte[]) plot_bit#30 line_ydxi::@5/(byte[]) plot_bit#31 )
  (byte[]) plot_ylo#14 ← phi( line_ydxi::@3/(byte[]) plot_ylo#29 line_ydxi::@5/(byte[]) plot_ylo#30 )
  (byte[]) plot_yhi#14 ← phi( line_ydxi::@3/(byte[]) plot_yhi#29 line_ydxi::@5/(byte[]) plot_yhi#30 )
  (byte[]) plot_xlo#14 ← phi( line_ydxi::@3/(byte[]) plot_xlo#30 line_ydxi::@5/(byte[]) plot_xlo#31 )
  (byte[]) plot_xhi#14 ← phi( line_ydxi::@3/(byte[]) plot_xhi#30 line_ydxi::@5/(byte[]) plot_xhi#31 )
  (byte) line_ydxi::yd#6 ← phi( line_ydxi::@3/(byte) line_ydxi::yd#3 line_ydxi::@5/(byte) line_ydxi::yd#2 )
  (byte) line_ydxi::xd#5 ← phi( line_ydxi::@3/(byte) line_ydxi::xd#6 line_ydxi::@5/(byte) line_ydxi::xd#3 )
  (byte) line_ydxi::e#6 ← phi( line_ydxi::@3/(byte) line_ydxi::e#2 line_ydxi::@5/(byte) line_ydxi::e#1 )
  (byte) line_ydxi::x#6 ← phi( line_ydxi::@3/(byte) line_ydxi::x#2 line_ydxi::@5/(byte) line_ydxi::x#7 )
  (byte) line_ydxi::y#5 ← phi( line_ydxi::@3/(byte) line_ydxi::y#7 line_ydxi::@5/(byte) line_ydxi::y#2 )
  (byte) line_ydxi::y1#2 ← phi( line_ydxi::@3/(byte) line_ydxi::y1#3 line_ydxi::@5/(byte) line_ydxi::y1#4 )
  (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxi::$9 ← (byte) line_ydxi::y#5 < (byte~) line_ydxi::$8
  if((boolean~) line_ydxi::$9) goto line_ydxi::@1
  to:line_ydxi::@return
line_ydxi::@3: scope:[line_ydxi]  from line_ydxi::@5
  (byte[]) plot_bit#30 ← phi( line_ydxi::@5/(byte[]) plot_bit#31 )
  (byte[]) plot_ylo#29 ← phi( line_ydxi::@5/(byte[]) plot_ylo#30 )
  (byte[]) plot_yhi#29 ← phi( line_ydxi::@5/(byte[]) plot_yhi#30 )
  (byte[]) plot_xlo#30 ← phi( line_ydxi::@5/(byte[]) plot_xlo#31 )
  (byte[]) plot_xhi#30 ← phi( line_ydxi::@5/(byte[]) plot_xhi#31 )
  (byte) line_ydxi::xd#6 ← phi( line_ydxi::@5/(byte) line_ydxi::xd#3 )
  (byte) line_ydxi::y#7 ← phi( line_ydxi::@5/(byte) line_ydxi::y#2 )
  (byte) line_ydxi::y1#3 ← phi( line_ydxi::@5/(byte) line_ydxi::y1#4 )
  (byte) line_ydxi::yd#3 ← phi( line_ydxi::@5/(byte) line_ydxi::yd#2 )
  (byte) line_ydxi::e#4 ← phi( line_ydxi::@5/(byte) line_ydxi::e#1 )
  (byte) line_ydxi::x#4 ← phi( line_ydxi::@5/(byte) line_ydxi::x#7 )
  (byte~) line_ydxi::$6 ← (byte) line_ydxi::x#4 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::x#2 ← (byte~) line_ydxi::$6
  (byte~) line_ydxi::$7 ← (byte) line_ydxi::e#4 - (byte) line_ydxi::yd#3
  (byte) line_ydxi::e#2 ← (byte~) line_ydxi::$7
  to:line_ydxi::@2
line_ydxi::@return: scope:[line_ydxi]  from line_ydxi::@2
  return 
  to:@return
line_ydxd: scope:[line_ydxd]  from line::@10 line::@6
  (byte) line_ydxd::y1#6 ← phi( line::@10/(byte) line_ydxd::y1#1 line::@6/(byte) line_ydxd::y1#0 )
  (byte[]) plot_bit#15 ← phi( line::@10/(byte[]) plot_bit#32 line::@6/(byte[]) plot_bit#33 )
  (byte[]) plot_ylo#15 ← phi( line::@10/(byte[]) plot_ylo#31 line::@6/(byte[]) plot_ylo#32 )
  (byte[]) plot_yhi#15 ← phi( line::@10/(byte[]) plot_yhi#31 line::@6/(byte[]) plot_yhi#32 )
  (byte[]) plot_xlo#15 ← phi( line::@10/(byte[]) plot_xlo#32 line::@6/(byte[]) plot_xlo#33 )
  (byte[]) plot_xhi#15 ← phi( line::@10/(byte[]) plot_xhi#32 line::@6/(byte[]) plot_xhi#33 )
  (byte) line_ydxd::yd#5 ← phi( line::@10/(byte) line_ydxd::yd#1 line::@6/(byte) line_ydxd::yd#0 )
  (byte) line_ydxd::y#6 ← phi( line::@10/(byte) line_ydxd::y#1 line::@6/(byte) line_ydxd::y#0 )
  (byte) line_ydxd::x#5 ← phi( line::@10/(byte) line_ydxd::x#1 line::@6/(byte) line_ydxd::x#0 )
  (byte) line_ydxd::xd#2 ← phi( line::@10/(byte) line_ydxd::xd#1 line::@6/(byte) line_ydxd::xd#0 )
  (byte~) line_ydxd::$0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#0 ← (byte~) line_ydxd::$0
  to:line_ydxd::@1
line_ydxd::@1: scope:[line_ydxd]  from line_ydxd line_ydxd::@2
  (byte) line_ydxd::y1#5 ← phi( line_ydxd/(byte) line_ydxd::y1#6 line_ydxd::@2/(byte) line_ydxd::y1#2 )
  (byte[]) plot_bit#5 ← phi( line_ydxd/(byte[]) plot_bit#15 line_ydxd::@2/(byte[]) plot_bit#16 )
  (byte[]) plot_ylo#5 ← phi( line_ydxd/(byte[]) plot_ylo#15 line_ydxd::@2/(byte[]) plot_ylo#16 )
  (byte[]) plot_yhi#5 ← phi( line_ydxd/(byte[]) plot_yhi#15 line_ydxd::@2/(byte[]) plot_yhi#16 )
  (byte[]) plot_xlo#5 ← phi( line_ydxd/(byte[]) plot_xlo#15 line_ydxd::@2/(byte[]) plot_xlo#16 )
  (byte[]) plot_xhi#5 ← phi( line_ydxd/(byte[]) plot_xhi#15 line_ydxd::@2/(byte[]) plot_xhi#16 )
  (byte) line_ydxd::yd#4 ← phi( line_ydxd/(byte) line_ydxd::yd#5 line_ydxd::@2/(byte) line_ydxd::yd#6 )
  (byte) line_ydxd::xd#4 ← phi( line_ydxd/(byte) line_ydxd::xd#2 line_ydxd::@2/(byte) line_ydxd::xd#5 )
  (byte) line_ydxd::e#5 ← phi( line_ydxd/(byte) line_ydxd::e#0 line_ydxd::@2/(byte) line_ydxd::e#6 )
  (byte) line_ydxd::y#3 ← phi( line_ydxd/(byte) line_ydxd::y#6 line_ydxd::@2/(byte) line_ydxd::y#5 )
  (byte) line_ydxd::x#3 ← phi( line_ydxd/(byte) line_ydxd::x#5 line_ydxd::@2/(byte) line_ydxd::x#6 )
  (byte) plot::x#3 ← (byte) line_ydxd::x#3
  (byte) plot::y#3 ← (byte) line_ydxd::y#3
  call plot param-assignment
  to:line_ydxd::@5
line_ydxd::@5: scope:[line_ydxd]  from line_ydxd::@1
  (byte[]) plot_bit#35 ← phi( line_ydxd::@1/(byte[]) plot_bit#5 )
  (byte[]) plot_ylo#34 ← phi( line_ydxd::@1/(byte[]) plot_ylo#5 )
  (byte[]) plot_yhi#34 ← phi( line_ydxd::@1/(byte[]) plot_yhi#5 )
  (byte[]) plot_xlo#35 ← phi( line_ydxd::@1/(byte[]) plot_xlo#5 )
  (byte[]) plot_xhi#35 ← phi( line_ydxd::@1/(byte[]) plot_xhi#5 )
  (byte) line_ydxd::x#7 ← phi( line_ydxd::@1/(byte) line_ydxd::x#3 )
  (byte) line_ydxd::y1#4 ← phi( line_ydxd::@1/(byte) line_ydxd::y1#5 )
  (byte) line_ydxd::yd#2 ← phi( line_ydxd::@1/(byte) line_ydxd::yd#4 )
  (byte) line_ydxd::xd#3 ← phi( line_ydxd::@1/(byte) line_ydxd::xd#4 )
  (byte) line_ydxd::e#3 ← phi( line_ydxd::@1/(byte) line_ydxd::e#5 )
  (byte) line_ydxd::y#4 ← phi( line_ydxd::@1/(byte) line_ydxd::y#3 )
  (byte~) line_ydxd::$2 ← (byte) line_ydxd::y#4 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::y#2 ← (byte~) line_ydxd::$2
  (byte~) line_ydxd::$3 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#3
  (byte) line_ydxd::e#1 ← (byte~) line_ydxd::$3
  (boolean~) line_ydxd::$4 ← (byte) line_ydxd::yd#2 < (byte) line_ydxd::e#1
  (boolean~) line_ydxd::$5 ← ! (boolean~) line_ydxd::$4
  if((boolean~) line_ydxd::$5) goto line_ydxd::@2
  to:line_ydxd::@3
line_ydxd::@2: scope:[line_ydxd]  from line_ydxd::@3 line_ydxd::@5
  (byte[]) plot_bit#16 ← phi( line_ydxd::@3/(byte[]) plot_bit#34 line_ydxd::@5/(byte[]) plot_bit#35 )
  (byte[]) plot_ylo#16 ← phi( line_ydxd::@3/(byte[]) plot_ylo#33 line_ydxd::@5/(byte[]) plot_ylo#34 )
  (byte[]) plot_yhi#16 ← phi( line_ydxd::@3/(byte[]) plot_yhi#33 line_ydxd::@5/(byte[]) plot_yhi#34 )
  (byte[]) plot_xlo#16 ← phi( line_ydxd::@3/(byte[]) plot_xlo#34 line_ydxd::@5/(byte[]) plot_xlo#35 )
  (byte[]) plot_xhi#16 ← phi( line_ydxd::@3/(byte[]) plot_xhi#34 line_ydxd::@5/(byte[]) plot_xhi#35 )
  (byte) line_ydxd::yd#6 ← phi( line_ydxd::@3/(byte) line_ydxd::yd#3 line_ydxd::@5/(byte) line_ydxd::yd#2 )
  (byte) line_ydxd::xd#5 ← phi( line_ydxd::@3/(byte) line_ydxd::xd#6 line_ydxd::@5/(byte) line_ydxd::xd#3 )
  (byte) line_ydxd::e#6 ← phi( line_ydxd::@3/(byte) line_ydxd::e#2 line_ydxd::@5/(byte) line_ydxd::e#1 )
  (byte) line_ydxd::x#6 ← phi( line_ydxd::@3/(byte) line_ydxd::x#2 line_ydxd::@5/(byte) line_ydxd::x#7 )
  (byte) line_ydxd::y#5 ← phi( line_ydxd::@3/(byte) line_ydxd::y#7 line_ydxd::@5/(byte) line_ydxd::y#2 )
  (byte) line_ydxd::y1#2 ← phi( line_ydxd::@3/(byte) line_ydxd::y1#3 line_ydxd::@5/(byte) line_ydxd::y1#4 )
  (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxd::$9 ← (byte) line_ydxd::y#5 < (byte~) line_ydxd::$8
  if((boolean~) line_ydxd::$9) goto line_ydxd::@1
  to:line_ydxd::@return
line_ydxd::@3: scope:[line_ydxd]  from line_ydxd::@5
  (byte[]) plot_bit#34 ← phi( line_ydxd::@5/(byte[]) plot_bit#35 )
  (byte[]) plot_ylo#33 ← phi( line_ydxd::@5/(byte[]) plot_ylo#34 )
  (byte[]) plot_yhi#33 ← phi( line_ydxd::@5/(byte[]) plot_yhi#34 )
  (byte[]) plot_xlo#34 ← phi( line_ydxd::@5/(byte[]) plot_xlo#35 )
  (byte[]) plot_xhi#34 ← phi( line_ydxd::@5/(byte[]) plot_xhi#35 )
  (byte) line_ydxd::xd#6 ← phi( line_ydxd::@5/(byte) line_ydxd::xd#3 )
  (byte) line_ydxd::y#7 ← phi( line_ydxd::@5/(byte) line_ydxd::y#2 )
  (byte) line_ydxd::y1#3 ← phi( line_ydxd::@5/(byte) line_ydxd::y1#4 )
  (byte) line_ydxd::yd#3 ← phi( line_ydxd::@5/(byte) line_ydxd::yd#2 )
  (byte) line_ydxd::e#4 ← phi( line_ydxd::@5/(byte) line_ydxd::e#1 )
  (byte) line_ydxd::x#4 ← phi( line_ydxd::@5/(byte) line_ydxd::x#7 )
  (byte~) line_ydxd::$6 ← (byte) line_ydxd::x#4 - (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::x#2 ← (byte~) line_ydxd::$6
  (byte~) line_ydxd::$7 ← (byte) line_ydxd::e#4 - (byte) line_ydxd::yd#3
  (byte) line_ydxd::e#2 ← (byte~) line_ydxd::$7
  to:line_ydxd::@2
line_ydxd::@return: scope:[line_ydxd]  from line_ydxd::@2
  return 
  to:@return
plot: scope:[plot]  from line_xdyd::@1 line_xdyi::@1 line_ydxd::@1 line_ydxi::@1
  (byte[]) plot_bit#1 ← phi( line_xdyd::@1/(byte[]) plot_bit#3 line_xdyi::@1/(byte[]) plot_bit#4 line_ydxd::@1/(byte[]) plot_bit#5 line_ydxi::@1/(byte[]) plot_bit#6 )
  (byte[]) plot_ylo#1 ← phi( line_xdyd::@1/(byte[]) plot_ylo#3 line_xdyi::@1/(byte[]) plot_ylo#4 line_ydxd::@1/(byte[]) plot_ylo#5 line_ydxi::@1/(byte[]) plot_ylo#6 )
  (byte) plot::y#4 ← phi( line_xdyd::@1/(byte) plot::y#1 line_xdyi::@1/(byte) plot::y#0 line_ydxd::@1/(byte) plot::y#3 line_ydxi::@1/(byte) plot::y#2 )
  (byte[]) plot_yhi#1 ← phi( line_xdyd::@1/(byte[]) plot_yhi#3 line_xdyi::@1/(byte[]) plot_yhi#4 line_ydxd::@1/(byte[]) plot_yhi#5 line_ydxi::@1/(byte[]) plot_yhi#6 )
  (byte[]) plot_xlo#1 ← phi( line_xdyd::@1/(byte[]) plot_xlo#3 line_xdyi::@1/(byte[]) plot_xlo#4 line_ydxd::@1/(byte[]) plot_xlo#5 line_ydxi::@1/(byte[]) plot_xlo#6 )
  (byte) plot::x#4 ← phi( line_xdyd::@1/(byte) plot::x#1 line_xdyi::@1/(byte) plot::x#0 line_ydxd::@1/(byte) plot::x#3 line_ydxi::@1/(byte) plot::x#2 )
  (byte[]) plot_xhi#1 ← phi( line_xdyd::@1/(byte[]) plot_xhi#3 line_xdyi::@1/(byte[]) plot_xhi#4 line_ydxd::@1/(byte[]) plot_xhi#5 line_ydxi::@1/(byte[]) plot_xhi#6 )
  (byte*) plot::plotter_x#0 ← ((byte*)) (byte/signed byte/word/signed word) 0
  (word) plot::plotter_y#0 ← (byte/signed byte/word/signed word) 0
  (byte~) plot::$0 ← (byte[]) plot_xhi#1 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#1 ← (byte*) plot::plotter_x#0 hi= (byte~) plot::$0
  (byte~) plot::$1 ← (byte[]) plot_xlo#1 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1
  (byte~) plot::$2 ← (byte[]) plot_yhi#1 *idx (byte) plot::y#4
  (word) plot::plotter_y#1 ← (word) plot::plotter_y#0 hi= (byte~) plot::$2
  (byte~) plot::$3 ← (byte[]) plot_ylo#1 *idx (byte) plot::y#4
  (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3
  (byte*~) plot::$4 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2
  (byte*) plot::plotter#0 ← (byte*~) plot::$4
  (byte~) plot::$5 ← (byte[]) plot_bit#1 *idx (byte) plot::x#4
  (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5
  *((byte*) plot::plotter#0) ← (byte~) plot::$6
  to:plot::@return
plot::@return: scope:[plot]  from plot
  return 
  to:@return
init_plot_tables: scope:[init_plot_tables]  from main::@3
  (byte[]) plot_yhi#41 ← phi( main::@3/(byte[]) plot_yhi#44 )
  (byte[]) plot_ylo#41 ← phi( main::@3/(byte[]) plot_ylo#44 )
  (byte[]) plot_bit#7 ← phi( main::@3/(byte[]) plot_bit#17 )
  (byte[]) plot_xhi#7 ← phi( main::@3/(byte[]) plot_xhi#17 )
  (byte*) BITMAP#4 ← phi( main::@3/(byte*) BITMAP#8 )
  (byte[]) plot_xlo#7 ← phi( main::@3/(byte[]) plot_xlo#17 )
  (byte) init_plot_tables::bits#0 ← (byte/word/signed word) 128
  (byte) init_plot_tables::x#0 ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@1
init_plot_tables::@1: scope:[init_plot_tables]  from init_plot_tables init_plot_tables::@2
  (byte[]) plot_yhi#35 ← phi( init_plot_tables/(byte[]) plot_yhi#41 init_plot_tables::@2/(byte[]) plot_yhi#17 )
  (byte[]) plot_ylo#35 ← phi( init_plot_tables/(byte[]) plot_ylo#41 init_plot_tables::@2/(byte[]) plot_ylo#17 )
  (byte[]) plot_bit#2 ← phi( init_plot_tables/(byte[]) plot_bit#7 init_plot_tables::@2/(byte[]) plot_bit#8 )
  (byte) init_plot_tables::bits#3 ← phi( init_plot_tables/(byte) init_plot_tables::bits#0 init_plot_tables::@2/(byte) init_plot_tables::bits#4 )
  (byte[]) plot_xhi#2 ← phi( init_plot_tables/(byte[]) plot_xhi#7 init_plot_tables::@2/(byte[]) plot_xhi#8 )
  (byte*) BITMAP#1 ← phi( init_plot_tables/(byte*) BITMAP#4 init_plot_tables::@2/(byte*) BITMAP#5 )
  (byte[]) plot_xlo#2 ← phi( init_plot_tables/(byte[]) plot_xlo#7 init_plot_tables::@2/(byte[]) plot_xlo#8 )
  (byte) init_plot_tables::x#2 ← phi( init_plot_tables/(byte) init_plot_tables::x#0 init_plot_tables::@2/(byte) init_plot_tables::x#1 )
  (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248
  *((byte[]) plot_xlo#2 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0
  (byte~) init_plot_tables::$1 ← > (byte*) BITMAP#1
  *((byte[]) plot_xhi#2 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$1
  *((byte[]) plot_bit#2 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3
  (byte~) init_plot_tables::$2 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1
  (byte) init_plot_tables::bits#1 ← (byte~) init_plot_tables::$2
  (boolean~) init_plot_tables::$3 ← (byte) init_plot_tables::bits#1 == (byte/signed byte/word/signed word) 0
  (boolean~) init_plot_tables::$4 ← ! (boolean~) init_plot_tables::$3
  if((boolean~) init_plot_tables::$4) goto init_plot_tables::@2
  to:init_plot_tables::@5
init_plot_tables::@2: scope:[init_plot_tables]  from init_plot_tables::@1 init_plot_tables::@5
  (byte[]) plot_yhi#17 ← phi( init_plot_tables::@1/(byte[]) plot_yhi#35 init_plot_tables::@5/(byte[]) plot_yhi#36 )
  (byte[]) plot_ylo#17 ← phi( init_plot_tables::@1/(byte[]) plot_ylo#35 init_plot_tables::@5/(byte[]) plot_ylo#36 )
  (byte[]) plot_bit#8 ← phi( init_plot_tables::@1/(byte[]) plot_bit#2 init_plot_tables::@5/(byte[]) plot_bit#18 )
  (byte) init_plot_tables::bits#4 ← phi( init_plot_tables::@1/(byte) init_plot_tables::bits#1 init_plot_tables::@5/(byte) init_plot_tables::bits#2 )
  (byte[]) plot_xhi#8 ← phi( init_plot_tables::@1/(byte[]) plot_xhi#2 init_plot_tables::@5/(byte[]) plot_xhi#18 )
  (byte*) BITMAP#5 ← phi( init_plot_tables::@1/(byte*) BITMAP#1 init_plot_tables::@5/(byte*) BITMAP#9 )
  (byte[]) plot_xlo#8 ← phi( init_plot_tables::@1/(byte[]) plot_xlo#2 init_plot_tables::@5/(byte[]) plot_xlo#18 )
  (byte) init_plot_tables::x#3 ← phi( init_plot_tables::@1/(byte) init_plot_tables::x#2 init_plot_tables::@5/(byte) init_plot_tables::x#4 )
  (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#3
  (boolean~) init_plot_tables::$5 ← (byte) init_plot_tables::x#1 != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$5) goto init_plot_tables::@1
  to:init_plot_tables::@6
init_plot_tables::@5: scope:[init_plot_tables]  from init_plot_tables::@1
  (byte[]) plot_yhi#36 ← phi( init_plot_tables::@1/(byte[]) plot_yhi#35 )
  (byte[]) plot_ylo#36 ← phi( init_plot_tables::@1/(byte[]) plot_ylo#35 )
  (byte[]) plot_bit#18 ← phi( init_plot_tables::@1/(byte[]) plot_bit#2 )
  (byte[]) plot_xhi#18 ← phi( init_plot_tables::@1/(byte[]) plot_xhi#2 )
  (byte*) BITMAP#9 ← phi( init_plot_tables::@1/(byte*) BITMAP#1 )
  (byte[]) plot_xlo#18 ← phi( init_plot_tables::@1/(byte[]) plot_xlo#2 )
  (byte) init_plot_tables::x#4 ← phi( init_plot_tables::@1/(byte) init_plot_tables::x#2 )
  (byte) init_plot_tables::bits#2 ← (byte/word/signed word) 128
  to:init_plot_tables::@2
init_plot_tables::@6: scope:[init_plot_tables]  from init_plot_tables::@2
  (byte[]) plot_yhi#8 ← phi( init_plot_tables::@2/(byte[]) plot_yhi#17 )
  (byte[]) plot_ylo#8 ← phi( init_plot_tables::@2/(byte[]) plot_ylo#17 )
  (byte*) init_plot_tables::yoffs#0 ← ((byte*)) (byte/signed byte/word/signed word) 0
  (byte) init_plot_tables::y#0 ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@3
init_plot_tables::@3: scope:[init_plot_tables]  from init_plot_tables::@4 init_plot_tables::@6
  (byte[]) plot_yhi#2 ← phi( init_plot_tables::@4/(byte[]) plot_yhi#7 init_plot_tables::@6/(byte[]) plot_yhi#8 )
  (byte[]) plot_ylo#2 ← phi( init_plot_tables::@4/(byte[]) plot_ylo#7 init_plot_tables::@6/(byte[]) plot_ylo#8 )
  (byte*) init_plot_tables::yoffs#2 ← phi( init_plot_tables::@4/(byte*) init_plot_tables::yoffs#4 init_plot_tables::@6/(byte*) init_plot_tables::yoffs#0 )
  (byte) init_plot_tables::y#2 ← phi( init_plot_tables::@4/(byte) init_plot_tables::y#1 init_plot_tables::@6/(byte) init_plot_tables::y#0 )
  (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2
  (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7
  *((byte[]) plot_ylo#2 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8
  (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2
  *((byte[]) plot_yhi#2 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9
  (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (boolean~) init_plot_tables::$11 ← (byte~) init_plot_tables::$10 == (byte/signed byte/word/signed word) 7
  (boolean~) init_plot_tables::$12 ← ! (boolean~) init_plot_tables::$11
  if((boolean~) init_plot_tables::$12) goto init_plot_tables::@4
  to:init_plot_tables::@7
init_plot_tables::@4: scope:[init_plot_tables]  from init_plot_tables::@3 init_plot_tables::@7
  (byte[]) plot_yhi#7 ← phi( init_plot_tables::@3/(byte[]) plot_yhi#2 init_plot_tables::@7/(byte[]) plot_yhi#18 )
  (byte[]) plot_ylo#7 ← phi( init_plot_tables::@3/(byte[]) plot_ylo#2 init_plot_tables::@7/(byte[]) plot_ylo#18 )
  (byte*) init_plot_tables::yoffs#4 ← phi( init_plot_tables::@3/(byte*) init_plot_tables::yoffs#2 init_plot_tables::@7/(byte*) init_plot_tables::yoffs#1 )
  (byte) init_plot_tables::y#3 ← phi( init_plot_tables::@3/(byte) init_plot_tables::y#2 init_plot_tables::@7/(byte) init_plot_tables::y#4 )
  (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#3
  (boolean~) init_plot_tables::$14 ← (byte) init_plot_tables::y#1 != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$14) goto init_plot_tables::@3
  to:init_plot_tables::@return
init_plot_tables::@7: scope:[init_plot_tables]  from init_plot_tables::@3
  (byte[]) plot_yhi#18 ← phi( init_plot_tables::@3/(byte[]) plot_yhi#2 )
  (byte[]) plot_ylo#18 ← phi( init_plot_tables::@3/(byte[]) plot_ylo#2 )
  (byte) init_plot_tables::y#4 ← phi( init_plot_tables::@3/(byte) init_plot_tables::y#2 )
  (byte*) init_plot_tables::yoffs#3 ← phi( init_plot_tables::@3/(byte*) init_plot_tables::yoffs#2 )
  (byte*~) init_plot_tables::$13 ← (byte*) init_plot_tables::yoffs#3 + (word/signed word) 320
  (byte*) init_plot_tables::yoffs#1 ← (byte*~) init_plot_tables::$13
  to:init_plot_tables::@4
init_plot_tables::@return: scope:[init_plot_tables]  from init_plot_tables::@4
  return 
  to:@return
init_screen: scope:[init_screen]  from main
  (byte*) SCREEN#4 ← phi( main/(byte*) SCREEN#5 )
  (byte*) BITMAP#2 ← phi( main/(byte*) BITMAP#6 )
  (byte*) init_screen::b#0 ← (byte*) BITMAP#2
  to:init_screen::@1
init_screen::@1: scope:[init_screen]  from init_screen init_screen::@1
  (byte*) SCREEN#3 ← phi( init_screen/(byte*) SCREEN#4 init_screen::@1/(byte*) SCREEN#3 )
  (byte*) BITMAP#3 ← phi( init_screen/(byte*) BITMAP#2 init_screen::@1/(byte*) BITMAP#3 )
  (byte*) init_screen::b#2 ← phi( init_screen/(byte*) init_screen::b#0 init_screen::@1/(byte*) init_screen::b#1 )
  *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0
  (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2
  (byte*~) init_screen::$0 ← (byte*) BITMAP#3 + (word/signed word) 8192
  (boolean~) init_screen::$1 ← (byte*) init_screen::b#1 != (byte*~) init_screen::$0
  if((boolean~) init_screen::$1) goto init_screen::@1
  to:init_screen::@3
init_screen::@3: scope:[init_screen]  from init_screen::@1
  (byte*) SCREEN#1 ← phi( init_screen::@1/(byte*) SCREEN#3 )
  (byte*) init_screen::c#0 ← (byte*) SCREEN#1
  to:init_screen::@2
init_screen::@2: scope:[init_screen]  from init_screen::@2 init_screen::@3
  (byte*) SCREEN#2 ← phi( init_screen::@2/(byte*) SCREEN#2 init_screen::@3/(byte*) SCREEN#1 )
  (byte*) init_screen::c#2 ← phi( init_screen::@2/(byte*) init_screen::c#1 init_screen::@3/(byte*) init_screen::c#0 )
  *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20
  (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2
  (byte*~) init_screen::$2 ← (byte*) SCREEN#2 + (word/signed word) 1024
  (boolean~) init_screen::$3 ← (byte*) init_screen::c#1 != (byte*~) init_screen::$2
  if((boolean~) init_screen::$3) goto init_screen::@2
  to:init_screen::@return
init_screen::@return: scope:[init_screen]  from init_screen::@2
  return 
  to:@return
@10: scope:[]  from @begin
  (byte[]) plot_yhi#47 ← phi( @begin/(byte[]) plot_yhi#0 )
  (byte[]) plot_ylo#47 ← phi( @begin/(byte[]) plot_ylo#0 )
  (byte) lines_cnt#9 ← phi( @begin/(byte) lines_cnt#0 )
  (byte[]) lines_y#9 ← phi( @begin/(byte[]) lines_y#0 )
  (byte[]) lines_x#9 ← phi( @begin/(byte[]) lines_x#0 )
  (byte*) SCREEN#6 ← phi( @begin/(byte*) SCREEN#0 )
  (byte[]) plot_bit#36 ← phi( @begin/(byte[]) plot_bit#0 )
  (byte[]) plot_xhi#36 ← phi( @begin/(byte[]) plot_xhi#0 )
  (byte[]) plot_xlo#36 ← phi( @begin/(byte[]) plot_xlo#0 )
  (byte*) BITMAP#7 ← phi( @begin/(byte*) BITMAP#0 )
  (byte*) D018#2 ← phi( @begin/(byte*) D018#0 )
  (byte*) D011#2 ← phi( @begin/(byte*) D011#0 )
  (byte) RSEL#2 ← phi( @begin/(byte) RSEL#0 )
  (byte) DEN#2 ← phi( @begin/(byte) DEN#0 )
  (byte) BMM#2 ← phi( @begin/(byte) BMM#0 )
  (byte*) FGCOL#2 ← phi( @begin/(byte*) FGCOL#0 )
  (byte*) BGCOL#2 ← phi( @begin/(byte*) BGCOL#0 )
  call main param-assignment
  to:@end
@end: scope:[]  from @10

Inversing boolean not (boolean~) line::$1 ← (byte) line::x0#1 >= (byte) line::x1#1 from (boolean~) line::$0 ← (byte) line::x0#1 < (byte) line::x1#1
Inversing boolean not (boolean~) line::$17 ← (byte) line::y0#1 >= (byte) line::y1#1 from (boolean~) line::$16 ← (byte) line::y0#1 < (byte) line::y1#1
Inversing boolean not (boolean~) line::$4 ← (byte) line::y0#2 >= (byte) line::y1#2 from (boolean~) line::$3 ← (byte) line::y0#2 < (byte) line::y1#2
Inversing boolean not (boolean~) line::$12 ← (byte) line::yd#0 >= (byte) line::xd#2 from (boolean~) line::$11 ← (byte) line::yd#0 < (byte) line::xd#2
Inversing boolean not (boolean~) line::$7 ← (byte) line::yd#1 >= (byte) line::xd#3 from (boolean~) line::$6 ← (byte) line::yd#1 < (byte) line::xd#3
Inversing boolean not (boolean~) line::$25 ← (byte) line::yd#2 >= (byte) line::xd#8 from (boolean~) line::$24 ← (byte) line::yd#2 < (byte) line::xd#8
Inversing boolean not (boolean~) line::$20 ← (byte) line::yd#3 >= (byte) line::xd#9 from (boolean~) line::$19 ← (byte) line::yd#3 < (byte) line::xd#9
Inversing boolean not (boolean~) line_xdyi::$5 ← (byte) line_xdyi::xd#2 >= (byte) line_xdyi::e#1 from (boolean~) line_xdyi::$4 ← (byte) line_xdyi::xd#2 < (byte) line_xdyi::e#1
Inversing boolean not (boolean~) line_xdyd::$5 ← (byte) line_xdyd::xd#2 >= (byte) line_xdyd::e#1 from (boolean~) line_xdyd::$4 ← (byte) line_xdyd::xd#2 < (byte) line_xdyd::e#1
Inversing boolean not (boolean~) line_ydxi::$5 ← (byte) line_ydxi::yd#2 >= (byte) line_ydxi::e#1 from (boolean~) line_ydxi::$4 ← (byte) line_ydxi::yd#2 < (byte) line_ydxi::e#1
Inversing boolean not (boolean~) line_ydxd::$5 ← (byte) line_ydxd::yd#2 >= (byte) line_ydxd::e#1 from (boolean~) line_ydxd::$4 ← (byte) line_ydxd::yd#2 < (byte) line_ydxd::e#1
Inversing boolean not (boolean~) init_plot_tables::$4 ← (byte) init_plot_tables::bits#1 != (byte/signed byte/word/signed word) 0 from (boolean~) init_plot_tables::$3 ← (byte) init_plot_tables::bits#1 == (byte/signed byte/word/signed word) 0
Inversing boolean not (boolean~) init_plot_tables::$12 ← (byte~) init_plot_tables::$10 != (byte/signed byte/word/signed word) 7 from (boolean~) init_plot_tables::$11 ← (byte~) init_plot_tables::$10 == (byte/signed byte/word/signed word) 7
Succesful SSA optimization Pass2UnaryNotSimplification
CONTROL FLOW GRAPH
@begin: scope:[]  from
  (byte*) BGCOL#0 ← ((byte*)) (word) 53280
  (byte*) FGCOL#0 ← ((byte*)) (word) 53281
  (byte*) D018#0 ← ((byte*)) (word) 53272
  (byte*) D011#0 ← ((byte*)) (word) 53265
  (byte) BMM#0 ← (byte/signed byte/word/signed word) 32
  (byte) DEN#0 ← (byte/signed byte/word/signed word) 16
  (byte) RSEL#0 ← (byte/signed byte/word/signed word) 8
  (byte*) SCREEN#0 ← ((byte*)) (word/signed word) 1024
  (byte*) BITMAP#0 ← ((byte*)) (word/signed word) 8192
  (byte[]) plot_xlo#0 ← ((byte*)) (word/signed word) 4096
  (byte[]) plot_xhi#0 ← ((byte*)) (word/signed word) 4352
  (byte[]) plot_ylo#0 ← ((byte*)) (word/signed word) 4608
  (byte[]) plot_yhi#0 ← ((byte*)) (word/signed word) 4864
  (byte[]) plot_bit#0 ← ((byte*)) (word/signed word) 5120
  (byte[]) lines_x#0 ← { (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60 }
  (byte[]) lines_y#0 ← { (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10 }
  (byte) lines_cnt#0 ← (byte/signed byte/word/signed word) 8
  to:@10
main: scope:[main]  from @10
  (byte[]) plot_yhi#45 ← phi( @10/(byte[]) plot_yhi#47 )
  (byte[]) plot_ylo#45 ← phi( @10/(byte[]) plot_ylo#47 )
  (byte) lines_cnt#8 ← phi( @10/(byte) lines_cnt#9 )
  (byte[]) lines_y#8 ← phi( @10/(byte[]) lines_y#9 )
  (byte[]) lines_x#8 ← phi( @10/(byte[]) lines_x#9 )
  (byte*) SCREEN#5 ← phi( @10/(byte*) SCREEN#6 )
  (byte[]) plot_bit#19 ← phi( @10/(byte[]) plot_bit#36 )
  (byte[]) plot_xhi#19 ← phi( @10/(byte[]) plot_xhi#36 )
  (byte[]) plot_xlo#19 ← phi( @10/(byte[]) plot_xlo#36 )
  (byte*) BITMAP#6 ← phi( @10/(byte*) BITMAP#7 )
  (byte*) D018#1 ← phi( @10/(byte*) D018#2 )
  (byte*) D011#1 ← phi( @10/(byte*) D011#2 )
  (byte) RSEL#1 ← phi( @10/(byte) RSEL#2 )
  (byte) DEN#1 ← phi( @10/(byte) DEN#2 )
  (byte) BMM#1 ← phi( @10/(byte) BMM#2 )
  (byte*) FGCOL#1 ← phi( @10/(byte*) FGCOL#2 )
  (byte*) BGCOL#1 ← phi( @10/(byte*) BGCOL#2 )
  *((byte*) BGCOL#1) ← (byte/signed byte/word/signed word) 0
  *((byte*) FGCOL#1) ← (byte/signed byte/word/signed word) 0
  (byte~) main::$0 ← (byte) BMM#1 | (byte) DEN#1
  (byte~) main::$1 ← (byte~) main::$0 | (byte) RSEL#1
  (byte~) main::$2 ← (byte~) main::$1 | (byte/signed byte/word/signed word) 3
  *((byte*) D011#1) ← (byte~) main::$2
  *((byte*) D018#1) ← (byte/signed byte/word/signed word) 24
  call init_screen param-assignment
  to:main::@3
main::@3: scope:[main]  from main
  (byte[]) plot_yhi#44 ← phi( main/(byte[]) plot_yhi#45 )
  (byte[]) plot_ylo#44 ← phi( main/(byte[]) plot_ylo#45 )
  (byte) lines_cnt#7 ← phi( main/(byte) lines_cnt#8 )
  (byte[]) lines_y#7 ← phi( main/(byte[]) lines_y#8 )
  (byte[]) lines_x#7 ← phi( main/(byte[]) lines_x#8 )
  (byte[]) plot_bit#17 ← phi( main/(byte[]) plot_bit#19 )
  (byte[]) plot_xhi#17 ← phi( main/(byte[]) plot_xhi#19 )
  (byte*) BITMAP#8 ← phi( main/(byte*) BITMAP#6 )
  (byte[]) plot_xlo#17 ← phi( main/(byte[]) plot_xlo#19 )
  call init_plot_tables param-assignment
  to:main::@4
main::@4: scope:[main]  from main::@3
  (byte[]) plot_bit#48 ← phi( main::@3/(byte[]) plot_bit#17 )
  (byte[]) plot_ylo#52 ← phi( main::@3/(byte[]) plot_ylo#44 )
  (byte[]) plot_yhi#52 ← phi( main::@3/(byte[]) plot_yhi#44 )
  (byte[]) plot_xlo#48 ← phi( main::@3/(byte[]) plot_xlo#17 )
  (byte[]) plot_xhi#48 ← phi( main::@3/(byte[]) plot_xhi#17 )
  (byte) lines_cnt#5 ← phi( main::@3/(byte) lines_cnt#7 )
  (byte[]) lines_y#5 ← phi( main::@3/(byte[]) lines_y#7 )
  (byte[]) lines_x#5 ← phi( main::@3/(byte[]) lines_x#7 )
  to:main::@1
main::@1: scope:[main]  from main::@4 main::@5
  (byte[]) plot_bit#47 ← phi( main::@4/(byte[]) plot_bit#48 main::@5/(byte[]) plot_bit#49 )
  (byte[]) plot_ylo#51 ← phi( main::@4/(byte[]) plot_ylo#52 main::@5/(byte[]) plot_ylo#53 )
  (byte[]) plot_yhi#51 ← phi( main::@4/(byte[]) plot_yhi#52 main::@5/(byte[]) plot_yhi#53 )
  (byte[]) plot_xlo#47 ← phi( main::@4/(byte[]) plot_xlo#48 main::@5/(byte[]) plot_xlo#49 )
  (byte[]) plot_xhi#47 ← phi( main::@4/(byte[]) plot_xhi#48 main::@5/(byte[]) plot_xhi#49 )
  (byte) lines_cnt#4 ← phi( main::@4/(byte) lines_cnt#5 main::@5/(byte) lines_cnt#6 )
  (byte[]) lines_y#4 ← phi( main::@4/(byte[]) lines_y#5 main::@5/(byte[]) lines_y#6 )
  (byte[]) lines_x#4 ← phi( main::@4/(byte[]) lines_x#5 main::@5/(byte[]) lines_x#6 )
  call lines param-assignment
  to:main::@5
main::@5: scope:[main]  from main::@1
  (byte[]) plot_bit#49 ← phi( main::@1/(byte[]) plot_bit#47 )
  (byte[]) plot_ylo#53 ← phi( main::@1/(byte[]) plot_ylo#51 )
  (byte[]) plot_yhi#53 ← phi( main::@1/(byte[]) plot_yhi#51 )
  (byte[]) plot_xlo#49 ← phi( main::@1/(byte[]) plot_xlo#47 )
  (byte[]) plot_xhi#49 ← phi( main::@1/(byte[]) plot_xhi#47 )
  (byte) lines_cnt#6 ← phi( main::@1/(byte) lines_cnt#4 )
  (byte[]) lines_y#6 ← phi( main::@1/(byte[]) lines_y#4 )
  (byte[]) lines_x#6 ← phi( main::@1/(byte[]) lines_x#4 )
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@5
  return 
  to:@return
lines: scope:[lines]  from main::@1
  (byte[]) plot_bit#45 ← phi( main::@1/(byte[]) plot_bit#47 )
  (byte[]) plot_ylo#49 ← phi( main::@1/(byte[]) plot_ylo#51 )
  (byte[]) plot_yhi#49 ← phi( main::@1/(byte[]) plot_yhi#51 )
  (byte[]) plot_xlo#45 ← phi( main::@1/(byte[]) plot_xlo#47 )
  (byte[]) plot_xhi#45 ← phi( main::@1/(byte[]) plot_xhi#47 )
  (byte) lines_cnt#3 ← phi( main::@1/(byte) lines_cnt#4 )
  (byte[]) lines_y#2 ← phi( main::@1/(byte[]) lines_y#4 )
  (byte[]) lines_x#2 ← phi( main::@1/(byte[]) lines_x#4 )
  (byte) lines::l#0 ← (byte/signed byte/word/signed word) 0
  to:lines::@1
lines::@1: scope:[lines]  from lines lines::@3
  (byte[]) plot_bit#44 ← phi( lines/(byte[]) plot_bit#45 lines::@3/(byte[]) plot_bit#46 )
  (byte[]) plot_ylo#48 ← phi( lines/(byte[]) plot_ylo#49 lines::@3/(byte[]) plot_ylo#50 )
  (byte[]) plot_yhi#48 ← phi( lines/(byte[]) plot_yhi#49 lines::@3/(byte[]) plot_yhi#50 )
  (byte[]) plot_xlo#44 ← phi( lines/(byte[]) plot_xlo#45 lines::@3/(byte[]) plot_xlo#46 )
  (byte[]) plot_xhi#44 ← phi( lines/(byte[]) plot_xhi#45 lines::@3/(byte[]) plot_xhi#46 )
  (byte) lines_cnt#2 ← phi( lines/(byte) lines_cnt#3 lines::@3/(byte) lines_cnt#1 )
  (byte[]) lines_y#1 ← phi( lines/(byte[]) lines_y#2 lines::@3/(byte[]) lines_y#3 )
  (byte) lines::l#2 ← phi( lines/(byte) lines::l#0 lines::@3/(byte) lines::l#1 )
  (byte[]) lines_x#1 ← phi( lines/(byte[]) lines_x#2 lines::@3/(byte[]) lines_x#3 )
  (byte~) lines::$0 ← (byte[]) lines_x#1 *idx (byte) lines::l#2
  (byte~) lines::$1 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$2 ← (byte[]) lines_x#1 *idx (byte~) lines::$1
  (byte~) lines::$3 ← (byte[]) lines_y#1 *idx (byte) lines::l#2
  (byte~) lines::$4 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$5 ← (byte[]) lines_y#1 *idx (byte~) lines::$4
  (byte) line::x0#0 ← (byte~) lines::$0
  (byte) line::x1#0 ← (byte~) lines::$2
  (byte) line::y0#0 ← (byte~) lines::$3
  (byte) line::y1#0 ← (byte~) lines::$5
  call line param-assignment
  to:lines::@3
lines::@3: scope:[lines]  from lines::@1
  (byte[]) plot_bit#46 ← phi( lines::@1/(byte[]) plot_bit#44 )
  (byte[]) plot_ylo#50 ← phi( lines::@1/(byte[]) plot_ylo#48 )
  (byte[]) plot_yhi#50 ← phi( lines::@1/(byte[]) plot_yhi#48 )
  (byte[]) plot_xlo#46 ← phi( lines::@1/(byte[]) plot_xlo#44 )
  (byte[]) plot_xhi#46 ← phi( lines::@1/(byte[]) plot_xhi#44 )
  (byte[]) lines_y#3 ← phi( lines::@1/(byte[]) lines_y#1 )
  (byte[]) lines_x#3 ← phi( lines::@1/(byte[]) lines_x#1 )
  (byte) lines_cnt#1 ← phi( lines::@1/(byte) lines_cnt#2 )
  (byte) lines::l#3 ← phi( lines::@1/(byte) lines::l#2 )
  (byte) lines::l#1 ← ++ (byte) lines::l#3
  (boolean~) lines::$7 ← (byte) lines::l#1 < (byte) lines_cnt#1
  if((boolean~) lines::$7) goto lines::@1
  to:lines::@return
lines::@return: scope:[lines]  from lines::@3
  return 
  to:@return
line: scope:[line]  from lines::@1
  (byte[]) plot_bit#43 ← phi( lines::@1/(byte[]) plot_bit#44 )
  (byte[]) plot_ylo#46 ← phi( lines::@1/(byte[]) plot_ylo#48 )
  (byte[]) plot_yhi#46 ← phi( lines::@1/(byte[]) plot_yhi#48 )
  (byte[]) plot_xlo#43 ← phi( lines::@1/(byte[]) plot_xlo#44 )
  (byte[]) plot_xhi#43 ← phi( lines::@1/(byte[]) plot_xhi#44 )
  (byte) line::y1#13 ← phi( lines::@1/(byte) line::y1#0 )
  (byte) line::y0#13 ← phi( lines::@1/(byte) line::y0#0 )
  (byte) line::x1#1 ← phi( lines::@1/(byte) line::x1#0 )
  (byte) line::x0#1 ← phi( lines::@1/(byte) line::x0#0 )
  (boolean~) line::$1 ← (byte) line::x0#1 >= (byte) line::x1#1
  if((boolean~) line::$1) goto line::@1
  to:line::@15
line::@1: scope:[line]  from line
  (byte[]) plot_bit#42 ← phi( line/(byte[]) plot_bit#43 )
  (byte[]) plot_ylo#43 ← phi( line/(byte[]) plot_ylo#46 )
  (byte[]) plot_yhi#43 ← phi( line/(byte[]) plot_yhi#46 )
  (byte[]) plot_xlo#42 ← phi( line/(byte[]) plot_xlo#43 )
  (byte[]) plot_xhi#42 ← phi( line/(byte[]) plot_xhi#43 )
  (byte) line::y1#1 ← phi( line/(byte) line::y1#13 )
  (byte) line::y0#1 ← phi( line/(byte) line::y0#13 )
  (byte) line::x1#2 ← phi( line/(byte) line::x1#1 )
  (byte) line::x0#2 ← phi( line/(byte) line::x0#1 )
  (byte~) line::$15 ← (byte) line::x0#2 - (byte) line::x1#2
  (byte) line::xd#0 ← (byte~) line::$15
  (boolean~) line::$17 ← (byte) line::y0#1 >= (byte) line::y1#1
  if((boolean~) line::$17) goto line::@9
  to:line::@23
line::@15: scope:[line]  from line
  (byte[]) plot_bit#41 ← phi( line/(byte[]) plot_bit#43 )
  (byte[]) plot_ylo#42 ← phi( line/(byte[]) plot_ylo#46 )
  (byte[]) plot_yhi#42 ← phi( line/(byte[]) plot_yhi#46 )
  (byte[]) plot_xlo#41 ← phi( line/(byte[]) plot_xlo#43 )
  (byte[]) plot_xhi#41 ← phi( line/(byte[]) plot_xhi#43 )
  (byte) line::y1#2 ← phi( line/(byte) line::y1#13 )
  (byte) line::y0#2 ← phi( line/(byte) line::y0#13 )
  (byte) line::x0#3 ← phi( line/(byte) line::x0#1 )
  (byte) line::x1#3 ← phi( line/(byte) line::x1#1 )
  (byte~) line::$2 ← (byte) line::x1#3 - (byte) line::x0#3
  (byte) line::xd#1 ← (byte~) line::$2
  (boolean~) line::$4 ← (byte) line::y0#2 >= (byte) line::y1#2
  if((boolean~) line::$4) goto line::@2
  to:line::@16
line::@2: scope:[line]  from line::@15
  (byte[]) plot_bit#38 ← phi( line::@15/(byte[]) plot_bit#41 )
  (byte[]) plot_ylo#38 ← phi( line::@15/(byte[]) plot_ylo#42 )
  (byte[]) plot_yhi#38 ← phi( line::@15/(byte[]) plot_yhi#42 )
  (byte[]) plot_xlo#38 ← phi( line::@15/(byte[]) plot_xlo#41 )
  (byte[]) plot_xhi#38 ← phi( line::@15/(byte[]) plot_xhi#41 )
  (byte) line::x0#11 ← phi( line::@15/(byte) line::x0#3 )
  (byte) line::x1#11 ← phi( line::@15/(byte) line::x1#3 )
  (byte) line::xd#2 ← phi( line::@15/(byte) line::xd#1 )
  (byte) line::y1#3 ← phi( line::@15/(byte) line::y1#2 )
  (byte) line::y0#3 ← phi( line::@15/(byte) line::y0#2 )
  (byte~) line::$10 ← (byte) line::y0#3 - (byte) line::y1#3
  (byte) line::yd#0 ← (byte~) line::$10
  (boolean~) line::$12 ← (byte) line::yd#0 >= (byte) line::xd#2
  if((boolean~) line::$12) goto line::@6
  to:line::@20
line::@16: scope:[line]  from line::@15
  (byte[]) plot_bit#37 ← phi( line::@15/(byte[]) plot_bit#41 )
  (byte[]) plot_ylo#37 ← phi( line::@15/(byte[]) plot_ylo#42 )
  (byte[]) plot_yhi#37 ← phi( line::@15/(byte[]) plot_yhi#42 )
  (byte[]) plot_xlo#37 ← phi( line::@15/(byte[]) plot_xlo#41 )
  (byte[]) plot_xhi#37 ← phi( line::@15/(byte[]) plot_xhi#41 )
  (byte) line::x1#10 ← phi( line::@15/(byte) line::x1#3 )
  (byte) line::x0#10 ← phi( line::@15/(byte) line::x0#3 )
  (byte) line::xd#3 ← phi( line::@15/(byte) line::xd#1 )
  (byte) line::y0#4 ← phi( line::@15/(byte) line::y0#2 )
  (byte) line::y1#4 ← phi( line::@15/(byte) line::y1#2 )
  (byte~) line::$5 ← (byte) line::y1#4 - (byte) line::y0#4
  (byte) line::yd#1 ← (byte~) line::$5
  (boolean~) line::$7 ← (byte) line::yd#1 >= (byte) line::xd#3
  if((boolean~) line::$7) goto line::@3
  to:line::@17
line::@3: scope:[line]  from line::@16
  (byte[]) plot_bit#29 ← phi( line::@16/(byte[]) plot_bit#37 )
  (byte[]) plot_ylo#28 ← phi( line::@16/(byte[]) plot_ylo#37 )
  (byte[]) plot_yhi#28 ← phi( line::@16/(byte[]) plot_yhi#37 )
  (byte[]) plot_xlo#29 ← phi( line::@16/(byte[]) plot_xlo#37 )
  (byte[]) plot_xhi#29 ← phi( line::@16/(byte[]) plot_xhi#37 )
  (byte) line::xd#4 ← phi( line::@16/(byte) line::xd#3 )
  (byte) line::yd#4 ← phi( line::@16/(byte) line::yd#1 )
  (byte) line::y1#5 ← phi( line::@16/(byte) line::y1#4 )
  (byte) line::x0#4 ← phi( line::@16/(byte) line::x0#10 )
  (byte) line::y0#5 ← phi( line::@16/(byte) line::y0#4 )
  (byte) line_ydxi::y#0 ← (byte) line::y0#5
  (byte) line_ydxi::x#0 ← (byte) line::x0#4
  (byte) line_ydxi::y1#0 ← (byte) line::y1#5
  (byte) line_ydxi::yd#0 ← (byte) line::yd#4
  (byte) line_ydxi::xd#0 ← (byte) line::xd#4
  call line_ydxi param-assignment
  to:line::@return
line::@17: scope:[line]  from line::@16
  (byte[]) plot_bit#20 ← phi( line::@16/(byte[]) plot_bit#37 )
  (byte[]) plot_ylo#19 ← phi( line::@16/(byte[]) plot_ylo#37 )
  (byte[]) plot_yhi#19 ← phi( line::@16/(byte[]) plot_yhi#37 )
  (byte[]) plot_xlo#20 ← phi( line::@16/(byte[]) plot_xlo#37 )
  (byte[]) plot_xhi#20 ← phi( line::@16/(byte[]) plot_xhi#37 )
  (byte) line::yd#5 ← phi( line::@16/(byte) line::yd#1 )
  (byte) line::xd#5 ← phi( line::@16/(byte) line::xd#3 )
  (byte) line::x1#4 ← phi( line::@16/(byte) line::x1#10 )
  (byte) line::y0#6 ← phi( line::@16/(byte) line::y0#4 )
  (byte) line::x0#5 ← phi( line::@16/(byte) line::x0#10 )
  (byte) line_xdyi::x#0 ← (byte) line::x0#5
  (byte) line_xdyi::y#0 ← (byte) line::y0#6
  (byte) line_xdyi::x1#0 ← (byte) line::x1#4
  (byte) line_xdyi::xd#0 ← (byte) line::xd#5
  (byte) line_xdyi::yd#0 ← (byte) line::yd#5
  call line_xdyi param-assignment
  to:line::@return
line::@6: scope:[line]  from line::@2
  (byte[]) plot_bit#33 ← phi( line::@2/(byte[]) plot_bit#38 )
  (byte[]) plot_ylo#32 ← phi( line::@2/(byte[]) plot_ylo#38 )
  (byte[]) plot_yhi#32 ← phi( line::@2/(byte[]) plot_yhi#38 )
  (byte[]) plot_xlo#33 ← phi( line::@2/(byte[]) plot_xlo#38 )
  (byte[]) plot_xhi#33 ← phi( line::@2/(byte[]) plot_xhi#38 )
  (byte) line::xd#6 ← phi( line::@2/(byte) line::xd#2 )
  (byte) line::yd#6 ← phi( line::@2/(byte) line::yd#0 )
  (byte) line::y0#7 ← phi( line::@2/(byte) line::y0#3 )
  (byte) line::x1#5 ← phi( line::@2/(byte) line::x1#11 )
  (byte) line::y1#6 ← phi( line::@2/(byte) line::y1#3 )
  (byte) line_ydxd::y#0 ← (byte) line::y1#6
  (byte) line_ydxd::x#0 ← (byte) line::x1#5
  (byte) line_ydxd::y1#0 ← (byte) line::y0#7
  (byte) line_ydxd::yd#0 ← (byte) line::yd#6
  (byte) line_ydxd::xd#0 ← (byte) line::xd#6
  call line_ydxd param-assignment
  to:line::@return
line::@20: scope:[line]  from line::@2
  (byte[]) plot_bit#24 ← phi( line::@2/(byte[]) plot_bit#38 )
  (byte[]) plot_ylo#23 ← phi( line::@2/(byte[]) plot_ylo#38 )
  (byte[]) plot_yhi#23 ← phi( line::@2/(byte[]) plot_yhi#38 )
  (byte[]) plot_xlo#24 ← phi( line::@2/(byte[]) plot_xlo#38 )
  (byte[]) plot_xhi#24 ← phi( line::@2/(byte[]) plot_xhi#38 )
  (byte) line::yd#7 ← phi( line::@2/(byte) line::yd#0 )
  (byte) line::xd#7 ← phi( line::@2/(byte) line::xd#2 )
  (byte) line::x1#6 ← phi( line::@2/(byte) line::x1#11 )
  (byte) line::y0#8 ← phi( line::@2/(byte) line::y0#3 )
  (byte) line::x0#6 ← phi( line::@2/(byte) line::x0#11 )
  (byte) line_xdyd::x#0 ← (byte) line::x0#6
  (byte) line_xdyd::y#0 ← (byte) line::y0#8
  (byte) line_xdyd::x1#0 ← (byte) line::x1#6
  (byte) line_xdyd::xd#0 ← (byte) line::xd#7
  (byte) line_xdyd::yd#0 ← (byte) line::yd#7
  call line_xdyd param-assignment
  to:line::@return
line::@9: scope:[line]  from line::@1
  (byte[]) plot_bit#40 ← phi( line::@1/(byte[]) plot_bit#42 )
  (byte[]) plot_ylo#40 ← phi( line::@1/(byte[]) plot_ylo#43 )
  (byte[]) plot_yhi#40 ← phi( line::@1/(byte[]) plot_yhi#43 )
  (byte[]) plot_xlo#40 ← phi( line::@1/(byte[]) plot_xlo#42 )
  (byte[]) plot_xhi#40 ← phi( line::@1/(byte[]) plot_xhi#42 )
  (byte) line::x0#13 ← phi( line::@1/(byte) line::x0#2 )
  (byte) line::x1#13 ← phi( line::@1/(byte) line::x1#2 )
  (byte) line::xd#8 ← phi( line::@1/(byte) line::xd#0 )
  (byte) line::y1#7 ← phi( line::@1/(byte) line::y1#1 )
  (byte) line::y0#9 ← phi( line::@1/(byte) line::y0#1 )
  (byte~) line::$23 ← (byte) line::y0#9 - (byte) line::y1#7
  (byte) line::yd#2 ← (byte~) line::$23
  (boolean~) line::$25 ← (byte) line::yd#2 >= (byte) line::xd#8
  if((boolean~) line::$25) goto line::@13
  to:line::@27
line::@23: scope:[line]  from line::@1
  (byte[]) plot_bit#39 ← phi( line::@1/(byte[]) plot_bit#42 )
  (byte[]) plot_ylo#39 ← phi( line::@1/(byte[]) plot_ylo#43 )
  (byte[]) plot_yhi#39 ← phi( line::@1/(byte[]) plot_yhi#43 )
  (byte[]) plot_xlo#39 ← phi( line::@1/(byte[]) plot_xlo#42 )
  (byte[]) plot_xhi#39 ← phi( line::@1/(byte[]) plot_xhi#42 )
  (byte) line::x1#12 ← phi( line::@1/(byte) line::x1#2 )
  (byte) line::x0#12 ← phi( line::@1/(byte) line::x0#2 )
  (byte) line::xd#9 ← phi( line::@1/(byte) line::xd#0 )
  (byte) line::y0#10 ← phi( line::@1/(byte) line::y0#1 )
  (byte) line::y1#8 ← phi( line::@1/(byte) line::y1#1 )
  (byte~) line::$18 ← (byte) line::y1#8 - (byte) line::y0#10
  (byte) line::yd#3 ← (byte~) line::$18
  (boolean~) line::$20 ← (byte) line::yd#3 >= (byte) line::xd#9
  if((boolean~) line::$20) goto line::@10
  to:line::@24
line::@10: scope:[line]  from line::@23
  (byte[]) plot_bit#32 ← phi( line::@23/(byte[]) plot_bit#39 )
  (byte[]) plot_ylo#31 ← phi( line::@23/(byte[]) plot_ylo#39 )
  (byte[]) plot_yhi#31 ← phi( line::@23/(byte[]) plot_yhi#39 )
  (byte[]) plot_xlo#32 ← phi( line::@23/(byte[]) plot_xlo#39 )
  (byte[]) plot_xhi#32 ← phi( line::@23/(byte[]) plot_xhi#39 )
  (byte) line::xd#10 ← phi( line::@23/(byte) line::xd#9 )
  (byte) line::yd#8 ← phi( line::@23/(byte) line::yd#3 )
  (byte) line::y1#9 ← phi( line::@23/(byte) line::y1#8 )
  (byte) line::x0#7 ← phi( line::@23/(byte) line::x0#12 )
  (byte) line::y0#11 ← phi( line::@23/(byte) line::y0#10 )
  (byte) line_ydxd::y#1 ← (byte) line::y0#11
  (byte) line_ydxd::x#1 ← (byte) line::x0#7
  (byte) line_ydxd::y1#1 ← (byte) line::y1#9
  (byte) line_ydxd::yd#1 ← (byte) line::yd#8
  (byte) line_ydxd::xd#1 ← (byte) line::xd#10
  call line_ydxd param-assignment
  to:line::@return
line::@24: scope:[line]  from line::@23
  (byte[]) plot_bit#25 ← phi( line::@23/(byte[]) plot_bit#39 )
  (byte[]) plot_ylo#24 ← phi( line::@23/(byte[]) plot_ylo#39 )
  (byte[]) plot_yhi#24 ← phi( line::@23/(byte[]) plot_yhi#39 )
  (byte[]) plot_xlo#25 ← phi( line::@23/(byte[]) plot_xlo#39 )
  (byte[]) plot_xhi#25 ← phi( line::@23/(byte[]) plot_xhi#39 )
  (byte) line::yd#9 ← phi( line::@23/(byte) line::yd#3 )
  (byte) line::xd#11 ← phi( line::@23/(byte) line::xd#9 )
  (byte) line::x0#8 ← phi( line::@23/(byte) line::x0#12 )
  (byte) line::y1#10 ← phi( line::@23/(byte) line::y1#8 )
  (byte) line::x1#7 ← phi( line::@23/(byte) line::x1#12 )
  (byte) line_xdyd::x#1 ← (byte) line::x1#7
  (byte) line_xdyd::y#1 ← (byte) line::y1#10
  (byte) line_xdyd::x1#1 ← (byte) line::x0#8
  (byte) line_xdyd::xd#1 ← (byte) line::xd#11
  (byte) line_xdyd::yd#1 ← (byte) line::yd#9
  call line_xdyd param-assignment
  to:line::@return
line::@13: scope:[line]  from line::@9
  (byte[]) plot_bit#28 ← phi( line::@9/(byte[]) plot_bit#40 )
  (byte[]) plot_ylo#27 ← phi( line::@9/(byte[]) plot_ylo#40 )
  (byte[]) plot_yhi#27 ← phi( line::@9/(byte[]) plot_yhi#40 )
  (byte[]) plot_xlo#28 ← phi( line::@9/(byte[]) plot_xlo#40 )
  (byte[]) plot_xhi#28 ← phi( line::@9/(byte[]) plot_xhi#40 )
  (byte) line::xd#12 ← phi( line::@9/(byte) line::xd#8 )
  (byte) line::yd#10 ← phi( line::@9/(byte) line::yd#2 )
  (byte) line::y0#12 ← phi( line::@9/(byte) line::y0#9 )
  (byte) line::x1#8 ← phi( line::@9/(byte) line::x1#13 )
  (byte) line::y1#11 ← phi( line::@9/(byte) line::y1#7 )
  (byte) line_ydxi::y#1 ← (byte) line::y1#11
  (byte) line_ydxi::x#1 ← (byte) line::x1#8
  (byte) line_ydxi::y1#1 ← (byte) line::y0#12
  (byte) line_ydxi::yd#1 ← (byte) line::yd#10
  (byte) line_ydxi::xd#1 ← (byte) line::xd#12
  call line_ydxi param-assignment
  to:line::@return
line::@27: scope:[line]  from line::@9
  (byte[]) plot_bit#21 ← phi( line::@9/(byte[]) plot_bit#40 )
  (byte[]) plot_ylo#20 ← phi( line::@9/(byte[]) plot_ylo#40 )
  (byte[]) plot_yhi#20 ← phi( line::@9/(byte[]) plot_yhi#40 )
  (byte[]) plot_xlo#21 ← phi( line::@9/(byte[]) plot_xlo#40 )
  (byte[]) plot_xhi#21 ← phi( line::@9/(byte[]) plot_xhi#40 )
  (byte) line::yd#11 ← phi( line::@9/(byte) line::yd#2 )
  (byte) line::xd#13 ← phi( line::@9/(byte) line::xd#8 )
  (byte) line::x0#9 ← phi( line::@9/(byte) line::x0#13 )
  (byte) line::y1#12 ← phi( line::@9/(byte) line::y1#7 )
  (byte) line::x1#9 ← phi( line::@9/(byte) line::x1#13 )
  (byte) line_xdyi::x#1 ← (byte) line::x1#9
  (byte) line_xdyi::y#1 ← (byte) line::y1#12
  (byte) line_xdyi::x1#1 ← (byte) line::x0#9
  (byte) line_xdyi::xd#1 ← (byte) line::xd#13
  (byte) line_xdyi::yd#1 ← (byte) line::yd#11
  call line_xdyi param-assignment
  to:line::@return
line::@return: scope:[line]  from line::@10 line::@13 line::@17 line::@20 line::@24 line::@27 line::@3 line::@6
  return 
  to:@return
line_xdyi: scope:[line_xdyi]  from line::@17 line::@27
  (byte) line_xdyi::x1#6 ← phi( line::@17/(byte) line_xdyi::x1#0 line::@27/(byte) line_xdyi::x1#1 )
  (byte[]) plot_bit#9 ← phi( line::@17/(byte[]) plot_bit#20 line::@27/(byte[]) plot_bit#21 )
  (byte[]) plot_ylo#9 ← phi( line::@17/(byte[]) plot_ylo#19 line::@27/(byte[]) plot_ylo#20 )
  (byte[]) plot_yhi#9 ← phi( line::@17/(byte[]) plot_yhi#19 line::@27/(byte[]) plot_yhi#20 )
  (byte[]) plot_xlo#9 ← phi( line::@17/(byte[]) plot_xlo#20 line::@27/(byte[]) plot_xlo#21 )
  (byte[]) plot_xhi#9 ← phi( line::@17/(byte[]) plot_xhi#20 line::@27/(byte[]) plot_xhi#21 )
  (byte) line_xdyi::xd#5 ← phi( line::@17/(byte) line_xdyi::xd#0 line::@27/(byte) line_xdyi::xd#1 )
  (byte) line_xdyi::y#5 ← phi( line::@17/(byte) line_xdyi::y#0 line::@27/(byte) line_xdyi::y#1 )
  (byte) line_xdyi::x#6 ← phi( line::@17/(byte) line_xdyi::x#0 line::@27/(byte) line_xdyi::x#1 )
  (byte) line_xdyi::yd#2 ← phi( line::@17/(byte) line_xdyi::yd#0 line::@27/(byte) line_xdyi::yd#1 )
  (byte~) line_xdyi::$0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#0 ← (byte~) line_xdyi::$0
  to:line_xdyi::@1
line_xdyi::@1: scope:[line_xdyi]  from line_xdyi line_xdyi::@2
  (byte) line_xdyi::x1#5 ← phi( line_xdyi/(byte) line_xdyi::x1#6 line_xdyi::@2/(byte) line_xdyi::x1#2 )
  (byte[]) plot_bit#4 ← phi( line_xdyi/(byte[]) plot_bit#9 line_xdyi::@2/(byte[]) plot_bit#10 )
  (byte[]) plot_ylo#4 ← phi( line_xdyi/(byte[]) plot_ylo#9 line_xdyi::@2/(byte[]) plot_ylo#10 )
  (byte[]) plot_yhi#4 ← phi( line_xdyi/(byte[]) plot_yhi#9 line_xdyi::@2/(byte[]) plot_yhi#10 )
  (byte[]) plot_xlo#4 ← phi( line_xdyi/(byte[]) plot_xlo#9 line_xdyi::@2/(byte[]) plot_xlo#10 )
  (byte[]) plot_xhi#4 ← phi( line_xdyi/(byte[]) plot_xhi#9 line_xdyi::@2/(byte[]) plot_xhi#10 )
  (byte) line_xdyi::xd#4 ← phi( line_xdyi/(byte) line_xdyi::xd#5 line_xdyi::@2/(byte) line_xdyi::xd#6 )
  (byte) line_xdyi::yd#4 ← phi( line_xdyi/(byte) line_xdyi::yd#2 line_xdyi::@2/(byte) line_xdyi::yd#5 )
  (byte) line_xdyi::e#5 ← phi( line_xdyi/(byte) line_xdyi::e#0 line_xdyi::@2/(byte) line_xdyi::e#6 )
  (byte) line_xdyi::y#3 ← phi( line_xdyi/(byte) line_xdyi::y#5 line_xdyi::@2/(byte) line_xdyi::y#6 )
  (byte) line_xdyi::x#3 ← phi( line_xdyi/(byte) line_xdyi::x#6 line_xdyi::@2/(byte) line_xdyi::x#5 )
  (byte) plot::x#0 ← (byte) line_xdyi::x#3
  (byte) plot::y#0 ← (byte) line_xdyi::y#3
  call plot param-assignment
  to:line_xdyi::@5
line_xdyi::@5: scope:[line_xdyi]  from line_xdyi::@1
  (byte[]) plot_bit#23 ← phi( line_xdyi::@1/(byte[]) plot_bit#4 )
  (byte[]) plot_ylo#22 ← phi( line_xdyi::@1/(byte[]) plot_ylo#4 )
  (byte[]) plot_yhi#22 ← phi( line_xdyi::@1/(byte[]) plot_yhi#4 )
  (byte[]) plot_xlo#23 ← phi( line_xdyi::@1/(byte[]) plot_xlo#4 )
  (byte[]) plot_xhi#23 ← phi( line_xdyi::@1/(byte[]) plot_xhi#4 )
  (byte) line_xdyi::y#7 ← phi( line_xdyi::@1/(byte) line_xdyi::y#3 )
  (byte) line_xdyi::x1#4 ← phi( line_xdyi::@1/(byte) line_xdyi::x1#5 )
  (byte) line_xdyi::xd#2 ← phi( line_xdyi::@1/(byte) line_xdyi::xd#4 )
  (byte) line_xdyi::yd#3 ← phi( line_xdyi::@1/(byte) line_xdyi::yd#4 )
  (byte) line_xdyi::e#3 ← phi( line_xdyi::@1/(byte) line_xdyi::e#5 )
  (byte) line_xdyi::x#4 ← phi( line_xdyi::@1/(byte) line_xdyi::x#3 )
  (byte~) line_xdyi::$2 ← (byte) line_xdyi::x#4 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::x#2 ← (byte~) line_xdyi::$2
  (byte~) line_xdyi::$3 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#3
  (byte) line_xdyi::e#1 ← (byte~) line_xdyi::$3
  (boolean~) line_xdyi::$5 ← (byte) line_xdyi::xd#2 >= (byte) line_xdyi::e#1
  if((boolean~) line_xdyi::$5) goto line_xdyi::@2
  to:line_xdyi::@3
line_xdyi::@2: scope:[line_xdyi]  from line_xdyi::@3 line_xdyi::@5
  (byte[]) plot_bit#10 ← phi( line_xdyi::@3/(byte[]) plot_bit#22 line_xdyi::@5/(byte[]) plot_bit#23 )
  (byte[]) plot_ylo#10 ← phi( line_xdyi::@3/(byte[]) plot_ylo#21 line_xdyi::@5/(byte[]) plot_ylo#22 )
  (byte[]) plot_yhi#10 ← phi( line_xdyi::@3/(byte[]) plot_yhi#21 line_xdyi::@5/(byte[]) plot_yhi#22 )
  (byte[]) plot_xlo#10 ← phi( line_xdyi::@3/(byte[]) plot_xlo#22 line_xdyi::@5/(byte[]) plot_xlo#23 )
  (byte[]) plot_xhi#10 ← phi( line_xdyi::@3/(byte[]) plot_xhi#22 line_xdyi::@5/(byte[]) plot_xhi#23 )
  (byte) line_xdyi::xd#6 ← phi( line_xdyi::@3/(byte) line_xdyi::xd#3 line_xdyi::@5/(byte) line_xdyi::xd#2 )
  (byte) line_xdyi::yd#5 ← phi( line_xdyi::@3/(byte) line_xdyi::yd#6 line_xdyi::@5/(byte) line_xdyi::yd#3 )
  (byte) line_xdyi::e#6 ← phi( line_xdyi::@3/(byte) line_xdyi::e#2 line_xdyi::@5/(byte) line_xdyi::e#1 )
  (byte) line_xdyi::y#6 ← phi( line_xdyi::@3/(byte) line_xdyi::y#2 line_xdyi::@5/(byte) line_xdyi::y#7 )
  (byte) line_xdyi::x#5 ← phi( line_xdyi::@3/(byte) line_xdyi::x#7 line_xdyi::@5/(byte) line_xdyi::x#2 )
  (byte) line_xdyi::x1#2 ← phi( line_xdyi::@3/(byte) line_xdyi::x1#3 line_xdyi::@5/(byte) line_xdyi::x1#4 )
  (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyi::$9 ← (byte) line_xdyi::x#5 < (byte~) line_xdyi::$8
  if((boolean~) line_xdyi::$9) goto line_xdyi::@1
  to:line_xdyi::@return
line_xdyi::@3: scope:[line_xdyi]  from line_xdyi::@5
  (byte[]) plot_bit#22 ← phi( line_xdyi::@5/(byte[]) plot_bit#23 )
  (byte[]) plot_ylo#21 ← phi( line_xdyi::@5/(byte[]) plot_ylo#22 )
  (byte[]) plot_yhi#21 ← phi( line_xdyi::@5/(byte[]) plot_yhi#22 )
  (byte[]) plot_xlo#22 ← phi( line_xdyi::@5/(byte[]) plot_xlo#23 )
  (byte[]) plot_xhi#22 ← phi( line_xdyi::@5/(byte[]) plot_xhi#23 )
  (byte) line_xdyi::yd#6 ← phi( line_xdyi::@5/(byte) line_xdyi::yd#3 )
  (byte) line_xdyi::x#7 ← phi( line_xdyi::@5/(byte) line_xdyi::x#2 )
  (byte) line_xdyi::x1#3 ← phi( line_xdyi::@5/(byte) line_xdyi::x1#4 )
  (byte) line_xdyi::xd#3 ← phi( line_xdyi::@5/(byte) line_xdyi::xd#2 )
  (byte) line_xdyi::e#4 ← phi( line_xdyi::@5/(byte) line_xdyi::e#1 )
  (byte) line_xdyi::y#4 ← phi( line_xdyi::@5/(byte) line_xdyi::y#7 )
  (byte~) line_xdyi::$6 ← (byte) line_xdyi::y#4 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::y#2 ← (byte~) line_xdyi::$6
  (byte~) line_xdyi::$7 ← (byte) line_xdyi::e#4 - (byte) line_xdyi::xd#3
  (byte) line_xdyi::e#2 ← (byte~) line_xdyi::$7
  to:line_xdyi::@2
line_xdyi::@return: scope:[line_xdyi]  from line_xdyi::@2
  return 
  to:@return
line_xdyd: scope:[line_xdyd]  from line::@20 line::@24
  (byte) line_xdyd::x1#6 ← phi( line::@20/(byte) line_xdyd::x1#0 line::@24/(byte) line_xdyd::x1#1 )
  (byte[]) plot_bit#11 ← phi( line::@20/(byte[]) plot_bit#24 line::@24/(byte[]) plot_bit#25 )
  (byte[]) plot_ylo#11 ← phi( line::@20/(byte[]) plot_ylo#23 line::@24/(byte[]) plot_ylo#24 )
  (byte[]) plot_yhi#11 ← phi( line::@20/(byte[]) plot_yhi#23 line::@24/(byte[]) plot_yhi#24 )
  (byte[]) plot_xlo#11 ← phi( line::@20/(byte[]) plot_xlo#24 line::@24/(byte[]) plot_xlo#25 )
  (byte[]) plot_xhi#11 ← phi( line::@20/(byte[]) plot_xhi#24 line::@24/(byte[]) plot_xhi#25 )
  (byte) line_xdyd::xd#5 ← phi( line::@20/(byte) line_xdyd::xd#0 line::@24/(byte) line_xdyd::xd#1 )
  (byte) line_xdyd::y#5 ← phi( line::@20/(byte) line_xdyd::y#0 line::@24/(byte) line_xdyd::y#1 )
  (byte) line_xdyd::x#6 ← phi( line::@20/(byte) line_xdyd::x#0 line::@24/(byte) line_xdyd::x#1 )
  (byte) line_xdyd::yd#2 ← phi( line::@20/(byte) line_xdyd::yd#0 line::@24/(byte) line_xdyd::yd#1 )
  (byte~) line_xdyd::$0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#0 ← (byte~) line_xdyd::$0
  to:line_xdyd::@1
line_xdyd::@1: scope:[line_xdyd]  from line_xdyd line_xdyd::@2
  (byte) line_xdyd::x1#5 ← phi( line_xdyd/(byte) line_xdyd::x1#6 line_xdyd::@2/(byte) line_xdyd::x1#2 )
  (byte[]) plot_bit#3 ← phi( line_xdyd/(byte[]) plot_bit#11 line_xdyd::@2/(byte[]) plot_bit#12 )
  (byte[]) plot_ylo#3 ← phi( line_xdyd/(byte[]) plot_ylo#11 line_xdyd::@2/(byte[]) plot_ylo#12 )
  (byte[]) plot_yhi#3 ← phi( line_xdyd/(byte[]) plot_yhi#11 line_xdyd::@2/(byte[]) plot_yhi#12 )
  (byte[]) plot_xlo#3 ← phi( line_xdyd/(byte[]) plot_xlo#11 line_xdyd::@2/(byte[]) plot_xlo#12 )
  (byte[]) plot_xhi#3 ← phi( line_xdyd/(byte[]) plot_xhi#11 line_xdyd::@2/(byte[]) plot_xhi#12 )
  (byte) line_xdyd::xd#4 ← phi( line_xdyd/(byte) line_xdyd::xd#5 line_xdyd::@2/(byte) line_xdyd::xd#6 )
  (byte) line_xdyd::yd#4 ← phi( line_xdyd/(byte) line_xdyd::yd#2 line_xdyd::@2/(byte) line_xdyd::yd#5 )
  (byte) line_xdyd::e#5 ← phi( line_xdyd/(byte) line_xdyd::e#0 line_xdyd::@2/(byte) line_xdyd::e#6 )
  (byte) line_xdyd::y#3 ← phi( line_xdyd/(byte) line_xdyd::y#5 line_xdyd::@2/(byte) line_xdyd::y#6 )
  (byte) line_xdyd::x#3 ← phi( line_xdyd/(byte) line_xdyd::x#6 line_xdyd::@2/(byte) line_xdyd::x#5 )
  (byte) plot::x#1 ← (byte) line_xdyd::x#3
  (byte) plot::y#1 ← (byte) line_xdyd::y#3
  call plot param-assignment
  to:line_xdyd::@5
line_xdyd::@5: scope:[line_xdyd]  from line_xdyd::@1
  (byte[]) plot_bit#27 ← phi( line_xdyd::@1/(byte[]) plot_bit#3 )
  (byte[]) plot_ylo#26 ← phi( line_xdyd::@1/(byte[]) plot_ylo#3 )
  (byte[]) plot_yhi#26 ← phi( line_xdyd::@1/(byte[]) plot_yhi#3 )
  (byte[]) plot_xlo#27 ← phi( line_xdyd::@1/(byte[]) plot_xlo#3 )
  (byte[]) plot_xhi#27 ← phi( line_xdyd::@1/(byte[]) plot_xhi#3 )
  (byte) line_xdyd::y#7 ← phi( line_xdyd::@1/(byte) line_xdyd::y#3 )
  (byte) line_xdyd::x1#4 ← phi( line_xdyd::@1/(byte) line_xdyd::x1#5 )
  (byte) line_xdyd::xd#2 ← phi( line_xdyd::@1/(byte) line_xdyd::xd#4 )
  (byte) line_xdyd::yd#3 ← phi( line_xdyd::@1/(byte) line_xdyd::yd#4 )
  (byte) line_xdyd::e#3 ← phi( line_xdyd::@1/(byte) line_xdyd::e#5 )
  (byte) line_xdyd::x#4 ← phi( line_xdyd::@1/(byte) line_xdyd::x#3 )
  (byte~) line_xdyd::$2 ← (byte) line_xdyd::x#4 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::x#2 ← (byte~) line_xdyd::$2
  (byte~) line_xdyd::$3 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#3
  (byte) line_xdyd::e#1 ← (byte~) line_xdyd::$3
  (boolean~) line_xdyd::$5 ← (byte) line_xdyd::xd#2 >= (byte) line_xdyd::e#1
  if((boolean~) line_xdyd::$5) goto line_xdyd::@2
  to:line_xdyd::@3
line_xdyd::@2: scope:[line_xdyd]  from line_xdyd::@3 line_xdyd::@5
  (byte[]) plot_bit#12 ← phi( line_xdyd::@3/(byte[]) plot_bit#26 line_xdyd::@5/(byte[]) plot_bit#27 )
  (byte[]) plot_ylo#12 ← phi( line_xdyd::@3/(byte[]) plot_ylo#25 line_xdyd::@5/(byte[]) plot_ylo#26 )
  (byte[]) plot_yhi#12 ← phi( line_xdyd::@3/(byte[]) plot_yhi#25 line_xdyd::@5/(byte[]) plot_yhi#26 )
  (byte[]) plot_xlo#12 ← phi( line_xdyd::@3/(byte[]) plot_xlo#26 line_xdyd::@5/(byte[]) plot_xlo#27 )
  (byte[]) plot_xhi#12 ← phi( line_xdyd::@3/(byte[]) plot_xhi#26 line_xdyd::@5/(byte[]) plot_xhi#27 )
  (byte) line_xdyd::xd#6 ← phi( line_xdyd::@3/(byte) line_xdyd::xd#3 line_xdyd::@5/(byte) line_xdyd::xd#2 )
  (byte) line_xdyd::yd#5 ← phi( line_xdyd::@3/(byte) line_xdyd::yd#6 line_xdyd::@5/(byte) line_xdyd::yd#3 )
  (byte) line_xdyd::e#6 ← phi( line_xdyd::@3/(byte) line_xdyd::e#2 line_xdyd::@5/(byte) line_xdyd::e#1 )
  (byte) line_xdyd::y#6 ← phi( line_xdyd::@3/(byte) line_xdyd::y#2 line_xdyd::@5/(byte) line_xdyd::y#7 )
  (byte) line_xdyd::x#5 ← phi( line_xdyd::@3/(byte) line_xdyd::x#7 line_xdyd::@5/(byte) line_xdyd::x#2 )
  (byte) line_xdyd::x1#2 ← phi( line_xdyd::@3/(byte) line_xdyd::x1#3 line_xdyd::@5/(byte) line_xdyd::x1#4 )
  (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyd::$9 ← (byte) line_xdyd::x#5 < (byte~) line_xdyd::$8
  if((boolean~) line_xdyd::$9) goto line_xdyd::@1
  to:line_xdyd::@return
line_xdyd::@3: scope:[line_xdyd]  from line_xdyd::@5
  (byte[]) plot_bit#26 ← phi( line_xdyd::@5/(byte[]) plot_bit#27 )
  (byte[]) plot_ylo#25 ← phi( line_xdyd::@5/(byte[]) plot_ylo#26 )
  (byte[]) plot_yhi#25 ← phi( line_xdyd::@5/(byte[]) plot_yhi#26 )
  (byte[]) plot_xlo#26 ← phi( line_xdyd::@5/(byte[]) plot_xlo#27 )
  (byte[]) plot_xhi#26 ← phi( line_xdyd::@5/(byte[]) plot_xhi#27 )
  (byte) line_xdyd::yd#6 ← phi( line_xdyd::@5/(byte) line_xdyd::yd#3 )
  (byte) line_xdyd::x#7 ← phi( line_xdyd::@5/(byte) line_xdyd::x#2 )
  (byte) line_xdyd::x1#3 ← phi( line_xdyd::@5/(byte) line_xdyd::x1#4 )
  (byte) line_xdyd::xd#3 ← phi( line_xdyd::@5/(byte) line_xdyd::xd#2 )
  (byte) line_xdyd::e#4 ← phi( line_xdyd::@5/(byte) line_xdyd::e#1 )
  (byte) line_xdyd::y#4 ← phi( line_xdyd::@5/(byte) line_xdyd::y#7 )
  (byte~) line_xdyd::$6 ← (byte) line_xdyd::y#4 - (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::y#2 ← (byte~) line_xdyd::$6
  (byte~) line_xdyd::$7 ← (byte) line_xdyd::e#4 - (byte) line_xdyd::xd#3
  (byte) line_xdyd::e#2 ← (byte~) line_xdyd::$7
  to:line_xdyd::@2
line_xdyd::@return: scope:[line_xdyd]  from line_xdyd::@2
  return 
  to:@return
line_ydxi: scope:[line_ydxi]  from line::@13 line::@3
  (byte) line_ydxi::y1#6 ← phi( line::@13/(byte) line_ydxi::y1#1 line::@3/(byte) line_ydxi::y1#0 )
  (byte[]) plot_bit#13 ← phi( line::@13/(byte[]) plot_bit#28 line::@3/(byte[]) plot_bit#29 )
  (byte[]) plot_ylo#13 ← phi( line::@13/(byte[]) plot_ylo#27 line::@3/(byte[]) plot_ylo#28 )
  (byte[]) plot_yhi#13 ← phi( line::@13/(byte[]) plot_yhi#27 line::@3/(byte[]) plot_yhi#28 )
  (byte[]) plot_xlo#13 ← phi( line::@13/(byte[]) plot_xlo#28 line::@3/(byte[]) plot_xlo#29 )
  (byte[]) plot_xhi#13 ← phi( line::@13/(byte[]) plot_xhi#28 line::@3/(byte[]) plot_xhi#29 )
  (byte) line_ydxi::yd#5 ← phi( line::@13/(byte) line_ydxi::yd#1 line::@3/(byte) line_ydxi::yd#0 )
  (byte) line_ydxi::y#6 ← phi( line::@13/(byte) line_ydxi::y#1 line::@3/(byte) line_ydxi::y#0 )
  (byte) line_ydxi::x#5 ← phi( line::@13/(byte) line_ydxi::x#1 line::@3/(byte) line_ydxi::x#0 )
  (byte) line_ydxi::xd#2 ← phi( line::@13/(byte) line_ydxi::xd#1 line::@3/(byte) line_ydxi::xd#0 )
  (byte~) line_ydxi::$0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#0 ← (byte~) line_ydxi::$0
  to:line_ydxi::@1
line_ydxi::@1: scope:[line_ydxi]  from line_ydxi line_ydxi::@2
  (byte) line_ydxi::y1#5 ← phi( line_ydxi/(byte) line_ydxi::y1#6 line_ydxi::@2/(byte) line_ydxi::y1#2 )
  (byte[]) plot_bit#6 ← phi( line_ydxi/(byte[]) plot_bit#13 line_ydxi::@2/(byte[]) plot_bit#14 )
  (byte[]) plot_ylo#6 ← phi( line_ydxi/(byte[]) plot_ylo#13 line_ydxi::@2/(byte[]) plot_ylo#14 )
  (byte[]) plot_yhi#6 ← phi( line_ydxi/(byte[]) plot_yhi#13 line_ydxi::@2/(byte[]) plot_yhi#14 )
  (byte[]) plot_xlo#6 ← phi( line_ydxi/(byte[]) plot_xlo#13 line_ydxi::@2/(byte[]) plot_xlo#14 )
  (byte[]) plot_xhi#6 ← phi( line_ydxi/(byte[]) plot_xhi#13 line_ydxi::@2/(byte[]) plot_xhi#14 )
  (byte) line_ydxi::yd#4 ← phi( line_ydxi/(byte) line_ydxi::yd#5 line_ydxi::@2/(byte) line_ydxi::yd#6 )
  (byte) line_ydxi::xd#4 ← phi( line_ydxi/(byte) line_ydxi::xd#2 line_ydxi::@2/(byte) line_ydxi::xd#5 )
  (byte) line_ydxi::e#5 ← phi( line_ydxi/(byte) line_ydxi::e#0 line_ydxi::@2/(byte) line_ydxi::e#6 )
  (byte) line_ydxi::y#3 ← phi( line_ydxi/(byte) line_ydxi::y#6 line_ydxi::@2/(byte) line_ydxi::y#5 )
  (byte) line_ydxi::x#3 ← phi( line_ydxi/(byte) line_ydxi::x#5 line_ydxi::@2/(byte) line_ydxi::x#6 )
  (byte) plot::x#2 ← (byte) line_ydxi::x#3
  (byte) plot::y#2 ← (byte) line_ydxi::y#3
  call plot param-assignment
  to:line_ydxi::@5
line_ydxi::@5: scope:[line_ydxi]  from line_ydxi::@1
  (byte[]) plot_bit#31 ← phi( line_ydxi::@1/(byte[]) plot_bit#6 )
  (byte[]) plot_ylo#30 ← phi( line_ydxi::@1/(byte[]) plot_ylo#6 )
  (byte[]) plot_yhi#30 ← phi( line_ydxi::@1/(byte[]) plot_yhi#6 )
  (byte[]) plot_xlo#31 ← phi( line_ydxi::@1/(byte[]) plot_xlo#6 )
  (byte[]) plot_xhi#31 ← phi( line_ydxi::@1/(byte[]) plot_xhi#6 )
  (byte) line_ydxi::x#7 ← phi( line_ydxi::@1/(byte) line_ydxi::x#3 )
  (byte) line_ydxi::y1#4 ← phi( line_ydxi::@1/(byte) line_ydxi::y1#5 )
  (byte) line_ydxi::yd#2 ← phi( line_ydxi::@1/(byte) line_ydxi::yd#4 )
  (byte) line_ydxi::xd#3 ← phi( line_ydxi::@1/(byte) line_ydxi::xd#4 )
  (byte) line_ydxi::e#3 ← phi( line_ydxi::@1/(byte) line_ydxi::e#5 )
  (byte) line_ydxi::y#4 ← phi( line_ydxi::@1/(byte) line_ydxi::y#3 )
  (byte~) line_ydxi::$2 ← (byte) line_ydxi::y#4 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::y#2 ← (byte~) line_ydxi::$2
  (byte~) line_ydxi::$3 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#3
  (byte) line_ydxi::e#1 ← (byte~) line_ydxi::$3
  (boolean~) line_ydxi::$5 ← (byte) line_ydxi::yd#2 >= (byte) line_ydxi::e#1
  if((boolean~) line_ydxi::$5) goto line_ydxi::@2
  to:line_ydxi::@3
line_ydxi::@2: scope:[line_ydxi]  from line_ydxi::@3 line_ydxi::@5
  (byte[]) plot_bit#14 ← phi( line_ydxi::@3/(byte[]) plot_bit#30 line_ydxi::@5/(byte[]) plot_bit#31 )
  (byte[]) plot_ylo#14 ← phi( line_ydxi::@3/(byte[]) plot_ylo#29 line_ydxi::@5/(byte[]) plot_ylo#30 )
  (byte[]) plot_yhi#14 ← phi( line_ydxi::@3/(byte[]) plot_yhi#29 line_ydxi::@5/(byte[]) plot_yhi#30 )
  (byte[]) plot_xlo#14 ← phi( line_ydxi::@3/(byte[]) plot_xlo#30 line_ydxi::@5/(byte[]) plot_xlo#31 )
  (byte[]) plot_xhi#14 ← phi( line_ydxi::@3/(byte[]) plot_xhi#30 line_ydxi::@5/(byte[]) plot_xhi#31 )
  (byte) line_ydxi::yd#6 ← phi( line_ydxi::@3/(byte) line_ydxi::yd#3 line_ydxi::@5/(byte) line_ydxi::yd#2 )
  (byte) line_ydxi::xd#5 ← phi( line_ydxi::@3/(byte) line_ydxi::xd#6 line_ydxi::@5/(byte) line_ydxi::xd#3 )
  (byte) line_ydxi::e#6 ← phi( line_ydxi::@3/(byte) line_ydxi::e#2 line_ydxi::@5/(byte) line_ydxi::e#1 )
  (byte) line_ydxi::x#6 ← phi( line_ydxi::@3/(byte) line_ydxi::x#2 line_ydxi::@5/(byte) line_ydxi::x#7 )
  (byte) line_ydxi::y#5 ← phi( line_ydxi::@3/(byte) line_ydxi::y#7 line_ydxi::@5/(byte) line_ydxi::y#2 )
  (byte) line_ydxi::y1#2 ← phi( line_ydxi::@3/(byte) line_ydxi::y1#3 line_ydxi::@5/(byte) line_ydxi::y1#4 )
  (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxi::$9 ← (byte) line_ydxi::y#5 < (byte~) line_ydxi::$8
  if((boolean~) line_ydxi::$9) goto line_ydxi::@1
  to:line_ydxi::@return
line_ydxi::@3: scope:[line_ydxi]  from line_ydxi::@5
  (byte[]) plot_bit#30 ← phi( line_ydxi::@5/(byte[]) plot_bit#31 )
  (byte[]) plot_ylo#29 ← phi( line_ydxi::@5/(byte[]) plot_ylo#30 )
  (byte[]) plot_yhi#29 ← phi( line_ydxi::@5/(byte[]) plot_yhi#30 )
  (byte[]) plot_xlo#30 ← phi( line_ydxi::@5/(byte[]) plot_xlo#31 )
  (byte[]) plot_xhi#30 ← phi( line_ydxi::@5/(byte[]) plot_xhi#31 )
  (byte) line_ydxi::xd#6 ← phi( line_ydxi::@5/(byte) line_ydxi::xd#3 )
  (byte) line_ydxi::y#7 ← phi( line_ydxi::@5/(byte) line_ydxi::y#2 )
  (byte) line_ydxi::y1#3 ← phi( line_ydxi::@5/(byte) line_ydxi::y1#4 )
  (byte) line_ydxi::yd#3 ← phi( line_ydxi::@5/(byte) line_ydxi::yd#2 )
  (byte) line_ydxi::e#4 ← phi( line_ydxi::@5/(byte) line_ydxi::e#1 )
  (byte) line_ydxi::x#4 ← phi( line_ydxi::@5/(byte) line_ydxi::x#7 )
  (byte~) line_ydxi::$6 ← (byte) line_ydxi::x#4 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::x#2 ← (byte~) line_ydxi::$6
  (byte~) line_ydxi::$7 ← (byte) line_ydxi::e#4 - (byte) line_ydxi::yd#3
  (byte) line_ydxi::e#2 ← (byte~) line_ydxi::$7
  to:line_ydxi::@2
line_ydxi::@return: scope:[line_ydxi]  from line_ydxi::@2
  return 
  to:@return
line_ydxd: scope:[line_ydxd]  from line::@10 line::@6
  (byte) line_ydxd::y1#6 ← phi( line::@10/(byte) line_ydxd::y1#1 line::@6/(byte) line_ydxd::y1#0 )
  (byte[]) plot_bit#15 ← phi( line::@10/(byte[]) plot_bit#32 line::@6/(byte[]) plot_bit#33 )
  (byte[]) plot_ylo#15 ← phi( line::@10/(byte[]) plot_ylo#31 line::@6/(byte[]) plot_ylo#32 )
  (byte[]) plot_yhi#15 ← phi( line::@10/(byte[]) plot_yhi#31 line::@6/(byte[]) plot_yhi#32 )
  (byte[]) plot_xlo#15 ← phi( line::@10/(byte[]) plot_xlo#32 line::@6/(byte[]) plot_xlo#33 )
  (byte[]) plot_xhi#15 ← phi( line::@10/(byte[]) plot_xhi#32 line::@6/(byte[]) plot_xhi#33 )
  (byte) line_ydxd::yd#5 ← phi( line::@10/(byte) line_ydxd::yd#1 line::@6/(byte) line_ydxd::yd#0 )
  (byte) line_ydxd::y#6 ← phi( line::@10/(byte) line_ydxd::y#1 line::@6/(byte) line_ydxd::y#0 )
  (byte) line_ydxd::x#5 ← phi( line::@10/(byte) line_ydxd::x#1 line::@6/(byte) line_ydxd::x#0 )
  (byte) line_ydxd::xd#2 ← phi( line::@10/(byte) line_ydxd::xd#1 line::@6/(byte) line_ydxd::xd#0 )
  (byte~) line_ydxd::$0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#0 ← (byte~) line_ydxd::$0
  to:line_ydxd::@1
line_ydxd::@1: scope:[line_ydxd]  from line_ydxd line_ydxd::@2
  (byte) line_ydxd::y1#5 ← phi( line_ydxd/(byte) line_ydxd::y1#6 line_ydxd::@2/(byte) line_ydxd::y1#2 )
  (byte[]) plot_bit#5 ← phi( line_ydxd/(byte[]) plot_bit#15 line_ydxd::@2/(byte[]) plot_bit#16 )
  (byte[]) plot_ylo#5 ← phi( line_ydxd/(byte[]) plot_ylo#15 line_ydxd::@2/(byte[]) plot_ylo#16 )
  (byte[]) plot_yhi#5 ← phi( line_ydxd/(byte[]) plot_yhi#15 line_ydxd::@2/(byte[]) plot_yhi#16 )
  (byte[]) plot_xlo#5 ← phi( line_ydxd/(byte[]) plot_xlo#15 line_ydxd::@2/(byte[]) plot_xlo#16 )
  (byte[]) plot_xhi#5 ← phi( line_ydxd/(byte[]) plot_xhi#15 line_ydxd::@2/(byte[]) plot_xhi#16 )
  (byte) line_ydxd::yd#4 ← phi( line_ydxd/(byte) line_ydxd::yd#5 line_ydxd::@2/(byte) line_ydxd::yd#6 )
  (byte) line_ydxd::xd#4 ← phi( line_ydxd/(byte) line_ydxd::xd#2 line_ydxd::@2/(byte) line_ydxd::xd#5 )
  (byte) line_ydxd::e#5 ← phi( line_ydxd/(byte) line_ydxd::e#0 line_ydxd::@2/(byte) line_ydxd::e#6 )
  (byte) line_ydxd::y#3 ← phi( line_ydxd/(byte) line_ydxd::y#6 line_ydxd::@2/(byte) line_ydxd::y#5 )
  (byte) line_ydxd::x#3 ← phi( line_ydxd/(byte) line_ydxd::x#5 line_ydxd::@2/(byte) line_ydxd::x#6 )
  (byte) plot::x#3 ← (byte) line_ydxd::x#3
  (byte) plot::y#3 ← (byte) line_ydxd::y#3
  call plot param-assignment
  to:line_ydxd::@5
line_ydxd::@5: scope:[line_ydxd]  from line_ydxd::@1
  (byte[]) plot_bit#35 ← phi( line_ydxd::@1/(byte[]) plot_bit#5 )
  (byte[]) plot_ylo#34 ← phi( line_ydxd::@1/(byte[]) plot_ylo#5 )
  (byte[]) plot_yhi#34 ← phi( line_ydxd::@1/(byte[]) plot_yhi#5 )
  (byte[]) plot_xlo#35 ← phi( line_ydxd::@1/(byte[]) plot_xlo#5 )
  (byte[]) plot_xhi#35 ← phi( line_ydxd::@1/(byte[]) plot_xhi#5 )
  (byte) line_ydxd::x#7 ← phi( line_ydxd::@1/(byte) line_ydxd::x#3 )
  (byte) line_ydxd::y1#4 ← phi( line_ydxd::@1/(byte) line_ydxd::y1#5 )
  (byte) line_ydxd::yd#2 ← phi( line_ydxd::@1/(byte) line_ydxd::yd#4 )
  (byte) line_ydxd::xd#3 ← phi( line_ydxd::@1/(byte) line_ydxd::xd#4 )
  (byte) line_ydxd::e#3 ← phi( line_ydxd::@1/(byte) line_ydxd::e#5 )
  (byte) line_ydxd::y#4 ← phi( line_ydxd::@1/(byte) line_ydxd::y#3 )
  (byte~) line_ydxd::$2 ← (byte) line_ydxd::y#4 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::y#2 ← (byte~) line_ydxd::$2
  (byte~) line_ydxd::$3 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#3
  (byte) line_ydxd::e#1 ← (byte~) line_ydxd::$3
  (boolean~) line_ydxd::$5 ← (byte) line_ydxd::yd#2 >= (byte) line_ydxd::e#1
  if((boolean~) line_ydxd::$5) goto line_ydxd::@2
  to:line_ydxd::@3
line_ydxd::@2: scope:[line_ydxd]  from line_ydxd::@3 line_ydxd::@5
  (byte[]) plot_bit#16 ← phi( line_ydxd::@3/(byte[]) plot_bit#34 line_ydxd::@5/(byte[]) plot_bit#35 )
  (byte[]) plot_ylo#16 ← phi( line_ydxd::@3/(byte[]) plot_ylo#33 line_ydxd::@5/(byte[]) plot_ylo#34 )
  (byte[]) plot_yhi#16 ← phi( line_ydxd::@3/(byte[]) plot_yhi#33 line_ydxd::@5/(byte[]) plot_yhi#34 )
  (byte[]) plot_xlo#16 ← phi( line_ydxd::@3/(byte[]) plot_xlo#34 line_ydxd::@5/(byte[]) plot_xlo#35 )
  (byte[]) plot_xhi#16 ← phi( line_ydxd::@3/(byte[]) plot_xhi#34 line_ydxd::@5/(byte[]) plot_xhi#35 )
  (byte) line_ydxd::yd#6 ← phi( line_ydxd::@3/(byte) line_ydxd::yd#3 line_ydxd::@5/(byte) line_ydxd::yd#2 )
  (byte) line_ydxd::xd#5 ← phi( line_ydxd::@3/(byte) line_ydxd::xd#6 line_ydxd::@5/(byte) line_ydxd::xd#3 )
  (byte) line_ydxd::e#6 ← phi( line_ydxd::@3/(byte) line_ydxd::e#2 line_ydxd::@5/(byte) line_ydxd::e#1 )
  (byte) line_ydxd::x#6 ← phi( line_ydxd::@3/(byte) line_ydxd::x#2 line_ydxd::@5/(byte) line_ydxd::x#7 )
  (byte) line_ydxd::y#5 ← phi( line_ydxd::@3/(byte) line_ydxd::y#7 line_ydxd::@5/(byte) line_ydxd::y#2 )
  (byte) line_ydxd::y1#2 ← phi( line_ydxd::@3/(byte) line_ydxd::y1#3 line_ydxd::@5/(byte) line_ydxd::y1#4 )
  (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxd::$9 ← (byte) line_ydxd::y#5 < (byte~) line_ydxd::$8
  if((boolean~) line_ydxd::$9) goto line_ydxd::@1
  to:line_ydxd::@return
line_ydxd::@3: scope:[line_ydxd]  from line_ydxd::@5
  (byte[]) plot_bit#34 ← phi( line_ydxd::@5/(byte[]) plot_bit#35 )
  (byte[]) plot_ylo#33 ← phi( line_ydxd::@5/(byte[]) plot_ylo#34 )
  (byte[]) plot_yhi#33 ← phi( line_ydxd::@5/(byte[]) plot_yhi#34 )
  (byte[]) plot_xlo#34 ← phi( line_ydxd::@5/(byte[]) plot_xlo#35 )
  (byte[]) plot_xhi#34 ← phi( line_ydxd::@5/(byte[]) plot_xhi#35 )
  (byte) line_ydxd::xd#6 ← phi( line_ydxd::@5/(byte) line_ydxd::xd#3 )
  (byte) line_ydxd::y#7 ← phi( line_ydxd::@5/(byte) line_ydxd::y#2 )
  (byte) line_ydxd::y1#3 ← phi( line_ydxd::@5/(byte) line_ydxd::y1#4 )
  (byte) line_ydxd::yd#3 ← phi( line_ydxd::@5/(byte) line_ydxd::yd#2 )
  (byte) line_ydxd::e#4 ← phi( line_ydxd::@5/(byte) line_ydxd::e#1 )
  (byte) line_ydxd::x#4 ← phi( line_ydxd::@5/(byte) line_ydxd::x#7 )
  (byte~) line_ydxd::$6 ← (byte) line_ydxd::x#4 - (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::x#2 ← (byte~) line_ydxd::$6
  (byte~) line_ydxd::$7 ← (byte) line_ydxd::e#4 - (byte) line_ydxd::yd#3
  (byte) line_ydxd::e#2 ← (byte~) line_ydxd::$7
  to:line_ydxd::@2
line_ydxd::@return: scope:[line_ydxd]  from line_ydxd::@2
  return 
  to:@return
plot: scope:[plot]  from line_xdyd::@1 line_xdyi::@1 line_ydxd::@1 line_ydxi::@1
  (byte[]) plot_bit#1 ← phi( line_xdyd::@1/(byte[]) plot_bit#3 line_xdyi::@1/(byte[]) plot_bit#4 line_ydxd::@1/(byte[]) plot_bit#5 line_ydxi::@1/(byte[]) plot_bit#6 )
  (byte[]) plot_ylo#1 ← phi( line_xdyd::@1/(byte[]) plot_ylo#3 line_xdyi::@1/(byte[]) plot_ylo#4 line_ydxd::@1/(byte[]) plot_ylo#5 line_ydxi::@1/(byte[]) plot_ylo#6 )
  (byte) plot::y#4 ← phi( line_xdyd::@1/(byte) plot::y#1 line_xdyi::@1/(byte) plot::y#0 line_ydxd::@1/(byte) plot::y#3 line_ydxi::@1/(byte) plot::y#2 )
  (byte[]) plot_yhi#1 ← phi( line_xdyd::@1/(byte[]) plot_yhi#3 line_xdyi::@1/(byte[]) plot_yhi#4 line_ydxd::@1/(byte[]) plot_yhi#5 line_ydxi::@1/(byte[]) plot_yhi#6 )
  (byte[]) plot_xlo#1 ← phi( line_xdyd::@1/(byte[]) plot_xlo#3 line_xdyi::@1/(byte[]) plot_xlo#4 line_ydxd::@1/(byte[]) plot_xlo#5 line_ydxi::@1/(byte[]) plot_xlo#6 )
  (byte) plot::x#4 ← phi( line_xdyd::@1/(byte) plot::x#1 line_xdyi::@1/(byte) plot::x#0 line_ydxd::@1/(byte) plot::x#3 line_ydxi::@1/(byte) plot::x#2 )
  (byte[]) plot_xhi#1 ← phi( line_xdyd::@1/(byte[]) plot_xhi#3 line_xdyi::@1/(byte[]) plot_xhi#4 line_ydxd::@1/(byte[]) plot_xhi#5 line_ydxi::@1/(byte[]) plot_xhi#6 )
  (byte*) plot::plotter_x#0 ← ((byte*)) (byte/signed byte/word/signed word) 0
  (word) plot::plotter_y#0 ← (byte/signed byte/word/signed word) 0
  (byte~) plot::$0 ← (byte[]) plot_xhi#1 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#1 ← (byte*) plot::plotter_x#0 hi= (byte~) plot::$0
  (byte~) plot::$1 ← (byte[]) plot_xlo#1 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1
  (byte~) plot::$2 ← (byte[]) plot_yhi#1 *idx (byte) plot::y#4
  (word) plot::plotter_y#1 ← (word) plot::plotter_y#0 hi= (byte~) plot::$2
  (byte~) plot::$3 ← (byte[]) plot_ylo#1 *idx (byte) plot::y#4
  (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3
  (byte*~) plot::$4 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2
  (byte*) plot::plotter#0 ← (byte*~) plot::$4
  (byte~) plot::$5 ← (byte[]) plot_bit#1 *idx (byte) plot::x#4
  (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5
  *((byte*) plot::plotter#0) ← (byte~) plot::$6
  to:plot::@return
plot::@return: scope:[plot]  from plot
  return 
  to:@return
init_plot_tables: scope:[init_plot_tables]  from main::@3
  (byte[]) plot_yhi#41 ← phi( main::@3/(byte[]) plot_yhi#44 )
  (byte[]) plot_ylo#41 ← phi( main::@3/(byte[]) plot_ylo#44 )
  (byte[]) plot_bit#7 ← phi( main::@3/(byte[]) plot_bit#17 )
  (byte[]) plot_xhi#7 ← phi( main::@3/(byte[]) plot_xhi#17 )
  (byte*) BITMAP#4 ← phi( main::@3/(byte*) BITMAP#8 )
  (byte[]) plot_xlo#7 ← phi( main::@3/(byte[]) plot_xlo#17 )
  (byte) init_plot_tables::bits#0 ← (byte/word/signed word) 128
  (byte) init_plot_tables::x#0 ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@1
init_plot_tables::@1: scope:[init_plot_tables]  from init_plot_tables init_plot_tables::@2
  (byte[]) plot_yhi#35 ← phi( init_plot_tables/(byte[]) plot_yhi#41 init_plot_tables::@2/(byte[]) plot_yhi#17 )
  (byte[]) plot_ylo#35 ← phi( init_plot_tables/(byte[]) plot_ylo#41 init_plot_tables::@2/(byte[]) plot_ylo#17 )
  (byte[]) plot_bit#2 ← phi( init_plot_tables/(byte[]) plot_bit#7 init_plot_tables::@2/(byte[]) plot_bit#8 )
  (byte) init_plot_tables::bits#3 ← phi( init_plot_tables/(byte) init_plot_tables::bits#0 init_plot_tables::@2/(byte) init_plot_tables::bits#4 )
  (byte[]) plot_xhi#2 ← phi( init_plot_tables/(byte[]) plot_xhi#7 init_plot_tables::@2/(byte[]) plot_xhi#8 )
  (byte*) BITMAP#1 ← phi( init_plot_tables/(byte*) BITMAP#4 init_plot_tables::@2/(byte*) BITMAP#5 )
  (byte[]) plot_xlo#2 ← phi( init_plot_tables/(byte[]) plot_xlo#7 init_plot_tables::@2/(byte[]) plot_xlo#8 )
  (byte) init_plot_tables::x#2 ← phi( init_plot_tables/(byte) init_plot_tables::x#0 init_plot_tables::@2/(byte) init_plot_tables::x#1 )
  (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248
  *((byte[]) plot_xlo#2 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0
  (byte~) init_plot_tables::$1 ← > (byte*) BITMAP#1
  *((byte[]) plot_xhi#2 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$1
  *((byte[]) plot_bit#2 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3
  (byte~) init_plot_tables::$2 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1
  (byte) init_plot_tables::bits#1 ← (byte~) init_plot_tables::$2
  (boolean~) init_plot_tables::$4 ← (byte) init_plot_tables::bits#1 != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$4) goto init_plot_tables::@2
  to:init_plot_tables::@5
init_plot_tables::@2: scope:[init_plot_tables]  from init_plot_tables::@1 init_plot_tables::@5
  (byte[]) plot_yhi#17 ← phi( init_plot_tables::@1/(byte[]) plot_yhi#35 init_plot_tables::@5/(byte[]) plot_yhi#36 )
  (byte[]) plot_ylo#17 ← phi( init_plot_tables::@1/(byte[]) plot_ylo#35 init_plot_tables::@5/(byte[]) plot_ylo#36 )
  (byte[]) plot_bit#8 ← phi( init_plot_tables::@1/(byte[]) plot_bit#2 init_plot_tables::@5/(byte[]) plot_bit#18 )
  (byte) init_plot_tables::bits#4 ← phi( init_plot_tables::@1/(byte) init_plot_tables::bits#1 init_plot_tables::@5/(byte) init_plot_tables::bits#2 )
  (byte[]) plot_xhi#8 ← phi( init_plot_tables::@1/(byte[]) plot_xhi#2 init_plot_tables::@5/(byte[]) plot_xhi#18 )
  (byte*) BITMAP#5 ← phi( init_plot_tables::@1/(byte*) BITMAP#1 init_plot_tables::@5/(byte*) BITMAP#9 )
  (byte[]) plot_xlo#8 ← phi( init_plot_tables::@1/(byte[]) plot_xlo#2 init_plot_tables::@5/(byte[]) plot_xlo#18 )
  (byte) init_plot_tables::x#3 ← phi( init_plot_tables::@1/(byte) init_plot_tables::x#2 init_plot_tables::@5/(byte) init_plot_tables::x#4 )
  (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#3
  (boolean~) init_plot_tables::$5 ← (byte) init_plot_tables::x#1 != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$5) goto init_plot_tables::@1
  to:init_plot_tables::@6
init_plot_tables::@5: scope:[init_plot_tables]  from init_plot_tables::@1
  (byte[]) plot_yhi#36 ← phi( init_plot_tables::@1/(byte[]) plot_yhi#35 )
  (byte[]) plot_ylo#36 ← phi( init_plot_tables::@1/(byte[]) plot_ylo#35 )
  (byte[]) plot_bit#18 ← phi( init_plot_tables::@1/(byte[]) plot_bit#2 )
  (byte[]) plot_xhi#18 ← phi( init_plot_tables::@1/(byte[]) plot_xhi#2 )
  (byte*) BITMAP#9 ← phi( init_plot_tables::@1/(byte*) BITMAP#1 )
  (byte[]) plot_xlo#18 ← phi( init_plot_tables::@1/(byte[]) plot_xlo#2 )
  (byte) init_plot_tables::x#4 ← phi( init_plot_tables::@1/(byte) init_plot_tables::x#2 )
  (byte) init_plot_tables::bits#2 ← (byte/word/signed word) 128
  to:init_plot_tables::@2
init_plot_tables::@6: scope:[init_plot_tables]  from init_plot_tables::@2
  (byte[]) plot_yhi#8 ← phi( init_plot_tables::@2/(byte[]) plot_yhi#17 )
  (byte[]) plot_ylo#8 ← phi( init_plot_tables::@2/(byte[]) plot_ylo#17 )
  (byte*) init_plot_tables::yoffs#0 ← ((byte*)) (byte/signed byte/word/signed word) 0
  (byte) init_plot_tables::y#0 ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@3
init_plot_tables::@3: scope:[init_plot_tables]  from init_plot_tables::@4 init_plot_tables::@6
  (byte[]) plot_yhi#2 ← phi( init_plot_tables::@4/(byte[]) plot_yhi#7 init_plot_tables::@6/(byte[]) plot_yhi#8 )
  (byte[]) plot_ylo#2 ← phi( init_plot_tables::@4/(byte[]) plot_ylo#7 init_plot_tables::@6/(byte[]) plot_ylo#8 )
  (byte*) init_plot_tables::yoffs#2 ← phi( init_plot_tables::@4/(byte*) init_plot_tables::yoffs#4 init_plot_tables::@6/(byte*) init_plot_tables::yoffs#0 )
  (byte) init_plot_tables::y#2 ← phi( init_plot_tables::@4/(byte) init_plot_tables::y#1 init_plot_tables::@6/(byte) init_plot_tables::y#0 )
  (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2
  (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7
  *((byte[]) plot_ylo#2 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8
  (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2
  *((byte[]) plot_yhi#2 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9
  (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (boolean~) init_plot_tables::$12 ← (byte~) init_plot_tables::$10 != (byte/signed byte/word/signed word) 7
  if((boolean~) init_plot_tables::$12) goto init_plot_tables::@4
  to:init_plot_tables::@7
init_plot_tables::@4: scope:[init_plot_tables]  from init_plot_tables::@3 init_plot_tables::@7
  (byte[]) plot_yhi#7 ← phi( init_plot_tables::@3/(byte[]) plot_yhi#2 init_plot_tables::@7/(byte[]) plot_yhi#18 )
  (byte[]) plot_ylo#7 ← phi( init_plot_tables::@3/(byte[]) plot_ylo#2 init_plot_tables::@7/(byte[]) plot_ylo#18 )
  (byte*) init_plot_tables::yoffs#4 ← phi( init_plot_tables::@3/(byte*) init_plot_tables::yoffs#2 init_plot_tables::@7/(byte*) init_plot_tables::yoffs#1 )
  (byte) init_plot_tables::y#3 ← phi( init_plot_tables::@3/(byte) init_plot_tables::y#2 init_plot_tables::@7/(byte) init_plot_tables::y#4 )
  (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#3
  (boolean~) init_plot_tables::$14 ← (byte) init_plot_tables::y#1 != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$14) goto init_plot_tables::@3
  to:init_plot_tables::@return
init_plot_tables::@7: scope:[init_plot_tables]  from init_plot_tables::@3
  (byte[]) plot_yhi#18 ← phi( init_plot_tables::@3/(byte[]) plot_yhi#2 )
  (byte[]) plot_ylo#18 ← phi( init_plot_tables::@3/(byte[]) plot_ylo#2 )
  (byte) init_plot_tables::y#4 ← phi( init_plot_tables::@3/(byte) init_plot_tables::y#2 )
  (byte*) init_plot_tables::yoffs#3 ← phi( init_plot_tables::@3/(byte*) init_plot_tables::yoffs#2 )
  (byte*~) init_plot_tables::$13 ← (byte*) init_plot_tables::yoffs#3 + (word/signed word) 320
  (byte*) init_plot_tables::yoffs#1 ← (byte*~) init_plot_tables::$13
  to:init_plot_tables::@4
init_plot_tables::@return: scope:[init_plot_tables]  from init_plot_tables::@4
  return 
  to:@return
init_screen: scope:[init_screen]  from main
  (byte*) SCREEN#4 ← phi( main/(byte*) SCREEN#5 )
  (byte*) BITMAP#2 ← phi( main/(byte*) BITMAP#6 )
  (byte*) init_screen::b#0 ← (byte*) BITMAP#2
  to:init_screen::@1
init_screen::@1: scope:[init_screen]  from init_screen init_screen::@1
  (byte*) SCREEN#3 ← phi( init_screen/(byte*) SCREEN#4 init_screen::@1/(byte*) SCREEN#3 )
  (byte*) BITMAP#3 ← phi( init_screen/(byte*) BITMAP#2 init_screen::@1/(byte*) BITMAP#3 )
  (byte*) init_screen::b#2 ← phi( init_screen/(byte*) init_screen::b#0 init_screen::@1/(byte*) init_screen::b#1 )
  *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0
  (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2
  (byte*~) init_screen::$0 ← (byte*) BITMAP#3 + (word/signed word) 8192
  (boolean~) init_screen::$1 ← (byte*) init_screen::b#1 != (byte*~) init_screen::$0
  if((boolean~) init_screen::$1) goto init_screen::@1
  to:init_screen::@3
init_screen::@3: scope:[init_screen]  from init_screen::@1
  (byte*) SCREEN#1 ← phi( init_screen::@1/(byte*) SCREEN#3 )
  (byte*) init_screen::c#0 ← (byte*) SCREEN#1
  to:init_screen::@2
init_screen::@2: scope:[init_screen]  from init_screen::@2 init_screen::@3
  (byte*) SCREEN#2 ← phi( init_screen::@2/(byte*) SCREEN#2 init_screen::@3/(byte*) SCREEN#1 )
  (byte*) init_screen::c#2 ← phi( init_screen::@2/(byte*) init_screen::c#1 init_screen::@3/(byte*) init_screen::c#0 )
  *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20
  (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2
  (byte*~) init_screen::$2 ← (byte*) SCREEN#2 + (word/signed word) 1024
  (boolean~) init_screen::$3 ← (byte*) init_screen::c#1 != (byte*~) init_screen::$2
  if((boolean~) init_screen::$3) goto init_screen::@2
  to:init_screen::@return
init_screen::@return: scope:[init_screen]  from init_screen::@2
  return 
  to:@return
@10: scope:[]  from @begin
  (byte[]) plot_yhi#47 ← phi( @begin/(byte[]) plot_yhi#0 )
  (byte[]) plot_ylo#47 ← phi( @begin/(byte[]) plot_ylo#0 )
  (byte) lines_cnt#9 ← phi( @begin/(byte) lines_cnt#0 )
  (byte[]) lines_y#9 ← phi( @begin/(byte[]) lines_y#0 )
  (byte[]) lines_x#9 ← phi( @begin/(byte[]) lines_x#0 )
  (byte*) SCREEN#6 ← phi( @begin/(byte*) SCREEN#0 )
  (byte[]) plot_bit#36 ← phi( @begin/(byte[]) plot_bit#0 )
  (byte[]) plot_xhi#36 ← phi( @begin/(byte[]) plot_xhi#0 )
  (byte[]) plot_xlo#36 ← phi( @begin/(byte[]) plot_xlo#0 )
  (byte*) BITMAP#7 ← phi( @begin/(byte*) BITMAP#0 )
  (byte*) D018#2 ← phi( @begin/(byte*) D018#0 )
  (byte*) D011#2 ← phi( @begin/(byte*) D011#0 )
  (byte) RSEL#2 ← phi( @begin/(byte) RSEL#0 )
  (byte) DEN#2 ← phi( @begin/(byte) DEN#0 )
  (byte) BMM#2 ← phi( @begin/(byte) BMM#0 )
  (byte*) FGCOL#2 ← phi( @begin/(byte*) FGCOL#0 )
  (byte*) BGCOL#2 ← phi( @begin/(byte*) BGCOL#0 )
  call main param-assignment
  to:@end
@end: scope:[]  from @10

Not aliassing across scopes: BGCOL#1 BGCOL#2
Not aliassing across scopes: FGCOL#1 FGCOL#2
Not aliassing across scopes: BMM#1 BMM#2
Not aliassing across scopes: DEN#1 DEN#2
Not aliassing across scopes: RSEL#1 RSEL#2
Not aliassing across scopes: D011#1 D011#2
Not aliassing across scopes: D018#1 D018#2
Not aliassing across scopes: BITMAP#6 BITMAP#7
Not aliassing across scopes: plot_xlo#19 plot_xlo#36
Not aliassing across scopes: plot_xhi#19 plot_xhi#36
Not aliassing across scopes: plot_bit#19 plot_bit#36
Not aliassing across scopes: SCREEN#5 SCREEN#6
Not aliassing across scopes: lines_x#8 lines_x#9
Not aliassing across scopes: lines_y#8 lines_y#9
Not aliassing across scopes: lines_cnt#8 lines_cnt#9
Not aliassing across scopes: plot_ylo#45 plot_ylo#47
Not aliassing across scopes: plot_yhi#45 plot_yhi#47
Not aliassing across scopes: lines_x#2 lines_x#4
Not aliassing across scopes: lines_y#2 lines_y#4
Not aliassing across scopes: lines_cnt#3 lines_cnt#4
Not aliassing across scopes: plot_xhi#45 plot_xhi#47
Not aliassing across scopes: plot_xlo#45 plot_xlo#47
Not aliassing across scopes: plot_yhi#49 plot_yhi#51
Not aliassing across scopes: plot_ylo#49 plot_ylo#51
Not aliassing across scopes: plot_bit#45 plot_bit#47
Not aliassing across scopes: line::x0#0 lines::$0
Not aliassing across scopes: line::x1#0 lines::$2
Not aliassing across scopes: line::y0#0 lines::$3
Not aliassing across scopes: line::y1#0 lines::$5
Not aliassing across scopes: line::x0#1 line::x0#0
Not aliassing across scopes: line::x1#1 line::x1#0
Not aliassing across scopes: line::y0#13 line::y0#0
Not aliassing across scopes: line::y1#13 line::y1#0
Not aliassing across scopes: plot_xhi#43 plot_xhi#44
Not aliassing across scopes: plot_xlo#43 plot_xlo#44
Not aliassing across scopes: plot_yhi#46 plot_yhi#48
Not aliassing across scopes: plot_ylo#46 plot_ylo#48
Not aliassing across scopes: plot_bit#43 plot_bit#44
Not aliassing across scopes: line_ydxi::y#0 line::y0#5
Not aliassing across scopes: line_ydxi::x#0 line::x0#4
Not aliassing across scopes: line_ydxi::y1#0 line::y1#5
Not aliassing across scopes: line_ydxi::yd#0 line::yd#4
Not aliassing across scopes: line_ydxi::xd#0 line::xd#4
Not aliassing across scopes: line_xdyi::x#0 line::x0#5
Not aliassing across scopes: line_xdyi::y#0 line::y0#6
Not aliassing across scopes: line_xdyi::x1#0 line::x1#4
Not aliassing across scopes: line_xdyi::xd#0 line::xd#5
Not aliassing across scopes: line_xdyi::yd#0 line::yd#5
Not aliassing across scopes: line_ydxd::y#0 line::y1#6
Not aliassing across scopes: line_ydxd::x#0 line::x1#5
Not aliassing across scopes: line_ydxd::y1#0 line::y0#7
Not aliassing across scopes: line_ydxd::yd#0 line::yd#6
Not aliassing across scopes: line_ydxd::xd#0 line::xd#6
Not aliassing across scopes: line_xdyd::x#0 line::x0#6
Not aliassing across scopes: line_xdyd::y#0 line::y0#8
Not aliassing across scopes: line_xdyd::x1#0 line::x1#6
Not aliassing across scopes: line_xdyd::xd#0 line::xd#7
Not aliassing across scopes: line_xdyd::yd#0 line::yd#7
Not aliassing across scopes: line_ydxd::y#1 line::y0#11
Not aliassing across scopes: line_ydxd::x#1 line::x0#7
Not aliassing across scopes: line_ydxd::y1#1 line::y1#9
Not aliassing across scopes: line_ydxd::yd#1 line::yd#8
Not aliassing across scopes: line_ydxd::xd#1 line::xd#10
Not aliassing across scopes: line_xdyd::x#1 line::x1#7
Not aliassing across scopes: line_xdyd::y#1 line::y1#10
Not aliassing across scopes: line_xdyd::x1#1 line::x0#8
Not aliassing across scopes: line_xdyd::xd#1 line::xd#11
Not aliassing across scopes: line_xdyd::yd#1 line::yd#9
Not aliassing across scopes: line_ydxi::y#1 line::y1#11
Not aliassing across scopes: line_ydxi::x#1 line::x1#8
Not aliassing across scopes: line_ydxi::y1#1 line::y0#12
Not aliassing across scopes: line_ydxi::yd#1 line::yd#10
Not aliassing across scopes: line_ydxi::xd#1 line::xd#12
Not aliassing across scopes: line_xdyi::x#1 line::x1#9
Not aliassing across scopes: line_xdyi::y#1 line::y1#12
Not aliassing across scopes: line_xdyi::x1#1 line::x0#9
Not aliassing across scopes: line_xdyi::xd#1 line::xd#13
Not aliassing across scopes: line_xdyi::yd#1 line::yd#11
Not aliassing across scopes: line_xdyi::yd#2 line_xdyi::yd#0
Not aliassing across scopes: line_xdyi::x#6 line_xdyi::x#0
Not aliassing across scopes: line_xdyi::y#5 line_xdyi::y#0
Not aliassing across scopes: line_xdyi::xd#5 line_xdyi::xd#0
Not aliassing across scopes: plot_xhi#9 plot_xhi#20
Not aliassing across scopes: plot_xlo#9 plot_xlo#20
Not aliassing across scopes: plot_yhi#9 plot_yhi#19
Not aliassing across scopes: plot_ylo#9 plot_ylo#19
Not aliassing across scopes: plot_bit#9 plot_bit#20
Not aliassing across scopes: line_xdyi::x1#6 line_xdyi::x1#0
Not aliassing across scopes: plot::x#0 line_xdyi::x#3
Not aliassing across scopes: plot::y#0 line_xdyi::y#3
Not aliassing across scopes: line_xdyd::yd#2 line_xdyd::yd#0
Not aliassing across scopes: line_xdyd::x#6 line_xdyd::x#0
Not aliassing across scopes: line_xdyd::y#5 line_xdyd::y#0
Not aliassing across scopes: line_xdyd::xd#5 line_xdyd::xd#0
Not aliassing across scopes: plot_xhi#11 plot_xhi#24
Not aliassing across scopes: plot_xlo#11 plot_xlo#24
Not aliassing across scopes: plot_yhi#11 plot_yhi#23
Not aliassing across scopes: plot_ylo#11 plot_ylo#23
Not aliassing across scopes: plot_bit#11 plot_bit#24
Not aliassing across scopes: line_xdyd::x1#6 line_xdyd::x1#0
Not aliassing across scopes: plot::x#1 line_xdyd::x#3
Not aliassing across scopes: plot::y#1 line_xdyd::y#3
Not aliassing across scopes: line_ydxi::xd#2 line_ydxi::xd#1
Not aliassing across scopes: line_ydxi::x#5 line_ydxi::x#1
Not aliassing across scopes: line_ydxi::y#6 line_ydxi::y#1
Not aliassing across scopes: line_ydxi::yd#5 line_ydxi::yd#1
Not aliassing across scopes: plot_xhi#13 plot_xhi#28
Not aliassing across scopes: plot_xlo#13 plot_xlo#28
Not aliassing across scopes: plot_yhi#13 plot_yhi#27
Not aliassing across scopes: plot_ylo#13 plot_ylo#27
Not aliassing across scopes: plot_bit#13 plot_bit#28
Not aliassing across scopes: line_ydxi::y1#6 line_ydxi::y1#1
Not aliassing across scopes: plot::x#2 line_ydxi::x#3
Not aliassing across scopes: plot::y#2 line_ydxi::y#3
Not aliassing across scopes: line_ydxd::xd#2 line_ydxd::xd#1
Not aliassing across scopes: line_ydxd::x#5 line_ydxd::x#1
Not aliassing across scopes: line_ydxd::y#6 line_ydxd::y#1
Not aliassing across scopes: line_ydxd::yd#5 line_ydxd::yd#1
Not aliassing across scopes: plot_xhi#15 plot_xhi#32
Not aliassing across scopes: plot_xlo#15 plot_xlo#32
Not aliassing across scopes: plot_yhi#15 plot_yhi#31
Not aliassing across scopes: plot_ylo#15 plot_ylo#31
Not aliassing across scopes: plot_bit#15 plot_bit#32
Not aliassing across scopes: line_ydxd::y1#6 line_ydxd::y1#1
Not aliassing across scopes: plot::x#3 line_ydxd::x#3
Not aliassing across scopes: plot::y#3 line_ydxd::y#3
Not aliassing across scopes: plot_xhi#1 plot_xhi#3
Not aliassing across scopes: plot::x#4 plot::x#1
Not aliassing across scopes: plot_xlo#1 plot_xlo#3
Not aliassing across scopes: plot_yhi#1 plot_yhi#3
Not aliassing across scopes: plot::y#4 plot::y#1
Not aliassing across scopes: plot_ylo#1 plot_ylo#3
Not aliassing across scopes: plot_bit#1 plot_bit#3
Not aliassing across scopes: plot_xlo#7 plot_xlo#17
Not aliassing across scopes: BITMAP#4 BITMAP#8
Not aliassing across scopes: plot_xhi#7 plot_xhi#17
Not aliassing across scopes: plot_bit#7 plot_bit#17
Not aliassing across scopes: plot_ylo#41 plot_ylo#44
Not aliassing across scopes: plot_yhi#41 plot_yhi#44
Not aliassing across scopes: BITMAP#2 BITMAP#6
Not aliassing across scopes: SCREEN#4 SCREEN#5
Not aliassing across scopes: init_screen::b#0 BITMAP#2
Not aliassing across scopes: init_screen::c#0 SCREEN#1
Not aliassing identity: SCREEN#2 SCREEN#2
Alias (byte[]) plot_xlo#17 = (byte[]) plot_xlo#19 (byte[]) plot_xlo#48 
Alias (byte*) BITMAP#6 = (byte*) BITMAP#8 
Alias (byte[]) plot_xhi#17 = (byte[]) plot_xhi#19 (byte[]) plot_xhi#48 
Alias (byte[]) plot_bit#17 = (byte[]) plot_bit#19 (byte[]) plot_bit#48 
Alias (byte[]) lines_x#5 = (byte[]) lines_x#7 (byte[]) lines_x#8 
Alias (byte[]) lines_y#5 = (byte[]) lines_y#7 (byte[]) lines_y#8 
Alias (byte) lines_cnt#5 = (byte) lines_cnt#7 (byte) lines_cnt#8 
Alias (byte[]) plot_ylo#44 = (byte[]) plot_ylo#45 (byte[]) plot_ylo#52 
Alias (byte[]) plot_yhi#44 = (byte[]) plot_yhi#45 (byte[]) plot_yhi#52 
Alias (byte[]) lines_x#4 = (byte[]) lines_x#6 
Alias (byte[]) lines_y#4 = (byte[]) lines_y#6 
Alias (byte) lines_cnt#4 = (byte) lines_cnt#6 
Alias (byte[]) plot_xhi#47 = (byte[]) plot_xhi#49 
Alias (byte[]) plot_xlo#47 = (byte[]) plot_xlo#49 
Alias (byte[]) plot_yhi#51 = (byte[]) plot_yhi#53 
Alias (byte[]) plot_ylo#51 = (byte[]) plot_ylo#53 
Alias (byte[]) plot_bit#47 = (byte[]) plot_bit#49 
Alias (byte) lines::l#2 = (byte) lines::l#3 
Alias (byte) lines_cnt#1 = (byte) lines_cnt#2 
Alias (byte[]) lines_x#1 = (byte[]) lines_x#3 
Alias (byte[]) lines_y#1 = (byte[]) lines_y#3 
Alias (byte[]) plot_xhi#44 = (byte[]) plot_xhi#46 
Alias (byte[]) plot_xlo#44 = (byte[]) plot_xlo#46 
Alias (byte[]) plot_yhi#48 = (byte[]) plot_yhi#50 
Alias (byte[]) plot_ylo#48 = (byte[]) plot_ylo#50 
Alias (byte[]) plot_bit#44 = (byte[]) plot_bit#46 
Alias (byte) line::x0#1 = (byte) line::x0#2 (byte) line::x0#3 (byte) line::x0#11 (byte) line::x0#10 (byte) line::x0#4 (byte) line::x0#5 (byte) line::x0#6 (byte) line::x0#13 (byte) line::x0#12 (byte) line::x0#7 (byte) line::x0#8 (byte) line::x0#9 
Alias (byte) line::x1#1 = (byte) line::x1#2 (byte) line::x1#3 (byte) line::x1#11 (byte) line::x1#10 (byte) line::x1#4 (byte) line::x1#5 (byte) line::x1#6 (byte) line::x1#13 (byte) line::x1#12 (byte) line::x1#7 (byte) line::x1#8 (byte) line::x1#9 
Alias (byte) line::y0#1 = (byte) line::y0#13 (byte) line::y0#2 (byte) line::y0#3 (byte) line::y0#4 (byte) line::y0#5 (byte) line::y0#6 (byte) line::y0#7 (byte) line::y0#8 (byte) line::y0#9 (byte) line::y0#10 (byte) line::y0#11 (byte) line::y0#12 
Alias (byte) line::y1#1 = (byte) line::y1#13 (byte) line::y1#2 (byte) line::y1#3 (byte) line::y1#4 (byte) line::y1#5 (byte) line::y1#6 (byte) line::y1#7 (byte) line::y1#8 (byte) line::y1#9 (byte) line::y1#10 (byte) line::y1#11 (byte) line::y1#12 
Alias (byte[]) plot_xhi#20 = (byte[]) plot_xhi#42 (byte[]) plot_xhi#43 (byte[]) plot_xhi#41 (byte[]) plot_xhi#38 (byte[]) plot_xhi#37 (byte[]) plot_xhi#29 (byte[]) plot_xhi#33 (byte[]) plot_xhi#24 (byte[]) plot_xhi#40 (byte[]) plot_xhi#39 (byte[]) plot_xhi#32 (byte[]) plot_xhi#25 (byte[]) plot_xhi#28 (byte[]) plot_xhi#21 
Alias (byte[]) plot_xlo#20 = (byte[]) plot_xlo#42 (byte[]) plot_xlo#43 (byte[]) plot_xlo#41 (byte[]) plot_xlo#38 (byte[]) plot_xlo#37 (byte[]) plot_xlo#29 (byte[]) plot_xlo#33 (byte[]) plot_xlo#24 (byte[]) plot_xlo#40 (byte[]) plot_xlo#39 (byte[]) plot_xlo#32 (byte[]) plot_xlo#25 (byte[]) plot_xlo#28 (byte[]) plot_xlo#21 
Alias (byte[]) plot_yhi#19 = (byte[]) plot_yhi#43 (byte[]) plot_yhi#46 (byte[]) plot_yhi#42 (byte[]) plot_yhi#38 (byte[]) plot_yhi#37 (byte[]) plot_yhi#28 (byte[]) plot_yhi#32 (byte[]) plot_yhi#23 (byte[]) plot_yhi#40 (byte[]) plot_yhi#39 (byte[]) plot_yhi#31 (byte[]) plot_yhi#24 (byte[]) plot_yhi#27 (byte[]) plot_yhi#20 
Alias (byte[]) plot_ylo#19 = (byte[]) plot_ylo#43 (byte[]) plot_ylo#46 (byte[]) plot_ylo#42 (byte[]) plot_ylo#38 (byte[]) plot_ylo#37 (byte[]) plot_ylo#28 (byte[]) plot_ylo#32 (byte[]) plot_ylo#23 (byte[]) plot_ylo#40 (byte[]) plot_ylo#39 (byte[]) plot_ylo#31 (byte[]) plot_ylo#24 (byte[]) plot_ylo#27 (byte[]) plot_ylo#20 
Alias (byte[]) plot_bit#20 = (byte[]) plot_bit#42 (byte[]) plot_bit#43 (byte[]) plot_bit#41 (byte[]) plot_bit#38 (byte[]) plot_bit#37 (byte[]) plot_bit#29 (byte[]) plot_bit#33 (byte[]) plot_bit#24 (byte[]) plot_bit#40 (byte[]) plot_bit#39 (byte[]) plot_bit#32 (byte[]) plot_bit#25 (byte[]) plot_bit#28 (byte[]) plot_bit#21 
Alias (byte) line::xd#0 = (byte~) line::$15 (byte) line::xd#8 (byte) line::xd#9 (byte) line::xd#10 (byte) line::xd#11 (byte) line::xd#12 (byte) line::xd#13 
Alias (byte) line::xd#1 = (byte~) line::$2 (byte) line::xd#2 (byte) line::xd#3 (byte) line::xd#4 (byte) line::xd#5 (byte) line::xd#6 (byte) line::xd#7 
Alias (byte) line::yd#0 = (byte~) line::$10 (byte) line::yd#6 (byte) line::yd#7 
Alias (byte) line::yd#1 = (byte~) line::$5 (byte) line::yd#4 (byte) line::yd#5 
Alias (byte) line::yd#10 = (byte) line::yd#2 (byte~) line::$23 (byte) line::yd#11 
Alias (byte) line::yd#3 = (byte~) line::$18 (byte) line::yd#8 (byte) line::yd#9 
Alias (byte) line_xdyi::e#0 = (byte~) line_xdyi::$0 
Alias (byte) line_xdyi::x#3 = (byte) line_xdyi::x#4 
Alias (byte) line_xdyi::e#3 = (byte) line_xdyi::e#5 
Alias (byte) line_xdyi::yd#3 = (byte) line_xdyi::yd#4 (byte) line_xdyi::yd#6 
Alias (byte) line_xdyi::xd#2 = (byte) line_xdyi::xd#4 (byte) line_xdyi::xd#3 
Alias (byte) line_xdyi::x1#3 = (byte) line_xdyi::x1#4 (byte) line_xdyi::x1#5 
Alias (byte) line_xdyi::y#3 = (byte) line_xdyi::y#7 (byte) line_xdyi::y#4 
Alias (byte[]) plot_xhi#22 = (byte[]) plot_xhi#23 (byte[]) plot_xhi#4 
Alias (byte[]) plot_xlo#22 = (byte[]) plot_xlo#23 (byte[]) plot_xlo#4 
Alias (byte[]) plot_yhi#21 = (byte[]) plot_yhi#22 (byte[]) plot_yhi#4 
Alias (byte[]) plot_ylo#21 = (byte[]) plot_ylo#22 (byte[]) plot_ylo#4 
Alias (byte[]) plot_bit#22 = (byte[]) plot_bit#23 (byte[]) plot_bit#4 
Alias (byte) line_xdyi::x#2 = (byte~) line_xdyi::$2 (byte) line_xdyi::x#7 
Alias (byte) line_xdyi::e#1 = (byte~) line_xdyi::$3 (byte) line_xdyi::e#4 
Alias (byte) line_xdyi::y#2 = (byte~) line_xdyi::$6 
Alias (byte) line_xdyi::e#2 = (byte~) line_xdyi::$7 
Alias (byte) line_xdyd::e#0 = (byte~) line_xdyd::$0 
Alias (byte) line_xdyd::x#3 = (byte) line_xdyd::x#4 
Alias (byte) line_xdyd::e#3 = (byte) line_xdyd::e#5 
Alias (byte) line_xdyd::yd#3 = (byte) line_xdyd::yd#4 (byte) line_xdyd::yd#6 
Alias (byte) line_xdyd::xd#2 = (byte) line_xdyd::xd#4 (byte) line_xdyd::xd#3 
Alias (byte) line_xdyd::x1#3 = (byte) line_xdyd::x1#4 (byte) line_xdyd::x1#5 
Alias (byte) line_xdyd::y#3 = (byte) line_xdyd::y#7 (byte) line_xdyd::y#4 
Alias (byte[]) plot_xhi#26 = (byte[]) plot_xhi#27 (byte[]) plot_xhi#3 
Alias (byte[]) plot_xlo#26 = (byte[]) plot_xlo#27 (byte[]) plot_xlo#3 
Alias (byte[]) plot_yhi#25 = (byte[]) plot_yhi#26 (byte[]) plot_yhi#3 
Alias (byte[]) plot_ylo#25 = (byte[]) plot_ylo#26 (byte[]) plot_ylo#3 
Alias (byte[]) plot_bit#26 = (byte[]) plot_bit#27 (byte[]) plot_bit#3 
Alias (byte) line_xdyd::x#2 = (byte~) line_xdyd::$2 (byte) line_xdyd::x#7 
Alias (byte) line_xdyd::e#1 = (byte~) line_xdyd::$3 (byte) line_xdyd::e#4 
Alias (byte) line_xdyd::y#2 = (byte~) line_xdyd::$6 
Alias (byte) line_xdyd::e#2 = (byte~) line_xdyd::$7 
Alias (byte) line_ydxi::e#0 = (byte~) line_ydxi::$0 
Alias (byte) line_ydxi::y#3 = (byte) line_ydxi::y#4 
Alias (byte) line_ydxi::e#3 = (byte) line_ydxi::e#5 
Alias (byte) line_ydxi::xd#3 = (byte) line_ydxi::xd#4 (byte) line_ydxi::xd#6 
Alias (byte) line_ydxi::yd#2 = (byte) line_ydxi::yd#4 (byte) line_ydxi::yd#3 
Alias (byte) line_ydxi::y1#3 = (byte) line_ydxi::y1#4 (byte) line_ydxi::y1#5 
Alias (byte) line_ydxi::x#3 = (byte) line_ydxi::x#7 (byte) line_ydxi::x#4 
Alias (byte[]) plot_xhi#30 = (byte[]) plot_xhi#31 (byte[]) plot_xhi#6 
Alias (byte[]) plot_xlo#30 = (byte[]) plot_xlo#31 (byte[]) plot_xlo#6 
Alias (byte[]) plot_yhi#29 = (byte[]) plot_yhi#30 (byte[]) plot_yhi#6 
Alias (byte[]) plot_ylo#29 = (byte[]) plot_ylo#30 (byte[]) plot_ylo#6 
Alias (byte[]) plot_bit#30 = (byte[]) plot_bit#31 (byte[]) plot_bit#6 
Alias (byte) line_ydxi::y#2 = (byte~) line_ydxi::$2 (byte) line_ydxi::y#7 
Alias (byte) line_ydxi::e#1 = (byte~) line_ydxi::$3 (byte) line_ydxi::e#4 
Alias (byte) line_ydxi::x#2 = (byte~) line_ydxi::$6 
Alias (byte) line_ydxi::e#2 = (byte~) line_ydxi::$7 
Alias (byte) line_ydxd::e#0 = (byte~) line_ydxd::$0 
Alias (byte) line_ydxd::y#3 = (byte) line_ydxd::y#4 
Alias (byte) line_ydxd::e#3 = (byte) line_ydxd::e#5 
Alias (byte) line_ydxd::xd#3 = (byte) line_ydxd::xd#4 (byte) line_ydxd::xd#6 
Alias (byte) line_ydxd::yd#2 = (byte) line_ydxd::yd#4 (byte) line_ydxd::yd#3 
Alias (byte) line_ydxd::y1#3 = (byte) line_ydxd::y1#4 (byte) line_ydxd::y1#5 
Alias (byte) line_ydxd::x#3 = (byte) line_ydxd::x#7 (byte) line_ydxd::x#4 
Alias (byte[]) plot_xhi#34 = (byte[]) plot_xhi#35 (byte[]) plot_xhi#5 
Alias (byte[]) plot_xlo#34 = (byte[]) plot_xlo#35 (byte[]) plot_xlo#5 
Alias (byte[]) plot_yhi#33 = (byte[]) plot_yhi#34 (byte[]) plot_yhi#5 
Alias (byte[]) plot_ylo#33 = (byte[]) plot_ylo#34 (byte[]) plot_ylo#5 
Alias (byte[]) plot_bit#34 = (byte[]) plot_bit#35 (byte[]) plot_bit#5 
Alias (byte) line_ydxd::y#2 = (byte~) line_ydxd::$2 (byte) line_ydxd::y#7 
Alias (byte) line_ydxd::e#1 = (byte~) line_ydxd::$3 (byte) line_ydxd::e#4 
Alias (byte) line_ydxd::x#2 = (byte~) line_ydxd::$6 
Alias (byte) line_ydxd::e#2 = (byte~) line_ydxd::$7 
Alias (byte*) plot::plotter#0 = (byte*~) plot::$4 
Alias (byte) init_plot_tables::bits#1 = (byte~) init_plot_tables::$2 
Alias (byte) init_plot_tables::x#2 = (byte) init_plot_tables::x#4 
Alias (byte[]) plot_xlo#18 = (byte[]) plot_xlo#2 
Alias (byte*) BITMAP#1 = (byte*) BITMAP#9 
Alias (byte[]) plot_xhi#18 = (byte[]) plot_xhi#2 
Alias (byte[]) plot_bit#18 = (byte[]) plot_bit#2 
Alias (byte[]) plot_ylo#35 = (byte[]) plot_ylo#36 
Alias (byte[]) plot_yhi#35 = (byte[]) plot_yhi#36 
Alias (byte[]) plot_ylo#17 = (byte[]) plot_ylo#8 
Alias (byte[]) plot_yhi#17 = (byte[]) plot_yhi#8 
Alias (byte*) init_plot_tables::yoffs#2 = (byte*) init_plot_tables::yoffs#3 
Alias (byte) init_plot_tables::y#2 = (byte) init_plot_tables::y#4 
Alias (byte[]) plot_ylo#18 = (byte[]) plot_ylo#2 
Alias (byte[]) plot_yhi#18 = (byte[]) plot_yhi#2 
Alias (byte*) init_plot_tables::yoffs#1 = (byte*~) init_plot_tables::$13 
Alias (byte*) SCREEN#1 = (byte*) SCREEN#3 
Alias (byte*) BGCOL#0 = (byte*) BGCOL#2 
Alias (byte*) FGCOL#0 = (byte*) FGCOL#2 
Alias (byte) BMM#0 = (byte) BMM#2 
Alias (byte) DEN#0 = (byte) DEN#2 
Alias (byte) RSEL#0 = (byte) RSEL#2 
Alias (byte*) D011#0 = (byte*) D011#2 
Alias (byte*) D018#0 = (byte*) D018#2 
Alias (byte*) BITMAP#0 = (byte*) BITMAP#7 
Alias (byte[]) plot_xlo#0 = (byte[]) plot_xlo#36 
Alias (byte[]) plot_xhi#0 = (byte[]) plot_xhi#36 
Alias (byte[]) plot_bit#0 = (byte[]) plot_bit#36 
Alias (byte*) SCREEN#0 = (byte*) SCREEN#6 
Alias (byte[]) lines_x#0 = (byte[]) lines_x#9 
Alias (byte[]) lines_y#0 = (byte[]) lines_y#9 
Alias (byte) lines_cnt#0 = (byte) lines_cnt#9 
Alias (byte[]) plot_ylo#0 = (byte[]) plot_ylo#47 
Alias (byte[]) plot_yhi#0 = (byte[]) plot_yhi#47 
Succesful SSA optimization Pass2AliasElimination
CONTROL FLOW GRAPH
@begin: scope:[]  from
  (byte*) BGCOL#0 ← ((byte*)) (word) 53280
  (byte*) FGCOL#0 ← ((byte*)) (word) 53281
  (byte*) D018#0 ← ((byte*)) (word) 53272
  (byte*) D011#0 ← ((byte*)) (word) 53265
  (byte) BMM#0 ← (byte/signed byte/word/signed word) 32
  (byte) DEN#0 ← (byte/signed byte/word/signed word) 16
  (byte) RSEL#0 ← (byte/signed byte/word/signed word) 8
  (byte*) SCREEN#0 ← ((byte*)) (word/signed word) 1024
  (byte*) BITMAP#0 ← ((byte*)) (word/signed word) 8192
  (byte[]) plot_xlo#0 ← ((byte*)) (word/signed word) 4096
  (byte[]) plot_xhi#0 ← ((byte*)) (word/signed word) 4352
  (byte[]) plot_ylo#0 ← ((byte*)) (word/signed word) 4608
  (byte[]) plot_yhi#0 ← ((byte*)) (word/signed word) 4864
  (byte[]) plot_bit#0 ← ((byte*)) (word/signed word) 5120
  (byte[]) lines_x#0 ← { (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60 }
  (byte[]) lines_y#0 ← { (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10 }
  (byte) lines_cnt#0 ← (byte/signed byte/word/signed word) 8
  to:@10
main: scope:[main]  from @10
  (byte[]) plot_yhi#44 ← phi( @10/(byte[]) plot_yhi#0 )
  (byte[]) plot_ylo#44 ← phi( @10/(byte[]) plot_ylo#0 )
  (byte) lines_cnt#5 ← phi( @10/(byte) lines_cnt#0 )
  (byte[]) lines_y#5 ← phi( @10/(byte[]) lines_y#0 )
  (byte[]) lines_x#5 ← phi( @10/(byte[]) lines_x#0 )
  (byte*) SCREEN#5 ← phi( @10/(byte*) SCREEN#0 )
  (byte[]) plot_bit#17 ← phi( @10/(byte[]) plot_bit#0 )
  (byte[]) plot_xhi#17 ← phi( @10/(byte[]) plot_xhi#0 )
  (byte[]) plot_xlo#17 ← phi( @10/(byte[]) plot_xlo#0 )
  (byte*) BITMAP#6 ← phi( @10/(byte*) BITMAP#0 )
  (byte*) D018#1 ← phi( @10/(byte*) D018#0 )
  (byte*) D011#1 ← phi( @10/(byte*) D011#0 )
  (byte) RSEL#1 ← phi( @10/(byte) RSEL#0 )
  (byte) DEN#1 ← phi( @10/(byte) DEN#0 )
  (byte) BMM#1 ← phi( @10/(byte) BMM#0 )
  (byte*) FGCOL#1 ← phi( @10/(byte*) FGCOL#0 )
  (byte*) BGCOL#1 ← phi( @10/(byte*) BGCOL#0 )
  *((byte*) BGCOL#1) ← (byte/signed byte/word/signed word) 0
  *((byte*) FGCOL#1) ← (byte/signed byte/word/signed word) 0
  (byte~) main::$0 ← (byte) BMM#1 | (byte) DEN#1
  (byte~) main::$1 ← (byte~) main::$0 | (byte) RSEL#1
  (byte~) main::$2 ← (byte~) main::$1 | (byte/signed byte/word/signed word) 3
  *((byte*) D011#1) ← (byte~) main::$2
  *((byte*) D018#1) ← (byte/signed byte/word/signed word) 24
  call init_screen param-assignment
  to:main::@3
main::@3: scope:[main]  from main
  call init_plot_tables param-assignment
  to:main::@4
main::@4: scope:[main]  from main::@3
  to:main::@1
main::@1: scope:[main]  from main::@4 main::@5
  (byte[]) plot_bit#47 ← phi( main::@4/(byte[]) plot_bit#17 main::@5/(byte[]) plot_bit#47 )
  (byte[]) plot_ylo#51 ← phi( main::@4/(byte[]) plot_ylo#44 main::@5/(byte[]) plot_ylo#51 )
  (byte[]) plot_yhi#51 ← phi( main::@4/(byte[]) plot_yhi#44 main::@5/(byte[]) plot_yhi#51 )
  (byte[]) plot_xlo#47 ← phi( main::@4/(byte[]) plot_xlo#17 main::@5/(byte[]) plot_xlo#47 )
  (byte[]) plot_xhi#47 ← phi( main::@4/(byte[]) plot_xhi#17 main::@5/(byte[]) plot_xhi#47 )
  (byte) lines_cnt#4 ← phi( main::@4/(byte) lines_cnt#5 main::@5/(byte) lines_cnt#4 )
  (byte[]) lines_y#4 ← phi( main::@4/(byte[]) lines_y#5 main::@5/(byte[]) lines_y#4 )
  (byte[]) lines_x#4 ← phi( main::@4/(byte[]) lines_x#5 main::@5/(byte[]) lines_x#4 )
  call lines param-assignment
  to:main::@5
main::@5: scope:[main]  from main::@1
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@5
  return 
  to:@return
lines: scope:[lines]  from main::@1
  (byte[]) plot_bit#45 ← phi( main::@1/(byte[]) plot_bit#47 )
  (byte[]) plot_ylo#49 ← phi( main::@1/(byte[]) plot_ylo#51 )
  (byte[]) plot_yhi#49 ← phi( main::@1/(byte[]) plot_yhi#51 )
  (byte[]) plot_xlo#45 ← phi( main::@1/(byte[]) plot_xlo#47 )
  (byte[]) plot_xhi#45 ← phi( main::@1/(byte[]) plot_xhi#47 )
  (byte) lines_cnt#3 ← phi( main::@1/(byte) lines_cnt#4 )
  (byte[]) lines_y#2 ← phi( main::@1/(byte[]) lines_y#4 )
  (byte[]) lines_x#2 ← phi( main::@1/(byte[]) lines_x#4 )
  (byte) lines::l#0 ← (byte/signed byte/word/signed word) 0
  to:lines::@1
lines::@1: scope:[lines]  from lines lines::@3
  (byte[]) plot_bit#44 ← phi( lines/(byte[]) plot_bit#45 lines::@3/(byte[]) plot_bit#44 )
  (byte[]) plot_ylo#48 ← phi( lines/(byte[]) plot_ylo#49 lines::@3/(byte[]) plot_ylo#48 )
  (byte[]) plot_yhi#48 ← phi( lines/(byte[]) plot_yhi#49 lines::@3/(byte[]) plot_yhi#48 )
  (byte[]) plot_xlo#44 ← phi( lines/(byte[]) plot_xlo#45 lines::@3/(byte[]) plot_xlo#44 )
  (byte[]) plot_xhi#44 ← phi( lines/(byte[]) plot_xhi#45 lines::@3/(byte[]) plot_xhi#44 )
  (byte) lines_cnt#1 ← phi( lines/(byte) lines_cnt#3 lines::@3/(byte) lines_cnt#1 )
  (byte[]) lines_y#1 ← phi( lines/(byte[]) lines_y#2 lines::@3/(byte[]) lines_y#1 )
  (byte) lines::l#2 ← phi( lines/(byte) lines::l#0 lines::@3/(byte) lines::l#1 )
  (byte[]) lines_x#1 ← phi( lines/(byte[]) lines_x#2 lines::@3/(byte[]) lines_x#1 )
  (byte~) lines::$0 ← (byte[]) lines_x#1 *idx (byte) lines::l#2
  (byte~) lines::$1 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$2 ← (byte[]) lines_x#1 *idx (byte~) lines::$1
  (byte~) lines::$3 ← (byte[]) lines_y#1 *idx (byte) lines::l#2
  (byte~) lines::$4 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$5 ← (byte[]) lines_y#1 *idx (byte~) lines::$4
  (byte) line::x0#0 ← (byte~) lines::$0
  (byte) line::x1#0 ← (byte~) lines::$2
  (byte) line::y0#0 ← (byte~) lines::$3
  (byte) line::y1#0 ← (byte~) lines::$5
  call line param-assignment
  to:lines::@3
lines::@3: scope:[lines]  from lines::@1
  (byte) lines::l#1 ← ++ (byte) lines::l#2
  (boolean~) lines::$7 ← (byte) lines::l#1 < (byte) lines_cnt#1
  if((boolean~) lines::$7) goto lines::@1
  to:lines::@return
lines::@return: scope:[lines]  from lines::@3
  return 
  to:@return
line: scope:[line]  from lines::@1
  (byte[]) plot_bit#20 ← phi( lines::@1/(byte[]) plot_bit#44 )
  (byte[]) plot_ylo#19 ← phi( lines::@1/(byte[]) plot_ylo#48 )
  (byte[]) plot_yhi#19 ← phi( lines::@1/(byte[]) plot_yhi#48 )
  (byte[]) plot_xlo#20 ← phi( lines::@1/(byte[]) plot_xlo#44 )
  (byte[]) plot_xhi#20 ← phi( lines::@1/(byte[]) plot_xhi#44 )
  (byte) line::y1#1 ← phi( lines::@1/(byte) line::y1#0 )
  (byte) line::y0#1 ← phi( lines::@1/(byte) line::y0#0 )
  (byte) line::x1#1 ← phi( lines::@1/(byte) line::x1#0 )
  (byte) line::x0#1 ← phi( lines::@1/(byte) line::x0#0 )
  (boolean~) line::$1 ← (byte) line::x0#1 >= (byte) line::x1#1
  if((boolean~) line::$1) goto line::@1
  to:line::@15
line::@1: scope:[line]  from line
  (byte) line::xd#0 ← (byte) line::x0#1 - (byte) line::x1#1
  (boolean~) line::$17 ← (byte) line::y0#1 >= (byte) line::y1#1
  if((boolean~) line::$17) goto line::@9
  to:line::@23
line::@15: scope:[line]  from line
  (byte) line::xd#1 ← (byte) line::x1#1 - (byte) line::x0#1
  (boolean~) line::$4 ← (byte) line::y0#1 >= (byte) line::y1#1
  if((boolean~) line::$4) goto line::@2
  to:line::@16
line::@2: scope:[line]  from line::@15
  (byte) line::yd#0 ← (byte) line::y0#1 - (byte) line::y1#1
  (boolean~) line::$12 ← (byte) line::yd#0 >= (byte) line::xd#1
  if((boolean~) line::$12) goto line::@6
  to:line::@20
line::@16: scope:[line]  from line::@15
  (byte) line::yd#1 ← (byte) line::y1#1 - (byte) line::y0#1
  (boolean~) line::$7 ← (byte) line::yd#1 >= (byte) line::xd#1
  if((boolean~) line::$7) goto line::@3
  to:line::@17
line::@3: scope:[line]  from line::@16
  (byte) line_ydxi::y#0 ← (byte) line::y0#1
  (byte) line_ydxi::x#0 ← (byte) line::x0#1
  (byte) line_ydxi::y1#0 ← (byte) line::y1#1
  (byte) line_ydxi::yd#0 ← (byte) line::yd#1
  (byte) line_ydxi::xd#0 ← (byte) line::xd#1
  call line_ydxi param-assignment
  to:line::@return
line::@17: scope:[line]  from line::@16
  (byte) line_xdyi::x#0 ← (byte) line::x0#1
  (byte) line_xdyi::y#0 ← (byte) line::y0#1
  (byte) line_xdyi::x1#0 ← (byte) line::x1#1
  (byte) line_xdyi::xd#0 ← (byte) line::xd#1
  (byte) line_xdyi::yd#0 ← (byte) line::yd#1
  call line_xdyi param-assignment
  to:line::@return
line::@6: scope:[line]  from line::@2
  (byte) line_ydxd::y#0 ← (byte) line::y1#1
  (byte) line_ydxd::x#0 ← (byte) line::x1#1
  (byte) line_ydxd::y1#0 ← (byte) line::y0#1
  (byte) line_ydxd::yd#0 ← (byte) line::yd#0
  (byte) line_ydxd::xd#0 ← (byte) line::xd#1
  call line_ydxd param-assignment
  to:line::@return
line::@20: scope:[line]  from line::@2
  (byte) line_xdyd::x#0 ← (byte) line::x0#1
  (byte) line_xdyd::y#0 ← (byte) line::y0#1
  (byte) line_xdyd::x1#0 ← (byte) line::x1#1
  (byte) line_xdyd::xd#0 ← (byte) line::xd#1
  (byte) line_xdyd::yd#0 ← (byte) line::yd#0
  call line_xdyd param-assignment
  to:line::@return
line::@9: scope:[line]  from line::@1
  (byte) line::yd#10 ← (byte) line::y0#1 - (byte) line::y1#1
  (boolean~) line::$25 ← (byte) line::yd#10 >= (byte) line::xd#0
  if((boolean~) line::$25) goto line::@13
  to:line::@27
line::@23: scope:[line]  from line::@1
  (byte) line::yd#3 ← (byte) line::y1#1 - (byte) line::y0#1
  (boolean~) line::$20 ← (byte) line::yd#3 >= (byte) line::xd#0
  if((boolean~) line::$20) goto line::@10
  to:line::@24
line::@10: scope:[line]  from line::@23
  (byte) line_ydxd::y#1 ← (byte) line::y0#1
  (byte) line_ydxd::x#1 ← (byte) line::x0#1
  (byte) line_ydxd::y1#1 ← (byte) line::y1#1
  (byte) line_ydxd::yd#1 ← (byte) line::yd#3
  (byte) line_ydxd::xd#1 ← (byte) line::xd#0
  call line_ydxd param-assignment
  to:line::@return
line::@24: scope:[line]  from line::@23
  (byte) line_xdyd::x#1 ← (byte) line::x1#1
  (byte) line_xdyd::y#1 ← (byte) line::y1#1
  (byte) line_xdyd::x1#1 ← (byte) line::x0#1
  (byte) line_xdyd::xd#1 ← (byte) line::xd#0
  (byte) line_xdyd::yd#1 ← (byte) line::yd#3
  call line_xdyd param-assignment
  to:line::@return
line::@13: scope:[line]  from line::@9
  (byte) line_ydxi::y#1 ← (byte) line::y1#1
  (byte) line_ydxi::x#1 ← (byte) line::x1#1
  (byte) line_ydxi::y1#1 ← (byte) line::y0#1
  (byte) line_ydxi::yd#1 ← (byte) line::yd#10
  (byte) line_ydxi::xd#1 ← (byte) line::xd#0
  call line_ydxi param-assignment
  to:line::@return
line::@27: scope:[line]  from line::@9
  (byte) line_xdyi::x#1 ← (byte) line::x1#1
  (byte) line_xdyi::y#1 ← (byte) line::y1#1
  (byte) line_xdyi::x1#1 ← (byte) line::x0#1
  (byte) line_xdyi::xd#1 ← (byte) line::xd#0
  (byte) line_xdyi::yd#1 ← (byte) line::yd#10
  call line_xdyi param-assignment
  to:line::@return
line::@return: scope:[line]  from line::@10 line::@13 line::@17 line::@20 line::@24 line::@27 line::@3 line::@6
  return 
  to:@return
line_xdyi: scope:[line_xdyi]  from line::@17 line::@27
  (byte) line_xdyi::x1#6 ← phi( line::@17/(byte) line_xdyi::x1#0 line::@27/(byte) line_xdyi::x1#1 )
  (byte[]) plot_bit#9 ← phi( line::@17/(byte[]) plot_bit#20 line::@27/(byte[]) plot_bit#20 )
  (byte[]) plot_ylo#9 ← phi( line::@17/(byte[]) plot_ylo#19 line::@27/(byte[]) plot_ylo#19 )
  (byte[]) plot_yhi#9 ← phi( line::@17/(byte[]) plot_yhi#19 line::@27/(byte[]) plot_yhi#19 )
  (byte[]) plot_xlo#9 ← phi( line::@17/(byte[]) plot_xlo#20 line::@27/(byte[]) plot_xlo#20 )
  (byte[]) plot_xhi#9 ← phi( line::@17/(byte[]) plot_xhi#20 line::@27/(byte[]) plot_xhi#20 )
  (byte) line_xdyi::xd#5 ← phi( line::@17/(byte) line_xdyi::xd#0 line::@27/(byte) line_xdyi::xd#1 )
  (byte) line_xdyi::y#5 ← phi( line::@17/(byte) line_xdyi::y#0 line::@27/(byte) line_xdyi::y#1 )
  (byte) line_xdyi::x#6 ← phi( line::@17/(byte) line_xdyi::x#0 line::@27/(byte) line_xdyi::x#1 )
  (byte) line_xdyi::yd#2 ← phi( line::@17/(byte) line_xdyi::yd#0 line::@27/(byte) line_xdyi::yd#1 )
  (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyi::@1
line_xdyi::@1: scope:[line_xdyi]  from line_xdyi line_xdyi::@2
  (byte) line_xdyi::x1#3 ← phi( line_xdyi/(byte) line_xdyi::x1#6 line_xdyi::@2/(byte) line_xdyi::x1#2 )
  (byte[]) plot_bit#22 ← phi( line_xdyi/(byte[]) plot_bit#9 line_xdyi::@2/(byte[]) plot_bit#10 )
  (byte[]) plot_ylo#21 ← phi( line_xdyi/(byte[]) plot_ylo#9 line_xdyi::@2/(byte[]) plot_ylo#10 )
  (byte[]) plot_yhi#21 ← phi( line_xdyi/(byte[]) plot_yhi#9 line_xdyi::@2/(byte[]) plot_yhi#10 )
  (byte[]) plot_xlo#22 ← phi( line_xdyi/(byte[]) plot_xlo#9 line_xdyi::@2/(byte[]) plot_xlo#10 )
  (byte[]) plot_xhi#22 ← phi( line_xdyi/(byte[]) plot_xhi#9 line_xdyi::@2/(byte[]) plot_xhi#10 )
  (byte) line_xdyi::xd#2 ← phi( line_xdyi/(byte) line_xdyi::xd#5 line_xdyi::@2/(byte) line_xdyi::xd#6 )
  (byte) line_xdyi::yd#3 ← phi( line_xdyi/(byte) line_xdyi::yd#2 line_xdyi::@2/(byte) line_xdyi::yd#5 )
  (byte) line_xdyi::e#3 ← phi( line_xdyi/(byte) line_xdyi::e#0 line_xdyi::@2/(byte) line_xdyi::e#6 )
  (byte) line_xdyi::y#3 ← phi( line_xdyi/(byte) line_xdyi::y#5 line_xdyi::@2/(byte) line_xdyi::y#6 )
  (byte) line_xdyi::x#3 ← phi( line_xdyi/(byte) line_xdyi::x#6 line_xdyi::@2/(byte) line_xdyi::x#5 )
  (byte) plot::x#0 ← (byte) line_xdyi::x#3
  (byte) plot::y#0 ← (byte) line_xdyi::y#3
  call plot param-assignment
  to:line_xdyi::@5
line_xdyi::@5: scope:[line_xdyi]  from line_xdyi::@1
  (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#3
  (boolean~) line_xdyi::$5 ← (byte) line_xdyi::xd#2 >= (byte) line_xdyi::e#1
  if((boolean~) line_xdyi::$5) goto line_xdyi::@2
  to:line_xdyi::@3
line_xdyi::@2: scope:[line_xdyi]  from line_xdyi::@3 line_xdyi::@5
  (byte[]) plot_bit#10 ← phi( line_xdyi::@3/(byte[]) plot_bit#22 line_xdyi::@5/(byte[]) plot_bit#22 )
  (byte[]) plot_ylo#10 ← phi( line_xdyi::@3/(byte[]) plot_ylo#21 line_xdyi::@5/(byte[]) plot_ylo#21 )
  (byte[]) plot_yhi#10 ← phi( line_xdyi::@3/(byte[]) plot_yhi#21 line_xdyi::@5/(byte[]) plot_yhi#21 )
  (byte[]) plot_xlo#10 ← phi( line_xdyi::@3/(byte[]) plot_xlo#22 line_xdyi::@5/(byte[]) plot_xlo#22 )
  (byte[]) plot_xhi#10 ← phi( line_xdyi::@3/(byte[]) plot_xhi#22 line_xdyi::@5/(byte[]) plot_xhi#22 )
  (byte) line_xdyi::xd#6 ← phi( line_xdyi::@3/(byte) line_xdyi::xd#2 line_xdyi::@5/(byte) line_xdyi::xd#2 )
  (byte) line_xdyi::yd#5 ← phi( line_xdyi::@3/(byte) line_xdyi::yd#3 line_xdyi::@5/(byte) line_xdyi::yd#3 )
  (byte) line_xdyi::e#6 ← phi( line_xdyi::@3/(byte) line_xdyi::e#2 line_xdyi::@5/(byte) line_xdyi::e#1 )
  (byte) line_xdyi::y#6 ← phi( line_xdyi::@3/(byte) line_xdyi::y#2 line_xdyi::@5/(byte) line_xdyi::y#3 )
  (byte) line_xdyi::x#5 ← phi( line_xdyi::@3/(byte) line_xdyi::x#2 line_xdyi::@5/(byte) line_xdyi::x#2 )
  (byte) line_xdyi::x1#2 ← phi( line_xdyi::@3/(byte) line_xdyi::x1#3 line_xdyi::@5/(byte) line_xdyi::x1#3 )
  (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyi::$9 ← (byte) line_xdyi::x#5 < (byte~) line_xdyi::$8
  if((boolean~) line_xdyi::$9) goto line_xdyi::@1
  to:line_xdyi::@return
line_xdyi::@3: scope:[line_xdyi]  from line_xdyi::@5
  (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#2
  to:line_xdyi::@2
line_xdyi::@return: scope:[line_xdyi]  from line_xdyi::@2
  return 
  to:@return
line_xdyd: scope:[line_xdyd]  from line::@20 line::@24
  (byte) line_xdyd::x1#6 ← phi( line::@20/(byte) line_xdyd::x1#0 line::@24/(byte) line_xdyd::x1#1 )
  (byte[]) plot_bit#11 ← phi( line::@20/(byte[]) plot_bit#20 line::@24/(byte[]) plot_bit#20 )
  (byte[]) plot_ylo#11 ← phi( line::@20/(byte[]) plot_ylo#19 line::@24/(byte[]) plot_ylo#19 )
  (byte[]) plot_yhi#11 ← phi( line::@20/(byte[]) plot_yhi#19 line::@24/(byte[]) plot_yhi#19 )
  (byte[]) plot_xlo#11 ← phi( line::@20/(byte[]) plot_xlo#20 line::@24/(byte[]) plot_xlo#20 )
  (byte[]) plot_xhi#11 ← phi( line::@20/(byte[]) plot_xhi#20 line::@24/(byte[]) plot_xhi#20 )
  (byte) line_xdyd::xd#5 ← phi( line::@20/(byte) line_xdyd::xd#0 line::@24/(byte) line_xdyd::xd#1 )
  (byte) line_xdyd::y#5 ← phi( line::@20/(byte) line_xdyd::y#0 line::@24/(byte) line_xdyd::y#1 )
  (byte) line_xdyd::x#6 ← phi( line::@20/(byte) line_xdyd::x#0 line::@24/(byte) line_xdyd::x#1 )
  (byte) line_xdyd::yd#2 ← phi( line::@20/(byte) line_xdyd::yd#0 line::@24/(byte) line_xdyd::yd#1 )
  (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyd::@1
line_xdyd::@1: scope:[line_xdyd]  from line_xdyd line_xdyd::@2
  (byte) line_xdyd::x1#3 ← phi( line_xdyd/(byte) line_xdyd::x1#6 line_xdyd::@2/(byte) line_xdyd::x1#2 )
  (byte[]) plot_bit#26 ← phi( line_xdyd/(byte[]) plot_bit#11 line_xdyd::@2/(byte[]) plot_bit#12 )
  (byte[]) plot_ylo#25 ← phi( line_xdyd/(byte[]) plot_ylo#11 line_xdyd::@2/(byte[]) plot_ylo#12 )
  (byte[]) plot_yhi#25 ← phi( line_xdyd/(byte[]) plot_yhi#11 line_xdyd::@2/(byte[]) plot_yhi#12 )
  (byte[]) plot_xlo#26 ← phi( line_xdyd/(byte[]) plot_xlo#11 line_xdyd::@2/(byte[]) plot_xlo#12 )
  (byte[]) plot_xhi#26 ← phi( line_xdyd/(byte[]) plot_xhi#11 line_xdyd::@2/(byte[]) plot_xhi#12 )
  (byte) line_xdyd::xd#2 ← phi( line_xdyd/(byte) line_xdyd::xd#5 line_xdyd::@2/(byte) line_xdyd::xd#6 )
  (byte) line_xdyd::yd#3 ← phi( line_xdyd/(byte) line_xdyd::yd#2 line_xdyd::@2/(byte) line_xdyd::yd#5 )
  (byte) line_xdyd::e#3 ← phi( line_xdyd/(byte) line_xdyd::e#0 line_xdyd::@2/(byte) line_xdyd::e#6 )
  (byte) line_xdyd::y#3 ← phi( line_xdyd/(byte) line_xdyd::y#5 line_xdyd::@2/(byte) line_xdyd::y#6 )
  (byte) line_xdyd::x#3 ← phi( line_xdyd/(byte) line_xdyd::x#6 line_xdyd::@2/(byte) line_xdyd::x#5 )
  (byte) plot::x#1 ← (byte) line_xdyd::x#3
  (byte) plot::y#1 ← (byte) line_xdyd::y#3
  call plot param-assignment
  to:line_xdyd::@5
line_xdyd::@5: scope:[line_xdyd]  from line_xdyd::@1
  (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#3
  (boolean~) line_xdyd::$5 ← (byte) line_xdyd::xd#2 >= (byte) line_xdyd::e#1
  if((boolean~) line_xdyd::$5) goto line_xdyd::@2
  to:line_xdyd::@3
line_xdyd::@2: scope:[line_xdyd]  from line_xdyd::@3 line_xdyd::@5
  (byte[]) plot_bit#12 ← phi( line_xdyd::@3/(byte[]) plot_bit#26 line_xdyd::@5/(byte[]) plot_bit#26 )
  (byte[]) plot_ylo#12 ← phi( line_xdyd::@3/(byte[]) plot_ylo#25 line_xdyd::@5/(byte[]) plot_ylo#25 )
  (byte[]) plot_yhi#12 ← phi( line_xdyd::@3/(byte[]) plot_yhi#25 line_xdyd::@5/(byte[]) plot_yhi#25 )
  (byte[]) plot_xlo#12 ← phi( line_xdyd::@3/(byte[]) plot_xlo#26 line_xdyd::@5/(byte[]) plot_xlo#26 )
  (byte[]) plot_xhi#12 ← phi( line_xdyd::@3/(byte[]) plot_xhi#26 line_xdyd::@5/(byte[]) plot_xhi#26 )
  (byte) line_xdyd::xd#6 ← phi( line_xdyd::@3/(byte) line_xdyd::xd#2 line_xdyd::@5/(byte) line_xdyd::xd#2 )
  (byte) line_xdyd::yd#5 ← phi( line_xdyd::@3/(byte) line_xdyd::yd#3 line_xdyd::@5/(byte) line_xdyd::yd#3 )
  (byte) line_xdyd::e#6 ← phi( line_xdyd::@3/(byte) line_xdyd::e#2 line_xdyd::@5/(byte) line_xdyd::e#1 )
  (byte) line_xdyd::y#6 ← phi( line_xdyd::@3/(byte) line_xdyd::y#2 line_xdyd::@5/(byte) line_xdyd::y#3 )
  (byte) line_xdyd::x#5 ← phi( line_xdyd::@3/(byte) line_xdyd::x#2 line_xdyd::@5/(byte) line_xdyd::x#2 )
  (byte) line_xdyd::x1#2 ← phi( line_xdyd::@3/(byte) line_xdyd::x1#3 line_xdyd::@5/(byte) line_xdyd::x1#3 )
  (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyd::$9 ← (byte) line_xdyd::x#5 < (byte~) line_xdyd::$8
  if((boolean~) line_xdyd::$9) goto line_xdyd::@1
  to:line_xdyd::@return
line_xdyd::@3: scope:[line_xdyd]  from line_xdyd::@5
  (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#2
  to:line_xdyd::@2
line_xdyd::@return: scope:[line_xdyd]  from line_xdyd::@2
  return 
  to:@return
line_ydxi: scope:[line_ydxi]  from line::@13 line::@3
  (byte) line_ydxi::y1#6 ← phi( line::@13/(byte) line_ydxi::y1#1 line::@3/(byte) line_ydxi::y1#0 )
  (byte[]) plot_bit#13 ← phi( line::@13/(byte[]) plot_bit#20 line::@3/(byte[]) plot_bit#20 )
  (byte[]) plot_ylo#13 ← phi( line::@13/(byte[]) plot_ylo#19 line::@3/(byte[]) plot_ylo#19 )
  (byte[]) plot_yhi#13 ← phi( line::@13/(byte[]) plot_yhi#19 line::@3/(byte[]) plot_yhi#19 )
  (byte[]) plot_xlo#13 ← phi( line::@13/(byte[]) plot_xlo#20 line::@3/(byte[]) plot_xlo#20 )
  (byte[]) plot_xhi#13 ← phi( line::@13/(byte[]) plot_xhi#20 line::@3/(byte[]) plot_xhi#20 )
  (byte) line_ydxi::yd#5 ← phi( line::@13/(byte) line_ydxi::yd#1 line::@3/(byte) line_ydxi::yd#0 )
  (byte) line_ydxi::y#6 ← phi( line::@13/(byte) line_ydxi::y#1 line::@3/(byte) line_ydxi::y#0 )
  (byte) line_ydxi::x#5 ← phi( line::@13/(byte) line_ydxi::x#1 line::@3/(byte) line_ydxi::x#0 )
  (byte) line_ydxi::xd#2 ← phi( line::@13/(byte) line_ydxi::xd#1 line::@3/(byte) line_ydxi::xd#0 )
  (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxi::@1
line_ydxi::@1: scope:[line_ydxi]  from line_ydxi line_ydxi::@2
  (byte) line_ydxi::y1#3 ← phi( line_ydxi/(byte) line_ydxi::y1#6 line_ydxi::@2/(byte) line_ydxi::y1#2 )
  (byte[]) plot_bit#30 ← phi( line_ydxi/(byte[]) plot_bit#13 line_ydxi::@2/(byte[]) plot_bit#14 )
  (byte[]) plot_ylo#29 ← phi( line_ydxi/(byte[]) plot_ylo#13 line_ydxi::@2/(byte[]) plot_ylo#14 )
  (byte[]) plot_yhi#29 ← phi( line_ydxi/(byte[]) plot_yhi#13 line_ydxi::@2/(byte[]) plot_yhi#14 )
  (byte[]) plot_xlo#30 ← phi( line_ydxi/(byte[]) plot_xlo#13 line_ydxi::@2/(byte[]) plot_xlo#14 )
  (byte[]) plot_xhi#30 ← phi( line_ydxi/(byte[]) plot_xhi#13 line_ydxi::@2/(byte[]) plot_xhi#14 )
  (byte) line_ydxi::yd#2 ← phi( line_ydxi/(byte) line_ydxi::yd#5 line_ydxi::@2/(byte) line_ydxi::yd#6 )
  (byte) line_ydxi::xd#3 ← phi( line_ydxi/(byte) line_ydxi::xd#2 line_ydxi::@2/(byte) line_ydxi::xd#5 )
  (byte) line_ydxi::e#3 ← phi( line_ydxi/(byte) line_ydxi::e#0 line_ydxi::@2/(byte) line_ydxi::e#6 )
  (byte) line_ydxi::y#3 ← phi( line_ydxi/(byte) line_ydxi::y#6 line_ydxi::@2/(byte) line_ydxi::y#5 )
  (byte) line_ydxi::x#3 ← phi( line_ydxi/(byte) line_ydxi::x#5 line_ydxi::@2/(byte) line_ydxi::x#6 )
  (byte) plot::x#2 ← (byte) line_ydxi::x#3
  (byte) plot::y#2 ← (byte) line_ydxi::y#3
  call plot param-assignment
  to:line_ydxi::@5
line_ydxi::@5: scope:[line_ydxi]  from line_ydxi::@1
  (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#3
  (boolean~) line_ydxi::$5 ← (byte) line_ydxi::yd#2 >= (byte) line_ydxi::e#1
  if((boolean~) line_ydxi::$5) goto line_ydxi::@2
  to:line_ydxi::@3
line_ydxi::@2: scope:[line_ydxi]  from line_ydxi::@3 line_ydxi::@5
  (byte[]) plot_bit#14 ← phi( line_ydxi::@3/(byte[]) plot_bit#30 line_ydxi::@5/(byte[]) plot_bit#30 )
  (byte[]) plot_ylo#14 ← phi( line_ydxi::@3/(byte[]) plot_ylo#29 line_ydxi::@5/(byte[]) plot_ylo#29 )
  (byte[]) plot_yhi#14 ← phi( line_ydxi::@3/(byte[]) plot_yhi#29 line_ydxi::@5/(byte[]) plot_yhi#29 )
  (byte[]) plot_xlo#14 ← phi( line_ydxi::@3/(byte[]) plot_xlo#30 line_ydxi::@5/(byte[]) plot_xlo#30 )
  (byte[]) plot_xhi#14 ← phi( line_ydxi::@3/(byte[]) plot_xhi#30 line_ydxi::@5/(byte[]) plot_xhi#30 )
  (byte) line_ydxi::yd#6 ← phi( line_ydxi::@3/(byte) line_ydxi::yd#2 line_ydxi::@5/(byte) line_ydxi::yd#2 )
  (byte) line_ydxi::xd#5 ← phi( line_ydxi::@3/(byte) line_ydxi::xd#3 line_ydxi::@5/(byte) line_ydxi::xd#3 )
  (byte) line_ydxi::e#6 ← phi( line_ydxi::@3/(byte) line_ydxi::e#2 line_ydxi::@5/(byte) line_ydxi::e#1 )
  (byte) line_ydxi::x#6 ← phi( line_ydxi::@3/(byte) line_ydxi::x#2 line_ydxi::@5/(byte) line_ydxi::x#3 )
  (byte) line_ydxi::y#5 ← phi( line_ydxi::@3/(byte) line_ydxi::y#2 line_ydxi::@5/(byte) line_ydxi::y#2 )
  (byte) line_ydxi::y1#2 ← phi( line_ydxi::@3/(byte) line_ydxi::y1#3 line_ydxi::@5/(byte) line_ydxi::y1#3 )
  (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxi::$9 ← (byte) line_ydxi::y#5 < (byte~) line_ydxi::$8
  if((boolean~) line_ydxi::$9) goto line_ydxi::@1
  to:line_ydxi::@return
line_ydxi::@3: scope:[line_ydxi]  from line_ydxi::@5
  (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#2
  to:line_ydxi::@2
line_ydxi::@return: scope:[line_ydxi]  from line_ydxi::@2
  return 
  to:@return
line_ydxd: scope:[line_ydxd]  from line::@10 line::@6
  (byte) line_ydxd::y1#6 ← phi( line::@10/(byte) line_ydxd::y1#1 line::@6/(byte) line_ydxd::y1#0 )
  (byte[]) plot_bit#15 ← phi( line::@10/(byte[]) plot_bit#20 line::@6/(byte[]) plot_bit#20 )
  (byte[]) plot_ylo#15 ← phi( line::@10/(byte[]) plot_ylo#19 line::@6/(byte[]) plot_ylo#19 )
  (byte[]) plot_yhi#15 ← phi( line::@10/(byte[]) plot_yhi#19 line::@6/(byte[]) plot_yhi#19 )
  (byte[]) plot_xlo#15 ← phi( line::@10/(byte[]) plot_xlo#20 line::@6/(byte[]) plot_xlo#20 )
  (byte[]) plot_xhi#15 ← phi( line::@10/(byte[]) plot_xhi#20 line::@6/(byte[]) plot_xhi#20 )
  (byte) line_ydxd::yd#5 ← phi( line::@10/(byte) line_ydxd::yd#1 line::@6/(byte) line_ydxd::yd#0 )
  (byte) line_ydxd::y#6 ← phi( line::@10/(byte) line_ydxd::y#1 line::@6/(byte) line_ydxd::y#0 )
  (byte) line_ydxd::x#5 ← phi( line::@10/(byte) line_ydxd::x#1 line::@6/(byte) line_ydxd::x#0 )
  (byte) line_ydxd::xd#2 ← phi( line::@10/(byte) line_ydxd::xd#1 line::@6/(byte) line_ydxd::xd#0 )
  (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxd::@1
line_ydxd::@1: scope:[line_ydxd]  from line_ydxd line_ydxd::@2
  (byte) line_ydxd::y1#3 ← phi( line_ydxd/(byte) line_ydxd::y1#6 line_ydxd::@2/(byte) line_ydxd::y1#2 )
  (byte[]) plot_bit#34 ← phi( line_ydxd/(byte[]) plot_bit#15 line_ydxd::@2/(byte[]) plot_bit#16 )
  (byte[]) plot_ylo#33 ← phi( line_ydxd/(byte[]) plot_ylo#15 line_ydxd::@2/(byte[]) plot_ylo#16 )
  (byte[]) plot_yhi#33 ← phi( line_ydxd/(byte[]) plot_yhi#15 line_ydxd::@2/(byte[]) plot_yhi#16 )
  (byte[]) plot_xlo#34 ← phi( line_ydxd/(byte[]) plot_xlo#15 line_ydxd::@2/(byte[]) plot_xlo#16 )
  (byte[]) plot_xhi#34 ← phi( line_ydxd/(byte[]) plot_xhi#15 line_ydxd::@2/(byte[]) plot_xhi#16 )
  (byte) line_ydxd::yd#2 ← phi( line_ydxd/(byte) line_ydxd::yd#5 line_ydxd::@2/(byte) line_ydxd::yd#6 )
  (byte) line_ydxd::xd#3 ← phi( line_ydxd/(byte) line_ydxd::xd#2 line_ydxd::@2/(byte) line_ydxd::xd#5 )
  (byte) line_ydxd::e#3 ← phi( line_ydxd/(byte) line_ydxd::e#0 line_ydxd::@2/(byte) line_ydxd::e#6 )
  (byte) line_ydxd::y#3 ← phi( line_ydxd/(byte) line_ydxd::y#6 line_ydxd::@2/(byte) line_ydxd::y#5 )
  (byte) line_ydxd::x#3 ← phi( line_ydxd/(byte) line_ydxd::x#5 line_ydxd::@2/(byte) line_ydxd::x#6 )
  (byte) plot::x#3 ← (byte) line_ydxd::x#3
  (byte) plot::y#3 ← (byte) line_ydxd::y#3
  call plot param-assignment
  to:line_ydxd::@5
line_ydxd::@5: scope:[line_ydxd]  from line_ydxd::@1
  (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#3
  (boolean~) line_ydxd::$5 ← (byte) line_ydxd::yd#2 >= (byte) line_ydxd::e#1
  if((boolean~) line_ydxd::$5) goto line_ydxd::@2
  to:line_ydxd::@3
line_ydxd::@2: scope:[line_ydxd]  from line_ydxd::@3 line_ydxd::@5
  (byte[]) plot_bit#16 ← phi( line_ydxd::@3/(byte[]) plot_bit#34 line_ydxd::@5/(byte[]) plot_bit#34 )
  (byte[]) plot_ylo#16 ← phi( line_ydxd::@3/(byte[]) plot_ylo#33 line_ydxd::@5/(byte[]) plot_ylo#33 )
  (byte[]) plot_yhi#16 ← phi( line_ydxd::@3/(byte[]) plot_yhi#33 line_ydxd::@5/(byte[]) plot_yhi#33 )
  (byte[]) plot_xlo#16 ← phi( line_ydxd::@3/(byte[]) plot_xlo#34 line_ydxd::@5/(byte[]) plot_xlo#34 )
  (byte[]) plot_xhi#16 ← phi( line_ydxd::@3/(byte[]) plot_xhi#34 line_ydxd::@5/(byte[]) plot_xhi#34 )
  (byte) line_ydxd::yd#6 ← phi( line_ydxd::@3/(byte) line_ydxd::yd#2 line_ydxd::@5/(byte) line_ydxd::yd#2 )
  (byte) line_ydxd::xd#5 ← phi( line_ydxd::@3/(byte) line_ydxd::xd#3 line_ydxd::@5/(byte) line_ydxd::xd#3 )
  (byte) line_ydxd::e#6 ← phi( line_ydxd::@3/(byte) line_ydxd::e#2 line_ydxd::@5/(byte) line_ydxd::e#1 )
  (byte) line_ydxd::x#6 ← phi( line_ydxd::@3/(byte) line_ydxd::x#2 line_ydxd::@5/(byte) line_ydxd::x#3 )
  (byte) line_ydxd::y#5 ← phi( line_ydxd::@3/(byte) line_ydxd::y#2 line_ydxd::@5/(byte) line_ydxd::y#2 )
  (byte) line_ydxd::y1#2 ← phi( line_ydxd::@3/(byte) line_ydxd::y1#3 line_ydxd::@5/(byte) line_ydxd::y1#3 )
  (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxd::$9 ← (byte) line_ydxd::y#5 < (byte~) line_ydxd::$8
  if((boolean~) line_ydxd::$9) goto line_ydxd::@1
  to:line_ydxd::@return
line_ydxd::@3: scope:[line_ydxd]  from line_ydxd::@5
  (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#2
  to:line_ydxd::@2
line_ydxd::@return: scope:[line_ydxd]  from line_ydxd::@2
  return 
  to:@return
plot: scope:[plot]  from line_xdyd::@1 line_xdyi::@1 line_ydxd::@1 line_ydxi::@1
  (byte[]) plot_bit#1 ← phi( line_xdyd::@1/(byte[]) plot_bit#26 line_xdyi::@1/(byte[]) plot_bit#22 line_ydxd::@1/(byte[]) plot_bit#34 line_ydxi::@1/(byte[]) plot_bit#30 )
  (byte[]) plot_ylo#1 ← phi( line_xdyd::@1/(byte[]) plot_ylo#25 line_xdyi::@1/(byte[]) plot_ylo#21 line_ydxd::@1/(byte[]) plot_ylo#33 line_ydxi::@1/(byte[]) plot_ylo#29 )
  (byte) plot::y#4 ← phi( line_xdyd::@1/(byte) plot::y#1 line_xdyi::@1/(byte) plot::y#0 line_ydxd::@1/(byte) plot::y#3 line_ydxi::@1/(byte) plot::y#2 )
  (byte[]) plot_yhi#1 ← phi( line_xdyd::@1/(byte[]) plot_yhi#25 line_xdyi::@1/(byte[]) plot_yhi#21 line_ydxd::@1/(byte[]) plot_yhi#33 line_ydxi::@1/(byte[]) plot_yhi#29 )
  (byte[]) plot_xlo#1 ← phi( line_xdyd::@1/(byte[]) plot_xlo#26 line_xdyi::@1/(byte[]) plot_xlo#22 line_ydxd::@1/(byte[]) plot_xlo#34 line_ydxi::@1/(byte[]) plot_xlo#30 )
  (byte) plot::x#4 ← phi( line_xdyd::@1/(byte) plot::x#1 line_xdyi::@1/(byte) plot::x#0 line_ydxd::@1/(byte) plot::x#3 line_ydxi::@1/(byte) plot::x#2 )
  (byte[]) plot_xhi#1 ← phi( line_xdyd::@1/(byte[]) plot_xhi#26 line_xdyi::@1/(byte[]) plot_xhi#22 line_ydxd::@1/(byte[]) plot_xhi#34 line_ydxi::@1/(byte[]) plot_xhi#30 )
  (byte*) plot::plotter_x#0 ← ((byte*)) (byte/signed byte/word/signed word) 0
  (word) plot::plotter_y#0 ← (byte/signed byte/word/signed word) 0
  (byte~) plot::$0 ← (byte[]) plot_xhi#1 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#1 ← (byte*) plot::plotter_x#0 hi= (byte~) plot::$0
  (byte~) plot::$1 ← (byte[]) plot_xlo#1 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1
  (byte~) plot::$2 ← (byte[]) plot_yhi#1 *idx (byte) plot::y#4
  (word) plot::plotter_y#1 ← (word) plot::plotter_y#0 hi= (byte~) plot::$2
  (byte~) plot::$3 ← (byte[]) plot_ylo#1 *idx (byte) plot::y#4
  (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3
  (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2
  (byte~) plot::$5 ← (byte[]) plot_bit#1 *idx (byte) plot::x#4
  (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5
  *((byte*) plot::plotter#0) ← (byte~) plot::$6
  to:plot::@return
plot::@return: scope:[plot]  from plot
  return 
  to:@return
init_plot_tables: scope:[init_plot_tables]  from main::@3
  (byte[]) plot_yhi#41 ← phi( main::@3/(byte[]) plot_yhi#44 )
  (byte[]) plot_ylo#41 ← phi( main::@3/(byte[]) plot_ylo#44 )
  (byte[]) plot_bit#7 ← phi( main::@3/(byte[]) plot_bit#17 )
  (byte[]) plot_xhi#7 ← phi( main::@3/(byte[]) plot_xhi#17 )
  (byte*) BITMAP#4 ← phi( main::@3/(byte*) BITMAP#6 )
  (byte[]) plot_xlo#7 ← phi( main::@3/(byte[]) plot_xlo#17 )
  (byte) init_plot_tables::bits#0 ← (byte/word/signed word) 128
  (byte) init_plot_tables::x#0 ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@1
init_plot_tables::@1: scope:[init_plot_tables]  from init_plot_tables init_plot_tables::@2
  (byte[]) plot_yhi#35 ← phi( init_plot_tables/(byte[]) plot_yhi#41 init_plot_tables::@2/(byte[]) plot_yhi#17 )
  (byte[]) plot_ylo#35 ← phi( init_plot_tables/(byte[]) plot_ylo#41 init_plot_tables::@2/(byte[]) plot_ylo#17 )
  (byte[]) plot_bit#18 ← phi( init_plot_tables/(byte[]) plot_bit#7 init_plot_tables::@2/(byte[]) plot_bit#8 )
  (byte) init_plot_tables::bits#3 ← phi( init_plot_tables/(byte) init_plot_tables::bits#0 init_plot_tables::@2/(byte) init_plot_tables::bits#4 )
  (byte[]) plot_xhi#18 ← phi( init_plot_tables/(byte[]) plot_xhi#7 init_plot_tables::@2/(byte[]) plot_xhi#8 )
  (byte*) BITMAP#1 ← phi( init_plot_tables/(byte*) BITMAP#4 init_plot_tables::@2/(byte*) BITMAP#5 )
  (byte[]) plot_xlo#18 ← phi( init_plot_tables/(byte[]) plot_xlo#7 init_plot_tables::@2/(byte[]) plot_xlo#8 )
  (byte) init_plot_tables::x#2 ← phi( init_plot_tables/(byte) init_plot_tables::x#0 init_plot_tables::@2/(byte) init_plot_tables::x#1 )
  (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248
  *((byte[]) plot_xlo#18 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0
  (byte~) init_plot_tables::$1 ← > (byte*) BITMAP#1
  *((byte[]) plot_xhi#18 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$1
  *((byte[]) plot_bit#18 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3
  (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1
  (boolean~) init_plot_tables::$4 ← (byte) init_plot_tables::bits#1 != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$4) goto init_plot_tables::@2
  to:init_plot_tables::@5
init_plot_tables::@2: scope:[init_plot_tables]  from init_plot_tables::@1 init_plot_tables::@5
  (byte[]) plot_yhi#17 ← phi( init_plot_tables::@1/(byte[]) plot_yhi#35 init_plot_tables::@5/(byte[]) plot_yhi#35 )
  (byte[]) plot_ylo#17 ← phi( init_plot_tables::@1/(byte[]) plot_ylo#35 init_plot_tables::@5/(byte[]) plot_ylo#35 )
  (byte[]) plot_bit#8 ← phi( init_plot_tables::@1/(byte[]) plot_bit#18 init_plot_tables::@5/(byte[]) plot_bit#18 )
  (byte) init_plot_tables::bits#4 ← phi( init_plot_tables::@1/(byte) init_plot_tables::bits#1 init_plot_tables::@5/(byte) init_plot_tables::bits#2 )
  (byte[]) plot_xhi#8 ← phi( init_plot_tables::@1/(byte[]) plot_xhi#18 init_plot_tables::@5/(byte[]) plot_xhi#18 )
  (byte*) BITMAP#5 ← phi( init_plot_tables::@1/(byte*) BITMAP#1 init_plot_tables::@5/(byte*) BITMAP#1 )
  (byte[]) plot_xlo#8 ← phi( init_plot_tables::@1/(byte[]) plot_xlo#18 init_plot_tables::@5/(byte[]) plot_xlo#18 )
  (byte) init_plot_tables::x#3 ← phi( init_plot_tables::@1/(byte) init_plot_tables::x#2 init_plot_tables::@5/(byte) init_plot_tables::x#2 )
  (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#3
  (boolean~) init_plot_tables::$5 ← (byte) init_plot_tables::x#1 != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$5) goto init_plot_tables::@1
  to:init_plot_tables::@6
init_plot_tables::@5: scope:[init_plot_tables]  from init_plot_tables::@1
  (byte) init_plot_tables::bits#2 ← (byte/word/signed word) 128
  to:init_plot_tables::@2
init_plot_tables::@6: scope:[init_plot_tables]  from init_plot_tables::@2
  (byte*) init_plot_tables::yoffs#0 ← ((byte*)) (byte/signed byte/word/signed word) 0
  (byte) init_plot_tables::y#0 ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@3
init_plot_tables::@3: scope:[init_plot_tables]  from init_plot_tables::@4 init_plot_tables::@6
  (byte[]) plot_yhi#18 ← phi( init_plot_tables::@4/(byte[]) plot_yhi#7 init_plot_tables::@6/(byte[]) plot_yhi#17 )
  (byte[]) plot_ylo#18 ← phi( init_plot_tables::@4/(byte[]) plot_ylo#7 init_plot_tables::@6/(byte[]) plot_ylo#17 )
  (byte*) init_plot_tables::yoffs#2 ← phi( init_plot_tables::@4/(byte*) init_plot_tables::yoffs#4 init_plot_tables::@6/(byte*) init_plot_tables::yoffs#0 )
  (byte) init_plot_tables::y#2 ← phi( init_plot_tables::@4/(byte) init_plot_tables::y#1 init_plot_tables::@6/(byte) init_plot_tables::y#0 )
  (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2
  (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7
  *((byte[]) plot_ylo#18 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8
  (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2
  *((byte[]) plot_yhi#18 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9
  (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (boolean~) init_plot_tables::$12 ← (byte~) init_plot_tables::$10 != (byte/signed byte/word/signed word) 7
  if((boolean~) init_plot_tables::$12) goto init_plot_tables::@4
  to:init_plot_tables::@7
init_plot_tables::@4: scope:[init_plot_tables]  from init_plot_tables::@3 init_plot_tables::@7
  (byte[]) plot_yhi#7 ← phi( init_plot_tables::@3/(byte[]) plot_yhi#18 init_plot_tables::@7/(byte[]) plot_yhi#18 )
  (byte[]) plot_ylo#7 ← phi( init_plot_tables::@3/(byte[]) plot_ylo#18 init_plot_tables::@7/(byte[]) plot_ylo#18 )
  (byte*) init_plot_tables::yoffs#4 ← phi( init_plot_tables::@3/(byte*) init_plot_tables::yoffs#2 init_plot_tables::@7/(byte*) init_plot_tables::yoffs#1 )
  (byte) init_plot_tables::y#3 ← phi( init_plot_tables::@3/(byte) init_plot_tables::y#2 init_plot_tables::@7/(byte) init_plot_tables::y#2 )
  (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#3
  (boolean~) init_plot_tables::$14 ← (byte) init_plot_tables::y#1 != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$14) goto init_plot_tables::@3
  to:init_plot_tables::@return
init_plot_tables::@7: scope:[init_plot_tables]  from init_plot_tables::@3
  (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320
  to:init_plot_tables::@4
init_plot_tables::@return: scope:[init_plot_tables]  from init_plot_tables::@4
  return 
  to:@return
init_screen: scope:[init_screen]  from main
  (byte*) SCREEN#4 ← phi( main/(byte*) SCREEN#5 )
  (byte*) BITMAP#2 ← phi( main/(byte*) BITMAP#6 )
  (byte*) init_screen::b#0 ← (byte*) BITMAP#2
  to:init_screen::@1
init_screen::@1: scope:[init_screen]  from init_screen init_screen::@1
  (byte*) SCREEN#1 ← phi( init_screen/(byte*) SCREEN#4 init_screen::@1/(byte*) SCREEN#1 )
  (byte*) BITMAP#3 ← phi( init_screen/(byte*) BITMAP#2 init_screen::@1/(byte*) BITMAP#3 )
  (byte*) init_screen::b#2 ← phi( init_screen/(byte*) init_screen::b#0 init_screen::@1/(byte*) init_screen::b#1 )
  *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0
  (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2
  (byte*~) init_screen::$0 ← (byte*) BITMAP#3 + (word/signed word) 8192
  (boolean~) init_screen::$1 ← (byte*) init_screen::b#1 != (byte*~) init_screen::$0
  if((boolean~) init_screen::$1) goto init_screen::@1
  to:init_screen::@3
init_screen::@3: scope:[init_screen]  from init_screen::@1
  (byte*) init_screen::c#0 ← (byte*) SCREEN#1
  to:init_screen::@2
init_screen::@2: scope:[init_screen]  from init_screen::@2 init_screen::@3
  (byte*) SCREEN#2 ← phi( init_screen::@2/(byte*) SCREEN#2 init_screen::@3/(byte*) SCREEN#1 )
  (byte*) init_screen::c#2 ← phi( init_screen::@2/(byte*) init_screen::c#1 init_screen::@3/(byte*) init_screen::c#0 )
  *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20
  (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2
  (byte*~) init_screen::$2 ← (byte*) SCREEN#2 + (word/signed word) 1024
  (boolean~) init_screen::$3 ← (byte*) init_screen::c#1 != (byte*~) init_screen::$2
  if((boolean~) init_screen::$3) goto init_screen::@2
  to:init_screen::@return
init_screen::@return: scope:[init_screen]  from init_screen::@2
  return 
  to:@return
@10: scope:[]  from @begin
  call main param-assignment
  to:@end
@end: scope:[]  from @10

Not aliassing across scopes: BGCOL#1 BGCOL#0
Not aliassing across scopes: FGCOL#1 FGCOL#0
Not aliassing across scopes: BMM#1 BMM#0
Not aliassing across scopes: DEN#1 DEN#0
Not aliassing across scopes: RSEL#1 RSEL#0
Not aliassing across scopes: D011#1 D011#0
Not aliassing across scopes: D018#1 D018#0
Not aliassing across scopes: BITMAP#6 BITMAP#0
Not aliassing across scopes: plot_xlo#17 plot_xlo#0
Not aliassing across scopes: plot_xhi#17 plot_xhi#0
Not aliassing across scopes: plot_bit#17 plot_bit#0
Not aliassing across scopes: SCREEN#5 SCREEN#0
Not aliassing across scopes: lines_x#5 lines_x#0
Not aliassing across scopes: lines_y#5 lines_y#0
Not aliassing across scopes: lines_cnt#5 lines_cnt#0
Not aliassing across scopes: plot_ylo#44 plot_ylo#0
Not aliassing across scopes: plot_yhi#44 plot_yhi#0
Not aliassing across scopes: lines_x#2 lines_x#4
Not aliassing across scopes: lines_y#2 lines_y#4
Not aliassing across scopes: lines_cnt#3 lines_cnt#4
Not aliassing across scopes: plot_xhi#45 plot_xhi#47
Not aliassing across scopes: plot_xlo#45 plot_xlo#47
Not aliassing across scopes: plot_yhi#49 plot_yhi#51
Not aliassing across scopes: plot_ylo#49 plot_ylo#51
Not aliassing across scopes: plot_bit#45 plot_bit#47
Not aliassing across scopes: line::x0#0 lines::$0
Not aliassing across scopes: line::x1#0 lines::$2
Not aliassing across scopes: line::y0#0 lines::$3
Not aliassing across scopes: line::y1#0 lines::$5
Not aliassing across scopes: line::x0#1 line::x0#0
Not aliassing across scopes: line::x1#1 line::x1#0
Not aliassing across scopes: line::y0#1 line::y0#0
Not aliassing across scopes: line::y1#1 line::y1#0
Not aliassing across scopes: plot_xhi#20 plot_xhi#44
Not aliassing across scopes: plot_xlo#20 plot_xlo#44
Not aliassing across scopes: plot_yhi#19 plot_yhi#48
Not aliassing across scopes: plot_ylo#19 plot_ylo#48
Not aliassing across scopes: plot_bit#20 plot_bit#44
Not aliassing across scopes: line_ydxi::y#0 line::y0#1
Not aliassing across scopes: line_ydxi::x#0 line::x0#1
Not aliassing across scopes: line_ydxi::y1#0 line::y1#1
Not aliassing across scopes: line_ydxi::yd#0 line::yd#1
Not aliassing across scopes: line_ydxi::xd#0 line::xd#1
Not aliassing across scopes: line_xdyi::x#0 line::x0#1
Not aliassing across scopes: line_xdyi::y#0 line::y0#1
Not aliassing across scopes: line_xdyi::x1#0 line::x1#1
Not aliassing across scopes: line_xdyi::xd#0 line::xd#1
Not aliassing across scopes: line_xdyi::yd#0 line::yd#1
Not aliassing across scopes: line_ydxd::y#0 line::y1#1
Not aliassing across scopes: line_ydxd::x#0 line::x1#1
Not aliassing across scopes: line_ydxd::y1#0 line::y0#1
Not aliassing across scopes: line_ydxd::yd#0 line::yd#0
Not aliassing across scopes: line_ydxd::xd#0 line::xd#1
Not aliassing across scopes: line_xdyd::x#0 line::x0#1
Not aliassing across scopes: line_xdyd::y#0 line::y0#1
Not aliassing across scopes: line_xdyd::x1#0 line::x1#1
Not aliassing across scopes: line_xdyd::xd#0 line::xd#1
Not aliassing across scopes: line_xdyd::yd#0 line::yd#0
Not aliassing across scopes: line_ydxd::y#1 line::y0#1
Not aliassing across scopes: line_ydxd::x#1 line::x0#1
Not aliassing across scopes: line_ydxd::y1#1 line::y1#1
Not aliassing across scopes: line_ydxd::yd#1 line::yd#3
Not aliassing across scopes: line_ydxd::xd#1 line::xd#0
Not aliassing across scopes: line_xdyd::x#1 line::x1#1
Not aliassing across scopes: line_xdyd::y#1 line::y1#1
Not aliassing across scopes: line_xdyd::x1#1 line::x0#1
Not aliassing across scopes: line_xdyd::xd#1 line::xd#0
Not aliassing across scopes: line_xdyd::yd#1 line::yd#3
Not aliassing across scopes: line_ydxi::y#1 line::y1#1
Not aliassing across scopes: line_ydxi::x#1 line::x1#1
Not aliassing across scopes: line_ydxi::y1#1 line::y0#1
Not aliassing across scopes: line_ydxi::yd#1 line::yd#10
Not aliassing across scopes: line_ydxi::xd#1 line::xd#0
Not aliassing across scopes: line_xdyi::x#1 line::x1#1
Not aliassing across scopes: line_xdyi::y#1 line::y1#1
Not aliassing across scopes: line_xdyi::x1#1 line::x0#1
Not aliassing across scopes: line_xdyi::xd#1 line::xd#0
Not aliassing across scopes: line_xdyi::yd#1 line::yd#10
Not aliassing across scopes: line_xdyi::yd#2 line_xdyi::yd#0
Not aliassing across scopes: line_xdyi::x#6 line_xdyi::x#0
Not aliassing across scopes: line_xdyi::y#5 line_xdyi::y#0
Not aliassing across scopes: line_xdyi::xd#5 line_xdyi::xd#0
Not aliassing across scopes: plot_xhi#9 plot_xhi#20
Not aliassing across scopes: plot_xlo#9 plot_xlo#20
Not aliassing across scopes: plot_yhi#9 plot_yhi#19
Not aliassing across scopes: plot_ylo#9 plot_ylo#19
Not aliassing across scopes: plot_bit#9 plot_bit#20
Not aliassing across scopes: line_xdyi::x1#6 line_xdyi::x1#0
Not aliassing across scopes: plot::x#0 line_xdyi::x#3
Not aliassing across scopes: plot::y#0 line_xdyi::y#3
Not aliassing across scopes: line_xdyd::yd#2 line_xdyd::yd#0
Not aliassing across scopes: line_xdyd::x#6 line_xdyd::x#0
Not aliassing across scopes: line_xdyd::y#5 line_xdyd::y#0
Not aliassing across scopes: line_xdyd::xd#5 line_xdyd::xd#0
Not aliassing across scopes: plot_xhi#11 plot_xhi#20
Not aliassing across scopes: plot_xlo#11 plot_xlo#20
Not aliassing across scopes: plot_yhi#11 plot_yhi#19
Not aliassing across scopes: plot_ylo#11 plot_ylo#19
Not aliassing across scopes: plot_bit#11 plot_bit#20
Not aliassing across scopes: line_xdyd::x1#6 line_xdyd::x1#0
Not aliassing across scopes: plot::x#1 line_xdyd::x#3
Not aliassing across scopes: plot::y#1 line_xdyd::y#3
Not aliassing across scopes: line_ydxi::xd#2 line_ydxi::xd#1
Not aliassing across scopes: line_ydxi::x#5 line_ydxi::x#1
Not aliassing across scopes: line_ydxi::y#6 line_ydxi::y#1
Not aliassing across scopes: line_ydxi::yd#5 line_ydxi::yd#1
Not aliassing across scopes: plot_xhi#13 plot_xhi#20
Not aliassing across scopes: plot_xlo#13 plot_xlo#20
Not aliassing across scopes: plot_yhi#13 plot_yhi#19
Not aliassing across scopes: plot_ylo#13 plot_ylo#19
Not aliassing across scopes: plot_bit#13 plot_bit#20
Not aliassing across scopes: line_ydxi::y1#6 line_ydxi::y1#1
Not aliassing across scopes: plot::x#2 line_ydxi::x#3
Not aliassing across scopes: plot::y#2 line_ydxi::y#3
Not aliassing across scopes: line_ydxd::xd#2 line_ydxd::xd#1
Not aliassing across scopes: line_ydxd::x#5 line_ydxd::x#1
Not aliassing across scopes: line_ydxd::y#6 line_ydxd::y#1
Not aliassing across scopes: line_ydxd::yd#5 line_ydxd::yd#1
Not aliassing across scopes: plot_xhi#15 plot_xhi#20
Not aliassing across scopes: plot_xlo#15 plot_xlo#20
Not aliassing across scopes: plot_yhi#15 plot_yhi#19
Not aliassing across scopes: plot_ylo#15 plot_ylo#19
Not aliassing across scopes: plot_bit#15 plot_bit#20
Not aliassing across scopes: line_ydxd::y1#6 line_ydxd::y1#1
Not aliassing across scopes: plot::x#3 line_ydxd::x#3
Not aliassing across scopes: plot::y#3 line_ydxd::y#3
Not aliassing across scopes: plot_xhi#1 plot_xhi#26
Not aliassing across scopes: plot::x#4 plot::x#1
Not aliassing across scopes: plot_xlo#1 plot_xlo#26
Not aliassing across scopes: plot_yhi#1 plot_yhi#25
Not aliassing across scopes: plot::y#4 plot::y#1
Not aliassing across scopes: plot_ylo#1 plot_ylo#25
Not aliassing across scopes: plot_bit#1 plot_bit#26
Not aliassing across scopes: plot_xlo#7 plot_xlo#17
Not aliassing across scopes: BITMAP#4 BITMAP#6
Not aliassing across scopes: plot_xhi#7 plot_xhi#17
Not aliassing across scopes: plot_bit#7 plot_bit#17
Not aliassing across scopes: plot_ylo#41 plot_ylo#44
Not aliassing across scopes: plot_yhi#41 plot_yhi#44
Not aliassing across scopes: BITMAP#2 BITMAP#6
Not aliassing across scopes: SCREEN#4 SCREEN#5
Not aliassing across scopes: init_screen::b#0 BITMAP#2
Not aliassing across scopes: init_screen::c#0 SCREEN#1
Not aliassing identity: SCREEN#2 SCREEN#2
Alias (byte) line_xdyi::x1#2 = (byte) line_xdyi::x1#3 
Alias (byte) line_xdyi::x#2 = (byte) line_xdyi::x#5 
Alias (byte) line_xdyi::yd#3 = (byte) line_xdyi::yd#5 
Alias (byte) line_xdyi::xd#2 = (byte) line_xdyi::xd#6 
Alias (byte[]) plot_xhi#10 = (byte[]) plot_xhi#22 
Alias (byte[]) plot_xlo#10 = (byte[]) plot_xlo#22 
Alias (byte[]) plot_yhi#10 = (byte[]) plot_yhi#21 
Alias (byte[]) plot_ylo#10 = (byte[]) plot_ylo#21 
Alias (byte[]) plot_bit#10 = (byte[]) plot_bit#22 
Alias (byte) line_xdyd::x1#2 = (byte) line_xdyd::x1#3 
Alias (byte) line_xdyd::x#2 = (byte) line_xdyd::x#5 
Alias (byte) line_xdyd::yd#3 = (byte) line_xdyd::yd#5 
Alias (byte) line_xdyd::xd#2 = (byte) line_xdyd::xd#6 
Alias (byte[]) plot_xhi#12 = (byte[]) plot_xhi#26 
Alias (byte[]) plot_xlo#12 = (byte[]) plot_xlo#26 
Alias (byte[]) plot_yhi#12 = (byte[]) plot_yhi#25 
Alias (byte[]) plot_ylo#12 = (byte[]) plot_ylo#25 
Alias (byte[]) plot_bit#12 = (byte[]) plot_bit#26 
Alias (byte) line_ydxi::y1#2 = (byte) line_ydxi::y1#3 
Alias (byte) line_ydxi::y#2 = (byte) line_ydxi::y#5 
Alias (byte) line_ydxi::xd#3 = (byte) line_ydxi::xd#5 
Alias (byte) line_ydxi::yd#2 = (byte) line_ydxi::yd#6 
Alias (byte[]) plot_xhi#14 = (byte[]) plot_xhi#30 
Alias (byte[]) plot_xlo#14 = (byte[]) plot_xlo#30 
Alias (byte[]) plot_yhi#14 = (byte[]) plot_yhi#29 
Alias (byte[]) plot_ylo#14 = (byte[]) plot_ylo#29 
Alias (byte[]) plot_bit#14 = (byte[]) plot_bit#30 
Alias (byte) line_ydxd::y1#2 = (byte) line_ydxd::y1#3 
Alias (byte) line_ydxd::y#2 = (byte) line_ydxd::y#5 
Alias (byte) line_ydxd::xd#3 = (byte) line_ydxd::xd#5 
Alias (byte) line_ydxd::yd#2 = (byte) line_ydxd::yd#6 
Alias (byte[]) plot_xhi#16 = (byte[]) plot_xhi#34 
Alias (byte[]) plot_xlo#16 = (byte[]) plot_xlo#34 
Alias (byte[]) plot_yhi#16 = (byte[]) plot_yhi#33 
Alias (byte[]) plot_ylo#16 = (byte[]) plot_ylo#33 
Alias (byte[]) plot_bit#16 = (byte[]) plot_bit#34 
Alias (byte) init_plot_tables::x#2 = (byte) init_plot_tables::x#3 
Alias (byte[]) plot_xlo#18 = (byte[]) plot_xlo#8 
Alias (byte*) BITMAP#1 = (byte*) BITMAP#5 
Alias (byte[]) plot_xhi#18 = (byte[]) plot_xhi#8 
Alias (byte[]) plot_bit#18 = (byte[]) plot_bit#8 
Alias (byte[]) plot_ylo#17 = (byte[]) plot_ylo#35 
Alias (byte[]) plot_yhi#17 = (byte[]) plot_yhi#35 
Alias (byte) init_plot_tables::y#2 = (byte) init_plot_tables::y#3 
Alias (byte[]) plot_ylo#18 = (byte[]) plot_ylo#7 
Alias (byte[]) plot_yhi#18 = (byte[]) plot_yhi#7 
Succesful SSA optimization Pass2AliasElimination
CONTROL FLOW GRAPH
@begin: scope:[]  from
  (byte*) BGCOL#0 ← ((byte*)) (word) 53280
  (byte*) FGCOL#0 ← ((byte*)) (word) 53281
  (byte*) D018#0 ← ((byte*)) (word) 53272
  (byte*) D011#0 ← ((byte*)) (word) 53265
  (byte) BMM#0 ← (byte/signed byte/word/signed word) 32
  (byte) DEN#0 ← (byte/signed byte/word/signed word) 16
  (byte) RSEL#0 ← (byte/signed byte/word/signed word) 8
  (byte*) SCREEN#0 ← ((byte*)) (word/signed word) 1024
  (byte*) BITMAP#0 ← ((byte*)) (word/signed word) 8192
  (byte[]) plot_xlo#0 ← ((byte*)) (word/signed word) 4096
  (byte[]) plot_xhi#0 ← ((byte*)) (word/signed word) 4352
  (byte[]) plot_ylo#0 ← ((byte*)) (word/signed word) 4608
  (byte[]) plot_yhi#0 ← ((byte*)) (word/signed word) 4864
  (byte[]) plot_bit#0 ← ((byte*)) (word/signed word) 5120
  (byte[]) lines_x#0 ← { (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60 }
  (byte[]) lines_y#0 ← { (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10 }
  (byte) lines_cnt#0 ← (byte/signed byte/word/signed word) 8
  to:@10
main: scope:[main]  from @10
  (byte[]) plot_yhi#44 ← phi( @10/(byte[]) plot_yhi#0 )
  (byte[]) plot_ylo#44 ← phi( @10/(byte[]) plot_ylo#0 )
  (byte) lines_cnt#5 ← phi( @10/(byte) lines_cnt#0 )
  (byte[]) lines_y#5 ← phi( @10/(byte[]) lines_y#0 )
  (byte[]) lines_x#5 ← phi( @10/(byte[]) lines_x#0 )
  (byte*) SCREEN#5 ← phi( @10/(byte*) SCREEN#0 )
  (byte[]) plot_bit#17 ← phi( @10/(byte[]) plot_bit#0 )
  (byte[]) plot_xhi#17 ← phi( @10/(byte[]) plot_xhi#0 )
  (byte[]) plot_xlo#17 ← phi( @10/(byte[]) plot_xlo#0 )
  (byte*) BITMAP#6 ← phi( @10/(byte*) BITMAP#0 )
  (byte*) D018#1 ← phi( @10/(byte*) D018#0 )
  (byte*) D011#1 ← phi( @10/(byte*) D011#0 )
  (byte) RSEL#1 ← phi( @10/(byte) RSEL#0 )
  (byte) DEN#1 ← phi( @10/(byte) DEN#0 )
  (byte) BMM#1 ← phi( @10/(byte) BMM#0 )
  (byte*) FGCOL#1 ← phi( @10/(byte*) FGCOL#0 )
  (byte*) BGCOL#1 ← phi( @10/(byte*) BGCOL#0 )
  *((byte*) BGCOL#1) ← (byte/signed byte/word/signed word) 0
  *((byte*) FGCOL#1) ← (byte/signed byte/word/signed word) 0
  (byte~) main::$0 ← (byte) BMM#1 | (byte) DEN#1
  (byte~) main::$1 ← (byte~) main::$0 | (byte) RSEL#1
  (byte~) main::$2 ← (byte~) main::$1 | (byte/signed byte/word/signed word) 3
  *((byte*) D011#1) ← (byte~) main::$2
  *((byte*) D018#1) ← (byte/signed byte/word/signed word) 24
  call init_screen param-assignment
  to:main::@3
main::@3: scope:[main]  from main
  call init_plot_tables param-assignment
  to:main::@4
main::@4: scope:[main]  from main::@3
  to:main::@1
main::@1: scope:[main]  from main::@4 main::@5
  (byte[]) plot_bit#47 ← phi( main::@4/(byte[]) plot_bit#17 main::@5/(byte[]) plot_bit#47 )
  (byte[]) plot_ylo#51 ← phi( main::@4/(byte[]) plot_ylo#44 main::@5/(byte[]) plot_ylo#51 )
  (byte[]) plot_yhi#51 ← phi( main::@4/(byte[]) plot_yhi#44 main::@5/(byte[]) plot_yhi#51 )
  (byte[]) plot_xlo#47 ← phi( main::@4/(byte[]) plot_xlo#17 main::@5/(byte[]) plot_xlo#47 )
  (byte[]) plot_xhi#47 ← phi( main::@4/(byte[]) plot_xhi#17 main::@5/(byte[]) plot_xhi#47 )
  (byte) lines_cnt#4 ← phi( main::@4/(byte) lines_cnt#5 main::@5/(byte) lines_cnt#4 )
  (byte[]) lines_y#4 ← phi( main::@4/(byte[]) lines_y#5 main::@5/(byte[]) lines_y#4 )
  (byte[]) lines_x#4 ← phi( main::@4/(byte[]) lines_x#5 main::@5/(byte[]) lines_x#4 )
  call lines param-assignment
  to:main::@5
main::@5: scope:[main]  from main::@1
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@5
  return 
  to:@return
lines: scope:[lines]  from main::@1
  (byte[]) plot_bit#45 ← phi( main::@1/(byte[]) plot_bit#47 )
  (byte[]) plot_ylo#49 ← phi( main::@1/(byte[]) plot_ylo#51 )
  (byte[]) plot_yhi#49 ← phi( main::@1/(byte[]) plot_yhi#51 )
  (byte[]) plot_xlo#45 ← phi( main::@1/(byte[]) plot_xlo#47 )
  (byte[]) plot_xhi#45 ← phi( main::@1/(byte[]) plot_xhi#47 )
  (byte) lines_cnt#3 ← phi( main::@1/(byte) lines_cnt#4 )
  (byte[]) lines_y#2 ← phi( main::@1/(byte[]) lines_y#4 )
  (byte[]) lines_x#2 ← phi( main::@1/(byte[]) lines_x#4 )
  (byte) lines::l#0 ← (byte/signed byte/word/signed word) 0
  to:lines::@1
lines::@1: scope:[lines]  from lines lines::@3
  (byte[]) plot_bit#44 ← phi( lines/(byte[]) plot_bit#45 lines::@3/(byte[]) plot_bit#44 )
  (byte[]) plot_ylo#48 ← phi( lines/(byte[]) plot_ylo#49 lines::@3/(byte[]) plot_ylo#48 )
  (byte[]) plot_yhi#48 ← phi( lines/(byte[]) plot_yhi#49 lines::@3/(byte[]) plot_yhi#48 )
  (byte[]) plot_xlo#44 ← phi( lines/(byte[]) plot_xlo#45 lines::@3/(byte[]) plot_xlo#44 )
  (byte[]) plot_xhi#44 ← phi( lines/(byte[]) plot_xhi#45 lines::@3/(byte[]) plot_xhi#44 )
  (byte) lines_cnt#1 ← phi( lines/(byte) lines_cnt#3 lines::@3/(byte) lines_cnt#1 )
  (byte[]) lines_y#1 ← phi( lines/(byte[]) lines_y#2 lines::@3/(byte[]) lines_y#1 )
  (byte) lines::l#2 ← phi( lines/(byte) lines::l#0 lines::@3/(byte) lines::l#1 )
  (byte[]) lines_x#1 ← phi( lines/(byte[]) lines_x#2 lines::@3/(byte[]) lines_x#1 )
  (byte~) lines::$0 ← (byte[]) lines_x#1 *idx (byte) lines::l#2
  (byte~) lines::$1 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$2 ← (byte[]) lines_x#1 *idx (byte~) lines::$1
  (byte~) lines::$3 ← (byte[]) lines_y#1 *idx (byte) lines::l#2
  (byte~) lines::$4 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$5 ← (byte[]) lines_y#1 *idx (byte~) lines::$4
  (byte) line::x0#0 ← (byte~) lines::$0
  (byte) line::x1#0 ← (byte~) lines::$2
  (byte) line::y0#0 ← (byte~) lines::$3
  (byte) line::y1#0 ← (byte~) lines::$5
  call line param-assignment
  to:lines::@3
lines::@3: scope:[lines]  from lines::@1
  (byte) lines::l#1 ← ++ (byte) lines::l#2
  (boolean~) lines::$7 ← (byte) lines::l#1 < (byte) lines_cnt#1
  if((boolean~) lines::$7) goto lines::@1
  to:lines::@return
lines::@return: scope:[lines]  from lines::@3
  return 
  to:@return
line: scope:[line]  from lines::@1
  (byte[]) plot_bit#20 ← phi( lines::@1/(byte[]) plot_bit#44 )
  (byte[]) plot_ylo#19 ← phi( lines::@1/(byte[]) plot_ylo#48 )
  (byte[]) plot_yhi#19 ← phi( lines::@1/(byte[]) plot_yhi#48 )
  (byte[]) plot_xlo#20 ← phi( lines::@1/(byte[]) plot_xlo#44 )
  (byte[]) plot_xhi#20 ← phi( lines::@1/(byte[]) plot_xhi#44 )
  (byte) line::y1#1 ← phi( lines::@1/(byte) line::y1#0 )
  (byte) line::y0#1 ← phi( lines::@1/(byte) line::y0#0 )
  (byte) line::x1#1 ← phi( lines::@1/(byte) line::x1#0 )
  (byte) line::x0#1 ← phi( lines::@1/(byte) line::x0#0 )
  (boolean~) line::$1 ← (byte) line::x0#1 >= (byte) line::x1#1
  if((boolean~) line::$1) goto line::@1
  to:line::@15
line::@1: scope:[line]  from line
  (byte) line::xd#0 ← (byte) line::x0#1 - (byte) line::x1#1
  (boolean~) line::$17 ← (byte) line::y0#1 >= (byte) line::y1#1
  if((boolean~) line::$17) goto line::@9
  to:line::@23
line::@15: scope:[line]  from line
  (byte) line::xd#1 ← (byte) line::x1#1 - (byte) line::x0#1
  (boolean~) line::$4 ← (byte) line::y0#1 >= (byte) line::y1#1
  if((boolean~) line::$4) goto line::@2
  to:line::@16
line::@2: scope:[line]  from line::@15
  (byte) line::yd#0 ← (byte) line::y0#1 - (byte) line::y1#1
  (boolean~) line::$12 ← (byte) line::yd#0 >= (byte) line::xd#1
  if((boolean~) line::$12) goto line::@6
  to:line::@20
line::@16: scope:[line]  from line::@15
  (byte) line::yd#1 ← (byte) line::y1#1 - (byte) line::y0#1
  (boolean~) line::$7 ← (byte) line::yd#1 >= (byte) line::xd#1
  if((boolean~) line::$7) goto line::@3
  to:line::@17
line::@3: scope:[line]  from line::@16
  (byte) line_ydxi::y#0 ← (byte) line::y0#1
  (byte) line_ydxi::x#0 ← (byte) line::x0#1
  (byte) line_ydxi::y1#0 ← (byte) line::y1#1
  (byte) line_ydxi::yd#0 ← (byte) line::yd#1
  (byte) line_ydxi::xd#0 ← (byte) line::xd#1
  call line_ydxi param-assignment
  to:line::@return
line::@17: scope:[line]  from line::@16
  (byte) line_xdyi::x#0 ← (byte) line::x0#1
  (byte) line_xdyi::y#0 ← (byte) line::y0#1
  (byte) line_xdyi::x1#0 ← (byte) line::x1#1
  (byte) line_xdyi::xd#0 ← (byte) line::xd#1
  (byte) line_xdyi::yd#0 ← (byte) line::yd#1
  call line_xdyi param-assignment
  to:line::@return
line::@6: scope:[line]  from line::@2
  (byte) line_ydxd::y#0 ← (byte) line::y1#1
  (byte) line_ydxd::x#0 ← (byte) line::x1#1
  (byte) line_ydxd::y1#0 ← (byte) line::y0#1
  (byte) line_ydxd::yd#0 ← (byte) line::yd#0
  (byte) line_ydxd::xd#0 ← (byte) line::xd#1
  call line_ydxd param-assignment
  to:line::@return
line::@20: scope:[line]  from line::@2
  (byte) line_xdyd::x#0 ← (byte) line::x0#1
  (byte) line_xdyd::y#0 ← (byte) line::y0#1
  (byte) line_xdyd::x1#0 ← (byte) line::x1#1
  (byte) line_xdyd::xd#0 ← (byte) line::xd#1
  (byte) line_xdyd::yd#0 ← (byte) line::yd#0
  call line_xdyd param-assignment
  to:line::@return
line::@9: scope:[line]  from line::@1
  (byte) line::yd#10 ← (byte) line::y0#1 - (byte) line::y1#1
  (boolean~) line::$25 ← (byte) line::yd#10 >= (byte) line::xd#0
  if((boolean~) line::$25) goto line::@13
  to:line::@27
line::@23: scope:[line]  from line::@1
  (byte) line::yd#3 ← (byte) line::y1#1 - (byte) line::y0#1
  (boolean~) line::$20 ← (byte) line::yd#3 >= (byte) line::xd#0
  if((boolean~) line::$20) goto line::@10
  to:line::@24
line::@10: scope:[line]  from line::@23
  (byte) line_ydxd::y#1 ← (byte) line::y0#1
  (byte) line_ydxd::x#1 ← (byte) line::x0#1
  (byte) line_ydxd::y1#1 ← (byte) line::y1#1
  (byte) line_ydxd::yd#1 ← (byte) line::yd#3
  (byte) line_ydxd::xd#1 ← (byte) line::xd#0
  call line_ydxd param-assignment
  to:line::@return
line::@24: scope:[line]  from line::@23
  (byte) line_xdyd::x#1 ← (byte) line::x1#1
  (byte) line_xdyd::y#1 ← (byte) line::y1#1
  (byte) line_xdyd::x1#1 ← (byte) line::x0#1
  (byte) line_xdyd::xd#1 ← (byte) line::xd#0
  (byte) line_xdyd::yd#1 ← (byte) line::yd#3
  call line_xdyd param-assignment
  to:line::@return
line::@13: scope:[line]  from line::@9
  (byte) line_ydxi::y#1 ← (byte) line::y1#1
  (byte) line_ydxi::x#1 ← (byte) line::x1#1
  (byte) line_ydxi::y1#1 ← (byte) line::y0#1
  (byte) line_ydxi::yd#1 ← (byte) line::yd#10
  (byte) line_ydxi::xd#1 ← (byte) line::xd#0
  call line_ydxi param-assignment
  to:line::@return
line::@27: scope:[line]  from line::@9
  (byte) line_xdyi::x#1 ← (byte) line::x1#1
  (byte) line_xdyi::y#1 ← (byte) line::y1#1
  (byte) line_xdyi::x1#1 ← (byte) line::x0#1
  (byte) line_xdyi::xd#1 ← (byte) line::xd#0
  (byte) line_xdyi::yd#1 ← (byte) line::yd#10
  call line_xdyi param-assignment
  to:line::@return
line::@return: scope:[line]  from line::@10 line::@13 line::@17 line::@20 line::@24 line::@27 line::@3 line::@6
  return 
  to:@return
line_xdyi: scope:[line_xdyi]  from line::@17 line::@27
  (byte) line_xdyi::x1#6 ← phi( line::@17/(byte) line_xdyi::x1#0 line::@27/(byte) line_xdyi::x1#1 )
  (byte[]) plot_bit#9 ← phi( line::@17/(byte[]) plot_bit#20 line::@27/(byte[]) plot_bit#20 )
  (byte[]) plot_ylo#9 ← phi( line::@17/(byte[]) plot_ylo#19 line::@27/(byte[]) plot_ylo#19 )
  (byte[]) plot_yhi#9 ← phi( line::@17/(byte[]) plot_yhi#19 line::@27/(byte[]) plot_yhi#19 )
  (byte[]) plot_xlo#9 ← phi( line::@17/(byte[]) plot_xlo#20 line::@27/(byte[]) plot_xlo#20 )
  (byte[]) plot_xhi#9 ← phi( line::@17/(byte[]) plot_xhi#20 line::@27/(byte[]) plot_xhi#20 )
  (byte) line_xdyi::xd#5 ← phi( line::@17/(byte) line_xdyi::xd#0 line::@27/(byte) line_xdyi::xd#1 )
  (byte) line_xdyi::y#5 ← phi( line::@17/(byte) line_xdyi::y#0 line::@27/(byte) line_xdyi::y#1 )
  (byte) line_xdyi::x#6 ← phi( line::@17/(byte) line_xdyi::x#0 line::@27/(byte) line_xdyi::x#1 )
  (byte) line_xdyi::yd#2 ← phi( line::@17/(byte) line_xdyi::yd#0 line::@27/(byte) line_xdyi::yd#1 )
  (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyi::@1
line_xdyi::@1: scope:[line_xdyi]  from line_xdyi line_xdyi::@2
  (byte) line_xdyi::x1#2 ← phi( line_xdyi/(byte) line_xdyi::x1#6 line_xdyi::@2/(byte) line_xdyi::x1#2 )
  (byte[]) plot_bit#10 ← phi( line_xdyi/(byte[]) plot_bit#9 line_xdyi::@2/(byte[]) plot_bit#10 )
  (byte[]) plot_ylo#10 ← phi( line_xdyi/(byte[]) plot_ylo#9 line_xdyi::@2/(byte[]) plot_ylo#10 )
  (byte[]) plot_yhi#10 ← phi( line_xdyi/(byte[]) plot_yhi#9 line_xdyi::@2/(byte[]) plot_yhi#10 )
  (byte[]) plot_xlo#10 ← phi( line_xdyi/(byte[]) plot_xlo#9 line_xdyi::@2/(byte[]) plot_xlo#10 )
  (byte[]) plot_xhi#10 ← phi( line_xdyi/(byte[]) plot_xhi#9 line_xdyi::@2/(byte[]) plot_xhi#10 )
  (byte) line_xdyi::xd#2 ← phi( line_xdyi/(byte) line_xdyi::xd#5 line_xdyi::@2/(byte) line_xdyi::xd#2 )
  (byte) line_xdyi::yd#3 ← phi( line_xdyi/(byte) line_xdyi::yd#2 line_xdyi::@2/(byte) line_xdyi::yd#3 )
  (byte) line_xdyi::e#3 ← phi( line_xdyi/(byte) line_xdyi::e#0 line_xdyi::@2/(byte) line_xdyi::e#6 )
  (byte) line_xdyi::y#3 ← phi( line_xdyi/(byte) line_xdyi::y#5 line_xdyi::@2/(byte) line_xdyi::y#6 )
  (byte) line_xdyi::x#3 ← phi( line_xdyi/(byte) line_xdyi::x#6 line_xdyi::@2/(byte) line_xdyi::x#2 )
  (byte) plot::x#0 ← (byte) line_xdyi::x#3
  (byte) plot::y#0 ← (byte) line_xdyi::y#3
  call plot param-assignment
  to:line_xdyi::@5
line_xdyi::@5: scope:[line_xdyi]  from line_xdyi::@1
  (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#3
  (boolean~) line_xdyi::$5 ← (byte) line_xdyi::xd#2 >= (byte) line_xdyi::e#1
  if((boolean~) line_xdyi::$5) goto line_xdyi::@2
  to:line_xdyi::@3
line_xdyi::@2: scope:[line_xdyi]  from line_xdyi::@3 line_xdyi::@5
  (byte) line_xdyi::e#6 ← phi( line_xdyi::@3/(byte) line_xdyi::e#2 line_xdyi::@5/(byte) line_xdyi::e#1 )
  (byte) line_xdyi::y#6 ← phi( line_xdyi::@3/(byte) line_xdyi::y#2 line_xdyi::@5/(byte) line_xdyi::y#3 )
  (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyi::$9 ← (byte) line_xdyi::x#2 < (byte~) line_xdyi::$8
  if((boolean~) line_xdyi::$9) goto line_xdyi::@1
  to:line_xdyi::@return
line_xdyi::@3: scope:[line_xdyi]  from line_xdyi::@5
  (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#2
  to:line_xdyi::@2
line_xdyi::@return: scope:[line_xdyi]  from line_xdyi::@2
  return 
  to:@return
line_xdyd: scope:[line_xdyd]  from line::@20 line::@24
  (byte) line_xdyd::x1#6 ← phi( line::@20/(byte) line_xdyd::x1#0 line::@24/(byte) line_xdyd::x1#1 )
  (byte[]) plot_bit#11 ← phi( line::@20/(byte[]) plot_bit#20 line::@24/(byte[]) plot_bit#20 )
  (byte[]) plot_ylo#11 ← phi( line::@20/(byte[]) plot_ylo#19 line::@24/(byte[]) plot_ylo#19 )
  (byte[]) plot_yhi#11 ← phi( line::@20/(byte[]) plot_yhi#19 line::@24/(byte[]) plot_yhi#19 )
  (byte[]) plot_xlo#11 ← phi( line::@20/(byte[]) plot_xlo#20 line::@24/(byte[]) plot_xlo#20 )
  (byte[]) plot_xhi#11 ← phi( line::@20/(byte[]) plot_xhi#20 line::@24/(byte[]) plot_xhi#20 )
  (byte) line_xdyd::xd#5 ← phi( line::@20/(byte) line_xdyd::xd#0 line::@24/(byte) line_xdyd::xd#1 )
  (byte) line_xdyd::y#5 ← phi( line::@20/(byte) line_xdyd::y#0 line::@24/(byte) line_xdyd::y#1 )
  (byte) line_xdyd::x#6 ← phi( line::@20/(byte) line_xdyd::x#0 line::@24/(byte) line_xdyd::x#1 )
  (byte) line_xdyd::yd#2 ← phi( line::@20/(byte) line_xdyd::yd#0 line::@24/(byte) line_xdyd::yd#1 )
  (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyd::@1
line_xdyd::@1: scope:[line_xdyd]  from line_xdyd line_xdyd::@2
  (byte) line_xdyd::x1#2 ← phi( line_xdyd/(byte) line_xdyd::x1#6 line_xdyd::@2/(byte) line_xdyd::x1#2 )
  (byte[]) plot_bit#12 ← phi( line_xdyd/(byte[]) plot_bit#11 line_xdyd::@2/(byte[]) plot_bit#12 )
  (byte[]) plot_ylo#12 ← phi( line_xdyd/(byte[]) plot_ylo#11 line_xdyd::@2/(byte[]) plot_ylo#12 )
  (byte[]) plot_yhi#12 ← phi( line_xdyd/(byte[]) plot_yhi#11 line_xdyd::@2/(byte[]) plot_yhi#12 )
  (byte[]) plot_xlo#12 ← phi( line_xdyd/(byte[]) plot_xlo#11 line_xdyd::@2/(byte[]) plot_xlo#12 )
  (byte[]) plot_xhi#12 ← phi( line_xdyd/(byte[]) plot_xhi#11 line_xdyd::@2/(byte[]) plot_xhi#12 )
  (byte) line_xdyd::xd#2 ← phi( line_xdyd/(byte) line_xdyd::xd#5 line_xdyd::@2/(byte) line_xdyd::xd#2 )
  (byte) line_xdyd::yd#3 ← phi( line_xdyd/(byte) line_xdyd::yd#2 line_xdyd::@2/(byte) line_xdyd::yd#3 )
  (byte) line_xdyd::e#3 ← phi( line_xdyd/(byte) line_xdyd::e#0 line_xdyd::@2/(byte) line_xdyd::e#6 )
  (byte) line_xdyd::y#3 ← phi( line_xdyd/(byte) line_xdyd::y#5 line_xdyd::@2/(byte) line_xdyd::y#6 )
  (byte) line_xdyd::x#3 ← phi( line_xdyd/(byte) line_xdyd::x#6 line_xdyd::@2/(byte) line_xdyd::x#2 )
  (byte) plot::x#1 ← (byte) line_xdyd::x#3
  (byte) plot::y#1 ← (byte) line_xdyd::y#3
  call plot param-assignment
  to:line_xdyd::@5
line_xdyd::@5: scope:[line_xdyd]  from line_xdyd::@1
  (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#3
  (boolean~) line_xdyd::$5 ← (byte) line_xdyd::xd#2 >= (byte) line_xdyd::e#1
  if((boolean~) line_xdyd::$5) goto line_xdyd::@2
  to:line_xdyd::@3
line_xdyd::@2: scope:[line_xdyd]  from line_xdyd::@3 line_xdyd::@5
  (byte) line_xdyd::e#6 ← phi( line_xdyd::@3/(byte) line_xdyd::e#2 line_xdyd::@5/(byte) line_xdyd::e#1 )
  (byte) line_xdyd::y#6 ← phi( line_xdyd::@3/(byte) line_xdyd::y#2 line_xdyd::@5/(byte) line_xdyd::y#3 )
  (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyd::$9 ← (byte) line_xdyd::x#2 < (byte~) line_xdyd::$8
  if((boolean~) line_xdyd::$9) goto line_xdyd::@1
  to:line_xdyd::@return
line_xdyd::@3: scope:[line_xdyd]  from line_xdyd::@5
  (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#2
  to:line_xdyd::@2
line_xdyd::@return: scope:[line_xdyd]  from line_xdyd::@2
  return 
  to:@return
line_ydxi: scope:[line_ydxi]  from line::@13 line::@3
  (byte) line_ydxi::y1#6 ← phi( line::@13/(byte) line_ydxi::y1#1 line::@3/(byte) line_ydxi::y1#0 )
  (byte[]) plot_bit#13 ← phi( line::@13/(byte[]) plot_bit#20 line::@3/(byte[]) plot_bit#20 )
  (byte[]) plot_ylo#13 ← phi( line::@13/(byte[]) plot_ylo#19 line::@3/(byte[]) plot_ylo#19 )
  (byte[]) plot_yhi#13 ← phi( line::@13/(byte[]) plot_yhi#19 line::@3/(byte[]) plot_yhi#19 )
  (byte[]) plot_xlo#13 ← phi( line::@13/(byte[]) plot_xlo#20 line::@3/(byte[]) plot_xlo#20 )
  (byte[]) plot_xhi#13 ← phi( line::@13/(byte[]) plot_xhi#20 line::@3/(byte[]) plot_xhi#20 )
  (byte) line_ydxi::yd#5 ← phi( line::@13/(byte) line_ydxi::yd#1 line::@3/(byte) line_ydxi::yd#0 )
  (byte) line_ydxi::y#6 ← phi( line::@13/(byte) line_ydxi::y#1 line::@3/(byte) line_ydxi::y#0 )
  (byte) line_ydxi::x#5 ← phi( line::@13/(byte) line_ydxi::x#1 line::@3/(byte) line_ydxi::x#0 )
  (byte) line_ydxi::xd#2 ← phi( line::@13/(byte) line_ydxi::xd#1 line::@3/(byte) line_ydxi::xd#0 )
  (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxi::@1
line_ydxi::@1: scope:[line_ydxi]  from line_ydxi line_ydxi::@2
  (byte) line_ydxi::y1#2 ← phi( line_ydxi/(byte) line_ydxi::y1#6 line_ydxi::@2/(byte) line_ydxi::y1#2 )
  (byte[]) plot_bit#14 ← phi( line_ydxi/(byte[]) plot_bit#13 line_ydxi::@2/(byte[]) plot_bit#14 )
  (byte[]) plot_ylo#14 ← phi( line_ydxi/(byte[]) plot_ylo#13 line_ydxi::@2/(byte[]) plot_ylo#14 )
  (byte[]) plot_yhi#14 ← phi( line_ydxi/(byte[]) plot_yhi#13 line_ydxi::@2/(byte[]) plot_yhi#14 )
  (byte[]) plot_xlo#14 ← phi( line_ydxi/(byte[]) plot_xlo#13 line_ydxi::@2/(byte[]) plot_xlo#14 )
  (byte[]) plot_xhi#14 ← phi( line_ydxi/(byte[]) plot_xhi#13 line_ydxi::@2/(byte[]) plot_xhi#14 )
  (byte) line_ydxi::yd#2 ← phi( line_ydxi/(byte) line_ydxi::yd#5 line_ydxi::@2/(byte) line_ydxi::yd#2 )
  (byte) line_ydxi::xd#3 ← phi( line_ydxi/(byte) line_ydxi::xd#2 line_ydxi::@2/(byte) line_ydxi::xd#3 )
  (byte) line_ydxi::e#3 ← phi( line_ydxi/(byte) line_ydxi::e#0 line_ydxi::@2/(byte) line_ydxi::e#6 )
  (byte) line_ydxi::y#3 ← phi( line_ydxi/(byte) line_ydxi::y#6 line_ydxi::@2/(byte) line_ydxi::y#2 )
  (byte) line_ydxi::x#3 ← phi( line_ydxi/(byte) line_ydxi::x#5 line_ydxi::@2/(byte) line_ydxi::x#6 )
  (byte) plot::x#2 ← (byte) line_ydxi::x#3
  (byte) plot::y#2 ← (byte) line_ydxi::y#3
  call plot param-assignment
  to:line_ydxi::@5
line_ydxi::@5: scope:[line_ydxi]  from line_ydxi::@1
  (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#3
  (boolean~) line_ydxi::$5 ← (byte) line_ydxi::yd#2 >= (byte) line_ydxi::e#1
  if((boolean~) line_ydxi::$5) goto line_ydxi::@2
  to:line_ydxi::@3
line_ydxi::@2: scope:[line_ydxi]  from line_ydxi::@3 line_ydxi::@5
  (byte) line_ydxi::e#6 ← phi( line_ydxi::@3/(byte) line_ydxi::e#2 line_ydxi::@5/(byte) line_ydxi::e#1 )
  (byte) line_ydxi::x#6 ← phi( line_ydxi::@3/(byte) line_ydxi::x#2 line_ydxi::@5/(byte) line_ydxi::x#3 )
  (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxi::$9 ← (byte) line_ydxi::y#2 < (byte~) line_ydxi::$8
  if((boolean~) line_ydxi::$9) goto line_ydxi::@1
  to:line_ydxi::@return
line_ydxi::@3: scope:[line_ydxi]  from line_ydxi::@5
  (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#2
  to:line_ydxi::@2
line_ydxi::@return: scope:[line_ydxi]  from line_ydxi::@2
  return 
  to:@return
line_ydxd: scope:[line_ydxd]  from line::@10 line::@6
  (byte) line_ydxd::y1#6 ← phi( line::@10/(byte) line_ydxd::y1#1 line::@6/(byte) line_ydxd::y1#0 )
  (byte[]) plot_bit#15 ← phi( line::@10/(byte[]) plot_bit#20 line::@6/(byte[]) plot_bit#20 )
  (byte[]) plot_ylo#15 ← phi( line::@10/(byte[]) plot_ylo#19 line::@6/(byte[]) plot_ylo#19 )
  (byte[]) plot_yhi#15 ← phi( line::@10/(byte[]) plot_yhi#19 line::@6/(byte[]) plot_yhi#19 )
  (byte[]) plot_xlo#15 ← phi( line::@10/(byte[]) plot_xlo#20 line::@6/(byte[]) plot_xlo#20 )
  (byte[]) plot_xhi#15 ← phi( line::@10/(byte[]) plot_xhi#20 line::@6/(byte[]) plot_xhi#20 )
  (byte) line_ydxd::yd#5 ← phi( line::@10/(byte) line_ydxd::yd#1 line::@6/(byte) line_ydxd::yd#0 )
  (byte) line_ydxd::y#6 ← phi( line::@10/(byte) line_ydxd::y#1 line::@6/(byte) line_ydxd::y#0 )
  (byte) line_ydxd::x#5 ← phi( line::@10/(byte) line_ydxd::x#1 line::@6/(byte) line_ydxd::x#0 )
  (byte) line_ydxd::xd#2 ← phi( line::@10/(byte) line_ydxd::xd#1 line::@6/(byte) line_ydxd::xd#0 )
  (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxd::@1
line_ydxd::@1: scope:[line_ydxd]  from line_ydxd line_ydxd::@2
  (byte) line_ydxd::y1#2 ← phi( line_ydxd/(byte) line_ydxd::y1#6 line_ydxd::@2/(byte) line_ydxd::y1#2 )
  (byte[]) plot_bit#16 ← phi( line_ydxd/(byte[]) plot_bit#15 line_ydxd::@2/(byte[]) plot_bit#16 )
  (byte[]) plot_ylo#16 ← phi( line_ydxd/(byte[]) plot_ylo#15 line_ydxd::@2/(byte[]) plot_ylo#16 )
  (byte[]) plot_yhi#16 ← phi( line_ydxd/(byte[]) plot_yhi#15 line_ydxd::@2/(byte[]) plot_yhi#16 )
  (byte[]) plot_xlo#16 ← phi( line_ydxd/(byte[]) plot_xlo#15 line_ydxd::@2/(byte[]) plot_xlo#16 )
  (byte[]) plot_xhi#16 ← phi( line_ydxd/(byte[]) plot_xhi#15 line_ydxd::@2/(byte[]) plot_xhi#16 )
  (byte) line_ydxd::yd#2 ← phi( line_ydxd/(byte) line_ydxd::yd#5 line_ydxd::@2/(byte) line_ydxd::yd#2 )
  (byte) line_ydxd::xd#3 ← phi( line_ydxd/(byte) line_ydxd::xd#2 line_ydxd::@2/(byte) line_ydxd::xd#3 )
  (byte) line_ydxd::e#3 ← phi( line_ydxd/(byte) line_ydxd::e#0 line_ydxd::@2/(byte) line_ydxd::e#6 )
  (byte) line_ydxd::y#3 ← phi( line_ydxd/(byte) line_ydxd::y#6 line_ydxd::@2/(byte) line_ydxd::y#2 )
  (byte) line_ydxd::x#3 ← phi( line_ydxd/(byte) line_ydxd::x#5 line_ydxd::@2/(byte) line_ydxd::x#6 )
  (byte) plot::x#3 ← (byte) line_ydxd::x#3
  (byte) plot::y#3 ← (byte) line_ydxd::y#3
  call plot param-assignment
  to:line_ydxd::@5
line_ydxd::@5: scope:[line_ydxd]  from line_ydxd::@1
  (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#3
  (boolean~) line_ydxd::$5 ← (byte) line_ydxd::yd#2 >= (byte) line_ydxd::e#1
  if((boolean~) line_ydxd::$5) goto line_ydxd::@2
  to:line_ydxd::@3
line_ydxd::@2: scope:[line_ydxd]  from line_ydxd::@3 line_ydxd::@5
  (byte) line_ydxd::e#6 ← phi( line_ydxd::@3/(byte) line_ydxd::e#2 line_ydxd::@5/(byte) line_ydxd::e#1 )
  (byte) line_ydxd::x#6 ← phi( line_ydxd::@3/(byte) line_ydxd::x#2 line_ydxd::@5/(byte) line_ydxd::x#3 )
  (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxd::$9 ← (byte) line_ydxd::y#2 < (byte~) line_ydxd::$8
  if((boolean~) line_ydxd::$9) goto line_ydxd::@1
  to:line_ydxd::@return
line_ydxd::@3: scope:[line_ydxd]  from line_ydxd::@5
  (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#2
  to:line_ydxd::@2
line_ydxd::@return: scope:[line_ydxd]  from line_ydxd::@2
  return 
  to:@return
plot: scope:[plot]  from line_xdyd::@1 line_xdyi::@1 line_ydxd::@1 line_ydxi::@1
  (byte[]) plot_bit#1 ← phi( line_xdyd::@1/(byte[]) plot_bit#12 line_xdyi::@1/(byte[]) plot_bit#10 line_ydxd::@1/(byte[]) plot_bit#16 line_ydxi::@1/(byte[]) plot_bit#14 )
  (byte[]) plot_ylo#1 ← phi( line_xdyd::@1/(byte[]) plot_ylo#12 line_xdyi::@1/(byte[]) plot_ylo#10 line_ydxd::@1/(byte[]) plot_ylo#16 line_ydxi::@1/(byte[]) plot_ylo#14 )
  (byte) plot::y#4 ← phi( line_xdyd::@1/(byte) plot::y#1 line_xdyi::@1/(byte) plot::y#0 line_ydxd::@1/(byte) plot::y#3 line_ydxi::@1/(byte) plot::y#2 )
  (byte[]) plot_yhi#1 ← phi( line_xdyd::@1/(byte[]) plot_yhi#12 line_xdyi::@1/(byte[]) plot_yhi#10 line_ydxd::@1/(byte[]) plot_yhi#16 line_ydxi::@1/(byte[]) plot_yhi#14 )
  (byte[]) plot_xlo#1 ← phi( line_xdyd::@1/(byte[]) plot_xlo#12 line_xdyi::@1/(byte[]) plot_xlo#10 line_ydxd::@1/(byte[]) plot_xlo#16 line_ydxi::@1/(byte[]) plot_xlo#14 )
  (byte) plot::x#4 ← phi( line_xdyd::@1/(byte) plot::x#1 line_xdyi::@1/(byte) plot::x#0 line_ydxd::@1/(byte) plot::x#3 line_ydxi::@1/(byte) plot::x#2 )
  (byte[]) plot_xhi#1 ← phi( line_xdyd::@1/(byte[]) plot_xhi#12 line_xdyi::@1/(byte[]) plot_xhi#10 line_ydxd::@1/(byte[]) plot_xhi#16 line_ydxi::@1/(byte[]) plot_xhi#14 )
  (byte*) plot::plotter_x#0 ← ((byte*)) (byte/signed byte/word/signed word) 0
  (word) plot::plotter_y#0 ← (byte/signed byte/word/signed word) 0
  (byte~) plot::$0 ← (byte[]) plot_xhi#1 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#1 ← (byte*) plot::plotter_x#0 hi= (byte~) plot::$0
  (byte~) plot::$1 ← (byte[]) plot_xlo#1 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1
  (byte~) plot::$2 ← (byte[]) plot_yhi#1 *idx (byte) plot::y#4
  (word) plot::plotter_y#1 ← (word) plot::plotter_y#0 hi= (byte~) plot::$2
  (byte~) plot::$3 ← (byte[]) plot_ylo#1 *idx (byte) plot::y#4
  (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3
  (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2
  (byte~) plot::$5 ← (byte[]) plot_bit#1 *idx (byte) plot::x#4
  (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5
  *((byte*) plot::plotter#0) ← (byte~) plot::$6
  to:plot::@return
plot::@return: scope:[plot]  from plot
  return 
  to:@return
init_plot_tables: scope:[init_plot_tables]  from main::@3
  (byte[]) plot_yhi#41 ← phi( main::@3/(byte[]) plot_yhi#44 )
  (byte[]) plot_ylo#41 ← phi( main::@3/(byte[]) plot_ylo#44 )
  (byte[]) plot_bit#7 ← phi( main::@3/(byte[]) plot_bit#17 )
  (byte[]) plot_xhi#7 ← phi( main::@3/(byte[]) plot_xhi#17 )
  (byte*) BITMAP#4 ← phi( main::@3/(byte*) BITMAP#6 )
  (byte[]) plot_xlo#7 ← phi( main::@3/(byte[]) plot_xlo#17 )
  (byte) init_plot_tables::bits#0 ← (byte/word/signed word) 128
  (byte) init_plot_tables::x#0 ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@1
init_plot_tables::@1: scope:[init_plot_tables]  from init_plot_tables init_plot_tables::@2
  (byte[]) plot_yhi#17 ← phi( init_plot_tables/(byte[]) plot_yhi#41 init_plot_tables::@2/(byte[]) plot_yhi#17 )
  (byte[]) plot_ylo#17 ← phi( init_plot_tables/(byte[]) plot_ylo#41 init_plot_tables::@2/(byte[]) plot_ylo#17 )
  (byte[]) plot_bit#18 ← phi( init_plot_tables/(byte[]) plot_bit#7 init_plot_tables::@2/(byte[]) plot_bit#18 )
  (byte) init_plot_tables::bits#3 ← phi( init_plot_tables/(byte) init_plot_tables::bits#0 init_plot_tables::@2/(byte) init_plot_tables::bits#4 )
  (byte[]) plot_xhi#18 ← phi( init_plot_tables/(byte[]) plot_xhi#7 init_plot_tables::@2/(byte[]) plot_xhi#18 )
  (byte*) BITMAP#1 ← phi( init_plot_tables/(byte*) BITMAP#4 init_plot_tables::@2/(byte*) BITMAP#1 )
  (byte[]) plot_xlo#18 ← phi( init_plot_tables/(byte[]) plot_xlo#7 init_plot_tables::@2/(byte[]) plot_xlo#18 )
  (byte) init_plot_tables::x#2 ← phi( init_plot_tables/(byte) init_plot_tables::x#0 init_plot_tables::@2/(byte) init_plot_tables::x#1 )
  (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248
  *((byte[]) plot_xlo#18 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0
  (byte~) init_plot_tables::$1 ← > (byte*) BITMAP#1
  *((byte[]) plot_xhi#18 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$1
  *((byte[]) plot_bit#18 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3
  (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1
  (boolean~) init_plot_tables::$4 ← (byte) init_plot_tables::bits#1 != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$4) goto init_plot_tables::@2
  to:init_plot_tables::@5
init_plot_tables::@2: scope:[init_plot_tables]  from init_plot_tables::@1 init_plot_tables::@5
  (byte) init_plot_tables::bits#4 ← phi( init_plot_tables::@1/(byte) init_plot_tables::bits#1 init_plot_tables::@5/(byte) init_plot_tables::bits#2 )
  (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2
  (boolean~) init_plot_tables::$5 ← (byte) init_plot_tables::x#1 != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$5) goto init_plot_tables::@1
  to:init_plot_tables::@6
init_plot_tables::@5: scope:[init_plot_tables]  from init_plot_tables::@1
  (byte) init_plot_tables::bits#2 ← (byte/word/signed word) 128
  to:init_plot_tables::@2
init_plot_tables::@6: scope:[init_plot_tables]  from init_plot_tables::@2
  (byte*) init_plot_tables::yoffs#0 ← ((byte*)) (byte/signed byte/word/signed word) 0
  (byte) init_plot_tables::y#0 ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@3
init_plot_tables::@3: scope:[init_plot_tables]  from init_plot_tables::@4 init_plot_tables::@6
  (byte[]) plot_yhi#18 ← phi( init_plot_tables::@4/(byte[]) plot_yhi#18 init_plot_tables::@6/(byte[]) plot_yhi#17 )
  (byte[]) plot_ylo#18 ← phi( init_plot_tables::@4/(byte[]) plot_ylo#18 init_plot_tables::@6/(byte[]) plot_ylo#17 )
  (byte*) init_plot_tables::yoffs#2 ← phi( init_plot_tables::@4/(byte*) init_plot_tables::yoffs#4 init_plot_tables::@6/(byte*) init_plot_tables::yoffs#0 )
  (byte) init_plot_tables::y#2 ← phi( init_plot_tables::@4/(byte) init_plot_tables::y#1 init_plot_tables::@6/(byte) init_plot_tables::y#0 )
  (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2
  (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7
  *((byte[]) plot_ylo#18 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8
  (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2
  *((byte[]) plot_yhi#18 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9
  (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (boolean~) init_plot_tables::$12 ← (byte~) init_plot_tables::$10 != (byte/signed byte/word/signed word) 7
  if((boolean~) init_plot_tables::$12) goto init_plot_tables::@4
  to:init_plot_tables::@7
init_plot_tables::@4: scope:[init_plot_tables]  from init_plot_tables::@3 init_plot_tables::@7
  (byte*) init_plot_tables::yoffs#4 ← phi( init_plot_tables::@3/(byte*) init_plot_tables::yoffs#2 init_plot_tables::@7/(byte*) init_plot_tables::yoffs#1 )
  (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2
  (boolean~) init_plot_tables::$14 ← (byte) init_plot_tables::y#1 != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$14) goto init_plot_tables::@3
  to:init_plot_tables::@return
init_plot_tables::@7: scope:[init_plot_tables]  from init_plot_tables::@3
  (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320
  to:init_plot_tables::@4
init_plot_tables::@return: scope:[init_plot_tables]  from init_plot_tables::@4
  return 
  to:@return
init_screen: scope:[init_screen]  from main
  (byte*) SCREEN#4 ← phi( main/(byte*) SCREEN#5 )
  (byte*) BITMAP#2 ← phi( main/(byte*) BITMAP#6 )
  (byte*) init_screen::b#0 ← (byte*) BITMAP#2
  to:init_screen::@1
init_screen::@1: scope:[init_screen]  from init_screen init_screen::@1
  (byte*) SCREEN#1 ← phi( init_screen/(byte*) SCREEN#4 init_screen::@1/(byte*) SCREEN#1 )
  (byte*) BITMAP#3 ← phi( init_screen/(byte*) BITMAP#2 init_screen::@1/(byte*) BITMAP#3 )
  (byte*) init_screen::b#2 ← phi( init_screen/(byte*) init_screen::b#0 init_screen::@1/(byte*) init_screen::b#1 )
  *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0
  (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2
  (byte*~) init_screen::$0 ← (byte*) BITMAP#3 + (word/signed word) 8192
  (boolean~) init_screen::$1 ← (byte*) init_screen::b#1 != (byte*~) init_screen::$0
  if((boolean~) init_screen::$1) goto init_screen::@1
  to:init_screen::@3
init_screen::@3: scope:[init_screen]  from init_screen::@1
  (byte*) init_screen::c#0 ← (byte*) SCREEN#1
  to:init_screen::@2
init_screen::@2: scope:[init_screen]  from init_screen::@2 init_screen::@3
  (byte*) SCREEN#2 ← phi( init_screen::@2/(byte*) SCREEN#2 init_screen::@3/(byte*) SCREEN#1 )
  (byte*) init_screen::c#2 ← phi( init_screen::@2/(byte*) init_screen::c#1 init_screen::@3/(byte*) init_screen::c#0 )
  *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20
  (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2
  (byte*~) init_screen::$2 ← (byte*) SCREEN#2 + (word/signed word) 1024
  (boolean~) init_screen::$3 ← (byte*) init_screen::c#1 != (byte*~) init_screen::$2
  if((boolean~) init_screen::$3) goto init_screen::@2
  to:init_screen::@return
init_screen::@return: scope:[init_screen]  from init_screen::@2
  return 
  to:@return
@10: scope:[]  from @begin
  call main param-assignment
  to:@end
@end: scope:[]  from @10

Not aliassing across scopes: BGCOL#1 BGCOL#0
Not aliassing across scopes: FGCOL#1 FGCOL#0
Not aliassing across scopes: BMM#1 BMM#0
Not aliassing across scopes: DEN#1 DEN#0
Not aliassing across scopes: RSEL#1 RSEL#0
Not aliassing across scopes: D011#1 D011#0
Not aliassing across scopes: D018#1 D018#0
Not aliassing across scopes: BITMAP#6 BITMAP#0
Not aliassing across scopes: plot_xlo#17 plot_xlo#0
Not aliassing across scopes: plot_xhi#17 plot_xhi#0
Not aliassing across scopes: plot_bit#17 plot_bit#0
Not aliassing across scopes: SCREEN#5 SCREEN#0
Not aliassing across scopes: lines_x#5 lines_x#0
Not aliassing across scopes: lines_y#5 lines_y#0
Not aliassing across scopes: lines_cnt#5 lines_cnt#0
Not aliassing across scopes: plot_ylo#44 plot_ylo#0
Not aliassing across scopes: plot_yhi#44 plot_yhi#0
Not aliassing across scopes: lines_x#2 lines_x#4
Not aliassing across scopes: lines_y#2 lines_y#4
Not aliassing across scopes: lines_cnt#3 lines_cnt#4
Not aliassing across scopes: plot_xhi#45 plot_xhi#47
Not aliassing across scopes: plot_xlo#45 plot_xlo#47
Not aliassing across scopes: plot_yhi#49 plot_yhi#51
Not aliassing across scopes: plot_ylo#49 plot_ylo#51
Not aliassing across scopes: plot_bit#45 plot_bit#47
Not aliassing across scopes: line::x0#0 lines::$0
Not aliassing across scopes: line::x1#0 lines::$2
Not aliassing across scopes: line::y0#0 lines::$3
Not aliassing across scopes: line::y1#0 lines::$5
Not aliassing across scopes: line::x0#1 line::x0#0
Not aliassing across scopes: line::x1#1 line::x1#0
Not aliassing across scopes: line::y0#1 line::y0#0
Not aliassing across scopes: line::y1#1 line::y1#0
Not aliassing across scopes: plot_xhi#20 plot_xhi#44
Not aliassing across scopes: plot_xlo#20 plot_xlo#44
Not aliassing across scopes: plot_yhi#19 plot_yhi#48
Not aliassing across scopes: plot_ylo#19 plot_ylo#48
Not aliassing across scopes: plot_bit#20 plot_bit#44
Not aliassing across scopes: line_ydxi::y#0 line::y0#1
Not aliassing across scopes: line_ydxi::x#0 line::x0#1
Not aliassing across scopes: line_ydxi::y1#0 line::y1#1
Not aliassing across scopes: line_ydxi::yd#0 line::yd#1
Not aliassing across scopes: line_ydxi::xd#0 line::xd#1
Not aliassing across scopes: line_xdyi::x#0 line::x0#1
Not aliassing across scopes: line_xdyi::y#0 line::y0#1
Not aliassing across scopes: line_xdyi::x1#0 line::x1#1
Not aliassing across scopes: line_xdyi::xd#0 line::xd#1
Not aliassing across scopes: line_xdyi::yd#0 line::yd#1
Not aliassing across scopes: line_ydxd::y#0 line::y1#1
Not aliassing across scopes: line_ydxd::x#0 line::x1#1
Not aliassing across scopes: line_ydxd::y1#0 line::y0#1
Not aliassing across scopes: line_ydxd::yd#0 line::yd#0
Not aliassing across scopes: line_ydxd::xd#0 line::xd#1
Not aliassing across scopes: line_xdyd::x#0 line::x0#1
Not aliassing across scopes: line_xdyd::y#0 line::y0#1
Not aliassing across scopes: line_xdyd::x1#0 line::x1#1
Not aliassing across scopes: line_xdyd::xd#0 line::xd#1
Not aliassing across scopes: line_xdyd::yd#0 line::yd#0
Not aliassing across scopes: line_ydxd::y#1 line::y0#1
Not aliassing across scopes: line_ydxd::x#1 line::x0#1
Not aliassing across scopes: line_ydxd::y1#1 line::y1#1
Not aliassing across scopes: line_ydxd::yd#1 line::yd#3
Not aliassing across scopes: line_ydxd::xd#1 line::xd#0
Not aliassing across scopes: line_xdyd::x#1 line::x1#1
Not aliassing across scopes: line_xdyd::y#1 line::y1#1
Not aliassing across scopes: line_xdyd::x1#1 line::x0#1
Not aliassing across scopes: line_xdyd::xd#1 line::xd#0
Not aliassing across scopes: line_xdyd::yd#1 line::yd#3
Not aliassing across scopes: line_ydxi::y#1 line::y1#1
Not aliassing across scopes: line_ydxi::x#1 line::x1#1
Not aliassing across scopes: line_ydxi::y1#1 line::y0#1
Not aliassing across scopes: line_ydxi::yd#1 line::yd#10
Not aliassing across scopes: line_ydxi::xd#1 line::xd#0
Not aliassing across scopes: line_xdyi::x#1 line::x1#1
Not aliassing across scopes: line_xdyi::y#1 line::y1#1
Not aliassing across scopes: line_xdyi::x1#1 line::x0#1
Not aliassing across scopes: line_xdyi::xd#1 line::xd#0
Not aliassing across scopes: line_xdyi::yd#1 line::yd#10
Not aliassing across scopes: line_xdyi::yd#2 line_xdyi::yd#0
Not aliassing across scopes: line_xdyi::x#6 line_xdyi::x#0
Not aliassing across scopes: line_xdyi::y#5 line_xdyi::y#0
Not aliassing across scopes: line_xdyi::xd#5 line_xdyi::xd#0
Not aliassing across scopes: plot_xhi#9 plot_xhi#20
Not aliassing across scopes: plot_xlo#9 plot_xlo#20
Not aliassing across scopes: plot_yhi#9 plot_yhi#19
Not aliassing across scopes: plot_ylo#9 plot_ylo#19
Not aliassing across scopes: plot_bit#9 plot_bit#20
Not aliassing across scopes: line_xdyi::x1#6 line_xdyi::x1#0
Not aliassing across scopes: plot::x#0 line_xdyi::x#3
Not aliassing across scopes: plot::y#0 line_xdyi::y#3
Not aliassing across scopes: line_xdyd::yd#2 line_xdyd::yd#0
Not aliassing across scopes: line_xdyd::x#6 line_xdyd::x#0
Not aliassing across scopes: line_xdyd::y#5 line_xdyd::y#0
Not aliassing across scopes: line_xdyd::xd#5 line_xdyd::xd#0
Not aliassing across scopes: plot_xhi#11 plot_xhi#20
Not aliassing across scopes: plot_xlo#11 plot_xlo#20
Not aliassing across scopes: plot_yhi#11 plot_yhi#19
Not aliassing across scopes: plot_ylo#11 plot_ylo#19
Not aliassing across scopes: plot_bit#11 plot_bit#20
Not aliassing across scopes: line_xdyd::x1#6 line_xdyd::x1#0
Not aliassing across scopes: plot::x#1 line_xdyd::x#3
Not aliassing across scopes: plot::y#1 line_xdyd::y#3
Not aliassing across scopes: line_ydxi::xd#2 line_ydxi::xd#1
Not aliassing across scopes: line_ydxi::x#5 line_ydxi::x#1
Not aliassing across scopes: line_ydxi::y#6 line_ydxi::y#1
Not aliassing across scopes: line_ydxi::yd#5 line_ydxi::yd#1
Not aliassing across scopes: plot_xhi#13 plot_xhi#20
Not aliassing across scopes: plot_xlo#13 plot_xlo#20
Not aliassing across scopes: plot_yhi#13 plot_yhi#19
Not aliassing across scopes: plot_ylo#13 plot_ylo#19
Not aliassing across scopes: plot_bit#13 plot_bit#20
Not aliassing across scopes: line_ydxi::y1#6 line_ydxi::y1#1
Not aliassing across scopes: plot::x#2 line_ydxi::x#3
Not aliassing across scopes: plot::y#2 line_ydxi::y#3
Not aliassing across scopes: line_ydxd::xd#2 line_ydxd::xd#1
Not aliassing across scopes: line_ydxd::x#5 line_ydxd::x#1
Not aliassing across scopes: line_ydxd::y#6 line_ydxd::y#1
Not aliassing across scopes: line_ydxd::yd#5 line_ydxd::yd#1
Not aliassing across scopes: plot_xhi#15 plot_xhi#20
Not aliassing across scopes: plot_xlo#15 plot_xlo#20
Not aliassing across scopes: plot_yhi#15 plot_yhi#19
Not aliassing across scopes: plot_ylo#15 plot_ylo#19
Not aliassing across scopes: plot_bit#15 plot_bit#20
Not aliassing across scopes: line_ydxd::y1#6 line_ydxd::y1#1
Not aliassing across scopes: plot::x#3 line_ydxd::x#3
Not aliassing across scopes: plot::y#3 line_ydxd::y#3
Not aliassing across scopes: plot_xhi#1 plot_xhi#12
Not aliassing across scopes: plot::x#4 plot::x#1
Not aliassing across scopes: plot_xlo#1 plot_xlo#12
Not aliassing across scopes: plot_yhi#1 plot_yhi#12
Not aliassing across scopes: plot::y#4 plot::y#1
Not aliassing across scopes: plot_ylo#1 plot_ylo#12
Not aliassing across scopes: plot_bit#1 plot_bit#12
Not aliassing across scopes: plot_xlo#7 plot_xlo#17
Not aliassing across scopes: BITMAP#4 BITMAP#6
Not aliassing across scopes: plot_xhi#7 plot_xhi#17
Not aliassing across scopes: plot_bit#7 plot_bit#17
Not aliassing across scopes: plot_ylo#41 plot_ylo#44
Not aliassing across scopes: plot_yhi#41 plot_yhi#44
Not aliassing identity: plot_ylo#18 plot_ylo#18
Not aliassing identity: plot_yhi#18 plot_yhi#18
Not aliassing across scopes: BITMAP#2 BITMAP#6
Not aliassing across scopes: SCREEN#4 SCREEN#5
Not aliassing across scopes: init_screen::b#0 BITMAP#2
Not aliassing across scopes: init_screen::c#0 SCREEN#1
Not aliassing identity: SCREEN#2 SCREEN#2
Self Phi Eliminated (byte[]) lines_x#4
Self Phi Eliminated (byte[]) lines_y#4
Self Phi Eliminated (byte) lines_cnt#4
Self Phi Eliminated (byte[]) plot_xhi#47
Self Phi Eliminated (byte[]) plot_xlo#47
Self Phi Eliminated (byte[]) plot_yhi#51
Self Phi Eliminated (byte[]) plot_ylo#51
Self Phi Eliminated (byte[]) plot_bit#47
Self Phi Eliminated (byte[]) lines_x#1
Self Phi Eliminated (byte[]) lines_y#1
Self Phi Eliminated (byte) lines_cnt#1
Self Phi Eliminated (byte[]) plot_xhi#44
Self Phi Eliminated (byte[]) plot_xlo#44
Self Phi Eliminated (byte[]) plot_yhi#48
Self Phi Eliminated (byte[]) plot_ylo#48
Self Phi Eliminated (byte[]) plot_bit#44
Self Phi Eliminated (byte) line_xdyi::yd#3
Self Phi Eliminated (byte) line_xdyi::xd#2
Self Phi Eliminated (byte[]) plot_xhi#10
Self Phi Eliminated (byte[]) plot_xlo#10
Self Phi Eliminated (byte[]) plot_yhi#10
Self Phi Eliminated (byte[]) plot_ylo#10
Self Phi Eliminated (byte[]) plot_bit#10
Self Phi Eliminated (byte) line_xdyi::x1#2
Self Phi Eliminated (byte) line_xdyd::yd#3
Self Phi Eliminated (byte) line_xdyd::xd#2
Self Phi Eliminated (byte[]) plot_xhi#12
Self Phi Eliminated (byte[]) plot_xlo#12
Self Phi Eliminated (byte[]) plot_yhi#12
Self Phi Eliminated (byte[]) plot_ylo#12
Self Phi Eliminated (byte[]) plot_bit#12
Self Phi Eliminated (byte) line_xdyd::x1#2
Self Phi Eliminated (byte) line_ydxi::xd#3
Self Phi Eliminated (byte) line_ydxi::yd#2
Self Phi Eliminated (byte[]) plot_xhi#14
Self Phi Eliminated (byte[]) plot_xlo#14
Self Phi Eliminated (byte[]) plot_yhi#14
Self Phi Eliminated (byte[]) plot_ylo#14
Self Phi Eliminated (byte[]) plot_bit#14
Self Phi Eliminated (byte) line_ydxi::y1#2
Self Phi Eliminated (byte) line_ydxd::xd#3
Self Phi Eliminated (byte) line_ydxd::yd#2
Self Phi Eliminated (byte[]) plot_xhi#16
Self Phi Eliminated (byte[]) plot_xlo#16
Self Phi Eliminated (byte[]) plot_yhi#16
Self Phi Eliminated (byte[]) plot_ylo#16
Self Phi Eliminated (byte[]) plot_bit#16
Self Phi Eliminated (byte) line_ydxd::y1#2
Self Phi Eliminated (byte[]) plot_xlo#18
Self Phi Eliminated (byte*) BITMAP#1
Self Phi Eliminated (byte[]) plot_xhi#18
Self Phi Eliminated (byte[]) plot_bit#18
Self Phi Eliminated (byte[]) plot_ylo#17
Self Phi Eliminated (byte[]) plot_yhi#17
Self Phi Eliminated (byte[]) plot_ylo#18
Self Phi Eliminated (byte[]) plot_yhi#18
Self Phi Eliminated (byte*) BITMAP#3
Self Phi Eliminated (byte*) SCREEN#1
Self Phi Eliminated (byte*) SCREEN#2
Succesful SSA optimization Pass2SelfPhiElimination
CONTROL FLOW GRAPH
@begin: scope:[]  from
  (byte*) BGCOL#0 ← ((byte*)) (word) 53280
  (byte*) FGCOL#0 ← ((byte*)) (word) 53281
  (byte*) D018#0 ← ((byte*)) (word) 53272
  (byte*) D011#0 ← ((byte*)) (word) 53265
  (byte) BMM#0 ← (byte/signed byte/word/signed word) 32
  (byte) DEN#0 ← (byte/signed byte/word/signed word) 16
  (byte) RSEL#0 ← (byte/signed byte/word/signed word) 8
  (byte*) SCREEN#0 ← ((byte*)) (word/signed word) 1024
  (byte*) BITMAP#0 ← ((byte*)) (word/signed word) 8192
  (byte[]) plot_xlo#0 ← ((byte*)) (word/signed word) 4096
  (byte[]) plot_xhi#0 ← ((byte*)) (word/signed word) 4352
  (byte[]) plot_ylo#0 ← ((byte*)) (word/signed word) 4608
  (byte[]) plot_yhi#0 ← ((byte*)) (word/signed word) 4864
  (byte[]) plot_bit#0 ← ((byte*)) (word/signed word) 5120
  (byte[]) lines_x#0 ← { (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60 }
  (byte[]) lines_y#0 ← { (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10 }
  (byte) lines_cnt#0 ← (byte/signed byte/word/signed word) 8
  to:@10
main: scope:[main]  from @10
  (byte[]) plot_yhi#44 ← phi( @10/(byte[]) plot_yhi#0 )
  (byte[]) plot_ylo#44 ← phi( @10/(byte[]) plot_ylo#0 )
  (byte) lines_cnt#5 ← phi( @10/(byte) lines_cnt#0 )
  (byte[]) lines_y#5 ← phi( @10/(byte[]) lines_y#0 )
  (byte[]) lines_x#5 ← phi( @10/(byte[]) lines_x#0 )
  (byte*) SCREEN#5 ← phi( @10/(byte*) SCREEN#0 )
  (byte[]) plot_bit#17 ← phi( @10/(byte[]) plot_bit#0 )
  (byte[]) plot_xhi#17 ← phi( @10/(byte[]) plot_xhi#0 )
  (byte[]) plot_xlo#17 ← phi( @10/(byte[]) plot_xlo#0 )
  (byte*) BITMAP#6 ← phi( @10/(byte*) BITMAP#0 )
  (byte*) D018#1 ← phi( @10/(byte*) D018#0 )
  (byte*) D011#1 ← phi( @10/(byte*) D011#0 )
  (byte) RSEL#1 ← phi( @10/(byte) RSEL#0 )
  (byte) DEN#1 ← phi( @10/(byte) DEN#0 )
  (byte) BMM#1 ← phi( @10/(byte) BMM#0 )
  (byte*) FGCOL#1 ← phi( @10/(byte*) FGCOL#0 )
  (byte*) BGCOL#1 ← phi( @10/(byte*) BGCOL#0 )
  *((byte*) BGCOL#1) ← (byte/signed byte/word/signed word) 0
  *((byte*) FGCOL#1) ← (byte/signed byte/word/signed word) 0
  (byte~) main::$0 ← (byte) BMM#1 | (byte) DEN#1
  (byte~) main::$1 ← (byte~) main::$0 | (byte) RSEL#1
  (byte~) main::$2 ← (byte~) main::$1 | (byte/signed byte/word/signed word) 3
  *((byte*) D011#1) ← (byte~) main::$2
  *((byte*) D018#1) ← (byte/signed byte/word/signed word) 24
  call init_screen param-assignment
  to:main::@3
main::@3: scope:[main]  from main
  call init_plot_tables param-assignment
  to:main::@4
main::@4: scope:[main]  from main::@3
  to:main::@1
main::@1: scope:[main]  from main::@4 main::@5
  (byte[]) plot_bit#47 ← phi( main::@4/(byte[]) plot_bit#17 )
  (byte[]) plot_ylo#51 ← phi( main::@4/(byte[]) plot_ylo#44 )
  (byte[]) plot_yhi#51 ← phi( main::@4/(byte[]) plot_yhi#44 )
  (byte[]) plot_xlo#47 ← phi( main::@4/(byte[]) plot_xlo#17 )
  (byte[]) plot_xhi#47 ← phi( main::@4/(byte[]) plot_xhi#17 )
  (byte) lines_cnt#4 ← phi( main::@4/(byte) lines_cnt#5 )
  (byte[]) lines_y#4 ← phi( main::@4/(byte[]) lines_y#5 )
  (byte[]) lines_x#4 ← phi( main::@4/(byte[]) lines_x#5 )
  call lines param-assignment
  to:main::@5
main::@5: scope:[main]  from main::@1
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@5
  return 
  to:@return
lines: scope:[lines]  from main::@1
  (byte[]) plot_bit#45 ← phi( main::@1/(byte[]) plot_bit#47 )
  (byte[]) plot_ylo#49 ← phi( main::@1/(byte[]) plot_ylo#51 )
  (byte[]) plot_yhi#49 ← phi( main::@1/(byte[]) plot_yhi#51 )
  (byte[]) plot_xlo#45 ← phi( main::@1/(byte[]) plot_xlo#47 )
  (byte[]) plot_xhi#45 ← phi( main::@1/(byte[]) plot_xhi#47 )
  (byte) lines_cnt#3 ← phi( main::@1/(byte) lines_cnt#4 )
  (byte[]) lines_y#2 ← phi( main::@1/(byte[]) lines_y#4 )
  (byte[]) lines_x#2 ← phi( main::@1/(byte[]) lines_x#4 )
  (byte) lines::l#0 ← (byte/signed byte/word/signed word) 0
  to:lines::@1
lines::@1: scope:[lines]  from lines lines::@3
  (byte[]) plot_bit#44 ← phi( lines/(byte[]) plot_bit#45 )
  (byte[]) plot_ylo#48 ← phi( lines/(byte[]) plot_ylo#49 )
  (byte[]) plot_yhi#48 ← phi( lines/(byte[]) plot_yhi#49 )
  (byte[]) plot_xlo#44 ← phi( lines/(byte[]) plot_xlo#45 )
  (byte[]) plot_xhi#44 ← phi( lines/(byte[]) plot_xhi#45 )
  (byte) lines_cnt#1 ← phi( lines/(byte) lines_cnt#3 )
  (byte[]) lines_y#1 ← phi( lines/(byte[]) lines_y#2 )
  (byte) lines::l#2 ← phi( lines/(byte) lines::l#0 lines::@3/(byte) lines::l#1 )
  (byte[]) lines_x#1 ← phi( lines/(byte[]) lines_x#2 )
  (byte~) lines::$0 ← (byte[]) lines_x#1 *idx (byte) lines::l#2
  (byte~) lines::$1 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$2 ← (byte[]) lines_x#1 *idx (byte~) lines::$1
  (byte~) lines::$3 ← (byte[]) lines_y#1 *idx (byte) lines::l#2
  (byte~) lines::$4 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$5 ← (byte[]) lines_y#1 *idx (byte~) lines::$4
  (byte) line::x0#0 ← (byte~) lines::$0
  (byte) line::x1#0 ← (byte~) lines::$2
  (byte) line::y0#0 ← (byte~) lines::$3
  (byte) line::y1#0 ← (byte~) lines::$5
  call line param-assignment
  to:lines::@3
lines::@3: scope:[lines]  from lines::@1
  (byte) lines::l#1 ← ++ (byte) lines::l#2
  (boolean~) lines::$7 ← (byte) lines::l#1 < (byte) lines_cnt#1
  if((boolean~) lines::$7) goto lines::@1
  to:lines::@return
lines::@return: scope:[lines]  from lines::@3
  return 
  to:@return
line: scope:[line]  from lines::@1
  (byte[]) plot_bit#20 ← phi( lines::@1/(byte[]) plot_bit#44 )
  (byte[]) plot_ylo#19 ← phi( lines::@1/(byte[]) plot_ylo#48 )
  (byte[]) plot_yhi#19 ← phi( lines::@1/(byte[]) plot_yhi#48 )
  (byte[]) plot_xlo#20 ← phi( lines::@1/(byte[]) plot_xlo#44 )
  (byte[]) plot_xhi#20 ← phi( lines::@1/(byte[]) plot_xhi#44 )
  (byte) line::y1#1 ← phi( lines::@1/(byte) line::y1#0 )
  (byte) line::y0#1 ← phi( lines::@1/(byte) line::y0#0 )
  (byte) line::x1#1 ← phi( lines::@1/(byte) line::x1#0 )
  (byte) line::x0#1 ← phi( lines::@1/(byte) line::x0#0 )
  (boolean~) line::$1 ← (byte) line::x0#1 >= (byte) line::x1#1
  if((boolean~) line::$1) goto line::@1
  to:line::@15
line::@1: scope:[line]  from line
  (byte) line::xd#0 ← (byte) line::x0#1 - (byte) line::x1#1
  (boolean~) line::$17 ← (byte) line::y0#1 >= (byte) line::y1#1
  if((boolean~) line::$17) goto line::@9
  to:line::@23
line::@15: scope:[line]  from line
  (byte) line::xd#1 ← (byte) line::x1#1 - (byte) line::x0#1
  (boolean~) line::$4 ← (byte) line::y0#1 >= (byte) line::y1#1
  if((boolean~) line::$4) goto line::@2
  to:line::@16
line::@2: scope:[line]  from line::@15
  (byte) line::yd#0 ← (byte) line::y0#1 - (byte) line::y1#1
  (boolean~) line::$12 ← (byte) line::yd#0 >= (byte) line::xd#1
  if((boolean~) line::$12) goto line::@6
  to:line::@20
line::@16: scope:[line]  from line::@15
  (byte) line::yd#1 ← (byte) line::y1#1 - (byte) line::y0#1
  (boolean~) line::$7 ← (byte) line::yd#1 >= (byte) line::xd#1
  if((boolean~) line::$7) goto line::@3
  to:line::@17
line::@3: scope:[line]  from line::@16
  (byte) line_ydxi::y#0 ← (byte) line::y0#1
  (byte) line_ydxi::x#0 ← (byte) line::x0#1
  (byte) line_ydxi::y1#0 ← (byte) line::y1#1
  (byte) line_ydxi::yd#0 ← (byte) line::yd#1
  (byte) line_ydxi::xd#0 ← (byte) line::xd#1
  call line_ydxi param-assignment
  to:line::@return
line::@17: scope:[line]  from line::@16
  (byte) line_xdyi::x#0 ← (byte) line::x0#1
  (byte) line_xdyi::y#0 ← (byte) line::y0#1
  (byte) line_xdyi::x1#0 ← (byte) line::x1#1
  (byte) line_xdyi::xd#0 ← (byte) line::xd#1
  (byte) line_xdyi::yd#0 ← (byte) line::yd#1
  call line_xdyi param-assignment
  to:line::@return
line::@6: scope:[line]  from line::@2
  (byte) line_ydxd::y#0 ← (byte) line::y1#1
  (byte) line_ydxd::x#0 ← (byte) line::x1#1
  (byte) line_ydxd::y1#0 ← (byte) line::y0#1
  (byte) line_ydxd::yd#0 ← (byte) line::yd#0
  (byte) line_ydxd::xd#0 ← (byte) line::xd#1
  call line_ydxd param-assignment
  to:line::@return
line::@20: scope:[line]  from line::@2
  (byte) line_xdyd::x#0 ← (byte) line::x0#1
  (byte) line_xdyd::y#0 ← (byte) line::y0#1
  (byte) line_xdyd::x1#0 ← (byte) line::x1#1
  (byte) line_xdyd::xd#0 ← (byte) line::xd#1
  (byte) line_xdyd::yd#0 ← (byte) line::yd#0
  call line_xdyd param-assignment
  to:line::@return
line::@9: scope:[line]  from line::@1
  (byte) line::yd#10 ← (byte) line::y0#1 - (byte) line::y1#1
  (boolean~) line::$25 ← (byte) line::yd#10 >= (byte) line::xd#0
  if((boolean~) line::$25) goto line::@13
  to:line::@27
line::@23: scope:[line]  from line::@1
  (byte) line::yd#3 ← (byte) line::y1#1 - (byte) line::y0#1
  (boolean~) line::$20 ← (byte) line::yd#3 >= (byte) line::xd#0
  if((boolean~) line::$20) goto line::@10
  to:line::@24
line::@10: scope:[line]  from line::@23
  (byte) line_ydxd::y#1 ← (byte) line::y0#1
  (byte) line_ydxd::x#1 ← (byte) line::x0#1
  (byte) line_ydxd::y1#1 ← (byte) line::y1#1
  (byte) line_ydxd::yd#1 ← (byte) line::yd#3
  (byte) line_ydxd::xd#1 ← (byte) line::xd#0
  call line_ydxd param-assignment
  to:line::@return
line::@24: scope:[line]  from line::@23
  (byte) line_xdyd::x#1 ← (byte) line::x1#1
  (byte) line_xdyd::y#1 ← (byte) line::y1#1
  (byte) line_xdyd::x1#1 ← (byte) line::x0#1
  (byte) line_xdyd::xd#1 ← (byte) line::xd#0
  (byte) line_xdyd::yd#1 ← (byte) line::yd#3
  call line_xdyd param-assignment
  to:line::@return
line::@13: scope:[line]  from line::@9
  (byte) line_ydxi::y#1 ← (byte) line::y1#1
  (byte) line_ydxi::x#1 ← (byte) line::x1#1
  (byte) line_ydxi::y1#1 ← (byte) line::y0#1
  (byte) line_ydxi::yd#1 ← (byte) line::yd#10
  (byte) line_ydxi::xd#1 ← (byte) line::xd#0
  call line_ydxi param-assignment
  to:line::@return
line::@27: scope:[line]  from line::@9
  (byte) line_xdyi::x#1 ← (byte) line::x1#1
  (byte) line_xdyi::y#1 ← (byte) line::y1#1
  (byte) line_xdyi::x1#1 ← (byte) line::x0#1
  (byte) line_xdyi::xd#1 ← (byte) line::xd#0
  (byte) line_xdyi::yd#1 ← (byte) line::yd#10
  call line_xdyi param-assignment
  to:line::@return
line::@return: scope:[line]  from line::@10 line::@13 line::@17 line::@20 line::@24 line::@27 line::@3 line::@6
  return 
  to:@return
line_xdyi: scope:[line_xdyi]  from line::@17 line::@27
  (byte) line_xdyi::x1#6 ← phi( line::@17/(byte) line_xdyi::x1#0 line::@27/(byte) line_xdyi::x1#1 )
  (byte[]) plot_bit#9 ← phi( line::@17/(byte[]) plot_bit#20 line::@27/(byte[]) plot_bit#20 )
  (byte[]) plot_ylo#9 ← phi( line::@17/(byte[]) plot_ylo#19 line::@27/(byte[]) plot_ylo#19 )
  (byte[]) plot_yhi#9 ← phi( line::@17/(byte[]) plot_yhi#19 line::@27/(byte[]) plot_yhi#19 )
  (byte[]) plot_xlo#9 ← phi( line::@17/(byte[]) plot_xlo#20 line::@27/(byte[]) plot_xlo#20 )
  (byte[]) plot_xhi#9 ← phi( line::@17/(byte[]) plot_xhi#20 line::@27/(byte[]) plot_xhi#20 )
  (byte) line_xdyi::xd#5 ← phi( line::@17/(byte) line_xdyi::xd#0 line::@27/(byte) line_xdyi::xd#1 )
  (byte) line_xdyi::y#5 ← phi( line::@17/(byte) line_xdyi::y#0 line::@27/(byte) line_xdyi::y#1 )
  (byte) line_xdyi::x#6 ← phi( line::@17/(byte) line_xdyi::x#0 line::@27/(byte) line_xdyi::x#1 )
  (byte) line_xdyi::yd#2 ← phi( line::@17/(byte) line_xdyi::yd#0 line::@27/(byte) line_xdyi::yd#1 )
  (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyi::@1
line_xdyi::@1: scope:[line_xdyi]  from line_xdyi line_xdyi::@2
  (byte) line_xdyi::x1#2 ← phi( line_xdyi/(byte) line_xdyi::x1#6 )
  (byte[]) plot_bit#10 ← phi( line_xdyi/(byte[]) plot_bit#9 )
  (byte[]) plot_ylo#10 ← phi( line_xdyi/(byte[]) plot_ylo#9 )
  (byte[]) plot_yhi#10 ← phi( line_xdyi/(byte[]) plot_yhi#9 )
  (byte[]) plot_xlo#10 ← phi( line_xdyi/(byte[]) plot_xlo#9 )
  (byte[]) plot_xhi#10 ← phi( line_xdyi/(byte[]) plot_xhi#9 )
  (byte) line_xdyi::xd#2 ← phi( line_xdyi/(byte) line_xdyi::xd#5 )
  (byte) line_xdyi::yd#3 ← phi( line_xdyi/(byte) line_xdyi::yd#2 )
  (byte) line_xdyi::e#3 ← phi( line_xdyi/(byte) line_xdyi::e#0 line_xdyi::@2/(byte) line_xdyi::e#6 )
  (byte) line_xdyi::y#3 ← phi( line_xdyi/(byte) line_xdyi::y#5 line_xdyi::@2/(byte) line_xdyi::y#6 )
  (byte) line_xdyi::x#3 ← phi( line_xdyi/(byte) line_xdyi::x#6 line_xdyi::@2/(byte) line_xdyi::x#2 )
  (byte) plot::x#0 ← (byte) line_xdyi::x#3
  (byte) plot::y#0 ← (byte) line_xdyi::y#3
  call plot param-assignment
  to:line_xdyi::@5
line_xdyi::@5: scope:[line_xdyi]  from line_xdyi::@1
  (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#3
  (boolean~) line_xdyi::$5 ← (byte) line_xdyi::xd#2 >= (byte) line_xdyi::e#1
  if((boolean~) line_xdyi::$5) goto line_xdyi::@2
  to:line_xdyi::@3
line_xdyi::@2: scope:[line_xdyi]  from line_xdyi::@3 line_xdyi::@5
  (byte) line_xdyi::e#6 ← phi( line_xdyi::@3/(byte) line_xdyi::e#2 line_xdyi::@5/(byte) line_xdyi::e#1 )
  (byte) line_xdyi::y#6 ← phi( line_xdyi::@3/(byte) line_xdyi::y#2 line_xdyi::@5/(byte) line_xdyi::y#3 )
  (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyi::$9 ← (byte) line_xdyi::x#2 < (byte~) line_xdyi::$8
  if((boolean~) line_xdyi::$9) goto line_xdyi::@1
  to:line_xdyi::@return
line_xdyi::@3: scope:[line_xdyi]  from line_xdyi::@5
  (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#2
  to:line_xdyi::@2
line_xdyi::@return: scope:[line_xdyi]  from line_xdyi::@2
  return 
  to:@return
line_xdyd: scope:[line_xdyd]  from line::@20 line::@24
  (byte) line_xdyd::x1#6 ← phi( line::@20/(byte) line_xdyd::x1#0 line::@24/(byte) line_xdyd::x1#1 )
  (byte[]) plot_bit#11 ← phi( line::@20/(byte[]) plot_bit#20 line::@24/(byte[]) plot_bit#20 )
  (byte[]) plot_ylo#11 ← phi( line::@20/(byte[]) plot_ylo#19 line::@24/(byte[]) plot_ylo#19 )
  (byte[]) plot_yhi#11 ← phi( line::@20/(byte[]) plot_yhi#19 line::@24/(byte[]) plot_yhi#19 )
  (byte[]) plot_xlo#11 ← phi( line::@20/(byte[]) plot_xlo#20 line::@24/(byte[]) plot_xlo#20 )
  (byte[]) plot_xhi#11 ← phi( line::@20/(byte[]) plot_xhi#20 line::@24/(byte[]) plot_xhi#20 )
  (byte) line_xdyd::xd#5 ← phi( line::@20/(byte) line_xdyd::xd#0 line::@24/(byte) line_xdyd::xd#1 )
  (byte) line_xdyd::y#5 ← phi( line::@20/(byte) line_xdyd::y#0 line::@24/(byte) line_xdyd::y#1 )
  (byte) line_xdyd::x#6 ← phi( line::@20/(byte) line_xdyd::x#0 line::@24/(byte) line_xdyd::x#1 )
  (byte) line_xdyd::yd#2 ← phi( line::@20/(byte) line_xdyd::yd#0 line::@24/(byte) line_xdyd::yd#1 )
  (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyd::@1
line_xdyd::@1: scope:[line_xdyd]  from line_xdyd line_xdyd::@2
  (byte) line_xdyd::x1#2 ← phi( line_xdyd/(byte) line_xdyd::x1#6 )
  (byte[]) plot_bit#12 ← phi( line_xdyd/(byte[]) plot_bit#11 )
  (byte[]) plot_ylo#12 ← phi( line_xdyd/(byte[]) plot_ylo#11 )
  (byte[]) plot_yhi#12 ← phi( line_xdyd/(byte[]) plot_yhi#11 )
  (byte[]) plot_xlo#12 ← phi( line_xdyd/(byte[]) plot_xlo#11 )
  (byte[]) plot_xhi#12 ← phi( line_xdyd/(byte[]) plot_xhi#11 )
  (byte) line_xdyd::xd#2 ← phi( line_xdyd/(byte) line_xdyd::xd#5 )
  (byte) line_xdyd::yd#3 ← phi( line_xdyd/(byte) line_xdyd::yd#2 )
  (byte) line_xdyd::e#3 ← phi( line_xdyd/(byte) line_xdyd::e#0 line_xdyd::@2/(byte) line_xdyd::e#6 )
  (byte) line_xdyd::y#3 ← phi( line_xdyd/(byte) line_xdyd::y#5 line_xdyd::@2/(byte) line_xdyd::y#6 )
  (byte) line_xdyd::x#3 ← phi( line_xdyd/(byte) line_xdyd::x#6 line_xdyd::@2/(byte) line_xdyd::x#2 )
  (byte) plot::x#1 ← (byte) line_xdyd::x#3
  (byte) plot::y#1 ← (byte) line_xdyd::y#3
  call plot param-assignment
  to:line_xdyd::@5
line_xdyd::@5: scope:[line_xdyd]  from line_xdyd::@1
  (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#3
  (boolean~) line_xdyd::$5 ← (byte) line_xdyd::xd#2 >= (byte) line_xdyd::e#1
  if((boolean~) line_xdyd::$5) goto line_xdyd::@2
  to:line_xdyd::@3
line_xdyd::@2: scope:[line_xdyd]  from line_xdyd::@3 line_xdyd::@5
  (byte) line_xdyd::e#6 ← phi( line_xdyd::@3/(byte) line_xdyd::e#2 line_xdyd::@5/(byte) line_xdyd::e#1 )
  (byte) line_xdyd::y#6 ← phi( line_xdyd::@3/(byte) line_xdyd::y#2 line_xdyd::@5/(byte) line_xdyd::y#3 )
  (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyd::$9 ← (byte) line_xdyd::x#2 < (byte~) line_xdyd::$8
  if((boolean~) line_xdyd::$9) goto line_xdyd::@1
  to:line_xdyd::@return
line_xdyd::@3: scope:[line_xdyd]  from line_xdyd::@5
  (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#2
  to:line_xdyd::@2
line_xdyd::@return: scope:[line_xdyd]  from line_xdyd::@2
  return 
  to:@return
line_ydxi: scope:[line_ydxi]  from line::@13 line::@3
  (byte) line_ydxi::y1#6 ← phi( line::@13/(byte) line_ydxi::y1#1 line::@3/(byte) line_ydxi::y1#0 )
  (byte[]) plot_bit#13 ← phi( line::@13/(byte[]) plot_bit#20 line::@3/(byte[]) plot_bit#20 )
  (byte[]) plot_ylo#13 ← phi( line::@13/(byte[]) plot_ylo#19 line::@3/(byte[]) plot_ylo#19 )
  (byte[]) plot_yhi#13 ← phi( line::@13/(byte[]) plot_yhi#19 line::@3/(byte[]) plot_yhi#19 )
  (byte[]) plot_xlo#13 ← phi( line::@13/(byte[]) plot_xlo#20 line::@3/(byte[]) plot_xlo#20 )
  (byte[]) plot_xhi#13 ← phi( line::@13/(byte[]) plot_xhi#20 line::@3/(byte[]) plot_xhi#20 )
  (byte) line_ydxi::yd#5 ← phi( line::@13/(byte) line_ydxi::yd#1 line::@3/(byte) line_ydxi::yd#0 )
  (byte) line_ydxi::y#6 ← phi( line::@13/(byte) line_ydxi::y#1 line::@3/(byte) line_ydxi::y#0 )
  (byte) line_ydxi::x#5 ← phi( line::@13/(byte) line_ydxi::x#1 line::@3/(byte) line_ydxi::x#0 )
  (byte) line_ydxi::xd#2 ← phi( line::@13/(byte) line_ydxi::xd#1 line::@3/(byte) line_ydxi::xd#0 )
  (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxi::@1
line_ydxi::@1: scope:[line_ydxi]  from line_ydxi line_ydxi::@2
  (byte) line_ydxi::y1#2 ← phi( line_ydxi/(byte) line_ydxi::y1#6 )
  (byte[]) plot_bit#14 ← phi( line_ydxi/(byte[]) plot_bit#13 )
  (byte[]) plot_ylo#14 ← phi( line_ydxi/(byte[]) plot_ylo#13 )
  (byte[]) plot_yhi#14 ← phi( line_ydxi/(byte[]) plot_yhi#13 )
  (byte[]) plot_xlo#14 ← phi( line_ydxi/(byte[]) plot_xlo#13 )
  (byte[]) plot_xhi#14 ← phi( line_ydxi/(byte[]) plot_xhi#13 )
  (byte) line_ydxi::yd#2 ← phi( line_ydxi/(byte) line_ydxi::yd#5 )
  (byte) line_ydxi::xd#3 ← phi( line_ydxi/(byte) line_ydxi::xd#2 )
  (byte) line_ydxi::e#3 ← phi( line_ydxi/(byte) line_ydxi::e#0 line_ydxi::@2/(byte) line_ydxi::e#6 )
  (byte) line_ydxi::y#3 ← phi( line_ydxi/(byte) line_ydxi::y#6 line_ydxi::@2/(byte) line_ydxi::y#2 )
  (byte) line_ydxi::x#3 ← phi( line_ydxi/(byte) line_ydxi::x#5 line_ydxi::@2/(byte) line_ydxi::x#6 )
  (byte) plot::x#2 ← (byte) line_ydxi::x#3
  (byte) plot::y#2 ← (byte) line_ydxi::y#3
  call plot param-assignment
  to:line_ydxi::@5
line_ydxi::@5: scope:[line_ydxi]  from line_ydxi::@1
  (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#3
  (boolean~) line_ydxi::$5 ← (byte) line_ydxi::yd#2 >= (byte) line_ydxi::e#1
  if((boolean~) line_ydxi::$5) goto line_ydxi::@2
  to:line_ydxi::@3
line_ydxi::@2: scope:[line_ydxi]  from line_ydxi::@3 line_ydxi::@5
  (byte) line_ydxi::e#6 ← phi( line_ydxi::@3/(byte) line_ydxi::e#2 line_ydxi::@5/(byte) line_ydxi::e#1 )
  (byte) line_ydxi::x#6 ← phi( line_ydxi::@3/(byte) line_ydxi::x#2 line_ydxi::@5/(byte) line_ydxi::x#3 )
  (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxi::$9 ← (byte) line_ydxi::y#2 < (byte~) line_ydxi::$8
  if((boolean~) line_ydxi::$9) goto line_ydxi::@1
  to:line_ydxi::@return
line_ydxi::@3: scope:[line_ydxi]  from line_ydxi::@5
  (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#2
  to:line_ydxi::@2
line_ydxi::@return: scope:[line_ydxi]  from line_ydxi::@2
  return 
  to:@return
line_ydxd: scope:[line_ydxd]  from line::@10 line::@6
  (byte) line_ydxd::y1#6 ← phi( line::@10/(byte) line_ydxd::y1#1 line::@6/(byte) line_ydxd::y1#0 )
  (byte[]) plot_bit#15 ← phi( line::@10/(byte[]) plot_bit#20 line::@6/(byte[]) plot_bit#20 )
  (byte[]) plot_ylo#15 ← phi( line::@10/(byte[]) plot_ylo#19 line::@6/(byte[]) plot_ylo#19 )
  (byte[]) plot_yhi#15 ← phi( line::@10/(byte[]) plot_yhi#19 line::@6/(byte[]) plot_yhi#19 )
  (byte[]) plot_xlo#15 ← phi( line::@10/(byte[]) plot_xlo#20 line::@6/(byte[]) plot_xlo#20 )
  (byte[]) plot_xhi#15 ← phi( line::@10/(byte[]) plot_xhi#20 line::@6/(byte[]) plot_xhi#20 )
  (byte) line_ydxd::yd#5 ← phi( line::@10/(byte) line_ydxd::yd#1 line::@6/(byte) line_ydxd::yd#0 )
  (byte) line_ydxd::y#6 ← phi( line::@10/(byte) line_ydxd::y#1 line::@6/(byte) line_ydxd::y#0 )
  (byte) line_ydxd::x#5 ← phi( line::@10/(byte) line_ydxd::x#1 line::@6/(byte) line_ydxd::x#0 )
  (byte) line_ydxd::xd#2 ← phi( line::@10/(byte) line_ydxd::xd#1 line::@6/(byte) line_ydxd::xd#0 )
  (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxd::@1
line_ydxd::@1: scope:[line_ydxd]  from line_ydxd line_ydxd::@2
  (byte) line_ydxd::y1#2 ← phi( line_ydxd/(byte) line_ydxd::y1#6 )
  (byte[]) plot_bit#16 ← phi( line_ydxd/(byte[]) plot_bit#15 )
  (byte[]) plot_ylo#16 ← phi( line_ydxd/(byte[]) plot_ylo#15 )
  (byte[]) plot_yhi#16 ← phi( line_ydxd/(byte[]) plot_yhi#15 )
  (byte[]) plot_xlo#16 ← phi( line_ydxd/(byte[]) plot_xlo#15 )
  (byte[]) plot_xhi#16 ← phi( line_ydxd/(byte[]) plot_xhi#15 )
  (byte) line_ydxd::yd#2 ← phi( line_ydxd/(byte) line_ydxd::yd#5 )
  (byte) line_ydxd::xd#3 ← phi( line_ydxd/(byte) line_ydxd::xd#2 )
  (byte) line_ydxd::e#3 ← phi( line_ydxd/(byte) line_ydxd::e#0 line_ydxd::@2/(byte) line_ydxd::e#6 )
  (byte) line_ydxd::y#3 ← phi( line_ydxd/(byte) line_ydxd::y#6 line_ydxd::@2/(byte) line_ydxd::y#2 )
  (byte) line_ydxd::x#3 ← phi( line_ydxd/(byte) line_ydxd::x#5 line_ydxd::@2/(byte) line_ydxd::x#6 )
  (byte) plot::x#3 ← (byte) line_ydxd::x#3
  (byte) plot::y#3 ← (byte) line_ydxd::y#3
  call plot param-assignment
  to:line_ydxd::@5
line_ydxd::@5: scope:[line_ydxd]  from line_ydxd::@1
  (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#3
  (boolean~) line_ydxd::$5 ← (byte) line_ydxd::yd#2 >= (byte) line_ydxd::e#1
  if((boolean~) line_ydxd::$5) goto line_ydxd::@2
  to:line_ydxd::@3
line_ydxd::@2: scope:[line_ydxd]  from line_ydxd::@3 line_ydxd::@5
  (byte) line_ydxd::e#6 ← phi( line_ydxd::@3/(byte) line_ydxd::e#2 line_ydxd::@5/(byte) line_ydxd::e#1 )
  (byte) line_ydxd::x#6 ← phi( line_ydxd::@3/(byte) line_ydxd::x#2 line_ydxd::@5/(byte) line_ydxd::x#3 )
  (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#2 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxd::$9 ← (byte) line_ydxd::y#2 < (byte~) line_ydxd::$8
  if((boolean~) line_ydxd::$9) goto line_ydxd::@1
  to:line_ydxd::@return
line_ydxd::@3: scope:[line_ydxd]  from line_ydxd::@5
  (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#2
  to:line_ydxd::@2
line_ydxd::@return: scope:[line_ydxd]  from line_ydxd::@2
  return 
  to:@return
plot: scope:[plot]  from line_xdyd::@1 line_xdyi::@1 line_ydxd::@1 line_ydxi::@1
  (byte[]) plot_bit#1 ← phi( line_xdyd::@1/(byte[]) plot_bit#12 line_xdyi::@1/(byte[]) plot_bit#10 line_ydxd::@1/(byte[]) plot_bit#16 line_ydxi::@1/(byte[]) plot_bit#14 )
  (byte[]) plot_ylo#1 ← phi( line_xdyd::@1/(byte[]) plot_ylo#12 line_xdyi::@1/(byte[]) plot_ylo#10 line_ydxd::@1/(byte[]) plot_ylo#16 line_ydxi::@1/(byte[]) plot_ylo#14 )
  (byte) plot::y#4 ← phi( line_xdyd::@1/(byte) plot::y#1 line_xdyi::@1/(byte) plot::y#0 line_ydxd::@1/(byte) plot::y#3 line_ydxi::@1/(byte) plot::y#2 )
  (byte[]) plot_yhi#1 ← phi( line_xdyd::@1/(byte[]) plot_yhi#12 line_xdyi::@1/(byte[]) plot_yhi#10 line_ydxd::@1/(byte[]) plot_yhi#16 line_ydxi::@1/(byte[]) plot_yhi#14 )
  (byte[]) plot_xlo#1 ← phi( line_xdyd::@1/(byte[]) plot_xlo#12 line_xdyi::@1/(byte[]) plot_xlo#10 line_ydxd::@1/(byte[]) plot_xlo#16 line_ydxi::@1/(byte[]) plot_xlo#14 )
  (byte) plot::x#4 ← phi( line_xdyd::@1/(byte) plot::x#1 line_xdyi::@1/(byte) plot::x#0 line_ydxd::@1/(byte) plot::x#3 line_ydxi::@1/(byte) plot::x#2 )
  (byte[]) plot_xhi#1 ← phi( line_xdyd::@1/(byte[]) plot_xhi#12 line_xdyi::@1/(byte[]) plot_xhi#10 line_ydxd::@1/(byte[]) plot_xhi#16 line_ydxi::@1/(byte[]) plot_xhi#14 )
  (byte*) plot::plotter_x#0 ← ((byte*)) (byte/signed byte/word/signed word) 0
  (word) plot::plotter_y#0 ← (byte/signed byte/word/signed word) 0
  (byte~) plot::$0 ← (byte[]) plot_xhi#1 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#1 ← (byte*) plot::plotter_x#0 hi= (byte~) plot::$0
  (byte~) plot::$1 ← (byte[]) plot_xlo#1 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1
  (byte~) plot::$2 ← (byte[]) plot_yhi#1 *idx (byte) plot::y#4
  (word) plot::plotter_y#1 ← (word) plot::plotter_y#0 hi= (byte~) plot::$2
  (byte~) plot::$3 ← (byte[]) plot_ylo#1 *idx (byte) plot::y#4
  (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3
  (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2
  (byte~) plot::$5 ← (byte[]) plot_bit#1 *idx (byte) plot::x#4
  (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5
  *((byte*) plot::plotter#0) ← (byte~) plot::$6
  to:plot::@return
plot::@return: scope:[plot]  from plot
  return 
  to:@return
init_plot_tables: scope:[init_plot_tables]  from main::@3
  (byte[]) plot_yhi#41 ← phi( main::@3/(byte[]) plot_yhi#44 )
  (byte[]) plot_ylo#41 ← phi( main::@3/(byte[]) plot_ylo#44 )
  (byte[]) plot_bit#7 ← phi( main::@3/(byte[]) plot_bit#17 )
  (byte[]) plot_xhi#7 ← phi( main::@3/(byte[]) plot_xhi#17 )
  (byte*) BITMAP#4 ← phi( main::@3/(byte*) BITMAP#6 )
  (byte[]) plot_xlo#7 ← phi( main::@3/(byte[]) plot_xlo#17 )
  (byte) init_plot_tables::bits#0 ← (byte/word/signed word) 128
  (byte) init_plot_tables::x#0 ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@1
init_plot_tables::@1: scope:[init_plot_tables]  from init_plot_tables init_plot_tables::@2
  (byte[]) plot_yhi#17 ← phi( init_plot_tables/(byte[]) plot_yhi#41 )
  (byte[]) plot_ylo#17 ← phi( init_plot_tables/(byte[]) plot_ylo#41 )
  (byte[]) plot_bit#18 ← phi( init_plot_tables/(byte[]) plot_bit#7 )
  (byte) init_plot_tables::bits#3 ← phi( init_plot_tables/(byte) init_plot_tables::bits#0 init_plot_tables::@2/(byte) init_plot_tables::bits#4 )
  (byte[]) plot_xhi#18 ← phi( init_plot_tables/(byte[]) plot_xhi#7 )
  (byte*) BITMAP#1 ← phi( init_plot_tables/(byte*) BITMAP#4 )
  (byte[]) plot_xlo#18 ← phi( init_plot_tables/(byte[]) plot_xlo#7 )
  (byte) init_plot_tables::x#2 ← phi( init_plot_tables/(byte) init_plot_tables::x#0 init_plot_tables::@2/(byte) init_plot_tables::x#1 )
  (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248
  *((byte[]) plot_xlo#18 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0
  (byte~) init_plot_tables::$1 ← > (byte*) BITMAP#1
  *((byte[]) plot_xhi#18 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$1
  *((byte[]) plot_bit#18 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3
  (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1
  (boolean~) init_plot_tables::$4 ← (byte) init_plot_tables::bits#1 != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$4) goto init_plot_tables::@2
  to:init_plot_tables::@5
init_plot_tables::@2: scope:[init_plot_tables]  from init_plot_tables::@1 init_plot_tables::@5
  (byte) init_plot_tables::bits#4 ← phi( init_plot_tables::@1/(byte) init_plot_tables::bits#1 init_plot_tables::@5/(byte) init_plot_tables::bits#2 )
  (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2
  (boolean~) init_plot_tables::$5 ← (byte) init_plot_tables::x#1 != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$5) goto init_plot_tables::@1
  to:init_plot_tables::@6
init_plot_tables::@5: scope:[init_plot_tables]  from init_plot_tables::@1
  (byte) init_plot_tables::bits#2 ← (byte/word/signed word) 128
  to:init_plot_tables::@2
init_plot_tables::@6: scope:[init_plot_tables]  from init_plot_tables::@2
  (byte*) init_plot_tables::yoffs#0 ← ((byte*)) (byte/signed byte/word/signed word) 0
  (byte) init_plot_tables::y#0 ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@3
init_plot_tables::@3: scope:[init_plot_tables]  from init_plot_tables::@4 init_plot_tables::@6
  (byte[]) plot_yhi#18 ← phi( init_plot_tables::@6/(byte[]) plot_yhi#17 )
  (byte[]) plot_ylo#18 ← phi( init_plot_tables::@6/(byte[]) plot_ylo#17 )
  (byte*) init_plot_tables::yoffs#2 ← phi( init_plot_tables::@4/(byte*) init_plot_tables::yoffs#4 init_plot_tables::@6/(byte*) init_plot_tables::yoffs#0 )
  (byte) init_plot_tables::y#2 ← phi( init_plot_tables::@4/(byte) init_plot_tables::y#1 init_plot_tables::@6/(byte) init_plot_tables::y#0 )
  (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2
  (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7
  *((byte[]) plot_ylo#18 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8
  (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2
  *((byte[]) plot_yhi#18 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9
  (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (boolean~) init_plot_tables::$12 ← (byte~) init_plot_tables::$10 != (byte/signed byte/word/signed word) 7
  if((boolean~) init_plot_tables::$12) goto init_plot_tables::@4
  to:init_plot_tables::@7
init_plot_tables::@4: scope:[init_plot_tables]  from init_plot_tables::@3 init_plot_tables::@7
  (byte*) init_plot_tables::yoffs#4 ← phi( init_plot_tables::@3/(byte*) init_plot_tables::yoffs#2 init_plot_tables::@7/(byte*) init_plot_tables::yoffs#1 )
  (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2
  (boolean~) init_plot_tables::$14 ← (byte) init_plot_tables::y#1 != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$14) goto init_plot_tables::@3
  to:init_plot_tables::@return
init_plot_tables::@7: scope:[init_plot_tables]  from init_plot_tables::@3
  (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320
  to:init_plot_tables::@4
init_plot_tables::@return: scope:[init_plot_tables]  from init_plot_tables::@4
  return 
  to:@return
init_screen: scope:[init_screen]  from main
  (byte*) SCREEN#4 ← phi( main/(byte*) SCREEN#5 )
  (byte*) BITMAP#2 ← phi( main/(byte*) BITMAP#6 )
  (byte*) init_screen::b#0 ← (byte*) BITMAP#2
  to:init_screen::@1
init_screen::@1: scope:[init_screen]  from init_screen init_screen::@1
  (byte*) SCREEN#1 ← phi( init_screen/(byte*) SCREEN#4 )
  (byte*) BITMAP#3 ← phi( init_screen/(byte*) BITMAP#2 )
  (byte*) init_screen::b#2 ← phi( init_screen/(byte*) init_screen::b#0 init_screen::@1/(byte*) init_screen::b#1 )
  *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0
  (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2
  (byte*~) init_screen::$0 ← (byte*) BITMAP#3 + (word/signed word) 8192
  (boolean~) init_screen::$1 ← (byte*) init_screen::b#1 != (byte*~) init_screen::$0
  if((boolean~) init_screen::$1) goto init_screen::@1
  to:init_screen::@3
init_screen::@3: scope:[init_screen]  from init_screen::@1
  (byte*) init_screen::c#0 ← (byte*) SCREEN#1
  to:init_screen::@2
init_screen::@2: scope:[init_screen]  from init_screen::@2 init_screen::@3
  (byte*) SCREEN#2 ← phi( init_screen::@3/(byte*) SCREEN#1 )
  (byte*) init_screen::c#2 ← phi( init_screen::@2/(byte*) init_screen::c#1 init_screen::@3/(byte*) init_screen::c#0 )
  *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20
  (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2
  (byte*~) init_screen::$2 ← (byte*) SCREEN#2 + (word/signed word) 1024
  (boolean~) init_screen::$3 ← (byte*) init_screen::c#1 != (byte*~) init_screen::$2
  if((boolean~) init_screen::$3) goto init_screen::@2
  to:init_screen::@return
init_screen::@return: scope:[init_screen]  from init_screen::@2
  return 
  to:@return
@10: scope:[]  from @begin
  call main param-assignment
  to:@end
@end: scope:[]  from @10

Redundant Phi (byte*) BGCOL#1 (byte*) BGCOL#0
Redundant Phi (byte*) FGCOL#1 (byte*) FGCOL#0
Redundant Phi (byte) BMM#1 (byte) BMM#0
Redundant Phi (byte) DEN#1 (byte) DEN#0
Redundant Phi (byte) RSEL#1 (byte) RSEL#0
Redundant Phi (byte*) D011#1 (byte*) D011#0
Redundant Phi (byte*) D018#1 (byte*) D018#0
Redundant Phi (byte*) BITMAP#6 (byte*) BITMAP#0
Redundant Phi (byte[]) plot_xlo#17 (byte[]) plot_xlo#0
Redundant Phi (byte[]) plot_xhi#17 (byte[]) plot_xhi#0
Redundant Phi (byte[]) plot_bit#17 (byte[]) plot_bit#0
Redundant Phi (byte*) SCREEN#5 (byte*) SCREEN#0
Redundant Phi (byte[]) lines_x#5 (byte[]) lines_x#0
Redundant Phi (byte[]) lines_y#5 (byte[]) lines_y#0
Redundant Phi (byte) lines_cnt#5 (byte) lines_cnt#0
Redundant Phi (byte[]) plot_ylo#44 (byte[]) plot_ylo#0
Redundant Phi (byte[]) plot_yhi#44 (byte[]) plot_yhi#0
Redundant Phi (byte[]) lines_x#4 (byte[]) lines_x#5
Redundant Phi (byte[]) lines_y#4 (byte[]) lines_y#5
Redundant Phi (byte) lines_cnt#4 (byte) lines_cnt#5
Redundant Phi (byte[]) plot_xhi#47 (byte[]) plot_xhi#17
Redundant Phi (byte[]) plot_xlo#47 (byte[]) plot_xlo#17
Redundant Phi (byte[]) plot_yhi#51 (byte[]) plot_yhi#44
Redundant Phi (byte[]) plot_ylo#51 (byte[]) plot_ylo#44
Redundant Phi (byte[]) plot_bit#47 (byte[]) plot_bit#17
Redundant Phi (byte[]) lines_x#2 (byte[]) lines_x#4
Redundant Phi (byte[]) lines_y#2 (byte[]) lines_y#4
Redundant Phi (byte) lines_cnt#3 (byte) lines_cnt#4
Redundant Phi (byte[]) plot_xhi#45 (byte[]) plot_xhi#47
Redundant Phi (byte[]) plot_xlo#45 (byte[]) plot_xlo#47
Redundant Phi (byte[]) plot_yhi#49 (byte[]) plot_yhi#51
Redundant Phi (byte[]) plot_ylo#49 (byte[]) plot_ylo#51
Redundant Phi (byte[]) plot_bit#45 (byte[]) plot_bit#47
Redundant Phi (byte[]) lines_x#1 (byte[]) lines_x#2
Redundant Phi (byte[]) lines_y#1 (byte[]) lines_y#2
Redundant Phi (byte) lines_cnt#1 (byte) lines_cnt#3
Redundant Phi (byte[]) plot_xhi#44 (byte[]) plot_xhi#45
Redundant Phi (byte[]) plot_xlo#44 (byte[]) plot_xlo#45
Redundant Phi (byte[]) plot_yhi#48 (byte[]) plot_yhi#49
Redundant Phi (byte[]) plot_ylo#48 (byte[]) plot_ylo#49
Redundant Phi (byte[]) plot_bit#44 (byte[]) plot_bit#45
Redundant Phi (byte) line::x0#1 (byte) line::x0#0
Redundant Phi (byte) line::x1#1 (byte) line::x1#0
Redundant Phi (byte) line::y0#1 (byte) line::y0#0
Redundant Phi (byte) line::y1#1 (byte) line::y1#0
Redundant Phi (byte[]) plot_xhi#20 (byte[]) plot_xhi#44
Redundant Phi (byte[]) plot_xlo#20 (byte[]) plot_xlo#44
Redundant Phi (byte[]) plot_yhi#19 (byte[]) plot_yhi#48
Redundant Phi (byte[]) plot_ylo#19 (byte[]) plot_ylo#48
Redundant Phi (byte[]) plot_bit#20 (byte[]) plot_bit#44
Redundant Phi (byte[]) plot_xhi#9 (byte[]) plot_xhi#20
Redundant Phi (byte[]) plot_xlo#9 (byte[]) plot_xlo#20
Redundant Phi (byte[]) plot_yhi#9 (byte[]) plot_yhi#19
Redundant Phi (byte[]) plot_ylo#9 (byte[]) plot_ylo#19
Redundant Phi (byte[]) plot_bit#9 (byte[]) plot_bit#20
Redundant Phi (byte) line_xdyi::yd#3 (byte) line_xdyi::yd#2
Redundant Phi (byte) line_xdyi::xd#2 (byte) line_xdyi::xd#5
Redundant Phi (byte[]) plot_xhi#10 (byte[]) plot_xhi#9
Redundant Phi (byte[]) plot_xlo#10 (byte[]) plot_xlo#9
Redundant Phi (byte[]) plot_yhi#10 (byte[]) plot_yhi#9
Redundant Phi (byte[]) plot_ylo#10 (byte[]) plot_ylo#9
Redundant Phi (byte[]) plot_bit#10 (byte[]) plot_bit#9
Redundant Phi (byte) line_xdyi::x1#2 (byte) line_xdyi::x1#6
Redundant Phi (byte[]) plot_xhi#11 (byte[]) plot_xhi#20
Redundant Phi (byte[]) plot_xlo#11 (byte[]) plot_xlo#20
Redundant Phi (byte[]) plot_yhi#11 (byte[]) plot_yhi#19
Redundant Phi (byte[]) plot_ylo#11 (byte[]) plot_ylo#19
Redundant Phi (byte[]) plot_bit#11 (byte[]) plot_bit#20
Redundant Phi (byte) line_xdyd::yd#3 (byte) line_xdyd::yd#2
Redundant Phi (byte) line_xdyd::xd#2 (byte) line_xdyd::xd#5
Redundant Phi (byte[]) plot_xhi#12 (byte[]) plot_xhi#11
Redundant Phi (byte[]) plot_xlo#12 (byte[]) plot_xlo#11
Redundant Phi (byte[]) plot_yhi#12 (byte[]) plot_yhi#11
Redundant Phi (byte[]) plot_ylo#12 (byte[]) plot_ylo#11
Redundant Phi (byte[]) plot_bit#12 (byte[]) plot_bit#11
Redundant Phi (byte) line_xdyd::x1#2 (byte) line_xdyd::x1#6
Redundant Phi (byte[]) plot_xhi#13 (byte[]) plot_xhi#20
Redundant Phi (byte[]) plot_xlo#13 (byte[]) plot_xlo#20
Redundant Phi (byte[]) plot_yhi#13 (byte[]) plot_yhi#19
Redundant Phi (byte[]) plot_ylo#13 (byte[]) plot_ylo#19
Redundant Phi (byte[]) plot_bit#13 (byte[]) plot_bit#20
Redundant Phi (byte) line_ydxi::xd#3 (byte) line_ydxi::xd#2
Redundant Phi (byte) line_ydxi::yd#2 (byte) line_ydxi::yd#5
Redundant Phi (byte[]) plot_xhi#14 (byte[]) plot_xhi#13
Redundant Phi (byte[]) plot_xlo#14 (byte[]) plot_xlo#13
Redundant Phi (byte[]) plot_yhi#14 (byte[]) plot_yhi#13
Redundant Phi (byte[]) plot_ylo#14 (byte[]) plot_ylo#13
Redundant Phi (byte[]) plot_bit#14 (byte[]) plot_bit#13
Redundant Phi (byte) line_ydxi::y1#2 (byte) line_ydxi::y1#6
Redundant Phi (byte[]) plot_xhi#15 (byte[]) plot_xhi#20
Redundant Phi (byte[]) plot_xlo#15 (byte[]) plot_xlo#20
Redundant Phi (byte[]) plot_yhi#15 (byte[]) plot_yhi#19
Redundant Phi (byte[]) plot_ylo#15 (byte[]) plot_ylo#19
Redundant Phi (byte[]) plot_bit#15 (byte[]) plot_bit#20
Redundant Phi (byte) line_ydxd::xd#3 (byte) line_ydxd::xd#2
Redundant Phi (byte) line_ydxd::yd#2 (byte) line_ydxd::yd#5
Redundant Phi (byte[]) plot_xhi#16 (byte[]) plot_xhi#15
Redundant Phi (byte[]) plot_xlo#16 (byte[]) plot_xlo#15
Redundant Phi (byte[]) plot_yhi#16 (byte[]) plot_yhi#15
Redundant Phi (byte[]) plot_ylo#16 (byte[]) plot_ylo#15
Redundant Phi (byte[]) plot_bit#16 (byte[]) plot_bit#15
Redundant Phi (byte) line_ydxd::y1#2 (byte) line_ydxd::y1#6
Redundant Phi (byte[]) plot_xlo#7 (byte[]) plot_xlo#17
Redundant Phi (byte*) BITMAP#4 (byte*) BITMAP#6
Redundant Phi (byte[]) plot_xhi#7 (byte[]) plot_xhi#17
Redundant Phi (byte[]) plot_bit#7 (byte[]) plot_bit#17
Redundant Phi (byte[]) plot_ylo#41 (byte[]) plot_ylo#44
Redundant Phi (byte[]) plot_yhi#41 (byte[]) plot_yhi#44
Redundant Phi (byte[]) plot_xlo#18 (byte[]) plot_xlo#7
Redundant Phi (byte*) BITMAP#1 (byte*) BITMAP#4
Redundant Phi (byte[]) plot_xhi#18 (byte[]) plot_xhi#7
Redundant Phi (byte[]) plot_bit#18 (byte[]) plot_bit#7
Redundant Phi (byte[]) plot_ylo#17 (byte[]) plot_ylo#41
Redundant Phi (byte[]) plot_yhi#17 (byte[]) plot_yhi#41
Redundant Phi (byte[]) plot_ylo#18 (byte[]) plot_ylo#17
Redundant Phi (byte[]) plot_yhi#18 (byte[]) plot_yhi#17
Redundant Phi (byte*) BITMAP#2 (byte*) BITMAP#6
Redundant Phi (byte*) SCREEN#4 (byte*) SCREEN#5
Redundant Phi (byte*) BITMAP#3 (byte*) BITMAP#2
Redundant Phi (byte*) SCREEN#1 (byte*) SCREEN#4
Redundant Phi (byte*) SCREEN#2 (byte*) SCREEN#1
Succesful SSA optimization Pass2RedundantPhiElimination
CONTROL FLOW GRAPH
@begin: scope:[]  from
  (byte*) BGCOL#0 ← ((byte*)) (word) 53280
  (byte*) FGCOL#0 ← ((byte*)) (word) 53281
  (byte*) D018#0 ← ((byte*)) (word) 53272
  (byte*) D011#0 ← ((byte*)) (word) 53265
  (byte) BMM#0 ← (byte/signed byte/word/signed word) 32
  (byte) DEN#0 ← (byte/signed byte/word/signed word) 16
  (byte) RSEL#0 ← (byte/signed byte/word/signed word) 8
  (byte*) SCREEN#0 ← ((byte*)) (word/signed word) 1024
  (byte*) BITMAP#0 ← ((byte*)) (word/signed word) 8192
  (byte[]) plot_xlo#0 ← ((byte*)) (word/signed word) 4096
  (byte[]) plot_xhi#0 ← ((byte*)) (word/signed word) 4352
  (byte[]) plot_ylo#0 ← ((byte*)) (word/signed word) 4608
  (byte[]) plot_yhi#0 ← ((byte*)) (word/signed word) 4864
  (byte[]) plot_bit#0 ← ((byte*)) (word/signed word) 5120
  (byte[]) lines_x#0 ← { (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60 }
  (byte[]) lines_y#0 ← { (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10 }
  (byte) lines_cnt#0 ← (byte/signed byte/word/signed word) 8
  to:@10
main: scope:[main]  from @10
  *((byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0
  *((byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0
  (byte~) main::$0 ← (byte) BMM#0 | (byte) DEN#0
  (byte~) main::$1 ← (byte~) main::$0 | (byte) RSEL#0
  (byte~) main::$2 ← (byte~) main::$1 | (byte/signed byte/word/signed word) 3
  *((byte*) D011#0) ← (byte~) main::$2
  *((byte*) D018#0) ← (byte/signed byte/word/signed word) 24
  call init_screen param-assignment
  to:main::@3
main::@3: scope:[main]  from main
  call init_plot_tables param-assignment
  to:main::@4
main::@4: scope:[main]  from main::@3
  to:main::@1
main::@1: scope:[main]  from main::@4 main::@5
  call lines param-assignment
  to:main::@5
main::@5: scope:[main]  from main::@1
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@5
  return 
  to:@return
lines: scope:[lines]  from main::@1
  (byte) lines::l#0 ← (byte/signed byte/word/signed word) 0
  to:lines::@1
lines::@1: scope:[lines]  from lines lines::@3
  (byte) lines::l#2 ← phi( lines/(byte) lines::l#0 lines::@3/(byte) lines::l#1 )
  (byte~) lines::$0 ← (byte[]) lines_x#0 *idx (byte) lines::l#2
  (byte~) lines::$1 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$2 ← (byte[]) lines_x#0 *idx (byte~) lines::$1
  (byte~) lines::$3 ← (byte[]) lines_y#0 *idx (byte) lines::l#2
  (byte~) lines::$4 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$5 ← (byte[]) lines_y#0 *idx (byte~) lines::$4
  (byte) line::x0#0 ← (byte~) lines::$0
  (byte) line::x1#0 ← (byte~) lines::$2
  (byte) line::y0#0 ← (byte~) lines::$3
  (byte) line::y1#0 ← (byte~) lines::$5
  call line param-assignment
  to:lines::@3
lines::@3: scope:[lines]  from lines::@1
  (byte) lines::l#1 ← ++ (byte) lines::l#2
  (boolean~) lines::$7 ← (byte) lines::l#1 < (byte) lines_cnt#0
  if((boolean~) lines::$7) goto lines::@1
  to:lines::@return
lines::@return: scope:[lines]  from lines::@3
  return 
  to:@return
line: scope:[line]  from lines::@1
  (boolean~) line::$1 ← (byte) line::x0#0 >= (byte) line::x1#0
  if((boolean~) line::$1) goto line::@1
  to:line::@15
line::@1: scope:[line]  from line
  (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0
  (boolean~) line::$17 ← (byte) line::y0#0 >= (byte) line::y1#0
  if((boolean~) line::$17) goto line::@9
  to:line::@23
line::@15: scope:[line]  from line
  (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0
  (boolean~) line::$4 ← (byte) line::y0#0 >= (byte) line::y1#0
  if((boolean~) line::$4) goto line::@2
  to:line::@16
line::@2: scope:[line]  from line::@15
  (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0
  (boolean~) line::$12 ← (byte) line::yd#0 >= (byte) line::xd#1
  if((boolean~) line::$12) goto line::@6
  to:line::@20
line::@16: scope:[line]  from line::@15
  (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0
  (boolean~) line::$7 ← (byte) line::yd#1 >= (byte) line::xd#1
  if((boolean~) line::$7) goto line::@3
  to:line::@17
line::@3: scope:[line]  from line::@16
  (byte) line_ydxi::y#0 ← (byte) line::y0#0
  (byte) line_ydxi::x#0 ← (byte) line::x0#0
  (byte) line_ydxi::y1#0 ← (byte) line::y1#0
  (byte) line_ydxi::yd#0 ← (byte) line::yd#1
  (byte) line_ydxi::xd#0 ← (byte) line::xd#1
  call line_ydxi param-assignment
  to:line::@return
line::@17: scope:[line]  from line::@16
  (byte) line_xdyi::x#0 ← (byte) line::x0#0
  (byte) line_xdyi::y#0 ← (byte) line::y0#0
  (byte) line_xdyi::x1#0 ← (byte) line::x1#0
  (byte) line_xdyi::xd#0 ← (byte) line::xd#1
  (byte) line_xdyi::yd#0 ← (byte) line::yd#1
  call line_xdyi param-assignment
  to:line::@return
line::@6: scope:[line]  from line::@2
  (byte) line_ydxd::y#0 ← (byte) line::y1#0
  (byte) line_ydxd::x#0 ← (byte) line::x1#0
  (byte) line_ydxd::y1#0 ← (byte) line::y0#0
  (byte) line_ydxd::yd#0 ← (byte) line::yd#0
  (byte) line_ydxd::xd#0 ← (byte) line::xd#1
  call line_ydxd param-assignment
  to:line::@return
line::@20: scope:[line]  from line::@2
  (byte) line_xdyd::x#0 ← (byte) line::x0#0
  (byte) line_xdyd::y#0 ← (byte) line::y0#0
  (byte) line_xdyd::x1#0 ← (byte) line::x1#0
  (byte) line_xdyd::xd#0 ← (byte) line::xd#1
  (byte) line_xdyd::yd#0 ← (byte) line::yd#0
  call line_xdyd param-assignment
  to:line::@return
line::@9: scope:[line]  from line::@1
  (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0
  (boolean~) line::$25 ← (byte) line::yd#10 >= (byte) line::xd#0
  if((boolean~) line::$25) goto line::@13
  to:line::@27
line::@23: scope:[line]  from line::@1
  (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0
  (boolean~) line::$20 ← (byte) line::yd#3 >= (byte) line::xd#0
  if((boolean~) line::$20) goto line::@10
  to:line::@24
line::@10: scope:[line]  from line::@23
  (byte) line_ydxd::y#1 ← (byte) line::y0#0
  (byte) line_ydxd::x#1 ← (byte) line::x0#0
  (byte) line_ydxd::y1#1 ← (byte) line::y1#0
  (byte) line_ydxd::yd#1 ← (byte) line::yd#3
  (byte) line_ydxd::xd#1 ← (byte) line::xd#0
  call line_ydxd param-assignment
  to:line::@return
line::@24: scope:[line]  from line::@23
  (byte) line_xdyd::x#1 ← (byte) line::x1#0
  (byte) line_xdyd::y#1 ← (byte) line::y1#0
  (byte) line_xdyd::x1#1 ← (byte) line::x0#0
  (byte) line_xdyd::xd#1 ← (byte) line::xd#0
  (byte) line_xdyd::yd#1 ← (byte) line::yd#3
  call line_xdyd param-assignment
  to:line::@return
line::@13: scope:[line]  from line::@9
  (byte) line_ydxi::y#1 ← (byte) line::y1#0
  (byte) line_ydxi::x#1 ← (byte) line::x1#0
  (byte) line_ydxi::y1#1 ← (byte) line::y0#0
  (byte) line_ydxi::yd#1 ← (byte) line::yd#10
  (byte) line_ydxi::xd#1 ← (byte) line::xd#0
  call line_ydxi param-assignment
  to:line::@return
line::@27: scope:[line]  from line::@9
  (byte) line_xdyi::x#1 ← (byte) line::x1#0
  (byte) line_xdyi::y#1 ← (byte) line::y1#0
  (byte) line_xdyi::x1#1 ← (byte) line::x0#0
  (byte) line_xdyi::xd#1 ← (byte) line::xd#0
  (byte) line_xdyi::yd#1 ← (byte) line::yd#10
  call line_xdyi param-assignment
  to:line::@return
line::@return: scope:[line]  from line::@10 line::@13 line::@17 line::@20 line::@24 line::@27 line::@3 line::@6
  return 
  to:@return
line_xdyi: scope:[line_xdyi]  from line::@17 line::@27
  (byte) line_xdyi::x1#6 ← phi( line::@17/(byte) line_xdyi::x1#0 line::@27/(byte) line_xdyi::x1#1 )
  (byte) line_xdyi::xd#5 ← phi( line::@17/(byte) line_xdyi::xd#0 line::@27/(byte) line_xdyi::xd#1 )
  (byte) line_xdyi::y#5 ← phi( line::@17/(byte) line_xdyi::y#0 line::@27/(byte) line_xdyi::y#1 )
  (byte) line_xdyi::x#6 ← phi( line::@17/(byte) line_xdyi::x#0 line::@27/(byte) line_xdyi::x#1 )
  (byte) line_xdyi::yd#2 ← phi( line::@17/(byte) line_xdyi::yd#0 line::@27/(byte) line_xdyi::yd#1 )
  (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyi::@1
line_xdyi::@1: scope:[line_xdyi]  from line_xdyi line_xdyi::@2
  (byte) line_xdyi::e#3 ← phi( line_xdyi/(byte) line_xdyi::e#0 line_xdyi::@2/(byte) line_xdyi::e#6 )
  (byte) line_xdyi::y#3 ← phi( line_xdyi/(byte) line_xdyi::y#5 line_xdyi::@2/(byte) line_xdyi::y#6 )
  (byte) line_xdyi::x#3 ← phi( line_xdyi/(byte) line_xdyi::x#6 line_xdyi::@2/(byte) line_xdyi::x#2 )
  (byte) plot::x#0 ← (byte) line_xdyi::x#3
  (byte) plot::y#0 ← (byte) line_xdyi::y#3
  call plot param-assignment
  to:line_xdyi::@5
line_xdyi::@5: scope:[line_xdyi]  from line_xdyi::@1
  (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2
  (boolean~) line_xdyi::$5 ← (byte) line_xdyi::xd#5 >= (byte) line_xdyi::e#1
  if((boolean~) line_xdyi::$5) goto line_xdyi::@2
  to:line_xdyi::@3
line_xdyi::@2: scope:[line_xdyi]  from line_xdyi::@3 line_xdyi::@5
  (byte) line_xdyi::e#6 ← phi( line_xdyi::@3/(byte) line_xdyi::e#2 line_xdyi::@5/(byte) line_xdyi::e#1 )
  (byte) line_xdyi::y#6 ← phi( line_xdyi::@3/(byte) line_xdyi::y#2 line_xdyi::@5/(byte) line_xdyi::y#3 )
  (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyi::$9 ← (byte) line_xdyi::x#2 < (byte~) line_xdyi::$8
  if((boolean~) line_xdyi::$9) goto line_xdyi::@1
  to:line_xdyi::@return
line_xdyi::@3: scope:[line_xdyi]  from line_xdyi::@5
  (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5
  to:line_xdyi::@2
line_xdyi::@return: scope:[line_xdyi]  from line_xdyi::@2
  return 
  to:@return
line_xdyd: scope:[line_xdyd]  from line::@20 line::@24
  (byte) line_xdyd::x1#6 ← phi( line::@20/(byte) line_xdyd::x1#0 line::@24/(byte) line_xdyd::x1#1 )
  (byte) line_xdyd::xd#5 ← phi( line::@20/(byte) line_xdyd::xd#0 line::@24/(byte) line_xdyd::xd#1 )
  (byte) line_xdyd::y#5 ← phi( line::@20/(byte) line_xdyd::y#0 line::@24/(byte) line_xdyd::y#1 )
  (byte) line_xdyd::x#6 ← phi( line::@20/(byte) line_xdyd::x#0 line::@24/(byte) line_xdyd::x#1 )
  (byte) line_xdyd::yd#2 ← phi( line::@20/(byte) line_xdyd::yd#0 line::@24/(byte) line_xdyd::yd#1 )
  (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyd::@1
line_xdyd::@1: scope:[line_xdyd]  from line_xdyd line_xdyd::@2
  (byte) line_xdyd::e#3 ← phi( line_xdyd/(byte) line_xdyd::e#0 line_xdyd::@2/(byte) line_xdyd::e#6 )
  (byte) line_xdyd::y#3 ← phi( line_xdyd/(byte) line_xdyd::y#5 line_xdyd::@2/(byte) line_xdyd::y#6 )
  (byte) line_xdyd::x#3 ← phi( line_xdyd/(byte) line_xdyd::x#6 line_xdyd::@2/(byte) line_xdyd::x#2 )
  (byte) plot::x#1 ← (byte) line_xdyd::x#3
  (byte) plot::y#1 ← (byte) line_xdyd::y#3
  call plot param-assignment
  to:line_xdyd::@5
line_xdyd::@5: scope:[line_xdyd]  from line_xdyd::@1
  (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2
  (boolean~) line_xdyd::$5 ← (byte) line_xdyd::xd#5 >= (byte) line_xdyd::e#1
  if((boolean~) line_xdyd::$5) goto line_xdyd::@2
  to:line_xdyd::@3
line_xdyd::@2: scope:[line_xdyd]  from line_xdyd::@3 line_xdyd::@5
  (byte) line_xdyd::e#6 ← phi( line_xdyd::@3/(byte) line_xdyd::e#2 line_xdyd::@5/(byte) line_xdyd::e#1 )
  (byte) line_xdyd::y#6 ← phi( line_xdyd::@3/(byte) line_xdyd::y#2 line_xdyd::@5/(byte) line_xdyd::y#3 )
  (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyd::$9 ← (byte) line_xdyd::x#2 < (byte~) line_xdyd::$8
  if((boolean~) line_xdyd::$9) goto line_xdyd::@1
  to:line_xdyd::@return
line_xdyd::@3: scope:[line_xdyd]  from line_xdyd::@5
  (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5
  to:line_xdyd::@2
line_xdyd::@return: scope:[line_xdyd]  from line_xdyd::@2
  return 
  to:@return
line_ydxi: scope:[line_ydxi]  from line::@13 line::@3
  (byte) line_ydxi::y1#6 ← phi( line::@13/(byte) line_ydxi::y1#1 line::@3/(byte) line_ydxi::y1#0 )
  (byte) line_ydxi::yd#5 ← phi( line::@13/(byte) line_ydxi::yd#1 line::@3/(byte) line_ydxi::yd#0 )
  (byte) line_ydxi::y#6 ← phi( line::@13/(byte) line_ydxi::y#1 line::@3/(byte) line_ydxi::y#0 )
  (byte) line_ydxi::x#5 ← phi( line::@13/(byte) line_ydxi::x#1 line::@3/(byte) line_ydxi::x#0 )
  (byte) line_ydxi::xd#2 ← phi( line::@13/(byte) line_ydxi::xd#1 line::@3/(byte) line_ydxi::xd#0 )
  (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxi::@1
line_ydxi::@1: scope:[line_ydxi]  from line_ydxi line_ydxi::@2
  (byte) line_ydxi::e#3 ← phi( line_ydxi/(byte) line_ydxi::e#0 line_ydxi::@2/(byte) line_ydxi::e#6 )
  (byte) line_ydxi::y#3 ← phi( line_ydxi/(byte) line_ydxi::y#6 line_ydxi::@2/(byte) line_ydxi::y#2 )
  (byte) line_ydxi::x#3 ← phi( line_ydxi/(byte) line_ydxi::x#5 line_ydxi::@2/(byte) line_ydxi::x#6 )
  (byte) plot::x#2 ← (byte) line_ydxi::x#3
  (byte) plot::y#2 ← (byte) line_ydxi::y#3
  call plot param-assignment
  to:line_ydxi::@5
line_ydxi::@5: scope:[line_ydxi]  from line_ydxi::@1
  (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2
  (boolean~) line_ydxi::$5 ← (byte) line_ydxi::yd#5 >= (byte) line_ydxi::e#1
  if((boolean~) line_ydxi::$5) goto line_ydxi::@2
  to:line_ydxi::@3
line_ydxi::@2: scope:[line_ydxi]  from line_ydxi::@3 line_ydxi::@5
  (byte) line_ydxi::e#6 ← phi( line_ydxi::@3/(byte) line_ydxi::e#2 line_ydxi::@5/(byte) line_ydxi::e#1 )
  (byte) line_ydxi::x#6 ← phi( line_ydxi::@3/(byte) line_ydxi::x#2 line_ydxi::@5/(byte) line_ydxi::x#3 )
  (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxi::$9 ← (byte) line_ydxi::y#2 < (byte~) line_ydxi::$8
  if((boolean~) line_ydxi::$9) goto line_ydxi::@1
  to:line_ydxi::@return
line_ydxi::@3: scope:[line_ydxi]  from line_ydxi::@5
  (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5
  to:line_ydxi::@2
line_ydxi::@return: scope:[line_ydxi]  from line_ydxi::@2
  return 
  to:@return
line_ydxd: scope:[line_ydxd]  from line::@10 line::@6
  (byte) line_ydxd::y1#6 ← phi( line::@10/(byte) line_ydxd::y1#1 line::@6/(byte) line_ydxd::y1#0 )
  (byte) line_ydxd::yd#5 ← phi( line::@10/(byte) line_ydxd::yd#1 line::@6/(byte) line_ydxd::yd#0 )
  (byte) line_ydxd::y#6 ← phi( line::@10/(byte) line_ydxd::y#1 line::@6/(byte) line_ydxd::y#0 )
  (byte) line_ydxd::x#5 ← phi( line::@10/(byte) line_ydxd::x#1 line::@6/(byte) line_ydxd::x#0 )
  (byte) line_ydxd::xd#2 ← phi( line::@10/(byte) line_ydxd::xd#1 line::@6/(byte) line_ydxd::xd#0 )
  (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxd::@1
line_ydxd::@1: scope:[line_ydxd]  from line_ydxd line_ydxd::@2
  (byte) line_ydxd::e#3 ← phi( line_ydxd/(byte) line_ydxd::e#0 line_ydxd::@2/(byte) line_ydxd::e#6 )
  (byte) line_ydxd::y#3 ← phi( line_ydxd/(byte) line_ydxd::y#6 line_ydxd::@2/(byte) line_ydxd::y#2 )
  (byte) line_ydxd::x#3 ← phi( line_ydxd/(byte) line_ydxd::x#5 line_ydxd::@2/(byte) line_ydxd::x#6 )
  (byte) plot::x#3 ← (byte) line_ydxd::x#3
  (byte) plot::y#3 ← (byte) line_ydxd::y#3
  call plot param-assignment
  to:line_ydxd::@5
line_ydxd::@5: scope:[line_ydxd]  from line_ydxd::@1
  (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2
  (boolean~) line_ydxd::$5 ← (byte) line_ydxd::yd#5 >= (byte) line_ydxd::e#1
  if((boolean~) line_ydxd::$5) goto line_ydxd::@2
  to:line_ydxd::@3
line_ydxd::@2: scope:[line_ydxd]  from line_ydxd::@3 line_ydxd::@5
  (byte) line_ydxd::e#6 ← phi( line_ydxd::@3/(byte) line_ydxd::e#2 line_ydxd::@5/(byte) line_ydxd::e#1 )
  (byte) line_ydxd::x#6 ← phi( line_ydxd::@3/(byte) line_ydxd::x#2 line_ydxd::@5/(byte) line_ydxd::x#3 )
  (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxd::$9 ← (byte) line_ydxd::y#2 < (byte~) line_ydxd::$8
  if((boolean~) line_ydxd::$9) goto line_ydxd::@1
  to:line_ydxd::@return
line_ydxd::@3: scope:[line_ydxd]  from line_ydxd::@5
  (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5
  to:line_ydxd::@2
line_ydxd::@return: scope:[line_ydxd]  from line_ydxd::@2
  return 
  to:@return
plot: scope:[plot]  from line_xdyd::@1 line_xdyi::@1 line_ydxd::@1 line_ydxi::@1
  (byte[]) plot_bit#1 ← phi( line_xdyd::@1/(byte[]) plot_bit#0 line_xdyi::@1/(byte[]) plot_bit#0 line_ydxd::@1/(byte[]) plot_bit#0 line_ydxi::@1/(byte[]) plot_bit#0 )
  (byte[]) plot_ylo#1 ← phi( line_xdyd::@1/(byte[]) plot_ylo#0 line_xdyi::@1/(byte[]) plot_ylo#0 line_ydxd::@1/(byte[]) plot_ylo#0 line_ydxi::@1/(byte[]) plot_ylo#0 )
  (byte) plot::y#4 ← phi( line_xdyd::@1/(byte) plot::y#1 line_xdyi::@1/(byte) plot::y#0 line_ydxd::@1/(byte) plot::y#3 line_ydxi::@1/(byte) plot::y#2 )
  (byte[]) plot_yhi#1 ← phi( line_xdyd::@1/(byte[]) plot_yhi#0 line_xdyi::@1/(byte[]) plot_yhi#0 line_ydxd::@1/(byte[]) plot_yhi#0 line_ydxi::@1/(byte[]) plot_yhi#0 )
  (byte[]) plot_xlo#1 ← phi( line_xdyd::@1/(byte[]) plot_xlo#0 line_xdyi::@1/(byte[]) plot_xlo#0 line_ydxd::@1/(byte[]) plot_xlo#0 line_ydxi::@1/(byte[]) plot_xlo#0 )
  (byte) plot::x#4 ← phi( line_xdyd::@1/(byte) plot::x#1 line_xdyi::@1/(byte) plot::x#0 line_ydxd::@1/(byte) plot::x#3 line_ydxi::@1/(byte) plot::x#2 )
  (byte[]) plot_xhi#1 ← phi( line_xdyd::@1/(byte[]) plot_xhi#0 line_xdyi::@1/(byte[]) plot_xhi#0 line_ydxd::@1/(byte[]) plot_xhi#0 line_ydxi::@1/(byte[]) plot_xhi#0 )
  (byte*) plot::plotter_x#0 ← ((byte*)) (byte/signed byte/word/signed word) 0
  (word) plot::plotter_y#0 ← (byte/signed byte/word/signed word) 0
  (byte~) plot::$0 ← (byte[]) plot_xhi#1 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#1 ← (byte*) plot::plotter_x#0 hi= (byte~) plot::$0
  (byte~) plot::$1 ← (byte[]) plot_xlo#1 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1
  (byte~) plot::$2 ← (byte[]) plot_yhi#1 *idx (byte) plot::y#4
  (word) plot::plotter_y#1 ← (word) plot::plotter_y#0 hi= (byte~) plot::$2
  (byte~) plot::$3 ← (byte[]) plot_ylo#1 *idx (byte) plot::y#4
  (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3
  (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2
  (byte~) plot::$5 ← (byte[]) plot_bit#1 *idx (byte) plot::x#4
  (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5
  *((byte*) plot::plotter#0) ← (byte~) plot::$6
  to:plot::@return
plot::@return: scope:[plot]  from plot
  return 
  to:@return
init_plot_tables: scope:[init_plot_tables]  from main::@3
  (byte) init_plot_tables::bits#0 ← (byte/word/signed word) 128
  (byte) init_plot_tables::x#0 ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@1
init_plot_tables::@1: scope:[init_plot_tables]  from init_plot_tables init_plot_tables::@2
  (byte) init_plot_tables::bits#3 ← phi( init_plot_tables/(byte) init_plot_tables::bits#0 init_plot_tables::@2/(byte) init_plot_tables::bits#4 )
  (byte) init_plot_tables::x#2 ← phi( init_plot_tables/(byte) init_plot_tables::x#0 init_plot_tables::@2/(byte) init_plot_tables::x#1 )
  (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248
  *((byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0
  (byte~) init_plot_tables::$1 ← > (byte*) BITMAP#0
  *((byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$1
  *((byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3
  (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1
  (boolean~) init_plot_tables::$4 ← (byte) init_plot_tables::bits#1 != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$4) goto init_plot_tables::@2
  to:init_plot_tables::@5
init_plot_tables::@2: scope:[init_plot_tables]  from init_plot_tables::@1 init_plot_tables::@5
  (byte) init_plot_tables::bits#4 ← phi( init_plot_tables::@1/(byte) init_plot_tables::bits#1 init_plot_tables::@5/(byte) init_plot_tables::bits#2 )
  (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2
  (boolean~) init_plot_tables::$5 ← (byte) init_plot_tables::x#1 != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$5) goto init_plot_tables::@1
  to:init_plot_tables::@6
init_plot_tables::@5: scope:[init_plot_tables]  from init_plot_tables::@1
  (byte) init_plot_tables::bits#2 ← (byte/word/signed word) 128
  to:init_plot_tables::@2
init_plot_tables::@6: scope:[init_plot_tables]  from init_plot_tables::@2
  (byte*) init_plot_tables::yoffs#0 ← ((byte*)) (byte/signed byte/word/signed word) 0
  (byte) init_plot_tables::y#0 ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@3
init_plot_tables::@3: scope:[init_plot_tables]  from init_plot_tables::@4 init_plot_tables::@6
  (byte*) init_plot_tables::yoffs#2 ← phi( init_plot_tables::@4/(byte*) init_plot_tables::yoffs#4 init_plot_tables::@6/(byte*) init_plot_tables::yoffs#0 )
  (byte) init_plot_tables::y#2 ← phi( init_plot_tables::@4/(byte) init_plot_tables::y#1 init_plot_tables::@6/(byte) init_plot_tables::y#0 )
  (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2
  (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7
  *((byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8
  (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2
  *((byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9
  (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (boolean~) init_plot_tables::$12 ← (byte~) init_plot_tables::$10 != (byte/signed byte/word/signed word) 7
  if((boolean~) init_plot_tables::$12) goto init_plot_tables::@4
  to:init_plot_tables::@7
init_plot_tables::@4: scope:[init_plot_tables]  from init_plot_tables::@3 init_plot_tables::@7
  (byte*) init_plot_tables::yoffs#4 ← phi( init_plot_tables::@3/(byte*) init_plot_tables::yoffs#2 init_plot_tables::@7/(byte*) init_plot_tables::yoffs#1 )
  (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2
  (boolean~) init_plot_tables::$14 ← (byte) init_plot_tables::y#1 != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$14) goto init_plot_tables::@3
  to:init_plot_tables::@return
init_plot_tables::@7: scope:[init_plot_tables]  from init_plot_tables::@3
  (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320
  to:init_plot_tables::@4
init_plot_tables::@return: scope:[init_plot_tables]  from init_plot_tables::@4
  return 
  to:@return
init_screen: scope:[init_screen]  from main
  (byte*) init_screen::b#0 ← (byte*) BITMAP#0
  to:init_screen::@1
init_screen::@1: scope:[init_screen]  from init_screen init_screen::@1
  (byte*) init_screen::b#2 ← phi( init_screen/(byte*) init_screen::b#0 init_screen::@1/(byte*) init_screen::b#1 )
  *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0
  (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2
  (byte*~) init_screen::$0 ← (byte*) BITMAP#0 + (word/signed word) 8192
  (boolean~) init_screen::$1 ← (byte*) init_screen::b#1 != (byte*~) init_screen::$0
  if((boolean~) init_screen::$1) goto init_screen::@1
  to:init_screen::@3
init_screen::@3: scope:[init_screen]  from init_screen::@1
  (byte*) init_screen::c#0 ← (byte*) SCREEN#0
  to:init_screen::@2
init_screen::@2: scope:[init_screen]  from init_screen::@2 init_screen::@3
  (byte*) init_screen::c#2 ← phi( init_screen::@2/(byte*) init_screen::c#1 init_screen::@3/(byte*) init_screen::c#0 )
  *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20
  (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2
  (byte*~) init_screen::$2 ← (byte*) SCREEN#0 + (word/signed word) 1024
  (boolean~) init_screen::$3 ← (byte*) init_screen::c#1 != (byte*~) init_screen::$2
  if((boolean~) init_screen::$3) goto init_screen::@2
  to:init_screen::@return
init_screen::@return: scope:[init_screen]  from init_screen::@2
  return 
  to:@return
@10: scope:[]  from @begin
  call main param-assignment
  to:@end
@end: scope:[]  from @10

Redundant Phi (byte[]) plot_xhi#1 (byte[]) plot_xhi#0
Redundant Phi (byte[]) plot_xlo#1 (byte[]) plot_xlo#0
Redundant Phi (byte[]) plot_yhi#1 (byte[]) plot_yhi#0
Redundant Phi (byte[]) plot_ylo#1 (byte[]) plot_ylo#0
Redundant Phi (byte[]) plot_bit#1 (byte[]) plot_bit#0
Succesful SSA optimization Pass2RedundantPhiElimination
CONTROL FLOW GRAPH
@begin: scope:[]  from
  (byte*) BGCOL#0 ← ((byte*)) (word) 53280
  (byte*) FGCOL#0 ← ((byte*)) (word) 53281
  (byte*) D018#0 ← ((byte*)) (word) 53272
  (byte*) D011#0 ← ((byte*)) (word) 53265
  (byte) BMM#0 ← (byte/signed byte/word/signed word) 32
  (byte) DEN#0 ← (byte/signed byte/word/signed word) 16
  (byte) RSEL#0 ← (byte/signed byte/word/signed word) 8
  (byte*) SCREEN#0 ← ((byte*)) (word/signed word) 1024
  (byte*) BITMAP#0 ← ((byte*)) (word/signed word) 8192
  (byte[]) plot_xlo#0 ← ((byte*)) (word/signed word) 4096
  (byte[]) plot_xhi#0 ← ((byte*)) (word/signed word) 4352
  (byte[]) plot_ylo#0 ← ((byte*)) (word/signed word) 4608
  (byte[]) plot_yhi#0 ← ((byte*)) (word/signed word) 4864
  (byte[]) plot_bit#0 ← ((byte*)) (word/signed word) 5120
  (byte[]) lines_x#0 ← { (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60 }
  (byte[]) lines_y#0 ← { (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10 }
  (byte) lines_cnt#0 ← (byte/signed byte/word/signed word) 8
  to:@10
main: scope:[main]  from @10
  *((byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0
  *((byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0
  (byte~) main::$0 ← (byte) BMM#0 | (byte) DEN#0
  (byte~) main::$1 ← (byte~) main::$0 | (byte) RSEL#0
  (byte~) main::$2 ← (byte~) main::$1 | (byte/signed byte/word/signed word) 3
  *((byte*) D011#0) ← (byte~) main::$2
  *((byte*) D018#0) ← (byte/signed byte/word/signed word) 24
  call init_screen param-assignment
  to:main::@3
main::@3: scope:[main]  from main
  call init_plot_tables param-assignment
  to:main::@4
main::@4: scope:[main]  from main::@3
  to:main::@1
main::@1: scope:[main]  from main::@4 main::@5
  call lines param-assignment
  to:main::@5
main::@5: scope:[main]  from main::@1
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@5
  return 
  to:@return
lines: scope:[lines]  from main::@1
  (byte) lines::l#0 ← (byte/signed byte/word/signed word) 0
  to:lines::@1
lines::@1: scope:[lines]  from lines lines::@3
  (byte) lines::l#2 ← phi( lines/(byte) lines::l#0 lines::@3/(byte) lines::l#1 )
  (byte~) lines::$0 ← (byte[]) lines_x#0 *idx (byte) lines::l#2
  (byte~) lines::$1 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$2 ← (byte[]) lines_x#0 *idx (byte~) lines::$1
  (byte~) lines::$3 ← (byte[]) lines_y#0 *idx (byte) lines::l#2
  (byte~) lines::$4 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$5 ← (byte[]) lines_y#0 *idx (byte~) lines::$4
  (byte) line::x0#0 ← (byte~) lines::$0
  (byte) line::x1#0 ← (byte~) lines::$2
  (byte) line::y0#0 ← (byte~) lines::$3
  (byte) line::y1#0 ← (byte~) lines::$5
  call line param-assignment
  to:lines::@3
lines::@3: scope:[lines]  from lines::@1
  (byte) lines::l#1 ← ++ (byte) lines::l#2
  (boolean~) lines::$7 ← (byte) lines::l#1 < (byte) lines_cnt#0
  if((boolean~) lines::$7) goto lines::@1
  to:lines::@return
lines::@return: scope:[lines]  from lines::@3
  return 
  to:@return
line: scope:[line]  from lines::@1
  (boolean~) line::$1 ← (byte) line::x0#0 >= (byte) line::x1#0
  if((boolean~) line::$1) goto line::@1
  to:line::@15
line::@1: scope:[line]  from line
  (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0
  (boolean~) line::$17 ← (byte) line::y0#0 >= (byte) line::y1#0
  if((boolean~) line::$17) goto line::@9
  to:line::@23
line::@15: scope:[line]  from line
  (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0
  (boolean~) line::$4 ← (byte) line::y0#0 >= (byte) line::y1#0
  if((boolean~) line::$4) goto line::@2
  to:line::@16
line::@2: scope:[line]  from line::@15
  (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0
  (boolean~) line::$12 ← (byte) line::yd#0 >= (byte) line::xd#1
  if((boolean~) line::$12) goto line::@6
  to:line::@20
line::@16: scope:[line]  from line::@15
  (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0
  (boolean~) line::$7 ← (byte) line::yd#1 >= (byte) line::xd#1
  if((boolean~) line::$7) goto line::@3
  to:line::@17
line::@3: scope:[line]  from line::@16
  (byte) line_ydxi::y#0 ← (byte) line::y0#0
  (byte) line_ydxi::x#0 ← (byte) line::x0#0
  (byte) line_ydxi::y1#0 ← (byte) line::y1#0
  (byte) line_ydxi::yd#0 ← (byte) line::yd#1
  (byte) line_ydxi::xd#0 ← (byte) line::xd#1
  call line_ydxi param-assignment
  to:line::@return
line::@17: scope:[line]  from line::@16
  (byte) line_xdyi::x#0 ← (byte) line::x0#0
  (byte) line_xdyi::y#0 ← (byte) line::y0#0
  (byte) line_xdyi::x1#0 ← (byte) line::x1#0
  (byte) line_xdyi::xd#0 ← (byte) line::xd#1
  (byte) line_xdyi::yd#0 ← (byte) line::yd#1
  call line_xdyi param-assignment
  to:line::@return
line::@6: scope:[line]  from line::@2
  (byte) line_ydxd::y#0 ← (byte) line::y1#0
  (byte) line_ydxd::x#0 ← (byte) line::x1#0
  (byte) line_ydxd::y1#0 ← (byte) line::y0#0
  (byte) line_ydxd::yd#0 ← (byte) line::yd#0
  (byte) line_ydxd::xd#0 ← (byte) line::xd#1
  call line_ydxd param-assignment
  to:line::@return
line::@20: scope:[line]  from line::@2
  (byte) line_xdyd::x#0 ← (byte) line::x0#0
  (byte) line_xdyd::y#0 ← (byte) line::y0#0
  (byte) line_xdyd::x1#0 ← (byte) line::x1#0
  (byte) line_xdyd::xd#0 ← (byte) line::xd#1
  (byte) line_xdyd::yd#0 ← (byte) line::yd#0
  call line_xdyd param-assignment
  to:line::@return
line::@9: scope:[line]  from line::@1
  (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0
  (boolean~) line::$25 ← (byte) line::yd#10 >= (byte) line::xd#0
  if((boolean~) line::$25) goto line::@13
  to:line::@27
line::@23: scope:[line]  from line::@1
  (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0
  (boolean~) line::$20 ← (byte) line::yd#3 >= (byte) line::xd#0
  if((boolean~) line::$20) goto line::@10
  to:line::@24
line::@10: scope:[line]  from line::@23
  (byte) line_ydxd::y#1 ← (byte) line::y0#0
  (byte) line_ydxd::x#1 ← (byte) line::x0#0
  (byte) line_ydxd::y1#1 ← (byte) line::y1#0
  (byte) line_ydxd::yd#1 ← (byte) line::yd#3
  (byte) line_ydxd::xd#1 ← (byte) line::xd#0
  call line_ydxd param-assignment
  to:line::@return
line::@24: scope:[line]  from line::@23
  (byte) line_xdyd::x#1 ← (byte) line::x1#0
  (byte) line_xdyd::y#1 ← (byte) line::y1#0
  (byte) line_xdyd::x1#1 ← (byte) line::x0#0
  (byte) line_xdyd::xd#1 ← (byte) line::xd#0
  (byte) line_xdyd::yd#1 ← (byte) line::yd#3
  call line_xdyd param-assignment
  to:line::@return
line::@13: scope:[line]  from line::@9
  (byte) line_ydxi::y#1 ← (byte) line::y1#0
  (byte) line_ydxi::x#1 ← (byte) line::x1#0
  (byte) line_ydxi::y1#1 ← (byte) line::y0#0
  (byte) line_ydxi::yd#1 ← (byte) line::yd#10
  (byte) line_ydxi::xd#1 ← (byte) line::xd#0
  call line_ydxi param-assignment
  to:line::@return
line::@27: scope:[line]  from line::@9
  (byte) line_xdyi::x#1 ← (byte) line::x1#0
  (byte) line_xdyi::y#1 ← (byte) line::y1#0
  (byte) line_xdyi::x1#1 ← (byte) line::x0#0
  (byte) line_xdyi::xd#1 ← (byte) line::xd#0
  (byte) line_xdyi::yd#1 ← (byte) line::yd#10
  call line_xdyi param-assignment
  to:line::@return
line::@return: scope:[line]  from line::@10 line::@13 line::@17 line::@20 line::@24 line::@27 line::@3 line::@6
  return 
  to:@return
line_xdyi: scope:[line_xdyi]  from line::@17 line::@27
  (byte) line_xdyi::x1#6 ← phi( line::@17/(byte) line_xdyi::x1#0 line::@27/(byte) line_xdyi::x1#1 )
  (byte) line_xdyi::xd#5 ← phi( line::@17/(byte) line_xdyi::xd#0 line::@27/(byte) line_xdyi::xd#1 )
  (byte) line_xdyi::y#5 ← phi( line::@17/(byte) line_xdyi::y#0 line::@27/(byte) line_xdyi::y#1 )
  (byte) line_xdyi::x#6 ← phi( line::@17/(byte) line_xdyi::x#0 line::@27/(byte) line_xdyi::x#1 )
  (byte) line_xdyi::yd#2 ← phi( line::@17/(byte) line_xdyi::yd#0 line::@27/(byte) line_xdyi::yd#1 )
  (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyi::@1
line_xdyi::@1: scope:[line_xdyi]  from line_xdyi line_xdyi::@2
  (byte) line_xdyi::e#3 ← phi( line_xdyi/(byte) line_xdyi::e#0 line_xdyi::@2/(byte) line_xdyi::e#6 )
  (byte) line_xdyi::y#3 ← phi( line_xdyi/(byte) line_xdyi::y#5 line_xdyi::@2/(byte) line_xdyi::y#6 )
  (byte) line_xdyi::x#3 ← phi( line_xdyi/(byte) line_xdyi::x#6 line_xdyi::@2/(byte) line_xdyi::x#2 )
  (byte) plot::x#0 ← (byte) line_xdyi::x#3
  (byte) plot::y#0 ← (byte) line_xdyi::y#3
  call plot param-assignment
  to:line_xdyi::@5
line_xdyi::@5: scope:[line_xdyi]  from line_xdyi::@1
  (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2
  (boolean~) line_xdyi::$5 ← (byte) line_xdyi::xd#5 >= (byte) line_xdyi::e#1
  if((boolean~) line_xdyi::$5) goto line_xdyi::@2
  to:line_xdyi::@3
line_xdyi::@2: scope:[line_xdyi]  from line_xdyi::@3 line_xdyi::@5
  (byte) line_xdyi::e#6 ← phi( line_xdyi::@3/(byte) line_xdyi::e#2 line_xdyi::@5/(byte) line_xdyi::e#1 )
  (byte) line_xdyi::y#6 ← phi( line_xdyi::@3/(byte) line_xdyi::y#2 line_xdyi::@5/(byte) line_xdyi::y#3 )
  (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyi::$9 ← (byte) line_xdyi::x#2 < (byte~) line_xdyi::$8
  if((boolean~) line_xdyi::$9) goto line_xdyi::@1
  to:line_xdyi::@return
line_xdyi::@3: scope:[line_xdyi]  from line_xdyi::@5
  (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5
  to:line_xdyi::@2
line_xdyi::@return: scope:[line_xdyi]  from line_xdyi::@2
  return 
  to:@return
line_xdyd: scope:[line_xdyd]  from line::@20 line::@24
  (byte) line_xdyd::x1#6 ← phi( line::@20/(byte) line_xdyd::x1#0 line::@24/(byte) line_xdyd::x1#1 )
  (byte) line_xdyd::xd#5 ← phi( line::@20/(byte) line_xdyd::xd#0 line::@24/(byte) line_xdyd::xd#1 )
  (byte) line_xdyd::y#5 ← phi( line::@20/(byte) line_xdyd::y#0 line::@24/(byte) line_xdyd::y#1 )
  (byte) line_xdyd::x#6 ← phi( line::@20/(byte) line_xdyd::x#0 line::@24/(byte) line_xdyd::x#1 )
  (byte) line_xdyd::yd#2 ← phi( line::@20/(byte) line_xdyd::yd#0 line::@24/(byte) line_xdyd::yd#1 )
  (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyd::@1
line_xdyd::@1: scope:[line_xdyd]  from line_xdyd line_xdyd::@2
  (byte) line_xdyd::e#3 ← phi( line_xdyd/(byte) line_xdyd::e#0 line_xdyd::@2/(byte) line_xdyd::e#6 )
  (byte) line_xdyd::y#3 ← phi( line_xdyd/(byte) line_xdyd::y#5 line_xdyd::@2/(byte) line_xdyd::y#6 )
  (byte) line_xdyd::x#3 ← phi( line_xdyd/(byte) line_xdyd::x#6 line_xdyd::@2/(byte) line_xdyd::x#2 )
  (byte) plot::x#1 ← (byte) line_xdyd::x#3
  (byte) plot::y#1 ← (byte) line_xdyd::y#3
  call plot param-assignment
  to:line_xdyd::@5
line_xdyd::@5: scope:[line_xdyd]  from line_xdyd::@1
  (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2
  (boolean~) line_xdyd::$5 ← (byte) line_xdyd::xd#5 >= (byte) line_xdyd::e#1
  if((boolean~) line_xdyd::$5) goto line_xdyd::@2
  to:line_xdyd::@3
line_xdyd::@2: scope:[line_xdyd]  from line_xdyd::@3 line_xdyd::@5
  (byte) line_xdyd::e#6 ← phi( line_xdyd::@3/(byte) line_xdyd::e#2 line_xdyd::@5/(byte) line_xdyd::e#1 )
  (byte) line_xdyd::y#6 ← phi( line_xdyd::@3/(byte) line_xdyd::y#2 line_xdyd::@5/(byte) line_xdyd::y#3 )
  (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1
  (boolean~) line_xdyd::$9 ← (byte) line_xdyd::x#2 < (byte~) line_xdyd::$8
  if((boolean~) line_xdyd::$9) goto line_xdyd::@1
  to:line_xdyd::@return
line_xdyd::@3: scope:[line_xdyd]  from line_xdyd::@5
  (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5
  to:line_xdyd::@2
line_xdyd::@return: scope:[line_xdyd]  from line_xdyd::@2
  return 
  to:@return
line_ydxi: scope:[line_ydxi]  from line::@13 line::@3
  (byte) line_ydxi::y1#6 ← phi( line::@13/(byte) line_ydxi::y1#1 line::@3/(byte) line_ydxi::y1#0 )
  (byte) line_ydxi::yd#5 ← phi( line::@13/(byte) line_ydxi::yd#1 line::@3/(byte) line_ydxi::yd#0 )
  (byte) line_ydxi::y#6 ← phi( line::@13/(byte) line_ydxi::y#1 line::@3/(byte) line_ydxi::y#0 )
  (byte) line_ydxi::x#5 ← phi( line::@13/(byte) line_ydxi::x#1 line::@3/(byte) line_ydxi::x#0 )
  (byte) line_ydxi::xd#2 ← phi( line::@13/(byte) line_ydxi::xd#1 line::@3/(byte) line_ydxi::xd#0 )
  (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxi::@1
line_ydxi::@1: scope:[line_ydxi]  from line_ydxi line_ydxi::@2
  (byte) line_ydxi::e#3 ← phi( line_ydxi/(byte) line_ydxi::e#0 line_ydxi::@2/(byte) line_ydxi::e#6 )
  (byte) line_ydxi::y#3 ← phi( line_ydxi/(byte) line_ydxi::y#6 line_ydxi::@2/(byte) line_ydxi::y#2 )
  (byte) line_ydxi::x#3 ← phi( line_ydxi/(byte) line_ydxi::x#5 line_ydxi::@2/(byte) line_ydxi::x#6 )
  (byte) plot::x#2 ← (byte) line_ydxi::x#3
  (byte) plot::y#2 ← (byte) line_ydxi::y#3
  call plot param-assignment
  to:line_ydxi::@5
line_ydxi::@5: scope:[line_ydxi]  from line_ydxi::@1
  (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2
  (boolean~) line_ydxi::$5 ← (byte) line_ydxi::yd#5 >= (byte) line_ydxi::e#1
  if((boolean~) line_ydxi::$5) goto line_ydxi::@2
  to:line_ydxi::@3
line_ydxi::@2: scope:[line_ydxi]  from line_ydxi::@3 line_ydxi::@5
  (byte) line_ydxi::e#6 ← phi( line_ydxi::@3/(byte) line_ydxi::e#2 line_ydxi::@5/(byte) line_ydxi::e#1 )
  (byte) line_ydxi::x#6 ← phi( line_ydxi::@3/(byte) line_ydxi::x#2 line_ydxi::@5/(byte) line_ydxi::x#3 )
  (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxi::$9 ← (byte) line_ydxi::y#2 < (byte~) line_ydxi::$8
  if((boolean~) line_ydxi::$9) goto line_ydxi::@1
  to:line_ydxi::@return
line_ydxi::@3: scope:[line_ydxi]  from line_ydxi::@5
  (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5
  to:line_ydxi::@2
line_ydxi::@return: scope:[line_ydxi]  from line_ydxi::@2
  return 
  to:@return
line_ydxd: scope:[line_ydxd]  from line::@10 line::@6
  (byte) line_ydxd::y1#6 ← phi( line::@10/(byte) line_ydxd::y1#1 line::@6/(byte) line_ydxd::y1#0 )
  (byte) line_ydxd::yd#5 ← phi( line::@10/(byte) line_ydxd::yd#1 line::@6/(byte) line_ydxd::yd#0 )
  (byte) line_ydxd::y#6 ← phi( line::@10/(byte) line_ydxd::y#1 line::@6/(byte) line_ydxd::y#0 )
  (byte) line_ydxd::x#5 ← phi( line::@10/(byte) line_ydxd::x#1 line::@6/(byte) line_ydxd::x#0 )
  (byte) line_ydxd::xd#2 ← phi( line::@10/(byte) line_ydxd::xd#1 line::@6/(byte) line_ydxd::xd#0 )
  (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxd::@1
line_ydxd::@1: scope:[line_ydxd]  from line_ydxd line_ydxd::@2
  (byte) line_ydxd::e#3 ← phi( line_ydxd/(byte) line_ydxd::e#0 line_ydxd::@2/(byte) line_ydxd::e#6 )
  (byte) line_ydxd::y#3 ← phi( line_ydxd/(byte) line_ydxd::y#6 line_ydxd::@2/(byte) line_ydxd::y#2 )
  (byte) line_ydxd::x#3 ← phi( line_ydxd/(byte) line_ydxd::x#5 line_ydxd::@2/(byte) line_ydxd::x#6 )
  (byte) plot::x#3 ← (byte) line_ydxd::x#3
  (byte) plot::y#3 ← (byte) line_ydxd::y#3
  call plot param-assignment
  to:line_ydxd::@5
line_ydxd::@5: scope:[line_ydxd]  from line_ydxd::@1
  (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2
  (boolean~) line_ydxd::$5 ← (byte) line_ydxd::yd#5 >= (byte) line_ydxd::e#1
  if((boolean~) line_ydxd::$5) goto line_ydxd::@2
  to:line_ydxd::@3
line_ydxd::@2: scope:[line_ydxd]  from line_ydxd::@3 line_ydxd::@5
  (byte) line_ydxd::e#6 ← phi( line_ydxd::@3/(byte) line_ydxd::e#2 line_ydxd::@5/(byte) line_ydxd::e#1 )
  (byte) line_ydxd::x#6 ← phi( line_ydxd::@3/(byte) line_ydxd::x#2 line_ydxd::@5/(byte) line_ydxd::x#3 )
  (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1
  (boolean~) line_ydxd::$9 ← (byte) line_ydxd::y#2 < (byte~) line_ydxd::$8
  if((boolean~) line_ydxd::$9) goto line_ydxd::@1
  to:line_ydxd::@return
line_ydxd::@3: scope:[line_ydxd]  from line_ydxd::@5
  (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5
  to:line_ydxd::@2
line_ydxd::@return: scope:[line_ydxd]  from line_ydxd::@2
  return 
  to:@return
plot: scope:[plot]  from line_xdyd::@1 line_xdyi::@1 line_ydxd::@1 line_ydxi::@1
  (byte) plot::y#4 ← phi( line_xdyd::@1/(byte) plot::y#1 line_xdyi::@1/(byte) plot::y#0 line_ydxd::@1/(byte) plot::y#3 line_ydxi::@1/(byte) plot::y#2 )
  (byte) plot::x#4 ← phi( line_xdyd::@1/(byte) plot::x#1 line_xdyi::@1/(byte) plot::x#0 line_ydxd::@1/(byte) plot::x#3 line_ydxi::@1/(byte) plot::x#2 )
  (byte*) plot::plotter_x#0 ← ((byte*)) (byte/signed byte/word/signed word) 0
  (word) plot::plotter_y#0 ← (byte/signed byte/word/signed word) 0
  (byte~) plot::$0 ← (byte[]) plot_xhi#0 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#1 ← (byte*) plot::plotter_x#0 hi= (byte~) plot::$0
  (byte~) plot::$1 ← (byte[]) plot_xlo#0 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1
  (byte~) plot::$2 ← (byte[]) plot_yhi#0 *idx (byte) plot::y#4
  (word) plot::plotter_y#1 ← (word) plot::plotter_y#0 hi= (byte~) plot::$2
  (byte~) plot::$3 ← (byte[]) plot_ylo#0 *idx (byte) plot::y#4
  (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3
  (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2
  (byte~) plot::$5 ← (byte[]) plot_bit#0 *idx (byte) plot::x#4
  (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5
  *((byte*) plot::plotter#0) ← (byte~) plot::$6
  to:plot::@return
plot::@return: scope:[plot]  from plot
  return 
  to:@return
init_plot_tables: scope:[init_plot_tables]  from main::@3
  (byte) init_plot_tables::bits#0 ← (byte/word/signed word) 128
  (byte) init_plot_tables::x#0 ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@1
init_plot_tables::@1: scope:[init_plot_tables]  from init_plot_tables init_plot_tables::@2
  (byte) init_plot_tables::bits#3 ← phi( init_plot_tables/(byte) init_plot_tables::bits#0 init_plot_tables::@2/(byte) init_plot_tables::bits#4 )
  (byte) init_plot_tables::x#2 ← phi( init_plot_tables/(byte) init_plot_tables::x#0 init_plot_tables::@2/(byte) init_plot_tables::x#1 )
  (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248
  *((byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0
  (byte~) init_plot_tables::$1 ← > (byte*) BITMAP#0
  *((byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$1
  *((byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3
  (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1
  (boolean~) init_plot_tables::$4 ← (byte) init_plot_tables::bits#1 != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$4) goto init_plot_tables::@2
  to:init_plot_tables::@5
init_plot_tables::@2: scope:[init_plot_tables]  from init_plot_tables::@1 init_plot_tables::@5
  (byte) init_plot_tables::bits#4 ← phi( init_plot_tables::@1/(byte) init_plot_tables::bits#1 init_plot_tables::@5/(byte) init_plot_tables::bits#2 )
  (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2
  (boolean~) init_plot_tables::$5 ← (byte) init_plot_tables::x#1 != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$5) goto init_plot_tables::@1
  to:init_plot_tables::@6
init_plot_tables::@5: scope:[init_plot_tables]  from init_plot_tables::@1
  (byte) init_plot_tables::bits#2 ← (byte/word/signed word) 128
  to:init_plot_tables::@2
init_plot_tables::@6: scope:[init_plot_tables]  from init_plot_tables::@2
  (byte*) init_plot_tables::yoffs#0 ← ((byte*)) (byte/signed byte/word/signed word) 0
  (byte) init_plot_tables::y#0 ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@3
init_plot_tables::@3: scope:[init_plot_tables]  from init_plot_tables::@4 init_plot_tables::@6
  (byte*) init_plot_tables::yoffs#2 ← phi( init_plot_tables::@4/(byte*) init_plot_tables::yoffs#4 init_plot_tables::@6/(byte*) init_plot_tables::yoffs#0 )
  (byte) init_plot_tables::y#2 ← phi( init_plot_tables::@4/(byte) init_plot_tables::y#1 init_plot_tables::@6/(byte) init_plot_tables::y#0 )
  (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2
  (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7
  *((byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8
  (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2
  *((byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9
  (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (boolean~) init_plot_tables::$12 ← (byte~) init_plot_tables::$10 != (byte/signed byte/word/signed word) 7
  if((boolean~) init_plot_tables::$12) goto init_plot_tables::@4
  to:init_plot_tables::@7
init_plot_tables::@4: scope:[init_plot_tables]  from init_plot_tables::@3 init_plot_tables::@7
  (byte*) init_plot_tables::yoffs#4 ← phi( init_plot_tables::@3/(byte*) init_plot_tables::yoffs#2 init_plot_tables::@7/(byte*) init_plot_tables::yoffs#1 )
  (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2
  (boolean~) init_plot_tables::$14 ← (byte) init_plot_tables::y#1 != (byte/signed byte/word/signed word) 0
  if((boolean~) init_plot_tables::$14) goto init_plot_tables::@3
  to:init_plot_tables::@return
init_plot_tables::@7: scope:[init_plot_tables]  from init_plot_tables::@3
  (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320
  to:init_plot_tables::@4
init_plot_tables::@return: scope:[init_plot_tables]  from init_plot_tables::@4
  return 
  to:@return
init_screen: scope:[init_screen]  from main
  (byte*) init_screen::b#0 ← (byte*) BITMAP#0
  to:init_screen::@1
init_screen::@1: scope:[init_screen]  from init_screen init_screen::@1
  (byte*) init_screen::b#2 ← phi( init_screen/(byte*) init_screen::b#0 init_screen::@1/(byte*) init_screen::b#1 )
  *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0
  (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2
  (byte*~) init_screen::$0 ← (byte*) BITMAP#0 + (word/signed word) 8192
  (boolean~) init_screen::$1 ← (byte*) init_screen::b#1 != (byte*~) init_screen::$0
  if((boolean~) init_screen::$1) goto init_screen::@1
  to:init_screen::@3
init_screen::@3: scope:[init_screen]  from init_screen::@1
  (byte*) init_screen::c#0 ← (byte*) SCREEN#0
  to:init_screen::@2
init_screen::@2: scope:[init_screen]  from init_screen::@2 init_screen::@3
  (byte*) init_screen::c#2 ← phi( init_screen::@2/(byte*) init_screen::c#1 init_screen::@3/(byte*) init_screen::c#0 )
  *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20
  (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2
  (byte*~) init_screen::$2 ← (byte*) SCREEN#0 + (word/signed word) 1024
  (boolean~) init_screen::$3 ← (byte*) init_screen::c#1 != (byte*~) init_screen::$2
  if((boolean~) init_screen::$3) goto init_screen::@2
  to:init_screen::@return
init_screen::@return: scope:[init_screen]  from init_screen::@2
  return 
  to:@return
@10: scope:[]  from @begin
  call main param-assignment
  to:@end
@end: scope:[]  from @10

Simple Condition (boolean~) lines::$7 if((byte) lines::l#1<(byte) lines_cnt#0) goto lines::@1
Simple Condition (boolean~) line::$1 if((byte) line::x0#0>=(byte) line::x1#0) goto line::@1
Simple Condition (boolean~) line::$17 if((byte) line::y0#0>=(byte) line::y1#0) goto line::@9
Simple Condition (boolean~) line::$4 if((byte) line::y0#0>=(byte) line::y1#0) goto line::@2
Simple Condition (boolean~) line::$12 if((byte) line::yd#0>=(byte) line::xd#1) goto line::@6
Simple Condition (boolean~) line::$7 if((byte) line::yd#1>=(byte) line::xd#1) goto line::@3
Simple Condition (boolean~) line::$25 if((byte) line::yd#10>=(byte) line::xd#0) goto line::@13
Simple Condition (boolean~) line::$20 if((byte) line::yd#3>=(byte) line::xd#0) goto line::@10
Simple Condition (boolean~) line_xdyi::$5 if((byte) line_xdyi::xd#5>=(byte) line_xdyi::e#1) goto line_xdyi::@2
Simple Condition (boolean~) line_xdyi::$9 if((byte) line_xdyi::x#2<(byte~) line_xdyi::$8) goto line_xdyi::@1
Simple Condition (boolean~) line_xdyd::$5 if((byte) line_xdyd::xd#5>=(byte) line_xdyd::e#1) goto line_xdyd::@2
Simple Condition (boolean~) line_xdyd::$9 if((byte) line_xdyd::x#2<(byte~) line_xdyd::$8) goto line_xdyd::@1
Simple Condition (boolean~) line_ydxi::$5 if((byte) line_ydxi::yd#5>=(byte) line_ydxi::e#1) goto line_ydxi::@2
Simple Condition (boolean~) line_ydxi::$9 if((byte) line_ydxi::y#2<(byte~) line_ydxi::$8) goto line_ydxi::@1
Simple Condition (boolean~) line_ydxd::$5 if((byte) line_ydxd::yd#5>=(byte) line_ydxd::e#1) goto line_ydxd::@2
Simple Condition (boolean~) line_ydxd::$9 if((byte) line_ydxd::y#2<(byte~) line_ydxd::$8) goto line_ydxd::@1
Simple Condition (boolean~) init_plot_tables::$4 if((byte) init_plot_tables::bits#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@2
Simple Condition (boolean~) init_plot_tables::$5 if((byte) init_plot_tables::x#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@1
Simple Condition (boolean~) init_plot_tables::$12 if((byte~) init_plot_tables::$10!=(byte/signed byte/word/signed word) 7) goto init_plot_tables::@4
Simple Condition (boolean~) init_plot_tables::$14 if((byte) init_plot_tables::y#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@3
Simple Condition (boolean~) init_screen::$1 if((byte*) init_screen::b#1!=(byte*~) init_screen::$0) goto init_screen::@1
Simple Condition (boolean~) init_screen::$3 if((byte*) init_screen::c#1!=(byte*~) init_screen::$2) goto init_screen::@2
Succesful SSA optimization Pass2ConditionalJumpSimplification
CONTROL FLOW GRAPH
@begin: scope:[]  from
  (byte*) BGCOL#0 ← ((byte*)) (word) 53280
  (byte*) FGCOL#0 ← ((byte*)) (word) 53281
  (byte*) D018#0 ← ((byte*)) (word) 53272
  (byte*) D011#0 ← ((byte*)) (word) 53265
  (byte) BMM#0 ← (byte/signed byte/word/signed word) 32
  (byte) DEN#0 ← (byte/signed byte/word/signed word) 16
  (byte) RSEL#0 ← (byte/signed byte/word/signed word) 8
  (byte*) SCREEN#0 ← ((byte*)) (word/signed word) 1024
  (byte*) BITMAP#0 ← ((byte*)) (word/signed word) 8192
  (byte[]) plot_xlo#0 ← ((byte*)) (word/signed word) 4096
  (byte[]) plot_xhi#0 ← ((byte*)) (word/signed word) 4352
  (byte[]) plot_ylo#0 ← ((byte*)) (word/signed word) 4608
  (byte[]) plot_yhi#0 ← ((byte*)) (word/signed word) 4864
  (byte[]) plot_bit#0 ← ((byte*)) (word/signed word) 5120
  (byte[]) lines_x#0 ← { (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60 }
  (byte[]) lines_y#0 ← { (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10 }
  (byte) lines_cnt#0 ← (byte/signed byte/word/signed word) 8
  to:@10
main: scope:[main]  from @10
  *((byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0
  *((byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0
  (byte~) main::$0 ← (byte) BMM#0 | (byte) DEN#0
  (byte~) main::$1 ← (byte~) main::$0 | (byte) RSEL#0
  (byte~) main::$2 ← (byte~) main::$1 | (byte/signed byte/word/signed word) 3
  *((byte*) D011#0) ← (byte~) main::$2
  *((byte*) D018#0) ← (byte/signed byte/word/signed word) 24
  call init_screen param-assignment
  to:main::@3
main::@3: scope:[main]  from main
  call init_plot_tables param-assignment
  to:main::@4
main::@4: scope:[main]  from main::@3
  to:main::@1
main::@1: scope:[main]  from main::@4 main::@5
  call lines param-assignment
  to:main::@5
main::@5: scope:[main]  from main::@1
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@5
  return 
  to:@return
lines: scope:[lines]  from main::@1
  (byte) lines::l#0 ← (byte/signed byte/word/signed word) 0
  to:lines::@1
lines::@1: scope:[lines]  from lines lines::@3
  (byte) lines::l#2 ← phi( lines/(byte) lines::l#0 lines::@3/(byte) lines::l#1 )
  (byte~) lines::$0 ← (byte[]) lines_x#0 *idx (byte) lines::l#2
  (byte~) lines::$1 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$2 ← (byte[]) lines_x#0 *idx (byte~) lines::$1
  (byte~) lines::$3 ← (byte[]) lines_y#0 *idx (byte) lines::l#2
  (byte~) lines::$4 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$5 ← (byte[]) lines_y#0 *idx (byte~) lines::$4
  (byte) line::x0#0 ← (byte~) lines::$0
  (byte) line::x1#0 ← (byte~) lines::$2
  (byte) line::y0#0 ← (byte~) lines::$3
  (byte) line::y1#0 ← (byte~) lines::$5
  call line param-assignment
  to:lines::@3
lines::@3: scope:[lines]  from lines::@1
  (byte) lines::l#1 ← ++ (byte) lines::l#2
  if((byte) lines::l#1<(byte) lines_cnt#0) goto lines::@1
  to:lines::@return
lines::@return: scope:[lines]  from lines::@3
  return 
  to:@return
line: scope:[line]  from lines::@1
  if((byte) line::x0#0>=(byte) line::x1#0) goto line::@1
  to:line::@15
line::@1: scope:[line]  from line
  (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0
  if((byte) line::y0#0>=(byte) line::y1#0) goto line::@9
  to:line::@23
line::@15: scope:[line]  from line
  (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0
  if((byte) line::y0#0>=(byte) line::y1#0) goto line::@2
  to:line::@16
line::@2: scope:[line]  from line::@15
  (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0
  if((byte) line::yd#0>=(byte) line::xd#1) goto line::@6
  to:line::@20
line::@16: scope:[line]  from line::@15
  (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0
  if((byte) line::yd#1>=(byte) line::xd#1) goto line::@3
  to:line::@17
line::@3: scope:[line]  from line::@16
  (byte) line_ydxi::y#0 ← (byte) line::y0#0
  (byte) line_ydxi::x#0 ← (byte) line::x0#0
  (byte) line_ydxi::y1#0 ← (byte) line::y1#0
  (byte) line_ydxi::yd#0 ← (byte) line::yd#1
  (byte) line_ydxi::xd#0 ← (byte) line::xd#1
  call line_ydxi param-assignment
  to:line::@return
line::@17: scope:[line]  from line::@16
  (byte) line_xdyi::x#0 ← (byte) line::x0#0
  (byte) line_xdyi::y#0 ← (byte) line::y0#0
  (byte) line_xdyi::x1#0 ← (byte) line::x1#0
  (byte) line_xdyi::xd#0 ← (byte) line::xd#1
  (byte) line_xdyi::yd#0 ← (byte) line::yd#1
  call line_xdyi param-assignment
  to:line::@return
line::@6: scope:[line]  from line::@2
  (byte) line_ydxd::y#0 ← (byte) line::y1#0
  (byte) line_ydxd::x#0 ← (byte) line::x1#0
  (byte) line_ydxd::y1#0 ← (byte) line::y0#0
  (byte) line_ydxd::yd#0 ← (byte) line::yd#0
  (byte) line_ydxd::xd#0 ← (byte) line::xd#1
  call line_ydxd param-assignment
  to:line::@return
line::@20: scope:[line]  from line::@2
  (byte) line_xdyd::x#0 ← (byte) line::x0#0
  (byte) line_xdyd::y#0 ← (byte) line::y0#0
  (byte) line_xdyd::x1#0 ← (byte) line::x1#0
  (byte) line_xdyd::xd#0 ← (byte) line::xd#1
  (byte) line_xdyd::yd#0 ← (byte) line::yd#0
  call line_xdyd param-assignment
  to:line::@return
line::@9: scope:[line]  from line::@1
  (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0
  if((byte) line::yd#10>=(byte) line::xd#0) goto line::@13
  to:line::@27
line::@23: scope:[line]  from line::@1
  (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0
  if((byte) line::yd#3>=(byte) line::xd#0) goto line::@10
  to:line::@24
line::@10: scope:[line]  from line::@23
  (byte) line_ydxd::y#1 ← (byte) line::y0#0
  (byte) line_ydxd::x#1 ← (byte) line::x0#0
  (byte) line_ydxd::y1#1 ← (byte) line::y1#0
  (byte) line_ydxd::yd#1 ← (byte) line::yd#3
  (byte) line_ydxd::xd#1 ← (byte) line::xd#0
  call line_ydxd param-assignment
  to:line::@return
line::@24: scope:[line]  from line::@23
  (byte) line_xdyd::x#1 ← (byte) line::x1#0
  (byte) line_xdyd::y#1 ← (byte) line::y1#0
  (byte) line_xdyd::x1#1 ← (byte) line::x0#0
  (byte) line_xdyd::xd#1 ← (byte) line::xd#0
  (byte) line_xdyd::yd#1 ← (byte) line::yd#3
  call line_xdyd param-assignment
  to:line::@return
line::@13: scope:[line]  from line::@9
  (byte) line_ydxi::y#1 ← (byte) line::y1#0
  (byte) line_ydxi::x#1 ← (byte) line::x1#0
  (byte) line_ydxi::y1#1 ← (byte) line::y0#0
  (byte) line_ydxi::yd#1 ← (byte) line::yd#10
  (byte) line_ydxi::xd#1 ← (byte) line::xd#0
  call line_ydxi param-assignment
  to:line::@return
line::@27: scope:[line]  from line::@9
  (byte) line_xdyi::x#1 ← (byte) line::x1#0
  (byte) line_xdyi::y#1 ← (byte) line::y1#0
  (byte) line_xdyi::x1#1 ← (byte) line::x0#0
  (byte) line_xdyi::xd#1 ← (byte) line::xd#0
  (byte) line_xdyi::yd#1 ← (byte) line::yd#10
  call line_xdyi param-assignment
  to:line::@return
line::@return: scope:[line]  from line::@10 line::@13 line::@17 line::@20 line::@24 line::@27 line::@3 line::@6
  return 
  to:@return
line_xdyi: scope:[line_xdyi]  from line::@17 line::@27
  (byte) line_xdyi::x1#6 ← phi( line::@17/(byte) line_xdyi::x1#0 line::@27/(byte) line_xdyi::x1#1 )
  (byte) line_xdyi::xd#5 ← phi( line::@17/(byte) line_xdyi::xd#0 line::@27/(byte) line_xdyi::xd#1 )
  (byte) line_xdyi::y#5 ← phi( line::@17/(byte) line_xdyi::y#0 line::@27/(byte) line_xdyi::y#1 )
  (byte) line_xdyi::x#6 ← phi( line::@17/(byte) line_xdyi::x#0 line::@27/(byte) line_xdyi::x#1 )
  (byte) line_xdyi::yd#2 ← phi( line::@17/(byte) line_xdyi::yd#0 line::@27/(byte) line_xdyi::yd#1 )
  (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyi::@1
line_xdyi::@1: scope:[line_xdyi]  from line_xdyi line_xdyi::@2
  (byte) line_xdyi::e#3 ← phi( line_xdyi/(byte) line_xdyi::e#0 line_xdyi::@2/(byte) line_xdyi::e#6 )
  (byte) line_xdyi::y#3 ← phi( line_xdyi/(byte) line_xdyi::y#5 line_xdyi::@2/(byte) line_xdyi::y#6 )
  (byte) line_xdyi::x#3 ← phi( line_xdyi/(byte) line_xdyi::x#6 line_xdyi::@2/(byte) line_xdyi::x#2 )
  (byte) plot::x#0 ← (byte) line_xdyi::x#3
  (byte) plot::y#0 ← (byte) line_xdyi::y#3
  call plot param-assignment
  to:line_xdyi::@5
line_xdyi::@5: scope:[line_xdyi]  from line_xdyi::@1
  (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2
  if((byte) line_xdyi::xd#5>=(byte) line_xdyi::e#1) goto line_xdyi::@2
  to:line_xdyi::@3
line_xdyi::@2: scope:[line_xdyi]  from line_xdyi::@3 line_xdyi::@5
  (byte) line_xdyi::e#6 ← phi( line_xdyi::@3/(byte) line_xdyi::e#2 line_xdyi::@5/(byte) line_xdyi::e#1 )
  (byte) line_xdyi::y#6 ← phi( line_xdyi::@3/(byte) line_xdyi::y#2 line_xdyi::@5/(byte) line_xdyi::y#3 )
  (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_xdyi::x#2<(byte~) line_xdyi::$8) goto line_xdyi::@1
  to:line_xdyi::@return
line_xdyi::@3: scope:[line_xdyi]  from line_xdyi::@5
  (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5
  to:line_xdyi::@2
line_xdyi::@return: scope:[line_xdyi]  from line_xdyi::@2
  return 
  to:@return
line_xdyd: scope:[line_xdyd]  from line::@20 line::@24
  (byte) line_xdyd::x1#6 ← phi( line::@20/(byte) line_xdyd::x1#0 line::@24/(byte) line_xdyd::x1#1 )
  (byte) line_xdyd::xd#5 ← phi( line::@20/(byte) line_xdyd::xd#0 line::@24/(byte) line_xdyd::xd#1 )
  (byte) line_xdyd::y#5 ← phi( line::@20/(byte) line_xdyd::y#0 line::@24/(byte) line_xdyd::y#1 )
  (byte) line_xdyd::x#6 ← phi( line::@20/(byte) line_xdyd::x#0 line::@24/(byte) line_xdyd::x#1 )
  (byte) line_xdyd::yd#2 ← phi( line::@20/(byte) line_xdyd::yd#0 line::@24/(byte) line_xdyd::yd#1 )
  (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyd::@1
line_xdyd::@1: scope:[line_xdyd]  from line_xdyd line_xdyd::@2
  (byte) line_xdyd::e#3 ← phi( line_xdyd/(byte) line_xdyd::e#0 line_xdyd::@2/(byte) line_xdyd::e#6 )
  (byte) line_xdyd::y#3 ← phi( line_xdyd/(byte) line_xdyd::y#5 line_xdyd::@2/(byte) line_xdyd::y#6 )
  (byte) line_xdyd::x#3 ← phi( line_xdyd/(byte) line_xdyd::x#6 line_xdyd::@2/(byte) line_xdyd::x#2 )
  (byte) plot::x#1 ← (byte) line_xdyd::x#3
  (byte) plot::y#1 ← (byte) line_xdyd::y#3
  call plot param-assignment
  to:line_xdyd::@5
line_xdyd::@5: scope:[line_xdyd]  from line_xdyd::@1
  (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2
  if((byte) line_xdyd::xd#5>=(byte) line_xdyd::e#1) goto line_xdyd::@2
  to:line_xdyd::@3
line_xdyd::@2: scope:[line_xdyd]  from line_xdyd::@3 line_xdyd::@5
  (byte) line_xdyd::e#6 ← phi( line_xdyd::@3/(byte) line_xdyd::e#2 line_xdyd::@5/(byte) line_xdyd::e#1 )
  (byte) line_xdyd::y#6 ← phi( line_xdyd::@3/(byte) line_xdyd::y#2 line_xdyd::@5/(byte) line_xdyd::y#3 )
  (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_xdyd::x#2<(byte~) line_xdyd::$8) goto line_xdyd::@1
  to:line_xdyd::@return
line_xdyd::@3: scope:[line_xdyd]  from line_xdyd::@5
  (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5
  to:line_xdyd::@2
line_xdyd::@return: scope:[line_xdyd]  from line_xdyd::@2
  return 
  to:@return
line_ydxi: scope:[line_ydxi]  from line::@13 line::@3
  (byte) line_ydxi::y1#6 ← phi( line::@13/(byte) line_ydxi::y1#1 line::@3/(byte) line_ydxi::y1#0 )
  (byte) line_ydxi::yd#5 ← phi( line::@13/(byte) line_ydxi::yd#1 line::@3/(byte) line_ydxi::yd#0 )
  (byte) line_ydxi::y#6 ← phi( line::@13/(byte) line_ydxi::y#1 line::@3/(byte) line_ydxi::y#0 )
  (byte) line_ydxi::x#5 ← phi( line::@13/(byte) line_ydxi::x#1 line::@3/(byte) line_ydxi::x#0 )
  (byte) line_ydxi::xd#2 ← phi( line::@13/(byte) line_ydxi::xd#1 line::@3/(byte) line_ydxi::xd#0 )
  (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxi::@1
line_ydxi::@1: scope:[line_ydxi]  from line_ydxi line_ydxi::@2
  (byte) line_ydxi::e#3 ← phi( line_ydxi/(byte) line_ydxi::e#0 line_ydxi::@2/(byte) line_ydxi::e#6 )
  (byte) line_ydxi::y#3 ← phi( line_ydxi/(byte) line_ydxi::y#6 line_ydxi::@2/(byte) line_ydxi::y#2 )
  (byte) line_ydxi::x#3 ← phi( line_ydxi/(byte) line_ydxi::x#5 line_ydxi::@2/(byte) line_ydxi::x#6 )
  (byte) plot::x#2 ← (byte) line_ydxi::x#3
  (byte) plot::y#2 ← (byte) line_ydxi::y#3
  call plot param-assignment
  to:line_ydxi::@5
line_ydxi::@5: scope:[line_ydxi]  from line_ydxi::@1
  (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2
  if((byte) line_ydxi::yd#5>=(byte) line_ydxi::e#1) goto line_ydxi::@2
  to:line_ydxi::@3
line_ydxi::@2: scope:[line_ydxi]  from line_ydxi::@3 line_ydxi::@5
  (byte) line_ydxi::e#6 ← phi( line_ydxi::@3/(byte) line_ydxi::e#2 line_ydxi::@5/(byte) line_ydxi::e#1 )
  (byte) line_ydxi::x#6 ← phi( line_ydxi::@3/(byte) line_ydxi::x#2 line_ydxi::@5/(byte) line_ydxi::x#3 )
  (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_ydxi::y#2<(byte~) line_ydxi::$8) goto line_ydxi::@1
  to:line_ydxi::@return
line_ydxi::@3: scope:[line_ydxi]  from line_ydxi::@5
  (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5
  to:line_ydxi::@2
line_ydxi::@return: scope:[line_ydxi]  from line_ydxi::@2
  return 
  to:@return
line_ydxd: scope:[line_ydxd]  from line::@10 line::@6
  (byte) line_ydxd::y1#6 ← phi( line::@10/(byte) line_ydxd::y1#1 line::@6/(byte) line_ydxd::y1#0 )
  (byte) line_ydxd::yd#5 ← phi( line::@10/(byte) line_ydxd::yd#1 line::@6/(byte) line_ydxd::yd#0 )
  (byte) line_ydxd::y#6 ← phi( line::@10/(byte) line_ydxd::y#1 line::@6/(byte) line_ydxd::y#0 )
  (byte) line_ydxd::x#5 ← phi( line::@10/(byte) line_ydxd::x#1 line::@6/(byte) line_ydxd::x#0 )
  (byte) line_ydxd::xd#2 ← phi( line::@10/(byte) line_ydxd::xd#1 line::@6/(byte) line_ydxd::xd#0 )
  (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxd::@1
line_ydxd::@1: scope:[line_ydxd]  from line_ydxd line_ydxd::@2
  (byte) line_ydxd::e#3 ← phi( line_ydxd/(byte) line_ydxd::e#0 line_ydxd::@2/(byte) line_ydxd::e#6 )
  (byte) line_ydxd::y#3 ← phi( line_ydxd/(byte) line_ydxd::y#6 line_ydxd::@2/(byte) line_ydxd::y#2 )
  (byte) line_ydxd::x#3 ← phi( line_ydxd/(byte) line_ydxd::x#5 line_ydxd::@2/(byte) line_ydxd::x#6 )
  (byte) plot::x#3 ← (byte) line_ydxd::x#3
  (byte) plot::y#3 ← (byte) line_ydxd::y#3
  call plot param-assignment
  to:line_ydxd::@5
line_ydxd::@5: scope:[line_ydxd]  from line_ydxd::@1
  (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2
  if((byte) line_ydxd::yd#5>=(byte) line_ydxd::e#1) goto line_ydxd::@2
  to:line_ydxd::@3
line_ydxd::@2: scope:[line_ydxd]  from line_ydxd::@3 line_ydxd::@5
  (byte) line_ydxd::e#6 ← phi( line_ydxd::@3/(byte) line_ydxd::e#2 line_ydxd::@5/(byte) line_ydxd::e#1 )
  (byte) line_ydxd::x#6 ← phi( line_ydxd::@3/(byte) line_ydxd::x#2 line_ydxd::@5/(byte) line_ydxd::x#3 )
  (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_ydxd::y#2<(byte~) line_ydxd::$8) goto line_ydxd::@1
  to:line_ydxd::@return
line_ydxd::@3: scope:[line_ydxd]  from line_ydxd::@5
  (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5
  to:line_ydxd::@2
line_ydxd::@return: scope:[line_ydxd]  from line_ydxd::@2
  return 
  to:@return
plot: scope:[plot]  from line_xdyd::@1 line_xdyi::@1 line_ydxd::@1 line_ydxi::@1
  (byte) plot::y#4 ← phi( line_xdyd::@1/(byte) plot::y#1 line_xdyi::@1/(byte) plot::y#0 line_ydxd::@1/(byte) plot::y#3 line_ydxi::@1/(byte) plot::y#2 )
  (byte) plot::x#4 ← phi( line_xdyd::@1/(byte) plot::x#1 line_xdyi::@1/(byte) plot::x#0 line_ydxd::@1/(byte) plot::x#3 line_ydxi::@1/(byte) plot::x#2 )
  (byte*) plot::plotter_x#0 ← ((byte*)) (byte/signed byte/word/signed word) 0
  (word) plot::plotter_y#0 ← (byte/signed byte/word/signed word) 0
  (byte~) plot::$0 ← (byte[]) plot_xhi#0 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#1 ← (byte*) plot::plotter_x#0 hi= (byte~) plot::$0
  (byte~) plot::$1 ← (byte[]) plot_xlo#0 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1
  (byte~) plot::$2 ← (byte[]) plot_yhi#0 *idx (byte) plot::y#4
  (word) plot::plotter_y#1 ← (word) plot::plotter_y#0 hi= (byte~) plot::$2
  (byte~) plot::$3 ← (byte[]) plot_ylo#0 *idx (byte) plot::y#4
  (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3
  (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2
  (byte~) plot::$5 ← (byte[]) plot_bit#0 *idx (byte) plot::x#4
  (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5
  *((byte*) plot::plotter#0) ← (byte~) plot::$6
  to:plot::@return
plot::@return: scope:[plot]  from plot
  return 
  to:@return
init_plot_tables: scope:[init_plot_tables]  from main::@3
  (byte) init_plot_tables::bits#0 ← (byte/word/signed word) 128
  (byte) init_plot_tables::x#0 ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@1
init_plot_tables::@1: scope:[init_plot_tables]  from init_plot_tables init_plot_tables::@2
  (byte) init_plot_tables::bits#3 ← phi( init_plot_tables/(byte) init_plot_tables::bits#0 init_plot_tables::@2/(byte) init_plot_tables::bits#4 )
  (byte) init_plot_tables::x#2 ← phi( init_plot_tables/(byte) init_plot_tables::x#0 init_plot_tables::@2/(byte) init_plot_tables::x#1 )
  (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248
  *((byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0
  (byte~) init_plot_tables::$1 ← > (byte*) BITMAP#0
  *((byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$1
  *((byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3
  (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1
  if((byte) init_plot_tables::bits#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@2
  to:init_plot_tables::@5
init_plot_tables::@2: scope:[init_plot_tables]  from init_plot_tables::@1 init_plot_tables::@5
  (byte) init_plot_tables::bits#4 ← phi( init_plot_tables::@1/(byte) init_plot_tables::bits#1 init_plot_tables::@5/(byte) init_plot_tables::bits#2 )
  (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2
  if((byte) init_plot_tables::x#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@1
  to:init_plot_tables::@6
init_plot_tables::@5: scope:[init_plot_tables]  from init_plot_tables::@1
  (byte) init_plot_tables::bits#2 ← (byte/word/signed word) 128
  to:init_plot_tables::@2
init_plot_tables::@6: scope:[init_plot_tables]  from init_plot_tables::@2
  (byte*) init_plot_tables::yoffs#0 ← ((byte*)) (byte/signed byte/word/signed word) 0
  (byte) init_plot_tables::y#0 ← (byte/signed byte/word/signed word) 0
  to:init_plot_tables::@3
init_plot_tables::@3: scope:[init_plot_tables]  from init_plot_tables::@4 init_plot_tables::@6
  (byte*) init_plot_tables::yoffs#2 ← phi( init_plot_tables::@4/(byte*) init_plot_tables::yoffs#4 init_plot_tables::@6/(byte*) init_plot_tables::yoffs#0 )
  (byte) init_plot_tables::y#2 ← phi( init_plot_tables::@4/(byte) init_plot_tables::y#1 init_plot_tables::@6/(byte) init_plot_tables::y#0 )
  (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2
  (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7
  *((byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8
  (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2
  *((byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9
  (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  if((byte~) init_plot_tables::$10!=(byte/signed byte/word/signed word) 7) goto init_plot_tables::@4
  to:init_plot_tables::@7
init_plot_tables::@4: scope:[init_plot_tables]  from init_plot_tables::@3 init_plot_tables::@7
  (byte*) init_plot_tables::yoffs#4 ← phi( init_plot_tables::@3/(byte*) init_plot_tables::yoffs#2 init_plot_tables::@7/(byte*) init_plot_tables::yoffs#1 )
  (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2
  if((byte) init_plot_tables::y#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@3
  to:init_plot_tables::@return
init_plot_tables::@7: scope:[init_plot_tables]  from init_plot_tables::@3
  (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320
  to:init_plot_tables::@4
init_plot_tables::@return: scope:[init_plot_tables]  from init_plot_tables::@4
  return 
  to:@return
init_screen: scope:[init_screen]  from main
  (byte*) init_screen::b#0 ← (byte*) BITMAP#0
  to:init_screen::@1
init_screen::@1: scope:[init_screen]  from init_screen init_screen::@1
  (byte*) init_screen::b#2 ← phi( init_screen/(byte*) init_screen::b#0 init_screen::@1/(byte*) init_screen::b#1 )
  *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0
  (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2
  (byte*~) init_screen::$0 ← (byte*) BITMAP#0 + (word/signed word) 8192
  if((byte*) init_screen::b#1!=(byte*~) init_screen::$0) goto init_screen::@1
  to:init_screen::@3
init_screen::@3: scope:[init_screen]  from init_screen::@1
  (byte*) init_screen::c#0 ← (byte*) SCREEN#0
  to:init_screen::@2
init_screen::@2: scope:[init_screen]  from init_screen::@2 init_screen::@3
  (byte*) init_screen::c#2 ← phi( init_screen::@2/(byte*) init_screen::c#1 init_screen::@3/(byte*) init_screen::c#0 )
  *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20
  (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2
  (byte*~) init_screen::$2 ← (byte*) SCREEN#0 + (word/signed word) 1024
  if((byte*) init_screen::c#1!=(byte*~) init_screen::$2) goto init_screen::@2
  to:init_screen::@return
init_screen::@return: scope:[init_screen]  from init_screen::@2
  return 
  to:@return
@10: scope:[]  from @begin
  call main param-assignment
  to:@end
@end: scope:[]  from @10

Constant (const byte*) BGCOL#0 = ((byte*))53280
Constant (const byte*) FGCOL#0 = ((byte*))53281
Constant (const byte*) D018#0 = ((byte*))53272
Constant (const byte*) D011#0 = ((byte*))53265
Constant (const byte) BMM#0 = 32
Constant (const byte) DEN#0 = 16
Constant (const byte) RSEL#0 = 8
Constant (const byte*) SCREEN#0 = ((byte*))1024
Constant (const byte*) BITMAP#0 = ((byte*))8192
Constant (const byte[]) plot_xlo#0 = ((byte*))4096
Constant (const byte[]) plot_xhi#0 = ((byte*))4352
Constant (const byte[]) plot_ylo#0 = ((byte*))4608
Constant (const byte[]) plot_yhi#0 = ((byte*))4864
Constant (const byte[]) plot_bit#0 = ((byte*))5120
Constant (const byte[]) lines_x#0 = { 60, 80, 110, 80, 60, 40, 10, 40, 60 }
Constant (const byte[]) lines_y#0 = { 10, 40, 60, 80, 110, 80, 60, 40, 10 }
Constant (const byte) lines_cnt#0 = 8
Constant (const byte) lines::l#0 = 0
Constant (const byte*) plot::plotter_x#0 = ((byte*))0
Constant (const word) plot::plotter_y#0 = 0
Constant (const byte) init_plot_tables::bits#0 = 128
Constant (const byte) init_plot_tables::x#0 = 0
Constant (const byte) init_plot_tables::bits#2 = 128
Constant (const byte*) init_plot_tables::yoffs#0 = ((byte*))0
Constant (const byte) init_plot_tables::y#0 = 0
Succesful SSA optimization Pass2ConstantIdentification
CONTROL FLOW GRAPH
@begin: scope:[]  from
  to:@10
main: scope:[main]  from @10
  *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0
  *((const byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0
  (byte~) main::$0 ← (const byte) BMM#0 | (const byte) DEN#0
  (byte~) main::$1 ← (byte~) main::$0 | (const byte) RSEL#0
  (byte~) main::$2 ← (byte~) main::$1 | (byte/signed byte/word/signed word) 3
  *((const byte*) D011#0) ← (byte~) main::$2
  *((const byte*) D018#0) ← (byte/signed byte/word/signed word) 24
  call init_screen param-assignment
  to:main::@3
main::@3: scope:[main]  from main
  call init_plot_tables param-assignment
  to:main::@4
main::@4: scope:[main]  from main::@3
  to:main::@1
main::@1: scope:[main]  from main::@4 main::@5
  call lines param-assignment
  to:main::@5
main::@5: scope:[main]  from main::@1
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@5
  return 
  to:@return
lines: scope:[lines]  from main::@1
  to:lines::@1
lines::@1: scope:[lines]  from lines lines::@3
  (byte) lines::l#2 ← phi( lines/(const byte) lines::l#0 lines::@3/(byte) lines::l#1 )
  (byte~) lines::$0 ← (const byte[]) lines_x#0 *idx (byte) lines::l#2
  (byte~) lines::$1 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$2 ← (const byte[]) lines_x#0 *idx (byte~) lines::$1
  (byte~) lines::$3 ← (const byte[]) lines_y#0 *idx (byte) lines::l#2
  (byte~) lines::$4 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$5 ← (const byte[]) lines_y#0 *idx (byte~) lines::$4
  (byte) line::x0#0 ← (byte~) lines::$0
  (byte) line::x1#0 ← (byte~) lines::$2
  (byte) line::y0#0 ← (byte~) lines::$3
  (byte) line::y1#0 ← (byte~) lines::$5
  call line param-assignment
  to:lines::@3
lines::@3: scope:[lines]  from lines::@1
  (byte) lines::l#1 ← ++ (byte) lines::l#2
  if((byte) lines::l#1<(const byte) lines_cnt#0) goto lines::@1
  to:lines::@return
lines::@return: scope:[lines]  from lines::@3
  return 
  to:@return
line: scope:[line]  from lines::@1
  if((byte) line::x0#0>=(byte) line::x1#0) goto line::@1
  to:line::@15
line::@1: scope:[line]  from line
  (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0
  if((byte) line::y0#0>=(byte) line::y1#0) goto line::@9
  to:line::@23
line::@15: scope:[line]  from line
  (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0
  if((byte) line::y0#0>=(byte) line::y1#0) goto line::@2
  to:line::@16
line::@2: scope:[line]  from line::@15
  (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0
  if((byte) line::yd#0>=(byte) line::xd#1) goto line::@6
  to:line::@20
line::@16: scope:[line]  from line::@15
  (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0
  if((byte) line::yd#1>=(byte) line::xd#1) goto line::@3
  to:line::@17
line::@3: scope:[line]  from line::@16
  (byte) line_ydxi::y#0 ← (byte) line::y0#0
  (byte) line_ydxi::x#0 ← (byte) line::x0#0
  (byte) line_ydxi::y1#0 ← (byte) line::y1#0
  (byte) line_ydxi::yd#0 ← (byte) line::yd#1
  (byte) line_ydxi::xd#0 ← (byte) line::xd#1
  call line_ydxi param-assignment
  to:line::@return
line::@17: scope:[line]  from line::@16
  (byte) line_xdyi::x#0 ← (byte) line::x0#0
  (byte) line_xdyi::y#0 ← (byte) line::y0#0
  (byte) line_xdyi::x1#0 ← (byte) line::x1#0
  (byte) line_xdyi::xd#0 ← (byte) line::xd#1
  (byte) line_xdyi::yd#0 ← (byte) line::yd#1
  call line_xdyi param-assignment
  to:line::@return
line::@6: scope:[line]  from line::@2
  (byte) line_ydxd::y#0 ← (byte) line::y1#0
  (byte) line_ydxd::x#0 ← (byte) line::x1#0
  (byte) line_ydxd::y1#0 ← (byte) line::y0#0
  (byte) line_ydxd::yd#0 ← (byte) line::yd#0
  (byte) line_ydxd::xd#0 ← (byte) line::xd#1
  call line_ydxd param-assignment
  to:line::@return
line::@20: scope:[line]  from line::@2
  (byte) line_xdyd::x#0 ← (byte) line::x0#0
  (byte) line_xdyd::y#0 ← (byte) line::y0#0
  (byte) line_xdyd::x1#0 ← (byte) line::x1#0
  (byte) line_xdyd::xd#0 ← (byte) line::xd#1
  (byte) line_xdyd::yd#0 ← (byte) line::yd#0
  call line_xdyd param-assignment
  to:line::@return
line::@9: scope:[line]  from line::@1
  (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0
  if((byte) line::yd#10>=(byte) line::xd#0) goto line::@13
  to:line::@27
line::@23: scope:[line]  from line::@1
  (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0
  if((byte) line::yd#3>=(byte) line::xd#0) goto line::@10
  to:line::@24
line::@10: scope:[line]  from line::@23
  (byte) line_ydxd::y#1 ← (byte) line::y0#0
  (byte) line_ydxd::x#1 ← (byte) line::x0#0
  (byte) line_ydxd::y1#1 ← (byte) line::y1#0
  (byte) line_ydxd::yd#1 ← (byte) line::yd#3
  (byte) line_ydxd::xd#1 ← (byte) line::xd#0
  call line_ydxd param-assignment
  to:line::@return
line::@24: scope:[line]  from line::@23
  (byte) line_xdyd::x#1 ← (byte) line::x1#0
  (byte) line_xdyd::y#1 ← (byte) line::y1#0
  (byte) line_xdyd::x1#1 ← (byte) line::x0#0
  (byte) line_xdyd::xd#1 ← (byte) line::xd#0
  (byte) line_xdyd::yd#1 ← (byte) line::yd#3
  call line_xdyd param-assignment
  to:line::@return
line::@13: scope:[line]  from line::@9
  (byte) line_ydxi::y#1 ← (byte) line::y1#0
  (byte) line_ydxi::x#1 ← (byte) line::x1#0
  (byte) line_ydxi::y1#1 ← (byte) line::y0#0
  (byte) line_ydxi::yd#1 ← (byte) line::yd#10
  (byte) line_ydxi::xd#1 ← (byte) line::xd#0
  call line_ydxi param-assignment
  to:line::@return
line::@27: scope:[line]  from line::@9
  (byte) line_xdyi::x#1 ← (byte) line::x1#0
  (byte) line_xdyi::y#1 ← (byte) line::y1#0
  (byte) line_xdyi::x1#1 ← (byte) line::x0#0
  (byte) line_xdyi::xd#1 ← (byte) line::xd#0
  (byte) line_xdyi::yd#1 ← (byte) line::yd#10
  call line_xdyi param-assignment
  to:line::@return
line::@return: scope:[line]  from line::@10 line::@13 line::@17 line::@20 line::@24 line::@27 line::@3 line::@6
  return 
  to:@return
line_xdyi: scope:[line_xdyi]  from line::@17 line::@27
  (byte) line_xdyi::x1#6 ← phi( line::@17/(byte) line_xdyi::x1#0 line::@27/(byte) line_xdyi::x1#1 )
  (byte) line_xdyi::xd#5 ← phi( line::@17/(byte) line_xdyi::xd#0 line::@27/(byte) line_xdyi::xd#1 )
  (byte) line_xdyi::y#5 ← phi( line::@17/(byte) line_xdyi::y#0 line::@27/(byte) line_xdyi::y#1 )
  (byte) line_xdyi::x#6 ← phi( line::@17/(byte) line_xdyi::x#0 line::@27/(byte) line_xdyi::x#1 )
  (byte) line_xdyi::yd#2 ← phi( line::@17/(byte) line_xdyi::yd#0 line::@27/(byte) line_xdyi::yd#1 )
  (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyi::@1
line_xdyi::@1: scope:[line_xdyi]  from line_xdyi line_xdyi::@2
  (byte) line_xdyi::e#3 ← phi( line_xdyi/(byte) line_xdyi::e#0 line_xdyi::@2/(byte) line_xdyi::e#6 )
  (byte) line_xdyi::y#3 ← phi( line_xdyi/(byte) line_xdyi::y#5 line_xdyi::@2/(byte) line_xdyi::y#6 )
  (byte) line_xdyi::x#3 ← phi( line_xdyi/(byte) line_xdyi::x#6 line_xdyi::@2/(byte) line_xdyi::x#2 )
  (byte) plot::x#0 ← (byte) line_xdyi::x#3
  (byte) plot::y#0 ← (byte) line_xdyi::y#3
  call plot param-assignment
  to:line_xdyi::@5
line_xdyi::@5: scope:[line_xdyi]  from line_xdyi::@1
  (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2
  if((byte) line_xdyi::xd#5>=(byte) line_xdyi::e#1) goto line_xdyi::@2
  to:line_xdyi::@3
line_xdyi::@2: scope:[line_xdyi]  from line_xdyi::@3 line_xdyi::@5
  (byte) line_xdyi::e#6 ← phi( line_xdyi::@3/(byte) line_xdyi::e#2 line_xdyi::@5/(byte) line_xdyi::e#1 )
  (byte) line_xdyi::y#6 ← phi( line_xdyi::@3/(byte) line_xdyi::y#2 line_xdyi::@5/(byte) line_xdyi::y#3 )
  (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_xdyi::x#2<(byte~) line_xdyi::$8) goto line_xdyi::@1
  to:line_xdyi::@return
line_xdyi::@3: scope:[line_xdyi]  from line_xdyi::@5
  (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5
  to:line_xdyi::@2
line_xdyi::@return: scope:[line_xdyi]  from line_xdyi::@2
  return 
  to:@return
line_xdyd: scope:[line_xdyd]  from line::@20 line::@24
  (byte) line_xdyd::x1#6 ← phi( line::@20/(byte) line_xdyd::x1#0 line::@24/(byte) line_xdyd::x1#1 )
  (byte) line_xdyd::xd#5 ← phi( line::@20/(byte) line_xdyd::xd#0 line::@24/(byte) line_xdyd::xd#1 )
  (byte) line_xdyd::y#5 ← phi( line::@20/(byte) line_xdyd::y#0 line::@24/(byte) line_xdyd::y#1 )
  (byte) line_xdyd::x#6 ← phi( line::@20/(byte) line_xdyd::x#0 line::@24/(byte) line_xdyd::x#1 )
  (byte) line_xdyd::yd#2 ← phi( line::@20/(byte) line_xdyd::yd#0 line::@24/(byte) line_xdyd::yd#1 )
  (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyd::@1
line_xdyd::@1: scope:[line_xdyd]  from line_xdyd line_xdyd::@2
  (byte) line_xdyd::e#3 ← phi( line_xdyd/(byte) line_xdyd::e#0 line_xdyd::@2/(byte) line_xdyd::e#6 )
  (byte) line_xdyd::y#3 ← phi( line_xdyd/(byte) line_xdyd::y#5 line_xdyd::@2/(byte) line_xdyd::y#6 )
  (byte) line_xdyd::x#3 ← phi( line_xdyd/(byte) line_xdyd::x#6 line_xdyd::@2/(byte) line_xdyd::x#2 )
  (byte) plot::x#1 ← (byte) line_xdyd::x#3
  (byte) plot::y#1 ← (byte) line_xdyd::y#3
  call plot param-assignment
  to:line_xdyd::@5
line_xdyd::@5: scope:[line_xdyd]  from line_xdyd::@1
  (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2
  if((byte) line_xdyd::xd#5>=(byte) line_xdyd::e#1) goto line_xdyd::@2
  to:line_xdyd::@3
line_xdyd::@2: scope:[line_xdyd]  from line_xdyd::@3 line_xdyd::@5
  (byte) line_xdyd::e#6 ← phi( line_xdyd::@3/(byte) line_xdyd::e#2 line_xdyd::@5/(byte) line_xdyd::e#1 )
  (byte) line_xdyd::y#6 ← phi( line_xdyd::@3/(byte) line_xdyd::y#2 line_xdyd::@5/(byte) line_xdyd::y#3 )
  (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_xdyd::x#2<(byte~) line_xdyd::$8) goto line_xdyd::@1
  to:line_xdyd::@return
line_xdyd::@3: scope:[line_xdyd]  from line_xdyd::@5
  (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5
  to:line_xdyd::@2
line_xdyd::@return: scope:[line_xdyd]  from line_xdyd::@2
  return 
  to:@return
line_ydxi: scope:[line_ydxi]  from line::@13 line::@3
  (byte) line_ydxi::y1#6 ← phi( line::@13/(byte) line_ydxi::y1#1 line::@3/(byte) line_ydxi::y1#0 )
  (byte) line_ydxi::yd#5 ← phi( line::@13/(byte) line_ydxi::yd#1 line::@3/(byte) line_ydxi::yd#0 )
  (byte) line_ydxi::y#6 ← phi( line::@13/(byte) line_ydxi::y#1 line::@3/(byte) line_ydxi::y#0 )
  (byte) line_ydxi::x#5 ← phi( line::@13/(byte) line_ydxi::x#1 line::@3/(byte) line_ydxi::x#0 )
  (byte) line_ydxi::xd#2 ← phi( line::@13/(byte) line_ydxi::xd#1 line::@3/(byte) line_ydxi::xd#0 )
  (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxi::@1
line_ydxi::@1: scope:[line_ydxi]  from line_ydxi line_ydxi::@2
  (byte) line_ydxi::e#3 ← phi( line_ydxi/(byte) line_ydxi::e#0 line_ydxi::@2/(byte) line_ydxi::e#6 )
  (byte) line_ydxi::y#3 ← phi( line_ydxi/(byte) line_ydxi::y#6 line_ydxi::@2/(byte) line_ydxi::y#2 )
  (byte) line_ydxi::x#3 ← phi( line_ydxi/(byte) line_ydxi::x#5 line_ydxi::@2/(byte) line_ydxi::x#6 )
  (byte) plot::x#2 ← (byte) line_ydxi::x#3
  (byte) plot::y#2 ← (byte) line_ydxi::y#3
  call plot param-assignment
  to:line_ydxi::@5
line_ydxi::@5: scope:[line_ydxi]  from line_ydxi::@1
  (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2
  if((byte) line_ydxi::yd#5>=(byte) line_ydxi::e#1) goto line_ydxi::@2
  to:line_ydxi::@3
line_ydxi::@2: scope:[line_ydxi]  from line_ydxi::@3 line_ydxi::@5
  (byte) line_ydxi::e#6 ← phi( line_ydxi::@3/(byte) line_ydxi::e#2 line_ydxi::@5/(byte) line_ydxi::e#1 )
  (byte) line_ydxi::x#6 ← phi( line_ydxi::@3/(byte) line_ydxi::x#2 line_ydxi::@5/(byte) line_ydxi::x#3 )
  (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_ydxi::y#2<(byte~) line_ydxi::$8) goto line_ydxi::@1
  to:line_ydxi::@return
line_ydxi::@3: scope:[line_ydxi]  from line_ydxi::@5
  (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5
  to:line_ydxi::@2
line_ydxi::@return: scope:[line_ydxi]  from line_ydxi::@2
  return 
  to:@return
line_ydxd: scope:[line_ydxd]  from line::@10 line::@6
  (byte) line_ydxd::y1#6 ← phi( line::@10/(byte) line_ydxd::y1#1 line::@6/(byte) line_ydxd::y1#0 )
  (byte) line_ydxd::yd#5 ← phi( line::@10/(byte) line_ydxd::yd#1 line::@6/(byte) line_ydxd::yd#0 )
  (byte) line_ydxd::y#6 ← phi( line::@10/(byte) line_ydxd::y#1 line::@6/(byte) line_ydxd::y#0 )
  (byte) line_ydxd::x#5 ← phi( line::@10/(byte) line_ydxd::x#1 line::@6/(byte) line_ydxd::x#0 )
  (byte) line_ydxd::xd#2 ← phi( line::@10/(byte) line_ydxd::xd#1 line::@6/(byte) line_ydxd::xd#0 )
  (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxd::@1
line_ydxd::@1: scope:[line_ydxd]  from line_ydxd line_ydxd::@2
  (byte) line_ydxd::e#3 ← phi( line_ydxd/(byte) line_ydxd::e#0 line_ydxd::@2/(byte) line_ydxd::e#6 )
  (byte) line_ydxd::y#3 ← phi( line_ydxd/(byte) line_ydxd::y#6 line_ydxd::@2/(byte) line_ydxd::y#2 )
  (byte) line_ydxd::x#3 ← phi( line_ydxd/(byte) line_ydxd::x#5 line_ydxd::@2/(byte) line_ydxd::x#6 )
  (byte) plot::x#3 ← (byte) line_ydxd::x#3
  (byte) plot::y#3 ← (byte) line_ydxd::y#3
  call plot param-assignment
  to:line_ydxd::@5
line_ydxd::@5: scope:[line_ydxd]  from line_ydxd::@1
  (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2
  if((byte) line_ydxd::yd#5>=(byte) line_ydxd::e#1) goto line_ydxd::@2
  to:line_ydxd::@3
line_ydxd::@2: scope:[line_ydxd]  from line_ydxd::@3 line_ydxd::@5
  (byte) line_ydxd::e#6 ← phi( line_ydxd::@3/(byte) line_ydxd::e#2 line_ydxd::@5/(byte) line_ydxd::e#1 )
  (byte) line_ydxd::x#6 ← phi( line_ydxd::@3/(byte) line_ydxd::x#2 line_ydxd::@5/(byte) line_ydxd::x#3 )
  (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_ydxd::y#2<(byte~) line_ydxd::$8) goto line_ydxd::@1
  to:line_ydxd::@return
line_ydxd::@3: scope:[line_ydxd]  from line_ydxd::@5
  (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5
  to:line_ydxd::@2
line_ydxd::@return: scope:[line_ydxd]  from line_ydxd::@2
  return 
  to:@return
plot: scope:[plot]  from line_xdyd::@1 line_xdyi::@1 line_ydxd::@1 line_ydxi::@1
  (byte) plot::y#4 ← phi( line_xdyd::@1/(byte) plot::y#1 line_xdyi::@1/(byte) plot::y#0 line_ydxd::@1/(byte) plot::y#3 line_ydxi::@1/(byte) plot::y#2 )
  (byte) plot::x#4 ← phi( line_xdyd::@1/(byte) plot::x#1 line_xdyi::@1/(byte) plot::x#0 line_ydxd::@1/(byte) plot::x#3 line_ydxi::@1/(byte) plot::x#2 )
  (byte~) plot::$0 ← (const byte[]) plot_xhi#0 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#1 ← (const byte*) plot::plotter_x#0 hi= (byte~) plot::$0
  (byte~) plot::$1 ← (const byte[]) plot_xlo#0 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1
  (byte~) plot::$2 ← (const byte[]) plot_yhi#0 *idx (byte) plot::y#4
  (word) plot::plotter_y#1 ← (const word) plot::plotter_y#0 hi= (byte~) plot::$2
  (byte~) plot::$3 ← (const byte[]) plot_ylo#0 *idx (byte) plot::y#4
  (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3
  (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2
  (byte~) plot::$5 ← (const byte[]) plot_bit#0 *idx (byte) plot::x#4
  (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5
  *((byte*) plot::plotter#0) ← (byte~) plot::$6
  to:plot::@return
plot::@return: scope:[plot]  from plot
  return 
  to:@return
init_plot_tables: scope:[init_plot_tables]  from main::@3
  to:init_plot_tables::@1
init_plot_tables::@1: scope:[init_plot_tables]  from init_plot_tables init_plot_tables::@2
  (byte) init_plot_tables::bits#3 ← phi( init_plot_tables/(const byte) init_plot_tables::bits#0 init_plot_tables::@2/(byte) init_plot_tables::bits#4 )
  (byte) init_plot_tables::x#2 ← phi( init_plot_tables/(const byte) init_plot_tables::x#0 init_plot_tables::@2/(byte) init_plot_tables::x#1 )
  (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248
  *((const byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0
  (byte~) init_plot_tables::$1 ← > (const byte*) BITMAP#0
  *((const byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$1
  *((const byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3
  (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1
  if((byte) init_plot_tables::bits#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@2
  to:init_plot_tables::@5
init_plot_tables::@2: scope:[init_plot_tables]  from init_plot_tables::@1 init_plot_tables::@5
  (byte) init_plot_tables::bits#4 ← phi( init_plot_tables::@1/(byte) init_plot_tables::bits#1 init_plot_tables::@5/(const byte) init_plot_tables::bits#2 )
  (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2
  if((byte) init_plot_tables::x#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@1
  to:init_plot_tables::@6
init_plot_tables::@5: scope:[init_plot_tables]  from init_plot_tables::@1
  to:init_plot_tables::@2
init_plot_tables::@6: scope:[init_plot_tables]  from init_plot_tables::@2
  to:init_plot_tables::@3
init_plot_tables::@3: scope:[init_plot_tables]  from init_plot_tables::@4 init_plot_tables::@6
  (byte*) init_plot_tables::yoffs#2 ← phi( init_plot_tables::@4/(byte*) init_plot_tables::yoffs#4 init_plot_tables::@6/(const byte*) init_plot_tables::yoffs#0 )
  (byte) init_plot_tables::y#2 ← phi( init_plot_tables::@4/(byte) init_plot_tables::y#1 init_plot_tables::@6/(const byte) init_plot_tables::y#0 )
  (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2
  (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7
  *((const byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8
  (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2
  *((const byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9
  (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  if((byte~) init_plot_tables::$10!=(byte/signed byte/word/signed word) 7) goto init_plot_tables::@4
  to:init_plot_tables::@7
init_plot_tables::@4: scope:[init_plot_tables]  from init_plot_tables::@3 init_plot_tables::@7
  (byte*) init_plot_tables::yoffs#4 ← phi( init_plot_tables::@3/(byte*) init_plot_tables::yoffs#2 init_plot_tables::@7/(byte*) init_plot_tables::yoffs#1 )
  (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2
  if((byte) init_plot_tables::y#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@3
  to:init_plot_tables::@return
init_plot_tables::@7: scope:[init_plot_tables]  from init_plot_tables::@3
  (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320
  to:init_plot_tables::@4
init_plot_tables::@return: scope:[init_plot_tables]  from init_plot_tables::@4
  return 
  to:@return
init_screen: scope:[init_screen]  from main
  (byte*) init_screen::b#0 ← (const byte*) BITMAP#0
  to:init_screen::@1
init_screen::@1: scope:[init_screen]  from init_screen init_screen::@1
  (byte*) init_screen::b#2 ← phi( init_screen/(byte*) init_screen::b#0 init_screen::@1/(byte*) init_screen::b#1 )
  *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0
  (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2
  (byte*~) init_screen::$0 ← (const byte*) BITMAP#0 + (word/signed word) 8192
  if((byte*) init_screen::b#1!=(byte*~) init_screen::$0) goto init_screen::@1
  to:init_screen::@3
init_screen::@3: scope:[init_screen]  from init_screen::@1
  (byte*) init_screen::c#0 ← (const byte*) SCREEN#0
  to:init_screen::@2
init_screen::@2: scope:[init_screen]  from init_screen::@2 init_screen::@3
  (byte*) init_screen::c#2 ← phi( init_screen::@2/(byte*) init_screen::c#1 init_screen::@3/(byte*) init_screen::c#0 )
  *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20
  (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2
  (byte*~) init_screen::$2 ← (const byte*) SCREEN#0 + (word/signed word) 1024
  if((byte*) init_screen::c#1!=(byte*~) init_screen::$2) goto init_screen::@2
  to:init_screen::@return
init_screen::@return: scope:[init_screen]  from init_screen::@2
  return 
  to:@return
@10: scope:[]  from @begin
  call main param-assignment
  to:@end
@end: scope:[]  from @10

Constant (const byte) main::$0 = BMM#0|DEN#0
Constant (const byte) init_plot_tables::$1 = >BITMAP#0
Constant (const byte*) init_screen::b#0 = BITMAP#0
Constant (const byte*) init_screen::$0 = BITMAP#0+8192
Constant (const byte*) init_screen::c#0 = SCREEN#0
Constant (const byte*) init_screen::$2 = SCREEN#0+1024
Succesful SSA optimization Pass2ConstantIdentification
CONTROL FLOW GRAPH
@begin: scope:[]  from
  to:@10
main: scope:[main]  from @10
  *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0
  *((const byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0
  (byte~) main::$1 ← (const byte) main::$0 | (const byte) RSEL#0
  (byte~) main::$2 ← (byte~) main::$1 | (byte/signed byte/word/signed word) 3
  *((const byte*) D011#0) ← (byte~) main::$2
  *((const byte*) D018#0) ← (byte/signed byte/word/signed word) 24
  call init_screen param-assignment
  to:main::@3
main::@3: scope:[main]  from main
  call init_plot_tables param-assignment
  to:main::@4
main::@4: scope:[main]  from main::@3
  to:main::@1
main::@1: scope:[main]  from main::@4 main::@5
  call lines param-assignment
  to:main::@5
main::@5: scope:[main]  from main::@1
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@5
  return 
  to:@return
lines: scope:[lines]  from main::@1
  to:lines::@1
lines::@1: scope:[lines]  from lines lines::@3
  (byte) lines::l#2 ← phi( lines/(const byte) lines::l#0 lines::@3/(byte) lines::l#1 )
  (byte~) lines::$0 ← (const byte[]) lines_x#0 *idx (byte) lines::l#2
  (byte~) lines::$1 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$2 ← (const byte[]) lines_x#0 *idx (byte~) lines::$1
  (byte~) lines::$3 ← (const byte[]) lines_y#0 *idx (byte) lines::l#2
  (byte~) lines::$4 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$5 ← (const byte[]) lines_y#0 *idx (byte~) lines::$4
  (byte) line::x0#0 ← (byte~) lines::$0
  (byte) line::x1#0 ← (byte~) lines::$2
  (byte) line::y0#0 ← (byte~) lines::$3
  (byte) line::y1#0 ← (byte~) lines::$5
  call line param-assignment
  to:lines::@3
lines::@3: scope:[lines]  from lines::@1
  (byte) lines::l#1 ← ++ (byte) lines::l#2
  if((byte) lines::l#1<(const byte) lines_cnt#0) goto lines::@1
  to:lines::@return
lines::@return: scope:[lines]  from lines::@3
  return 
  to:@return
line: scope:[line]  from lines::@1
  if((byte) line::x0#0>=(byte) line::x1#0) goto line::@1
  to:line::@15
line::@1: scope:[line]  from line
  (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0
  if((byte) line::y0#0>=(byte) line::y1#0) goto line::@9
  to:line::@23
line::@15: scope:[line]  from line
  (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0
  if((byte) line::y0#0>=(byte) line::y1#0) goto line::@2
  to:line::@16
line::@2: scope:[line]  from line::@15
  (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0
  if((byte) line::yd#0>=(byte) line::xd#1) goto line::@6
  to:line::@20
line::@16: scope:[line]  from line::@15
  (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0
  if((byte) line::yd#1>=(byte) line::xd#1) goto line::@3
  to:line::@17
line::@3: scope:[line]  from line::@16
  (byte) line_ydxi::y#0 ← (byte) line::y0#0
  (byte) line_ydxi::x#0 ← (byte) line::x0#0
  (byte) line_ydxi::y1#0 ← (byte) line::y1#0
  (byte) line_ydxi::yd#0 ← (byte) line::yd#1
  (byte) line_ydxi::xd#0 ← (byte) line::xd#1
  call line_ydxi param-assignment
  to:line::@return
line::@17: scope:[line]  from line::@16
  (byte) line_xdyi::x#0 ← (byte) line::x0#0
  (byte) line_xdyi::y#0 ← (byte) line::y0#0
  (byte) line_xdyi::x1#0 ← (byte) line::x1#0
  (byte) line_xdyi::xd#0 ← (byte) line::xd#1
  (byte) line_xdyi::yd#0 ← (byte) line::yd#1
  call line_xdyi param-assignment
  to:line::@return
line::@6: scope:[line]  from line::@2
  (byte) line_ydxd::y#0 ← (byte) line::y1#0
  (byte) line_ydxd::x#0 ← (byte) line::x1#0
  (byte) line_ydxd::y1#0 ← (byte) line::y0#0
  (byte) line_ydxd::yd#0 ← (byte) line::yd#0
  (byte) line_ydxd::xd#0 ← (byte) line::xd#1
  call line_ydxd param-assignment
  to:line::@return
line::@20: scope:[line]  from line::@2
  (byte) line_xdyd::x#0 ← (byte) line::x0#0
  (byte) line_xdyd::y#0 ← (byte) line::y0#0
  (byte) line_xdyd::x1#0 ← (byte) line::x1#0
  (byte) line_xdyd::xd#0 ← (byte) line::xd#1
  (byte) line_xdyd::yd#0 ← (byte) line::yd#0
  call line_xdyd param-assignment
  to:line::@return
line::@9: scope:[line]  from line::@1
  (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0
  if((byte) line::yd#10>=(byte) line::xd#0) goto line::@13
  to:line::@27
line::@23: scope:[line]  from line::@1
  (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0
  if((byte) line::yd#3>=(byte) line::xd#0) goto line::@10
  to:line::@24
line::@10: scope:[line]  from line::@23
  (byte) line_ydxd::y#1 ← (byte) line::y0#0
  (byte) line_ydxd::x#1 ← (byte) line::x0#0
  (byte) line_ydxd::y1#1 ← (byte) line::y1#0
  (byte) line_ydxd::yd#1 ← (byte) line::yd#3
  (byte) line_ydxd::xd#1 ← (byte) line::xd#0
  call line_ydxd param-assignment
  to:line::@return
line::@24: scope:[line]  from line::@23
  (byte) line_xdyd::x#1 ← (byte) line::x1#0
  (byte) line_xdyd::y#1 ← (byte) line::y1#0
  (byte) line_xdyd::x1#1 ← (byte) line::x0#0
  (byte) line_xdyd::xd#1 ← (byte) line::xd#0
  (byte) line_xdyd::yd#1 ← (byte) line::yd#3
  call line_xdyd param-assignment
  to:line::@return
line::@13: scope:[line]  from line::@9
  (byte) line_ydxi::y#1 ← (byte) line::y1#0
  (byte) line_ydxi::x#1 ← (byte) line::x1#0
  (byte) line_ydxi::y1#1 ← (byte) line::y0#0
  (byte) line_ydxi::yd#1 ← (byte) line::yd#10
  (byte) line_ydxi::xd#1 ← (byte) line::xd#0
  call line_ydxi param-assignment
  to:line::@return
line::@27: scope:[line]  from line::@9
  (byte) line_xdyi::x#1 ← (byte) line::x1#0
  (byte) line_xdyi::y#1 ← (byte) line::y1#0
  (byte) line_xdyi::x1#1 ← (byte) line::x0#0
  (byte) line_xdyi::xd#1 ← (byte) line::xd#0
  (byte) line_xdyi::yd#1 ← (byte) line::yd#10
  call line_xdyi param-assignment
  to:line::@return
line::@return: scope:[line]  from line::@10 line::@13 line::@17 line::@20 line::@24 line::@27 line::@3 line::@6
  return 
  to:@return
line_xdyi: scope:[line_xdyi]  from line::@17 line::@27
  (byte) line_xdyi::x1#6 ← phi( line::@17/(byte) line_xdyi::x1#0 line::@27/(byte) line_xdyi::x1#1 )
  (byte) line_xdyi::xd#5 ← phi( line::@17/(byte) line_xdyi::xd#0 line::@27/(byte) line_xdyi::xd#1 )
  (byte) line_xdyi::y#5 ← phi( line::@17/(byte) line_xdyi::y#0 line::@27/(byte) line_xdyi::y#1 )
  (byte) line_xdyi::x#6 ← phi( line::@17/(byte) line_xdyi::x#0 line::@27/(byte) line_xdyi::x#1 )
  (byte) line_xdyi::yd#2 ← phi( line::@17/(byte) line_xdyi::yd#0 line::@27/(byte) line_xdyi::yd#1 )
  (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyi::@1
line_xdyi::@1: scope:[line_xdyi]  from line_xdyi line_xdyi::@2
  (byte) line_xdyi::e#3 ← phi( line_xdyi/(byte) line_xdyi::e#0 line_xdyi::@2/(byte) line_xdyi::e#6 )
  (byte) line_xdyi::y#3 ← phi( line_xdyi/(byte) line_xdyi::y#5 line_xdyi::@2/(byte) line_xdyi::y#6 )
  (byte) line_xdyi::x#3 ← phi( line_xdyi/(byte) line_xdyi::x#6 line_xdyi::@2/(byte) line_xdyi::x#2 )
  (byte) plot::x#0 ← (byte) line_xdyi::x#3
  (byte) plot::y#0 ← (byte) line_xdyi::y#3
  call plot param-assignment
  to:line_xdyi::@5
line_xdyi::@5: scope:[line_xdyi]  from line_xdyi::@1
  (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2
  if((byte) line_xdyi::xd#5>=(byte) line_xdyi::e#1) goto line_xdyi::@2
  to:line_xdyi::@3
line_xdyi::@2: scope:[line_xdyi]  from line_xdyi::@3 line_xdyi::@5
  (byte) line_xdyi::e#6 ← phi( line_xdyi::@3/(byte) line_xdyi::e#2 line_xdyi::@5/(byte) line_xdyi::e#1 )
  (byte) line_xdyi::y#6 ← phi( line_xdyi::@3/(byte) line_xdyi::y#2 line_xdyi::@5/(byte) line_xdyi::y#3 )
  (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_xdyi::x#2<(byte~) line_xdyi::$8) goto line_xdyi::@1
  to:line_xdyi::@return
line_xdyi::@3: scope:[line_xdyi]  from line_xdyi::@5
  (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5
  to:line_xdyi::@2
line_xdyi::@return: scope:[line_xdyi]  from line_xdyi::@2
  return 
  to:@return
line_xdyd: scope:[line_xdyd]  from line::@20 line::@24
  (byte) line_xdyd::x1#6 ← phi( line::@20/(byte) line_xdyd::x1#0 line::@24/(byte) line_xdyd::x1#1 )
  (byte) line_xdyd::xd#5 ← phi( line::@20/(byte) line_xdyd::xd#0 line::@24/(byte) line_xdyd::xd#1 )
  (byte) line_xdyd::y#5 ← phi( line::@20/(byte) line_xdyd::y#0 line::@24/(byte) line_xdyd::y#1 )
  (byte) line_xdyd::x#6 ← phi( line::@20/(byte) line_xdyd::x#0 line::@24/(byte) line_xdyd::x#1 )
  (byte) line_xdyd::yd#2 ← phi( line::@20/(byte) line_xdyd::yd#0 line::@24/(byte) line_xdyd::yd#1 )
  (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyd::@1
line_xdyd::@1: scope:[line_xdyd]  from line_xdyd line_xdyd::@2
  (byte) line_xdyd::e#3 ← phi( line_xdyd/(byte) line_xdyd::e#0 line_xdyd::@2/(byte) line_xdyd::e#6 )
  (byte) line_xdyd::y#3 ← phi( line_xdyd/(byte) line_xdyd::y#5 line_xdyd::@2/(byte) line_xdyd::y#6 )
  (byte) line_xdyd::x#3 ← phi( line_xdyd/(byte) line_xdyd::x#6 line_xdyd::@2/(byte) line_xdyd::x#2 )
  (byte) plot::x#1 ← (byte) line_xdyd::x#3
  (byte) plot::y#1 ← (byte) line_xdyd::y#3
  call plot param-assignment
  to:line_xdyd::@5
line_xdyd::@5: scope:[line_xdyd]  from line_xdyd::@1
  (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2
  if((byte) line_xdyd::xd#5>=(byte) line_xdyd::e#1) goto line_xdyd::@2
  to:line_xdyd::@3
line_xdyd::@2: scope:[line_xdyd]  from line_xdyd::@3 line_xdyd::@5
  (byte) line_xdyd::e#6 ← phi( line_xdyd::@3/(byte) line_xdyd::e#2 line_xdyd::@5/(byte) line_xdyd::e#1 )
  (byte) line_xdyd::y#6 ← phi( line_xdyd::@3/(byte) line_xdyd::y#2 line_xdyd::@5/(byte) line_xdyd::y#3 )
  (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_xdyd::x#2<(byte~) line_xdyd::$8) goto line_xdyd::@1
  to:line_xdyd::@return
line_xdyd::@3: scope:[line_xdyd]  from line_xdyd::@5
  (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5
  to:line_xdyd::@2
line_xdyd::@return: scope:[line_xdyd]  from line_xdyd::@2
  return 
  to:@return
line_ydxi: scope:[line_ydxi]  from line::@13 line::@3
  (byte) line_ydxi::y1#6 ← phi( line::@13/(byte) line_ydxi::y1#1 line::@3/(byte) line_ydxi::y1#0 )
  (byte) line_ydxi::yd#5 ← phi( line::@13/(byte) line_ydxi::yd#1 line::@3/(byte) line_ydxi::yd#0 )
  (byte) line_ydxi::y#6 ← phi( line::@13/(byte) line_ydxi::y#1 line::@3/(byte) line_ydxi::y#0 )
  (byte) line_ydxi::x#5 ← phi( line::@13/(byte) line_ydxi::x#1 line::@3/(byte) line_ydxi::x#0 )
  (byte) line_ydxi::xd#2 ← phi( line::@13/(byte) line_ydxi::xd#1 line::@3/(byte) line_ydxi::xd#0 )
  (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxi::@1
line_ydxi::@1: scope:[line_ydxi]  from line_ydxi line_ydxi::@2
  (byte) line_ydxi::e#3 ← phi( line_ydxi/(byte) line_ydxi::e#0 line_ydxi::@2/(byte) line_ydxi::e#6 )
  (byte) line_ydxi::y#3 ← phi( line_ydxi/(byte) line_ydxi::y#6 line_ydxi::@2/(byte) line_ydxi::y#2 )
  (byte) line_ydxi::x#3 ← phi( line_ydxi/(byte) line_ydxi::x#5 line_ydxi::@2/(byte) line_ydxi::x#6 )
  (byte) plot::x#2 ← (byte) line_ydxi::x#3
  (byte) plot::y#2 ← (byte) line_ydxi::y#3
  call plot param-assignment
  to:line_ydxi::@5
line_ydxi::@5: scope:[line_ydxi]  from line_ydxi::@1
  (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2
  if((byte) line_ydxi::yd#5>=(byte) line_ydxi::e#1) goto line_ydxi::@2
  to:line_ydxi::@3
line_ydxi::@2: scope:[line_ydxi]  from line_ydxi::@3 line_ydxi::@5
  (byte) line_ydxi::e#6 ← phi( line_ydxi::@3/(byte) line_ydxi::e#2 line_ydxi::@5/(byte) line_ydxi::e#1 )
  (byte) line_ydxi::x#6 ← phi( line_ydxi::@3/(byte) line_ydxi::x#2 line_ydxi::@5/(byte) line_ydxi::x#3 )
  (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_ydxi::y#2<(byte~) line_ydxi::$8) goto line_ydxi::@1
  to:line_ydxi::@return
line_ydxi::@3: scope:[line_ydxi]  from line_ydxi::@5
  (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5
  to:line_ydxi::@2
line_ydxi::@return: scope:[line_ydxi]  from line_ydxi::@2
  return 
  to:@return
line_ydxd: scope:[line_ydxd]  from line::@10 line::@6
  (byte) line_ydxd::y1#6 ← phi( line::@10/(byte) line_ydxd::y1#1 line::@6/(byte) line_ydxd::y1#0 )
  (byte) line_ydxd::yd#5 ← phi( line::@10/(byte) line_ydxd::yd#1 line::@6/(byte) line_ydxd::yd#0 )
  (byte) line_ydxd::y#6 ← phi( line::@10/(byte) line_ydxd::y#1 line::@6/(byte) line_ydxd::y#0 )
  (byte) line_ydxd::x#5 ← phi( line::@10/(byte) line_ydxd::x#1 line::@6/(byte) line_ydxd::x#0 )
  (byte) line_ydxd::xd#2 ← phi( line::@10/(byte) line_ydxd::xd#1 line::@6/(byte) line_ydxd::xd#0 )
  (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxd::@1
line_ydxd::@1: scope:[line_ydxd]  from line_ydxd line_ydxd::@2
  (byte) line_ydxd::e#3 ← phi( line_ydxd/(byte) line_ydxd::e#0 line_ydxd::@2/(byte) line_ydxd::e#6 )
  (byte) line_ydxd::y#3 ← phi( line_ydxd/(byte) line_ydxd::y#6 line_ydxd::@2/(byte) line_ydxd::y#2 )
  (byte) line_ydxd::x#3 ← phi( line_ydxd/(byte) line_ydxd::x#5 line_ydxd::@2/(byte) line_ydxd::x#6 )
  (byte) plot::x#3 ← (byte) line_ydxd::x#3
  (byte) plot::y#3 ← (byte) line_ydxd::y#3
  call plot param-assignment
  to:line_ydxd::@5
line_ydxd::@5: scope:[line_ydxd]  from line_ydxd::@1
  (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2
  if((byte) line_ydxd::yd#5>=(byte) line_ydxd::e#1) goto line_ydxd::@2
  to:line_ydxd::@3
line_ydxd::@2: scope:[line_ydxd]  from line_ydxd::@3 line_ydxd::@5
  (byte) line_ydxd::e#6 ← phi( line_ydxd::@3/(byte) line_ydxd::e#2 line_ydxd::@5/(byte) line_ydxd::e#1 )
  (byte) line_ydxd::x#6 ← phi( line_ydxd::@3/(byte) line_ydxd::x#2 line_ydxd::@5/(byte) line_ydxd::x#3 )
  (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_ydxd::y#2<(byte~) line_ydxd::$8) goto line_ydxd::@1
  to:line_ydxd::@return
line_ydxd::@3: scope:[line_ydxd]  from line_ydxd::@5
  (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5
  to:line_ydxd::@2
line_ydxd::@return: scope:[line_ydxd]  from line_ydxd::@2
  return 
  to:@return
plot: scope:[plot]  from line_xdyd::@1 line_xdyi::@1 line_ydxd::@1 line_ydxi::@1
  (byte) plot::y#4 ← phi( line_xdyd::@1/(byte) plot::y#1 line_xdyi::@1/(byte) plot::y#0 line_ydxd::@1/(byte) plot::y#3 line_ydxi::@1/(byte) plot::y#2 )
  (byte) plot::x#4 ← phi( line_xdyd::@1/(byte) plot::x#1 line_xdyi::@1/(byte) plot::x#0 line_ydxd::@1/(byte) plot::x#3 line_ydxi::@1/(byte) plot::x#2 )
  (byte~) plot::$0 ← (const byte[]) plot_xhi#0 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#1 ← (const byte*) plot::plotter_x#0 hi= (byte~) plot::$0
  (byte~) plot::$1 ← (const byte[]) plot_xlo#0 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1
  (byte~) plot::$2 ← (const byte[]) plot_yhi#0 *idx (byte) plot::y#4
  (word) plot::plotter_y#1 ← (const word) plot::plotter_y#0 hi= (byte~) plot::$2
  (byte~) plot::$3 ← (const byte[]) plot_ylo#0 *idx (byte) plot::y#4
  (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3
  (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2
  (byte~) plot::$5 ← (const byte[]) plot_bit#0 *idx (byte) plot::x#4
  (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5
  *((byte*) plot::plotter#0) ← (byte~) plot::$6
  to:plot::@return
plot::@return: scope:[plot]  from plot
  return 
  to:@return
init_plot_tables: scope:[init_plot_tables]  from main::@3
  to:init_plot_tables::@1
init_plot_tables::@1: scope:[init_plot_tables]  from init_plot_tables init_plot_tables::@2
  (byte) init_plot_tables::bits#3 ← phi( init_plot_tables/(const byte) init_plot_tables::bits#0 init_plot_tables::@2/(byte) init_plot_tables::bits#4 )
  (byte) init_plot_tables::x#2 ← phi( init_plot_tables/(const byte) init_plot_tables::x#0 init_plot_tables::@2/(byte) init_plot_tables::x#1 )
  (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248
  *((const byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0
  *((const byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← (const byte) init_plot_tables::$1
  *((const byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3
  (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1
  if((byte) init_plot_tables::bits#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@2
  to:init_plot_tables::@5
init_plot_tables::@2: scope:[init_plot_tables]  from init_plot_tables::@1 init_plot_tables::@5
  (byte) init_plot_tables::bits#4 ← phi( init_plot_tables::@1/(byte) init_plot_tables::bits#1 init_plot_tables::@5/(const byte) init_plot_tables::bits#2 )
  (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2
  if((byte) init_plot_tables::x#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@1
  to:init_plot_tables::@6
init_plot_tables::@5: scope:[init_plot_tables]  from init_plot_tables::@1
  to:init_plot_tables::@2
init_plot_tables::@6: scope:[init_plot_tables]  from init_plot_tables::@2
  to:init_plot_tables::@3
init_plot_tables::@3: scope:[init_plot_tables]  from init_plot_tables::@4 init_plot_tables::@6
  (byte*) init_plot_tables::yoffs#2 ← phi( init_plot_tables::@4/(byte*) init_plot_tables::yoffs#4 init_plot_tables::@6/(const byte*) init_plot_tables::yoffs#0 )
  (byte) init_plot_tables::y#2 ← phi( init_plot_tables::@4/(byte) init_plot_tables::y#1 init_plot_tables::@6/(const byte) init_plot_tables::y#0 )
  (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2
  (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7
  *((const byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8
  (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2
  *((const byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9
  (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  if((byte~) init_plot_tables::$10!=(byte/signed byte/word/signed word) 7) goto init_plot_tables::@4
  to:init_plot_tables::@7
init_plot_tables::@4: scope:[init_plot_tables]  from init_plot_tables::@3 init_plot_tables::@7
  (byte*) init_plot_tables::yoffs#4 ← phi( init_plot_tables::@3/(byte*) init_plot_tables::yoffs#2 init_plot_tables::@7/(byte*) init_plot_tables::yoffs#1 )
  (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2
  if((byte) init_plot_tables::y#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@3
  to:init_plot_tables::@return
init_plot_tables::@7: scope:[init_plot_tables]  from init_plot_tables::@3
  (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320
  to:init_plot_tables::@4
init_plot_tables::@return: scope:[init_plot_tables]  from init_plot_tables::@4
  return 
  to:@return
init_screen: scope:[init_screen]  from main
  to:init_screen::@1
init_screen::@1: scope:[init_screen]  from init_screen init_screen::@1
  (byte*) init_screen::b#2 ← phi( init_screen/(const byte*) init_screen::b#0 init_screen::@1/(byte*) init_screen::b#1 )
  *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0
  (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2
  if((byte*) init_screen::b#1!=(const byte*) init_screen::$0) goto init_screen::@1
  to:init_screen::@3
init_screen::@3: scope:[init_screen]  from init_screen::@1
  to:init_screen::@2
init_screen::@2: scope:[init_screen]  from init_screen::@2 init_screen::@3
  (byte*) init_screen::c#2 ← phi( init_screen::@2/(byte*) init_screen::c#1 init_screen::@3/(const byte*) init_screen::c#0 )
  *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20
  (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2
  if((byte*) init_screen::c#1!=(const byte*) init_screen::$2) goto init_screen::@2
  to:init_screen::@return
init_screen::@return: scope:[init_screen]  from init_screen::@2
  return 
  to:@return
@10: scope:[]  from @begin
  call main param-assignment
  to:@end
@end: scope:[]  from @10

Constant (const byte) main::$1 = main::$0|RSEL#0
Succesful SSA optimization Pass2ConstantIdentification
CONTROL FLOW GRAPH
@begin: scope:[]  from
  to:@10
main: scope:[main]  from @10
  *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0
  *((const byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0
  (byte~) main::$2 ← (const byte) main::$1 | (byte/signed byte/word/signed word) 3
  *((const byte*) D011#0) ← (byte~) main::$2
  *((const byte*) D018#0) ← (byte/signed byte/word/signed word) 24
  call init_screen param-assignment
  to:main::@3
main::@3: scope:[main]  from main
  call init_plot_tables param-assignment
  to:main::@4
main::@4: scope:[main]  from main::@3
  to:main::@1
main::@1: scope:[main]  from main::@4 main::@5
  call lines param-assignment
  to:main::@5
main::@5: scope:[main]  from main::@1
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@5
  return 
  to:@return
lines: scope:[lines]  from main::@1
  to:lines::@1
lines::@1: scope:[lines]  from lines lines::@3
  (byte) lines::l#2 ← phi( lines/(const byte) lines::l#0 lines::@3/(byte) lines::l#1 )
  (byte~) lines::$0 ← (const byte[]) lines_x#0 *idx (byte) lines::l#2
  (byte~) lines::$1 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$2 ← (const byte[]) lines_x#0 *idx (byte~) lines::$1
  (byte~) lines::$3 ← (const byte[]) lines_y#0 *idx (byte) lines::l#2
  (byte~) lines::$4 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$5 ← (const byte[]) lines_y#0 *idx (byte~) lines::$4
  (byte) line::x0#0 ← (byte~) lines::$0
  (byte) line::x1#0 ← (byte~) lines::$2
  (byte) line::y0#0 ← (byte~) lines::$3
  (byte) line::y1#0 ← (byte~) lines::$5
  call line param-assignment
  to:lines::@3
lines::@3: scope:[lines]  from lines::@1
  (byte) lines::l#1 ← ++ (byte) lines::l#2
  if((byte) lines::l#1<(const byte) lines_cnt#0) goto lines::@1
  to:lines::@return
lines::@return: scope:[lines]  from lines::@3
  return 
  to:@return
line: scope:[line]  from lines::@1
  if((byte) line::x0#0>=(byte) line::x1#0) goto line::@1
  to:line::@15
line::@1: scope:[line]  from line
  (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0
  if((byte) line::y0#0>=(byte) line::y1#0) goto line::@9
  to:line::@23
line::@15: scope:[line]  from line
  (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0
  if((byte) line::y0#0>=(byte) line::y1#0) goto line::@2
  to:line::@16
line::@2: scope:[line]  from line::@15
  (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0
  if((byte) line::yd#0>=(byte) line::xd#1) goto line::@6
  to:line::@20
line::@16: scope:[line]  from line::@15
  (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0
  if((byte) line::yd#1>=(byte) line::xd#1) goto line::@3
  to:line::@17
line::@3: scope:[line]  from line::@16
  (byte) line_ydxi::y#0 ← (byte) line::y0#0
  (byte) line_ydxi::x#0 ← (byte) line::x0#0
  (byte) line_ydxi::y1#0 ← (byte) line::y1#0
  (byte) line_ydxi::yd#0 ← (byte) line::yd#1
  (byte) line_ydxi::xd#0 ← (byte) line::xd#1
  call line_ydxi param-assignment
  to:line::@return
line::@17: scope:[line]  from line::@16
  (byte) line_xdyi::x#0 ← (byte) line::x0#0
  (byte) line_xdyi::y#0 ← (byte) line::y0#0
  (byte) line_xdyi::x1#0 ← (byte) line::x1#0
  (byte) line_xdyi::xd#0 ← (byte) line::xd#1
  (byte) line_xdyi::yd#0 ← (byte) line::yd#1
  call line_xdyi param-assignment
  to:line::@return
line::@6: scope:[line]  from line::@2
  (byte) line_ydxd::y#0 ← (byte) line::y1#0
  (byte) line_ydxd::x#0 ← (byte) line::x1#0
  (byte) line_ydxd::y1#0 ← (byte) line::y0#0
  (byte) line_ydxd::yd#0 ← (byte) line::yd#0
  (byte) line_ydxd::xd#0 ← (byte) line::xd#1
  call line_ydxd param-assignment
  to:line::@return
line::@20: scope:[line]  from line::@2
  (byte) line_xdyd::x#0 ← (byte) line::x0#0
  (byte) line_xdyd::y#0 ← (byte) line::y0#0
  (byte) line_xdyd::x1#0 ← (byte) line::x1#0
  (byte) line_xdyd::xd#0 ← (byte) line::xd#1
  (byte) line_xdyd::yd#0 ← (byte) line::yd#0
  call line_xdyd param-assignment
  to:line::@return
line::@9: scope:[line]  from line::@1
  (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0
  if((byte) line::yd#10>=(byte) line::xd#0) goto line::@13
  to:line::@27
line::@23: scope:[line]  from line::@1
  (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0
  if((byte) line::yd#3>=(byte) line::xd#0) goto line::@10
  to:line::@24
line::@10: scope:[line]  from line::@23
  (byte) line_ydxd::y#1 ← (byte) line::y0#0
  (byte) line_ydxd::x#1 ← (byte) line::x0#0
  (byte) line_ydxd::y1#1 ← (byte) line::y1#0
  (byte) line_ydxd::yd#1 ← (byte) line::yd#3
  (byte) line_ydxd::xd#1 ← (byte) line::xd#0
  call line_ydxd param-assignment
  to:line::@return
line::@24: scope:[line]  from line::@23
  (byte) line_xdyd::x#1 ← (byte) line::x1#0
  (byte) line_xdyd::y#1 ← (byte) line::y1#0
  (byte) line_xdyd::x1#1 ← (byte) line::x0#0
  (byte) line_xdyd::xd#1 ← (byte) line::xd#0
  (byte) line_xdyd::yd#1 ← (byte) line::yd#3
  call line_xdyd param-assignment
  to:line::@return
line::@13: scope:[line]  from line::@9
  (byte) line_ydxi::y#1 ← (byte) line::y1#0
  (byte) line_ydxi::x#1 ← (byte) line::x1#0
  (byte) line_ydxi::y1#1 ← (byte) line::y0#0
  (byte) line_ydxi::yd#1 ← (byte) line::yd#10
  (byte) line_ydxi::xd#1 ← (byte) line::xd#0
  call line_ydxi param-assignment
  to:line::@return
line::@27: scope:[line]  from line::@9
  (byte) line_xdyi::x#1 ← (byte) line::x1#0
  (byte) line_xdyi::y#1 ← (byte) line::y1#0
  (byte) line_xdyi::x1#1 ← (byte) line::x0#0
  (byte) line_xdyi::xd#1 ← (byte) line::xd#0
  (byte) line_xdyi::yd#1 ← (byte) line::yd#10
  call line_xdyi param-assignment
  to:line::@return
line::@return: scope:[line]  from line::@10 line::@13 line::@17 line::@20 line::@24 line::@27 line::@3 line::@6
  return 
  to:@return
line_xdyi: scope:[line_xdyi]  from line::@17 line::@27
  (byte) line_xdyi::x1#6 ← phi( line::@17/(byte) line_xdyi::x1#0 line::@27/(byte) line_xdyi::x1#1 )
  (byte) line_xdyi::xd#5 ← phi( line::@17/(byte) line_xdyi::xd#0 line::@27/(byte) line_xdyi::xd#1 )
  (byte) line_xdyi::y#5 ← phi( line::@17/(byte) line_xdyi::y#0 line::@27/(byte) line_xdyi::y#1 )
  (byte) line_xdyi::x#6 ← phi( line::@17/(byte) line_xdyi::x#0 line::@27/(byte) line_xdyi::x#1 )
  (byte) line_xdyi::yd#2 ← phi( line::@17/(byte) line_xdyi::yd#0 line::@27/(byte) line_xdyi::yd#1 )
  (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyi::@1
line_xdyi::@1: scope:[line_xdyi]  from line_xdyi line_xdyi::@2
  (byte) line_xdyi::e#3 ← phi( line_xdyi/(byte) line_xdyi::e#0 line_xdyi::@2/(byte) line_xdyi::e#6 )
  (byte) line_xdyi::y#3 ← phi( line_xdyi/(byte) line_xdyi::y#5 line_xdyi::@2/(byte) line_xdyi::y#6 )
  (byte) line_xdyi::x#3 ← phi( line_xdyi/(byte) line_xdyi::x#6 line_xdyi::@2/(byte) line_xdyi::x#2 )
  (byte) plot::x#0 ← (byte) line_xdyi::x#3
  (byte) plot::y#0 ← (byte) line_xdyi::y#3
  call plot param-assignment
  to:line_xdyi::@5
line_xdyi::@5: scope:[line_xdyi]  from line_xdyi::@1
  (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2
  if((byte) line_xdyi::xd#5>=(byte) line_xdyi::e#1) goto line_xdyi::@2
  to:line_xdyi::@3
line_xdyi::@2: scope:[line_xdyi]  from line_xdyi::@3 line_xdyi::@5
  (byte) line_xdyi::e#6 ← phi( line_xdyi::@3/(byte) line_xdyi::e#2 line_xdyi::@5/(byte) line_xdyi::e#1 )
  (byte) line_xdyi::y#6 ← phi( line_xdyi::@3/(byte) line_xdyi::y#2 line_xdyi::@5/(byte) line_xdyi::y#3 )
  (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_xdyi::x#2<(byte~) line_xdyi::$8) goto line_xdyi::@1
  to:line_xdyi::@return
line_xdyi::@3: scope:[line_xdyi]  from line_xdyi::@5
  (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5
  to:line_xdyi::@2
line_xdyi::@return: scope:[line_xdyi]  from line_xdyi::@2
  return 
  to:@return
line_xdyd: scope:[line_xdyd]  from line::@20 line::@24
  (byte) line_xdyd::x1#6 ← phi( line::@20/(byte) line_xdyd::x1#0 line::@24/(byte) line_xdyd::x1#1 )
  (byte) line_xdyd::xd#5 ← phi( line::@20/(byte) line_xdyd::xd#0 line::@24/(byte) line_xdyd::xd#1 )
  (byte) line_xdyd::y#5 ← phi( line::@20/(byte) line_xdyd::y#0 line::@24/(byte) line_xdyd::y#1 )
  (byte) line_xdyd::x#6 ← phi( line::@20/(byte) line_xdyd::x#0 line::@24/(byte) line_xdyd::x#1 )
  (byte) line_xdyd::yd#2 ← phi( line::@20/(byte) line_xdyd::yd#0 line::@24/(byte) line_xdyd::yd#1 )
  (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyd::@1
line_xdyd::@1: scope:[line_xdyd]  from line_xdyd line_xdyd::@2
  (byte) line_xdyd::e#3 ← phi( line_xdyd/(byte) line_xdyd::e#0 line_xdyd::@2/(byte) line_xdyd::e#6 )
  (byte) line_xdyd::y#3 ← phi( line_xdyd/(byte) line_xdyd::y#5 line_xdyd::@2/(byte) line_xdyd::y#6 )
  (byte) line_xdyd::x#3 ← phi( line_xdyd/(byte) line_xdyd::x#6 line_xdyd::@2/(byte) line_xdyd::x#2 )
  (byte) plot::x#1 ← (byte) line_xdyd::x#3
  (byte) plot::y#1 ← (byte) line_xdyd::y#3
  call plot param-assignment
  to:line_xdyd::@5
line_xdyd::@5: scope:[line_xdyd]  from line_xdyd::@1
  (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2
  if((byte) line_xdyd::xd#5>=(byte) line_xdyd::e#1) goto line_xdyd::@2
  to:line_xdyd::@3
line_xdyd::@2: scope:[line_xdyd]  from line_xdyd::@3 line_xdyd::@5
  (byte) line_xdyd::e#6 ← phi( line_xdyd::@3/(byte) line_xdyd::e#2 line_xdyd::@5/(byte) line_xdyd::e#1 )
  (byte) line_xdyd::y#6 ← phi( line_xdyd::@3/(byte) line_xdyd::y#2 line_xdyd::@5/(byte) line_xdyd::y#3 )
  (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_xdyd::x#2<(byte~) line_xdyd::$8) goto line_xdyd::@1
  to:line_xdyd::@return
line_xdyd::@3: scope:[line_xdyd]  from line_xdyd::@5
  (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5
  to:line_xdyd::@2
line_xdyd::@return: scope:[line_xdyd]  from line_xdyd::@2
  return 
  to:@return
line_ydxi: scope:[line_ydxi]  from line::@13 line::@3
  (byte) line_ydxi::y1#6 ← phi( line::@13/(byte) line_ydxi::y1#1 line::@3/(byte) line_ydxi::y1#0 )
  (byte) line_ydxi::yd#5 ← phi( line::@13/(byte) line_ydxi::yd#1 line::@3/(byte) line_ydxi::yd#0 )
  (byte) line_ydxi::y#6 ← phi( line::@13/(byte) line_ydxi::y#1 line::@3/(byte) line_ydxi::y#0 )
  (byte) line_ydxi::x#5 ← phi( line::@13/(byte) line_ydxi::x#1 line::@3/(byte) line_ydxi::x#0 )
  (byte) line_ydxi::xd#2 ← phi( line::@13/(byte) line_ydxi::xd#1 line::@3/(byte) line_ydxi::xd#0 )
  (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxi::@1
line_ydxi::@1: scope:[line_ydxi]  from line_ydxi line_ydxi::@2
  (byte) line_ydxi::e#3 ← phi( line_ydxi/(byte) line_ydxi::e#0 line_ydxi::@2/(byte) line_ydxi::e#6 )
  (byte) line_ydxi::y#3 ← phi( line_ydxi/(byte) line_ydxi::y#6 line_ydxi::@2/(byte) line_ydxi::y#2 )
  (byte) line_ydxi::x#3 ← phi( line_ydxi/(byte) line_ydxi::x#5 line_ydxi::@2/(byte) line_ydxi::x#6 )
  (byte) plot::x#2 ← (byte) line_ydxi::x#3
  (byte) plot::y#2 ← (byte) line_ydxi::y#3
  call plot param-assignment
  to:line_ydxi::@5
line_ydxi::@5: scope:[line_ydxi]  from line_ydxi::@1
  (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2
  if((byte) line_ydxi::yd#5>=(byte) line_ydxi::e#1) goto line_ydxi::@2
  to:line_ydxi::@3
line_ydxi::@2: scope:[line_ydxi]  from line_ydxi::@3 line_ydxi::@5
  (byte) line_ydxi::e#6 ← phi( line_ydxi::@3/(byte) line_ydxi::e#2 line_ydxi::@5/(byte) line_ydxi::e#1 )
  (byte) line_ydxi::x#6 ← phi( line_ydxi::@3/(byte) line_ydxi::x#2 line_ydxi::@5/(byte) line_ydxi::x#3 )
  (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_ydxi::y#2<(byte~) line_ydxi::$8) goto line_ydxi::@1
  to:line_ydxi::@return
line_ydxi::@3: scope:[line_ydxi]  from line_ydxi::@5
  (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5
  to:line_ydxi::@2
line_ydxi::@return: scope:[line_ydxi]  from line_ydxi::@2
  return 
  to:@return
line_ydxd: scope:[line_ydxd]  from line::@10 line::@6
  (byte) line_ydxd::y1#6 ← phi( line::@10/(byte) line_ydxd::y1#1 line::@6/(byte) line_ydxd::y1#0 )
  (byte) line_ydxd::yd#5 ← phi( line::@10/(byte) line_ydxd::yd#1 line::@6/(byte) line_ydxd::yd#0 )
  (byte) line_ydxd::y#6 ← phi( line::@10/(byte) line_ydxd::y#1 line::@6/(byte) line_ydxd::y#0 )
  (byte) line_ydxd::x#5 ← phi( line::@10/(byte) line_ydxd::x#1 line::@6/(byte) line_ydxd::x#0 )
  (byte) line_ydxd::xd#2 ← phi( line::@10/(byte) line_ydxd::xd#1 line::@6/(byte) line_ydxd::xd#0 )
  (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxd::@1
line_ydxd::@1: scope:[line_ydxd]  from line_ydxd line_ydxd::@2
  (byte) line_ydxd::e#3 ← phi( line_ydxd/(byte) line_ydxd::e#0 line_ydxd::@2/(byte) line_ydxd::e#6 )
  (byte) line_ydxd::y#3 ← phi( line_ydxd/(byte) line_ydxd::y#6 line_ydxd::@2/(byte) line_ydxd::y#2 )
  (byte) line_ydxd::x#3 ← phi( line_ydxd/(byte) line_ydxd::x#5 line_ydxd::@2/(byte) line_ydxd::x#6 )
  (byte) plot::x#3 ← (byte) line_ydxd::x#3
  (byte) plot::y#3 ← (byte) line_ydxd::y#3
  call plot param-assignment
  to:line_ydxd::@5
line_ydxd::@5: scope:[line_ydxd]  from line_ydxd::@1
  (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2
  if((byte) line_ydxd::yd#5>=(byte) line_ydxd::e#1) goto line_ydxd::@2
  to:line_ydxd::@3
line_ydxd::@2: scope:[line_ydxd]  from line_ydxd::@3 line_ydxd::@5
  (byte) line_ydxd::e#6 ← phi( line_ydxd::@3/(byte) line_ydxd::e#2 line_ydxd::@5/(byte) line_ydxd::e#1 )
  (byte) line_ydxd::x#6 ← phi( line_ydxd::@3/(byte) line_ydxd::x#2 line_ydxd::@5/(byte) line_ydxd::x#3 )
  (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_ydxd::y#2<(byte~) line_ydxd::$8) goto line_ydxd::@1
  to:line_ydxd::@return
line_ydxd::@3: scope:[line_ydxd]  from line_ydxd::@5
  (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5
  to:line_ydxd::@2
line_ydxd::@return: scope:[line_ydxd]  from line_ydxd::@2
  return 
  to:@return
plot: scope:[plot]  from line_xdyd::@1 line_xdyi::@1 line_ydxd::@1 line_ydxi::@1
  (byte) plot::y#4 ← phi( line_xdyd::@1/(byte) plot::y#1 line_xdyi::@1/(byte) plot::y#0 line_ydxd::@1/(byte) plot::y#3 line_ydxi::@1/(byte) plot::y#2 )
  (byte) plot::x#4 ← phi( line_xdyd::@1/(byte) plot::x#1 line_xdyi::@1/(byte) plot::x#0 line_ydxd::@1/(byte) plot::x#3 line_ydxi::@1/(byte) plot::x#2 )
  (byte~) plot::$0 ← (const byte[]) plot_xhi#0 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#1 ← (const byte*) plot::plotter_x#0 hi= (byte~) plot::$0
  (byte~) plot::$1 ← (const byte[]) plot_xlo#0 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1
  (byte~) plot::$2 ← (const byte[]) plot_yhi#0 *idx (byte) plot::y#4
  (word) plot::plotter_y#1 ← (const word) plot::plotter_y#0 hi= (byte~) plot::$2
  (byte~) plot::$3 ← (const byte[]) plot_ylo#0 *idx (byte) plot::y#4
  (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3
  (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2
  (byte~) plot::$5 ← (const byte[]) plot_bit#0 *idx (byte) plot::x#4
  (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5
  *((byte*) plot::plotter#0) ← (byte~) plot::$6
  to:plot::@return
plot::@return: scope:[plot]  from plot
  return 
  to:@return
init_plot_tables: scope:[init_plot_tables]  from main::@3
  to:init_plot_tables::@1
init_plot_tables::@1: scope:[init_plot_tables]  from init_plot_tables init_plot_tables::@2
  (byte) init_plot_tables::bits#3 ← phi( init_plot_tables/(const byte) init_plot_tables::bits#0 init_plot_tables::@2/(byte) init_plot_tables::bits#4 )
  (byte) init_plot_tables::x#2 ← phi( init_plot_tables/(const byte) init_plot_tables::x#0 init_plot_tables::@2/(byte) init_plot_tables::x#1 )
  (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248
  *((const byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0
  *((const byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← (const byte) init_plot_tables::$1
  *((const byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3
  (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1
  if((byte) init_plot_tables::bits#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@2
  to:init_plot_tables::@5
init_plot_tables::@2: scope:[init_plot_tables]  from init_plot_tables::@1 init_plot_tables::@5
  (byte) init_plot_tables::bits#4 ← phi( init_plot_tables::@1/(byte) init_plot_tables::bits#1 init_plot_tables::@5/(const byte) init_plot_tables::bits#2 )
  (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2
  if((byte) init_plot_tables::x#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@1
  to:init_plot_tables::@6
init_plot_tables::@5: scope:[init_plot_tables]  from init_plot_tables::@1
  to:init_plot_tables::@2
init_plot_tables::@6: scope:[init_plot_tables]  from init_plot_tables::@2
  to:init_plot_tables::@3
init_plot_tables::@3: scope:[init_plot_tables]  from init_plot_tables::@4 init_plot_tables::@6
  (byte*) init_plot_tables::yoffs#2 ← phi( init_plot_tables::@4/(byte*) init_plot_tables::yoffs#4 init_plot_tables::@6/(const byte*) init_plot_tables::yoffs#0 )
  (byte) init_plot_tables::y#2 ← phi( init_plot_tables::@4/(byte) init_plot_tables::y#1 init_plot_tables::@6/(const byte) init_plot_tables::y#0 )
  (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2
  (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7
  *((const byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8
  (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2
  *((const byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9
  (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  if((byte~) init_plot_tables::$10!=(byte/signed byte/word/signed word) 7) goto init_plot_tables::@4
  to:init_plot_tables::@7
init_plot_tables::@4: scope:[init_plot_tables]  from init_plot_tables::@3 init_plot_tables::@7
  (byte*) init_plot_tables::yoffs#4 ← phi( init_plot_tables::@3/(byte*) init_plot_tables::yoffs#2 init_plot_tables::@7/(byte*) init_plot_tables::yoffs#1 )
  (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2
  if((byte) init_plot_tables::y#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@3
  to:init_plot_tables::@return
init_plot_tables::@7: scope:[init_plot_tables]  from init_plot_tables::@3
  (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320
  to:init_plot_tables::@4
init_plot_tables::@return: scope:[init_plot_tables]  from init_plot_tables::@4
  return 
  to:@return
init_screen: scope:[init_screen]  from main
  to:init_screen::@1
init_screen::@1: scope:[init_screen]  from init_screen init_screen::@1
  (byte*) init_screen::b#2 ← phi( init_screen/(const byte*) init_screen::b#0 init_screen::@1/(byte*) init_screen::b#1 )
  *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0
  (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2
  if((byte*) init_screen::b#1!=(const byte*) init_screen::$0) goto init_screen::@1
  to:init_screen::@3
init_screen::@3: scope:[init_screen]  from init_screen::@1
  to:init_screen::@2
init_screen::@2: scope:[init_screen]  from init_screen::@2 init_screen::@3
  (byte*) init_screen::c#2 ← phi( init_screen::@2/(byte*) init_screen::c#1 init_screen::@3/(const byte*) init_screen::c#0 )
  *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20
  (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2
  if((byte*) init_screen::c#1!=(const byte*) init_screen::$2) goto init_screen::@2
  to:init_screen::@return
init_screen::@return: scope:[init_screen]  from init_screen::@2
  return 
  to:@return
@10: scope:[]  from @begin
  call main param-assignment
  to:@end
@end: scope:[]  from @10

Constant (const byte) main::$2 = main::$1|3
Succesful SSA optimization Pass2ConstantIdentification
CONTROL FLOW GRAPH
@begin: scope:[]  from
  to:@10
main: scope:[main]  from @10
  *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0
  *((const byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0
  *((const byte*) D011#0) ← (const byte) main::$2
  *((const byte*) D018#0) ← (byte/signed byte/word/signed word) 24
  call init_screen param-assignment
  to:main::@3
main::@3: scope:[main]  from main
  call init_plot_tables param-assignment
  to:main::@4
main::@4: scope:[main]  from main::@3
  to:main::@1
main::@1: scope:[main]  from main::@4 main::@5
  call lines param-assignment
  to:main::@5
main::@5: scope:[main]  from main::@1
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@5
  return 
  to:@return
lines: scope:[lines]  from main::@1
  to:lines::@1
lines::@1: scope:[lines]  from lines lines::@3
  (byte) lines::l#2 ← phi( lines/(const byte) lines::l#0 lines::@3/(byte) lines::l#1 )
  (byte~) lines::$0 ← (const byte[]) lines_x#0 *idx (byte) lines::l#2
  (byte~) lines::$1 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$2 ← (const byte[]) lines_x#0 *idx (byte~) lines::$1
  (byte~) lines::$3 ← (const byte[]) lines_y#0 *idx (byte) lines::l#2
  (byte~) lines::$4 ← (byte) lines::l#2 + (byte/signed byte/word/signed word) 1
  (byte~) lines::$5 ← (const byte[]) lines_y#0 *idx (byte~) lines::$4
  (byte) line::x0#0 ← (byte~) lines::$0
  (byte) line::x1#0 ← (byte~) lines::$2
  (byte) line::y0#0 ← (byte~) lines::$3
  (byte) line::y1#0 ← (byte~) lines::$5
  call line param-assignment
  to:lines::@3
lines::@3: scope:[lines]  from lines::@1
  (byte) lines::l#1 ← ++ (byte) lines::l#2
  if((byte) lines::l#1<(const byte) lines_cnt#0) goto lines::@1
  to:lines::@return
lines::@return: scope:[lines]  from lines::@3
  return 
  to:@return
line: scope:[line]  from lines::@1
  if((byte) line::x0#0>=(byte) line::x1#0) goto line::@1
  to:line::@15
line::@1: scope:[line]  from line
  (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0
  if((byte) line::y0#0>=(byte) line::y1#0) goto line::@9
  to:line::@23
line::@15: scope:[line]  from line
  (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0
  if((byte) line::y0#0>=(byte) line::y1#0) goto line::@2
  to:line::@16
line::@2: scope:[line]  from line::@15
  (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0
  if((byte) line::yd#0>=(byte) line::xd#1) goto line::@6
  to:line::@20
line::@16: scope:[line]  from line::@15
  (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0
  if((byte) line::yd#1>=(byte) line::xd#1) goto line::@3
  to:line::@17
line::@3: scope:[line]  from line::@16
  (byte) line_ydxi::y#0 ← (byte) line::y0#0
  (byte) line_ydxi::x#0 ← (byte) line::x0#0
  (byte) line_ydxi::y1#0 ← (byte) line::y1#0
  (byte) line_ydxi::yd#0 ← (byte) line::yd#1
  (byte) line_ydxi::xd#0 ← (byte) line::xd#1
  call line_ydxi param-assignment
  to:line::@return
line::@17: scope:[line]  from line::@16
  (byte) line_xdyi::x#0 ← (byte) line::x0#0
  (byte) line_xdyi::y#0 ← (byte) line::y0#0
  (byte) line_xdyi::x1#0 ← (byte) line::x1#0
  (byte) line_xdyi::xd#0 ← (byte) line::xd#1
  (byte) line_xdyi::yd#0 ← (byte) line::yd#1
  call line_xdyi param-assignment
  to:line::@return
line::@6: scope:[line]  from line::@2
  (byte) line_ydxd::y#0 ← (byte) line::y1#0
  (byte) line_ydxd::x#0 ← (byte) line::x1#0
  (byte) line_ydxd::y1#0 ← (byte) line::y0#0
  (byte) line_ydxd::yd#0 ← (byte) line::yd#0
  (byte) line_ydxd::xd#0 ← (byte) line::xd#1
  call line_ydxd param-assignment
  to:line::@return
line::@20: scope:[line]  from line::@2
  (byte) line_xdyd::x#0 ← (byte) line::x0#0
  (byte) line_xdyd::y#0 ← (byte) line::y0#0
  (byte) line_xdyd::x1#0 ← (byte) line::x1#0
  (byte) line_xdyd::xd#0 ← (byte) line::xd#1
  (byte) line_xdyd::yd#0 ← (byte) line::yd#0
  call line_xdyd param-assignment
  to:line::@return
line::@9: scope:[line]  from line::@1
  (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0
  if((byte) line::yd#10>=(byte) line::xd#0) goto line::@13
  to:line::@27
line::@23: scope:[line]  from line::@1
  (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0
  if((byte) line::yd#3>=(byte) line::xd#0) goto line::@10
  to:line::@24
line::@10: scope:[line]  from line::@23
  (byte) line_ydxd::y#1 ← (byte) line::y0#0
  (byte) line_ydxd::x#1 ← (byte) line::x0#0
  (byte) line_ydxd::y1#1 ← (byte) line::y1#0
  (byte) line_ydxd::yd#1 ← (byte) line::yd#3
  (byte) line_ydxd::xd#1 ← (byte) line::xd#0
  call line_ydxd param-assignment
  to:line::@return
line::@24: scope:[line]  from line::@23
  (byte) line_xdyd::x#1 ← (byte) line::x1#0
  (byte) line_xdyd::y#1 ← (byte) line::y1#0
  (byte) line_xdyd::x1#1 ← (byte) line::x0#0
  (byte) line_xdyd::xd#1 ← (byte) line::xd#0
  (byte) line_xdyd::yd#1 ← (byte) line::yd#3
  call line_xdyd param-assignment
  to:line::@return
line::@13: scope:[line]  from line::@9
  (byte) line_ydxi::y#1 ← (byte) line::y1#0
  (byte) line_ydxi::x#1 ← (byte) line::x1#0
  (byte) line_ydxi::y1#1 ← (byte) line::y0#0
  (byte) line_ydxi::yd#1 ← (byte) line::yd#10
  (byte) line_ydxi::xd#1 ← (byte) line::xd#0
  call line_ydxi param-assignment
  to:line::@return
line::@27: scope:[line]  from line::@9
  (byte) line_xdyi::x#1 ← (byte) line::x1#0
  (byte) line_xdyi::y#1 ← (byte) line::y1#0
  (byte) line_xdyi::x1#1 ← (byte) line::x0#0
  (byte) line_xdyi::xd#1 ← (byte) line::xd#0
  (byte) line_xdyi::yd#1 ← (byte) line::yd#10
  call line_xdyi param-assignment
  to:line::@return
line::@return: scope:[line]  from line::@10 line::@13 line::@17 line::@20 line::@24 line::@27 line::@3 line::@6
  return 
  to:@return
line_xdyi: scope:[line_xdyi]  from line::@17 line::@27
  (byte) line_xdyi::x1#6 ← phi( line::@17/(byte) line_xdyi::x1#0 line::@27/(byte) line_xdyi::x1#1 )
  (byte) line_xdyi::xd#5 ← phi( line::@17/(byte) line_xdyi::xd#0 line::@27/(byte) line_xdyi::xd#1 )
  (byte) line_xdyi::y#5 ← phi( line::@17/(byte) line_xdyi::y#0 line::@27/(byte) line_xdyi::y#1 )
  (byte) line_xdyi::x#6 ← phi( line::@17/(byte) line_xdyi::x#0 line::@27/(byte) line_xdyi::x#1 )
  (byte) line_xdyi::yd#2 ← phi( line::@17/(byte) line_xdyi::yd#0 line::@27/(byte) line_xdyi::yd#1 )
  (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyi::@1
line_xdyi::@1: scope:[line_xdyi]  from line_xdyi line_xdyi::@2
  (byte) line_xdyi::e#3 ← phi( line_xdyi/(byte) line_xdyi::e#0 line_xdyi::@2/(byte) line_xdyi::e#6 )
  (byte) line_xdyi::y#3 ← phi( line_xdyi/(byte) line_xdyi::y#5 line_xdyi::@2/(byte) line_xdyi::y#6 )
  (byte) line_xdyi::x#3 ← phi( line_xdyi/(byte) line_xdyi::x#6 line_xdyi::@2/(byte) line_xdyi::x#2 )
  (byte) plot::x#0 ← (byte) line_xdyi::x#3
  (byte) plot::y#0 ← (byte) line_xdyi::y#3
  call plot param-assignment
  to:line_xdyi::@5
line_xdyi::@5: scope:[line_xdyi]  from line_xdyi::@1
  (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2
  if((byte) line_xdyi::xd#5>=(byte) line_xdyi::e#1) goto line_xdyi::@2
  to:line_xdyi::@3
line_xdyi::@2: scope:[line_xdyi]  from line_xdyi::@3 line_xdyi::@5
  (byte) line_xdyi::e#6 ← phi( line_xdyi::@3/(byte) line_xdyi::e#2 line_xdyi::@5/(byte) line_xdyi::e#1 )
  (byte) line_xdyi::y#6 ← phi( line_xdyi::@3/(byte) line_xdyi::y#2 line_xdyi::@5/(byte) line_xdyi::y#3 )
  (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_xdyi::x#2<(byte~) line_xdyi::$8) goto line_xdyi::@1
  to:line_xdyi::@return
line_xdyi::@3: scope:[line_xdyi]  from line_xdyi::@5
  (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5
  to:line_xdyi::@2
line_xdyi::@return: scope:[line_xdyi]  from line_xdyi::@2
  return 
  to:@return
line_xdyd: scope:[line_xdyd]  from line::@20 line::@24
  (byte) line_xdyd::x1#6 ← phi( line::@20/(byte) line_xdyd::x1#0 line::@24/(byte) line_xdyd::x1#1 )
  (byte) line_xdyd::xd#5 ← phi( line::@20/(byte) line_xdyd::xd#0 line::@24/(byte) line_xdyd::xd#1 )
  (byte) line_xdyd::y#5 ← phi( line::@20/(byte) line_xdyd::y#0 line::@24/(byte) line_xdyd::y#1 )
  (byte) line_xdyd::x#6 ← phi( line::@20/(byte) line_xdyd::x#0 line::@24/(byte) line_xdyd::x#1 )
  (byte) line_xdyd::yd#2 ← phi( line::@20/(byte) line_xdyd::yd#0 line::@24/(byte) line_xdyd::yd#1 )
  (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyd::@1
line_xdyd::@1: scope:[line_xdyd]  from line_xdyd line_xdyd::@2
  (byte) line_xdyd::e#3 ← phi( line_xdyd/(byte) line_xdyd::e#0 line_xdyd::@2/(byte) line_xdyd::e#6 )
  (byte) line_xdyd::y#3 ← phi( line_xdyd/(byte) line_xdyd::y#5 line_xdyd::@2/(byte) line_xdyd::y#6 )
  (byte) line_xdyd::x#3 ← phi( line_xdyd/(byte) line_xdyd::x#6 line_xdyd::@2/(byte) line_xdyd::x#2 )
  (byte) plot::x#1 ← (byte) line_xdyd::x#3
  (byte) plot::y#1 ← (byte) line_xdyd::y#3
  call plot param-assignment
  to:line_xdyd::@5
line_xdyd::@5: scope:[line_xdyd]  from line_xdyd::@1
  (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2
  if((byte) line_xdyd::xd#5>=(byte) line_xdyd::e#1) goto line_xdyd::@2
  to:line_xdyd::@3
line_xdyd::@2: scope:[line_xdyd]  from line_xdyd::@3 line_xdyd::@5
  (byte) line_xdyd::e#6 ← phi( line_xdyd::@3/(byte) line_xdyd::e#2 line_xdyd::@5/(byte) line_xdyd::e#1 )
  (byte) line_xdyd::y#6 ← phi( line_xdyd::@3/(byte) line_xdyd::y#2 line_xdyd::@5/(byte) line_xdyd::y#3 )
  (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_xdyd::x#2<(byte~) line_xdyd::$8) goto line_xdyd::@1
  to:line_xdyd::@return
line_xdyd::@3: scope:[line_xdyd]  from line_xdyd::@5
  (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5
  to:line_xdyd::@2
line_xdyd::@return: scope:[line_xdyd]  from line_xdyd::@2
  return 
  to:@return
line_ydxi: scope:[line_ydxi]  from line::@13 line::@3
  (byte) line_ydxi::y1#6 ← phi( line::@13/(byte) line_ydxi::y1#1 line::@3/(byte) line_ydxi::y1#0 )
  (byte) line_ydxi::yd#5 ← phi( line::@13/(byte) line_ydxi::yd#1 line::@3/(byte) line_ydxi::yd#0 )
  (byte) line_ydxi::y#6 ← phi( line::@13/(byte) line_ydxi::y#1 line::@3/(byte) line_ydxi::y#0 )
  (byte) line_ydxi::x#5 ← phi( line::@13/(byte) line_ydxi::x#1 line::@3/(byte) line_ydxi::x#0 )
  (byte) line_ydxi::xd#2 ← phi( line::@13/(byte) line_ydxi::xd#1 line::@3/(byte) line_ydxi::xd#0 )
  (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxi::@1
line_ydxi::@1: scope:[line_ydxi]  from line_ydxi line_ydxi::@2
  (byte) line_ydxi::e#3 ← phi( line_ydxi/(byte) line_ydxi::e#0 line_ydxi::@2/(byte) line_ydxi::e#6 )
  (byte) line_ydxi::y#3 ← phi( line_ydxi/(byte) line_ydxi::y#6 line_ydxi::@2/(byte) line_ydxi::y#2 )
  (byte) line_ydxi::x#3 ← phi( line_ydxi/(byte) line_ydxi::x#5 line_ydxi::@2/(byte) line_ydxi::x#6 )
  (byte) plot::x#2 ← (byte) line_ydxi::x#3
  (byte) plot::y#2 ← (byte) line_ydxi::y#3
  call plot param-assignment
  to:line_ydxi::@5
line_ydxi::@5: scope:[line_ydxi]  from line_ydxi::@1
  (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2
  if((byte) line_ydxi::yd#5>=(byte) line_ydxi::e#1) goto line_ydxi::@2
  to:line_ydxi::@3
line_ydxi::@2: scope:[line_ydxi]  from line_ydxi::@3 line_ydxi::@5
  (byte) line_ydxi::e#6 ← phi( line_ydxi::@3/(byte) line_ydxi::e#2 line_ydxi::@5/(byte) line_ydxi::e#1 )
  (byte) line_ydxi::x#6 ← phi( line_ydxi::@3/(byte) line_ydxi::x#2 line_ydxi::@5/(byte) line_ydxi::x#3 )
  (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_ydxi::y#2<(byte~) line_ydxi::$8) goto line_ydxi::@1
  to:line_ydxi::@return
line_ydxi::@3: scope:[line_ydxi]  from line_ydxi::@5
  (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5
  to:line_ydxi::@2
line_ydxi::@return: scope:[line_ydxi]  from line_ydxi::@2
  return 
  to:@return
line_ydxd: scope:[line_ydxd]  from line::@10 line::@6
  (byte) line_ydxd::y1#6 ← phi( line::@10/(byte) line_ydxd::y1#1 line::@6/(byte) line_ydxd::y1#0 )
  (byte) line_ydxd::yd#5 ← phi( line::@10/(byte) line_ydxd::yd#1 line::@6/(byte) line_ydxd::yd#0 )
  (byte) line_ydxd::y#6 ← phi( line::@10/(byte) line_ydxd::y#1 line::@6/(byte) line_ydxd::y#0 )
  (byte) line_ydxd::x#5 ← phi( line::@10/(byte) line_ydxd::x#1 line::@6/(byte) line_ydxd::x#0 )
  (byte) line_ydxd::xd#2 ← phi( line::@10/(byte) line_ydxd::xd#1 line::@6/(byte) line_ydxd::xd#0 )
  (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxd::@1
line_ydxd::@1: scope:[line_ydxd]  from line_ydxd line_ydxd::@2
  (byte) line_ydxd::e#3 ← phi( line_ydxd/(byte) line_ydxd::e#0 line_ydxd::@2/(byte) line_ydxd::e#6 )
  (byte) line_ydxd::y#3 ← phi( line_ydxd/(byte) line_ydxd::y#6 line_ydxd::@2/(byte) line_ydxd::y#2 )
  (byte) line_ydxd::x#3 ← phi( line_ydxd/(byte) line_ydxd::x#5 line_ydxd::@2/(byte) line_ydxd::x#6 )
  (byte) plot::x#3 ← (byte) line_ydxd::x#3
  (byte) plot::y#3 ← (byte) line_ydxd::y#3
  call plot param-assignment
  to:line_ydxd::@5
line_ydxd::@5: scope:[line_ydxd]  from line_ydxd::@1
  (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2
  if((byte) line_ydxd::yd#5>=(byte) line_ydxd::e#1) goto line_ydxd::@2
  to:line_ydxd::@3
line_ydxd::@2: scope:[line_ydxd]  from line_ydxd::@3 line_ydxd::@5
  (byte) line_ydxd::e#6 ← phi( line_ydxd::@3/(byte) line_ydxd::e#2 line_ydxd::@5/(byte) line_ydxd::e#1 )
  (byte) line_ydxd::x#6 ← phi( line_ydxd::@3/(byte) line_ydxd::x#2 line_ydxd::@5/(byte) line_ydxd::x#3 )
  (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_ydxd::y#2<(byte~) line_ydxd::$8) goto line_ydxd::@1
  to:line_ydxd::@return
line_ydxd::@3: scope:[line_ydxd]  from line_ydxd::@5
  (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5
  to:line_ydxd::@2
line_ydxd::@return: scope:[line_ydxd]  from line_ydxd::@2
  return 
  to:@return
plot: scope:[plot]  from line_xdyd::@1 line_xdyi::@1 line_ydxd::@1 line_ydxi::@1
  (byte) plot::y#4 ← phi( line_xdyd::@1/(byte) plot::y#1 line_xdyi::@1/(byte) plot::y#0 line_ydxd::@1/(byte) plot::y#3 line_ydxi::@1/(byte) plot::y#2 )
  (byte) plot::x#4 ← phi( line_xdyd::@1/(byte) plot::x#1 line_xdyi::@1/(byte) plot::x#0 line_ydxd::@1/(byte) plot::x#3 line_ydxi::@1/(byte) plot::x#2 )
  (byte~) plot::$0 ← (const byte[]) plot_xhi#0 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#1 ← (const byte*) plot::plotter_x#0 hi= (byte~) plot::$0
  (byte~) plot::$1 ← (const byte[]) plot_xlo#0 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1
  (byte~) plot::$2 ← (const byte[]) plot_yhi#0 *idx (byte) plot::y#4
  (word) plot::plotter_y#1 ← (const word) plot::plotter_y#0 hi= (byte~) plot::$2
  (byte~) plot::$3 ← (const byte[]) plot_ylo#0 *idx (byte) plot::y#4
  (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3
  (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2
  (byte~) plot::$5 ← (const byte[]) plot_bit#0 *idx (byte) plot::x#4
  (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5
  *((byte*) plot::plotter#0) ← (byte~) plot::$6
  to:plot::@return
plot::@return: scope:[plot]  from plot
  return 
  to:@return
init_plot_tables: scope:[init_plot_tables]  from main::@3
  to:init_plot_tables::@1
init_plot_tables::@1: scope:[init_plot_tables]  from init_plot_tables init_plot_tables::@2
  (byte) init_plot_tables::bits#3 ← phi( init_plot_tables/(const byte) init_plot_tables::bits#0 init_plot_tables::@2/(byte) init_plot_tables::bits#4 )
  (byte) init_plot_tables::x#2 ← phi( init_plot_tables/(const byte) init_plot_tables::x#0 init_plot_tables::@2/(byte) init_plot_tables::x#1 )
  (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248
  *((const byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0
  *((const byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← (const byte) init_plot_tables::$1
  *((const byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3
  (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1
  if((byte) init_plot_tables::bits#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@2
  to:init_plot_tables::@5
init_plot_tables::@2: scope:[init_plot_tables]  from init_plot_tables::@1 init_plot_tables::@5
  (byte) init_plot_tables::bits#4 ← phi( init_plot_tables::@1/(byte) init_plot_tables::bits#1 init_plot_tables::@5/(const byte) init_plot_tables::bits#2 )
  (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2
  if((byte) init_plot_tables::x#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@1
  to:init_plot_tables::@6
init_plot_tables::@5: scope:[init_plot_tables]  from init_plot_tables::@1
  to:init_plot_tables::@2
init_plot_tables::@6: scope:[init_plot_tables]  from init_plot_tables::@2
  to:init_plot_tables::@3
init_plot_tables::@3: scope:[init_plot_tables]  from init_plot_tables::@4 init_plot_tables::@6
  (byte*) init_plot_tables::yoffs#2 ← phi( init_plot_tables::@4/(byte*) init_plot_tables::yoffs#4 init_plot_tables::@6/(const byte*) init_plot_tables::yoffs#0 )
  (byte) init_plot_tables::y#2 ← phi( init_plot_tables::@4/(byte) init_plot_tables::y#1 init_plot_tables::@6/(const byte) init_plot_tables::y#0 )
  (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2
  (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7
  *((const byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8
  (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2
  *((const byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9
  (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  if((byte~) init_plot_tables::$10!=(byte/signed byte/word/signed word) 7) goto init_plot_tables::@4
  to:init_plot_tables::@7
init_plot_tables::@4: scope:[init_plot_tables]  from init_plot_tables::@3 init_plot_tables::@7
  (byte*) init_plot_tables::yoffs#4 ← phi( init_plot_tables::@3/(byte*) init_plot_tables::yoffs#2 init_plot_tables::@7/(byte*) init_plot_tables::yoffs#1 )
  (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2
  if((byte) init_plot_tables::y#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@3
  to:init_plot_tables::@return
init_plot_tables::@7: scope:[init_plot_tables]  from init_plot_tables::@3
  (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320
  to:init_plot_tables::@4
init_plot_tables::@return: scope:[init_plot_tables]  from init_plot_tables::@4
  return 
  to:@return
init_screen: scope:[init_screen]  from main
  to:init_screen::@1
init_screen::@1: scope:[init_screen]  from init_screen init_screen::@1
  (byte*) init_screen::b#2 ← phi( init_screen/(const byte*) init_screen::b#0 init_screen::@1/(byte*) init_screen::b#1 )
  *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0
  (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2
  if((byte*) init_screen::b#1!=(const byte*) init_screen::$0) goto init_screen::@1
  to:init_screen::@3
init_screen::@3: scope:[init_screen]  from init_screen::@1
  to:init_screen::@2
init_screen::@2: scope:[init_screen]  from init_screen::@2 init_screen::@3
  (byte*) init_screen::c#2 ← phi( init_screen::@2/(byte*) init_screen::c#1 init_screen::@3/(const byte*) init_screen::c#0 )
  *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20
  (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2
  if((byte*) init_screen::c#1!=(const byte*) init_screen::$2) goto init_screen::@2
  to:init_screen::@return
init_screen::@return: scope:[init_screen]  from init_screen::@2
  return 
  to:@return
@10: scope:[]  from @begin
  call main param-assignment
  to:@end
@end: scope:[]  from @10

Multiple usages for variable. Not optimizing sub-constant (byte) lines::l#2
Multiple usages for variable. Not optimizing sub-constant (byte) lines::l#2
Consolidated referenced array index constant in assignment lines::$2
Multiple usages for variable. Not optimizing sub-constant (byte) lines::l#2
Multiple usages for variable. Not optimizing sub-constant (byte) lines::l#2
Consolidated referenced array index constant in assignment lines::$5
Multiple usages for variable. Not optimizing sub-constant (byte) line_xdyi::x#3
Multiple usages for variable. Not optimizing sub-constant (byte) line_xdyi::y#3
Multiple usages for variable. Not optimizing sub-constant (byte) line_xdyd::x#3
Multiple usages for variable. Not optimizing sub-constant (byte) line_ydxi::y#3
Multiple usages for variable. Not optimizing sub-constant (byte) line_ydxi::x#3
Multiple usages for variable. Not optimizing sub-constant (byte) line_ydxd::y#3
Multiple usages for variable. Not optimizing sub-constant (byte) plot::x#4
Multiple usages for variable. Not optimizing sub-constant (byte) plot::x#4
Multiple usages for variable. Not optimizing sub-constant (byte) plot::y#4
Multiple usages for variable. Not optimizing sub-constant (byte) plot::y#4
Multiple usages for variable. Not optimizing sub-constant (byte) plot::x#4
Multiple usages for variable. Not optimizing sub-constant (byte) init_plot_tables::x#2
Multiple usages for variable. Not optimizing sub-constant (byte) init_plot_tables::x#2
Multiple usages for variable. Not optimizing sub-constant (byte) init_plot_tables::x#2
Multiple usages for variable. Not optimizing sub-constant (byte) init_plot_tables::y#2
Multiple usages for variable. Not optimizing sub-constant (byte) init_plot_tables::y#2
Multiple usages for variable. Not optimizing sub-constant (byte*) init_plot_tables::yoffs#2
Succesful SSA optimization Pass2ConstantAdditionElimination
CONTROL FLOW GRAPH
@begin: scope:[]  from
  to:@10
main: scope:[main]  from @10
  *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0
  *((const byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0
  *((const byte*) D011#0) ← (const byte) main::$2
  *((const byte*) D018#0) ← (byte/signed byte/word/signed word) 24
  call init_screen param-assignment
  to:main::@3
main::@3: scope:[main]  from main
  call init_plot_tables param-assignment
  to:main::@4
main::@4: scope:[main]  from main::@3
  to:main::@1
main::@1: scope:[main]  from main::@4 main::@5
  call lines param-assignment
  to:main::@5
main::@5: scope:[main]  from main::@1
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@5
  return 
  to:@return
lines: scope:[lines]  from main::@1
  to:lines::@1
lines::@1: scope:[lines]  from lines lines::@3
  (byte) lines::l#2 ← phi( lines/(const byte) lines::l#0 lines::@3/(byte) lines::l#1 )
  (byte~) lines::$0 ← (const byte[]) lines_x#0 *idx (byte) lines::l#2
  (byte~) lines::$1 ← (byte) lines::l#2
  (byte~) lines::$2 ← (const byte[]) lines_x#0+(byte/signed byte/word/signed word) 1 *idx (byte~) lines::$1
  (byte~) lines::$3 ← (const byte[]) lines_y#0 *idx (byte) lines::l#2
  (byte~) lines::$4 ← (byte) lines::l#2
  (byte~) lines::$5 ← (const byte[]) lines_y#0+(byte/signed byte/word/signed word) 1 *idx (byte~) lines::$4
  (byte) line::x0#0 ← (byte~) lines::$0
  (byte) line::x1#0 ← (byte~) lines::$2
  (byte) line::y0#0 ← (byte~) lines::$3
  (byte) line::y1#0 ← (byte~) lines::$5
  call line param-assignment
  to:lines::@3
lines::@3: scope:[lines]  from lines::@1
  (byte) lines::l#1 ← ++ (byte) lines::l#2
  if((byte) lines::l#1<(const byte) lines_cnt#0) goto lines::@1
  to:lines::@return
lines::@return: scope:[lines]  from lines::@3
  return 
  to:@return
line: scope:[line]  from lines::@1
  if((byte) line::x0#0>=(byte) line::x1#0) goto line::@1
  to:line::@15
line::@1: scope:[line]  from line
  (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0
  if((byte) line::y0#0>=(byte) line::y1#0) goto line::@9
  to:line::@23
line::@15: scope:[line]  from line
  (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0
  if((byte) line::y0#0>=(byte) line::y1#0) goto line::@2
  to:line::@16
line::@2: scope:[line]  from line::@15
  (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0
  if((byte) line::yd#0>=(byte) line::xd#1) goto line::@6
  to:line::@20
line::@16: scope:[line]  from line::@15
  (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0
  if((byte) line::yd#1>=(byte) line::xd#1) goto line::@3
  to:line::@17
line::@3: scope:[line]  from line::@16
  (byte) line_ydxi::y#0 ← (byte) line::y0#0
  (byte) line_ydxi::x#0 ← (byte) line::x0#0
  (byte) line_ydxi::y1#0 ← (byte) line::y1#0
  (byte) line_ydxi::yd#0 ← (byte) line::yd#1
  (byte) line_ydxi::xd#0 ← (byte) line::xd#1
  call line_ydxi param-assignment
  to:line::@return
line::@17: scope:[line]  from line::@16
  (byte) line_xdyi::x#0 ← (byte) line::x0#0
  (byte) line_xdyi::y#0 ← (byte) line::y0#0
  (byte) line_xdyi::x1#0 ← (byte) line::x1#0
  (byte) line_xdyi::xd#0 ← (byte) line::xd#1
  (byte) line_xdyi::yd#0 ← (byte) line::yd#1
  call line_xdyi param-assignment
  to:line::@return
line::@6: scope:[line]  from line::@2
  (byte) line_ydxd::y#0 ← (byte) line::y1#0
  (byte) line_ydxd::x#0 ← (byte) line::x1#0
  (byte) line_ydxd::y1#0 ← (byte) line::y0#0
  (byte) line_ydxd::yd#0 ← (byte) line::yd#0
  (byte) line_ydxd::xd#0 ← (byte) line::xd#1
  call line_ydxd param-assignment
  to:line::@return
line::@20: scope:[line]  from line::@2
  (byte) line_xdyd::x#0 ← (byte) line::x0#0
  (byte) line_xdyd::y#0 ← (byte) line::y0#0
  (byte) line_xdyd::x1#0 ← (byte) line::x1#0
  (byte) line_xdyd::xd#0 ← (byte) line::xd#1
  (byte) line_xdyd::yd#0 ← (byte) line::yd#0
  call line_xdyd param-assignment
  to:line::@return
line::@9: scope:[line]  from line::@1
  (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0
  if((byte) line::yd#10>=(byte) line::xd#0) goto line::@13
  to:line::@27
line::@23: scope:[line]  from line::@1
  (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0
  if((byte) line::yd#3>=(byte) line::xd#0) goto line::@10
  to:line::@24
line::@10: scope:[line]  from line::@23
  (byte) line_ydxd::y#1 ← (byte) line::y0#0
  (byte) line_ydxd::x#1 ← (byte) line::x0#0
  (byte) line_ydxd::y1#1 ← (byte) line::y1#0
  (byte) line_ydxd::yd#1 ← (byte) line::yd#3
  (byte) line_ydxd::xd#1 ← (byte) line::xd#0
  call line_ydxd param-assignment
  to:line::@return
line::@24: scope:[line]  from line::@23
  (byte) line_xdyd::x#1 ← (byte) line::x1#0
  (byte) line_xdyd::y#1 ← (byte) line::y1#0
  (byte) line_xdyd::x1#1 ← (byte) line::x0#0
  (byte) line_xdyd::xd#1 ← (byte) line::xd#0
  (byte) line_xdyd::yd#1 ← (byte) line::yd#3
  call line_xdyd param-assignment
  to:line::@return
line::@13: scope:[line]  from line::@9
  (byte) line_ydxi::y#1 ← (byte) line::y1#0
  (byte) line_ydxi::x#1 ← (byte) line::x1#0
  (byte) line_ydxi::y1#1 ← (byte) line::y0#0
  (byte) line_ydxi::yd#1 ← (byte) line::yd#10
  (byte) line_ydxi::xd#1 ← (byte) line::xd#0
  call line_ydxi param-assignment
  to:line::@return
line::@27: scope:[line]  from line::@9
  (byte) line_xdyi::x#1 ← (byte) line::x1#0
  (byte) line_xdyi::y#1 ← (byte) line::y1#0
  (byte) line_xdyi::x1#1 ← (byte) line::x0#0
  (byte) line_xdyi::xd#1 ← (byte) line::xd#0
  (byte) line_xdyi::yd#1 ← (byte) line::yd#10
  call line_xdyi param-assignment
  to:line::@return
line::@return: scope:[line]  from line::@10 line::@13 line::@17 line::@20 line::@24 line::@27 line::@3 line::@6
  return 
  to:@return
line_xdyi: scope:[line_xdyi]  from line::@17 line::@27
  (byte) line_xdyi::x1#6 ← phi( line::@17/(byte) line_xdyi::x1#0 line::@27/(byte) line_xdyi::x1#1 )
  (byte) line_xdyi::xd#5 ← phi( line::@17/(byte) line_xdyi::xd#0 line::@27/(byte) line_xdyi::xd#1 )
  (byte) line_xdyi::y#5 ← phi( line::@17/(byte) line_xdyi::y#0 line::@27/(byte) line_xdyi::y#1 )
  (byte) line_xdyi::x#6 ← phi( line::@17/(byte) line_xdyi::x#0 line::@27/(byte) line_xdyi::x#1 )
  (byte) line_xdyi::yd#2 ← phi( line::@17/(byte) line_xdyi::yd#0 line::@27/(byte) line_xdyi::yd#1 )
  (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyi::@1
line_xdyi::@1: scope:[line_xdyi]  from line_xdyi line_xdyi::@2
  (byte) line_xdyi::e#3 ← phi( line_xdyi/(byte) line_xdyi::e#0 line_xdyi::@2/(byte) line_xdyi::e#6 )
  (byte) line_xdyi::y#3 ← phi( line_xdyi/(byte) line_xdyi::y#5 line_xdyi::@2/(byte) line_xdyi::y#6 )
  (byte) line_xdyi::x#3 ← phi( line_xdyi/(byte) line_xdyi::x#6 line_xdyi::@2/(byte) line_xdyi::x#2 )
  (byte) plot::x#0 ← (byte) line_xdyi::x#3
  (byte) plot::y#0 ← (byte) line_xdyi::y#3
  call plot param-assignment
  to:line_xdyi::@5
line_xdyi::@5: scope:[line_xdyi]  from line_xdyi::@1
  (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2
  if((byte) line_xdyi::xd#5>=(byte) line_xdyi::e#1) goto line_xdyi::@2
  to:line_xdyi::@3
line_xdyi::@2: scope:[line_xdyi]  from line_xdyi::@3 line_xdyi::@5
  (byte) line_xdyi::e#6 ← phi( line_xdyi::@3/(byte) line_xdyi::e#2 line_xdyi::@5/(byte) line_xdyi::e#1 )
  (byte) line_xdyi::y#6 ← phi( line_xdyi::@3/(byte) line_xdyi::y#2 line_xdyi::@5/(byte) line_xdyi::y#3 )
  (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_xdyi::x#2<(byte~) line_xdyi::$8) goto line_xdyi::@1
  to:line_xdyi::@return
line_xdyi::@3: scope:[line_xdyi]  from line_xdyi::@5
  (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5
  to:line_xdyi::@2
line_xdyi::@return: scope:[line_xdyi]  from line_xdyi::@2
  return 
  to:@return
line_xdyd: scope:[line_xdyd]  from line::@20 line::@24
  (byte) line_xdyd::x1#6 ← phi( line::@20/(byte) line_xdyd::x1#0 line::@24/(byte) line_xdyd::x1#1 )
  (byte) line_xdyd::xd#5 ← phi( line::@20/(byte) line_xdyd::xd#0 line::@24/(byte) line_xdyd::xd#1 )
  (byte) line_xdyd::y#5 ← phi( line::@20/(byte) line_xdyd::y#0 line::@24/(byte) line_xdyd::y#1 )
  (byte) line_xdyd::x#6 ← phi( line::@20/(byte) line_xdyd::x#0 line::@24/(byte) line_xdyd::x#1 )
  (byte) line_xdyd::yd#2 ← phi( line::@20/(byte) line_xdyd::yd#0 line::@24/(byte) line_xdyd::yd#1 )
  (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyd::@1
line_xdyd::@1: scope:[line_xdyd]  from line_xdyd line_xdyd::@2
  (byte) line_xdyd::e#3 ← phi( line_xdyd/(byte) line_xdyd::e#0 line_xdyd::@2/(byte) line_xdyd::e#6 )
  (byte) line_xdyd::y#3 ← phi( line_xdyd/(byte) line_xdyd::y#5 line_xdyd::@2/(byte) line_xdyd::y#6 )
  (byte) line_xdyd::x#3 ← phi( line_xdyd/(byte) line_xdyd::x#6 line_xdyd::@2/(byte) line_xdyd::x#2 )
  (byte) plot::x#1 ← (byte) line_xdyd::x#3
  (byte) plot::y#1 ← (byte) line_xdyd::y#3
  call plot param-assignment
  to:line_xdyd::@5
line_xdyd::@5: scope:[line_xdyd]  from line_xdyd::@1
  (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2
  if((byte) line_xdyd::xd#5>=(byte) line_xdyd::e#1) goto line_xdyd::@2
  to:line_xdyd::@3
line_xdyd::@2: scope:[line_xdyd]  from line_xdyd::@3 line_xdyd::@5
  (byte) line_xdyd::e#6 ← phi( line_xdyd::@3/(byte) line_xdyd::e#2 line_xdyd::@5/(byte) line_xdyd::e#1 )
  (byte) line_xdyd::y#6 ← phi( line_xdyd::@3/(byte) line_xdyd::y#2 line_xdyd::@5/(byte) line_xdyd::y#3 )
  (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_xdyd::x#2<(byte~) line_xdyd::$8) goto line_xdyd::@1
  to:line_xdyd::@return
line_xdyd::@3: scope:[line_xdyd]  from line_xdyd::@5
  (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5
  to:line_xdyd::@2
line_xdyd::@return: scope:[line_xdyd]  from line_xdyd::@2
  return 
  to:@return
line_ydxi: scope:[line_ydxi]  from line::@13 line::@3
  (byte) line_ydxi::y1#6 ← phi( line::@13/(byte) line_ydxi::y1#1 line::@3/(byte) line_ydxi::y1#0 )
  (byte) line_ydxi::yd#5 ← phi( line::@13/(byte) line_ydxi::yd#1 line::@3/(byte) line_ydxi::yd#0 )
  (byte) line_ydxi::y#6 ← phi( line::@13/(byte) line_ydxi::y#1 line::@3/(byte) line_ydxi::y#0 )
  (byte) line_ydxi::x#5 ← phi( line::@13/(byte) line_ydxi::x#1 line::@3/(byte) line_ydxi::x#0 )
  (byte) line_ydxi::xd#2 ← phi( line::@13/(byte) line_ydxi::xd#1 line::@3/(byte) line_ydxi::xd#0 )
  (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxi::@1
line_ydxi::@1: scope:[line_ydxi]  from line_ydxi line_ydxi::@2
  (byte) line_ydxi::e#3 ← phi( line_ydxi/(byte) line_ydxi::e#0 line_ydxi::@2/(byte) line_ydxi::e#6 )
  (byte) line_ydxi::y#3 ← phi( line_ydxi/(byte) line_ydxi::y#6 line_ydxi::@2/(byte) line_ydxi::y#2 )
  (byte) line_ydxi::x#3 ← phi( line_ydxi/(byte) line_ydxi::x#5 line_ydxi::@2/(byte) line_ydxi::x#6 )
  (byte) plot::x#2 ← (byte) line_ydxi::x#3
  (byte) plot::y#2 ← (byte) line_ydxi::y#3
  call plot param-assignment
  to:line_ydxi::@5
line_ydxi::@5: scope:[line_ydxi]  from line_ydxi::@1
  (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2
  if((byte) line_ydxi::yd#5>=(byte) line_ydxi::e#1) goto line_ydxi::@2
  to:line_ydxi::@3
line_ydxi::@2: scope:[line_ydxi]  from line_ydxi::@3 line_ydxi::@5
  (byte) line_ydxi::e#6 ← phi( line_ydxi::@3/(byte) line_ydxi::e#2 line_ydxi::@5/(byte) line_ydxi::e#1 )
  (byte) line_ydxi::x#6 ← phi( line_ydxi::@3/(byte) line_ydxi::x#2 line_ydxi::@5/(byte) line_ydxi::x#3 )
  (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_ydxi::y#2<(byte~) line_ydxi::$8) goto line_ydxi::@1
  to:line_ydxi::@return
line_ydxi::@3: scope:[line_ydxi]  from line_ydxi::@5
  (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5
  to:line_ydxi::@2
line_ydxi::@return: scope:[line_ydxi]  from line_ydxi::@2
  return 
  to:@return
line_ydxd: scope:[line_ydxd]  from line::@10 line::@6
  (byte) line_ydxd::y1#6 ← phi( line::@10/(byte) line_ydxd::y1#1 line::@6/(byte) line_ydxd::y1#0 )
  (byte) line_ydxd::yd#5 ← phi( line::@10/(byte) line_ydxd::yd#1 line::@6/(byte) line_ydxd::yd#0 )
  (byte) line_ydxd::y#6 ← phi( line::@10/(byte) line_ydxd::y#1 line::@6/(byte) line_ydxd::y#0 )
  (byte) line_ydxd::x#5 ← phi( line::@10/(byte) line_ydxd::x#1 line::@6/(byte) line_ydxd::x#0 )
  (byte) line_ydxd::xd#2 ← phi( line::@10/(byte) line_ydxd::xd#1 line::@6/(byte) line_ydxd::xd#0 )
  (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxd::@1
line_ydxd::@1: scope:[line_ydxd]  from line_ydxd line_ydxd::@2
  (byte) line_ydxd::e#3 ← phi( line_ydxd/(byte) line_ydxd::e#0 line_ydxd::@2/(byte) line_ydxd::e#6 )
  (byte) line_ydxd::y#3 ← phi( line_ydxd/(byte) line_ydxd::y#6 line_ydxd::@2/(byte) line_ydxd::y#2 )
  (byte) line_ydxd::x#3 ← phi( line_ydxd/(byte) line_ydxd::x#5 line_ydxd::@2/(byte) line_ydxd::x#6 )
  (byte) plot::x#3 ← (byte) line_ydxd::x#3
  (byte) plot::y#3 ← (byte) line_ydxd::y#3
  call plot param-assignment
  to:line_ydxd::@5
line_ydxd::@5: scope:[line_ydxd]  from line_ydxd::@1
  (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2
  if((byte) line_ydxd::yd#5>=(byte) line_ydxd::e#1) goto line_ydxd::@2
  to:line_ydxd::@3
line_ydxd::@2: scope:[line_ydxd]  from line_ydxd::@3 line_ydxd::@5
  (byte) line_ydxd::e#6 ← phi( line_ydxd::@3/(byte) line_ydxd::e#2 line_ydxd::@5/(byte) line_ydxd::e#1 )
  (byte) line_ydxd::x#6 ← phi( line_ydxd::@3/(byte) line_ydxd::x#2 line_ydxd::@5/(byte) line_ydxd::x#3 )
  (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_ydxd::y#2<(byte~) line_ydxd::$8) goto line_ydxd::@1
  to:line_ydxd::@return
line_ydxd::@3: scope:[line_ydxd]  from line_ydxd::@5
  (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5
  to:line_ydxd::@2
line_ydxd::@return: scope:[line_ydxd]  from line_ydxd::@2
  return 
  to:@return
plot: scope:[plot]  from line_xdyd::@1 line_xdyi::@1 line_ydxd::@1 line_ydxi::@1
  (byte) plot::y#4 ← phi( line_xdyd::@1/(byte) plot::y#1 line_xdyi::@1/(byte) plot::y#0 line_ydxd::@1/(byte) plot::y#3 line_ydxi::@1/(byte) plot::y#2 )
  (byte) plot::x#4 ← phi( line_xdyd::@1/(byte) plot::x#1 line_xdyi::@1/(byte) plot::x#0 line_ydxd::@1/(byte) plot::x#3 line_ydxi::@1/(byte) plot::x#2 )
  (byte~) plot::$0 ← (const byte[]) plot_xhi#0 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#1 ← (const byte*) plot::plotter_x#0 hi= (byte~) plot::$0
  (byte~) plot::$1 ← (const byte[]) plot_xlo#0 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1
  (byte~) plot::$2 ← (const byte[]) plot_yhi#0 *idx (byte) plot::y#4
  (word) plot::plotter_y#1 ← (const word) plot::plotter_y#0 hi= (byte~) plot::$2
  (byte~) plot::$3 ← (const byte[]) plot_ylo#0 *idx (byte) plot::y#4
  (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3
  (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2
  (byte~) plot::$5 ← (const byte[]) plot_bit#0 *idx (byte) plot::x#4
  (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5
  *((byte*) plot::plotter#0) ← (byte~) plot::$6
  to:plot::@return
plot::@return: scope:[plot]  from plot
  return 
  to:@return
init_plot_tables: scope:[init_plot_tables]  from main::@3
  to:init_plot_tables::@1
init_plot_tables::@1: scope:[init_plot_tables]  from init_plot_tables init_plot_tables::@2
  (byte) init_plot_tables::bits#3 ← phi( init_plot_tables/(const byte) init_plot_tables::bits#0 init_plot_tables::@2/(byte) init_plot_tables::bits#4 )
  (byte) init_plot_tables::x#2 ← phi( init_plot_tables/(const byte) init_plot_tables::x#0 init_plot_tables::@2/(byte) init_plot_tables::x#1 )
  (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248
  *((const byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0
  *((const byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← (const byte) init_plot_tables::$1
  *((const byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3
  (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1
  if((byte) init_plot_tables::bits#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@2
  to:init_plot_tables::@5
init_plot_tables::@2: scope:[init_plot_tables]  from init_plot_tables::@1 init_plot_tables::@5
  (byte) init_plot_tables::bits#4 ← phi( init_plot_tables::@1/(byte) init_plot_tables::bits#1 init_plot_tables::@5/(const byte) init_plot_tables::bits#2 )
  (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2
  if((byte) init_plot_tables::x#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@1
  to:init_plot_tables::@6
init_plot_tables::@5: scope:[init_plot_tables]  from init_plot_tables::@1
  to:init_plot_tables::@2
init_plot_tables::@6: scope:[init_plot_tables]  from init_plot_tables::@2
  to:init_plot_tables::@3
init_plot_tables::@3: scope:[init_plot_tables]  from init_plot_tables::@4 init_plot_tables::@6
  (byte*) init_plot_tables::yoffs#2 ← phi( init_plot_tables::@4/(byte*) init_plot_tables::yoffs#4 init_plot_tables::@6/(const byte*) init_plot_tables::yoffs#0 )
  (byte) init_plot_tables::y#2 ← phi( init_plot_tables::@4/(byte) init_plot_tables::y#1 init_plot_tables::@6/(const byte) init_plot_tables::y#0 )
  (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2
  (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7
  *((const byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8
  (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2
  *((const byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9
  (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  if((byte~) init_plot_tables::$10!=(byte/signed byte/word/signed word) 7) goto init_plot_tables::@4
  to:init_plot_tables::@7
init_plot_tables::@4: scope:[init_plot_tables]  from init_plot_tables::@3 init_plot_tables::@7
  (byte*) init_plot_tables::yoffs#4 ← phi( init_plot_tables::@3/(byte*) init_plot_tables::yoffs#2 init_plot_tables::@7/(byte*) init_plot_tables::yoffs#1 )
  (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2
  if((byte) init_plot_tables::y#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@3
  to:init_plot_tables::@return
init_plot_tables::@7: scope:[init_plot_tables]  from init_plot_tables::@3
  (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320
  to:init_plot_tables::@4
init_plot_tables::@return: scope:[init_plot_tables]  from init_plot_tables::@4
  return 
  to:@return
init_screen: scope:[init_screen]  from main
  to:init_screen::@1
init_screen::@1: scope:[init_screen]  from init_screen init_screen::@1
  (byte*) init_screen::b#2 ← phi( init_screen/(const byte*) init_screen::b#0 init_screen::@1/(byte*) init_screen::b#1 )
  *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0
  (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2
  if((byte*) init_screen::b#1!=(const byte*) init_screen::$0) goto init_screen::@1
  to:init_screen::@3
init_screen::@3: scope:[init_screen]  from init_screen::@1
  to:init_screen::@2
init_screen::@2: scope:[init_screen]  from init_screen::@2 init_screen::@3
  (byte*) init_screen::c#2 ← phi( init_screen::@2/(byte*) init_screen::c#1 init_screen::@3/(const byte*) init_screen::c#0 )
  *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20
  (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2
  if((byte*) init_screen::c#1!=(const byte*) init_screen::$2) goto init_screen::@2
  to:init_screen::@return
init_screen::@return: scope:[init_screen]  from init_screen::@2
  return 
  to:@return
@10: scope:[]  from @begin
  call main param-assignment
  to:@end
@end: scope:[]  from @10

Multiple usages for variable. Not optimizing sub-constant (byte) lines::l#2
Multiple usages for variable. Not optimizing sub-constant (byte) lines::l#2
Multiple usages for variable. Not optimizing sub-constant (byte) line_xdyi::x#3
Multiple usages for variable. Not optimizing sub-constant (byte) line_xdyi::y#3
Multiple usages for variable. Not optimizing sub-constant (byte) line_xdyd::x#3
Multiple usages for variable. Not optimizing sub-constant (byte) line_ydxi::y#3
Multiple usages for variable. Not optimizing sub-constant (byte) line_ydxi::x#3
Multiple usages for variable. Not optimizing sub-constant (byte) line_ydxd::y#3
Multiple usages for variable. Not optimizing sub-constant (byte) plot::x#4
Multiple usages for variable. Not optimizing sub-constant (byte) plot::x#4
Multiple usages for variable. Not optimizing sub-constant (byte) plot::y#4
Multiple usages for variable. Not optimizing sub-constant (byte) plot::y#4
Multiple usages for variable. Not optimizing sub-constant (byte) plot::x#4
Multiple usages for variable. Not optimizing sub-constant (byte) init_plot_tables::x#2
Multiple usages for variable. Not optimizing sub-constant (byte) init_plot_tables::x#2
Multiple usages for variable. Not optimizing sub-constant (byte) init_plot_tables::x#2
Multiple usages for variable. Not optimizing sub-constant (byte) init_plot_tables::y#2
Multiple usages for variable. Not optimizing sub-constant (byte) init_plot_tables::y#2
Multiple usages for variable. Not optimizing sub-constant (byte*) init_plot_tables::yoffs#2
Culled Empty Block (label) main::@4
Not culling empty block because it shares successor with its predecessor. (label) init_plot_tables::@5
Culled Empty Block (label) init_plot_tables::@6
Culled Empty Block (label) init_screen::@3
Succesful SSA optimization Pass2CullEmptyBlocks
CONTROL FLOW GRAPH
@begin: scope:[]  from
  to:@10
main: scope:[main]  from @10
  *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0
  *((const byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0
  *((const byte*) D011#0) ← (const byte) main::$2
  *((const byte*) D018#0) ← (byte/signed byte/word/signed word) 24
  call init_screen param-assignment
  to:main::@3
main::@3: scope:[main]  from main
  call init_plot_tables param-assignment
  to:main::@1
main::@1: scope:[main]  from main::@3 main::@5
  call lines param-assignment
  to:main::@5
main::@5: scope:[main]  from main::@1
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@5
  return 
  to:@return
lines: scope:[lines]  from main::@1
  to:lines::@1
lines::@1: scope:[lines]  from lines lines::@3
  (byte) lines::l#2 ← phi( lines/(const byte) lines::l#0 lines::@3/(byte) lines::l#1 )
  (byte~) lines::$0 ← (const byte[]) lines_x#0 *idx (byte) lines::l#2
  (byte~) lines::$1 ← (byte) lines::l#2
  (byte~) lines::$2 ← (const byte[]) lines_x#0+(byte/signed byte/word/signed word) 1 *idx (byte~) lines::$1
  (byte~) lines::$3 ← (const byte[]) lines_y#0 *idx (byte) lines::l#2
  (byte~) lines::$4 ← (byte) lines::l#2
  (byte~) lines::$5 ← (const byte[]) lines_y#0+(byte/signed byte/word/signed word) 1 *idx (byte~) lines::$4
  (byte) line::x0#0 ← (byte~) lines::$0
  (byte) line::x1#0 ← (byte~) lines::$2
  (byte) line::y0#0 ← (byte~) lines::$3
  (byte) line::y1#0 ← (byte~) lines::$5
  call line param-assignment
  to:lines::@3
lines::@3: scope:[lines]  from lines::@1
  (byte) lines::l#1 ← ++ (byte) lines::l#2
  if((byte) lines::l#1<(const byte) lines_cnt#0) goto lines::@1
  to:lines::@return
lines::@return: scope:[lines]  from lines::@3
  return 
  to:@return
line: scope:[line]  from lines::@1
  if((byte) line::x0#0>=(byte) line::x1#0) goto line::@1
  to:line::@15
line::@1: scope:[line]  from line
  (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0
  if((byte) line::y0#0>=(byte) line::y1#0) goto line::@9
  to:line::@23
line::@15: scope:[line]  from line
  (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0
  if((byte) line::y0#0>=(byte) line::y1#0) goto line::@2
  to:line::@16
line::@2: scope:[line]  from line::@15
  (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0
  if((byte) line::yd#0>=(byte) line::xd#1) goto line::@6
  to:line::@20
line::@16: scope:[line]  from line::@15
  (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0
  if((byte) line::yd#1>=(byte) line::xd#1) goto line::@3
  to:line::@17
line::@3: scope:[line]  from line::@16
  (byte) line_ydxi::y#0 ← (byte) line::y0#0
  (byte) line_ydxi::x#0 ← (byte) line::x0#0
  (byte) line_ydxi::y1#0 ← (byte) line::y1#0
  (byte) line_ydxi::yd#0 ← (byte) line::yd#1
  (byte) line_ydxi::xd#0 ← (byte) line::xd#1
  call line_ydxi param-assignment
  to:line::@return
line::@17: scope:[line]  from line::@16
  (byte) line_xdyi::x#0 ← (byte) line::x0#0
  (byte) line_xdyi::y#0 ← (byte) line::y0#0
  (byte) line_xdyi::x1#0 ← (byte) line::x1#0
  (byte) line_xdyi::xd#0 ← (byte) line::xd#1
  (byte) line_xdyi::yd#0 ← (byte) line::yd#1
  call line_xdyi param-assignment
  to:line::@return
line::@6: scope:[line]  from line::@2
  (byte) line_ydxd::y#0 ← (byte) line::y1#0
  (byte) line_ydxd::x#0 ← (byte) line::x1#0
  (byte) line_ydxd::y1#0 ← (byte) line::y0#0
  (byte) line_ydxd::yd#0 ← (byte) line::yd#0
  (byte) line_ydxd::xd#0 ← (byte) line::xd#1
  call line_ydxd param-assignment
  to:line::@return
line::@20: scope:[line]  from line::@2
  (byte) line_xdyd::x#0 ← (byte) line::x0#0
  (byte) line_xdyd::y#0 ← (byte) line::y0#0
  (byte) line_xdyd::x1#0 ← (byte) line::x1#0
  (byte) line_xdyd::xd#0 ← (byte) line::xd#1
  (byte) line_xdyd::yd#0 ← (byte) line::yd#0
  call line_xdyd param-assignment
  to:line::@return
line::@9: scope:[line]  from line::@1
  (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0
  if((byte) line::yd#10>=(byte) line::xd#0) goto line::@13
  to:line::@27
line::@23: scope:[line]  from line::@1
  (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0
  if((byte) line::yd#3>=(byte) line::xd#0) goto line::@10
  to:line::@24
line::@10: scope:[line]  from line::@23
  (byte) line_ydxd::y#1 ← (byte) line::y0#0
  (byte) line_ydxd::x#1 ← (byte) line::x0#0
  (byte) line_ydxd::y1#1 ← (byte) line::y1#0
  (byte) line_ydxd::yd#1 ← (byte) line::yd#3
  (byte) line_ydxd::xd#1 ← (byte) line::xd#0
  call line_ydxd param-assignment
  to:line::@return
line::@24: scope:[line]  from line::@23
  (byte) line_xdyd::x#1 ← (byte) line::x1#0
  (byte) line_xdyd::y#1 ← (byte) line::y1#0
  (byte) line_xdyd::x1#1 ← (byte) line::x0#0
  (byte) line_xdyd::xd#1 ← (byte) line::xd#0
  (byte) line_xdyd::yd#1 ← (byte) line::yd#3
  call line_xdyd param-assignment
  to:line::@return
line::@13: scope:[line]  from line::@9
  (byte) line_ydxi::y#1 ← (byte) line::y1#0
  (byte) line_ydxi::x#1 ← (byte) line::x1#0
  (byte) line_ydxi::y1#1 ← (byte) line::y0#0
  (byte) line_ydxi::yd#1 ← (byte) line::yd#10
  (byte) line_ydxi::xd#1 ← (byte) line::xd#0
  call line_ydxi param-assignment
  to:line::@return
line::@27: scope:[line]  from line::@9
  (byte) line_xdyi::x#1 ← (byte) line::x1#0
  (byte) line_xdyi::y#1 ← (byte) line::y1#0
  (byte) line_xdyi::x1#1 ← (byte) line::x0#0
  (byte) line_xdyi::xd#1 ← (byte) line::xd#0
  (byte) line_xdyi::yd#1 ← (byte) line::yd#10
  call line_xdyi param-assignment
  to:line::@return
line::@return: scope:[line]  from line::@10 line::@13 line::@17 line::@20 line::@24 line::@27 line::@3 line::@6
  return 
  to:@return
line_xdyi: scope:[line_xdyi]  from line::@17 line::@27
  (byte) line_xdyi::x1#6 ← phi( line::@17/(byte) line_xdyi::x1#0 line::@27/(byte) line_xdyi::x1#1 )
  (byte) line_xdyi::xd#5 ← phi( line::@17/(byte) line_xdyi::xd#0 line::@27/(byte) line_xdyi::xd#1 )
  (byte) line_xdyi::y#5 ← phi( line::@17/(byte) line_xdyi::y#0 line::@27/(byte) line_xdyi::y#1 )
  (byte) line_xdyi::x#6 ← phi( line::@17/(byte) line_xdyi::x#0 line::@27/(byte) line_xdyi::x#1 )
  (byte) line_xdyi::yd#2 ← phi( line::@17/(byte) line_xdyi::yd#0 line::@27/(byte) line_xdyi::yd#1 )
  (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyi::@1
line_xdyi::@1: scope:[line_xdyi]  from line_xdyi line_xdyi::@2
  (byte) line_xdyi::e#3 ← phi( line_xdyi/(byte) line_xdyi::e#0 line_xdyi::@2/(byte) line_xdyi::e#6 )
  (byte) line_xdyi::y#3 ← phi( line_xdyi/(byte) line_xdyi::y#5 line_xdyi::@2/(byte) line_xdyi::y#6 )
  (byte) line_xdyi::x#3 ← phi( line_xdyi/(byte) line_xdyi::x#6 line_xdyi::@2/(byte) line_xdyi::x#2 )
  (byte) plot::x#0 ← (byte) line_xdyi::x#3
  (byte) plot::y#0 ← (byte) line_xdyi::y#3
  call plot param-assignment
  to:line_xdyi::@5
line_xdyi::@5: scope:[line_xdyi]  from line_xdyi::@1
  (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2
  if((byte) line_xdyi::xd#5>=(byte) line_xdyi::e#1) goto line_xdyi::@2
  to:line_xdyi::@3
line_xdyi::@2: scope:[line_xdyi]  from line_xdyi::@3 line_xdyi::@5
  (byte) line_xdyi::e#6 ← phi( line_xdyi::@3/(byte) line_xdyi::e#2 line_xdyi::@5/(byte) line_xdyi::e#1 )
  (byte) line_xdyi::y#6 ← phi( line_xdyi::@3/(byte) line_xdyi::y#2 line_xdyi::@5/(byte) line_xdyi::y#3 )
  (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_xdyi::x#2<(byte~) line_xdyi::$8) goto line_xdyi::@1
  to:line_xdyi::@return
line_xdyi::@3: scope:[line_xdyi]  from line_xdyi::@5
  (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5
  to:line_xdyi::@2
line_xdyi::@return: scope:[line_xdyi]  from line_xdyi::@2
  return 
  to:@return
line_xdyd: scope:[line_xdyd]  from line::@20 line::@24
  (byte) line_xdyd::x1#6 ← phi( line::@20/(byte) line_xdyd::x1#0 line::@24/(byte) line_xdyd::x1#1 )
  (byte) line_xdyd::xd#5 ← phi( line::@20/(byte) line_xdyd::xd#0 line::@24/(byte) line_xdyd::xd#1 )
  (byte) line_xdyd::y#5 ← phi( line::@20/(byte) line_xdyd::y#0 line::@24/(byte) line_xdyd::y#1 )
  (byte) line_xdyd::x#6 ← phi( line::@20/(byte) line_xdyd::x#0 line::@24/(byte) line_xdyd::x#1 )
  (byte) line_xdyd::yd#2 ← phi( line::@20/(byte) line_xdyd::yd#0 line::@24/(byte) line_xdyd::yd#1 )
  (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyd::@1
line_xdyd::@1: scope:[line_xdyd]  from line_xdyd line_xdyd::@2
  (byte) line_xdyd::e#3 ← phi( line_xdyd/(byte) line_xdyd::e#0 line_xdyd::@2/(byte) line_xdyd::e#6 )
  (byte) line_xdyd::y#3 ← phi( line_xdyd/(byte) line_xdyd::y#5 line_xdyd::@2/(byte) line_xdyd::y#6 )
  (byte) line_xdyd::x#3 ← phi( line_xdyd/(byte) line_xdyd::x#6 line_xdyd::@2/(byte) line_xdyd::x#2 )
  (byte) plot::x#1 ← (byte) line_xdyd::x#3
  (byte) plot::y#1 ← (byte) line_xdyd::y#3
  call plot param-assignment
  to:line_xdyd::@5
line_xdyd::@5: scope:[line_xdyd]  from line_xdyd::@1
  (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2
  if((byte) line_xdyd::xd#5>=(byte) line_xdyd::e#1) goto line_xdyd::@2
  to:line_xdyd::@3
line_xdyd::@2: scope:[line_xdyd]  from line_xdyd::@3 line_xdyd::@5
  (byte) line_xdyd::e#6 ← phi( line_xdyd::@3/(byte) line_xdyd::e#2 line_xdyd::@5/(byte) line_xdyd::e#1 )
  (byte) line_xdyd::y#6 ← phi( line_xdyd::@3/(byte) line_xdyd::y#2 line_xdyd::@5/(byte) line_xdyd::y#3 )
  (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_xdyd::x#2<(byte~) line_xdyd::$8) goto line_xdyd::@1
  to:line_xdyd::@return
line_xdyd::@3: scope:[line_xdyd]  from line_xdyd::@5
  (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5
  to:line_xdyd::@2
line_xdyd::@return: scope:[line_xdyd]  from line_xdyd::@2
  return 
  to:@return
line_ydxi: scope:[line_ydxi]  from line::@13 line::@3
  (byte) line_ydxi::y1#6 ← phi( line::@13/(byte) line_ydxi::y1#1 line::@3/(byte) line_ydxi::y1#0 )
  (byte) line_ydxi::yd#5 ← phi( line::@13/(byte) line_ydxi::yd#1 line::@3/(byte) line_ydxi::yd#0 )
  (byte) line_ydxi::y#6 ← phi( line::@13/(byte) line_ydxi::y#1 line::@3/(byte) line_ydxi::y#0 )
  (byte) line_ydxi::x#5 ← phi( line::@13/(byte) line_ydxi::x#1 line::@3/(byte) line_ydxi::x#0 )
  (byte) line_ydxi::xd#2 ← phi( line::@13/(byte) line_ydxi::xd#1 line::@3/(byte) line_ydxi::xd#0 )
  (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxi::@1
line_ydxi::@1: scope:[line_ydxi]  from line_ydxi line_ydxi::@2
  (byte) line_ydxi::e#3 ← phi( line_ydxi/(byte) line_ydxi::e#0 line_ydxi::@2/(byte) line_ydxi::e#6 )
  (byte) line_ydxi::y#3 ← phi( line_ydxi/(byte) line_ydxi::y#6 line_ydxi::@2/(byte) line_ydxi::y#2 )
  (byte) line_ydxi::x#3 ← phi( line_ydxi/(byte) line_ydxi::x#5 line_ydxi::@2/(byte) line_ydxi::x#6 )
  (byte) plot::x#2 ← (byte) line_ydxi::x#3
  (byte) plot::y#2 ← (byte) line_ydxi::y#3
  call plot param-assignment
  to:line_ydxi::@5
line_ydxi::@5: scope:[line_ydxi]  from line_ydxi::@1
  (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2
  if((byte) line_ydxi::yd#5>=(byte) line_ydxi::e#1) goto line_ydxi::@2
  to:line_ydxi::@3
line_ydxi::@2: scope:[line_ydxi]  from line_ydxi::@3 line_ydxi::@5
  (byte) line_ydxi::e#6 ← phi( line_ydxi::@3/(byte) line_ydxi::e#2 line_ydxi::@5/(byte) line_ydxi::e#1 )
  (byte) line_ydxi::x#6 ← phi( line_ydxi::@3/(byte) line_ydxi::x#2 line_ydxi::@5/(byte) line_ydxi::x#3 )
  (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_ydxi::y#2<(byte~) line_ydxi::$8) goto line_ydxi::@1
  to:line_ydxi::@return
line_ydxi::@3: scope:[line_ydxi]  from line_ydxi::@5
  (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5
  to:line_ydxi::@2
line_ydxi::@return: scope:[line_ydxi]  from line_ydxi::@2
  return 
  to:@return
line_ydxd: scope:[line_ydxd]  from line::@10 line::@6
  (byte) line_ydxd::y1#6 ← phi( line::@10/(byte) line_ydxd::y1#1 line::@6/(byte) line_ydxd::y1#0 )
  (byte) line_ydxd::yd#5 ← phi( line::@10/(byte) line_ydxd::yd#1 line::@6/(byte) line_ydxd::yd#0 )
  (byte) line_ydxd::y#6 ← phi( line::@10/(byte) line_ydxd::y#1 line::@6/(byte) line_ydxd::y#0 )
  (byte) line_ydxd::x#5 ← phi( line::@10/(byte) line_ydxd::x#1 line::@6/(byte) line_ydxd::x#0 )
  (byte) line_ydxd::xd#2 ← phi( line::@10/(byte) line_ydxd::xd#1 line::@6/(byte) line_ydxd::xd#0 )
  (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxd::@1
line_ydxd::@1: scope:[line_ydxd]  from line_ydxd line_ydxd::@2
  (byte) line_ydxd::e#3 ← phi( line_ydxd/(byte) line_ydxd::e#0 line_ydxd::@2/(byte) line_ydxd::e#6 )
  (byte) line_ydxd::y#3 ← phi( line_ydxd/(byte) line_ydxd::y#6 line_ydxd::@2/(byte) line_ydxd::y#2 )
  (byte) line_ydxd::x#3 ← phi( line_ydxd/(byte) line_ydxd::x#5 line_ydxd::@2/(byte) line_ydxd::x#6 )
  (byte) plot::x#3 ← (byte) line_ydxd::x#3
  (byte) plot::y#3 ← (byte) line_ydxd::y#3
  call plot param-assignment
  to:line_ydxd::@5
line_ydxd::@5: scope:[line_ydxd]  from line_ydxd::@1
  (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2
  if((byte) line_ydxd::yd#5>=(byte) line_ydxd::e#1) goto line_ydxd::@2
  to:line_ydxd::@3
line_ydxd::@2: scope:[line_ydxd]  from line_ydxd::@3 line_ydxd::@5
  (byte) line_ydxd::e#6 ← phi( line_ydxd::@3/(byte) line_ydxd::e#2 line_ydxd::@5/(byte) line_ydxd::e#1 )
  (byte) line_ydxd::x#6 ← phi( line_ydxd::@3/(byte) line_ydxd::x#2 line_ydxd::@5/(byte) line_ydxd::x#3 )
  (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_ydxd::y#2<(byte~) line_ydxd::$8) goto line_ydxd::@1
  to:line_ydxd::@return
line_ydxd::@3: scope:[line_ydxd]  from line_ydxd::@5
  (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5
  to:line_ydxd::@2
line_ydxd::@return: scope:[line_ydxd]  from line_ydxd::@2
  return 
  to:@return
plot: scope:[plot]  from line_xdyd::@1 line_xdyi::@1 line_ydxd::@1 line_ydxi::@1
  (byte) plot::y#4 ← phi( line_xdyd::@1/(byte) plot::y#1 line_xdyi::@1/(byte) plot::y#0 line_ydxd::@1/(byte) plot::y#3 line_ydxi::@1/(byte) plot::y#2 )
  (byte) plot::x#4 ← phi( line_xdyd::@1/(byte) plot::x#1 line_xdyi::@1/(byte) plot::x#0 line_ydxd::@1/(byte) plot::x#3 line_ydxi::@1/(byte) plot::x#2 )
  (byte~) plot::$0 ← (const byte[]) plot_xhi#0 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#1 ← (const byte*) plot::plotter_x#0 hi= (byte~) plot::$0
  (byte~) plot::$1 ← (const byte[]) plot_xlo#0 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1
  (byte~) plot::$2 ← (const byte[]) plot_yhi#0 *idx (byte) plot::y#4
  (word) plot::plotter_y#1 ← (const word) plot::plotter_y#0 hi= (byte~) plot::$2
  (byte~) plot::$3 ← (const byte[]) plot_ylo#0 *idx (byte) plot::y#4
  (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3
  (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2
  (byte~) plot::$5 ← (const byte[]) plot_bit#0 *idx (byte) plot::x#4
  (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5
  *((byte*) plot::plotter#0) ← (byte~) plot::$6
  to:plot::@return
plot::@return: scope:[plot]  from plot
  return 
  to:@return
init_plot_tables: scope:[init_plot_tables]  from main::@3
  to:init_plot_tables::@1
init_plot_tables::@1: scope:[init_plot_tables]  from init_plot_tables init_plot_tables::@2
  (byte) init_plot_tables::bits#3 ← phi( init_plot_tables/(const byte) init_plot_tables::bits#0 init_plot_tables::@2/(byte) init_plot_tables::bits#4 )
  (byte) init_plot_tables::x#2 ← phi( init_plot_tables/(const byte) init_plot_tables::x#0 init_plot_tables::@2/(byte) init_plot_tables::x#1 )
  (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248
  *((const byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0
  *((const byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← (const byte) init_plot_tables::$1
  *((const byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3
  (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1
  if((byte) init_plot_tables::bits#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@2
  to:init_plot_tables::@5
init_plot_tables::@2: scope:[init_plot_tables]  from init_plot_tables::@1 init_plot_tables::@5
  (byte) init_plot_tables::bits#4 ← phi( init_plot_tables::@1/(byte) init_plot_tables::bits#1 init_plot_tables::@5/(const byte) init_plot_tables::bits#2 )
  (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2
  if((byte) init_plot_tables::x#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@1
  to:init_plot_tables::@3
init_plot_tables::@5: scope:[init_plot_tables]  from init_plot_tables::@1
  to:init_plot_tables::@2
init_plot_tables::@3: scope:[init_plot_tables]  from init_plot_tables::@2 init_plot_tables::@4
  (byte*) init_plot_tables::yoffs#2 ← phi( init_plot_tables::@4/(byte*) init_plot_tables::yoffs#4 init_plot_tables::@2/(const byte*) init_plot_tables::yoffs#0 )
  (byte) init_plot_tables::y#2 ← phi( init_plot_tables::@4/(byte) init_plot_tables::y#1 init_plot_tables::@2/(const byte) init_plot_tables::y#0 )
  (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2
  (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7
  *((const byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8
  (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2
  *((const byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9
  (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  if((byte~) init_plot_tables::$10!=(byte/signed byte/word/signed word) 7) goto init_plot_tables::@4
  to:init_plot_tables::@7
init_plot_tables::@4: scope:[init_plot_tables]  from init_plot_tables::@3 init_plot_tables::@7
  (byte*) init_plot_tables::yoffs#4 ← phi( init_plot_tables::@3/(byte*) init_plot_tables::yoffs#2 init_plot_tables::@7/(byte*) init_plot_tables::yoffs#1 )
  (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2
  if((byte) init_plot_tables::y#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@3
  to:init_plot_tables::@return
init_plot_tables::@7: scope:[init_plot_tables]  from init_plot_tables::@3
  (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320
  to:init_plot_tables::@4
init_plot_tables::@return: scope:[init_plot_tables]  from init_plot_tables::@4
  return 
  to:@return
init_screen: scope:[init_screen]  from main
  to:init_screen::@1
init_screen::@1: scope:[init_screen]  from init_screen init_screen::@1
  (byte*) init_screen::b#2 ← phi( init_screen/(const byte*) init_screen::b#0 init_screen::@1/(byte*) init_screen::b#1 )
  *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0
  (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2
  if((byte*) init_screen::b#1!=(const byte*) init_screen::$0) goto init_screen::@1
  to:init_screen::@2
init_screen::@2: scope:[init_screen]  from init_screen::@1 init_screen::@2
  (byte*) init_screen::c#2 ← phi( init_screen::@2/(byte*) init_screen::c#1 init_screen::@1/(const byte*) init_screen::c#0 )
  *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20
  (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2
  if((byte*) init_screen::c#1!=(const byte*) init_screen::$2) goto init_screen::@2
  to:init_screen::@return
init_screen::@return: scope:[init_screen]  from init_screen::@2
  return 
  to:@return
@10: scope:[]  from @begin
  call main param-assignment
  to:@end
@end: scope:[]  from @10

Not culling empty block because it shares successor with its predecessor. (label) init_plot_tables::@5
Not aliassing across scopes: line::x0#0 lines::$0
Not aliassing across scopes: line::x1#0 lines::$2
Not aliassing across scopes: line::y0#0 lines::$3
Not aliassing across scopes: line::y1#0 lines::$5
Not aliassing across scopes: line_ydxi::y#0 line::y0#0
Not aliassing across scopes: line_ydxi::x#0 line::x0#0
Not aliassing across scopes: line_ydxi::y1#0 line::y1#0
Not aliassing across scopes: line_ydxi::yd#0 line::yd#1
Not aliassing across scopes: line_ydxi::xd#0 line::xd#1
Not aliassing across scopes: line_xdyi::x#0 line::x0#0
Not aliassing across scopes: line_xdyi::y#0 line::y0#0
Not aliassing across scopes: line_xdyi::x1#0 line::x1#0
Not aliassing across scopes: line_xdyi::xd#0 line::xd#1
Not aliassing across scopes: line_xdyi::yd#0 line::yd#1
Not aliassing across scopes: line_ydxd::y#0 line::y1#0
Not aliassing across scopes: line_ydxd::x#0 line::x1#0
Not aliassing across scopes: line_ydxd::y1#0 line::y0#0
Not aliassing across scopes: line_ydxd::yd#0 line::yd#0
Not aliassing across scopes: line_ydxd::xd#0 line::xd#1
Not aliassing across scopes: line_xdyd::x#0 line::x0#0
Not aliassing across scopes: line_xdyd::y#0 line::y0#0
Not aliassing across scopes: line_xdyd::x1#0 line::x1#0
Not aliassing across scopes: line_xdyd::xd#0 line::xd#1
Not aliassing across scopes: line_xdyd::yd#0 line::yd#0
Not aliassing across scopes: line_ydxd::y#1 line::y0#0
Not aliassing across scopes: line_ydxd::x#1 line::x0#0
Not aliassing across scopes: line_ydxd::y1#1 line::y1#0
Not aliassing across scopes: line_ydxd::yd#1 line::yd#3
Not aliassing across scopes: line_ydxd::xd#1 line::xd#0
Not aliassing across scopes: line_xdyd::x#1 line::x1#0
Not aliassing across scopes: line_xdyd::y#1 line::y1#0
Not aliassing across scopes: line_xdyd::x1#1 line::x0#0
Not aliassing across scopes: line_xdyd::xd#1 line::xd#0
Not aliassing across scopes: line_xdyd::yd#1 line::yd#3
Not aliassing across scopes: line_ydxi::y#1 line::y1#0
Not aliassing across scopes: line_ydxi::x#1 line::x1#0
Not aliassing across scopes: line_ydxi::y1#1 line::y0#0
Not aliassing across scopes: line_ydxi::yd#1 line::yd#10
Not aliassing across scopes: line_ydxi::xd#1 line::xd#0
Not aliassing across scopes: line_xdyi::x#1 line::x1#0
Not aliassing across scopes: line_xdyi::y#1 line::y1#0
Not aliassing across scopes: line_xdyi::x1#1 line::x0#0
Not aliassing across scopes: line_xdyi::xd#1 line::xd#0
Not aliassing across scopes: line_xdyi::yd#1 line::yd#10
Not aliassing across scopes: line_xdyi::yd#2 line_xdyi::yd#0
Not aliassing across scopes: line_xdyi::x#6 line_xdyi::x#0
Not aliassing across scopes: line_xdyi::y#5 line_xdyi::y#0
Not aliassing across scopes: line_xdyi::xd#5 line_xdyi::xd#0
Not aliassing across scopes: line_xdyi::x1#6 line_xdyi::x1#0
Not aliassing across scopes: plot::x#0 line_xdyi::x#3
Not aliassing across scopes: plot::y#0 line_xdyi::y#3
Not aliassing across scopes: line_xdyd::yd#2 line_xdyd::yd#0
Not aliassing across scopes: line_xdyd::x#6 line_xdyd::x#0
Not aliassing across scopes: line_xdyd::y#5 line_xdyd::y#0
Not aliassing across scopes: line_xdyd::xd#5 line_xdyd::xd#0
Not aliassing across scopes: line_xdyd::x1#6 line_xdyd::x1#0
Not aliassing across scopes: plot::x#1 line_xdyd::x#3
Not aliassing across scopes: plot::y#1 line_xdyd::y#3
Not aliassing across scopes: line_ydxi::xd#2 line_ydxi::xd#1
Not aliassing across scopes: line_ydxi::x#5 line_ydxi::x#1
Not aliassing across scopes: line_ydxi::y#6 line_ydxi::y#1
Not aliassing across scopes: line_ydxi::yd#5 line_ydxi::yd#1
Not aliassing across scopes: line_ydxi::y1#6 line_ydxi::y1#1
Not aliassing across scopes: plot::x#2 line_ydxi::x#3
Not aliassing across scopes: plot::y#2 line_ydxi::y#3
Not aliassing across scopes: line_ydxd::xd#2 line_ydxd::xd#1
Not aliassing across scopes: line_ydxd::x#5 line_ydxd::x#1
Not aliassing across scopes: line_ydxd::y#6 line_ydxd::y#1
Not aliassing across scopes: line_ydxd::yd#5 line_ydxd::yd#1
Not aliassing across scopes: line_ydxd::y1#6 line_ydxd::y1#1
Not aliassing across scopes: plot::x#3 line_ydxd::x#3
Not aliassing across scopes: plot::y#3 line_ydxd::y#3
Not aliassing across scopes: plot::x#4 plot::x#1
Not aliassing across scopes: plot::y#4 plot::y#1
Alias (byte) lines::l#2 = (byte~) lines::$1 (byte~) lines::$4 
Succesful SSA optimization Pass2AliasElimination
CONTROL FLOW GRAPH
@begin: scope:[]  from
  to:@10
main: scope:[main]  from @10
  *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0
  *((const byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0
  *((const byte*) D011#0) ← (const byte) main::$2
  *((const byte*) D018#0) ← (byte/signed byte/word/signed word) 24
  call init_screen param-assignment
  to:main::@3
main::@3: scope:[main]  from main
  call init_plot_tables param-assignment
  to:main::@1
main::@1: scope:[main]  from main::@3 main::@5
  call lines param-assignment
  to:main::@5
main::@5: scope:[main]  from main::@1
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@5
  return 
  to:@return
lines: scope:[lines]  from main::@1
  to:lines::@1
lines::@1: scope:[lines]  from lines lines::@3
  (byte) lines::l#2 ← phi( lines/(const byte) lines::l#0 lines::@3/(byte) lines::l#1 )
  (byte~) lines::$0 ← (const byte[]) lines_x#0 *idx (byte) lines::l#2
  (byte~) lines::$2 ← (const byte[]) lines_x#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2
  (byte~) lines::$3 ← (const byte[]) lines_y#0 *idx (byte) lines::l#2
  (byte~) lines::$5 ← (const byte[]) lines_y#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2
  (byte) line::x0#0 ← (byte~) lines::$0
  (byte) line::x1#0 ← (byte~) lines::$2
  (byte) line::y0#0 ← (byte~) lines::$3
  (byte) line::y1#0 ← (byte~) lines::$5
  call line param-assignment
  to:lines::@3
lines::@3: scope:[lines]  from lines::@1
  (byte) lines::l#1 ← ++ (byte) lines::l#2
  if((byte) lines::l#1<(const byte) lines_cnt#0) goto lines::@1
  to:lines::@return
lines::@return: scope:[lines]  from lines::@3
  return 
  to:@return
line: scope:[line]  from lines::@1
  if((byte) line::x0#0>=(byte) line::x1#0) goto line::@1
  to:line::@15
line::@1: scope:[line]  from line
  (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0
  if((byte) line::y0#0>=(byte) line::y1#0) goto line::@9
  to:line::@23
line::@15: scope:[line]  from line
  (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0
  if((byte) line::y0#0>=(byte) line::y1#0) goto line::@2
  to:line::@16
line::@2: scope:[line]  from line::@15
  (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0
  if((byte) line::yd#0>=(byte) line::xd#1) goto line::@6
  to:line::@20
line::@16: scope:[line]  from line::@15
  (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0
  if((byte) line::yd#1>=(byte) line::xd#1) goto line::@3
  to:line::@17
line::@3: scope:[line]  from line::@16
  (byte) line_ydxi::y#0 ← (byte) line::y0#0
  (byte) line_ydxi::x#0 ← (byte) line::x0#0
  (byte) line_ydxi::y1#0 ← (byte) line::y1#0
  (byte) line_ydxi::yd#0 ← (byte) line::yd#1
  (byte) line_ydxi::xd#0 ← (byte) line::xd#1
  call line_ydxi param-assignment
  to:line::@return
line::@17: scope:[line]  from line::@16
  (byte) line_xdyi::x#0 ← (byte) line::x0#0
  (byte) line_xdyi::y#0 ← (byte) line::y0#0
  (byte) line_xdyi::x1#0 ← (byte) line::x1#0
  (byte) line_xdyi::xd#0 ← (byte) line::xd#1
  (byte) line_xdyi::yd#0 ← (byte) line::yd#1
  call line_xdyi param-assignment
  to:line::@return
line::@6: scope:[line]  from line::@2
  (byte) line_ydxd::y#0 ← (byte) line::y1#0
  (byte) line_ydxd::x#0 ← (byte) line::x1#0
  (byte) line_ydxd::y1#0 ← (byte) line::y0#0
  (byte) line_ydxd::yd#0 ← (byte) line::yd#0
  (byte) line_ydxd::xd#0 ← (byte) line::xd#1
  call line_ydxd param-assignment
  to:line::@return
line::@20: scope:[line]  from line::@2
  (byte) line_xdyd::x#0 ← (byte) line::x0#0
  (byte) line_xdyd::y#0 ← (byte) line::y0#0
  (byte) line_xdyd::x1#0 ← (byte) line::x1#0
  (byte) line_xdyd::xd#0 ← (byte) line::xd#1
  (byte) line_xdyd::yd#0 ← (byte) line::yd#0
  call line_xdyd param-assignment
  to:line::@return
line::@9: scope:[line]  from line::@1
  (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0
  if((byte) line::yd#10>=(byte) line::xd#0) goto line::@13
  to:line::@27
line::@23: scope:[line]  from line::@1
  (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0
  if((byte) line::yd#3>=(byte) line::xd#0) goto line::@10
  to:line::@24
line::@10: scope:[line]  from line::@23
  (byte) line_ydxd::y#1 ← (byte) line::y0#0
  (byte) line_ydxd::x#1 ← (byte) line::x0#0
  (byte) line_ydxd::y1#1 ← (byte) line::y1#0
  (byte) line_ydxd::yd#1 ← (byte) line::yd#3
  (byte) line_ydxd::xd#1 ← (byte) line::xd#0
  call line_ydxd param-assignment
  to:line::@return
line::@24: scope:[line]  from line::@23
  (byte) line_xdyd::x#1 ← (byte) line::x1#0
  (byte) line_xdyd::y#1 ← (byte) line::y1#0
  (byte) line_xdyd::x1#1 ← (byte) line::x0#0
  (byte) line_xdyd::xd#1 ← (byte) line::xd#0
  (byte) line_xdyd::yd#1 ← (byte) line::yd#3
  call line_xdyd param-assignment
  to:line::@return
line::@13: scope:[line]  from line::@9
  (byte) line_ydxi::y#1 ← (byte) line::y1#0
  (byte) line_ydxi::x#1 ← (byte) line::x1#0
  (byte) line_ydxi::y1#1 ← (byte) line::y0#0
  (byte) line_ydxi::yd#1 ← (byte) line::yd#10
  (byte) line_ydxi::xd#1 ← (byte) line::xd#0
  call line_ydxi param-assignment
  to:line::@return
line::@27: scope:[line]  from line::@9
  (byte) line_xdyi::x#1 ← (byte) line::x1#0
  (byte) line_xdyi::y#1 ← (byte) line::y1#0
  (byte) line_xdyi::x1#1 ← (byte) line::x0#0
  (byte) line_xdyi::xd#1 ← (byte) line::xd#0
  (byte) line_xdyi::yd#1 ← (byte) line::yd#10
  call line_xdyi param-assignment
  to:line::@return
line::@return: scope:[line]  from line::@10 line::@13 line::@17 line::@20 line::@24 line::@27 line::@3 line::@6
  return 
  to:@return
line_xdyi: scope:[line_xdyi]  from line::@17 line::@27
  (byte) line_xdyi::x1#6 ← phi( line::@17/(byte) line_xdyi::x1#0 line::@27/(byte) line_xdyi::x1#1 )
  (byte) line_xdyi::xd#5 ← phi( line::@17/(byte) line_xdyi::xd#0 line::@27/(byte) line_xdyi::xd#1 )
  (byte) line_xdyi::y#5 ← phi( line::@17/(byte) line_xdyi::y#0 line::@27/(byte) line_xdyi::y#1 )
  (byte) line_xdyi::x#6 ← phi( line::@17/(byte) line_xdyi::x#0 line::@27/(byte) line_xdyi::x#1 )
  (byte) line_xdyi::yd#2 ← phi( line::@17/(byte) line_xdyi::yd#0 line::@27/(byte) line_xdyi::yd#1 )
  (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyi::@1
line_xdyi::@1: scope:[line_xdyi]  from line_xdyi line_xdyi::@2
  (byte) line_xdyi::e#3 ← phi( line_xdyi/(byte) line_xdyi::e#0 line_xdyi::@2/(byte) line_xdyi::e#6 )
  (byte) line_xdyi::y#3 ← phi( line_xdyi/(byte) line_xdyi::y#5 line_xdyi::@2/(byte) line_xdyi::y#6 )
  (byte) line_xdyi::x#3 ← phi( line_xdyi/(byte) line_xdyi::x#6 line_xdyi::@2/(byte) line_xdyi::x#2 )
  (byte) plot::x#0 ← (byte) line_xdyi::x#3
  (byte) plot::y#0 ← (byte) line_xdyi::y#3
  call plot param-assignment
  to:line_xdyi::@5
line_xdyi::@5: scope:[line_xdyi]  from line_xdyi::@1
  (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2
  if((byte) line_xdyi::xd#5>=(byte) line_xdyi::e#1) goto line_xdyi::@2
  to:line_xdyi::@3
line_xdyi::@2: scope:[line_xdyi]  from line_xdyi::@3 line_xdyi::@5
  (byte) line_xdyi::e#6 ← phi( line_xdyi::@3/(byte) line_xdyi::e#2 line_xdyi::@5/(byte) line_xdyi::e#1 )
  (byte) line_xdyi::y#6 ← phi( line_xdyi::@3/(byte) line_xdyi::y#2 line_xdyi::@5/(byte) line_xdyi::y#3 )
  (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_xdyi::x#2<(byte~) line_xdyi::$8) goto line_xdyi::@1
  to:line_xdyi::@return
line_xdyi::@3: scope:[line_xdyi]  from line_xdyi::@5
  (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5
  to:line_xdyi::@2
line_xdyi::@return: scope:[line_xdyi]  from line_xdyi::@2
  return 
  to:@return
line_xdyd: scope:[line_xdyd]  from line::@20 line::@24
  (byte) line_xdyd::x1#6 ← phi( line::@20/(byte) line_xdyd::x1#0 line::@24/(byte) line_xdyd::x1#1 )
  (byte) line_xdyd::xd#5 ← phi( line::@20/(byte) line_xdyd::xd#0 line::@24/(byte) line_xdyd::xd#1 )
  (byte) line_xdyd::y#5 ← phi( line::@20/(byte) line_xdyd::y#0 line::@24/(byte) line_xdyd::y#1 )
  (byte) line_xdyd::x#6 ← phi( line::@20/(byte) line_xdyd::x#0 line::@24/(byte) line_xdyd::x#1 )
  (byte) line_xdyd::yd#2 ← phi( line::@20/(byte) line_xdyd::yd#0 line::@24/(byte) line_xdyd::yd#1 )
  (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyd::@1
line_xdyd::@1: scope:[line_xdyd]  from line_xdyd line_xdyd::@2
  (byte) line_xdyd::e#3 ← phi( line_xdyd/(byte) line_xdyd::e#0 line_xdyd::@2/(byte) line_xdyd::e#6 )
  (byte) line_xdyd::y#3 ← phi( line_xdyd/(byte) line_xdyd::y#5 line_xdyd::@2/(byte) line_xdyd::y#6 )
  (byte) line_xdyd::x#3 ← phi( line_xdyd/(byte) line_xdyd::x#6 line_xdyd::@2/(byte) line_xdyd::x#2 )
  (byte) plot::x#1 ← (byte) line_xdyd::x#3
  (byte) plot::y#1 ← (byte) line_xdyd::y#3
  call plot param-assignment
  to:line_xdyd::@5
line_xdyd::@5: scope:[line_xdyd]  from line_xdyd::@1
  (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2
  if((byte) line_xdyd::xd#5>=(byte) line_xdyd::e#1) goto line_xdyd::@2
  to:line_xdyd::@3
line_xdyd::@2: scope:[line_xdyd]  from line_xdyd::@3 line_xdyd::@5
  (byte) line_xdyd::e#6 ← phi( line_xdyd::@3/(byte) line_xdyd::e#2 line_xdyd::@5/(byte) line_xdyd::e#1 )
  (byte) line_xdyd::y#6 ← phi( line_xdyd::@3/(byte) line_xdyd::y#2 line_xdyd::@5/(byte) line_xdyd::y#3 )
  (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_xdyd::x#2<(byte~) line_xdyd::$8) goto line_xdyd::@1
  to:line_xdyd::@return
line_xdyd::@3: scope:[line_xdyd]  from line_xdyd::@5
  (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5
  to:line_xdyd::@2
line_xdyd::@return: scope:[line_xdyd]  from line_xdyd::@2
  return 
  to:@return
line_ydxi: scope:[line_ydxi]  from line::@13 line::@3
  (byte) line_ydxi::y1#6 ← phi( line::@13/(byte) line_ydxi::y1#1 line::@3/(byte) line_ydxi::y1#0 )
  (byte) line_ydxi::yd#5 ← phi( line::@13/(byte) line_ydxi::yd#1 line::@3/(byte) line_ydxi::yd#0 )
  (byte) line_ydxi::y#6 ← phi( line::@13/(byte) line_ydxi::y#1 line::@3/(byte) line_ydxi::y#0 )
  (byte) line_ydxi::x#5 ← phi( line::@13/(byte) line_ydxi::x#1 line::@3/(byte) line_ydxi::x#0 )
  (byte) line_ydxi::xd#2 ← phi( line::@13/(byte) line_ydxi::xd#1 line::@3/(byte) line_ydxi::xd#0 )
  (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxi::@1
line_ydxi::@1: scope:[line_ydxi]  from line_ydxi line_ydxi::@2
  (byte) line_ydxi::e#3 ← phi( line_ydxi/(byte) line_ydxi::e#0 line_ydxi::@2/(byte) line_ydxi::e#6 )
  (byte) line_ydxi::y#3 ← phi( line_ydxi/(byte) line_ydxi::y#6 line_ydxi::@2/(byte) line_ydxi::y#2 )
  (byte) line_ydxi::x#3 ← phi( line_ydxi/(byte) line_ydxi::x#5 line_ydxi::@2/(byte) line_ydxi::x#6 )
  (byte) plot::x#2 ← (byte) line_ydxi::x#3
  (byte) plot::y#2 ← (byte) line_ydxi::y#3
  call plot param-assignment
  to:line_ydxi::@5
line_ydxi::@5: scope:[line_ydxi]  from line_ydxi::@1
  (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2
  if((byte) line_ydxi::yd#5>=(byte) line_ydxi::e#1) goto line_ydxi::@2
  to:line_ydxi::@3
line_ydxi::@2: scope:[line_ydxi]  from line_ydxi::@3 line_ydxi::@5
  (byte) line_ydxi::e#6 ← phi( line_ydxi::@3/(byte) line_ydxi::e#2 line_ydxi::@5/(byte) line_ydxi::e#1 )
  (byte) line_ydxi::x#6 ← phi( line_ydxi::@3/(byte) line_ydxi::x#2 line_ydxi::@5/(byte) line_ydxi::x#3 )
  (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_ydxi::y#2<(byte~) line_ydxi::$8) goto line_ydxi::@1
  to:line_ydxi::@return
line_ydxi::@3: scope:[line_ydxi]  from line_ydxi::@5
  (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5
  to:line_ydxi::@2
line_ydxi::@return: scope:[line_ydxi]  from line_ydxi::@2
  return 
  to:@return
line_ydxd: scope:[line_ydxd]  from line::@10 line::@6
  (byte) line_ydxd::y1#6 ← phi( line::@10/(byte) line_ydxd::y1#1 line::@6/(byte) line_ydxd::y1#0 )
  (byte) line_ydxd::yd#5 ← phi( line::@10/(byte) line_ydxd::yd#1 line::@6/(byte) line_ydxd::yd#0 )
  (byte) line_ydxd::y#6 ← phi( line::@10/(byte) line_ydxd::y#1 line::@6/(byte) line_ydxd::y#0 )
  (byte) line_ydxd::x#5 ← phi( line::@10/(byte) line_ydxd::x#1 line::@6/(byte) line_ydxd::x#0 )
  (byte) line_ydxd::xd#2 ← phi( line::@10/(byte) line_ydxd::xd#1 line::@6/(byte) line_ydxd::xd#0 )
  (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxd::@1
line_ydxd::@1: scope:[line_ydxd]  from line_ydxd line_ydxd::@2
  (byte) line_ydxd::e#3 ← phi( line_ydxd/(byte) line_ydxd::e#0 line_ydxd::@2/(byte) line_ydxd::e#6 )
  (byte) line_ydxd::y#3 ← phi( line_ydxd/(byte) line_ydxd::y#6 line_ydxd::@2/(byte) line_ydxd::y#2 )
  (byte) line_ydxd::x#3 ← phi( line_ydxd/(byte) line_ydxd::x#5 line_ydxd::@2/(byte) line_ydxd::x#6 )
  (byte) plot::x#3 ← (byte) line_ydxd::x#3
  (byte) plot::y#3 ← (byte) line_ydxd::y#3
  call plot param-assignment
  to:line_ydxd::@5
line_ydxd::@5: scope:[line_ydxd]  from line_ydxd::@1
  (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2
  if((byte) line_ydxd::yd#5>=(byte) line_ydxd::e#1) goto line_ydxd::@2
  to:line_ydxd::@3
line_ydxd::@2: scope:[line_ydxd]  from line_ydxd::@3 line_ydxd::@5
  (byte) line_ydxd::e#6 ← phi( line_ydxd::@3/(byte) line_ydxd::e#2 line_ydxd::@5/(byte) line_ydxd::e#1 )
  (byte) line_ydxd::x#6 ← phi( line_ydxd::@3/(byte) line_ydxd::x#2 line_ydxd::@5/(byte) line_ydxd::x#3 )
  (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_ydxd::y#2<(byte~) line_ydxd::$8) goto line_ydxd::@1
  to:line_ydxd::@return
line_ydxd::@3: scope:[line_ydxd]  from line_ydxd::@5
  (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5
  to:line_ydxd::@2
line_ydxd::@return: scope:[line_ydxd]  from line_ydxd::@2
  return 
  to:@return
plot: scope:[plot]  from line_xdyd::@1 line_xdyi::@1 line_ydxd::@1 line_ydxi::@1
  (byte) plot::y#4 ← phi( line_xdyd::@1/(byte) plot::y#1 line_xdyi::@1/(byte) plot::y#0 line_ydxd::@1/(byte) plot::y#3 line_ydxi::@1/(byte) plot::y#2 )
  (byte) plot::x#4 ← phi( line_xdyd::@1/(byte) plot::x#1 line_xdyi::@1/(byte) plot::x#0 line_ydxd::@1/(byte) plot::x#3 line_ydxi::@1/(byte) plot::x#2 )
  (byte~) plot::$0 ← (const byte[]) plot_xhi#0 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#1 ← (const byte*) plot::plotter_x#0 hi= (byte~) plot::$0
  (byte~) plot::$1 ← (const byte[]) plot_xlo#0 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1
  (byte~) plot::$2 ← (const byte[]) plot_yhi#0 *idx (byte) plot::y#4
  (word) plot::plotter_y#1 ← (const word) plot::plotter_y#0 hi= (byte~) plot::$2
  (byte~) plot::$3 ← (const byte[]) plot_ylo#0 *idx (byte) plot::y#4
  (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3
  (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2
  (byte~) plot::$5 ← (const byte[]) plot_bit#0 *idx (byte) plot::x#4
  (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5
  *((byte*) plot::plotter#0) ← (byte~) plot::$6
  to:plot::@return
plot::@return: scope:[plot]  from plot
  return 
  to:@return
init_plot_tables: scope:[init_plot_tables]  from main::@3
  to:init_plot_tables::@1
init_plot_tables::@1: scope:[init_plot_tables]  from init_plot_tables init_plot_tables::@2
  (byte) init_plot_tables::bits#3 ← phi( init_plot_tables/(const byte) init_plot_tables::bits#0 init_plot_tables::@2/(byte) init_plot_tables::bits#4 )
  (byte) init_plot_tables::x#2 ← phi( init_plot_tables/(const byte) init_plot_tables::x#0 init_plot_tables::@2/(byte) init_plot_tables::x#1 )
  (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248
  *((const byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0
  *((const byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← (const byte) init_plot_tables::$1
  *((const byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3
  (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1
  if((byte) init_plot_tables::bits#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@2
  to:init_plot_tables::@5
init_plot_tables::@2: scope:[init_plot_tables]  from init_plot_tables::@1 init_plot_tables::@5
  (byte) init_plot_tables::bits#4 ← phi( init_plot_tables::@1/(byte) init_plot_tables::bits#1 init_plot_tables::@5/(const byte) init_plot_tables::bits#2 )
  (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2
  if((byte) init_plot_tables::x#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@1
  to:init_plot_tables::@3
init_plot_tables::@5: scope:[init_plot_tables]  from init_plot_tables::@1
  to:init_plot_tables::@2
init_plot_tables::@3: scope:[init_plot_tables]  from init_plot_tables::@2 init_plot_tables::@4
  (byte*) init_plot_tables::yoffs#2 ← phi( init_plot_tables::@4/(byte*) init_plot_tables::yoffs#4 init_plot_tables::@2/(const byte*) init_plot_tables::yoffs#0 )
  (byte) init_plot_tables::y#2 ← phi( init_plot_tables::@4/(byte) init_plot_tables::y#1 init_plot_tables::@2/(const byte) init_plot_tables::y#0 )
  (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2
  (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7
  *((const byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8
  (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2
  *((const byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9
  (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  if((byte~) init_plot_tables::$10!=(byte/signed byte/word/signed word) 7) goto init_plot_tables::@4
  to:init_plot_tables::@7
init_plot_tables::@4: scope:[init_plot_tables]  from init_plot_tables::@3 init_plot_tables::@7
  (byte*) init_plot_tables::yoffs#4 ← phi( init_plot_tables::@3/(byte*) init_plot_tables::yoffs#2 init_plot_tables::@7/(byte*) init_plot_tables::yoffs#1 )
  (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2
  if((byte) init_plot_tables::y#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@3
  to:init_plot_tables::@return
init_plot_tables::@7: scope:[init_plot_tables]  from init_plot_tables::@3
  (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320
  to:init_plot_tables::@4
init_plot_tables::@return: scope:[init_plot_tables]  from init_plot_tables::@4
  return 
  to:@return
init_screen: scope:[init_screen]  from main
  to:init_screen::@1
init_screen::@1: scope:[init_screen]  from init_screen init_screen::@1
  (byte*) init_screen::b#2 ← phi( init_screen/(const byte*) init_screen::b#0 init_screen::@1/(byte*) init_screen::b#1 )
  *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0
  (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2
  if((byte*) init_screen::b#1!=(const byte*) init_screen::$0) goto init_screen::@1
  to:init_screen::@2
init_screen::@2: scope:[init_screen]  from init_screen::@1 init_screen::@2
  (byte*) init_screen::c#2 ← phi( init_screen::@2/(byte*) init_screen::c#1 init_screen::@1/(const byte*) init_screen::c#0 )
  *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20
  (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2
  if((byte*) init_screen::c#1!=(const byte*) init_screen::$2) goto init_screen::@2
  to:init_screen::@return
init_screen::@return: scope:[init_screen]  from init_screen::@2
  return 
  to:@return
@10: scope:[]  from @begin
  call main param-assignment
  to:@end
@end: scope:[]  from @10

Not aliassing across scopes: line::x0#0 lines::$0
Not aliassing across scopes: line::x1#0 lines::$2
Not aliassing across scopes: line::y0#0 lines::$3
Not aliassing across scopes: line::y1#0 lines::$5
Not aliassing across scopes: line_ydxi::y#0 line::y0#0
Not aliassing across scopes: line_ydxi::x#0 line::x0#0
Not aliassing across scopes: line_ydxi::y1#0 line::y1#0
Not aliassing across scopes: line_ydxi::yd#0 line::yd#1
Not aliassing across scopes: line_ydxi::xd#0 line::xd#1
Not aliassing across scopes: line_xdyi::x#0 line::x0#0
Not aliassing across scopes: line_xdyi::y#0 line::y0#0
Not aliassing across scopes: line_xdyi::x1#0 line::x1#0
Not aliassing across scopes: line_xdyi::xd#0 line::xd#1
Not aliassing across scopes: line_xdyi::yd#0 line::yd#1
Not aliassing across scopes: line_ydxd::y#0 line::y1#0
Not aliassing across scopes: line_ydxd::x#0 line::x1#0
Not aliassing across scopes: line_ydxd::y1#0 line::y0#0
Not aliassing across scopes: line_ydxd::yd#0 line::yd#0
Not aliassing across scopes: line_ydxd::xd#0 line::xd#1
Not aliassing across scopes: line_xdyd::x#0 line::x0#0
Not aliassing across scopes: line_xdyd::y#0 line::y0#0
Not aliassing across scopes: line_xdyd::x1#0 line::x1#0
Not aliassing across scopes: line_xdyd::xd#0 line::xd#1
Not aliassing across scopes: line_xdyd::yd#0 line::yd#0
Not aliassing across scopes: line_ydxd::y#1 line::y0#0
Not aliassing across scopes: line_ydxd::x#1 line::x0#0
Not aliassing across scopes: line_ydxd::y1#1 line::y1#0
Not aliassing across scopes: line_ydxd::yd#1 line::yd#3
Not aliassing across scopes: line_ydxd::xd#1 line::xd#0
Not aliassing across scopes: line_xdyd::x#1 line::x1#0
Not aliassing across scopes: line_xdyd::y#1 line::y1#0
Not aliassing across scopes: line_xdyd::x1#1 line::x0#0
Not aliassing across scopes: line_xdyd::xd#1 line::xd#0
Not aliassing across scopes: line_xdyd::yd#1 line::yd#3
Not aliassing across scopes: line_ydxi::y#1 line::y1#0
Not aliassing across scopes: line_ydxi::x#1 line::x1#0
Not aliassing across scopes: line_ydxi::y1#1 line::y0#0
Not aliassing across scopes: line_ydxi::yd#1 line::yd#10
Not aliassing across scopes: line_ydxi::xd#1 line::xd#0
Not aliassing across scopes: line_xdyi::x#1 line::x1#0
Not aliassing across scopes: line_xdyi::y#1 line::y1#0
Not aliassing across scopes: line_xdyi::x1#1 line::x0#0
Not aliassing across scopes: line_xdyi::xd#1 line::xd#0
Not aliassing across scopes: line_xdyi::yd#1 line::yd#10
Not aliassing across scopes: line_xdyi::yd#2 line_xdyi::yd#0
Not aliassing across scopes: line_xdyi::x#6 line_xdyi::x#0
Not aliassing across scopes: line_xdyi::y#5 line_xdyi::y#0
Not aliassing across scopes: line_xdyi::xd#5 line_xdyi::xd#0
Not aliassing across scopes: line_xdyi::x1#6 line_xdyi::x1#0
Not aliassing across scopes: plot::x#0 line_xdyi::x#3
Not aliassing across scopes: plot::y#0 line_xdyi::y#3
Not aliassing across scopes: line_xdyd::yd#2 line_xdyd::yd#0
Not aliassing across scopes: line_xdyd::x#6 line_xdyd::x#0
Not aliassing across scopes: line_xdyd::y#5 line_xdyd::y#0
Not aliassing across scopes: line_xdyd::xd#5 line_xdyd::xd#0
Not aliassing across scopes: line_xdyd::x1#6 line_xdyd::x1#0
Not aliassing across scopes: plot::x#1 line_xdyd::x#3
Not aliassing across scopes: plot::y#1 line_xdyd::y#3
Not aliassing across scopes: line_ydxi::xd#2 line_ydxi::xd#1
Not aliassing across scopes: line_ydxi::x#5 line_ydxi::x#1
Not aliassing across scopes: line_ydxi::y#6 line_ydxi::y#1
Not aliassing across scopes: line_ydxi::yd#5 line_ydxi::yd#1
Not aliassing across scopes: line_ydxi::y1#6 line_ydxi::y1#1
Not aliassing across scopes: plot::x#2 line_ydxi::x#3
Not aliassing across scopes: plot::y#2 line_ydxi::y#3
Not aliassing across scopes: line_ydxd::xd#2 line_ydxd::xd#1
Not aliassing across scopes: line_ydxd::x#5 line_ydxd::x#1
Not aliassing across scopes: line_ydxd::y#6 line_ydxd::y#1
Not aliassing across scopes: line_ydxd::yd#5 line_ydxd::yd#1
Not aliassing across scopes: line_ydxd::y1#6 line_ydxd::y1#1
Not aliassing across scopes: plot::x#3 line_ydxd::x#3
Not aliassing across scopes: plot::y#3 line_ydxd::y#3
Not aliassing across scopes: plot::x#4 plot::x#1
Not aliassing across scopes: plot::y#4 plot::y#1
Multiple usages for variable. Not optimizing sub-constant (byte) lines::l#2
Multiple usages for variable. Not optimizing sub-constant (byte) lines::l#2
Multiple usages for variable. Not optimizing sub-constant (byte) lines::l#2
Multiple usages for variable. Not optimizing sub-constant (byte) lines::l#2
Multiple usages for variable. Not optimizing sub-constant (byte) line_xdyi::x#3
Multiple usages for variable. Not optimizing sub-constant (byte) line_xdyi::y#3
Multiple usages for variable. Not optimizing sub-constant (byte) line_xdyd::x#3
Multiple usages for variable. Not optimizing sub-constant (byte) line_ydxi::y#3
Multiple usages for variable. Not optimizing sub-constant (byte) line_ydxi::x#3
Multiple usages for variable. Not optimizing sub-constant (byte) line_ydxd::y#3
Multiple usages for variable. Not optimizing sub-constant (byte) plot::x#4
Multiple usages for variable. Not optimizing sub-constant (byte) plot::x#4
Multiple usages for variable. Not optimizing sub-constant (byte) plot::y#4
Multiple usages for variable. Not optimizing sub-constant (byte) plot::y#4
Multiple usages for variable. Not optimizing sub-constant (byte) plot::x#4
Multiple usages for variable. Not optimizing sub-constant (byte) init_plot_tables::x#2
Multiple usages for variable. Not optimizing sub-constant (byte) init_plot_tables::x#2
Multiple usages for variable. Not optimizing sub-constant (byte) init_plot_tables::x#2
Multiple usages for variable. Not optimizing sub-constant (byte) init_plot_tables::y#2
Multiple usages for variable. Not optimizing sub-constant (byte) init_plot_tables::y#2
Multiple usages for variable. Not optimizing sub-constant (byte*) init_plot_tables::yoffs#2
Not culling empty block because it shares successor with its predecessor. (label) init_plot_tables::@5
Not aliassing across scopes: line::x0#0 lines::$0
Not aliassing across scopes: line::x1#0 lines::$2
Not aliassing across scopes: line::y0#0 lines::$3
Not aliassing across scopes: line::y1#0 lines::$5
Not aliassing across scopes: line_ydxi::y#0 line::y0#0
Not aliassing across scopes: line_ydxi::x#0 line::x0#0
Not aliassing across scopes: line_ydxi::y1#0 line::y1#0
Not aliassing across scopes: line_ydxi::yd#0 line::yd#1
Not aliassing across scopes: line_ydxi::xd#0 line::xd#1
Not aliassing across scopes: line_xdyi::x#0 line::x0#0
Not aliassing across scopes: line_xdyi::y#0 line::y0#0
Not aliassing across scopes: line_xdyi::x1#0 line::x1#0
Not aliassing across scopes: line_xdyi::xd#0 line::xd#1
Not aliassing across scopes: line_xdyi::yd#0 line::yd#1
Not aliassing across scopes: line_ydxd::y#0 line::y1#0
Not aliassing across scopes: line_ydxd::x#0 line::x1#0
Not aliassing across scopes: line_ydxd::y1#0 line::y0#0
Not aliassing across scopes: line_ydxd::yd#0 line::yd#0
Not aliassing across scopes: line_ydxd::xd#0 line::xd#1
Not aliassing across scopes: line_xdyd::x#0 line::x0#0
Not aliassing across scopes: line_xdyd::y#0 line::y0#0
Not aliassing across scopes: line_xdyd::x1#0 line::x1#0
Not aliassing across scopes: line_xdyd::xd#0 line::xd#1
Not aliassing across scopes: line_xdyd::yd#0 line::yd#0
Not aliassing across scopes: line_ydxd::y#1 line::y0#0
Not aliassing across scopes: line_ydxd::x#1 line::x0#0
Not aliassing across scopes: line_ydxd::y1#1 line::y1#0
Not aliassing across scopes: line_ydxd::yd#1 line::yd#3
Not aliassing across scopes: line_ydxd::xd#1 line::xd#0
Not aliassing across scopes: line_xdyd::x#1 line::x1#0
Not aliassing across scopes: line_xdyd::y#1 line::y1#0
Not aliassing across scopes: line_xdyd::x1#1 line::x0#0
Not aliassing across scopes: line_xdyd::xd#1 line::xd#0
Not aliassing across scopes: line_xdyd::yd#1 line::yd#3
Not aliassing across scopes: line_ydxi::y#1 line::y1#0
Not aliassing across scopes: line_ydxi::x#1 line::x1#0
Not aliassing across scopes: line_ydxi::y1#1 line::y0#0
Not aliassing across scopes: line_ydxi::yd#1 line::yd#10
Not aliassing across scopes: line_ydxi::xd#1 line::xd#0
Not aliassing across scopes: line_xdyi::x#1 line::x1#0
Not aliassing across scopes: line_xdyi::y#1 line::y1#0
Not aliassing across scopes: line_xdyi::x1#1 line::x0#0
Not aliassing across scopes: line_xdyi::xd#1 line::xd#0
Not aliassing across scopes: line_xdyi::yd#1 line::yd#10
Not aliassing across scopes: line_xdyi::yd#2 line_xdyi::yd#0
Not aliassing across scopes: line_xdyi::x#6 line_xdyi::x#0
Not aliassing across scopes: line_xdyi::y#5 line_xdyi::y#0
Not aliassing across scopes: line_xdyi::xd#5 line_xdyi::xd#0
Not aliassing across scopes: line_xdyi::x1#6 line_xdyi::x1#0
Not aliassing across scopes: plot::x#0 line_xdyi::x#3
Not aliassing across scopes: plot::y#0 line_xdyi::y#3
Not aliassing across scopes: line_xdyd::yd#2 line_xdyd::yd#0
Not aliassing across scopes: line_xdyd::x#6 line_xdyd::x#0
Not aliassing across scopes: line_xdyd::y#5 line_xdyd::y#0
Not aliassing across scopes: line_xdyd::xd#5 line_xdyd::xd#0
Not aliassing across scopes: line_xdyd::x1#6 line_xdyd::x1#0
Not aliassing across scopes: plot::x#1 line_xdyd::x#3
Not aliassing across scopes: plot::y#1 line_xdyd::y#3
Not aliassing across scopes: line_ydxi::xd#2 line_ydxi::xd#1
Not aliassing across scopes: line_ydxi::x#5 line_ydxi::x#1
Not aliassing across scopes: line_ydxi::y#6 line_ydxi::y#1
Not aliassing across scopes: line_ydxi::yd#5 line_ydxi::yd#1
Not aliassing across scopes: line_ydxi::y1#6 line_ydxi::y1#1
Not aliassing across scopes: plot::x#2 line_ydxi::x#3
Not aliassing across scopes: plot::y#2 line_ydxi::y#3
Not aliassing across scopes: line_ydxd::xd#2 line_ydxd::xd#1
Not aliassing across scopes: line_ydxd::x#5 line_ydxd::x#1
Not aliassing across scopes: line_ydxd::y#6 line_ydxd::y#1
Not aliassing across scopes: line_ydxd::yd#5 line_ydxd::yd#1
Not aliassing across scopes: line_ydxd::y1#6 line_ydxd::y1#1
Not aliassing across scopes: plot::x#3 line_ydxd::x#3
Not aliassing across scopes: plot::y#3 line_ydxd::y#3
Not aliassing across scopes: plot::x#4 plot::x#1
Not aliassing across scopes: plot::y#4 plot::y#1
Multiple usages for variable. Not optimizing sub-constant (byte) lines::l#2
Multiple usages for variable. Not optimizing sub-constant (byte) lines::l#2
Multiple usages for variable. Not optimizing sub-constant (byte) lines::l#2
Multiple usages for variable. Not optimizing sub-constant (byte) lines::l#2
Multiple usages for variable. Not optimizing sub-constant (byte) line_xdyi::x#3
Multiple usages for variable. Not optimizing sub-constant (byte) line_xdyi::y#3
Multiple usages for variable. Not optimizing sub-constant (byte) line_xdyd::x#3
Multiple usages for variable. Not optimizing sub-constant (byte) line_ydxi::y#3
Multiple usages for variable. Not optimizing sub-constant (byte) line_ydxi::x#3
Multiple usages for variable. Not optimizing sub-constant (byte) line_ydxd::y#3
Multiple usages for variable. Not optimizing sub-constant (byte) plot::x#4
Multiple usages for variable. Not optimizing sub-constant (byte) plot::x#4
Multiple usages for variable. Not optimizing sub-constant (byte) plot::y#4
Multiple usages for variable. Not optimizing sub-constant (byte) plot::y#4
Multiple usages for variable. Not optimizing sub-constant (byte) plot::x#4
Multiple usages for variable. Not optimizing sub-constant (byte) init_plot_tables::x#2
Multiple usages for variable. Not optimizing sub-constant (byte) init_plot_tables::x#2
Multiple usages for variable. Not optimizing sub-constant (byte) init_plot_tables::x#2
Multiple usages for variable. Not optimizing sub-constant (byte) init_plot_tables::y#2
Multiple usages for variable. Not optimizing sub-constant (byte) init_plot_tables::y#2
Multiple usages for variable. Not optimizing sub-constant (byte*) init_plot_tables::yoffs#2
Inlining constant with var siblings (const byte) lines::l#0
Inlining constant with var siblings (const byte) lines::l#0
Inlining constant with var siblings (const byte*) plot::plotter_x#0
Inlining constant with var siblings (const byte*) plot::plotter_x#0
Inlining constant with var siblings (const word) plot::plotter_y#0
Inlining constant with var siblings (const word) plot::plotter_y#0
Inlining constant with var siblings (const byte) init_plot_tables::bits#0
Inlining constant with var siblings (const byte) init_plot_tables::bits#0
Inlining constant with var siblings (const byte) init_plot_tables::bits#0
Inlining constant with var siblings (const byte) init_plot_tables::x#0
Inlining constant with var siblings (const byte) init_plot_tables::x#0
Inlining constant with var siblings (const byte) init_plot_tables::bits#2
Inlining constant with var siblings (const byte) init_plot_tables::bits#2
Inlining constant with var siblings (const byte) init_plot_tables::bits#2
Inlining constant with var siblings (const byte*) init_plot_tables::yoffs#0
Inlining constant with var siblings (const byte*) init_plot_tables::yoffs#0
Inlining constant with var siblings (const byte*) init_plot_tables::yoffs#0
Inlining constant with var siblings (const byte) init_plot_tables::y#0
Inlining constant with var siblings (const byte) init_plot_tables::y#0
Inlining constant with var siblings (const byte*) init_screen::b#0
Inlining constant with var siblings (const byte*) init_screen::b#0
Inlining constant with var siblings (const byte*) init_screen::c#0
Inlining constant with var siblings (const byte*) init_screen::c#0
Constant inlined init_plot_tables::bits#2 = (byte/word/signed word) 128
Constant inlined init_plot_tables::bits#0 = (byte/word/signed word) 128
Constant inlined plot::plotter_y#0 = (byte/signed byte/word/signed word) 0
Constant inlined plot::plotter_x#0 = ((byte*))(byte/signed byte/word/signed word) 0
Constant inlined init_screen::$2 = (const byte*) SCREEN#0+(word/signed word) 1024
Constant inlined main::$1 = (const byte) BMM#0|(const byte) DEN#0|(const byte) RSEL#0
Constant inlined init_plot_tables::$1 = >(const byte*) BITMAP#0
Constant inlined lines::l#0 = (byte/signed byte/word/signed word) 0
Constant inlined main::$2 = (const byte) BMM#0|(const byte) DEN#0|(const byte) RSEL#0|(byte/signed byte/word/signed word) 3
Constant inlined main::$0 = (const byte) BMM#0|(const byte) DEN#0
Constant inlined init_plot_tables::y#0 = (byte/signed byte/word/signed word) 0
Constant inlined init_plot_tables::yoffs#0 = ((byte*))(byte/signed byte/word/signed word) 0
Constant inlined init_plot_tables::x#0 = (byte/signed byte/word/signed word) 0
Constant inlined init_screen::c#0 = (const byte*) SCREEN#0
Constant inlined init_screen::b#0 = (const byte*) BITMAP#0
Constant inlined init_screen::$0 = (const byte*) BITMAP#0+(word/signed word) 8192
Succesful SSA optimization Pass2ConstantInlining
CONTROL FLOW GRAPH
@begin: scope:[]  from
  to:@10
main: scope:[main]  from @10
  *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0
  *((const byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0
  *((const byte*) D011#0) ← (const byte) BMM#0|(const byte) DEN#0|(const byte) RSEL#0|(byte/signed byte/word/signed word) 3
  *((const byte*) D018#0) ← (byte/signed byte/word/signed word) 24
  call init_screen param-assignment
  to:main::@3
main::@3: scope:[main]  from main
  call init_plot_tables param-assignment
  to:main::@1
main::@1: scope:[main]  from main::@3 main::@5
  call lines param-assignment
  to:main::@5
main::@5: scope:[main]  from main::@1
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@5
  return 
  to:@return
lines: scope:[lines]  from main::@1
  to:lines::@1
lines::@1: scope:[lines]  from lines lines::@3
  (byte) lines::l#2 ← phi( lines/(byte/signed byte/word/signed word) 0 lines::@3/(byte) lines::l#1 )
  (byte~) lines::$0 ← (const byte[]) lines_x#0 *idx (byte) lines::l#2
  (byte~) lines::$2 ← (const byte[]) lines_x#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2
  (byte~) lines::$3 ← (const byte[]) lines_y#0 *idx (byte) lines::l#2
  (byte~) lines::$5 ← (const byte[]) lines_y#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2
  (byte) line::x0#0 ← (byte~) lines::$0
  (byte) line::x1#0 ← (byte~) lines::$2
  (byte) line::y0#0 ← (byte~) lines::$3
  (byte) line::y1#0 ← (byte~) lines::$5
  call line param-assignment
  to:lines::@3
lines::@3: scope:[lines]  from lines::@1
  (byte) lines::l#1 ← ++ (byte) lines::l#2
  if((byte) lines::l#1<(const byte) lines_cnt#0) goto lines::@1
  to:lines::@return
lines::@return: scope:[lines]  from lines::@3
  return 
  to:@return
line: scope:[line]  from lines::@1
  if((byte) line::x0#0>=(byte) line::x1#0) goto line::@1
  to:line::@15
line::@1: scope:[line]  from line
  (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0
  if((byte) line::y0#0>=(byte) line::y1#0) goto line::@9
  to:line::@23
line::@15: scope:[line]  from line
  (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0
  if((byte) line::y0#0>=(byte) line::y1#0) goto line::@2
  to:line::@16
line::@2: scope:[line]  from line::@15
  (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0
  if((byte) line::yd#0>=(byte) line::xd#1) goto line::@6
  to:line::@20
line::@16: scope:[line]  from line::@15
  (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0
  if((byte) line::yd#1>=(byte) line::xd#1) goto line::@3
  to:line::@17
line::@3: scope:[line]  from line::@16
  (byte) line_ydxi::y#0 ← (byte) line::y0#0
  (byte) line_ydxi::x#0 ← (byte) line::x0#0
  (byte) line_ydxi::y1#0 ← (byte) line::y1#0
  (byte) line_ydxi::yd#0 ← (byte) line::yd#1
  (byte) line_ydxi::xd#0 ← (byte) line::xd#1
  call line_ydxi param-assignment
  to:line::@return
line::@17: scope:[line]  from line::@16
  (byte) line_xdyi::x#0 ← (byte) line::x0#0
  (byte) line_xdyi::y#0 ← (byte) line::y0#0
  (byte) line_xdyi::x1#0 ← (byte) line::x1#0
  (byte) line_xdyi::xd#0 ← (byte) line::xd#1
  (byte) line_xdyi::yd#0 ← (byte) line::yd#1
  call line_xdyi param-assignment
  to:line::@return
line::@6: scope:[line]  from line::@2
  (byte) line_ydxd::y#0 ← (byte) line::y1#0
  (byte) line_ydxd::x#0 ← (byte) line::x1#0
  (byte) line_ydxd::y1#0 ← (byte) line::y0#0
  (byte) line_ydxd::yd#0 ← (byte) line::yd#0
  (byte) line_ydxd::xd#0 ← (byte) line::xd#1
  call line_ydxd param-assignment
  to:line::@return
line::@20: scope:[line]  from line::@2
  (byte) line_xdyd::x#0 ← (byte) line::x0#0
  (byte) line_xdyd::y#0 ← (byte) line::y0#0
  (byte) line_xdyd::x1#0 ← (byte) line::x1#0
  (byte) line_xdyd::xd#0 ← (byte) line::xd#1
  (byte) line_xdyd::yd#0 ← (byte) line::yd#0
  call line_xdyd param-assignment
  to:line::@return
line::@9: scope:[line]  from line::@1
  (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0
  if((byte) line::yd#10>=(byte) line::xd#0) goto line::@13
  to:line::@27
line::@23: scope:[line]  from line::@1
  (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0
  if((byte) line::yd#3>=(byte) line::xd#0) goto line::@10
  to:line::@24
line::@10: scope:[line]  from line::@23
  (byte) line_ydxd::y#1 ← (byte) line::y0#0
  (byte) line_ydxd::x#1 ← (byte) line::x0#0
  (byte) line_ydxd::y1#1 ← (byte) line::y1#0
  (byte) line_ydxd::yd#1 ← (byte) line::yd#3
  (byte) line_ydxd::xd#1 ← (byte) line::xd#0
  call line_ydxd param-assignment
  to:line::@return
line::@24: scope:[line]  from line::@23
  (byte) line_xdyd::x#1 ← (byte) line::x1#0
  (byte) line_xdyd::y#1 ← (byte) line::y1#0
  (byte) line_xdyd::x1#1 ← (byte) line::x0#0
  (byte) line_xdyd::xd#1 ← (byte) line::xd#0
  (byte) line_xdyd::yd#1 ← (byte) line::yd#3
  call line_xdyd param-assignment
  to:line::@return
line::@13: scope:[line]  from line::@9
  (byte) line_ydxi::y#1 ← (byte) line::y1#0
  (byte) line_ydxi::x#1 ← (byte) line::x1#0
  (byte) line_ydxi::y1#1 ← (byte) line::y0#0
  (byte) line_ydxi::yd#1 ← (byte) line::yd#10
  (byte) line_ydxi::xd#1 ← (byte) line::xd#0
  call line_ydxi param-assignment
  to:line::@return
line::@27: scope:[line]  from line::@9
  (byte) line_xdyi::x#1 ← (byte) line::x1#0
  (byte) line_xdyi::y#1 ← (byte) line::y1#0
  (byte) line_xdyi::x1#1 ← (byte) line::x0#0
  (byte) line_xdyi::xd#1 ← (byte) line::xd#0
  (byte) line_xdyi::yd#1 ← (byte) line::yd#10
  call line_xdyi param-assignment
  to:line::@return
line::@return: scope:[line]  from line::@10 line::@13 line::@17 line::@20 line::@24 line::@27 line::@3 line::@6
  return 
  to:@return
line_xdyi: scope:[line_xdyi]  from line::@17 line::@27
  (byte) line_xdyi::x1#6 ← phi( line::@17/(byte) line_xdyi::x1#0 line::@27/(byte) line_xdyi::x1#1 )
  (byte) line_xdyi::xd#5 ← phi( line::@17/(byte) line_xdyi::xd#0 line::@27/(byte) line_xdyi::xd#1 )
  (byte) line_xdyi::y#5 ← phi( line::@17/(byte) line_xdyi::y#0 line::@27/(byte) line_xdyi::y#1 )
  (byte) line_xdyi::x#6 ← phi( line::@17/(byte) line_xdyi::x#0 line::@27/(byte) line_xdyi::x#1 )
  (byte) line_xdyi::yd#2 ← phi( line::@17/(byte) line_xdyi::yd#0 line::@27/(byte) line_xdyi::yd#1 )
  (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyi::@1
line_xdyi::@1: scope:[line_xdyi]  from line_xdyi line_xdyi::@2
  (byte) line_xdyi::e#3 ← phi( line_xdyi/(byte) line_xdyi::e#0 line_xdyi::@2/(byte) line_xdyi::e#6 )
  (byte) line_xdyi::y#3 ← phi( line_xdyi/(byte) line_xdyi::y#5 line_xdyi::@2/(byte) line_xdyi::y#6 )
  (byte) line_xdyi::x#3 ← phi( line_xdyi/(byte) line_xdyi::x#6 line_xdyi::@2/(byte) line_xdyi::x#2 )
  (byte) plot::x#0 ← (byte) line_xdyi::x#3
  (byte) plot::y#0 ← (byte) line_xdyi::y#3
  call plot param-assignment
  to:line_xdyi::@5
line_xdyi::@5: scope:[line_xdyi]  from line_xdyi::@1
  (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2
  if((byte) line_xdyi::xd#5>=(byte) line_xdyi::e#1) goto line_xdyi::@2
  to:line_xdyi::@3
line_xdyi::@2: scope:[line_xdyi]  from line_xdyi::@3 line_xdyi::@5
  (byte) line_xdyi::e#6 ← phi( line_xdyi::@3/(byte) line_xdyi::e#2 line_xdyi::@5/(byte) line_xdyi::e#1 )
  (byte) line_xdyi::y#6 ← phi( line_xdyi::@3/(byte) line_xdyi::y#2 line_xdyi::@5/(byte) line_xdyi::y#3 )
  (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_xdyi::x#2<(byte~) line_xdyi::$8) goto line_xdyi::@1
  to:line_xdyi::@return
line_xdyi::@3: scope:[line_xdyi]  from line_xdyi::@5
  (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5
  to:line_xdyi::@2
line_xdyi::@return: scope:[line_xdyi]  from line_xdyi::@2
  return 
  to:@return
line_xdyd: scope:[line_xdyd]  from line::@20 line::@24
  (byte) line_xdyd::x1#6 ← phi( line::@20/(byte) line_xdyd::x1#0 line::@24/(byte) line_xdyd::x1#1 )
  (byte) line_xdyd::xd#5 ← phi( line::@20/(byte) line_xdyd::xd#0 line::@24/(byte) line_xdyd::xd#1 )
  (byte) line_xdyd::y#5 ← phi( line::@20/(byte) line_xdyd::y#0 line::@24/(byte) line_xdyd::y#1 )
  (byte) line_xdyd::x#6 ← phi( line::@20/(byte) line_xdyd::x#0 line::@24/(byte) line_xdyd::x#1 )
  (byte) line_xdyd::yd#2 ← phi( line::@20/(byte) line_xdyd::yd#0 line::@24/(byte) line_xdyd::yd#1 )
  (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1
  to:line_xdyd::@1
line_xdyd::@1: scope:[line_xdyd]  from line_xdyd line_xdyd::@2
  (byte) line_xdyd::e#3 ← phi( line_xdyd/(byte) line_xdyd::e#0 line_xdyd::@2/(byte) line_xdyd::e#6 )
  (byte) line_xdyd::y#3 ← phi( line_xdyd/(byte) line_xdyd::y#5 line_xdyd::@2/(byte) line_xdyd::y#6 )
  (byte) line_xdyd::x#3 ← phi( line_xdyd/(byte) line_xdyd::x#6 line_xdyd::@2/(byte) line_xdyd::x#2 )
  (byte) plot::x#1 ← (byte) line_xdyd::x#3
  (byte) plot::y#1 ← (byte) line_xdyd::y#3
  call plot param-assignment
  to:line_xdyd::@5
line_xdyd::@5: scope:[line_xdyd]  from line_xdyd::@1
  (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2
  if((byte) line_xdyd::xd#5>=(byte) line_xdyd::e#1) goto line_xdyd::@2
  to:line_xdyd::@3
line_xdyd::@2: scope:[line_xdyd]  from line_xdyd::@3 line_xdyd::@5
  (byte) line_xdyd::e#6 ← phi( line_xdyd::@3/(byte) line_xdyd::e#2 line_xdyd::@5/(byte) line_xdyd::e#1 )
  (byte) line_xdyd::y#6 ← phi( line_xdyd::@3/(byte) line_xdyd::y#2 line_xdyd::@5/(byte) line_xdyd::y#3 )
  (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_xdyd::x#2<(byte~) line_xdyd::$8) goto line_xdyd::@1
  to:line_xdyd::@return
line_xdyd::@3: scope:[line_xdyd]  from line_xdyd::@5
  (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5
  to:line_xdyd::@2
line_xdyd::@return: scope:[line_xdyd]  from line_xdyd::@2
  return 
  to:@return
line_ydxi: scope:[line_ydxi]  from line::@13 line::@3
  (byte) line_ydxi::y1#6 ← phi( line::@13/(byte) line_ydxi::y1#1 line::@3/(byte) line_ydxi::y1#0 )
  (byte) line_ydxi::yd#5 ← phi( line::@13/(byte) line_ydxi::yd#1 line::@3/(byte) line_ydxi::yd#0 )
  (byte) line_ydxi::y#6 ← phi( line::@13/(byte) line_ydxi::y#1 line::@3/(byte) line_ydxi::y#0 )
  (byte) line_ydxi::x#5 ← phi( line::@13/(byte) line_ydxi::x#1 line::@3/(byte) line_ydxi::x#0 )
  (byte) line_ydxi::xd#2 ← phi( line::@13/(byte) line_ydxi::xd#1 line::@3/(byte) line_ydxi::xd#0 )
  (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxi::@1
line_ydxi::@1: scope:[line_ydxi]  from line_ydxi line_ydxi::@2
  (byte) line_ydxi::e#3 ← phi( line_ydxi/(byte) line_ydxi::e#0 line_ydxi::@2/(byte) line_ydxi::e#6 )
  (byte) line_ydxi::y#3 ← phi( line_ydxi/(byte) line_ydxi::y#6 line_ydxi::@2/(byte) line_ydxi::y#2 )
  (byte) line_ydxi::x#3 ← phi( line_ydxi/(byte) line_ydxi::x#5 line_ydxi::@2/(byte) line_ydxi::x#6 )
  (byte) plot::x#2 ← (byte) line_ydxi::x#3
  (byte) plot::y#2 ← (byte) line_ydxi::y#3
  call plot param-assignment
  to:line_ydxi::@5
line_ydxi::@5: scope:[line_ydxi]  from line_ydxi::@1
  (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2
  if((byte) line_ydxi::yd#5>=(byte) line_ydxi::e#1) goto line_ydxi::@2
  to:line_ydxi::@3
line_ydxi::@2: scope:[line_ydxi]  from line_ydxi::@3 line_ydxi::@5
  (byte) line_ydxi::e#6 ← phi( line_ydxi::@3/(byte) line_ydxi::e#2 line_ydxi::@5/(byte) line_ydxi::e#1 )
  (byte) line_ydxi::x#6 ← phi( line_ydxi::@3/(byte) line_ydxi::x#2 line_ydxi::@5/(byte) line_ydxi::x#3 )
  (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_ydxi::y#2<(byte~) line_ydxi::$8) goto line_ydxi::@1
  to:line_ydxi::@return
line_ydxi::@3: scope:[line_ydxi]  from line_ydxi::@5
  (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5
  to:line_ydxi::@2
line_ydxi::@return: scope:[line_ydxi]  from line_ydxi::@2
  return 
  to:@return
line_ydxd: scope:[line_ydxd]  from line::@10 line::@6
  (byte) line_ydxd::y1#6 ← phi( line::@10/(byte) line_ydxd::y1#1 line::@6/(byte) line_ydxd::y1#0 )
  (byte) line_ydxd::yd#5 ← phi( line::@10/(byte) line_ydxd::yd#1 line::@6/(byte) line_ydxd::yd#0 )
  (byte) line_ydxd::y#6 ← phi( line::@10/(byte) line_ydxd::y#1 line::@6/(byte) line_ydxd::y#0 )
  (byte) line_ydxd::x#5 ← phi( line::@10/(byte) line_ydxd::x#1 line::@6/(byte) line_ydxd::x#0 )
  (byte) line_ydxd::xd#2 ← phi( line::@10/(byte) line_ydxd::xd#1 line::@6/(byte) line_ydxd::xd#0 )
  (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1
  to:line_ydxd::@1
line_ydxd::@1: scope:[line_ydxd]  from line_ydxd line_ydxd::@2
  (byte) line_ydxd::e#3 ← phi( line_ydxd/(byte) line_ydxd::e#0 line_ydxd::@2/(byte) line_ydxd::e#6 )
  (byte) line_ydxd::y#3 ← phi( line_ydxd/(byte) line_ydxd::y#6 line_ydxd::@2/(byte) line_ydxd::y#2 )
  (byte) line_ydxd::x#3 ← phi( line_ydxd/(byte) line_ydxd::x#5 line_ydxd::@2/(byte) line_ydxd::x#6 )
  (byte) plot::x#3 ← (byte) line_ydxd::x#3
  (byte) plot::y#3 ← (byte) line_ydxd::y#3
  call plot param-assignment
  to:line_ydxd::@5
line_ydxd::@5: scope:[line_ydxd]  from line_ydxd::@1
  (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2
  if((byte) line_ydxd::yd#5>=(byte) line_ydxd::e#1) goto line_ydxd::@2
  to:line_ydxd::@3
line_ydxd::@2: scope:[line_ydxd]  from line_ydxd::@3 line_ydxd::@5
  (byte) line_ydxd::e#6 ← phi( line_ydxd::@3/(byte) line_ydxd::e#2 line_ydxd::@5/(byte) line_ydxd::e#1 )
  (byte) line_ydxd::x#6 ← phi( line_ydxd::@3/(byte) line_ydxd::x#2 line_ydxd::@5/(byte) line_ydxd::x#3 )
  (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_ydxd::y#2<(byte~) line_ydxd::$8) goto line_ydxd::@1
  to:line_ydxd::@return
line_ydxd::@3: scope:[line_ydxd]  from line_ydxd::@5
  (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5
  to:line_ydxd::@2
line_ydxd::@return: scope:[line_ydxd]  from line_ydxd::@2
  return 
  to:@return
plot: scope:[plot]  from line_xdyd::@1 line_xdyi::@1 line_ydxd::@1 line_ydxi::@1
  (byte) plot::y#4 ← phi( line_xdyd::@1/(byte) plot::y#1 line_xdyi::@1/(byte) plot::y#0 line_ydxd::@1/(byte) plot::y#3 line_ydxi::@1/(byte) plot::y#2 )
  (byte) plot::x#4 ← phi( line_xdyd::@1/(byte) plot::x#1 line_xdyi::@1/(byte) plot::x#0 line_ydxd::@1/(byte) plot::x#3 line_ydxi::@1/(byte) plot::x#2 )
  (byte~) plot::$0 ← (const byte[]) plot_xhi#0 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#1 ← ((byte*))(byte/signed byte/word/signed word) 0 hi= (byte~) plot::$0
  (byte~) plot::$1 ← (const byte[]) plot_xlo#0 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1
  (byte~) plot::$2 ← (const byte[]) plot_yhi#0 *idx (byte) plot::y#4
  (word) plot::plotter_y#1 ← (byte/signed byte/word/signed word) 0 hi= (byte~) plot::$2
  (byte~) plot::$3 ← (const byte[]) plot_ylo#0 *idx (byte) plot::y#4
  (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3
  (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2
  (byte~) plot::$5 ← (const byte[]) plot_bit#0 *idx (byte) plot::x#4
  (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5
  *((byte*) plot::plotter#0) ← (byte~) plot::$6
  to:plot::@return
plot::@return: scope:[plot]  from plot
  return 
  to:@return
init_plot_tables: scope:[init_plot_tables]  from main::@3
  to:init_plot_tables::@1
init_plot_tables::@1: scope:[init_plot_tables]  from init_plot_tables init_plot_tables::@2
  (byte) init_plot_tables::bits#3 ← phi( init_plot_tables/(byte/word/signed word) 128 init_plot_tables::@2/(byte) init_plot_tables::bits#4 )
  (byte) init_plot_tables::x#2 ← phi( init_plot_tables/(byte/signed byte/word/signed word) 0 init_plot_tables::@2/(byte) init_plot_tables::x#1 )
  (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248
  *((const byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0
  *((const byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← >(const byte*) BITMAP#0
  *((const byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3
  (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1
  if((byte) init_plot_tables::bits#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@2
  to:init_plot_tables::@5
init_plot_tables::@2: scope:[init_plot_tables]  from init_plot_tables::@1 init_plot_tables::@5
  (byte) init_plot_tables::bits#4 ← phi( init_plot_tables::@1/(byte) init_plot_tables::bits#1 init_plot_tables::@5/(byte/word/signed word) 128 )
  (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2
  if((byte) init_plot_tables::x#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@1
  to:init_plot_tables::@3
init_plot_tables::@5: scope:[init_plot_tables]  from init_plot_tables::@1
  to:init_plot_tables::@2
init_plot_tables::@3: scope:[init_plot_tables]  from init_plot_tables::@2 init_plot_tables::@4
  (byte*) init_plot_tables::yoffs#2 ← phi( init_plot_tables::@4/(byte*) init_plot_tables::yoffs#4 init_plot_tables::@2/((byte*))(byte/signed byte/word/signed word) 0 )
  (byte) init_plot_tables::y#2 ← phi( init_plot_tables::@4/(byte) init_plot_tables::y#1 init_plot_tables::@2/(byte/signed byte/word/signed word) 0 )
  (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2
  (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7
  *((const byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8
  (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2
  *((const byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9
  (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  if((byte~) init_plot_tables::$10!=(byte/signed byte/word/signed word) 7) goto init_plot_tables::@4
  to:init_plot_tables::@7
init_plot_tables::@4: scope:[init_plot_tables]  from init_plot_tables::@3 init_plot_tables::@7
  (byte*) init_plot_tables::yoffs#4 ← phi( init_plot_tables::@3/(byte*) init_plot_tables::yoffs#2 init_plot_tables::@7/(byte*) init_plot_tables::yoffs#1 )
  (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2
  if((byte) init_plot_tables::y#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@3
  to:init_plot_tables::@return
init_plot_tables::@7: scope:[init_plot_tables]  from init_plot_tables::@3
  (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320
  to:init_plot_tables::@4
init_plot_tables::@return: scope:[init_plot_tables]  from init_plot_tables::@4
  return 
  to:@return
init_screen: scope:[init_screen]  from main
  to:init_screen::@1
init_screen::@1: scope:[init_screen]  from init_screen init_screen::@1
  (byte*) init_screen::b#2 ← phi( init_screen/(const byte*) BITMAP#0 init_screen::@1/(byte*) init_screen::b#1 )
  *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0
  (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2
  if((byte*) init_screen::b#1!=(const byte*) BITMAP#0+(word/signed word) 8192) goto init_screen::@1
  to:init_screen::@2
init_screen::@2: scope:[init_screen]  from init_screen::@1 init_screen::@2
  (byte*) init_screen::c#2 ← phi( init_screen::@2/(byte*) init_screen::c#1 init_screen::@1/(const byte*) SCREEN#0 )
  *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20
  (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2
  if((byte*) init_screen::c#1!=(const byte*) SCREEN#0+(word/signed word) 1024) goto init_screen::@2
  to:init_screen::@return
init_screen::@return: scope:[init_screen]  from init_screen::@2
  return 
  to:@return
@10: scope:[]  from @begin
  call main param-assignment
  to:@end
@end: scope:[]  from @10

FINAL SYMBOL TABLE
(label) @10
(label) @begin
(label) @end
(byte*) BGCOL
(const byte*) BGCOL#0 = ((byte*))(word) 53280
(byte*) BITMAP
(const byte*) BITMAP#0 = ((byte*))(word/signed word) 8192
(byte) BMM
(const byte) BMM#0 = (byte/signed byte/word/signed word) 32
(byte*) D011
(const byte*) D011#0 = ((byte*))(word) 53265
(byte*) D018
(const byte*) D018#0 = ((byte*))(word) 53272
(byte) DEN
(const byte) DEN#0 = (byte/signed byte/word/signed word) 16
(byte*) FGCOL
(const byte*) FGCOL#0 = ((byte*))(word) 53281
(byte) RSEL
(const byte) RSEL#0 = (byte/signed byte/word/signed word) 8
(byte*) SCREEN
(const byte*) SCREEN#0 = ((byte*))(word/signed word) 1024
(void()) init_plot_tables()
(byte~) init_plot_tables::$0
(byte~) init_plot_tables::$10
(byte~) init_plot_tables::$6
(byte~) init_plot_tables::$7
(byte~) init_plot_tables::$8
(byte~) init_plot_tables::$9
(label) init_plot_tables::@1
(label) init_plot_tables::@2
(label) init_plot_tables::@3
(label) init_plot_tables::@4
(label) init_plot_tables::@5
(label) init_plot_tables::@7
(label) init_plot_tables::@return
(byte) init_plot_tables::bits
(byte) init_plot_tables::bits#1
(byte) init_plot_tables::bits#3
(byte) init_plot_tables::bits#4
(byte) init_plot_tables::x
(byte) init_plot_tables::x#1
(byte) init_plot_tables::x#2
(byte) init_plot_tables::y
(byte) init_plot_tables::y#1
(byte) init_plot_tables::y#2
(byte*) init_plot_tables::yoffs
(byte*) init_plot_tables::yoffs#1
(byte*) init_plot_tables::yoffs#2
(byte*) init_plot_tables::yoffs#4
(void()) init_screen()
(label) init_screen::@1
(label) init_screen::@2
(label) init_screen::@return
(byte*) init_screen::b
(byte*) init_screen::b#1
(byte*) init_screen::b#2
(byte*) init_screen::c
(byte*) init_screen::c#1
(byte*) init_screen::c#2
(void()) line((byte) line::x0 , (byte) line::x1 , (byte) line::y0 , (byte) line::y1)
(label) line::@1
(label) line::@10
(label) line::@13
(label) line::@15
(label) line::@16
(label) line::@17
(label) line::@2
(label) line::@20
(label) line::@23
(label) line::@24
(label) line::@27
(label) line::@3
(label) line::@6
(label) line::@9
(label) line::@return
(byte) line::x0
(byte) line::x0#0
(byte) line::x1
(byte) line::x1#0
(byte) line::xd
(byte) line::xd#0
(byte) line::xd#1
(byte) line::y0
(byte) line::y0#0
(byte) line::y1
(byte) line::y1#0
(byte) line::yd
(byte) line::yd#0
(byte) line::yd#1
(byte) line::yd#10
(byte) line::yd#3
(void()) line_xdyd((byte) line_xdyd::x , (byte) line_xdyd::y , (byte) line_xdyd::x1 , (byte) line_xdyd::xd , (byte) line_xdyd::yd)
(byte~) line_xdyd::$8
(label) line_xdyd::@1
(label) line_xdyd::@2
(label) line_xdyd::@3
(label) line_xdyd::@5
(label) line_xdyd::@return
(byte) line_xdyd::e
(byte) line_xdyd::e#0
(byte) line_xdyd::e#1
(byte) line_xdyd::e#2
(byte) line_xdyd::e#3
(byte) line_xdyd::e#6
(byte) line_xdyd::x
(byte) line_xdyd::x#0
(byte) line_xdyd::x#1
(byte) line_xdyd::x#2
(byte) line_xdyd::x#3
(byte) line_xdyd::x#6
(byte) line_xdyd::x1
(byte) line_xdyd::x1#0
(byte) line_xdyd::x1#1
(byte) line_xdyd::x1#6
(byte) line_xdyd::xd
(byte) line_xdyd::xd#0
(byte) line_xdyd::xd#1
(byte) line_xdyd::xd#5
(byte) line_xdyd::y
(byte) line_xdyd::y#0
(byte) line_xdyd::y#1
(byte) line_xdyd::y#2
(byte) line_xdyd::y#3
(byte) line_xdyd::y#5
(byte) line_xdyd::y#6
(byte) line_xdyd::yd
(byte) line_xdyd::yd#0
(byte) line_xdyd::yd#1
(byte) line_xdyd::yd#2
(void()) line_xdyi((byte) line_xdyi::x , (byte) line_xdyi::y , (byte) line_xdyi::x1 , (byte) line_xdyi::xd , (byte) line_xdyi::yd)
(byte~) line_xdyi::$8
(label) line_xdyi::@1
(label) line_xdyi::@2
(label) line_xdyi::@3
(label) line_xdyi::@5
(label) line_xdyi::@return
(byte) line_xdyi::e
(byte) line_xdyi::e#0
(byte) line_xdyi::e#1
(byte) line_xdyi::e#2
(byte) line_xdyi::e#3
(byte) line_xdyi::e#6
(byte) line_xdyi::x
(byte) line_xdyi::x#0
(byte) line_xdyi::x#1
(byte) line_xdyi::x#2
(byte) line_xdyi::x#3
(byte) line_xdyi::x#6
(byte) line_xdyi::x1
(byte) line_xdyi::x1#0
(byte) line_xdyi::x1#1
(byte) line_xdyi::x1#6
(byte) line_xdyi::xd
(byte) line_xdyi::xd#0
(byte) line_xdyi::xd#1
(byte) line_xdyi::xd#5
(byte) line_xdyi::y
(byte) line_xdyi::y#0
(byte) line_xdyi::y#1
(byte) line_xdyi::y#2
(byte) line_xdyi::y#3
(byte) line_xdyi::y#5
(byte) line_xdyi::y#6
(byte) line_xdyi::yd
(byte) line_xdyi::yd#0
(byte) line_xdyi::yd#1
(byte) line_xdyi::yd#2
(void()) line_ydxd((byte) line_ydxd::y , (byte) line_ydxd::x , (byte) line_ydxd::y1 , (byte) line_ydxd::yd , (byte) line_ydxd::xd)
(byte~) line_ydxd::$8
(label) line_ydxd::@1
(label) line_ydxd::@2
(label) line_ydxd::@3
(label) line_ydxd::@5
(label) line_ydxd::@return
(byte) line_ydxd::e
(byte) line_ydxd::e#0
(byte) line_ydxd::e#1
(byte) line_ydxd::e#2
(byte) line_ydxd::e#3
(byte) line_ydxd::e#6
(byte) line_ydxd::x
(byte) line_ydxd::x#0
(byte) line_ydxd::x#1
(byte) line_ydxd::x#2
(byte) line_ydxd::x#3
(byte) line_ydxd::x#5
(byte) line_ydxd::x#6
(byte) line_ydxd::xd
(byte) line_ydxd::xd#0
(byte) line_ydxd::xd#1
(byte) line_ydxd::xd#2
(byte) line_ydxd::y
(byte) line_ydxd::y#0
(byte) line_ydxd::y#1
(byte) line_ydxd::y#2
(byte) line_ydxd::y#3
(byte) line_ydxd::y#6
(byte) line_ydxd::y1
(byte) line_ydxd::y1#0
(byte) line_ydxd::y1#1
(byte) line_ydxd::y1#6
(byte) line_ydxd::yd
(byte) line_ydxd::yd#0
(byte) line_ydxd::yd#1
(byte) line_ydxd::yd#5
(void()) line_ydxi((byte) line_ydxi::y , (byte) line_ydxi::x , (byte) line_ydxi::y1 , (byte) line_ydxi::yd , (byte) line_ydxi::xd)
(byte~) line_ydxi::$8
(label) line_ydxi::@1
(label) line_ydxi::@2
(label) line_ydxi::@3
(label) line_ydxi::@5
(label) line_ydxi::@return
(byte) line_ydxi::e
(byte) line_ydxi::e#0
(byte) line_ydxi::e#1
(byte) line_ydxi::e#2
(byte) line_ydxi::e#3
(byte) line_ydxi::e#6
(byte) line_ydxi::x
(byte) line_ydxi::x#0
(byte) line_ydxi::x#1
(byte) line_ydxi::x#2
(byte) line_ydxi::x#3
(byte) line_ydxi::x#5
(byte) line_ydxi::x#6
(byte) line_ydxi::xd
(byte) line_ydxi::xd#0
(byte) line_ydxi::xd#1
(byte) line_ydxi::xd#2
(byte) line_ydxi::y
(byte) line_ydxi::y#0
(byte) line_ydxi::y#1
(byte) line_ydxi::y#2
(byte) line_ydxi::y#3
(byte) line_ydxi::y#6
(byte) line_ydxi::y1
(byte) line_ydxi::y1#0
(byte) line_ydxi::y1#1
(byte) line_ydxi::y1#6
(byte) line_ydxi::yd
(byte) line_ydxi::yd#0
(byte) line_ydxi::yd#1
(byte) line_ydxi::yd#5
(void()) lines()
(byte~) lines::$0
(byte~) lines::$2
(byte~) lines::$3
(byte~) lines::$5
(label) lines::@1
(label) lines::@3
(label) lines::@return
(byte) lines::l
(byte) lines::l#1
(byte) lines::l#2
(byte) lines_cnt
(const byte) lines_cnt#0 = (byte/signed byte/word/signed word) 8
(byte[]) lines_x
(const byte[]) lines_x#0 = { (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60 }
(byte[]) lines_y
(const byte[]) lines_y#0 = { (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10 }
(void()) main()
(label) main::@1
(label) main::@3
(label) main::@5
(label) main::@return
(void()) plot((byte) plot::x , (byte) plot::y)
(byte~) plot::$0
(byte~) plot::$1
(byte~) plot::$2
(byte~) plot::$3
(byte~) plot::$5
(byte~) plot::$6
(label) plot::@return
(byte*) plot::plotter
(byte*) plot::plotter#0
(byte*) plot::plotter_x
(byte*) plot::plotter_x#1
(byte*) plot::plotter_x#2
(word) plot::plotter_y
(word) plot::plotter_y#1
(word) plot::plotter_y#2
(byte) plot::x
(byte) plot::x#0
(byte) plot::x#1
(byte) plot::x#2
(byte) plot::x#3
(byte) plot::x#4
(byte) plot::y
(byte) plot::y#0
(byte) plot::y#1
(byte) plot::y#2
(byte) plot::y#3
(byte) plot::y#4
(byte[]) plot_bit
(const byte[]) plot_bit#0 = ((byte*))(word/signed word) 5120
(byte[]) plot_xhi
(const byte[]) plot_xhi#0 = ((byte*))(word/signed word) 4352
(byte[]) plot_xlo
(const byte[]) plot_xlo#0 = ((byte*))(word/signed word) 4096
(byte[]) plot_yhi
(const byte[]) plot_yhi#0 = ((byte*))(word/signed word) 4864
(byte[]) plot_ylo
(const byte[]) plot_ylo#0 = ((byte*))(word/signed word) 4608

Block Sequence Planned @begin @10 @end main main::@3 main::@1 main::@5 main::@return lines lines::@1 lines::@3 lines::@return line line::@15 line::@16 line::@17 line::@return line::@3 line::@2 line::@20 line::@6 line::@1 line::@23 line::@24 line::@10 line::@9 line::@27 line::@13 line_ydxi line_ydxi::@1 line_ydxi::@5 line_ydxi::@3 line_ydxi::@2 line_ydxi::@return plot plot::@return line_xdyi line_xdyi::@1 line_xdyi::@5 line_xdyi::@3 line_xdyi::@2 line_xdyi::@return line_ydxd line_ydxd::@1 line_ydxd::@5 line_ydxd::@3 line_ydxd::@2 line_ydxd::@return line_xdyd line_xdyd::@1 line_xdyd::@5 line_xdyd::@3 line_xdyd::@2 line_xdyd::@return init_plot_tables init_plot_tables::@1 init_plot_tables::@5 init_plot_tables::@2 init_plot_tables::@3 init_plot_tables::@7 init_plot_tables::@4 init_plot_tables::@return init_screen init_screen::@1 init_screen::@2 init_screen::@return 
Added new block during phi lifting lines::@4(between lines::@3 and lines::@1)
Added new block during phi lifting line_ydxi::@6(between line_ydxi::@2 and line_ydxi::@1)
Added new block during phi lifting line_ydxi::@7(between line_ydxi::@5 and line_ydxi::@2)
Added new block during phi lifting line_xdyi::@6(between line_xdyi::@2 and line_xdyi::@1)
Added new block during phi lifting line_xdyi::@7(between line_xdyi::@5 and line_xdyi::@2)
Added new block during phi lifting line_ydxd::@6(between line_ydxd::@2 and line_ydxd::@1)
Added new block during phi lifting line_ydxd::@7(between line_ydxd::@5 and line_ydxd::@2)
Added new block during phi lifting line_xdyd::@6(between line_xdyd::@2 and line_xdyd::@1)
Added new block during phi lifting line_xdyd::@7(between line_xdyd::@5 and line_xdyd::@2)
Added new block during phi lifting init_plot_tables::@9(between init_plot_tables::@2 and init_plot_tables::@1)
Added new block during phi lifting init_plot_tables::@10(between init_plot_tables::@1 and init_plot_tables::@2)
Added new block during phi lifting init_plot_tables::@11(between init_plot_tables::@4 and init_plot_tables::@3)
Added new block during phi lifting init_plot_tables::@12(between init_plot_tables::@3 and init_plot_tables::@4)
Added new block during phi lifting init_screen::@5(between init_screen::@1 and init_screen::@1)
Added new block during phi lifting init_screen::@6(between init_screen::@2 and init_screen::@2)
Block Sequence Planned @begin @10 @end main main::@3 main::@1 main::@5 main::@return lines lines::@1 lines::@3 lines::@return lines::@4 line line::@15 line::@16 line::@17 line::@return line::@3 line::@2 line::@20 line::@6 line::@1 line::@23 line::@24 line::@10 line::@9 line::@27 line::@13 line_ydxi line_ydxi::@1 line_ydxi::@5 line_ydxi::@3 line_ydxi::@2 line_ydxi::@return line_ydxi::@6 line_ydxi::@7 plot plot::@return line_xdyi line_xdyi::@1 line_xdyi::@5 line_xdyi::@3 line_xdyi::@2 line_xdyi::@return line_xdyi::@6 line_xdyi::@7 line_ydxd line_ydxd::@1 line_ydxd::@5 line_ydxd::@3 line_ydxd::@2 line_ydxd::@return line_ydxd::@6 line_ydxd::@7 line_xdyd line_xdyd::@1 line_xdyd::@5 line_xdyd::@3 line_xdyd::@2 line_xdyd::@return line_xdyd::@6 line_xdyd::@7 init_plot_tables init_plot_tables::@1 init_plot_tables::@5 init_plot_tables::@2 init_plot_tables::@3 init_plot_tables::@7 init_plot_tables::@4 init_plot_tables::@return init_plot_tables::@11 init_plot_tables::@12 init_plot_tables::@9 init_plot_tables::@10 init_screen init_screen::@1 init_screen::@2 init_screen::@return init_screen::@6 init_screen::@5 
CONTROL FLOW GRAPH - PHI LIFTED
@begin: scope:[]  from
  to:@10
@10: scope:[]  from @begin
  call main param-assignment
  to:@end
@end: scope:[]  from @10
main: scope:[main]  from @10
  *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0
  *((const byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0
  *((const byte*) D011#0) ← (const byte) BMM#0|(const byte) DEN#0|(const byte) RSEL#0|(byte/signed byte/word/signed word) 3
  *((const byte*) D018#0) ← (byte/signed byte/word/signed word) 24
  call init_screen param-assignment
  to:main::@3
main::@3: scope:[main]  from main
  call init_plot_tables param-assignment
  to:main::@1
main::@1: scope:[main]  from main::@3 main::@5
  call lines param-assignment
  to:main::@5
main::@5: scope:[main]  from main::@1
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@5
  return 
  to:@return
lines: scope:[lines]  from main::@1
  to:lines::@1
lines::@1: scope:[lines]  from lines lines::@4
  (byte) lines::l#2 ← phi( lines/(byte/signed byte/word/signed word) 0 lines::@4/(byte~) lines::l#4 )
  (byte~) lines::$0 ← (const byte[]) lines_x#0 *idx (byte) lines::l#2
  (byte~) lines::$2 ← (const byte[]) lines_x#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2
  (byte~) lines::$3 ← (const byte[]) lines_y#0 *idx (byte) lines::l#2
  (byte~) lines::$5 ← (const byte[]) lines_y#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2
  (byte) line::x0#0 ← (byte~) lines::$0
  (byte) line::x1#0 ← (byte~) lines::$2
  (byte) line::y0#0 ← (byte~) lines::$3
  (byte) line::y1#0 ← (byte~) lines::$5
  call line param-assignment
  to:lines::@3
lines::@3: scope:[lines]  from lines::@1
  (byte) lines::l#1 ← ++ (byte) lines::l#2
  if((byte) lines::l#1<(const byte) lines_cnt#0) goto lines::@4
  to:lines::@return
lines::@return: scope:[lines]  from lines::@3
  return 
  to:@return
lines::@4: scope:[lines]  from lines::@3
  (byte~) lines::l#4 ← (byte) lines::l#1
  to:lines::@1
line: scope:[line]  from lines::@1
  if((byte) line::x0#0>=(byte) line::x1#0) goto line::@1
  to:line::@15
line::@15: scope:[line]  from line
  (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0
  if((byte) line::y0#0>=(byte) line::y1#0) goto line::@2
  to:line::@16
line::@16: scope:[line]  from line::@15
  (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0
  if((byte) line::yd#1>=(byte) line::xd#1) goto line::@3
  to:line::@17
line::@17: scope:[line]  from line::@16
  (byte) line_xdyi::x#0 ← (byte) line::x0#0
  (byte) line_xdyi::y#0 ← (byte) line::y0#0
  (byte) line_xdyi::x1#0 ← (byte) line::x1#0
  (byte) line_xdyi::xd#0 ← (byte) line::xd#1
  (byte) line_xdyi::yd#0 ← (byte) line::yd#1
  (byte~) line_xdyi::yd#7 ← (byte) line_xdyi::yd#0
  (byte~) line_xdyi::x#8 ← (byte) line_xdyi::x#0
  (byte~) line_xdyi::y#8 ← (byte) line_xdyi::y#0
  (byte~) line_xdyi::xd#7 ← (byte) line_xdyi::xd#0
  (byte~) line_xdyi::x1#7 ← (byte) line_xdyi::x1#0
  call line_xdyi param-assignment
  to:line::@return
line::@return: scope:[line]  from line::@10 line::@13 line::@17 line::@20 line::@24 line::@27 line::@3 line::@6
  return 
  to:@return
line::@3: scope:[line]  from line::@16
  (byte) line_ydxi::y#0 ← (byte) line::y0#0
  (byte) line_ydxi::x#0 ← (byte) line::x0#0
  (byte) line_ydxi::y1#0 ← (byte) line::y1#0
  (byte) line_ydxi::yd#0 ← (byte) line::yd#1
  (byte) line_ydxi::xd#0 ← (byte) line::xd#1
  (byte~) line_ydxi::xd#8 ← (byte) line_ydxi::xd#0
  (byte~) line_ydxi::x#9 ← (byte) line_ydxi::x#0
  (byte~) line_ydxi::y#9 ← (byte) line_ydxi::y#0
  (byte~) line_ydxi::yd#8 ← (byte) line_ydxi::yd#0
  (byte~) line_ydxi::y1#8 ← (byte) line_ydxi::y1#0
  call line_ydxi param-assignment
  to:line::@return
line::@2: scope:[line]  from line::@15
  (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0
  if((byte) line::yd#0>=(byte) line::xd#1) goto line::@6
  to:line::@20
line::@20: scope:[line]  from line::@2
  (byte) line_xdyd::x#0 ← (byte) line::x0#0
  (byte) line_xdyd::y#0 ← (byte) line::y0#0
  (byte) line_xdyd::x1#0 ← (byte) line::x1#0
  (byte) line_xdyd::xd#0 ← (byte) line::xd#1
  (byte) line_xdyd::yd#0 ← (byte) line::yd#0
  (byte~) line_xdyd::yd#7 ← (byte) line_xdyd::yd#0
  (byte~) line_xdyd::x#8 ← (byte) line_xdyd::x#0
  (byte~) line_xdyd::y#8 ← (byte) line_xdyd::y#0
  (byte~) line_xdyd::xd#7 ← (byte) line_xdyd::xd#0
  (byte~) line_xdyd::x1#7 ← (byte) line_xdyd::x1#0
  call line_xdyd param-assignment
  to:line::@return
line::@6: scope:[line]  from line::@2
  (byte) line_ydxd::y#0 ← (byte) line::y1#0
  (byte) line_ydxd::x#0 ← (byte) line::x1#0
  (byte) line_ydxd::y1#0 ← (byte) line::y0#0
  (byte) line_ydxd::yd#0 ← (byte) line::yd#0
  (byte) line_ydxd::xd#0 ← (byte) line::xd#1
  (byte~) line_ydxd::xd#8 ← (byte) line_ydxd::xd#0
  (byte~) line_ydxd::x#9 ← (byte) line_ydxd::x#0
  (byte~) line_ydxd::y#9 ← (byte) line_ydxd::y#0
  (byte~) line_ydxd::yd#8 ← (byte) line_ydxd::yd#0
  (byte~) line_ydxd::y1#8 ← (byte) line_ydxd::y1#0
  call line_ydxd param-assignment
  to:line::@return
line::@1: scope:[line]  from line
  (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0
  if((byte) line::y0#0>=(byte) line::y1#0) goto line::@9
  to:line::@23
line::@23: scope:[line]  from line::@1
  (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0
  if((byte) line::yd#3>=(byte) line::xd#0) goto line::@10
  to:line::@24
line::@24: scope:[line]  from line::@23
  (byte) line_xdyd::x#1 ← (byte) line::x1#0
  (byte) line_xdyd::y#1 ← (byte) line::y1#0
  (byte) line_xdyd::x1#1 ← (byte) line::x0#0
  (byte) line_xdyd::xd#1 ← (byte) line::xd#0
  (byte) line_xdyd::yd#1 ← (byte) line::yd#3
  (byte~) line_xdyd::yd#8 ← (byte) line_xdyd::yd#1
  (byte~) line_xdyd::x#9 ← (byte) line_xdyd::x#1
  (byte~) line_xdyd::y#9 ← (byte) line_xdyd::y#1
  (byte~) line_xdyd::xd#8 ← (byte) line_xdyd::xd#1
  (byte~) line_xdyd::x1#8 ← (byte) line_xdyd::x1#1
  call line_xdyd param-assignment
  to:line::@return
line::@10: scope:[line]  from line::@23
  (byte) line_ydxd::y#1 ← (byte) line::y0#0
  (byte) line_ydxd::x#1 ← (byte) line::x0#0
  (byte) line_ydxd::y1#1 ← (byte) line::y1#0
  (byte) line_ydxd::yd#1 ← (byte) line::yd#3
  (byte) line_ydxd::xd#1 ← (byte) line::xd#0
  (byte~) line_ydxd::xd#7 ← (byte) line_ydxd::xd#1
  (byte~) line_ydxd::x#8 ← (byte) line_ydxd::x#1
  (byte~) line_ydxd::y#8 ← (byte) line_ydxd::y#1
  (byte~) line_ydxd::yd#7 ← (byte) line_ydxd::yd#1
  (byte~) line_ydxd::y1#7 ← (byte) line_ydxd::y1#1
  call line_ydxd param-assignment
  to:line::@return
line::@9: scope:[line]  from line::@1
  (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0
  if((byte) line::yd#10>=(byte) line::xd#0) goto line::@13
  to:line::@27
line::@27: scope:[line]  from line::@9
  (byte) line_xdyi::x#1 ← (byte) line::x1#0
  (byte) line_xdyi::y#1 ← (byte) line::y1#0
  (byte) line_xdyi::x1#1 ← (byte) line::x0#0
  (byte) line_xdyi::xd#1 ← (byte) line::xd#0
  (byte) line_xdyi::yd#1 ← (byte) line::yd#10
  (byte~) line_xdyi::yd#8 ← (byte) line_xdyi::yd#1
  (byte~) line_xdyi::x#9 ← (byte) line_xdyi::x#1
  (byte~) line_xdyi::y#9 ← (byte) line_xdyi::y#1
  (byte~) line_xdyi::xd#8 ← (byte) line_xdyi::xd#1
  (byte~) line_xdyi::x1#8 ← (byte) line_xdyi::x1#1
  call line_xdyi param-assignment
  to:line::@return
line::@13: scope:[line]  from line::@9
  (byte) line_ydxi::y#1 ← (byte) line::y1#0
  (byte) line_ydxi::x#1 ← (byte) line::x1#0
  (byte) line_ydxi::y1#1 ← (byte) line::y0#0
  (byte) line_ydxi::yd#1 ← (byte) line::yd#10
  (byte) line_ydxi::xd#1 ← (byte) line::xd#0
  (byte~) line_ydxi::xd#7 ← (byte) line_ydxi::xd#1
  (byte~) line_ydxi::x#8 ← (byte) line_ydxi::x#1
  (byte~) line_ydxi::y#8 ← (byte) line_ydxi::y#1
  (byte~) line_ydxi::yd#7 ← (byte) line_ydxi::yd#1
  (byte~) line_ydxi::y1#7 ← (byte) line_ydxi::y1#1
  call line_ydxi param-assignment
  to:line::@return
line_ydxi: scope:[line_ydxi]  from line::@13 line::@3
  (byte) line_ydxi::y1#6 ← phi( line::@13/(byte~) line_ydxi::y1#7 line::@3/(byte~) line_ydxi::y1#8 )
  (byte) line_ydxi::yd#5 ← phi( line::@13/(byte~) line_ydxi::yd#7 line::@3/(byte~) line_ydxi::yd#8 )
  (byte) line_ydxi::y#6 ← phi( line::@13/(byte~) line_ydxi::y#8 line::@3/(byte~) line_ydxi::y#9 )
  (byte) line_ydxi::x#5 ← phi( line::@13/(byte~) line_ydxi::x#8 line::@3/(byte~) line_ydxi::x#9 )
  (byte) line_ydxi::xd#2 ← phi( line::@13/(byte~) line_ydxi::xd#7 line::@3/(byte~) line_ydxi::xd#8 )
  (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1
  (byte~) line_ydxi::x#10 ← (byte) line_ydxi::x#5
  (byte~) line_ydxi::y#10 ← (byte) line_ydxi::y#6
  (byte~) line_ydxi::e#7 ← (byte) line_ydxi::e#0
  to:line_ydxi::@1
line_ydxi::@1: scope:[line_ydxi]  from line_ydxi line_ydxi::@6
  (byte) line_ydxi::e#3 ← phi( line_ydxi/(byte~) line_ydxi::e#7 line_ydxi::@6/(byte~) line_ydxi::e#8 )
  (byte) line_ydxi::y#3 ← phi( line_ydxi/(byte~) line_ydxi::y#10 line_ydxi::@6/(byte~) line_ydxi::y#11 )
  (byte) line_ydxi::x#3 ← phi( line_ydxi/(byte~) line_ydxi::x#10 line_ydxi::@6/(byte~) line_ydxi::x#11 )
  (byte) plot::x#2 ← (byte) line_ydxi::x#3
  (byte) plot::y#2 ← (byte) line_ydxi::y#3
  (byte~) plot::x#8 ← (byte) plot::x#2
  (byte~) plot::y#8 ← (byte) plot::y#2
  call plot param-assignment
  to:line_ydxi::@5
line_ydxi::@5: scope:[line_ydxi]  from line_ydxi::@1
  (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2
  if((byte) line_ydxi::yd#5>=(byte) line_ydxi::e#1) goto line_ydxi::@7
  to:line_ydxi::@3
line_ydxi::@3: scope:[line_ydxi]  from line_ydxi::@5
  (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5
  (byte~) line_ydxi::x#12 ← (byte) line_ydxi::x#2
  (byte~) line_ydxi::e#9 ← (byte) line_ydxi::e#2
  to:line_ydxi::@2
line_ydxi::@2: scope:[line_ydxi]  from line_ydxi::@3 line_ydxi::@7
  (byte) line_ydxi::e#6 ← phi( line_ydxi::@3/(byte~) line_ydxi::e#9 line_ydxi::@7/(byte~) line_ydxi::e#10 )
  (byte) line_ydxi::x#6 ← phi( line_ydxi::@3/(byte~) line_ydxi::x#12 line_ydxi::@7/(byte~) line_ydxi::x#13 )
  (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_ydxi::y#2<(byte~) line_ydxi::$8) goto line_ydxi::@6
  to:line_ydxi::@return
line_ydxi::@return: scope:[line_ydxi]  from line_ydxi::@2
  return 
  to:@return
line_ydxi::@6: scope:[line_ydxi]  from line_ydxi::@2
  (byte~) line_ydxi::x#11 ← (byte) line_ydxi::x#6
  (byte~) line_ydxi::y#11 ← (byte) line_ydxi::y#2
  (byte~) line_ydxi::e#8 ← (byte) line_ydxi::e#6
  to:line_ydxi::@1
line_ydxi::@7: scope:[line_ydxi]  from line_ydxi::@5
  (byte~) line_ydxi::x#13 ← (byte) line_ydxi::x#3
  (byte~) line_ydxi::e#10 ← (byte) line_ydxi::e#1
  to:line_ydxi::@2
plot: scope:[plot]  from line_xdyd::@1 line_xdyi::@1 line_ydxd::@1 line_ydxi::@1
  (byte) plot::y#4 ← phi( line_xdyd::@1/(byte~) plot::y#5 line_xdyi::@1/(byte~) plot::y#6 line_ydxd::@1/(byte~) plot::y#7 line_ydxi::@1/(byte~) plot::y#8 )
  (byte) plot::x#4 ← phi( line_xdyd::@1/(byte~) plot::x#5 line_xdyi::@1/(byte~) plot::x#6 line_ydxd::@1/(byte~) plot::x#7 line_ydxi::@1/(byte~) plot::x#8 )
  (byte~) plot::$0 ← (const byte[]) plot_xhi#0 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#1 ← ((byte*))(byte/signed byte/word/signed word) 0 hi= (byte~) plot::$0
  (byte~) plot::$1 ← (const byte[]) plot_xlo#0 *idx (byte) plot::x#4
  (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1
  (byte~) plot::$2 ← (const byte[]) plot_yhi#0 *idx (byte) plot::y#4
  (word) plot::plotter_y#1 ← (byte/signed byte/word/signed word) 0 hi= (byte~) plot::$2
  (byte~) plot::$3 ← (const byte[]) plot_ylo#0 *idx (byte) plot::y#4
  (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3
  (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2
  (byte~) plot::$5 ← (const byte[]) plot_bit#0 *idx (byte) plot::x#4
  (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5
  *((byte*) plot::plotter#0) ← (byte~) plot::$6
  to:plot::@return
plot::@return: scope:[plot]  from plot
  return 
  to:@return
line_xdyi: scope:[line_xdyi]  from line::@17 line::@27
  (byte) line_xdyi::x1#6 ← phi( line::@17/(byte~) line_xdyi::x1#7 line::@27/(byte~) line_xdyi::x1#8 )
  (byte) line_xdyi::xd#5 ← phi( line::@17/(byte~) line_xdyi::xd#7 line::@27/(byte~) line_xdyi::xd#8 )
  (byte) line_xdyi::y#5 ← phi( line::@17/(byte~) line_xdyi::y#8 line::@27/(byte~) line_xdyi::y#9 )
  (byte) line_xdyi::x#6 ← phi( line::@17/(byte~) line_xdyi::x#8 line::@27/(byte~) line_xdyi::x#9 )
  (byte) line_xdyi::yd#2 ← phi( line::@17/(byte~) line_xdyi::yd#7 line::@27/(byte~) line_xdyi::yd#8 )
  (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1
  (byte~) line_xdyi::x#10 ← (byte) line_xdyi::x#6
  (byte~) line_xdyi::y#10 ← (byte) line_xdyi::y#5
  (byte~) line_xdyi::e#7 ← (byte) line_xdyi::e#0
  to:line_xdyi::@1
line_xdyi::@1: scope:[line_xdyi]  from line_xdyi line_xdyi::@6
  (byte) line_xdyi::e#3 ← phi( line_xdyi/(byte~) line_xdyi::e#7 line_xdyi::@6/(byte~) line_xdyi::e#8 )
  (byte) line_xdyi::y#3 ← phi( line_xdyi/(byte~) line_xdyi::y#10 line_xdyi::@6/(byte~) line_xdyi::y#11 )
  (byte) line_xdyi::x#3 ← phi( line_xdyi/(byte~) line_xdyi::x#10 line_xdyi::@6/(byte~) line_xdyi::x#11 )
  (byte) plot::x#0 ← (byte) line_xdyi::x#3
  (byte) plot::y#0 ← (byte) line_xdyi::y#3
  (byte~) plot::x#6 ← (byte) plot::x#0
  (byte~) plot::y#6 ← (byte) plot::y#0
  call plot param-assignment
  to:line_xdyi::@5
line_xdyi::@5: scope:[line_xdyi]  from line_xdyi::@1
  (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2
  if((byte) line_xdyi::xd#5>=(byte) line_xdyi::e#1) goto line_xdyi::@7
  to:line_xdyi::@3
line_xdyi::@3: scope:[line_xdyi]  from line_xdyi::@5
  (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5
  (byte~) line_xdyi::y#12 ← (byte) line_xdyi::y#2
  (byte~) line_xdyi::e#9 ← (byte) line_xdyi::e#2
  to:line_xdyi::@2
line_xdyi::@2: scope:[line_xdyi]  from line_xdyi::@3 line_xdyi::@7
  (byte) line_xdyi::e#6 ← phi( line_xdyi::@3/(byte~) line_xdyi::e#9 line_xdyi::@7/(byte~) line_xdyi::e#10 )
  (byte) line_xdyi::y#6 ← phi( line_xdyi::@3/(byte~) line_xdyi::y#12 line_xdyi::@7/(byte~) line_xdyi::y#13 )
  (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_xdyi::x#2<(byte~) line_xdyi::$8) goto line_xdyi::@6
  to:line_xdyi::@return
line_xdyi::@return: scope:[line_xdyi]  from line_xdyi::@2
  return 
  to:@return
line_xdyi::@6: scope:[line_xdyi]  from line_xdyi::@2
  (byte~) line_xdyi::x#11 ← (byte) line_xdyi::x#2
  (byte~) line_xdyi::y#11 ← (byte) line_xdyi::y#6
  (byte~) line_xdyi::e#8 ← (byte) line_xdyi::e#6
  to:line_xdyi::@1
line_xdyi::@7: scope:[line_xdyi]  from line_xdyi::@5
  (byte~) line_xdyi::y#13 ← (byte) line_xdyi::y#3
  (byte~) line_xdyi::e#10 ← (byte) line_xdyi::e#1
  to:line_xdyi::@2
line_ydxd: scope:[line_ydxd]  from line::@10 line::@6
  (byte) line_ydxd::y1#6 ← phi( line::@10/(byte~) line_ydxd::y1#7 line::@6/(byte~) line_ydxd::y1#8 )
  (byte) line_ydxd::yd#5 ← phi( line::@10/(byte~) line_ydxd::yd#7 line::@6/(byte~) line_ydxd::yd#8 )
  (byte) line_ydxd::y#6 ← phi( line::@10/(byte~) line_ydxd::y#8 line::@6/(byte~) line_ydxd::y#9 )
  (byte) line_ydxd::x#5 ← phi( line::@10/(byte~) line_ydxd::x#8 line::@6/(byte~) line_ydxd::x#9 )
  (byte) line_ydxd::xd#2 ← phi( line::@10/(byte~) line_ydxd::xd#7 line::@6/(byte~) line_ydxd::xd#8 )
  (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1
  (byte~) line_ydxd::x#10 ← (byte) line_ydxd::x#5
  (byte~) line_ydxd::y#10 ← (byte) line_ydxd::y#6
  (byte~) line_ydxd::e#7 ← (byte) line_ydxd::e#0
  to:line_ydxd::@1
line_ydxd::@1: scope:[line_ydxd]  from line_ydxd line_ydxd::@6
  (byte) line_ydxd::e#3 ← phi( line_ydxd/(byte~) line_ydxd::e#7 line_ydxd::@6/(byte~) line_ydxd::e#8 )
  (byte) line_ydxd::y#3 ← phi( line_ydxd/(byte~) line_ydxd::y#10 line_ydxd::@6/(byte~) line_ydxd::y#11 )
  (byte) line_ydxd::x#3 ← phi( line_ydxd/(byte~) line_ydxd::x#10 line_ydxd::@6/(byte~) line_ydxd::x#11 )
  (byte) plot::x#3 ← (byte) line_ydxd::x#3
  (byte) plot::y#3 ← (byte) line_ydxd::y#3
  (byte~) plot::x#7 ← (byte) plot::x#3
  (byte~) plot::y#7 ← (byte) plot::y#3
  call plot param-assignment
  to:line_ydxd::@5
line_ydxd::@5: scope:[line_ydxd]  from line_ydxd::@1
  (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2
  if((byte) line_ydxd::yd#5>=(byte) line_ydxd::e#1) goto line_ydxd::@7
  to:line_ydxd::@3
line_ydxd::@3: scope:[line_ydxd]  from line_ydxd::@5
  (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1
  (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5
  (byte~) line_ydxd::x#12 ← (byte) line_ydxd::x#2
  (byte~) line_ydxd::e#9 ← (byte) line_ydxd::e#2
  to:line_ydxd::@2
line_ydxd::@2: scope:[line_ydxd]  from line_ydxd::@3 line_ydxd::@7
  (byte) line_ydxd::e#6 ← phi( line_ydxd::@3/(byte~) line_ydxd::e#9 line_ydxd::@7/(byte~) line_ydxd::e#10 )
  (byte) line_ydxd::x#6 ← phi( line_ydxd::@3/(byte~) line_ydxd::x#12 line_ydxd::@7/(byte~) line_ydxd::x#13 )
  (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_ydxd::y#2<(byte~) line_ydxd::$8) goto line_ydxd::@6
  to:line_ydxd::@return
line_ydxd::@return: scope:[line_ydxd]  from line_ydxd::@2
  return 
  to:@return
line_ydxd::@6: scope:[line_ydxd]  from line_ydxd::@2
  (byte~) line_ydxd::x#11 ← (byte) line_ydxd::x#6
  (byte~) line_ydxd::y#11 ← (byte) line_ydxd::y#2
  (byte~) line_ydxd::e#8 ← (byte) line_ydxd::e#6
  to:line_ydxd::@1
line_ydxd::@7: scope:[line_ydxd]  from line_ydxd::@5
  (byte~) line_ydxd::x#13 ← (byte) line_ydxd::x#3
  (byte~) line_ydxd::e#10 ← (byte) line_ydxd::e#1
  to:line_ydxd::@2
line_xdyd: scope:[line_xdyd]  from line::@20 line::@24
  (byte) line_xdyd::x1#6 ← phi( line::@20/(byte~) line_xdyd::x1#7 line::@24/(byte~) line_xdyd::x1#8 )
  (byte) line_xdyd::xd#5 ← phi( line::@20/(byte~) line_xdyd::xd#7 line::@24/(byte~) line_xdyd::xd#8 )
  (byte) line_xdyd::y#5 ← phi( line::@20/(byte~) line_xdyd::y#8 line::@24/(byte~) line_xdyd::y#9 )
  (byte) line_xdyd::x#6 ← phi( line::@20/(byte~) line_xdyd::x#8 line::@24/(byte~) line_xdyd::x#9 )
  (byte) line_xdyd::yd#2 ← phi( line::@20/(byte~) line_xdyd::yd#7 line::@24/(byte~) line_xdyd::yd#8 )
  (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1
  (byte~) line_xdyd::x#10 ← (byte) line_xdyd::x#6
  (byte~) line_xdyd::y#10 ← (byte) line_xdyd::y#5
  (byte~) line_xdyd::e#7 ← (byte) line_xdyd::e#0
  to:line_xdyd::@1
line_xdyd::@1: scope:[line_xdyd]  from line_xdyd line_xdyd::@6
  (byte) line_xdyd::e#3 ← phi( line_xdyd/(byte~) line_xdyd::e#7 line_xdyd::@6/(byte~) line_xdyd::e#8 )
  (byte) line_xdyd::y#3 ← phi( line_xdyd/(byte~) line_xdyd::y#10 line_xdyd::@6/(byte~) line_xdyd::y#11 )
  (byte) line_xdyd::x#3 ← phi( line_xdyd/(byte~) line_xdyd::x#10 line_xdyd::@6/(byte~) line_xdyd::x#11 )
  (byte) plot::x#1 ← (byte) line_xdyd::x#3
  (byte) plot::y#1 ← (byte) line_xdyd::y#3
  (byte~) plot::x#5 ← (byte) plot::x#1
  (byte~) plot::y#5 ← (byte) plot::y#1
  call plot param-assignment
  to:line_xdyd::@5
line_xdyd::@5: scope:[line_xdyd]  from line_xdyd::@1
  (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2
  if((byte) line_xdyd::xd#5>=(byte) line_xdyd::e#1) goto line_xdyd::@7
  to:line_xdyd::@3
line_xdyd::@3: scope:[line_xdyd]  from line_xdyd::@5
  (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1
  (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5
  (byte~) line_xdyd::y#12 ← (byte) line_xdyd::y#2
  (byte~) line_xdyd::e#9 ← (byte) line_xdyd::e#2
  to:line_xdyd::@2
line_xdyd::@2: scope:[line_xdyd]  from line_xdyd::@3 line_xdyd::@7
  (byte) line_xdyd::e#6 ← phi( line_xdyd::@3/(byte~) line_xdyd::e#9 line_xdyd::@7/(byte~) line_xdyd::e#10 )
  (byte) line_xdyd::y#6 ← phi( line_xdyd::@3/(byte~) line_xdyd::y#12 line_xdyd::@7/(byte~) line_xdyd::y#13 )
  (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1
  if((byte) line_xdyd::x#2<(byte~) line_xdyd::$8) goto line_xdyd::@6
  to:line_xdyd::@return
line_xdyd::@return: scope:[line_xdyd]  from line_xdyd::@2
  return 
  to:@return
line_xdyd::@6: scope:[line_xdyd]  from line_xdyd::@2
  (byte~) line_xdyd::x#11 ← (byte) line_xdyd::x#2
  (byte~) line_xdyd::y#11 ← (byte) line_xdyd::y#6
  (byte~) line_xdyd::e#8 ← (byte) line_xdyd::e#6
  to:line_xdyd::@1
line_xdyd::@7: scope:[line_xdyd]  from line_xdyd::@5
  (byte~) line_xdyd::y#13 ← (byte) line_xdyd::y#3
  (byte~) line_xdyd::e#10 ← (byte) line_xdyd::e#1
  to:line_xdyd::@2
init_plot_tables: scope:[init_plot_tables]  from main::@3
  to:init_plot_tables::@1
init_plot_tables::@1: scope:[init_plot_tables]  from init_plot_tables init_plot_tables::@9
  (byte) init_plot_tables::bits#3 ← phi( init_plot_tables/(byte/word/signed word) 128 init_plot_tables::@9/(byte~) init_plot_tables::bits#5 )
  (byte) init_plot_tables::x#2 ← phi( init_plot_tables/(byte/signed byte/word/signed word) 0 init_plot_tables::@9/(byte~) init_plot_tables::x#5 )
  (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248
  *((const byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0
  *((const byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← >(const byte*) BITMAP#0
  *((const byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3
  (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1
  if((byte) init_plot_tables::bits#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@10
  to:init_plot_tables::@5
init_plot_tables::@5: scope:[init_plot_tables]  from init_plot_tables::@1
  to:init_plot_tables::@2
init_plot_tables::@2: scope:[init_plot_tables]  from init_plot_tables::@10 init_plot_tables::@5
  (byte) init_plot_tables::bits#4 ← phi( init_plot_tables::@10/(byte~) init_plot_tables::bits#6 init_plot_tables::@5/(byte/word/signed word) 128 )
  (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2
  if((byte) init_plot_tables::x#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@9
  to:init_plot_tables::@3
init_plot_tables::@3: scope:[init_plot_tables]  from init_plot_tables::@11 init_plot_tables::@2
  (byte*) init_plot_tables::yoffs#2 ← phi( init_plot_tables::@11/(byte*~) init_plot_tables::yoffs#5 init_plot_tables::@2/((byte*))(byte/signed byte/word/signed word) 0 )
  (byte) init_plot_tables::y#2 ← phi( init_plot_tables::@11/(byte~) init_plot_tables::y#5 init_plot_tables::@2/(byte/signed byte/word/signed word) 0 )
  (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2
  (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7
  *((const byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8
  (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2
  *((const byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9
  (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7
  if((byte~) init_plot_tables::$10!=(byte/signed byte/word/signed word) 7) goto init_plot_tables::@12
  to:init_plot_tables::@7
init_plot_tables::@7: scope:[init_plot_tables]  from init_plot_tables::@3
  (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320
  (byte*~) init_plot_tables::yoffs#7 ← (byte*) init_plot_tables::yoffs#1
  to:init_plot_tables::@4
init_plot_tables::@4: scope:[init_plot_tables]  from init_plot_tables::@12 init_plot_tables::@7
  (byte*) init_plot_tables::yoffs#4 ← phi( init_plot_tables::@12/(byte*~) init_plot_tables::yoffs#6 init_plot_tables::@7/(byte*~) init_plot_tables::yoffs#7 )
  (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2
  if((byte) init_plot_tables::y#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@11
  to:init_plot_tables::@return
init_plot_tables::@return: scope:[init_plot_tables]  from init_plot_tables::@4
  return 
  to:@return
init_plot_tables::@11: scope:[init_plot_tables]  from init_plot_tables::@4
  (byte~) init_plot_tables::y#5 ← (byte) init_plot_tables::y#1
  (byte*~) init_plot_tables::yoffs#5 ← (byte*) init_plot_tables::yoffs#4
  to:init_plot_tables::@3
init_plot_tables::@12: scope:[init_plot_tables]  from init_plot_tables::@3
  (byte*~) init_plot_tables::yoffs#6 ← (byte*) init_plot_tables::yoffs#2
  to:init_plot_tables::@4
init_plot_tables::@9: scope:[init_plot_tables]  from init_plot_tables::@2
  (byte~) init_plot_tables::x#5 ← (byte) init_plot_tables::x#1
  (byte~) init_plot_tables::bits#5 ← (byte) init_plot_tables::bits#4
  to:init_plot_tables::@1
init_plot_tables::@10: scope:[init_plot_tables]  from init_plot_tables::@1
  (byte~) init_plot_tables::bits#6 ← (byte) init_plot_tables::bits#1
  to:init_plot_tables::@2
init_screen: scope:[init_screen]  from main
  to:init_screen::@1
init_screen::@1: scope:[init_screen]  from init_screen init_screen::@5
  (byte*) init_screen::b#2 ← phi( init_screen/(const byte*) BITMAP#0 init_screen::@5/(byte*~) init_screen::b#3 )
  *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0
  (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2
  if((byte*) init_screen::b#1!=(const byte*) BITMAP#0+(word/signed word) 8192) goto init_screen::@5
  to:init_screen::@2
init_screen::@2: scope:[init_screen]  from init_screen::@1 init_screen::@6
  (byte*) init_screen::c#2 ← phi( init_screen::@6/(byte*~) init_screen::c#3 init_screen::@1/(const byte*) SCREEN#0 )
  *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20
  (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2
  if((byte*) init_screen::c#1!=(const byte*) SCREEN#0+(word/signed word) 1024) goto init_screen::@6
  to:init_screen::@return
init_screen::@return: scope:[init_screen]  from init_screen::@2
  return 
  to:@return
init_screen::@6: scope:[init_screen]  from init_screen::@2
  (byte*~) init_screen::c#3 ← (byte*) init_screen::c#1
  to:init_screen::@2
init_screen::@5: scope:[init_screen]  from init_screen::@1
  (byte*~) init_screen::b#3 ← (byte*) init_screen::b#1
  to:init_screen::@1

Adding NOP phi() at start of @begin
Adding NOP phi() at start of @10
Adding NOP phi() at start of @end
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@1
Adding NOP phi() at start of lines
Adding NOP phi() at start of init_plot_tables
Adding NOP phi() at start of init_plot_tables::@5
Adding NOP phi() at start of init_screen
CALL GRAPH
Calls in [] to main:2 
Calls in [main] to init_screen:8 init_plot_tables:10 lines:12 
Calls in [lines] to line:25 
Calls in [line] to line_xdyi:45 line_ydxi:57 line_xdyd:70 line_ydxd:81 line_xdyd:96 line_ydxd:107 line_xdyi:120 line_ydxi:131 
Calls in [line_ydxi] to plot:142 
Calls in [line_xdyi] to plot:183 
Calls in [line_ydxd] to plot:210 
Calls in [line_xdyd] to plot:237 

Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
CONTROL FLOW GRAPH - LIVE RANGES FOUND
@begin: scope:[]  from
  [0] phi() [ ]
  to:@10
@10: scope:[]  from @begin
  [1] phi() [ ]
  [2] call main param-assignment [ ]
  to:@end
@end: scope:[]  from @10
  [3] phi() [ ]
main: scope:[main]  from @10
  [4] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ]
  [5] *((const byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ]
  [6] *((const byte*) D011#0) ← (const byte) BMM#0|(const byte) DEN#0|(const byte) RSEL#0|(byte/signed byte/word/signed word) 3 [ ]
  [7] *((const byte*) D018#0) ← (byte/signed byte/word/signed word) 24 [ ]
  [8] call init_screen param-assignment [ ]
  to:main::@3
main::@3: scope:[main]  from main
  [9] phi() [ ]
  [10] call init_plot_tables param-assignment [ ]
  to:main::@1
main::@1: scope:[main]  from main::@3 main::@5
  [11] phi() [ ]
  [12] call lines param-assignment [ ]
  to:main::@5
main::@5: scope:[main]  from main::@1
  [13] if(true) goto main::@1 [ ]
  to:main::@return
main::@return: scope:[main]  from main::@5
  [14] return  [ ]
  to:@return
lines: scope:[lines]  from main::@1
  [15] phi() [ ]
  to:lines::@1
lines::@1: scope:[lines]  from lines lines::@4
  [16] (byte) lines::l#2 ← phi( lines/(byte/signed byte/word/signed word) 0 lines::@4/(byte~) lines::l#4 ) [ lines::l#2 ]
  [17] (byte~) lines::$0 ← (const byte[]) lines_x#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 ]
  [18] (byte~) lines::$2 ← (const byte[]) lines_x#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 ]
  [19] (byte~) lines::$3 ← (const byte[]) lines_y#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 ]
  [20] (byte~) lines::$5 ← (const byte[]) lines_y#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ]
  [21] (byte) line::x0#0 ← (byte~) lines::$0 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ]
  [22] (byte) line::x1#0 ← (byte~) lines::$2 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ]
  [23] (byte) line::y0#0 ← (byte~) lines::$3 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ]
  [24] (byte) line::y1#0 ← (byte~) lines::$5 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ]
  [25] call line param-assignment [ lines::l#2 ]
  to:lines::@3
lines::@3: scope:[lines]  from lines::@1
  [26] (byte) lines::l#1 ← ++ (byte) lines::l#2 [ lines::l#1 ]
  [27] if((byte) lines::l#1<(const byte) lines_cnt#0) goto lines::@4 [ lines::l#1 ]
  to:lines::@return
lines::@return: scope:[lines]  from lines::@3
  [28] return  [ ]
  to:@return
lines::@4: scope:[lines]  from lines::@3
  [29] (byte~) lines::l#4 ← (byte) lines::l#1 [ lines::l#4 ]
  to:lines::@1
line: scope:[line]  from lines::@1
  [30] if((byte) line::x0#0>=(byte) line::x1#0) goto line::@1 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 ]
  to:line::@15
line::@15: scope:[line]  from line
  [31] (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ]
  [32] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@2 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ]
  to:line::@16
line::@16: scope:[line]  from line::@15
  [33] (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ]
  [34] if((byte) line::yd#1>=(byte) line::xd#1) goto line::@3 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ]
  to:line::@17
line::@17: scope:[line]  from line::@16
  [35] (byte) line_xdyi::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ]
  [36] (byte) line_xdyi::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ]
  [37] (byte) line_xdyi::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ]
  [38] (byte) line_xdyi::xd#0 ← (byte) line::xd#1 [ line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ]
  [39] (byte) line_xdyi::yd#0 ← (byte) line::yd#1 [ line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ]
  [40] (byte~) line_xdyi::yd#7 ← (byte) line_xdyi::yd#0 [ line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#7 ]
  [41] (byte~) line_xdyi::x#8 ← (byte) line_xdyi::x#0 [ line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#7 line_xdyi::x#8 ]
  [42] (byte~) line_xdyi::y#8 ← (byte) line_xdyi::y#0 [ line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#7 line_xdyi::x#8 line_xdyi::y#8 ]
  [43] (byte~) line_xdyi::xd#7 ← (byte) line_xdyi::xd#0 [ line_xdyi::x1#0 line_xdyi::yd#7 line_xdyi::x#8 line_xdyi::y#8 line_xdyi::xd#7 ]
  [44] (byte~) line_xdyi::x1#7 ← (byte) line_xdyi::x1#0 [ line_xdyi::yd#7 line_xdyi::x#8 line_xdyi::y#8 line_xdyi::xd#7 line_xdyi::x1#7 ]
  [45] call line_xdyi param-assignment [ ]
  to:line::@return
line::@return: scope:[line]  from line::@10 line::@13 line::@17 line::@20 line::@24 line::@27 line::@3 line::@6
  [46] return  [ ]
  to:@return
line::@3: scope:[line]  from line::@16
  [47] (byte) line_ydxi::y#0 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ]
  [48] (byte) line_ydxi::x#0 ← (byte) line::x0#0 [ line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ]
  [49] (byte) line_ydxi::y1#0 ← (byte) line::y1#0 [ line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ]
  [50] (byte) line_ydxi::yd#0 ← (byte) line::yd#1 [ line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ]
  [51] (byte) line_ydxi::xd#0 ← (byte) line::xd#1 [ line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ]
  [52] (byte~) line_ydxi::xd#8 ← (byte) line_ydxi::xd#0 [ line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#8 ]
  [53] (byte~) line_ydxi::x#9 ← (byte) line_ydxi::x#0 [ line_ydxi::y#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#8 line_ydxi::x#9 ]
  [54] (byte~) line_ydxi::y#9 ← (byte) line_ydxi::y#0 [ line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#8 line_ydxi::x#9 line_ydxi::y#9 ]
  [55] (byte~) line_ydxi::yd#8 ← (byte) line_ydxi::yd#0 [ line_ydxi::y1#0 line_ydxi::xd#8 line_ydxi::x#9 line_ydxi::y#9 line_ydxi::yd#8 ]
  [56] (byte~) line_ydxi::y1#8 ← (byte) line_ydxi::y1#0 [ line_ydxi::xd#8 line_ydxi::x#9 line_ydxi::y#9 line_ydxi::yd#8 line_ydxi::y1#8 ]
  [57] call line_ydxi param-assignment [ ]
  to:line::@return
line::@2: scope:[line]  from line::@15
  [58] (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ]
  [59] if((byte) line::yd#0>=(byte) line::xd#1) goto line::@6 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ]
  to:line::@20
line::@20: scope:[line]  from line::@2
  [60] (byte) line_xdyd::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ]
  [61] (byte) line_xdyd::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ]
  [62] (byte) line_xdyd::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ]
  [63] (byte) line_xdyd::xd#0 ← (byte) line::xd#1 [ line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ]
  [64] (byte) line_xdyd::yd#0 ← (byte) line::yd#0 [ line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ]
  [65] (byte~) line_xdyd::yd#7 ← (byte) line_xdyd::yd#0 [ line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#7 ]
  [66] (byte~) line_xdyd::x#8 ← (byte) line_xdyd::x#0 [ line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#7 line_xdyd::x#8 ]
  [67] (byte~) line_xdyd::y#8 ← (byte) line_xdyd::y#0 [ line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#7 line_xdyd::x#8 line_xdyd::y#8 ]
  [68] (byte~) line_xdyd::xd#7 ← (byte) line_xdyd::xd#0 [ line_xdyd::x1#0 line_xdyd::yd#7 line_xdyd::x#8 line_xdyd::y#8 line_xdyd::xd#7 ]
  [69] (byte~) line_xdyd::x1#7 ← (byte) line_xdyd::x1#0 [ line_xdyd::yd#7 line_xdyd::x#8 line_xdyd::y#8 line_xdyd::xd#7 line_xdyd::x1#7 ]
  [70] call line_xdyd param-assignment [ ]
  to:line::@return
line::@6: scope:[line]  from line::@2
  [71] (byte) line_ydxd::y#0 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ]
  [72] (byte) line_ydxd::x#0 ← (byte) line::x1#0 [ line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ]
  [73] (byte) line_ydxd::y1#0 ← (byte) line::y0#0 [ line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ]
  [74] (byte) line_ydxd::yd#0 ← (byte) line::yd#0 [ line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ]
  [75] (byte) line_ydxd::xd#0 ← (byte) line::xd#1 [ line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ]
  [76] (byte~) line_ydxd::xd#8 ← (byte) line_ydxd::xd#0 [ line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#8 ]
  [77] (byte~) line_ydxd::x#9 ← (byte) line_ydxd::x#0 [ line_ydxd::y#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#8 line_ydxd::x#9 ]
  [78] (byte~) line_ydxd::y#9 ← (byte) line_ydxd::y#0 [ line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#8 line_ydxd::x#9 line_ydxd::y#9 ]
  [79] (byte~) line_ydxd::yd#8 ← (byte) line_ydxd::yd#0 [ line_ydxd::y1#0 line_ydxd::xd#8 line_ydxd::x#9 line_ydxd::y#9 line_ydxd::yd#8 ]
  [80] (byte~) line_ydxd::y1#8 ← (byte) line_ydxd::y1#0 [ line_ydxd::xd#8 line_ydxd::x#9 line_ydxd::y#9 line_ydxd::yd#8 line_ydxd::y1#8 ]
  [81] call line_ydxd param-assignment [ ]
  to:line::@return
line::@1: scope:[line]  from line
  [82] (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ]
  [83] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@9 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ]
  to:line::@23
line::@23: scope:[line]  from line::@1
  [84] (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ]
  [85] if((byte) line::yd#3>=(byte) line::xd#0) goto line::@10 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ]
  to:line::@24
line::@24: scope:[line]  from line::@23
  [86] (byte) line_xdyd::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ]
  [87] (byte) line_xdyd::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ]
  [88] (byte) line_xdyd::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ]
  [89] (byte) line_xdyd::xd#1 ← (byte) line::xd#0 [ line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ]
  [90] (byte) line_xdyd::yd#1 ← (byte) line::yd#3 [ line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ]
  [91] (byte~) line_xdyd::yd#8 ← (byte) line_xdyd::yd#1 [ line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#8 ]
  [92] (byte~) line_xdyd::x#9 ← (byte) line_xdyd::x#1 [ line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#8 line_xdyd::x#9 ]
  [93] (byte~) line_xdyd::y#9 ← (byte) line_xdyd::y#1 [ line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#8 line_xdyd::x#9 line_xdyd::y#9 ]
  [94] (byte~) line_xdyd::xd#8 ← (byte) line_xdyd::xd#1 [ line_xdyd::x1#1 line_xdyd::yd#8 line_xdyd::x#9 line_xdyd::y#9 line_xdyd::xd#8 ]
  [95] (byte~) line_xdyd::x1#8 ← (byte) line_xdyd::x1#1 [ line_xdyd::yd#8 line_xdyd::x#9 line_xdyd::y#9 line_xdyd::xd#8 line_xdyd::x1#8 ]
  [96] call line_xdyd param-assignment [ ]
  to:line::@return
line::@10: scope:[line]  from line::@23
  [97] (byte) line_ydxd::y#1 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ]
  [98] (byte) line_ydxd::x#1 ← (byte) line::x0#0 [ line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ]
  [99] (byte) line_ydxd::y1#1 ← (byte) line::y1#0 [ line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ]
  [100] (byte) line_ydxd::yd#1 ← (byte) line::yd#3 [ line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ]
  [101] (byte) line_ydxd::xd#1 ← (byte) line::xd#0 [ line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ]
  [102] (byte~) line_ydxd::xd#7 ← (byte) line_ydxd::xd#1 [ line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#7 ]
  [103] (byte~) line_ydxd::x#8 ← (byte) line_ydxd::x#1 [ line_ydxd::y#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#7 line_ydxd::x#8 ]
  [104] (byte~) line_ydxd::y#8 ← (byte) line_ydxd::y#1 [ line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#7 line_ydxd::x#8 line_ydxd::y#8 ]
  [105] (byte~) line_ydxd::yd#7 ← (byte) line_ydxd::yd#1 [ line_ydxd::y1#1 line_ydxd::xd#7 line_ydxd::x#8 line_ydxd::y#8 line_ydxd::yd#7 ]
  [106] (byte~) line_ydxd::y1#7 ← (byte) line_ydxd::y1#1 [ line_ydxd::xd#7 line_ydxd::x#8 line_ydxd::y#8 line_ydxd::yd#7 line_ydxd::y1#7 ]
  [107] call line_ydxd param-assignment [ ]
  to:line::@return
line::@9: scope:[line]  from line::@1
  [108] (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ]
  [109] if((byte) line::yd#10>=(byte) line::xd#0) goto line::@13 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ]
  to:line::@27
line::@27: scope:[line]  from line::@9
  [110] (byte) line_xdyi::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ]
  [111] (byte) line_xdyi::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ]
  [112] (byte) line_xdyi::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ]
  [113] (byte) line_xdyi::xd#1 ← (byte) line::xd#0 [ line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ]
  [114] (byte) line_xdyi::yd#1 ← (byte) line::yd#10 [ line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ]
  [115] (byte~) line_xdyi::yd#8 ← (byte) line_xdyi::yd#1 [ line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#8 ]
  [116] (byte~) line_xdyi::x#9 ← (byte) line_xdyi::x#1 [ line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#8 line_xdyi::x#9 ]
  [117] (byte~) line_xdyi::y#9 ← (byte) line_xdyi::y#1 [ line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#8 line_xdyi::x#9 line_xdyi::y#9 ]
  [118] (byte~) line_xdyi::xd#8 ← (byte) line_xdyi::xd#1 [ line_xdyi::x1#1 line_xdyi::yd#8 line_xdyi::x#9 line_xdyi::y#9 line_xdyi::xd#8 ]
  [119] (byte~) line_xdyi::x1#8 ← (byte) line_xdyi::x1#1 [ line_xdyi::yd#8 line_xdyi::x#9 line_xdyi::y#9 line_xdyi::xd#8 line_xdyi::x1#8 ]
  [120] call line_xdyi param-assignment [ ]
  to:line::@return
line::@13: scope:[line]  from line::@9
  [121] (byte) line_ydxi::y#1 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ]
  [122] (byte) line_ydxi::x#1 ← (byte) line::x1#0 [ line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ]
  [123] (byte) line_ydxi::y1#1 ← (byte) line::y0#0 [ line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ]
  [124] (byte) line_ydxi::yd#1 ← (byte) line::yd#10 [ line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ]
  [125] (byte) line_ydxi::xd#1 ← (byte) line::xd#0 [ line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ]
  [126] (byte~) line_ydxi::xd#7 ← (byte) line_ydxi::xd#1 [ line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#7 ]
  [127] (byte~) line_ydxi::x#8 ← (byte) line_ydxi::x#1 [ line_ydxi::y#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#7 line_ydxi::x#8 ]
  [128] (byte~) line_ydxi::y#8 ← (byte) line_ydxi::y#1 [ line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#7 line_ydxi::x#8 line_ydxi::y#8 ]
  [129] (byte~) line_ydxi::yd#7 ← (byte) line_ydxi::yd#1 [ line_ydxi::y1#1 line_ydxi::xd#7 line_ydxi::x#8 line_ydxi::y#8 line_ydxi::yd#7 ]
  [130] (byte~) line_ydxi::y1#7 ← (byte) line_ydxi::y1#1 [ line_ydxi::xd#7 line_ydxi::x#8 line_ydxi::y#8 line_ydxi::yd#7 line_ydxi::y1#7 ]
  [131] call line_ydxi param-assignment [ ]
  to:line::@return
line_ydxi: scope:[line_ydxi]  from line::@13 line::@3
  [132] (byte) line_ydxi::y1#6 ← phi( line::@13/(byte~) line_ydxi::y1#7 line::@3/(byte~) line_ydxi::y1#8 ) [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 ]
  [132] (byte) line_ydxi::yd#5 ← phi( line::@13/(byte~) line_ydxi::yd#7 line::@3/(byte~) line_ydxi::yd#8 ) [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 ]
  [132] (byte) line_ydxi::y#6 ← phi( line::@13/(byte~) line_ydxi::y#8 line::@3/(byte~) line_ydxi::y#9 ) [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 ]
  [132] (byte) line_ydxi::x#5 ← phi( line::@13/(byte~) line_ydxi::x#8 line::@3/(byte~) line_ydxi::x#9 ) [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 ]
  [132] (byte) line_ydxi::xd#2 ← phi( line::@13/(byte~) line_ydxi::xd#7 line::@3/(byte~) line_ydxi::xd#8 ) [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 ]
  [133] (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ]
  [134] (byte~) line_ydxi::x#10 ← (byte) line_ydxi::x#5 [ line_ydxi::xd#2 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 line_ydxi::x#10 ]
  [135] (byte~) line_ydxi::y#10 ← (byte) line_ydxi::y#6 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 line_ydxi::x#10 line_ydxi::y#10 ]
  [136] (byte~) line_ydxi::e#7 ← (byte) line_ydxi::e#0 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#10 line_ydxi::y#10 line_ydxi::e#7 ]
  to:line_ydxi::@1
line_ydxi::@1: scope:[line_ydxi]  from line_ydxi line_ydxi::@6
  [137] (byte) line_ydxi::e#3 ← phi( line_ydxi/(byte~) line_ydxi::e#7 line_ydxi::@6/(byte~) line_ydxi::e#8 ) [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ]
  [137] (byte) line_ydxi::y#3 ← phi( line_ydxi/(byte~) line_ydxi::y#10 line_ydxi::@6/(byte~) line_ydxi::y#11 ) [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ]
  [137] (byte) line_ydxi::x#3 ← phi( line_ydxi/(byte~) line_ydxi::x#10 line_ydxi::@6/(byte~) line_ydxi::x#11 ) [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ]
  [138] (byte) plot::x#2 ← (byte) line_ydxi::x#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ]
  [139] (byte) plot::y#2 ← (byte) line_ydxi::y#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ]
  [140] (byte~) plot::x#8 ← (byte) plot::x#2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::y#2 plot::x#8 ]
  [141] (byte~) plot::y#8 ← (byte) plot::y#2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#8 plot::y#8 ]
  [142] call plot param-assignment [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ]
  to:line_ydxi::@5
line_ydxi::@5: scope:[line_ydxi]  from line_ydxi::@1
  [143] (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ]
  [144] (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ]
  [145] if((byte) line_ydxi::yd#5>=(byte) line_ydxi::e#1) goto line_ydxi::@7 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ]
  to:line_ydxi::@3
line_ydxi::@3: scope:[line_ydxi]  from line_ydxi::@5
  [146] (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ]
  [147] (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ]
  [148] (byte~) line_ydxi::x#12 ← (byte) line_ydxi::x#2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#2 line_ydxi::x#12 ]
  [149] (byte~) line_ydxi::e#9 ← (byte) line_ydxi::e#2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#12 line_ydxi::e#9 ]
  to:line_ydxi::@2
line_ydxi::@2: scope:[line_ydxi]  from line_ydxi::@3 line_ydxi::@7
  [150] (byte) line_ydxi::e#6 ← phi( line_ydxi::@3/(byte~) line_ydxi::e#9 line_ydxi::@7/(byte~) line_ydxi::e#10 ) [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#6 line_ydxi::e#6 ]
  [150] (byte) line_ydxi::x#6 ← phi( line_ydxi::@3/(byte~) line_ydxi::x#12 line_ydxi::@7/(byte~) line_ydxi::x#13 ) [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#6 line_ydxi::e#6 ]
  [151] (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#6 line_ydxi::e#6 line_ydxi::$8 ]
  [152] if((byte) line_ydxi::y#2<(byte~) line_ydxi::$8) goto line_ydxi::@6 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#6 line_ydxi::e#6 ]
  to:line_ydxi::@return
line_ydxi::@return: scope:[line_ydxi]  from line_ydxi::@2
  [153] return  [ ]
  to:@return
line_ydxi::@6: scope:[line_ydxi]  from line_ydxi::@2
  [154] (byte~) line_ydxi::x#11 ← (byte) line_ydxi::x#6 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#11 line_ydxi::y#2 line_ydxi::e#6 ]
  [155] (byte~) line_ydxi::y#11 ← (byte) line_ydxi::y#2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#11 line_ydxi::y#11 line_ydxi::e#6 ]
  [156] (byte~) line_ydxi::e#8 ← (byte) line_ydxi::e#6 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#11 line_ydxi::y#11 line_ydxi::e#8 ]
  to:line_ydxi::@1
line_ydxi::@7: scope:[line_ydxi]  from line_ydxi::@5
  [157] (byte~) line_ydxi::x#13 ← (byte) line_ydxi::x#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#13 ]
  [158] (byte~) line_ydxi::e#10 ← (byte) line_ydxi::e#1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#13 line_ydxi::e#10 ]
  to:line_ydxi::@2
plot: scope:[plot]  from line_xdyd::@1 line_xdyi::@1 line_ydxd::@1 line_ydxi::@1
  [159] (byte) plot::y#4 ← phi( line_xdyd::@1/(byte~) plot::y#5 line_xdyi::@1/(byte~) plot::y#6 line_ydxd::@1/(byte~) plot::y#7 line_ydxi::@1/(byte~) plot::y#8 ) [ plot::x#4 plot::y#4 ]
  [159] (byte) plot::x#4 ← phi( line_xdyd::@1/(byte~) plot::x#5 line_xdyi::@1/(byte~) plot::x#6 line_ydxd::@1/(byte~) plot::x#7 line_ydxi::@1/(byte~) plot::x#8 ) [ plot::x#4 plot::y#4 ]
  [160] (byte~) plot::$0 ← (const byte[]) plot_xhi#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::$0 ]
  [161] (byte*) plot::plotter_x#1 ← ((byte*))(byte/signed byte/word/signed word) 0 hi= (byte~) plot::$0 [ plot::x#4 plot::y#4 plot::plotter_x#1 ]
  [162] (byte~) plot::$1 ← (const byte[]) plot_xlo#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ]
  [163] (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1 [ plot::x#4 plot::y#4 plot::plotter_x#2 ]
  [164] (byte~) plot::$2 ← (const byte[]) plot_yhi#0 *idx (byte) plot::y#4 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ]
  [165] (word) plot::plotter_y#1 ← (byte/signed byte/word/signed word) 0 hi= (byte~) plot::$2 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ]
  [166] (byte~) plot::$3 ← (const byte[]) plot_ylo#0 *idx (byte) plot::y#4 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ]
  [167] (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ]
  [168] (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2 [ plot::x#4 plot::plotter#0 ]
  [169] (byte~) plot::$5 ← (const byte[]) plot_bit#0 *idx (byte) plot::x#4 [ plot::plotter#0 plot::$5 ]
  [170] (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5 [ plot::plotter#0 plot::$6 ]
  [171] *((byte*) plot::plotter#0) ← (byte~) plot::$6 [ ]
  to:plot::@return
plot::@return: scope:[plot]  from plot
  [172] return  [ ]
  to:@return
line_xdyi: scope:[line_xdyi]  from line::@17 line::@27
  [173] (byte) line_xdyi::x1#6 ← phi( line::@17/(byte~) line_xdyi::x1#7 line::@27/(byte~) line_xdyi::x1#8 ) [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 ]
  [173] (byte) line_xdyi::xd#5 ← phi( line::@17/(byte~) line_xdyi::xd#7 line::@27/(byte~) line_xdyi::xd#8 ) [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 ]
  [173] (byte) line_xdyi::y#5 ← phi( line::@17/(byte~) line_xdyi::y#8 line::@27/(byte~) line_xdyi::y#9 ) [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 ]
  [173] (byte) line_xdyi::x#6 ← phi( line::@17/(byte~) line_xdyi::x#8 line::@27/(byte~) line_xdyi::x#9 ) [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 ]
  [173] (byte) line_xdyi::yd#2 ← phi( line::@17/(byte~) line_xdyi::yd#7 line::@27/(byte~) line_xdyi::yd#8 ) [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 ]
  [174] (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ]
  [175] (byte~) line_xdyi::x#10 ← (byte) line_xdyi::x#6 [ line_xdyi::yd#2 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 line_xdyi::x#10 ]
  [176] (byte~) line_xdyi::y#10 ← (byte) line_xdyi::y#5 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 line_xdyi::x#10 line_xdyi::y#10 ]
  [177] (byte~) line_xdyi::e#7 ← (byte) line_xdyi::e#0 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#10 line_xdyi::y#10 line_xdyi::e#7 ]
  to:line_xdyi::@1
line_xdyi::@1: scope:[line_xdyi]  from line_xdyi line_xdyi::@6
  [178] (byte) line_xdyi::e#3 ← phi( line_xdyi/(byte~) line_xdyi::e#7 line_xdyi::@6/(byte~) line_xdyi::e#8 ) [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ]
  [178] (byte) line_xdyi::y#3 ← phi( line_xdyi/(byte~) line_xdyi::y#10 line_xdyi::@6/(byte~) line_xdyi::y#11 ) [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ]
  [178] (byte) line_xdyi::x#3 ← phi( line_xdyi/(byte~) line_xdyi::x#10 line_xdyi::@6/(byte~) line_xdyi::x#11 ) [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ]
  [179] (byte) plot::x#0 ← (byte) line_xdyi::x#3 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#0 ]
  [180] (byte) plot::y#0 ← (byte) line_xdyi::y#3 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#0 plot::y#0 ]
  [181] (byte~) plot::x#6 ← (byte) plot::x#0 [ plot::x#6 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::y#0 ]
  [182] (byte~) plot::y#6 ← (byte) plot::y#0 [ plot::x#6 plot::y#6 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ]
  [183] call plot param-assignment [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ]
  to:line_xdyi::@5
line_xdyi::@5: scope:[line_xdyi]  from line_xdyi::@1
  [184] (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ]
  [185] (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ]
  [186] if((byte) line_xdyi::xd#5>=(byte) line_xdyi::e#1) goto line_xdyi::@7 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ]
  to:line_xdyi::@3
line_xdyi::@3: scope:[line_xdyi]  from line_xdyi::@5
  [187] (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ]
  [188] (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ]
  [189] (byte~) line_xdyi::y#12 ← (byte) line_xdyi::y#2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#2 line_xdyi::y#12 ]
  [190] (byte~) line_xdyi::e#9 ← (byte) line_xdyi::e#2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#12 line_xdyi::e#9 ]
  to:line_xdyi::@2
line_xdyi::@2: scope:[line_xdyi]  from line_xdyi::@3 line_xdyi::@7
  [191] (byte) line_xdyi::e#6 ← phi( line_xdyi::@3/(byte~) line_xdyi::e#9 line_xdyi::@7/(byte~) line_xdyi::e#10 ) [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ]
  [191] (byte) line_xdyi::y#6 ← phi( line_xdyi::@3/(byte~) line_xdyi::y#12 line_xdyi::@7/(byte~) line_xdyi::y#13 ) [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ]
  [192] (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ]
  [193] if((byte) line_xdyi::x#2<(byte~) line_xdyi::$8) goto line_xdyi::@6 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ]
  to:line_xdyi::@return
line_xdyi::@return: scope:[line_xdyi]  from line_xdyi::@2
  [194] return  [ ]
  to:@return
line_xdyi::@6: scope:[line_xdyi]  from line_xdyi::@2
  [195] (byte~) line_xdyi::x#11 ← (byte) line_xdyi::x#2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#11 line_xdyi::y#6 line_xdyi::e#6 ]
  [196] (byte~) line_xdyi::y#11 ← (byte) line_xdyi::y#6 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#11 line_xdyi::y#11 line_xdyi::e#6 ]
  [197] (byte~) line_xdyi::e#8 ← (byte) line_xdyi::e#6 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#11 line_xdyi::y#11 line_xdyi::e#8 ]
  to:line_xdyi::@1
line_xdyi::@7: scope:[line_xdyi]  from line_xdyi::@5
  [198] (byte~) line_xdyi::y#13 ← (byte) line_xdyi::y#3 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#13 ]
  [199] (byte~) line_xdyi::e#10 ← (byte) line_xdyi::e#1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#13 line_xdyi::e#10 ]
  to:line_xdyi::@2
line_ydxd: scope:[line_ydxd]  from line::@10 line::@6
  [200] (byte) line_ydxd::y1#6 ← phi( line::@10/(byte~) line_ydxd::y1#7 line::@6/(byte~) line_ydxd::y1#8 ) [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 ]
  [200] (byte) line_ydxd::yd#5 ← phi( line::@10/(byte~) line_ydxd::yd#7 line::@6/(byte~) line_ydxd::yd#8 ) [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 ]
  [200] (byte) line_ydxd::y#6 ← phi( line::@10/(byte~) line_ydxd::y#8 line::@6/(byte~) line_ydxd::y#9 ) [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 ]
  [200] (byte) line_ydxd::x#5 ← phi( line::@10/(byte~) line_ydxd::x#8 line::@6/(byte~) line_ydxd::x#9 ) [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 ]
  [200] (byte) line_ydxd::xd#2 ← phi( line::@10/(byte~) line_ydxd::xd#7 line::@6/(byte~) line_ydxd::xd#8 ) [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 ]
  [201] (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ]
  [202] (byte~) line_ydxd::x#10 ← (byte) line_ydxd::x#5 [ line_ydxd::xd#2 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 line_ydxd::x#10 ]
  [203] (byte~) line_ydxd::y#10 ← (byte) line_ydxd::y#6 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 line_ydxd::x#10 line_ydxd::y#10 ]
  [204] (byte~) line_ydxd::e#7 ← (byte) line_ydxd::e#0 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#10 line_ydxd::y#10 line_ydxd::e#7 ]
  to:line_ydxd::@1
line_ydxd::@1: scope:[line_ydxd]  from line_ydxd line_ydxd::@6
  [205] (byte) line_ydxd::e#3 ← phi( line_ydxd/(byte~) line_ydxd::e#7 line_ydxd::@6/(byte~) line_ydxd::e#8 ) [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ]
  [205] (byte) line_ydxd::y#3 ← phi( line_ydxd/(byte~) line_ydxd::y#10 line_ydxd::@6/(byte~) line_ydxd::y#11 ) [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ]
  [205] (byte) line_ydxd::x#3 ← phi( line_ydxd/(byte~) line_ydxd::x#10 line_ydxd::@6/(byte~) line_ydxd::x#11 ) [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ]
  [206] (byte) plot::x#3 ← (byte) line_ydxd::x#3 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#3 ]
  [207] (byte) plot::y#3 ← (byte) line_ydxd::y#3 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#3 plot::y#3 ]
  [208] (byte~) plot::x#7 ← (byte) plot::x#3 [ plot::x#7 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::y#3 ]
  [209] (byte~) plot::y#7 ← (byte) plot::y#3 [ plot::x#7 plot::y#7 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ]
  [210] call plot param-assignment [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ]
  to:line_ydxd::@5
line_ydxd::@5: scope:[line_ydxd]  from line_ydxd::@1
  [211] (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ]
  [212] (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ]
  [213] if((byte) line_ydxd::yd#5>=(byte) line_ydxd::e#1) goto line_ydxd::@7 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ]
  to:line_ydxd::@3
line_ydxd::@3: scope:[line_ydxd]  from line_ydxd::@5
  [214] (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ]
  [215] (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ]
  [216] (byte~) line_ydxd::x#12 ← (byte) line_ydxd::x#2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#2 line_ydxd::x#12 ]
  [217] (byte~) line_ydxd::e#9 ← (byte) line_ydxd::e#2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#12 line_ydxd::e#9 ]
  to:line_ydxd::@2
line_ydxd::@2: scope:[line_ydxd]  from line_ydxd::@3 line_ydxd::@7
  [218] (byte) line_ydxd::e#6 ← phi( line_ydxd::@3/(byte~) line_ydxd::e#9 line_ydxd::@7/(byte~) line_ydxd::e#10 ) [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#6 line_ydxd::e#6 ]
  [218] (byte) line_ydxd::x#6 ← phi( line_ydxd::@3/(byte~) line_ydxd::x#12 line_ydxd::@7/(byte~) line_ydxd::x#13 ) [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#6 line_ydxd::e#6 ]
  [219] (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#6 line_ydxd::e#6 line_ydxd::$8 ]
  [220] if((byte) line_ydxd::y#2<(byte~) line_ydxd::$8) goto line_ydxd::@6 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#6 line_ydxd::e#6 ]
  to:line_ydxd::@return
line_ydxd::@return: scope:[line_ydxd]  from line_ydxd::@2
  [221] return  [ ]
  to:@return
line_ydxd::@6: scope:[line_ydxd]  from line_ydxd::@2
  [222] (byte~) line_ydxd::x#11 ← (byte) line_ydxd::x#6 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#11 line_ydxd::y#2 line_ydxd::e#6 ]
  [223] (byte~) line_ydxd::y#11 ← (byte) line_ydxd::y#2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#11 line_ydxd::y#11 line_ydxd::e#6 ]
  [224] (byte~) line_ydxd::e#8 ← (byte) line_ydxd::e#6 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#11 line_ydxd::y#11 line_ydxd::e#8 ]
  to:line_ydxd::@1
line_ydxd::@7: scope:[line_ydxd]  from line_ydxd::@5
  [225] (byte~) line_ydxd::x#13 ← (byte) line_ydxd::x#3 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#13 ]
  [226] (byte~) line_ydxd::e#10 ← (byte) line_ydxd::e#1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#13 line_ydxd::e#10 ]
  to:line_ydxd::@2
line_xdyd: scope:[line_xdyd]  from line::@20 line::@24
  [227] (byte) line_xdyd::x1#6 ← phi( line::@20/(byte~) line_xdyd::x1#7 line::@24/(byte~) line_xdyd::x1#8 ) [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 ]
  [227] (byte) line_xdyd::xd#5 ← phi( line::@20/(byte~) line_xdyd::xd#7 line::@24/(byte~) line_xdyd::xd#8 ) [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 ]
  [227] (byte) line_xdyd::y#5 ← phi( line::@20/(byte~) line_xdyd::y#8 line::@24/(byte~) line_xdyd::y#9 ) [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 ]
  [227] (byte) line_xdyd::x#6 ← phi( line::@20/(byte~) line_xdyd::x#8 line::@24/(byte~) line_xdyd::x#9 ) [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 ]
  [227] (byte) line_xdyd::yd#2 ← phi( line::@20/(byte~) line_xdyd::yd#7 line::@24/(byte~) line_xdyd::yd#8 ) [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 ]
  [228] (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ]
  [229] (byte~) line_xdyd::x#10 ← (byte) line_xdyd::x#6 [ line_xdyd::yd#2 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 line_xdyd::x#10 ]
  [230] (byte~) line_xdyd::y#10 ← (byte) line_xdyd::y#5 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 line_xdyd::x#10 line_xdyd::y#10 ]
  [231] (byte~) line_xdyd::e#7 ← (byte) line_xdyd::e#0 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#10 line_xdyd::y#10 line_xdyd::e#7 ]
  to:line_xdyd::@1
line_xdyd::@1: scope:[line_xdyd]  from line_xdyd line_xdyd::@6
  [232] (byte) line_xdyd::e#3 ← phi( line_xdyd/(byte~) line_xdyd::e#7 line_xdyd::@6/(byte~) line_xdyd::e#8 ) [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ]
  [232] (byte) line_xdyd::y#3 ← phi( line_xdyd/(byte~) line_xdyd::y#10 line_xdyd::@6/(byte~) line_xdyd::y#11 ) [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ]
  [232] (byte) line_xdyd::x#3 ← phi( line_xdyd/(byte~) line_xdyd::x#10 line_xdyd::@6/(byte~) line_xdyd::x#11 ) [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ]
  [233] (byte) plot::x#1 ← (byte) line_xdyd::x#3 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#1 ]
  [234] (byte) plot::y#1 ← (byte) line_xdyd::y#3 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#1 plot::y#1 ]
  [235] (byte~) plot::x#5 ← (byte) plot::x#1 [ plot::x#5 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::y#1 ]
  [236] (byte~) plot::y#5 ← (byte) plot::y#1 [ plot::x#5 plot::y#5 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ]
  [237] call plot param-assignment [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ]
  to:line_xdyd::@5
line_xdyd::@5: scope:[line_xdyd]  from line_xdyd::@1
  [238] (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ]
  [239] (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ]
  [240] if((byte) line_xdyd::xd#5>=(byte) line_xdyd::e#1) goto line_xdyd::@7 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ]
  to:line_xdyd::@3
line_xdyd::@3: scope:[line_xdyd]  from line_xdyd::@5
  [241] (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ]
  [242] (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ]
  [243] (byte~) line_xdyd::y#12 ← (byte) line_xdyd::y#2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#2 line_xdyd::y#12 ]
  [244] (byte~) line_xdyd::e#9 ← (byte) line_xdyd::e#2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#12 line_xdyd::e#9 ]
  to:line_xdyd::@2
line_xdyd::@2: scope:[line_xdyd]  from line_xdyd::@3 line_xdyd::@7
  [245] (byte) line_xdyd::e#6 ← phi( line_xdyd::@3/(byte~) line_xdyd::e#9 line_xdyd::@7/(byte~) line_xdyd::e#10 ) [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ]
  [245] (byte) line_xdyd::y#6 ← phi( line_xdyd::@3/(byte~) line_xdyd::y#12 line_xdyd::@7/(byte~) line_xdyd::y#13 ) [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ]
  [246] (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ]
  [247] if((byte) line_xdyd::x#2<(byte~) line_xdyd::$8) goto line_xdyd::@6 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ]
  to:line_xdyd::@return
line_xdyd::@return: scope:[line_xdyd]  from line_xdyd::@2
  [248] return  [ ]
  to:@return
line_xdyd::@6: scope:[line_xdyd]  from line_xdyd::@2
  [249] (byte~) line_xdyd::x#11 ← (byte) line_xdyd::x#2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#11 line_xdyd::y#6 line_xdyd::e#6 ]
  [250] (byte~) line_xdyd::y#11 ← (byte) line_xdyd::y#6 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#11 line_xdyd::y#11 line_xdyd::e#6 ]
  [251] (byte~) line_xdyd::e#8 ← (byte) line_xdyd::e#6 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#11 line_xdyd::y#11 line_xdyd::e#8 ]
  to:line_xdyd::@1
line_xdyd::@7: scope:[line_xdyd]  from line_xdyd::@5
  [252] (byte~) line_xdyd::y#13 ← (byte) line_xdyd::y#3 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#13 ]
  [253] (byte~) line_xdyd::e#10 ← (byte) line_xdyd::e#1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#13 line_xdyd::e#10 ]
  to:line_xdyd::@2
init_plot_tables: scope:[init_plot_tables]  from main::@3
  [254] phi() [ ]
  to:init_plot_tables::@1
init_plot_tables::@1: scope:[init_plot_tables]  from init_plot_tables init_plot_tables::@9
  [255] (byte) init_plot_tables::bits#3 ← phi( init_plot_tables/(byte/word/signed word) 128 init_plot_tables::@9/(byte~) init_plot_tables::bits#5 ) [ init_plot_tables::x#2 init_plot_tables::bits#3 ]
  [255] (byte) init_plot_tables::x#2 ← phi( init_plot_tables/(byte/signed byte/word/signed word) 0 init_plot_tables::@9/(byte~) init_plot_tables::x#5 ) [ init_plot_tables::x#2 init_plot_tables::bits#3 ]
  [256] (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ]
  [257] *((const byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ]
  [258] *((const byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← >(const byte*) BITMAP#0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ]
  [259] *((const byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3 [ init_plot_tables::x#2 init_plot_tables::bits#3 ]
  [260] (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1 [ init_plot_tables::x#2 init_plot_tables::bits#1 ]
  [261] if((byte) init_plot_tables::bits#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ]
  to:init_plot_tables::@5
init_plot_tables::@5: scope:[init_plot_tables]  from init_plot_tables::@1
  [262] phi() [ init_plot_tables::x#2 ]
  to:init_plot_tables::@2
init_plot_tables::@2: scope:[init_plot_tables]  from init_plot_tables::@10 init_plot_tables::@5
  [263] (byte) init_plot_tables::bits#4 ← phi( init_plot_tables::@10/(byte~) init_plot_tables::bits#6 init_plot_tables::@5/(byte/word/signed word) 128 ) [ init_plot_tables::x#2 init_plot_tables::bits#4 ]
  [264] (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2 [ init_plot_tables::bits#4 init_plot_tables::x#1 ]
  [265] if((byte) init_plot_tables::x#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@9 [ init_plot_tables::bits#4 init_plot_tables::x#1 ]
  to:init_plot_tables::@3
init_plot_tables::@3: scope:[init_plot_tables]  from init_plot_tables::@11 init_plot_tables::@2
  [266] (byte*) init_plot_tables::yoffs#2 ← phi( init_plot_tables::@11/(byte*~) init_plot_tables::yoffs#5 init_plot_tables::@2/((byte*))(byte/signed byte/word/signed word) 0 ) [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ]
  [266] (byte) init_plot_tables::y#2 ← phi( init_plot_tables::@11/(byte~) init_plot_tables::y#5 init_plot_tables::@2/(byte/signed byte/word/signed word) 0 ) [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ]
  [267] (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ]
  [268] (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ]
  [269] (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ]
  [270] *((const byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ]
  [271] (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ]
  [272] *((const byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ]
  [273] (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ]
  [274] if((byte~) init_plot_tables::$10!=(byte/signed byte/word/signed word) 7) goto init_plot_tables::@12 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ]
  to:init_plot_tables::@7
init_plot_tables::@7: scope:[init_plot_tables]  from init_plot_tables::@3
  [275] (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ]
  [276] (byte*~) init_plot_tables::yoffs#7 ← (byte*) init_plot_tables::yoffs#1 [ init_plot_tables::y#2 init_plot_tables::yoffs#7 ]
  to:init_plot_tables::@4
init_plot_tables::@4: scope:[init_plot_tables]  from init_plot_tables::@12 init_plot_tables::@7
  [277] (byte*) init_plot_tables::yoffs#4 ← phi( init_plot_tables::@12/(byte*~) init_plot_tables::yoffs#6 init_plot_tables::@7/(byte*~) init_plot_tables::yoffs#7 ) [ init_plot_tables::y#2 init_plot_tables::yoffs#4 ]
  [278] (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2 [ init_plot_tables::yoffs#4 init_plot_tables::y#1 ]
  [279] if((byte) init_plot_tables::y#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@11 [ init_plot_tables::yoffs#4 init_plot_tables::y#1 ]
  to:init_plot_tables::@return
init_plot_tables::@return: scope:[init_plot_tables]  from init_plot_tables::@4
  [280] return  [ ]
  to:@return
init_plot_tables::@11: scope:[init_plot_tables]  from init_plot_tables::@4
  [281] (byte~) init_plot_tables::y#5 ← (byte) init_plot_tables::y#1 [ init_plot_tables::y#5 init_plot_tables::yoffs#4 ]
  [282] (byte*~) init_plot_tables::yoffs#5 ← (byte*) init_plot_tables::yoffs#4 [ init_plot_tables::y#5 init_plot_tables::yoffs#5 ]
  to:init_plot_tables::@3
init_plot_tables::@12: scope:[init_plot_tables]  from init_plot_tables::@3
  [283] (byte*~) init_plot_tables::yoffs#6 ← (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#6 ]
  to:init_plot_tables::@4
init_plot_tables::@9: scope:[init_plot_tables]  from init_plot_tables::@2
  [284] (byte~) init_plot_tables::x#5 ← (byte) init_plot_tables::x#1 [ init_plot_tables::x#5 init_plot_tables::bits#4 ]
  [285] (byte~) init_plot_tables::bits#5 ← (byte) init_plot_tables::bits#4 [ init_plot_tables::x#5 init_plot_tables::bits#5 ]
  to:init_plot_tables::@1
init_plot_tables::@10: scope:[init_plot_tables]  from init_plot_tables::@1
  [286] (byte~) init_plot_tables::bits#6 ← (byte) init_plot_tables::bits#1 [ init_plot_tables::x#2 init_plot_tables::bits#6 ]
  to:init_plot_tables::@2
init_screen: scope:[init_screen]  from main
  [287] phi() [ ]
  to:init_screen::@1
init_screen::@1: scope:[init_screen]  from init_screen init_screen::@5
  [288] (byte*) init_screen::b#2 ← phi( init_screen/(const byte*) BITMAP#0 init_screen::@5/(byte*~) init_screen::b#3 ) [ init_screen::b#2 ]
  [289] *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0 [ init_screen::b#2 ]
  [290] (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2 [ init_screen::b#1 ]
  [291] if((byte*) init_screen::b#1!=(const byte*) BITMAP#0+(word/signed word) 8192) goto init_screen::@5 [ init_screen::b#1 ]
  to:init_screen::@2
init_screen::@2: scope:[init_screen]  from init_screen::@1 init_screen::@6
  [292] (byte*) init_screen::c#2 ← phi( init_screen::@6/(byte*~) init_screen::c#3 init_screen::@1/(const byte*) SCREEN#0 ) [ init_screen::c#2 ]
  [293] *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20 [ init_screen::c#2 ]
  [294] (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2 [ init_screen::c#1 ]
  [295] if((byte*) init_screen::c#1!=(const byte*) SCREEN#0+(word/signed word) 1024) goto init_screen::@6 [ init_screen::c#1 ]
  to:init_screen::@return
init_screen::@return: scope:[init_screen]  from init_screen::@2
  [296] return  [ ]
  to:@return
init_screen::@6: scope:[init_screen]  from init_screen::@2
  [297] (byte*~) init_screen::c#3 ← (byte*) init_screen::c#1 [ init_screen::c#3 ]
  to:init_screen::@2
init_screen::@5: scope:[init_screen]  from init_screen::@1
  [298] (byte*~) init_screen::b#3 ← (byte*) init_screen::b#1 [ init_screen::b#3 ]
  to:init_screen::@1

Created 51 initial phi equivalence classes
Coalesced [29] lines::l#4 ← lines::l#1
Coalesced [40] line_xdyi::yd#7 ← line_xdyi::yd#0
Coalesced [41] line_xdyi::x#8 ← line_xdyi::x#0
Coalesced [42] line_xdyi::y#8 ← line_xdyi::y#0
Coalesced [43] line_xdyi::xd#7 ← line_xdyi::xd#0
Coalesced [44] line_xdyi::x1#7 ← line_xdyi::x1#0
Coalesced [52] line_ydxi::xd#8 ← line_ydxi::xd#0
Coalesced [53] line_ydxi::x#9 ← line_ydxi::x#0
Coalesced [54] line_ydxi::y#9 ← line_ydxi::y#0
Coalesced [55] line_ydxi::yd#8 ← line_ydxi::yd#0
Coalesced [56] line_ydxi::y1#8 ← line_ydxi::y1#0
Coalesced [65] line_xdyd::yd#7 ← line_xdyd::yd#0
Coalesced [66] line_xdyd::x#8 ← line_xdyd::x#0
Coalesced [67] line_xdyd::y#8 ← line_xdyd::y#0
Coalesced [68] line_xdyd::xd#7 ← line_xdyd::xd#0
Coalesced [69] line_xdyd::x1#7 ← line_xdyd::x1#0
Coalesced [76] line_ydxd::xd#8 ← line_ydxd::xd#0
Coalesced [77] line_ydxd::x#9 ← line_ydxd::x#0
Coalesced [78] line_ydxd::y#9 ← line_ydxd::y#0
Coalesced [79] line_ydxd::yd#8 ← line_ydxd::yd#0
Coalesced [80] line_ydxd::y1#8 ← line_ydxd::y1#0
Coalesced [91] line_xdyd::yd#8 ← line_xdyd::yd#1
Coalesced [92] line_xdyd::x#9 ← line_xdyd::x#1
Coalesced [93] line_xdyd::y#9 ← line_xdyd::y#1
Coalesced [94] line_xdyd::xd#8 ← line_xdyd::xd#1
Coalesced [95] line_xdyd::x1#8 ← line_xdyd::x1#1
Coalesced [102] line_ydxd::xd#7 ← line_ydxd::xd#1
Coalesced [103] line_ydxd::x#8 ← line_ydxd::x#1
Coalesced [104] line_ydxd::y#8 ← line_ydxd::y#1
Coalesced [105] line_ydxd::yd#7 ← line_ydxd::yd#1
Coalesced [106] line_ydxd::y1#7 ← line_ydxd::y1#1
Coalesced [115] line_xdyi::yd#8 ← line_xdyi::yd#1
Coalesced [116] line_xdyi::x#9 ← line_xdyi::x#1
Coalesced [117] line_xdyi::y#9 ← line_xdyi::y#1
Coalesced [118] line_xdyi::xd#8 ← line_xdyi::xd#1
Coalesced [119] line_xdyi::x1#8 ← line_xdyi::x1#1
Coalesced [126] line_ydxi::xd#7 ← line_ydxi::xd#1
Coalesced [127] line_ydxi::x#8 ← line_ydxi::x#1
Coalesced [128] line_ydxi::y#8 ← line_ydxi::y#1
Coalesced [129] line_ydxi::yd#7 ← line_ydxi::yd#1
Coalesced [130] line_ydxi::y1#7 ← line_ydxi::y1#1
Coalesced [134] line_ydxi::x#10 ← line_ydxi::x#5
Coalesced [135] line_ydxi::y#10 ← line_ydxi::y#6
Coalesced [136] line_ydxi::e#7 ← line_ydxi::e#0
Coalesced [140] plot::x#8 ← plot::x#2
Coalesced [141] plot::y#8 ← plot::y#2
Coalesced [148] line_ydxi::x#12 ← line_ydxi::x#2
Coalesced [149] line_ydxi::e#9 ← line_ydxi::e#2
Coalesced [154] line_ydxi::x#11 ← line_ydxi::x#6
Coalesced [155] line_ydxi::y#11 ← line_ydxi::y#2
Coalesced [156] line_ydxi::e#8 ← line_ydxi::e#6
Coalesced (already) [157] line_ydxi::x#13 ← line_ydxi::x#3
Coalesced [158] line_ydxi::e#10 ← line_ydxi::e#1
Coalesced [175] line_xdyi::x#10 ← line_xdyi::x#6
Coalesced [176] line_xdyi::y#10 ← line_xdyi::y#5
Coalesced [177] line_xdyi::e#7 ← line_xdyi::e#0
Coalesced [181] plot::x#6 ← plot::x#0
Coalesced [182] plot::y#6 ← plot::y#0
Coalesced [189] line_xdyi::y#12 ← line_xdyi::y#2
Coalesced [190] line_xdyi::e#9 ← line_xdyi::e#2
Coalesced [195] line_xdyi::x#11 ← line_xdyi::x#2
Coalesced [196] line_xdyi::y#11 ← line_xdyi::y#6
Coalesced [197] line_xdyi::e#8 ← line_xdyi::e#6
Coalesced (already) [198] line_xdyi::y#13 ← line_xdyi::y#3
Coalesced [199] line_xdyi::e#10 ← line_xdyi::e#1
Coalesced [202] line_ydxd::x#10 ← line_ydxd::x#5
Coalesced [203] line_ydxd::y#10 ← line_ydxd::y#6
Coalesced [204] line_ydxd::e#7 ← line_ydxd::e#0
Coalesced [208] plot::x#7 ← plot::x#3
Coalesced [209] plot::y#7 ← plot::y#3
Coalesced [216] line_ydxd::x#12 ← line_ydxd::x#2
Coalesced [217] line_ydxd::e#9 ← line_ydxd::e#2
Coalesced [222] line_ydxd::x#11 ← line_ydxd::x#6
Coalesced [223] line_ydxd::y#11 ← line_ydxd::y#2
Coalesced [224] line_ydxd::e#8 ← line_ydxd::e#6
Coalesced (already) [225] line_ydxd::x#13 ← line_ydxd::x#3
Coalesced [226] line_ydxd::e#10 ← line_ydxd::e#1
Coalesced [229] line_xdyd::x#10 ← line_xdyd::x#6
Coalesced [230] line_xdyd::y#10 ← line_xdyd::y#5
Coalesced [231] line_xdyd::e#7 ← line_xdyd::e#0
Coalesced [235] plot::x#5 ← plot::x#1
Coalesced [236] plot::y#5 ← plot::y#1
Coalesced [243] line_xdyd::y#12 ← line_xdyd::y#2
Coalesced [244] line_xdyd::e#9 ← line_xdyd::e#2
Coalesced [249] line_xdyd::x#11 ← line_xdyd::x#2
Coalesced [250] line_xdyd::y#11 ← line_xdyd::y#6
Coalesced [251] line_xdyd::e#8 ← line_xdyd::e#6
Coalesced (already) [252] line_xdyd::y#13 ← line_xdyd::y#3
Coalesced [253] line_xdyd::e#10 ← line_xdyd::e#1
Coalesced [276] init_plot_tables::yoffs#7 ← init_plot_tables::yoffs#1
Coalesced [281] init_plot_tables::y#5 ← init_plot_tables::y#1
Coalesced [282] init_plot_tables::yoffs#5 ← init_plot_tables::yoffs#4
Coalesced (already) [283] init_plot_tables::yoffs#6 ← init_plot_tables::yoffs#2
Coalesced [284] init_plot_tables::x#5 ← init_plot_tables::x#1
Coalesced [285] init_plot_tables::bits#5 ← init_plot_tables::bits#4
Coalesced [286] init_plot_tables::bits#6 ← init_plot_tables::bits#1
Coalesced [297] init_screen::c#3 ← init_screen::c#1
Coalesced [298] init_screen::b#3 ← init_screen::b#1
Coalesced down to 33 phi equivalence classes
Culled Empty Block (label) lines::@4
Culled Empty Block (label) line_ydxi::@6
Culled Empty Block (label) line_ydxi::@7
Culled Empty Block (label) line_xdyi::@6
Culled Empty Block (label) line_xdyi::@7
Culled Empty Block (label) line_ydxd::@6
Culled Empty Block (label) line_ydxd::@7
Culled Empty Block (label) line_xdyd::@6
Culled Empty Block (label) line_xdyd::@7
Culled Empty Block (label) init_plot_tables::@5
Culled Empty Block (label) init_plot_tables::@11
Culled Empty Block (label) init_plot_tables::@12
Culled Empty Block (label) init_plot_tables::@9
Not culling empty block because it shares successor with its predecessor. (label) init_plot_tables::@10
Culled Empty Block (label) init_screen::@6
Culled Empty Block (label) init_screen::@5
Block Sequence Planned @begin @10 @end main main::@3 main::@1 main::@5 main::@return lines lines::@1 lines::@3 lines::@return line line::@15 line::@16 line::@17 line::@return line::@3 line::@2 line::@20 line::@6 line::@1 line::@23 line::@24 line::@10 line::@9 line::@27 line::@13 line_ydxi line_ydxi::@1 line_ydxi::@5 line_ydxi::@3 line_ydxi::@2 line_ydxi::@return plot plot::@return line_xdyi line_xdyi::@1 line_xdyi::@5 line_xdyi::@3 line_xdyi::@2 line_xdyi::@return line_ydxd line_ydxd::@1 line_ydxd::@5 line_ydxd::@3 line_ydxd::@2 line_ydxd::@return line_xdyd line_xdyd::@1 line_xdyd::@5 line_xdyd::@3 line_xdyd::@2 line_xdyd::@return init_plot_tables init_plot_tables::@1 init_plot_tables::@2 init_plot_tables::@3 init_plot_tables::@7 init_plot_tables::@4 init_plot_tables::@return init_plot_tables::@10 init_screen init_screen::@1 init_screen::@2 init_screen::@return 
Adding NOP phi() at start of @begin
Adding NOP phi() at start of @10
Adding NOP phi() at start of @end
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@1
Adding NOP phi() at start of lines
Adding NOP phi() at start of init_plot_tables
Adding NOP phi() at start of init_plot_tables::@10
Adding NOP phi() at start of init_screen
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
CONTROL FLOW GRAPH - BEFORE EFFECTIVE LIVE RANGES
@begin: scope:[]  from
  [0] phi() [ ]
  to:@10
@10: scope:[]  from @begin
  [1] phi() [ ]
  [2] call main param-assignment [ ]
  to:@end
@end: scope:[]  from @10
  [3] phi() [ ]
main: scope:[main]  from @10
  [4] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ]
  [5] *((const byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ]
  [6] *((const byte*) D011#0) ← (const byte) BMM#0|(const byte) DEN#0|(const byte) RSEL#0|(byte/signed byte/word/signed word) 3 [ ]
  [7] *((const byte*) D018#0) ← (byte/signed byte/word/signed word) 24 [ ]
  [8] call init_screen param-assignment [ ]
  to:main::@3
main::@3: scope:[main]  from main
  [9] phi() [ ]
  [10] call init_plot_tables param-assignment [ ]
  to:main::@1
main::@1: scope:[main]  from main::@3 main::@5
  [11] phi() [ ]
  [12] call lines param-assignment [ ]
  to:main::@5
main::@5: scope:[main]  from main::@1
  [13] if(true) goto main::@1 [ ]
  to:main::@return
main::@return: scope:[main]  from main::@5
  [14] return  [ ]
  to:@return
lines: scope:[lines]  from main::@1
  [15] phi() [ ]
  to:lines::@1
lines::@1: scope:[lines]  from lines lines::@3
  [16] (byte) lines::l#2 ← phi( lines/(byte/signed byte/word/signed word) 0 lines::@3/(byte) lines::l#1 ) [ lines::l#2 ]
  [17] (byte~) lines::$0 ← (const byte[]) lines_x#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 ]
  [18] (byte~) lines::$2 ← (const byte[]) lines_x#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 ]
  [19] (byte~) lines::$3 ← (const byte[]) lines_y#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 ]
  [20] (byte~) lines::$5 ← (const byte[]) lines_y#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ]
  [21] (byte) line::x0#0 ← (byte~) lines::$0 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ]
  [22] (byte) line::x1#0 ← (byte~) lines::$2 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ]
  [23] (byte) line::y0#0 ← (byte~) lines::$3 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ]
  [24] (byte) line::y1#0 ← (byte~) lines::$5 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ]
  [25] call line param-assignment [ lines::l#2 ]
  to:lines::@3
lines::@3: scope:[lines]  from lines::@1
  [26] (byte) lines::l#1 ← ++ (byte) lines::l#2 [ lines::l#1 ]
  [27] if((byte) lines::l#1<(const byte) lines_cnt#0) goto lines::@1 [ lines::l#1 ]
  to:lines::@return
lines::@return: scope:[lines]  from lines::@3
  [28] return  [ ]
  to:@return
line: scope:[line]  from lines::@1
  [29] if((byte) line::x0#0>=(byte) line::x1#0) goto line::@1 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 ]
  to:line::@15
line::@15: scope:[line]  from line
  [30] (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ]
  [31] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@2 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ]
  to:line::@16
line::@16: scope:[line]  from line::@15
  [32] (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ]
  [33] if((byte) line::yd#1>=(byte) line::xd#1) goto line::@3 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ]
  to:line::@17
line::@17: scope:[line]  from line::@16
  [34] (byte) line_xdyi::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ]
  [35] (byte) line_xdyi::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ]
  [36] (byte) line_xdyi::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ]
  [37] (byte) line_xdyi::xd#0 ← (byte) line::xd#1 [ line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ]
  [38] (byte) line_xdyi::yd#0 ← (byte) line::yd#1 [ line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ]
  [39] call line_xdyi param-assignment [ ]
  to:line::@return
line::@return: scope:[line]  from line::@10 line::@13 line::@17 line::@20 line::@24 line::@27 line::@3 line::@6
  [40] return  [ ]
  to:@return
line::@3: scope:[line]  from line::@16
  [41] (byte) line_ydxi::y#0 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ]
  [42] (byte) line_ydxi::x#0 ← (byte) line::x0#0 [ line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ]
  [43] (byte) line_ydxi::y1#0 ← (byte) line::y1#0 [ line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ]
  [44] (byte) line_ydxi::yd#0 ← (byte) line::yd#1 [ line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ]
  [45] (byte) line_ydxi::xd#0 ← (byte) line::xd#1 [ line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ]
  [46] call line_ydxi param-assignment [ ]
  to:line::@return
line::@2: scope:[line]  from line::@15
  [47] (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ]
  [48] if((byte) line::yd#0>=(byte) line::xd#1) goto line::@6 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ]
  to:line::@20
line::@20: scope:[line]  from line::@2
  [49] (byte) line_xdyd::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ]
  [50] (byte) line_xdyd::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ]
  [51] (byte) line_xdyd::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ]
  [52] (byte) line_xdyd::xd#0 ← (byte) line::xd#1 [ line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ]
  [53] (byte) line_xdyd::yd#0 ← (byte) line::yd#0 [ line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ]
  [54] call line_xdyd param-assignment [ ]
  to:line::@return
line::@6: scope:[line]  from line::@2
  [55] (byte) line_ydxd::y#0 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ]
  [56] (byte) line_ydxd::x#0 ← (byte) line::x1#0 [ line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ]
  [57] (byte) line_ydxd::y1#0 ← (byte) line::y0#0 [ line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ]
  [58] (byte) line_ydxd::yd#0 ← (byte) line::yd#0 [ line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ]
  [59] (byte) line_ydxd::xd#0 ← (byte) line::xd#1 [ line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ]
  [60] call line_ydxd param-assignment [ ]
  to:line::@return
line::@1: scope:[line]  from line
  [61] (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ]
  [62] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@9 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ]
  to:line::@23
line::@23: scope:[line]  from line::@1
  [63] (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ]
  [64] if((byte) line::yd#3>=(byte) line::xd#0) goto line::@10 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ]
  to:line::@24
line::@24: scope:[line]  from line::@23
  [65] (byte) line_xdyd::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ]
  [66] (byte) line_xdyd::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ]
  [67] (byte) line_xdyd::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ]
  [68] (byte) line_xdyd::xd#1 ← (byte) line::xd#0 [ line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ]
  [69] (byte) line_xdyd::yd#1 ← (byte) line::yd#3 [ line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ]
  [70] call line_xdyd param-assignment [ ]
  to:line::@return
line::@10: scope:[line]  from line::@23
  [71] (byte) line_ydxd::y#1 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ]
  [72] (byte) line_ydxd::x#1 ← (byte) line::x0#0 [ line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ]
  [73] (byte) line_ydxd::y1#1 ← (byte) line::y1#0 [ line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ]
  [74] (byte) line_ydxd::yd#1 ← (byte) line::yd#3 [ line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ]
  [75] (byte) line_ydxd::xd#1 ← (byte) line::xd#0 [ line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ]
  [76] call line_ydxd param-assignment [ ]
  to:line::@return
line::@9: scope:[line]  from line::@1
  [77] (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ]
  [78] if((byte) line::yd#10>=(byte) line::xd#0) goto line::@13 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ]
  to:line::@27
line::@27: scope:[line]  from line::@9
  [79] (byte) line_xdyi::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ]
  [80] (byte) line_xdyi::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ]
  [81] (byte) line_xdyi::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ]
  [82] (byte) line_xdyi::xd#1 ← (byte) line::xd#0 [ line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ]
  [83] (byte) line_xdyi::yd#1 ← (byte) line::yd#10 [ line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ]
  [84] call line_xdyi param-assignment [ ]
  to:line::@return
line::@13: scope:[line]  from line::@9
  [85] (byte) line_ydxi::y#1 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ]
  [86] (byte) line_ydxi::x#1 ← (byte) line::x1#0 [ line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ]
  [87] (byte) line_ydxi::y1#1 ← (byte) line::y0#0 [ line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ]
  [88] (byte) line_ydxi::yd#1 ← (byte) line::yd#10 [ line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ]
  [89] (byte) line_ydxi::xd#1 ← (byte) line::xd#0 [ line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ]
  [90] call line_ydxi param-assignment [ ]
  to:line::@return
line_ydxi: scope:[line_ydxi]  from line::@13 line::@3
  [91] (byte) line_ydxi::y1#6 ← phi( line::@13/(byte) line_ydxi::y1#1 line::@3/(byte) line_ydxi::y1#0 ) [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 ]
  [91] (byte) line_ydxi::yd#5 ← phi( line::@13/(byte) line_ydxi::yd#1 line::@3/(byte) line_ydxi::yd#0 ) [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 ]
  [91] (byte) line_ydxi::y#6 ← phi( line::@13/(byte) line_ydxi::y#1 line::@3/(byte) line_ydxi::y#0 ) [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 ]
  [91] (byte) line_ydxi::x#5 ← phi( line::@13/(byte) line_ydxi::x#1 line::@3/(byte) line_ydxi::x#0 ) [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 ]
  [91] (byte) line_ydxi::xd#2 ← phi( line::@13/(byte) line_ydxi::xd#1 line::@3/(byte) line_ydxi::xd#0 ) [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 ]
  [92] (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ]
  to:line_ydxi::@1
line_ydxi::@1: scope:[line_ydxi]  from line_ydxi line_ydxi::@2
  [93] (byte) line_ydxi::e#3 ← phi( line_ydxi/(byte) line_ydxi::e#0 line_ydxi::@2/(byte) line_ydxi::e#6 ) [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ]
  [93] (byte) line_ydxi::y#3 ← phi( line_ydxi/(byte) line_ydxi::y#6 line_ydxi::@2/(byte) line_ydxi::y#2 ) [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ]
  [93] (byte) line_ydxi::x#3 ← phi( line_ydxi/(byte) line_ydxi::x#5 line_ydxi::@2/(byte) line_ydxi::x#6 ) [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ]
  [94] (byte) plot::x#2 ← (byte) line_ydxi::x#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ]
  [95] (byte) plot::y#2 ← (byte) line_ydxi::y#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ]
  [96] call plot param-assignment [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ]
  to:line_ydxi::@5
line_ydxi::@5: scope:[line_ydxi]  from line_ydxi::@1
  [97] (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ]
  [98] (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ]
  [99] if((byte) line_ydxi::yd#5>=(byte) line_ydxi::e#1) goto line_ydxi::@2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ]
  to:line_ydxi::@3
line_ydxi::@3: scope:[line_ydxi]  from line_ydxi::@5
  [100] (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ]
  [101] (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ]
  to:line_ydxi::@2
line_ydxi::@2: scope:[line_ydxi]  from line_ydxi::@3 line_ydxi::@5
  [102] (byte) line_ydxi::e#6 ← phi( line_ydxi::@3/(byte) line_ydxi::e#2 line_ydxi::@5/(byte) line_ydxi::e#1 ) [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ]
  [102] (byte) line_ydxi::x#6 ← phi( line_ydxi::@3/(byte) line_ydxi::x#2 line_ydxi::@5/(byte) line_ydxi::x#3 ) [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ]
  [103] (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ]
  [104] if((byte) line_ydxi::y#2<(byte~) line_ydxi::$8) goto line_ydxi::@1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ]
  to:line_ydxi::@return
line_ydxi::@return: scope:[line_ydxi]  from line_ydxi::@2
  [105] return  [ ]
  to:@return
plot: scope:[plot]  from line_xdyd::@1 line_xdyi::@1 line_ydxd::@1 line_ydxi::@1
  [106] (byte) plot::y#4 ← phi( line_xdyd::@1/(byte) plot::y#1 line_xdyi::@1/(byte) plot::y#0 line_ydxd::@1/(byte) plot::y#3 line_ydxi::@1/(byte) plot::y#2 ) [ plot::x#4 plot::y#4 ]
  [106] (byte) plot::x#4 ← phi( line_xdyd::@1/(byte) plot::x#1 line_xdyi::@1/(byte) plot::x#0 line_ydxd::@1/(byte) plot::x#3 line_ydxi::@1/(byte) plot::x#2 ) [ plot::x#4 plot::y#4 ]
  [107] (byte~) plot::$0 ← (const byte[]) plot_xhi#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::$0 ]
  [108] (byte*) plot::plotter_x#1 ← ((byte*))(byte/signed byte/word/signed word) 0 hi= (byte~) plot::$0 [ plot::x#4 plot::y#4 plot::plotter_x#1 ]
  [109] (byte~) plot::$1 ← (const byte[]) plot_xlo#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ]
  [110] (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1 [ plot::x#4 plot::y#4 plot::plotter_x#2 ]
  [111] (byte~) plot::$2 ← (const byte[]) plot_yhi#0 *idx (byte) plot::y#4 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ]
  [112] (word) plot::plotter_y#1 ← (byte/signed byte/word/signed word) 0 hi= (byte~) plot::$2 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ]
  [113] (byte~) plot::$3 ← (const byte[]) plot_ylo#0 *idx (byte) plot::y#4 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ]
  [114] (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ]
  [115] (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2 [ plot::x#4 plot::plotter#0 ]
  [116] (byte~) plot::$5 ← (const byte[]) plot_bit#0 *idx (byte) plot::x#4 [ plot::plotter#0 plot::$5 ]
  [117] (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5 [ plot::plotter#0 plot::$6 ]
  [118] *((byte*) plot::plotter#0) ← (byte~) plot::$6 [ ]
  to:plot::@return
plot::@return: scope:[plot]  from plot
  [119] return  [ ]
  to:@return
line_xdyi: scope:[line_xdyi]  from line::@17 line::@27
  [120] (byte) line_xdyi::x1#6 ← phi( line::@17/(byte) line_xdyi::x1#0 line::@27/(byte) line_xdyi::x1#1 ) [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 ]
  [120] (byte) line_xdyi::xd#5 ← phi( line::@17/(byte) line_xdyi::xd#0 line::@27/(byte) line_xdyi::xd#1 ) [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 ]
  [120] (byte) line_xdyi::y#5 ← phi( line::@17/(byte) line_xdyi::y#0 line::@27/(byte) line_xdyi::y#1 ) [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 ]
  [120] (byte) line_xdyi::x#6 ← phi( line::@17/(byte) line_xdyi::x#0 line::@27/(byte) line_xdyi::x#1 ) [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 ]
  [120] (byte) line_xdyi::yd#2 ← phi( line::@17/(byte) line_xdyi::yd#0 line::@27/(byte) line_xdyi::yd#1 ) [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 ]
  [121] (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ]
  to:line_xdyi::@1
line_xdyi::@1: scope:[line_xdyi]  from line_xdyi line_xdyi::@2
  [122] (byte) line_xdyi::e#3 ← phi( line_xdyi/(byte) line_xdyi::e#0 line_xdyi::@2/(byte) line_xdyi::e#6 ) [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ]
  [122] (byte) line_xdyi::y#3 ← phi( line_xdyi/(byte) line_xdyi::y#5 line_xdyi::@2/(byte) line_xdyi::y#6 ) [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ]
  [122] (byte) line_xdyi::x#3 ← phi( line_xdyi/(byte) line_xdyi::x#6 line_xdyi::@2/(byte) line_xdyi::x#2 ) [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ]
  [123] (byte) plot::x#0 ← (byte) line_xdyi::x#3 [ plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ]
  [124] (byte) plot::y#0 ← (byte) line_xdyi::y#3 [ plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ]
  [125] call plot param-assignment [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ]
  to:line_xdyi::@5
line_xdyi::@5: scope:[line_xdyi]  from line_xdyi::@1
  [126] (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ]
  [127] (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ]
  [128] if((byte) line_xdyi::xd#5>=(byte) line_xdyi::e#1) goto line_xdyi::@2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ]
  to:line_xdyi::@3
line_xdyi::@3: scope:[line_xdyi]  from line_xdyi::@5
  [129] (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ]
  [130] (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ]
  to:line_xdyi::@2
line_xdyi::@2: scope:[line_xdyi]  from line_xdyi::@3 line_xdyi::@5
  [131] (byte) line_xdyi::e#6 ← phi( line_xdyi::@3/(byte) line_xdyi::e#2 line_xdyi::@5/(byte) line_xdyi::e#1 ) [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ]
  [131] (byte) line_xdyi::y#6 ← phi( line_xdyi::@3/(byte) line_xdyi::y#2 line_xdyi::@5/(byte) line_xdyi::y#3 ) [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ]
  [132] (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ]
  [133] if((byte) line_xdyi::x#2<(byte~) line_xdyi::$8) goto line_xdyi::@1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ]
  to:line_xdyi::@return
line_xdyi::@return: scope:[line_xdyi]  from line_xdyi::@2
  [134] return  [ ]
  to:@return
line_ydxd: scope:[line_ydxd]  from line::@10 line::@6
  [135] (byte) line_ydxd::y1#6 ← phi( line::@10/(byte) line_ydxd::y1#1 line::@6/(byte) line_ydxd::y1#0 ) [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 ]
  [135] (byte) line_ydxd::yd#5 ← phi( line::@10/(byte) line_ydxd::yd#1 line::@6/(byte) line_ydxd::yd#0 ) [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 ]
  [135] (byte) line_ydxd::y#6 ← phi( line::@10/(byte) line_ydxd::y#1 line::@6/(byte) line_ydxd::y#0 ) [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 ]
  [135] (byte) line_ydxd::x#5 ← phi( line::@10/(byte) line_ydxd::x#1 line::@6/(byte) line_ydxd::x#0 ) [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 ]
  [135] (byte) line_ydxd::xd#2 ← phi( line::@10/(byte) line_ydxd::xd#1 line::@6/(byte) line_ydxd::xd#0 ) [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 ]
  [136] (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ]
  to:line_ydxd::@1
line_ydxd::@1: scope:[line_ydxd]  from line_ydxd line_ydxd::@2
  [137] (byte) line_ydxd::e#3 ← phi( line_ydxd/(byte) line_ydxd::e#0 line_ydxd::@2/(byte) line_ydxd::e#6 ) [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ]
  [137] (byte) line_ydxd::y#3 ← phi( line_ydxd/(byte) line_ydxd::y#6 line_ydxd::@2/(byte) line_ydxd::y#2 ) [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ]
  [137] (byte) line_ydxd::x#3 ← phi( line_ydxd/(byte) line_ydxd::x#5 line_ydxd::@2/(byte) line_ydxd::x#6 ) [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ]
  [138] (byte) plot::x#3 ← (byte) line_ydxd::x#3 [ plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ]
  [139] (byte) plot::y#3 ← (byte) line_ydxd::y#3 [ plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ]
  [140] call plot param-assignment [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ]
  to:line_ydxd::@5
line_ydxd::@5: scope:[line_ydxd]  from line_ydxd::@1
  [141] (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ]
  [142] (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ]
  [143] if((byte) line_ydxd::yd#5>=(byte) line_ydxd::e#1) goto line_ydxd::@2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ]
  to:line_ydxd::@3
line_ydxd::@3: scope:[line_ydxd]  from line_ydxd::@5
  [144] (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ]
  [145] (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ]
  to:line_ydxd::@2
line_ydxd::@2: scope:[line_ydxd]  from line_ydxd::@3 line_ydxd::@5
  [146] (byte) line_ydxd::e#6 ← phi( line_ydxd::@3/(byte) line_ydxd::e#2 line_ydxd::@5/(byte) line_ydxd::e#1 ) [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ]
  [146] (byte) line_ydxd::x#6 ← phi( line_ydxd::@3/(byte) line_ydxd::x#2 line_ydxd::@5/(byte) line_ydxd::x#3 ) [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ]
  [147] (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ]
  [148] if((byte) line_ydxd::y#2<(byte~) line_ydxd::$8) goto line_ydxd::@1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ]
  to:line_ydxd::@return
line_ydxd::@return: scope:[line_ydxd]  from line_ydxd::@2
  [149] return  [ ]
  to:@return
line_xdyd: scope:[line_xdyd]  from line::@20 line::@24
  [150] (byte) line_xdyd::x1#6 ← phi( line::@20/(byte) line_xdyd::x1#0 line::@24/(byte) line_xdyd::x1#1 ) [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 ]
  [150] (byte) line_xdyd::xd#5 ← phi( line::@20/(byte) line_xdyd::xd#0 line::@24/(byte) line_xdyd::xd#1 ) [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 ]
  [150] (byte) line_xdyd::y#5 ← phi( line::@20/(byte) line_xdyd::y#0 line::@24/(byte) line_xdyd::y#1 ) [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 ]
  [150] (byte) line_xdyd::x#6 ← phi( line::@20/(byte) line_xdyd::x#0 line::@24/(byte) line_xdyd::x#1 ) [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 ]
  [150] (byte) line_xdyd::yd#2 ← phi( line::@20/(byte) line_xdyd::yd#0 line::@24/(byte) line_xdyd::yd#1 ) [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 ]
  [151] (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ]
  to:line_xdyd::@1
line_xdyd::@1: scope:[line_xdyd]  from line_xdyd line_xdyd::@2
  [152] (byte) line_xdyd::e#3 ← phi( line_xdyd/(byte) line_xdyd::e#0 line_xdyd::@2/(byte) line_xdyd::e#6 ) [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ]
  [152] (byte) line_xdyd::y#3 ← phi( line_xdyd/(byte) line_xdyd::y#5 line_xdyd::@2/(byte) line_xdyd::y#6 ) [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ]
  [152] (byte) line_xdyd::x#3 ← phi( line_xdyd/(byte) line_xdyd::x#6 line_xdyd::@2/(byte) line_xdyd::x#2 ) [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ]
  [153] (byte) plot::x#1 ← (byte) line_xdyd::x#3 [ plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ]
  [154] (byte) plot::y#1 ← (byte) line_xdyd::y#3 [ plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ]
  [155] call plot param-assignment [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ]
  to:line_xdyd::@5
line_xdyd::@5: scope:[line_xdyd]  from line_xdyd::@1
  [156] (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ]
  [157] (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ]
  [158] if((byte) line_xdyd::xd#5>=(byte) line_xdyd::e#1) goto line_xdyd::@2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ]
  to:line_xdyd::@3
line_xdyd::@3: scope:[line_xdyd]  from line_xdyd::@5
  [159] (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ]
  [160] (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ]
  to:line_xdyd::@2
line_xdyd::@2: scope:[line_xdyd]  from line_xdyd::@3 line_xdyd::@5
  [161] (byte) line_xdyd::e#6 ← phi( line_xdyd::@3/(byte) line_xdyd::e#2 line_xdyd::@5/(byte) line_xdyd::e#1 ) [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ]
  [161] (byte) line_xdyd::y#6 ← phi( line_xdyd::@3/(byte) line_xdyd::y#2 line_xdyd::@5/(byte) line_xdyd::y#3 ) [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ]
  [162] (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ]
  [163] if((byte) line_xdyd::x#2<(byte~) line_xdyd::$8) goto line_xdyd::@1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ]
  to:line_xdyd::@return
line_xdyd::@return: scope:[line_xdyd]  from line_xdyd::@2
  [164] return  [ ]
  to:@return
init_plot_tables: scope:[init_plot_tables]  from main::@3
  [165] phi() [ ]
  to:init_plot_tables::@1
init_plot_tables::@1: scope:[init_plot_tables]  from init_plot_tables init_plot_tables::@2
  [166] (byte) init_plot_tables::bits#3 ← phi( init_plot_tables/(byte/word/signed word) 128 init_plot_tables::@2/(byte) init_plot_tables::bits#4 ) [ init_plot_tables::x#2 init_plot_tables::bits#3 ]
  [166] (byte) init_plot_tables::x#2 ← phi( init_plot_tables/(byte/signed byte/word/signed word) 0 init_plot_tables::@2/(byte) init_plot_tables::x#1 ) [ init_plot_tables::x#2 init_plot_tables::bits#3 ]
  [167] (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ]
  [168] *((const byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ]
  [169] *((const byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← >(const byte*) BITMAP#0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ]
  [170] *((const byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3 [ init_plot_tables::x#2 init_plot_tables::bits#3 ]
  [171] (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1 [ init_plot_tables::x#2 init_plot_tables::bits#1 ]
  [172] if((byte) init_plot_tables::bits#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ]
  to:init_plot_tables::@2
init_plot_tables::@2: scope:[init_plot_tables]  from init_plot_tables::@1 init_plot_tables::@10
  [173] (byte) init_plot_tables::bits#4 ← phi( init_plot_tables::@10/(byte) init_plot_tables::bits#1 init_plot_tables::@1/(byte/word/signed word) 128 ) [ init_plot_tables::x#2 init_plot_tables::bits#4 ]
  [174] (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2 [ init_plot_tables::x#1 init_plot_tables::bits#4 ]
  [175] if((byte) init_plot_tables::x#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@1 [ init_plot_tables::x#1 init_plot_tables::bits#4 ]
  to:init_plot_tables::@3
init_plot_tables::@3: scope:[init_plot_tables]  from init_plot_tables::@2 init_plot_tables::@4
  [176] (byte*) init_plot_tables::yoffs#2 ← phi( init_plot_tables::@4/(byte*) init_plot_tables::yoffs#4 init_plot_tables::@2/((byte*))(byte/signed byte/word/signed word) 0 ) [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ]
  [176] (byte) init_plot_tables::y#2 ← phi( init_plot_tables::@4/(byte) init_plot_tables::y#1 init_plot_tables::@2/(byte/signed byte/word/signed word) 0 ) [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ]
  [177] (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ]
  [178] (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ]
  [179] (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ]
  [180] *((const byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ]
  [181] (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ]
  [182] *((const byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ]
  [183] (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ]
  [184] if((byte~) init_plot_tables::$10!=(byte/signed byte/word/signed word) 7) goto init_plot_tables::@4 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ]
  to:init_plot_tables::@7
init_plot_tables::@7: scope:[init_plot_tables]  from init_plot_tables::@3
  [185] (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ]
  to:init_plot_tables::@4
init_plot_tables::@4: scope:[init_plot_tables]  from init_plot_tables::@3 init_plot_tables::@7
  [186] (byte*) init_plot_tables::yoffs#4 ← phi( init_plot_tables::@3/(byte*) init_plot_tables::yoffs#2 init_plot_tables::@7/(byte*) init_plot_tables::yoffs#1 ) [ init_plot_tables::y#2 init_plot_tables::yoffs#4 ]
  [187] (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ]
  [188] if((byte) init_plot_tables::y#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@3 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ]
  to:init_plot_tables::@return
init_plot_tables::@return: scope:[init_plot_tables]  from init_plot_tables::@4
  [189] return  [ ]
  to:@return
init_plot_tables::@10: scope:[init_plot_tables]  from init_plot_tables::@1
  [190] phi() [ init_plot_tables::x#2 init_plot_tables::bits#1 ]
  to:init_plot_tables::@2
init_screen: scope:[init_screen]  from main
  [191] phi() [ ]
  to:init_screen::@1
init_screen::@1: scope:[init_screen]  from init_screen init_screen::@1
  [192] (byte*) init_screen::b#2 ← phi( init_screen/(const byte*) BITMAP#0 init_screen::@1/(byte*) init_screen::b#1 ) [ init_screen::b#2 ]
  [193] *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0 [ init_screen::b#2 ]
  [194] (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2 [ init_screen::b#1 ]
  [195] if((byte*) init_screen::b#1!=(const byte*) BITMAP#0+(word/signed word) 8192) goto init_screen::@1 [ init_screen::b#1 ]
  to:init_screen::@2
init_screen::@2: scope:[init_screen]  from init_screen::@1 init_screen::@2
  [196] (byte*) init_screen::c#2 ← phi( init_screen::@2/(byte*) init_screen::c#1 init_screen::@1/(const byte*) SCREEN#0 ) [ init_screen::c#2 ]
  [197] *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20 [ init_screen::c#2 ]
  [198] (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2 [ init_screen::c#1 ]
  [199] if((byte*) init_screen::c#1!=(const byte*) SCREEN#0+(word/signed word) 1024) goto init_screen::@2 [ init_screen::c#1 ]
  to:init_screen::@return
init_screen::@return: scope:[init_screen]  from init_screen::@2
  [200] return  [ ]
  to:@return

CONTROL FLOW GRAPH - PHI MEM COALESCED
@begin: scope:[]  from
  [0] phi() [ ] ( )
  to:@10
@10: scope:[]  from @begin
  [1] phi() [ ] ( )
  [2] call main param-assignment [ ] ( )
  to:@end
@end: scope:[]  from @10
  [3] phi() [ ] ( )
main: scope:[main]  from @10
  [4] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] )
  [5] *((const byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] )
  [6] *((const byte*) D011#0) ← (const byte) BMM#0|(const byte) DEN#0|(const byte) RSEL#0|(byte/signed byte/word/signed word) 3 [ ] ( main:2 [ ] )
  [7] *((const byte*) D018#0) ← (byte/signed byte/word/signed word) 24 [ ] ( main:2 [ ] )
  [8] call init_screen param-assignment [ ] ( main:2 [ ] )
  to:main::@3
main::@3: scope:[main]  from main
  [9] phi() [ ] ( main:2 [ ] )
  [10] call init_plot_tables param-assignment [ ] ( main:2 [ ] )
  to:main::@1
main::@1: scope:[main]  from main::@3 main::@5
  [11] phi() [ ] ( main:2 [ ] )
  [12] call lines param-assignment [ ] ( main:2 [ ] )
  to:main::@5
main::@5: scope:[main]  from main::@1
  [13] if(true) goto main::@1 [ ] ( main:2 [ ] )
  to:main::@return
main::@return: scope:[main]  from main::@5
  [14] return  [ ] ( main:2 [ ] )
  to:@return
lines: scope:[lines]  from main::@1
  [15] phi() [ ] ( main:2::lines:12 [ ] )
  to:lines::@1
lines::@1: scope:[lines]  from lines lines::@3
  [16] (byte) lines::l#2 ← phi( lines/(byte/signed byte/word/signed word) 0 lines::@3/(byte) lines::l#1 ) [ lines::l#2 ] ( main:2::lines:12 [ lines::l#2 ] )
  [17] (byte~) lines::$0 ← (const byte[]) lines_x#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 ] ( main:2::lines:12 [ lines::l#2 lines::$0 ] )
  [18] (byte~) lines::$2 ← (const byte[]) lines_x#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 ] )
  [19] (byte~) lines::$3 ← (const byte[]) lines_y#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 lines::$3 ] )
  [20] (byte~) lines::$5 ← (const byte[]) lines_y#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ] )
  [21] (byte) line::x0#0 ← (byte~) lines::$0 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ] ( main:2::lines:12 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ] )
  [22] (byte) line::x1#0 ← (byte~) lines::$2 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ] ( main:2::lines:12 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ] )
  [23] (byte) line::y0#0 ← (byte~) lines::$3 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ] ( main:2::lines:12 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ] )
  [24] (byte) line::y1#0 ← (byte~) lines::$5 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ( main:2::lines:12 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] )
  [25] call line param-assignment [ lines::l#2 ] ( main:2::lines:12 [ lines::l#2 ] )
  to:lines::@3
lines::@3: scope:[lines]  from lines::@1
  [26] (byte) lines::l#1 ← ++ (byte) lines::l#2 [ lines::l#1 ] ( main:2::lines:12 [ lines::l#1 ] )
  [27] if((byte) lines::l#1<(const byte) lines_cnt#0) goto lines::@1 [ lines::l#1 ] ( main:2::lines:12 [ lines::l#1 ] )
  to:lines::@return
lines::@return: scope:[lines]  from lines::@3
  [28] return  [ ] ( main:2::lines:12 [ ] )
  to:@return
line: scope:[line]  from lines::@1
  [29] if((byte) line::x0#0>=(byte) line::x1#0) goto line::@1 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] )
  to:line::@15
line::@15: scope:[line]  from line
  [30] (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] )
  [31] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@2 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] )
  to:line::@16
line::@16: scope:[line]  from line::@15
  [32] (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] )
  [33] if((byte) line::yd#1>=(byte) line::xd#1) goto line::@3 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] )
  to:line::@17
line::@17: scope:[line]  from line::@16
  [34] (byte) line_xdyi::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ] )
  [35] (byte) line_xdyi::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ] )
  [36] (byte) line_xdyi::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ] )
  [37] (byte) line_xdyi::xd#0 ← (byte) line::xd#1 [ line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ] )
  [38] (byte) line_xdyi::yd#0 ← (byte) line::yd#1 [ line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ] )
  [39] call line_xdyi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  to:line::@return
line::@return: scope:[line]  from line::@10 line::@13 line::@17 line::@20 line::@24 line::@27 line::@3 line::@6
  [40] return  [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  to:@return
line::@3: scope:[line]  from line::@16
  [41] (byte) line_ydxi::y#0 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ] )
  [42] (byte) line_ydxi::x#0 ← (byte) line::x0#0 [ line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ] )
  [43] (byte) line_ydxi::y1#0 ← (byte) line::y1#0 [ line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ] )
  [44] (byte) line_ydxi::yd#0 ← (byte) line::yd#1 [ line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ] )
  [45] (byte) line_ydxi::xd#0 ← (byte) line::xd#1 [ line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ] )
  [46] call line_ydxi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  to:line::@return
line::@2: scope:[line]  from line::@15
  [47] (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] )
  [48] if((byte) line::yd#0>=(byte) line::xd#1) goto line::@6 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] )
  to:line::@20
line::@20: scope:[line]  from line::@2
  [49] (byte) line_xdyd::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ] )
  [50] (byte) line_xdyd::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ] )
  [51] (byte) line_xdyd::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ] )
  [52] (byte) line_xdyd::xd#0 ← (byte) line::xd#1 [ line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ] )
  [53] (byte) line_xdyd::yd#0 ← (byte) line::yd#0 [ line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ] )
  [54] call line_xdyd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  to:line::@return
line::@6: scope:[line]  from line::@2
  [55] (byte) line_ydxd::y#0 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ] )
  [56] (byte) line_ydxd::x#0 ← (byte) line::x1#0 [ line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ] )
  [57] (byte) line_ydxd::y1#0 ← (byte) line::y0#0 [ line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ] )
  [58] (byte) line_ydxd::yd#0 ← (byte) line::yd#0 [ line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ] )
  [59] (byte) line_ydxd::xd#0 ← (byte) line::xd#1 [ line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ] )
  [60] call line_ydxd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  to:line::@return
line::@1: scope:[line]  from line
  [61] (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] )
  [62] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@9 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] )
  to:line::@23
line::@23: scope:[line]  from line::@1
  [63] (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] )
  [64] if((byte) line::yd#3>=(byte) line::xd#0) goto line::@10 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] )
  to:line::@24
line::@24: scope:[line]  from line::@23
  [65] (byte) line_xdyd::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ] )
  [66] (byte) line_xdyd::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ] )
  [67] (byte) line_xdyd::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ] )
  [68] (byte) line_xdyd::xd#1 ← (byte) line::xd#0 [ line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ] )
  [69] (byte) line_xdyd::yd#1 ← (byte) line::yd#3 [ line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ] )
  [70] call line_xdyd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  to:line::@return
line::@10: scope:[line]  from line::@23
  [71] (byte) line_ydxd::y#1 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ] )
  [72] (byte) line_ydxd::x#1 ← (byte) line::x0#0 [ line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ] )
  [73] (byte) line_ydxd::y1#1 ← (byte) line::y1#0 [ line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ] )
  [74] (byte) line_ydxd::yd#1 ← (byte) line::yd#3 [ line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ] )
  [75] (byte) line_ydxd::xd#1 ← (byte) line::xd#0 [ line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ] )
  [76] call line_ydxd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  to:line::@return
line::@9: scope:[line]  from line::@1
  [77] (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] )
  [78] if((byte) line::yd#10>=(byte) line::xd#0) goto line::@13 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] )
  to:line::@27
line::@27: scope:[line]  from line::@9
  [79] (byte) line_xdyi::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ] )
  [80] (byte) line_xdyi::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ] )
  [81] (byte) line_xdyi::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ] )
  [82] (byte) line_xdyi::xd#1 ← (byte) line::xd#0 [ line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ] )
  [83] (byte) line_xdyi::yd#1 ← (byte) line::yd#10 [ line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ] )
  [84] call line_xdyi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  to:line::@return
line::@13: scope:[line]  from line::@9
  [85] (byte) line_ydxi::y#1 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ] )
  [86] (byte) line_ydxi::x#1 ← (byte) line::x1#0 [ line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ] )
  [87] (byte) line_ydxi::y1#1 ← (byte) line::y0#0 [ line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ] )
  [88] (byte) line_ydxi::yd#1 ← (byte) line::yd#10 [ line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ] )
  [89] (byte) line_ydxi::xd#1 ← (byte) line::xd#0 [ line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ] )
  [90] call line_ydxi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  to:line::@return
line_ydxi: scope:[line_ydxi]  from line::@13 line::@3
  [91] (byte) line_ydxi::y1#6 ← phi( line::@13/(byte) line_ydxi::y1#1 line::@3/(byte) line_ydxi::y1#0 ) [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 ] )
  [91] (byte) line_ydxi::yd#5 ← phi( line::@13/(byte) line_ydxi::yd#1 line::@3/(byte) line_ydxi::yd#0 ) [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 ] )
  [91] (byte) line_ydxi::y#6 ← phi( line::@13/(byte) line_ydxi::y#1 line::@3/(byte) line_ydxi::y#0 ) [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 ] )
  [91] (byte) line_ydxi::x#5 ← phi( line::@13/(byte) line_ydxi::x#1 line::@3/(byte) line_ydxi::x#0 ) [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 ] )
  [91] (byte) line_ydxi::xd#2 ← phi( line::@13/(byte) line_ydxi::xd#1 line::@3/(byte) line_ydxi::xd#0 ) [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 ] )
  [92] (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] )
  to:line_ydxi::@1
line_ydxi::@1: scope:[line_ydxi]  from line_ydxi line_ydxi::@2
  [93] (byte) line_ydxi::e#3 ← phi( line_ydxi/(byte) line_ydxi::e#0 line_ydxi::@2/(byte) line_ydxi::e#6 ) [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] )
  [93] (byte) line_ydxi::y#3 ← phi( line_ydxi/(byte) line_ydxi::y#6 line_ydxi::@2/(byte) line_ydxi::y#2 ) [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] )
  [93] (byte) line_ydxi::x#3 ← phi( line_ydxi/(byte) line_ydxi::x#5 line_ydxi::@2/(byte) line_ydxi::x#6 ) [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] )
  [94] (byte) plot::x#2 ← (byte) line_ydxi::x#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] )
  [95] (byte) plot::y#2 ← (byte) line_ydxi::y#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] )
  [96] call plot param-assignment [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] )
  to:line_ydxi::@5
line_ydxi::@5: scope:[line_ydxi]  from line_ydxi::@1
  [97] (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] )
  [98] (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] )
  [99] if((byte) line_ydxi::yd#5>=(byte) line_ydxi::e#1) goto line_ydxi::@2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] )
  to:line_ydxi::@3
line_ydxi::@3: scope:[line_ydxi]  from line_ydxi::@5
  [100] (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] )
  [101] (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] )
  to:line_ydxi::@2
line_ydxi::@2: scope:[line_ydxi]  from line_ydxi::@3 line_ydxi::@5
  [102] (byte) line_ydxi::e#6 ← phi( line_ydxi::@3/(byte) line_ydxi::e#2 line_ydxi::@5/(byte) line_ydxi::e#1 ) [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] )
  [102] (byte) line_ydxi::x#6 ← phi( line_ydxi::@3/(byte) line_ydxi::x#2 line_ydxi::@5/(byte) line_ydxi::x#3 ) [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] )
  [103] (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] )
  [104] if((byte) line_ydxi::y#2<(byte~) line_ydxi::$8) goto line_ydxi::@1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] )
  to:line_ydxi::@return
line_ydxi::@return: scope:[line_ydxi]  from line_ydxi::@2
  [105] return  [ ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 ] )
  to:@return
plot: scope:[plot]  from line_xdyd::@1 line_xdyi::@1 line_ydxd::@1 line_ydxi::@1
  [106] (byte) plot::y#4 ← phi( line_xdyd::@1/(byte) plot::y#1 line_xdyi::@1/(byte) plot::y#0 line_ydxd::@1/(byte) plot::y#3 line_ydxi::@1/(byte) plot::y#2 ) [ plot::x#4 plot::y#4 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 ] )
  [106] (byte) plot::x#4 ← phi( line_xdyd::@1/(byte) plot::x#1 line_xdyi::@1/(byte) plot::x#0 line_ydxd::@1/(byte) plot::x#3 line_ydxi::@1/(byte) plot::x#2 ) [ plot::x#4 plot::y#4 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 ] )
  [107] (byte~) plot::$0 ← (const byte[]) plot_xhi#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::$0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::$0 ] )
  [108] (byte*) plot::plotter_x#1 ← ((byte*))(byte/signed byte/word/signed word) 0 hi= (byte~) plot::$0 [ plot::x#4 plot::y#4 plot::plotter_x#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] )
  [109] (byte~) plot::$1 ← (const byte[]) plot_xlo#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] )
  [110] (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1 [ plot::x#4 plot::y#4 plot::plotter_x#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] )
  [111] (byte~) plot::$2 ← (const byte[]) plot_yhi#0 *idx (byte) plot::y#4 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] )
  [112] (word) plot::plotter_y#1 ← (byte/signed byte/word/signed word) 0 hi= (byte~) plot::$2 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] )
  [113] (byte~) plot::$3 ← (const byte[]) plot_ylo#0 *idx (byte) plot::y#4 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] )
  [114] (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] )
  [115] (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2 [ plot::x#4 plot::plotter#0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] )
  [116] (byte~) plot::$5 ← (const byte[]) plot_bit#0 *idx (byte) plot::x#4 [ plot::plotter#0 plot::$5 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$5 ] )
  [117] (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5 [ plot::plotter#0 plot::$6 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] )
  [118] *((byte*) plot::plotter#0) ← (byte~) plot::$6 [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
  to:plot::@return
plot::@return: scope:[plot]  from plot
  [119] return  [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
  to:@return
line_xdyi: scope:[line_xdyi]  from line::@17 line::@27
  [120] (byte) line_xdyi::x1#6 ← phi( line::@17/(byte) line_xdyi::x1#0 line::@27/(byte) line_xdyi::x1#1 ) [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 ] )
  [120] (byte) line_xdyi::xd#5 ← phi( line::@17/(byte) line_xdyi::xd#0 line::@27/(byte) line_xdyi::xd#1 ) [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 ] )
  [120] (byte) line_xdyi::y#5 ← phi( line::@17/(byte) line_xdyi::y#0 line::@27/(byte) line_xdyi::y#1 ) [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 ] )
  [120] (byte) line_xdyi::x#6 ← phi( line::@17/(byte) line_xdyi::x#0 line::@27/(byte) line_xdyi::x#1 ) [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 ] )
  [120] (byte) line_xdyi::yd#2 ← phi( line::@17/(byte) line_xdyi::yd#0 line::@27/(byte) line_xdyi::yd#1 ) [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 ] )
  [121] (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] )
  to:line_xdyi::@1
line_xdyi::@1: scope:[line_xdyi]  from line_xdyi line_xdyi::@2
  [122] (byte) line_xdyi::e#3 ← phi( line_xdyi/(byte) line_xdyi::e#0 line_xdyi::@2/(byte) line_xdyi::e#6 ) [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
  [122] (byte) line_xdyi::y#3 ← phi( line_xdyi/(byte) line_xdyi::y#5 line_xdyi::@2/(byte) line_xdyi::y#6 ) [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
  [122] (byte) line_xdyi::x#3 ← phi( line_xdyi/(byte) line_xdyi::x#6 line_xdyi::@2/(byte) line_xdyi::x#2 ) [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
  [123] (byte) plot::x#0 ← (byte) line_xdyi::x#3 [ plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
  [124] (byte) plot::y#0 ← (byte) line_xdyi::y#3 [ plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
  [125] call plot param-assignment [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
  to:line_xdyi::@5
line_xdyi::@5: scope:[line_xdyi]  from line_xdyi::@1
  [126] (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] )
  [127] (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] )
  [128] if((byte) line_xdyi::xd#5>=(byte) line_xdyi::e#1) goto line_xdyi::@2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] )
  to:line_xdyi::@3
line_xdyi::@3: scope:[line_xdyi]  from line_xdyi::@5
  [129] (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] )
  [130] (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] )
  to:line_xdyi::@2
line_xdyi::@2: scope:[line_xdyi]  from line_xdyi::@3 line_xdyi::@5
  [131] (byte) line_xdyi::e#6 ← phi( line_xdyi::@3/(byte) line_xdyi::e#2 line_xdyi::@5/(byte) line_xdyi::e#1 ) [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] )
  [131] (byte) line_xdyi::y#6 ← phi( line_xdyi::@3/(byte) line_xdyi::y#2 line_xdyi::@5/(byte) line_xdyi::y#3 ) [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] )
  [132] (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] )
  [133] if((byte) line_xdyi::x#2<(byte~) line_xdyi::$8) goto line_xdyi::@1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] )
  to:line_xdyi::@return
line_xdyi::@return: scope:[line_xdyi]  from line_xdyi::@2
  [134] return  [ ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 ] )
  to:@return
line_ydxd: scope:[line_ydxd]  from line::@10 line::@6
  [135] (byte) line_ydxd::y1#6 ← phi( line::@10/(byte) line_ydxd::y1#1 line::@6/(byte) line_ydxd::y1#0 ) [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 ] )
  [135] (byte) line_ydxd::yd#5 ← phi( line::@10/(byte) line_ydxd::yd#1 line::@6/(byte) line_ydxd::yd#0 ) [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 ] )
  [135] (byte) line_ydxd::y#6 ← phi( line::@10/(byte) line_ydxd::y#1 line::@6/(byte) line_ydxd::y#0 ) [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 ] )
  [135] (byte) line_ydxd::x#5 ← phi( line::@10/(byte) line_ydxd::x#1 line::@6/(byte) line_ydxd::x#0 ) [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 ] )
  [135] (byte) line_ydxd::xd#2 ← phi( line::@10/(byte) line_ydxd::xd#1 line::@6/(byte) line_ydxd::xd#0 ) [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 ] )
  [136] (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] )
  to:line_ydxd::@1
line_ydxd::@1: scope:[line_ydxd]  from line_ydxd line_ydxd::@2
  [137] (byte) line_ydxd::e#3 ← phi( line_ydxd/(byte) line_ydxd::e#0 line_ydxd::@2/(byte) line_ydxd::e#6 ) [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
  [137] (byte) line_ydxd::y#3 ← phi( line_ydxd/(byte) line_ydxd::y#6 line_ydxd::@2/(byte) line_ydxd::y#2 ) [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
  [137] (byte) line_ydxd::x#3 ← phi( line_ydxd/(byte) line_ydxd::x#5 line_ydxd::@2/(byte) line_ydxd::x#6 ) [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
  [138] (byte) plot::x#3 ← (byte) line_ydxd::x#3 [ plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
  [139] (byte) plot::y#3 ← (byte) line_ydxd::y#3 [ plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
  [140] call plot param-assignment [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
  to:line_ydxd::@5
line_ydxd::@5: scope:[line_ydxd]  from line_ydxd::@1
  [141] (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] )
  [142] (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] )
  [143] if((byte) line_ydxd::yd#5>=(byte) line_ydxd::e#1) goto line_ydxd::@2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] )
  to:line_ydxd::@3
line_ydxd::@3: scope:[line_ydxd]  from line_ydxd::@5
  [144] (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] )
  [145] (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] )
  to:line_ydxd::@2
line_ydxd::@2: scope:[line_ydxd]  from line_ydxd::@3 line_ydxd::@5
  [146] (byte) line_ydxd::e#6 ← phi( line_ydxd::@3/(byte) line_ydxd::e#2 line_ydxd::@5/(byte) line_ydxd::e#1 ) [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] )
  [146] (byte) line_ydxd::x#6 ← phi( line_ydxd::@3/(byte) line_ydxd::x#2 line_ydxd::@5/(byte) line_ydxd::x#3 ) [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] )
  [147] (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] )
  [148] if((byte) line_ydxd::y#2<(byte~) line_ydxd::$8) goto line_ydxd::@1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] )
  to:line_ydxd::@return
line_ydxd::@return: scope:[line_ydxd]  from line_ydxd::@2
  [149] return  [ ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 ] )
  to:@return
line_xdyd: scope:[line_xdyd]  from line::@20 line::@24
  [150] (byte) line_xdyd::x1#6 ← phi( line::@20/(byte) line_xdyd::x1#0 line::@24/(byte) line_xdyd::x1#1 ) [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 ] )
  [150] (byte) line_xdyd::xd#5 ← phi( line::@20/(byte) line_xdyd::xd#0 line::@24/(byte) line_xdyd::xd#1 ) [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 ] )
  [150] (byte) line_xdyd::y#5 ← phi( line::@20/(byte) line_xdyd::y#0 line::@24/(byte) line_xdyd::y#1 ) [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 ] )
  [150] (byte) line_xdyd::x#6 ← phi( line::@20/(byte) line_xdyd::x#0 line::@24/(byte) line_xdyd::x#1 ) [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 ] )
  [150] (byte) line_xdyd::yd#2 ← phi( line::@20/(byte) line_xdyd::yd#0 line::@24/(byte) line_xdyd::yd#1 ) [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 ] )
  [151] (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] )
  to:line_xdyd::@1
line_xdyd::@1: scope:[line_xdyd]  from line_xdyd line_xdyd::@2
  [152] (byte) line_xdyd::e#3 ← phi( line_xdyd/(byte) line_xdyd::e#0 line_xdyd::@2/(byte) line_xdyd::e#6 ) [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
  [152] (byte) line_xdyd::y#3 ← phi( line_xdyd/(byte) line_xdyd::y#5 line_xdyd::@2/(byte) line_xdyd::y#6 ) [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
  [152] (byte) line_xdyd::x#3 ← phi( line_xdyd/(byte) line_xdyd::x#6 line_xdyd::@2/(byte) line_xdyd::x#2 ) [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
  [153] (byte) plot::x#1 ← (byte) line_xdyd::x#3 [ plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
  [154] (byte) plot::y#1 ← (byte) line_xdyd::y#3 [ plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
  [155] call plot param-assignment [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
  to:line_xdyd::@5
line_xdyd::@5: scope:[line_xdyd]  from line_xdyd::@1
  [156] (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] )
  [157] (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] )
  [158] if((byte) line_xdyd::xd#5>=(byte) line_xdyd::e#1) goto line_xdyd::@2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] )
  to:line_xdyd::@3
line_xdyd::@3: scope:[line_xdyd]  from line_xdyd::@5
  [159] (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] )
  [160] (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] )
  to:line_xdyd::@2
line_xdyd::@2: scope:[line_xdyd]  from line_xdyd::@3 line_xdyd::@5
  [161] (byte) line_xdyd::e#6 ← phi( line_xdyd::@3/(byte) line_xdyd::e#2 line_xdyd::@5/(byte) line_xdyd::e#1 ) [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] )
  [161] (byte) line_xdyd::y#6 ← phi( line_xdyd::@3/(byte) line_xdyd::y#2 line_xdyd::@5/(byte) line_xdyd::y#3 ) [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] )
  [162] (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] )
  [163] if((byte) line_xdyd::x#2<(byte~) line_xdyd::$8) goto line_xdyd::@1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] )
  to:line_xdyd::@return
line_xdyd::@return: scope:[line_xdyd]  from line_xdyd::@2
  [164] return  [ ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 ] )
  to:@return
init_plot_tables: scope:[init_plot_tables]  from main::@3
  [165] phi() [ ] ( main:2::init_plot_tables:10 [ ] )
  to:init_plot_tables::@1
init_plot_tables::@1: scope:[init_plot_tables]  from init_plot_tables init_plot_tables::@2
  [166] (byte) init_plot_tables::bits#3 ← phi( init_plot_tables/(byte/word/signed word) 128 init_plot_tables::@2/(byte) init_plot_tables::bits#4 ) [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] )
  [166] (byte) init_plot_tables::x#2 ← phi( init_plot_tables/(byte/signed byte/word/signed word) 0 init_plot_tables::@2/(byte) init_plot_tables::x#1 ) [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] )
  [167] (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] )
  [168] *((const byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] )
  [169] *((const byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← >(const byte*) BITMAP#0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] )
  [170] *((const byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] )
  [171] (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] )
  [172] if((byte) init_plot_tables::bits#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] )
  to:init_plot_tables::@2
init_plot_tables::@2: scope:[init_plot_tables]  from init_plot_tables::@1 init_plot_tables::@10
  [173] (byte) init_plot_tables::bits#4 ← phi( init_plot_tables::@10/(byte) init_plot_tables::bits#1 init_plot_tables::@1/(byte/word/signed word) 128 ) [ init_plot_tables::x#2 init_plot_tables::bits#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#4 ] )
  [174] (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] )
  [175] if((byte) init_plot_tables::x#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@1 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] )
  to:init_plot_tables::@3
init_plot_tables::@3: scope:[init_plot_tables]  from init_plot_tables::@2 init_plot_tables::@4
  [176] (byte*) init_plot_tables::yoffs#2 ← phi( init_plot_tables::@4/(byte*) init_plot_tables::yoffs#4 init_plot_tables::@2/((byte*))(byte/signed byte/word/signed word) 0 ) [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] )
  [176] (byte) init_plot_tables::y#2 ← phi( init_plot_tables::@4/(byte) init_plot_tables::y#1 init_plot_tables::@2/(byte/signed byte/word/signed word) 0 ) [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] )
  [177] (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] )
  [178] (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ] )
  [179] (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ] )
  [180] *((const byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] )
  [181] (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] )
  [182] *((const byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] )
  [183] (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] )
  [184] if((byte~) init_plot_tables::$10!=(byte/signed byte/word/signed word) 7) goto init_plot_tables::@4 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] )
  to:init_plot_tables::@7
init_plot_tables::@7: scope:[init_plot_tables]  from init_plot_tables::@3
  [185] (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] )
  to:init_plot_tables::@4
init_plot_tables::@4: scope:[init_plot_tables]  from init_plot_tables::@3 init_plot_tables::@7
  [186] (byte*) init_plot_tables::yoffs#4 ← phi( init_plot_tables::@3/(byte*) init_plot_tables::yoffs#2 init_plot_tables::@7/(byte*) init_plot_tables::yoffs#1 ) [ init_plot_tables::y#2 init_plot_tables::yoffs#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#4 ] )
  [187] (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] )
  [188] if((byte) init_plot_tables::y#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@3 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] )
  to:init_plot_tables::@return
init_plot_tables::@return: scope:[init_plot_tables]  from init_plot_tables::@4
  [189] return  [ ] ( main:2::init_plot_tables:10 [ ] )
  to:@return
init_plot_tables::@10: scope:[init_plot_tables]  from init_plot_tables::@1
  [190] phi() [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] )
  to:init_plot_tables::@2
init_screen: scope:[init_screen]  from main
  [191] phi() [ ] ( main:2::init_screen:8 [ ] )
  to:init_screen::@1
init_screen::@1: scope:[init_screen]  from init_screen init_screen::@1
  [192] (byte*) init_screen::b#2 ← phi( init_screen/(const byte*) BITMAP#0 init_screen::@1/(byte*) init_screen::b#1 ) [ init_screen::b#2 ] ( main:2::init_screen:8 [ init_screen::b#2 ] )
  [193] *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0 [ init_screen::b#2 ] ( main:2::init_screen:8 [ init_screen::b#2 ] )
  [194] (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] )
  [195] if((byte*) init_screen::b#1!=(const byte*) BITMAP#0+(word/signed word) 8192) goto init_screen::@1 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] )
  to:init_screen::@2
init_screen::@2: scope:[init_screen]  from init_screen::@1 init_screen::@2
  [196] (byte*) init_screen::c#2 ← phi( init_screen::@2/(byte*) init_screen::c#1 init_screen::@1/(const byte*) SCREEN#0 ) [ init_screen::c#2 ] ( main:2::init_screen:8 [ init_screen::c#2 ] )
  [197] *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20 [ init_screen::c#2 ] ( main:2::init_screen:8 [ init_screen::c#2 ] )
  [198] (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] )
  [199] if((byte*) init_screen::c#1!=(const byte*) SCREEN#0+(word/signed word) 1024) goto init_screen::@2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] )
  to:init_screen::@return
init_screen::@return: scope:[init_screen]  from init_screen::@2
  [200] return  [ ] ( main:2::init_screen:8 [ ] )
  to:@return

DOMINATORS
@begin dominated by  @begin 
@10 dominated by  @begin @10 
@end dominated by  @end @begin @10 
main dominated by  main @begin @10 
main::@3 dominated by  main main::@3 @begin @10 
main::@1 dominated by  main main::@1 main::@3 @begin @10 
main::@5 dominated by  main main::@1 main::@5 main::@3 @begin @10 
main::@return dominated by  main main::@1 main::@5 main::@3 @begin main::@return @10 
lines dominated by  main main::@1 main::@3 @begin lines @10 
lines::@1 dominated by  main main::@1 main::@3 @begin lines::@1 lines @10 
lines::@3 dominated by  main main::@1 main::@3 @begin lines::@1 lines::@3 lines @10 
lines::@return dominated by  main main::@1 main::@3 @begin lines::@return lines::@1 lines::@3 lines @10 
line dominated by  main main::@1 main::@3 @begin lines::@1 line lines @10 
line::@15 dominated by  main main::@1 main::@3 @begin lines::@1 line lines @10 line::@15 
line::@16 dominated by  main main::@1 main::@3 @begin lines::@1 line lines @10 line::@16 line::@15 
line::@17 dominated by  main main::@1 main::@3 @begin lines::@1 line lines @10 line::@16 line::@15 line::@17 
line::@return dominated by  main main::@1 main::@3 @begin lines::@1 line lines @10 line::@return 
line::@3 dominated by  main main::@1 main::@3 @begin lines::@1 line lines @10 line::@3 line::@16 line::@15 
line::@2 dominated by  main main::@1 main::@3 @begin lines::@1 line lines @10 line::@2 line::@15 
line::@20 dominated by  line::@20 main main::@1 main::@3 @begin lines::@1 line lines @10 line::@2 line::@15 
line::@6 dominated by  main main::@1 main::@3 @begin lines::@1 line lines @10 line::@6 line::@2 line::@15 
line::@1 dominated by  main main::@1 main::@3 @begin lines::@1 line lines @10 line::@1 
line::@23 dominated by  line::@23 main main::@1 main::@3 @begin lines::@1 line lines @10 line::@1 
line::@24 dominated by  line::@23 line::@24 main main::@1 main::@3 @begin lines::@1 line lines @10 line::@1 
line::@10 dominated by  line::@23 main main::@1 main::@3 @begin lines::@1 line lines @10 line::@10 line::@1 
line::@9 dominated by  main main::@1 main::@3 @begin lines::@1 line lines @10 line::@9 line::@1 
line::@27 dominated by  main main::@1 line::@27 main::@3 @begin lines::@1 line lines @10 line::@9 line::@1 
line::@13 dominated by  main main::@1 main::@3 @begin lines::@1 line lines @10 line::@9 line::@13 line::@1 
line_ydxi dominated by  main main::@1 main::@3 @begin lines::@1 line line_ydxi lines @10 
line_ydxi::@1 dominated by  main line_ydxi::@1 main::@1 main::@3 @begin lines::@1 line line_ydxi lines @10 
line_ydxi::@5 dominated by  main line_ydxi::@5 line_ydxi::@1 main::@1 main::@3 @begin lines::@1 line line_ydxi lines @10 
line_ydxi::@3 dominated by  main line_ydxi::@5 line_ydxi::@1 line_ydxi::@3 main::@1 main::@3 @begin lines::@1 line line_ydxi lines @10 
line_ydxi::@2 dominated by  main line_ydxi::@5 line_ydxi::@1 line_ydxi::@2 main::@1 main::@3 @begin lines::@1 line line_ydxi lines @10 
line_ydxi::@return dominated by  main line_ydxi::@5 line_ydxi::@1 line_ydxi::@2 main::@1 main::@3 line_ydxi::@return @begin lines::@1 line line_ydxi lines @10 
plot dominated by  main main::@1 main::@3 @begin lines::@1 line plot lines @10 
plot::@return dominated by  main main::@1 main::@3 @begin lines::@1 line plot lines @10 plot::@return 
line_xdyi dominated by  main line_xdyi main::@1 main::@3 @begin lines::@1 line lines @10 
line_xdyi::@1 dominated by  main line_xdyi main::@1 main::@3 @begin line_xdyi::@1 lines::@1 line lines @10 
line_xdyi::@5 dominated by  main line_xdyi main::@1 main::@3 @begin line_xdyi::@1 line_xdyi::@5 lines::@1 line lines @10 
line_xdyi::@3 dominated by  main line_xdyi main::@1 main::@3 @begin line_xdyi::@1 line_xdyi::@3 line_xdyi::@5 lines::@1 line lines @10 
line_xdyi::@2 dominated by  main line_xdyi main::@1 main::@3 @begin line_xdyi::@1 line_xdyi::@2 line_xdyi::@5 lines::@1 line lines @10 
line_xdyi::@return dominated by  line_xdyi::@return main line_xdyi main::@1 main::@3 @begin line_xdyi::@1 line_xdyi::@2 line_xdyi::@5 lines::@1 line lines @10 
line_ydxd dominated by  main main::@1 main::@3 @begin lines::@1 line line_ydxd lines @10 
line_ydxd::@1 dominated by  main main::@1 main::@3 @begin lines::@1 line line_ydxd::@1 line_ydxd lines @10 
line_ydxd::@5 dominated by  main main::@1 main::@3 @begin lines::@1 line line_ydxd::@5 line_ydxd::@1 line_ydxd lines @10 
line_ydxd::@3 dominated by  main main::@1 main::@3 @begin lines::@1 line line_ydxd::@5 line_ydxd::@3 line_ydxd::@1 line_ydxd lines @10 
line_ydxd::@2 dominated by  main main::@1 main::@3 @begin lines::@1 line line_ydxd::@5 line_ydxd::@2 line_ydxd::@1 line_ydxd lines @10 
line_ydxd::@return dominated by  main line_ydxd::@return main::@1 main::@3 @begin lines::@1 line line_ydxd::@5 line_ydxd::@2 line_ydxd::@1 line_ydxd lines @10 
line_xdyd dominated by  main line_xdyd main::@1 main::@3 @begin lines::@1 line lines @10 
line_xdyd::@1 dominated by  main line_xdyd main::@1 main::@3 @begin lines::@1 line line_xdyd::@1 lines @10 
line_xdyd::@5 dominated by  main line_xdyd main::@1 main::@3 @begin lines::@1 line line_xdyd::@1 line_xdyd::@5 lines @10 
line_xdyd::@3 dominated by  main line_xdyd main::@1 main::@3 @begin lines::@1 line line_xdyd::@1 line_xdyd::@5 line_xdyd::@3 lines @10 
line_xdyd::@2 dominated by  main line_xdyd main::@1 main::@3 @begin lines::@1 line line_xdyd::@1 line_xdyd::@5 line_xdyd::@2 lines @10 
line_xdyd::@return dominated by  main line_xdyd main::@1 main::@3 @begin line_xdyd::@return lines::@1 line line_xdyd::@1 line_xdyd::@5 line_xdyd::@2 lines @10 
init_plot_tables dominated by  main main::@3 @begin init_plot_tables @10 
init_plot_tables::@1 dominated by  main init_plot_tables::@1 main::@3 @begin init_plot_tables @10 
init_plot_tables::@2 dominated by  main init_plot_tables::@2 init_plot_tables::@1 main::@3 @begin init_plot_tables @10 
init_plot_tables::@3 dominated by  main init_plot_tables::@2 init_plot_tables::@3 init_plot_tables::@1 main::@3 @begin init_plot_tables @10 
init_plot_tables::@7 dominated by  main init_plot_tables::@2 init_plot_tables::@3 init_plot_tables::@1 init_plot_tables::@7 main::@3 @begin init_plot_tables @10 
init_plot_tables::@4 dominated by  main init_plot_tables::@2 init_plot_tables::@3 init_plot_tables::@1 main::@3 init_plot_tables::@4 @begin init_plot_tables @10 
init_plot_tables::@return dominated by  main init_plot_tables::@2 init_plot_tables::@3 init_plot_tables::@1 main::@3 init_plot_tables::@4 @begin init_plot_tables::@return init_plot_tables @10 
init_plot_tables::@10 dominated by  main init_plot_tables::@1 main::@3 @begin init_plot_tables @10 init_plot_tables::@10 
init_screen dominated by  main @begin init_screen @10 
init_screen::@1 dominated by  main @begin init_screen init_screen::@1 @10 
init_screen::@2 dominated by  main @begin init_screen init_screen::@2 init_screen::@1 @10 
init_screen::@return dominated by  main @begin init_screen init_screen::@2 init_screen::@1 @10 init_screen::@return 

Found back edge: Loop head: main::@1 tails: main::@5 blocks: null
Found back edge: Loop head: lines::@1 tails: lines::@3 blocks: null
Found back edge: Loop head: line_ydxi::@1 tails: line_ydxi::@2 blocks: null
Found back edge: Loop head: line_xdyi::@1 tails: line_xdyi::@2 blocks: null
Found back edge: Loop head: line_ydxd::@1 tails: line_ydxd::@2 blocks: null
Found back edge: Loop head: line_xdyd::@1 tails: line_xdyd::@2 blocks: null
Found back edge: Loop head: init_plot_tables::@1 tails: init_plot_tables::@2 blocks: null
Found back edge: Loop head: init_plot_tables::@3 tails: init_plot_tables::@4 blocks: null
Found back edge: Loop head: init_screen::@1 tails: init_screen::@1 blocks: null
Found back edge: Loop head: init_screen::@2 tails: init_screen::@2 blocks: null
Populated: Loop head: main::@1 tails: main::@5 blocks: main::@5 main::@1 
Populated: Loop head: lines::@1 tails: lines::@3 blocks: lines::@3 lines::@1 
Populated: Loop head: line_ydxi::@1 tails: line_ydxi::@2 blocks: line_ydxi::@2 line_ydxi::@3 line_ydxi::@5 line_ydxi::@1 
Populated: Loop head: line_xdyi::@1 tails: line_xdyi::@2 blocks: line_xdyi::@2 line_xdyi::@3 line_xdyi::@5 line_xdyi::@1 
Populated: Loop head: line_ydxd::@1 tails: line_ydxd::@2 blocks: line_ydxd::@2 line_ydxd::@3 line_ydxd::@5 line_ydxd::@1 
Populated: Loop head: line_xdyd::@1 tails: line_xdyd::@2 blocks: line_xdyd::@2 line_xdyd::@3 line_xdyd::@5 line_xdyd::@1 
Populated: Loop head: init_plot_tables::@1 tails: init_plot_tables::@2 blocks: init_plot_tables::@2 init_plot_tables::@1 init_plot_tables::@10 
Populated: Loop head: init_plot_tables::@3 tails: init_plot_tables::@4 blocks: init_plot_tables::@4 init_plot_tables::@3 init_plot_tables::@7 
Populated: Loop head: init_screen::@1 tails: init_screen::@1 blocks: init_screen::@1 
Populated: Loop head: init_screen::@2 tails: init_screen::@2 blocks: init_screen::@2 
NATURAL LOOPS
Loop head: main::@1 tails: main::@5 blocks: main::@5 main::@1 
Loop head: lines::@1 tails: lines::@3 blocks: lines::@3 lines::@1 
Loop head: line_ydxi::@1 tails: line_ydxi::@2 blocks: line_ydxi::@2 line_ydxi::@3 line_ydxi::@5 line_ydxi::@1 
Loop head: line_xdyi::@1 tails: line_xdyi::@2 blocks: line_xdyi::@2 line_xdyi::@3 line_xdyi::@5 line_xdyi::@1 
Loop head: line_ydxd::@1 tails: line_ydxd::@2 blocks: line_ydxd::@2 line_ydxd::@3 line_ydxd::@5 line_ydxd::@1 
Loop head: line_xdyd::@1 tails: line_xdyd::@2 blocks: line_xdyd::@2 line_xdyd::@3 line_xdyd::@5 line_xdyd::@1 
Loop head: init_plot_tables::@1 tails: init_plot_tables::@2 blocks: init_plot_tables::@2 init_plot_tables::@1 init_plot_tables::@10 
Loop head: init_plot_tables::@3 tails: init_plot_tables::@4 blocks: init_plot_tables::@4 init_plot_tables::@3 init_plot_tables::@7 
Loop head: init_screen::@1 tails: init_screen::@1 blocks: init_screen::@1 
Loop head: init_screen::@2 tails: init_screen::@2 blocks: init_screen::@2 

Found 0 loops in scope []
Found 1 loops in scope [main]
  Loop head: main::@1 tails: main::@5 blocks: main::@5 main::@1 
Found 2 loops in scope [init_screen]
  Loop head: init_screen::@1 tails: init_screen::@1 blocks: init_screen::@1 
  Loop head: init_screen::@2 tails: init_screen::@2 blocks: init_screen::@2 
Found 2 loops in scope [init_plot_tables]
  Loop head: init_plot_tables::@1 tails: init_plot_tables::@2 blocks: init_plot_tables::@2 init_plot_tables::@1 init_plot_tables::@10 
  Loop head: init_plot_tables::@3 tails: init_plot_tables::@4 blocks: init_plot_tables::@4 init_plot_tables::@3 init_plot_tables::@7 
Found 1 loops in scope [lines]
  Loop head: lines::@1 tails: lines::@3 blocks: lines::@3 lines::@1 
Found 0 loops in scope [line]
Found 1 loops in scope [line_xdyi]
  Loop head: line_xdyi::@1 tails: line_xdyi::@2 blocks: line_xdyi::@2 line_xdyi::@3 line_xdyi::@5 line_xdyi::@1 
Found 1 loops in scope [line_ydxi]
  Loop head: line_ydxi::@1 tails: line_ydxi::@2 blocks: line_ydxi::@2 line_ydxi::@3 line_ydxi::@5 line_ydxi::@1 
Found 1 loops in scope [line_xdyd]
  Loop head: line_xdyd::@1 tails: line_xdyd::@2 blocks: line_xdyd::@2 line_xdyd::@3 line_xdyd::@5 line_xdyd::@1 
Found 1 loops in scope [line_ydxd]
  Loop head: line_ydxd::@1 tails: line_ydxd::@2 blocks: line_ydxd::@2 line_ydxd::@3 line_ydxd::@5 line_ydxd::@1 
Found 0 loops in scope [plot]
NATURAL LOOPS WITH DEPTH
Loop head: main::@1 tails: main::@5 blocks: main::@5 main::@1  depth: 1
Loop head: lines::@1 tails: lines::@3 blocks: lines::@3 lines::@1  depth: 2
Loop head: line_ydxi::@1 tails: line_ydxi::@2 blocks: line_ydxi::@2 line_ydxi::@3 line_ydxi::@5 line_ydxi::@1  depth: 1
Loop head: line_xdyi::@1 tails: line_xdyi::@2 blocks: line_xdyi::@2 line_xdyi::@3 line_xdyi::@5 line_xdyi::@1  depth: 1
Loop head: line_ydxd::@1 tails: line_ydxd::@2 blocks: line_ydxd::@2 line_ydxd::@3 line_ydxd::@5 line_ydxd::@1  depth: 1
Loop head: line_xdyd::@1 tails: line_xdyd::@2 blocks: line_xdyd::@2 line_xdyd::@3 line_xdyd::@5 line_xdyd::@1  depth: 1
Loop head: init_plot_tables::@1 tails: init_plot_tables::@2 blocks: init_plot_tables::@2 init_plot_tables::@1 init_plot_tables::@10  depth: 1
Loop head: init_plot_tables::@3 tails: init_plot_tables::@4 blocks: init_plot_tables::@4 init_plot_tables::@3 init_plot_tables::@7  depth: 1
Loop head: init_screen::@1 tails: init_screen::@1 blocks: init_screen::@1  depth: 1
Loop head: init_screen::@2 tails: init_screen::@2 blocks: init_screen::@2  depth: 1


VARIABLE REGISTER WEIGHTS
(byte*) BGCOL
(byte*) BITMAP
(byte) BMM
(byte*) D011
(byte*) D018
(byte) DEN
(byte*) FGCOL
(byte) RSEL
(byte*) SCREEN
(void()) init_plot_tables()
(byte~) init_plot_tables::$0 22.0
(byte~) init_plot_tables::$10 22.0
(byte~) init_plot_tables::$6 11.0
(byte~) init_plot_tables::$7 22.0
(byte~) init_plot_tables::$8 22.0
(byte~) init_plot_tables::$9 22.0
(byte) init_plot_tables::bits
(byte) init_plot_tables::bits#1 11.0
(byte) init_plot_tables::bits#3 6.6000000000000005
(byte) init_plot_tables::bits#4 7.333333333333333
(byte) init_plot_tables::x
(byte) init_plot_tables::x#1 16.5
(byte) init_plot_tables::x#2 7.333333333333334
(byte) init_plot_tables::y
(byte) init_plot_tables::y#1 16.5
(byte) init_plot_tables::y#2 6.0
(byte*) init_plot_tables::yoffs
(byte*) init_plot_tables::yoffs#1 22.0
(byte*) init_plot_tables::yoffs#2 6.111111111111112
(byte*) init_plot_tables::yoffs#4 11.0
(void()) init_screen()
(byte*) init_screen::b
(byte*) init_screen::b#1 16.5
(byte*) init_screen::b#2 16.5
(byte*) init_screen::c
(byte*) init_screen::c#1 16.5
(byte*) init_screen::c#2 16.5
(void()) line((byte) line::x0 , (byte) line::x1 , (byte) line::y0 , (byte) line::y1)
(byte) line::x0
(byte) line::x0#0 5.173913043478264
(byte) line::x1
(byte) line::x1#0 5.409090909090908
(byte) line::xd
(byte) line::xd#0 0.7
(byte) line::xd#1 0.7
(byte) line::y0
(byte) line::y0#0 5.952380952380948
(byte) line::y1
(byte) line::y1#0 6.249999999999996
(byte) line::yd
(byte) line::yd#0 0.8888888888888888
(byte) line::yd#1 0.8888888888888888
(byte) line::yd#10 0.8888888888888888
(byte) line::yd#3 0.8888888888888888
(void()) line_xdyd((byte) line_xdyd::x , (byte) line_xdyd::y , (byte) line_xdyd::x1 , (byte) line_xdyd::xd , (byte) line_xdyd::yd)
(byte~) line_xdyd::$8 22.0
(byte) line_xdyd::e
(byte) line_xdyd::e#0 4.0
(byte) line_xdyd::e#1 14.666666666666666
(byte) line_xdyd::e#2 22.0
(byte) line_xdyd::e#3 4.800000000000001
(byte) line_xdyd::e#6 11.0
(byte) line_xdyd::x
(byte) line_xdyd::x#0 0.8
(byte) line_xdyd::x#1 0.8
(byte) line_xdyd::x#2 4.125
(byte) line_xdyd::x#3 8.75
(byte) line_xdyd::x#6 3.0
(byte) line_xdyd::x1
(byte) line_xdyd::x1#0 1.3333333333333333
(byte) line_xdyd::x1#1 1.3333333333333333
(byte) line_xdyd::x1#6 1.0714285714285714
(byte) line_xdyd::xd
(byte) line_xdyd::xd#0 2.0
(byte) line_xdyd::xd#1 2.0
(byte) line_xdyd::xd#5 1.8571428571428572
(byte) line_xdyd::y
(byte) line_xdyd::y#0 1.0
(byte) line_xdyd::y#1 1.0
(byte) line_xdyd::y#2 11.0
(byte) line_xdyd::y#3 6.571428571428571
(byte) line_xdyd::y#5 3.0
(byte) line_xdyd::y#6 11.0
(byte) line_xdyd::yd
(byte) line_xdyd::yd#0 4.0
(byte) line_xdyd::yd#1 4.0
(byte) line_xdyd::yd#2 1.2142857142857142
(void()) line_xdyi((byte) line_xdyi::x , (byte) line_xdyi::y , (byte) line_xdyi::x1 , (byte) line_xdyi::xd , (byte) line_xdyi::yd)
(byte~) line_xdyi::$8 22.0
(byte) line_xdyi::e
(byte) line_xdyi::e#0 4.0
(byte) line_xdyi::e#1 14.666666666666666
(byte) line_xdyi::e#2 22.0
(byte) line_xdyi::e#3 4.800000000000001
(byte) line_xdyi::e#6 11.0
(byte) line_xdyi::x
(byte) line_xdyi::x#0 0.8
(byte) line_xdyi::x#1 0.8
(byte) line_xdyi::x#2 4.125
(byte) line_xdyi::x#3 8.75
(byte) line_xdyi::x#6 3.0
(byte) line_xdyi::x1
(byte) line_xdyi::x1#0 1.3333333333333333
(byte) line_xdyi::x1#1 1.3333333333333333
(byte) line_xdyi::x1#6 1.0714285714285714
(byte) line_xdyi::xd
(byte) line_xdyi::xd#0 2.0
(byte) line_xdyi::xd#1 2.0
(byte) line_xdyi::xd#5 1.8571428571428572
(byte) line_xdyi::y
(byte) line_xdyi::y#0 1.0
(byte) line_xdyi::y#1 1.0
(byte) line_xdyi::y#2 11.0
(byte) line_xdyi::y#3 6.571428571428571
(byte) line_xdyi::y#5 3.0
(byte) line_xdyi::y#6 11.0
(byte) line_xdyi::yd
(byte) line_xdyi::yd#0 4.0
(byte) line_xdyi::yd#1 4.0
(byte) line_xdyi::yd#2 1.2142857142857142
(void()) line_ydxd((byte) line_ydxd::y , (byte) line_ydxd::x , (byte) line_ydxd::y1 , (byte) line_ydxd::yd , (byte) line_ydxd::xd)
(byte~) line_ydxd::$8 22.0
(byte) line_ydxd::e
(byte) line_ydxd::e#0 4.0
(byte) line_ydxd::e#1 14.666666666666666
(byte) line_ydxd::e#2 22.0
(byte) line_ydxd::e#3 4.800000000000001
(byte) line_ydxd::e#6 11.0
(byte) line_ydxd::x
(byte) line_ydxd::x#0 1.0
(byte) line_ydxd::x#1 1.0
(byte) line_ydxd::x#2 11.0
(byte) line_ydxd::x#3 6.571428571428571
(byte) line_ydxd::x#5 3.0
(byte) line_ydxd::x#6 11.0
(byte) line_ydxd::xd
(byte) line_ydxd::xd#0 4.0
(byte) line_ydxd::xd#1 4.0
(byte) line_ydxd::xd#2 1.2142857142857142
(byte) line_ydxd::y
(byte) line_ydxd::y#0 0.8
(byte) line_ydxd::y#1 0.8
(byte) line_ydxd::y#2 4.125
(byte) line_ydxd::y#3 8.75
(byte) line_ydxd::y#6 3.0
(byte) line_ydxd::y1
(byte) line_ydxd::y1#0 1.3333333333333333
(byte) line_ydxd::y1#1 1.3333333333333333
(byte) line_ydxd::y1#6 1.0714285714285714
(byte) line_ydxd::yd
(byte) line_ydxd::yd#0 2.0
(byte) line_ydxd::yd#1 2.0
(byte) line_ydxd::yd#5 1.8571428571428572
(void()) line_ydxi((byte) line_ydxi::y , (byte) line_ydxi::x , (byte) line_ydxi::y1 , (byte) line_ydxi::yd , (byte) line_ydxi::xd)
(byte~) line_ydxi::$8 22.0
(byte) line_ydxi::e
(byte) line_ydxi::e#0 4.0
(byte) line_ydxi::e#1 14.666666666666666
(byte) line_ydxi::e#2 22.0
(byte) line_ydxi::e#3 4.800000000000001
(byte) line_ydxi::e#6 11.0
(byte) line_ydxi::x
(byte) line_ydxi::x#0 1.0
(byte) line_ydxi::x#1 1.0
(byte) line_ydxi::x#2 11.0
(byte) line_ydxi::x#3 6.571428571428571
(byte) line_ydxi::x#5 3.0
(byte) line_ydxi::x#6 11.0
(byte) line_ydxi::xd
(byte) line_ydxi::xd#0 4.0
(byte) line_ydxi::xd#1 4.0
(byte) line_ydxi::xd#2 1.2142857142857142
(byte) line_ydxi::y
(byte) line_ydxi::y#0 0.8
(byte) line_ydxi::y#1 0.8
(byte) line_ydxi::y#2 4.125
(byte) line_ydxi::y#3 8.75
(byte) line_ydxi::y#6 3.0
(byte) line_ydxi::y1
(byte) line_ydxi::y1#0 1.3333333333333333
(byte) line_ydxi::y1#1 1.3333333333333333
(byte) line_ydxi::y1#6 1.0714285714285714
(byte) line_ydxi::yd
(byte) line_ydxi::yd#0 2.0
(byte) line_ydxi::yd#1 2.0
(byte) line_ydxi::yd#5 1.8571428571428572
(void()) lines()
(byte~) lines::$0 50.5
(byte~) lines::$2 50.5
(byte~) lines::$3 50.5
(byte~) lines::$5 50.5
(byte) lines::l
(byte) lines::l#1 151.5
(byte) lines::l#2 60.6
(byte) lines_cnt
(byte[]) lines_x
(byte[]) lines_y
(void()) main()
(void()) plot((byte) plot::x , (byte) plot::y)
(byte~) plot::$0 4.0
(byte~) plot::$1 4.0
(byte~) plot::$2 4.0
(byte~) plot::$3 4.0
(byte~) plot::$5 4.0
(byte~) plot::$6 4.0
(byte*) plot::plotter
(byte*) plot::plotter#0 2.0
(byte*) plot::plotter_x
(byte*) plot::plotter_x#1 2.0
(byte*) plot::plotter_x#2 0.8
(word) plot::plotter_y
(word) plot::plotter_y#1 2.0
(word) plot::plotter_y#2 4.0
(byte) plot::x
(byte) plot::x#0 11.0
(byte) plot::x#1 11.0
(byte) plot::x#2 11.0
(byte) plot::x#3 11.0
(byte) plot::x#4 5.000000000000001
(byte) plot::y
(byte) plot::y#0 22.0
(byte) plot::y#1 22.0
(byte) plot::y#2 22.0
(byte) plot::y#3 22.0
(byte) plot::y#4 6.857142857142857
(byte[]) plot_bit
(byte[]) plot_xhi
(byte[]) plot_xlo
(byte[]) plot_yhi
(byte[]) plot_ylo

Initial phi equivalence classes
[ lines::l#2 lines::l#1 ]
[ line_ydxi::xd#2 line_ydxi::xd#1 line_ydxi::xd#0 ]
[ line_ydxi::yd#5 line_ydxi::yd#1 line_ydxi::yd#0 ]
[ line_ydxi::y1#6 line_ydxi::y1#1 line_ydxi::y1#0 ]
[ line_ydxi::x#3 line_ydxi::x#5 line_ydxi::x#1 line_ydxi::x#0 line_ydxi::x#6 line_ydxi::x#2 ]
[ line_ydxi::y#3 line_ydxi::y#6 line_ydxi::y#1 line_ydxi::y#0 line_ydxi::y#2 ]
[ line_ydxi::e#3 line_ydxi::e#0 line_ydxi::e#6 line_ydxi::e#2 line_ydxi::e#1 ]
[ plot::x#4 plot::x#1 plot::x#0 plot::x#3 plot::x#2 ]
[ plot::y#4 plot::y#1 plot::y#0 plot::y#3 plot::y#2 ]
[ line_xdyi::yd#2 line_xdyi::yd#0 line_xdyi::yd#1 ]
[ line_xdyi::xd#5 line_xdyi::xd#0 line_xdyi::xd#1 ]
[ line_xdyi::x1#6 line_xdyi::x1#0 line_xdyi::x1#1 ]
[ line_xdyi::x#3 line_xdyi::x#6 line_xdyi::x#0 line_xdyi::x#1 line_xdyi::x#2 ]
[ line_xdyi::y#3 line_xdyi::y#5 line_xdyi::y#0 line_xdyi::y#1 line_xdyi::y#6 line_xdyi::y#2 ]
[ line_xdyi::e#3 line_xdyi::e#0 line_xdyi::e#6 line_xdyi::e#2 line_xdyi::e#1 ]
[ line_ydxd::xd#2 line_ydxd::xd#1 line_ydxd::xd#0 ]
[ line_ydxd::yd#5 line_ydxd::yd#1 line_ydxd::yd#0 ]
[ line_ydxd::y1#6 line_ydxd::y1#1 line_ydxd::y1#0 ]
[ line_ydxd::x#3 line_ydxd::x#5 line_ydxd::x#1 line_ydxd::x#0 line_ydxd::x#6 line_ydxd::x#2 ]
[ line_ydxd::y#3 line_ydxd::y#6 line_ydxd::y#1 line_ydxd::y#0 line_ydxd::y#2 ]
[ line_ydxd::e#3 line_ydxd::e#0 line_ydxd::e#6 line_ydxd::e#2 line_ydxd::e#1 ]
[ line_xdyd::yd#2 line_xdyd::yd#0 line_xdyd::yd#1 ]
[ line_xdyd::xd#5 line_xdyd::xd#0 line_xdyd::xd#1 ]
[ line_xdyd::x1#6 line_xdyd::x1#0 line_xdyd::x1#1 ]
[ line_xdyd::x#3 line_xdyd::x#6 line_xdyd::x#0 line_xdyd::x#1 line_xdyd::x#2 ]
[ line_xdyd::y#3 line_xdyd::y#5 line_xdyd::y#0 line_xdyd::y#1 line_xdyd::y#6 line_xdyd::y#2 ]
[ line_xdyd::e#3 line_xdyd::e#0 line_xdyd::e#6 line_xdyd::e#2 line_xdyd::e#1 ]
[ init_plot_tables::x#2 init_plot_tables::x#1 ]
[ init_plot_tables::bits#3 init_plot_tables::bits#4 init_plot_tables::bits#1 ]
[ init_plot_tables::y#2 init_plot_tables::y#1 ]
[ init_plot_tables::yoffs#2 init_plot_tables::yoffs#4 init_plot_tables::yoffs#1 ]
[ init_screen::b#2 init_screen::b#1 ]
[ init_screen::c#2 init_screen::c#1 ]
Added variable lines::$0 to zero page equivalence class [ lines::$0 ]
Added variable lines::$2 to zero page equivalence class [ lines::$2 ]
Added variable lines::$3 to zero page equivalence class [ lines::$3 ]
Added variable lines::$5 to zero page equivalence class [ lines::$5 ]
Added variable line::x0#0 to zero page equivalence class [ line::x0#0 ]
Added variable line::x1#0 to zero page equivalence class [ line::x1#0 ]
Added variable line::y0#0 to zero page equivalence class [ line::y0#0 ]
Added variable line::y1#0 to zero page equivalence class [ line::y1#0 ]
Added variable line::xd#1 to zero page equivalence class [ line::xd#1 ]
Added variable line::yd#1 to zero page equivalence class [ line::yd#1 ]
Added variable line::yd#0 to zero page equivalence class [ line::yd#0 ]
Added variable line::xd#0 to zero page equivalence class [ line::xd#0 ]
Added variable line::yd#3 to zero page equivalence class [ line::yd#3 ]
Added variable line::yd#10 to zero page equivalence class [ line::yd#10 ]
Added variable line_ydxi::$8 to zero page equivalence class [ line_ydxi::$8 ]
Added variable plot::$0 to zero page equivalence class [ plot::$0 ]
Added variable plot::plotter_x#1 to zero page equivalence class [ plot::plotter_x#1 ]
Added variable plot::$1 to zero page equivalence class [ plot::$1 ]
Added variable plot::plotter_x#2 to zero page equivalence class [ plot::plotter_x#2 ]
Added variable plot::$2 to zero page equivalence class [ plot::$2 ]
Added variable plot::plotter_y#1 to zero page equivalence class [ plot::plotter_y#1 ]
Added variable plot::$3 to zero page equivalence class [ plot::$3 ]
Added variable plot::plotter_y#2 to zero page equivalence class [ plot::plotter_y#2 ]
Added variable plot::plotter#0 to zero page equivalence class [ plot::plotter#0 ]
Added variable plot::$5 to zero page equivalence class [ plot::$5 ]
Added variable plot::$6 to zero page equivalence class [ plot::$6 ]
Added variable line_xdyi::$8 to zero page equivalence class [ line_xdyi::$8 ]
Added variable line_ydxd::$8 to zero page equivalence class [ line_ydxd::$8 ]
Added variable line_xdyd::$8 to zero page equivalence class [ line_xdyd::$8 ]
Added variable init_plot_tables::$0 to zero page equivalence class [ init_plot_tables::$0 ]
Added variable init_plot_tables::$6 to zero page equivalence class [ init_plot_tables::$6 ]
Added variable init_plot_tables::$7 to zero page equivalence class [ init_plot_tables::$7 ]
Added variable init_plot_tables::$8 to zero page equivalence class [ init_plot_tables::$8 ]
Added variable init_plot_tables::$9 to zero page equivalence class [ init_plot_tables::$9 ]
Added variable init_plot_tables::$10 to zero page equivalence class [ init_plot_tables::$10 ]
Complete equivalence classes
[ lines::l#2 lines::l#1 ]
[ line_ydxi::xd#2 line_ydxi::xd#1 line_ydxi::xd#0 ]
[ line_ydxi::yd#5 line_ydxi::yd#1 line_ydxi::yd#0 ]
[ line_ydxi::y1#6 line_ydxi::y1#1 line_ydxi::y1#0 ]
[ line_ydxi::x#3 line_ydxi::x#5 line_ydxi::x#1 line_ydxi::x#0 line_ydxi::x#6 line_ydxi::x#2 ]
[ line_ydxi::y#3 line_ydxi::y#6 line_ydxi::y#1 line_ydxi::y#0 line_ydxi::y#2 ]
[ line_ydxi::e#3 line_ydxi::e#0 line_ydxi::e#6 line_ydxi::e#2 line_ydxi::e#1 ]
[ plot::x#4 plot::x#1 plot::x#0 plot::x#3 plot::x#2 ]
[ plot::y#4 plot::y#1 plot::y#0 plot::y#3 plot::y#2 ]
[ line_xdyi::yd#2 line_xdyi::yd#0 line_xdyi::yd#1 ]
[ line_xdyi::xd#5 line_xdyi::xd#0 line_xdyi::xd#1 ]
[ line_xdyi::x1#6 line_xdyi::x1#0 line_xdyi::x1#1 ]
[ line_xdyi::x#3 line_xdyi::x#6 line_xdyi::x#0 line_xdyi::x#1 line_xdyi::x#2 ]
[ line_xdyi::y#3 line_xdyi::y#5 line_xdyi::y#0 line_xdyi::y#1 line_xdyi::y#6 line_xdyi::y#2 ]
[ line_xdyi::e#3 line_xdyi::e#0 line_xdyi::e#6 line_xdyi::e#2 line_xdyi::e#1 ]
[ line_ydxd::xd#2 line_ydxd::xd#1 line_ydxd::xd#0 ]
[ line_ydxd::yd#5 line_ydxd::yd#1 line_ydxd::yd#0 ]
[ line_ydxd::y1#6 line_ydxd::y1#1 line_ydxd::y1#0 ]
[ line_ydxd::x#3 line_ydxd::x#5 line_ydxd::x#1 line_ydxd::x#0 line_ydxd::x#6 line_ydxd::x#2 ]
[ line_ydxd::y#3 line_ydxd::y#6 line_ydxd::y#1 line_ydxd::y#0 line_ydxd::y#2 ]
[ line_ydxd::e#3 line_ydxd::e#0 line_ydxd::e#6 line_ydxd::e#2 line_ydxd::e#1 ]
[ line_xdyd::yd#2 line_xdyd::yd#0 line_xdyd::yd#1 ]
[ line_xdyd::xd#5 line_xdyd::xd#0 line_xdyd::xd#1 ]
[ line_xdyd::x1#6 line_xdyd::x1#0 line_xdyd::x1#1 ]
[ line_xdyd::x#3 line_xdyd::x#6 line_xdyd::x#0 line_xdyd::x#1 line_xdyd::x#2 ]
[ line_xdyd::y#3 line_xdyd::y#5 line_xdyd::y#0 line_xdyd::y#1 line_xdyd::y#6 line_xdyd::y#2 ]
[ line_xdyd::e#3 line_xdyd::e#0 line_xdyd::e#6 line_xdyd::e#2 line_xdyd::e#1 ]
[ init_plot_tables::x#2 init_plot_tables::x#1 ]
[ init_plot_tables::bits#3 init_plot_tables::bits#4 init_plot_tables::bits#1 ]
[ init_plot_tables::y#2 init_plot_tables::y#1 ]
[ init_plot_tables::yoffs#2 init_plot_tables::yoffs#4 init_plot_tables::yoffs#1 ]
[ init_screen::b#2 init_screen::b#1 ]
[ init_screen::c#2 init_screen::c#1 ]
[ lines::$0 ]
[ lines::$2 ]
[ lines::$3 ]
[ lines::$5 ]
[ line::x0#0 ]
[ line::x1#0 ]
[ line::y0#0 ]
[ line::y1#0 ]
[ line::xd#1 ]
[ line::yd#1 ]
[ line::yd#0 ]
[ line::xd#0 ]
[ line::yd#3 ]
[ line::yd#10 ]
[ line_ydxi::$8 ]
[ plot::$0 ]
[ plot::plotter_x#1 ]
[ plot::$1 ]
[ plot::plotter_x#2 ]
[ plot::$2 ]
[ plot::plotter_y#1 ]
[ plot::$3 ]
[ plot::plotter_y#2 ]
[ plot::plotter#0 ]
[ plot::$5 ]
[ plot::$6 ]
[ line_xdyi::$8 ]
[ line_ydxd::$8 ]
[ line_xdyd::$8 ]
[ init_plot_tables::$0 ]
[ init_plot_tables::$6 ]
[ init_plot_tables::$7 ]
[ init_plot_tables::$8 ]
[ init_plot_tables::$9 ]
[ init_plot_tables::$10 ]
Allocated zp ZP_BYTE:2 [ lines::l#2 lines::l#1 ]
Allocated zp ZP_BYTE:3 [ line_ydxi::xd#2 line_ydxi::xd#1 line_ydxi::xd#0 ]
Allocated zp ZP_BYTE:4 [ line_ydxi::yd#5 line_ydxi::yd#1 line_ydxi::yd#0 ]
Allocated zp ZP_BYTE:5 [ line_ydxi::y1#6 line_ydxi::y1#1 line_ydxi::y1#0 ]
Allocated zp ZP_BYTE:6 [ line_ydxi::x#3 line_ydxi::x#5 line_ydxi::x#1 line_ydxi::x#0 line_ydxi::x#6 line_ydxi::x#2 ]
Allocated zp ZP_BYTE:7 [ line_ydxi::y#3 line_ydxi::y#6 line_ydxi::y#1 line_ydxi::y#0 line_ydxi::y#2 ]
Allocated zp ZP_BYTE:8 [ line_ydxi::e#3 line_ydxi::e#0 line_ydxi::e#6 line_ydxi::e#2 line_ydxi::e#1 ]
Allocated zp ZP_BYTE:9 [ plot::x#4 plot::x#1 plot::x#0 plot::x#3 plot::x#2 ]
Allocated zp ZP_BYTE:10 [ plot::y#4 plot::y#1 plot::y#0 plot::y#3 plot::y#2 ]
Allocated zp ZP_BYTE:11 [ line_xdyi::yd#2 line_xdyi::yd#0 line_xdyi::yd#1 ]
Allocated zp ZP_BYTE:12 [ line_xdyi::xd#5 line_xdyi::xd#0 line_xdyi::xd#1 ]
Allocated zp ZP_BYTE:13 [ line_xdyi::x1#6 line_xdyi::x1#0 line_xdyi::x1#1 ]
Allocated zp ZP_BYTE:14 [ line_xdyi::x#3 line_xdyi::x#6 line_xdyi::x#0 line_xdyi::x#1 line_xdyi::x#2 ]
Allocated zp ZP_BYTE:15 [ line_xdyi::y#3 line_xdyi::y#5 line_xdyi::y#0 line_xdyi::y#1 line_xdyi::y#6 line_xdyi::y#2 ]
Allocated zp ZP_BYTE:16 [ line_xdyi::e#3 line_xdyi::e#0 line_xdyi::e#6 line_xdyi::e#2 line_xdyi::e#1 ]
Allocated zp ZP_BYTE:17 [ line_ydxd::xd#2 line_ydxd::xd#1 line_ydxd::xd#0 ]
Allocated zp ZP_BYTE:18 [ line_ydxd::yd#5 line_ydxd::yd#1 line_ydxd::yd#0 ]
Allocated zp ZP_BYTE:19 [ line_ydxd::y1#6 line_ydxd::y1#1 line_ydxd::y1#0 ]
Allocated zp ZP_BYTE:20 [ line_ydxd::x#3 line_ydxd::x#5 line_ydxd::x#1 line_ydxd::x#0 line_ydxd::x#6 line_ydxd::x#2 ]
Allocated zp ZP_BYTE:21 [ line_ydxd::y#3 line_ydxd::y#6 line_ydxd::y#1 line_ydxd::y#0 line_ydxd::y#2 ]
Allocated zp ZP_BYTE:22 [ line_ydxd::e#3 line_ydxd::e#0 line_ydxd::e#6 line_ydxd::e#2 line_ydxd::e#1 ]
Allocated zp ZP_BYTE:23 [ line_xdyd::yd#2 line_xdyd::yd#0 line_xdyd::yd#1 ]
Allocated zp ZP_BYTE:24 [ line_xdyd::xd#5 line_xdyd::xd#0 line_xdyd::xd#1 ]
Allocated zp ZP_BYTE:25 [ line_xdyd::x1#6 line_xdyd::x1#0 line_xdyd::x1#1 ]
Allocated zp ZP_BYTE:26 [ line_xdyd::x#3 line_xdyd::x#6 line_xdyd::x#0 line_xdyd::x#1 line_xdyd::x#2 ]
Allocated zp ZP_BYTE:27 [ line_xdyd::y#3 line_xdyd::y#5 line_xdyd::y#0 line_xdyd::y#1 line_xdyd::y#6 line_xdyd::y#2 ]
Allocated zp ZP_BYTE:28 [ line_xdyd::e#3 line_xdyd::e#0 line_xdyd::e#6 line_xdyd::e#2 line_xdyd::e#1 ]
Allocated zp ZP_BYTE:29 [ init_plot_tables::x#2 init_plot_tables::x#1 ]
Allocated zp ZP_BYTE:30 [ init_plot_tables::bits#3 init_plot_tables::bits#4 init_plot_tables::bits#1 ]
Allocated zp ZP_BYTE:31 [ init_plot_tables::y#2 init_plot_tables::y#1 ]
Allocated zp ZP_PTR_BYTE:32 [ init_plot_tables::yoffs#2 init_plot_tables::yoffs#4 init_plot_tables::yoffs#1 ]
Allocated zp ZP_PTR_BYTE:34 [ init_screen::b#2 init_screen::b#1 ]
Allocated zp ZP_PTR_BYTE:36 [ init_screen::c#2 init_screen::c#1 ]
Allocated zp ZP_BYTE:38 [ lines::$0 ]
Allocated zp ZP_BYTE:39 [ lines::$2 ]
Allocated zp ZP_BYTE:40 [ lines::$3 ]
Allocated zp ZP_BYTE:41 [ lines::$5 ]
Allocated zp ZP_BYTE:42 [ line::x0#0 ]
Allocated zp ZP_BYTE:43 [ line::x1#0 ]
Allocated zp ZP_BYTE:44 [ line::y0#0 ]
Allocated zp ZP_BYTE:45 [ line::y1#0 ]
Allocated zp ZP_BYTE:46 [ line::xd#1 ]
Allocated zp ZP_BYTE:47 [ line::yd#1 ]
Allocated zp ZP_BYTE:48 [ line::yd#0 ]
Allocated zp ZP_BYTE:49 [ line::xd#0 ]
Allocated zp ZP_BYTE:50 [ line::yd#3 ]
Allocated zp ZP_BYTE:51 [ line::yd#10 ]
Allocated zp ZP_BYTE:52 [ line_ydxi::$8 ]
Allocated zp ZP_BYTE:53 [ plot::$0 ]
Allocated zp ZP_PTR_BYTE:54 [ plot::plotter_x#1 ]
Allocated zp ZP_BYTE:56 [ plot::$1 ]
Allocated zp ZP_PTR_BYTE:57 [ plot::plotter_x#2 ]
Allocated zp ZP_BYTE:59 [ plot::$2 ]
Allocated zp ZP_WORD:60 [ plot::plotter_y#1 ]
Allocated zp ZP_BYTE:62 [ plot::$3 ]
Allocated zp ZP_WORD:63 [ plot::plotter_y#2 ]
Allocated zp ZP_PTR_BYTE:65 [ plot::plotter#0 ]
Allocated zp ZP_BYTE:67 [ plot::$5 ]
Allocated zp ZP_BYTE:68 [ plot::$6 ]
Allocated zp ZP_BYTE:69 [ line_xdyi::$8 ]
Allocated zp ZP_BYTE:70 [ line_ydxd::$8 ]
Allocated zp ZP_BYTE:71 [ line_xdyd::$8 ]
Allocated zp ZP_BYTE:72 [ init_plot_tables::$0 ]
Allocated zp ZP_BYTE:73 [ init_plot_tables::$6 ]
Allocated zp ZP_BYTE:74 [ init_plot_tables::$7 ]
Allocated zp ZP_BYTE:75 [ init_plot_tables::$8 ]
Allocated zp ZP_BYTE:76 [ init_plot_tables::$9 ]
Allocated zp ZP_BYTE:77 [ init_plot_tables::$10 ]
INITIAL ASM
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const BGCOL = $d020
  .const FGCOL = $d021
  .const D018 = $d018
  .const D011 = $d011
  .const BMM = $20
  .const DEN = $10
  .const RSEL = 8
  .const SCREEN = $400
  .const BITMAP = $2000
  .const plot_xlo = $1000
  .const plot_xhi = $1100
  .const plot_ylo = $1200
  .const plot_yhi = $1300
  .const plot_bit = $1400
  .const lines_cnt = 8
  lines_x: .byte $3c, $50, $6e, $50, $3c, $28, $a, $28, $3c
  lines_y: .byte $a, $28, $3c, $50, $6e, $50, $3c, $28, $a
//SEG2 @begin
bbegin:
//SEG3 [1] phi from @begin to @10 [phi:@begin->@10]
b10_from_bbegin:
  jmp b10
//SEG4 @10
b10:
//SEG5 [2] call main param-assignment [ ] ( )
  jsr main
//SEG6 [3] phi from @10 to @end [phi:@10->@end]
bend_from_b10:
  jmp bend
//SEG7 @end
bend:
//SEG8 main
main: {
  //SEG9 [4] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #0
    sta BGCOL
  //SEG10 [5] *((const byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #0
    sta FGCOL
  //SEG11 [6] *((const byte*) D011#0) ← (const byte) BMM#0|(const byte) DEN#0|(const byte) RSEL#0|(byte/signed byte/word/signed word) 3 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #BMM|DEN|RSEL|3
    sta D011
  //SEG12 [7] *((const byte*) D018#0) ← (byte/signed byte/word/signed word) 24 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #$18
    sta D018
  //SEG13 [8] call init_screen param-assignment [ ] ( main:2 [ ] )
  //SEG14 [191] phi from main to init_screen [phi:main->init_screen]
  init_screen_from_main:
    jsr init_screen
  //SEG15 [9] phi from main to main::@3 [phi:main->main::@3]
  b3_from_main:
    jmp b3
  //SEG16 main::@3
  b3:
  //SEG17 [10] call init_plot_tables param-assignment [ ] ( main:2 [ ] )
  //SEG18 [165] phi from main::@3 to init_plot_tables [phi:main::@3->init_plot_tables]
  init_plot_tables_from_b3:
    jsr init_plot_tables
  //SEG19 [11] phi from main::@3 main::@5 to main::@1 [phi:main::@3/main::@5->main::@1]
  b1_from_b3:
  b1_from_b5:
    jmp b1
  //SEG20 main::@1
  b1:
  //SEG21 [12] call lines param-assignment [ ] ( main:2 [ ] )
  //SEG22 [15] phi from main::@1 to lines [phi:main::@1->lines]
  lines_from_b1:
    jsr lines
    jmp b5
  //SEG23 main::@5
  b5:
  //SEG24 [13] if(true) goto main::@1 [ ] ( main:2 [ ] ) -- true_then_la1 
    jmp b1_from_b5
    jmp breturn
  //SEG25 main::@return
  breturn:
  //SEG26 [14] return  [ ] ( main:2 [ ] )
    rts
}
//SEG27 lines
lines: {
    .label _0 = $26
    .label _2 = $27
    .label _3 = $28
    .label _5 = $29
    .label l = 2
  //SEG28 [16] phi from lines to lines::@1 [phi:lines->lines::@1]
  b1_from_lines:
  //SEG29 [16] phi (byte) lines::l#2 = (byte/signed byte/word/signed word) 0 [phi:lines->lines::@1#0] -- zpby1=coby1 
    lda #0
    sta l
    jmp b1
  //SEG30 [16] phi from lines::@3 to lines::@1 [phi:lines::@3->lines::@1]
  b1_from_b3:
  //SEG31 [16] phi (byte) lines::l#2 = (byte) lines::l#1 [phi:lines::@3->lines::@1#0] -- register_copy 
    jmp b1
  //SEG32 lines::@1
  b1:
  //SEG33 [17] (byte~) lines::$0 ← (const byte[]) lines_x#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 ] ( main:2::lines:12 [ lines::l#2 lines::$0 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx l
    lda lines_x,x
    sta _0
  //SEG34 [18] (byte~) lines::$2 ← (const byte[]) lines_x#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx l
    lda lines_x+1,x
    sta _2
  //SEG35 [19] (byte~) lines::$3 ← (const byte[]) lines_y#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 lines::$3 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx l
    lda lines_y,x
    sta _3
  //SEG36 [20] (byte~) lines::$5 ← (const byte[]) lines_y#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx l
    lda lines_y+1,x
    sta _5
  //SEG37 [21] (byte) line::x0#0 ← (byte~) lines::$0 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ] ( main:2::lines:12 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ] ) -- zpby1=zpby2 
    lda _0
    sta line.x0
  //SEG38 [22] (byte) line::x1#0 ← (byte~) lines::$2 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ] ( main:2::lines:12 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ] ) -- zpby1=zpby2 
    lda _2
    sta line.x1
  //SEG39 [23] (byte) line::y0#0 ← (byte~) lines::$3 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ] ( main:2::lines:12 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ] ) -- zpby1=zpby2 
    lda _3
    sta line.y0
  //SEG40 [24] (byte) line::y1#0 ← (byte~) lines::$5 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ( main:2::lines:12 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ) -- zpby1=zpby2 
    lda _5
    sta line.y1
  //SEG41 [25] call line param-assignment [ lines::l#2 ] ( main:2::lines:12 [ lines::l#2 ] )
    jsr line
    jmp b3
  //SEG42 lines::@3
  b3:
  //SEG43 [26] (byte) lines::l#1 ← ++ (byte) lines::l#2 [ lines::l#1 ] ( main:2::lines:12 [ lines::l#1 ] ) -- zpby1=_inc_zpby1 
    inc l
  //SEG44 [27] if((byte) lines::l#1<(const byte) lines_cnt#0) goto lines::@1 [ lines::l#1 ] ( main:2::lines:12 [ lines::l#1 ] ) -- zpby1_lt_coby1_then_la1 
    lda l
    cmp #lines_cnt
    bcc b1_from_b3
    jmp breturn
  //SEG45 lines::@return
  breturn:
  //SEG46 [28] return  [ ] ( main:2::lines:12 [ ] )
    rts
}
//SEG47 line
line: {
    .label x0 = $2a
    .label x1 = $2b
    .label y0 = $2c
    .label y1 = $2d
    .label xd = $31
    .label xd_1 = $2e
    .label yd = $30
    .label yd_1 = $2f
    .label yd_3 = $32
    .label yd_10 = $33
  //SEG48 [29] if((byte) line::x0#0>=(byte) line::x1#0) goto line::@1 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ) -- zpby1_ge_zpby2_then_la1 
    lda x0
    cmp x1
    bcs b1
    jmp b15
  //SEG49 line::@15
  b15:
  //SEG50 [30] (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ) -- zpby1=zpby2_minus_zpby3 
    lda x1
    sec
    sbc x0
    sta xd_1
  //SEG51 [31] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@2 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda y0
    cmp y1
    bcs b2
    jmp b16
  //SEG52 line::@16
  b16:
  //SEG53 [32] (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ) -- zpby1=zpby2_minus_zpby3 
    lda y1
    sec
    sbc y0
    sta yd_1
  //SEG54 [33] if((byte) line::yd#1>=(byte) line::xd#1) goto line::@3 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd_1
    cmp xd_1
    bcs b3
    jmp b17
  //SEG55 line::@17
  b17:
  //SEG56 [34] (byte) line_xdyi::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ] ) -- zpby1=zpby2 
    lda x0
    sta line_xdyi.x
  //SEG57 [35] (byte) line_xdyi::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ] ) -- zpby1=zpby2 
    lda y0
    sta line_xdyi.y
  //SEG58 [36] (byte) line_xdyi::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ] ) -- zpby1=zpby2 
    lda x1
    sta line_xdyi.x1
  //SEG59 [37] (byte) line_xdyi::xd#0 ← (byte) line::xd#1 [ line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ] ) -- zpby1=zpby2 
    lda xd_1
    sta line_xdyi.xd
  //SEG60 [38] (byte) line_xdyi::yd#0 ← (byte) line::yd#1 [ line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ] ) -- zpby1=zpby2 
    lda yd_1
    sta line_xdyi.yd
  //SEG61 [39] call line_xdyi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG62 [120] phi from line::@17 to line_xdyi [phi:line::@17->line_xdyi]
  line_xdyi_from_b17:
  //SEG63 [120] phi (byte) line_xdyi::x1#6 = (byte) line_xdyi::x1#0 [phi:line::@17->line_xdyi#0] -- register_copy 
  //SEG64 [120] phi (byte) line_xdyi::xd#5 = (byte) line_xdyi::xd#0 [phi:line::@17->line_xdyi#1] -- register_copy 
  //SEG65 [120] phi (byte) line_xdyi::y#5 = (byte) line_xdyi::y#0 [phi:line::@17->line_xdyi#2] -- register_copy 
  //SEG66 [120] phi (byte) line_xdyi::x#6 = (byte) line_xdyi::x#0 [phi:line::@17->line_xdyi#3] -- register_copy 
  //SEG67 [120] phi (byte) line_xdyi::yd#2 = (byte) line_xdyi::yd#0 [phi:line::@17->line_xdyi#4] -- register_copy 
    jsr line_xdyi
    jmp breturn
  //SEG68 line::@return
  breturn:
  //SEG69 [40] return  [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
    rts
  //SEG70 line::@3
  b3:
  //SEG71 [41] (byte) line_ydxi::y#0 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ] ) -- zpby1=zpby2 
    lda y0
    sta line_ydxi.y
  //SEG72 [42] (byte) line_ydxi::x#0 ← (byte) line::x0#0 [ line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ] ) -- zpby1=zpby2 
    lda x0
    sta line_ydxi.x
  //SEG73 [43] (byte) line_ydxi::y1#0 ← (byte) line::y1#0 [ line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxi.y1
  //SEG74 [44] (byte) line_ydxi::yd#0 ← (byte) line::yd#1 [ line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ] ) -- zpby1=zpby2 
    lda yd_1
    sta line_ydxi.yd
  //SEG75 [45] (byte) line_ydxi::xd#0 ← (byte) line::xd#1 [ line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ] ) -- zpby1=zpby2 
    lda xd_1
    sta line_ydxi.xd
  //SEG76 [46] call line_ydxi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG77 [91] phi from line::@3 to line_ydxi [phi:line::@3->line_ydxi]
  line_ydxi_from_b3:
  //SEG78 [91] phi (byte) line_ydxi::y1#6 = (byte) line_ydxi::y1#0 [phi:line::@3->line_ydxi#0] -- register_copy 
  //SEG79 [91] phi (byte) line_ydxi::yd#5 = (byte) line_ydxi::yd#0 [phi:line::@3->line_ydxi#1] -- register_copy 
  //SEG80 [91] phi (byte) line_ydxi::y#6 = (byte) line_ydxi::y#0 [phi:line::@3->line_ydxi#2] -- register_copy 
  //SEG81 [91] phi (byte) line_ydxi::x#5 = (byte) line_ydxi::x#0 [phi:line::@3->line_ydxi#3] -- register_copy 
  //SEG82 [91] phi (byte) line_ydxi::xd#2 = (byte) line_ydxi::xd#0 [phi:line::@3->line_ydxi#4] -- register_copy 
    jsr line_ydxi
    jmp breturn
  //SEG83 line::@2
  b2:
  //SEG84 [47] (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ) -- zpby1=zpby2_minus_zpby3 
    lda y0
    sec
    sbc y1
    sta yd
  //SEG85 [48] if((byte) line::yd#0>=(byte) line::xd#1) goto line::@6 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp xd_1
    bcs b6
    jmp b20
  //SEG86 line::@20
  b20:
  //SEG87 [49] (byte) line_xdyd::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ] ) -- zpby1=zpby2 
    lda x0
    sta line_xdyd.x
  //SEG88 [50] (byte) line_xdyd::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ] ) -- zpby1=zpby2 
    lda y0
    sta line_xdyd.y
  //SEG89 [51] (byte) line_xdyd::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ] ) -- zpby1=zpby2 
    lda x1
    sta line_xdyd.x1
  //SEG90 [52] (byte) line_xdyd::xd#0 ← (byte) line::xd#1 [ line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ] ) -- zpby1=zpby2 
    lda xd_1
    sta line_xdyd.xd
  //SEG91 [53] (byte) line_xdyd::yd#0 ← (byte) line::yd#0 [ line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyd.yd
  //SEG92 [54] call line_xdyd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG93 [150] phi from line::@20 to line_xdyd [phi:line::@20->line_xdyd]
  line_xdyd_from_b20:
  //SEG94 [150] phi (byte) line_xdyd::x1#6 = (byte) line_xdyd::x1#0 [phi:line::@20->line_xdyd#0] -- register_copy 
  //SEG95 [150] phi (byte) line_xdyd::xd#5 = (byte) line_xdyd::xd#0 [phi:line::@20->line_xdyd#1] -- register_copy 
  //SEG96 [150] phi (byte) line_xdyd::y#5 = (byte) line_xdyd::y#0 [phi:line::@20->line_xdyd#2] -- register_copy 
  //SEG97 [150] phi (byte) line_xdyd::x#6 = (byte) line_xdyd::x#0 [phi:line::@20->line_xdyd#3] -- register_copy 
  //SEG98 [150] phi (byte) line_xdyd::yd#2 = (byte) line_xdyd::yd#0 [phi:line::@20->line_xdyd#4] -- register_copy 
    jsr line_xdyd
    jmp breturn
  //SEG99 line::@6
  b6:
  //SEG100 [55] (byte) line_ydxd::y#0 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxd.y
  //SEG101 [56] (byte) line_ydxd::x#0 ← (byte) line::x1#0 [ line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ] ) -- zpby1=zpby2 
    lda x1
    sta line_ydxd.x
  //SEG102 [57] (byte) line_ydxd::y1#0 ← (byte) line::y0#0 [ line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ] ) -- zpby1=zpby2 
    lda y0
    sta line_ydxd.y1
  //SEG103 [58] (byte) line_ydxd::yd#0 ← (byte) line::yd#0 [ line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxd.yd
  //SEG104 [59] (byte) line_ydxd::xd#0 ← (byte) line::xd#1 [ line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ] ) -- zpby1=zpby2 
    lda xd_1
    sta line_ydxd.xd
  //SEG105 [60] call line_ydxd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG106 [135] phi from line::@6 to line_ydxd [phi:line::@6->line_ydxd]
  line_ydxd_from_b6:
  //SEG107 [135] phi (byte) line_ydxd::y1#6 = (byte) line_ydxd::y1#0 [phi:line::@6->line_ydxd#0] -- register_copy 
  //SEG108 [135] phi (byte) line_ydxd::yd#5 = (byte) line_ydxd::yd#0 [phi:line::@6->line_ydxd#1] -- register_copy 
  //SEG109 [135] phi (byte) line_ydxd::y#6 = (byte) line_ydxd::y#0 [phi:line::@6->line_ydxd#2] -- register_copy 
  //SEG110 [135] phi (byte) line_ydxd::x#5 = (byte) line_ydxd::x#0 [phi:line::@6->line_ydxd#3] -- register_copy 
  //SEG111 [135] phi (byte) line_ydxd::xd#2 = (byte) line_ydxd::xd#0 [phi:line::@6->line_ydxd#4] -- register_copy 
    jsr line_ydxd
    jmp breturn
  //SEG112 line::@1
  b1:
  //SEG113 [61] (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ) -- zpby1=zpby2_minus_zpby3 
    lda x0
    sec
    sbc x1
    sta xd
  //SEG114 [62] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@9 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ) -- zpby1_ge_zpby2_then_la1 
    lda y0
    cmp y1
    bcs b9
    jmp b23
  //SEG115 line::@23
  b23:
  //SEG116 [63] (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ) -- zpby1=zpby2_minus_zpby3 
    lda y1
    sec
    sbc y0
    sta yd_3
  //SEG117 [64] if((byte) line::yd#3>=(byte) line::xd#0) goto line::@10 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd_3
    cmp xd
    bcs b10
    jmp b24
  //SEG118 line::@24
  b24:
  //SEG119 [65] (byte) line_xdyd::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ] ) -- zpby1=zpby2 
    lda x1
    sta line_xdyd.x
  //SEG120 [66] (byte) line_xdyd::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_xdyd.y
  //SEG121 [67] (byte) line_xdyd::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ] ) -- zpby1=zpby2 
    lda x0
    sta line_xdyd.x1
  //SEG122 [68] (byte) line_xdyd::xd#1 ← (byte) line::xd#0 [ line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyd.xd
  //SEG123 [69] (byte) line_xdyd::yd#1 ← (byte) line::yd#3 [ line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ] ) -- zpby1=zpby2 
    lda yd_3
    sta line_xdyd.yd
  //SEG124 [70] call line_xdyd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG125 [150] phi from line::@24 to line_xdyd [phi:line::@24->line_xdyd]
  line_xdyd_from_b24:
  //SEG126 [150] phi (byte) line_xdyd::x1#6 = (byte) line_xdyd::x1#1 [phi:line::@24->line_xdyd#0] -- register_copy 
  //SEG127 [150] phi (byte) line_xdyd::xd#5 = (byte) line_xdyd::xd#1 [phi:line::@24->line_xdyd#1] -- register_copy 
  //SEG128 [150] phi (byte) line_xdyd::y#5 = (byte) line_xdyd::y#1 [phi:line::@24->line_xdyd#2] -- register_copy 
  //SEG129 [150] phi (byte) line_xdyd::x#6 = (byte) line_xdyd::x#1 [phi:line::@24->line_xdyd#3] -- register_copy 
  //SEG130 [150] phi (byte) line_xdyd::yd#2 = (byte) line_xdyd::yd#1 [phi:line::@24->line_xdyd#4] -- register_copy 
    jsr line_xdyd
    jmp breturn
  //SEG131 line::@10
  b10:
  //SEG132 [71] (byte) line_ydxd::y#1 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ] ) -- zpby1=zpby2 
    lda y0
    sta line_ydxd.y
  //SEG133 [72] (byte) line_ydxd::x#1 ← (byte) line::x0#0 [ line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ] ) -- zpby1=zpby2 
    lda x0
    sta line_ydxd.x
  //SEG134 [73] (byte) line_ydxd::y1#1 ← (byte) line::y1#0 [ line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxd.y1
  //SEG135 [74] (byte) line_ydxd::yd#1 ← (byte) line::yd#3 [ line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ] ) -- zpby1=zpby2 
    lda yd_3
    sta line_ydxd.yd
  //SEG136 [75] (byte) line_ydxd::xd#1 ← (byte) line::xd#0 [ line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxd.xd
  //SEG137 [76] call line_ydxd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG138 [135] phi from line::@10 to line_ydxd [phi:line::@10->line_ydxd]
  line_ydxd_from_b10:
  //SEG139 [135] phi (byte) line_ydxd::y1#6 = (byte) line_ydxd::y1#1 [phi:line::@10->line_ydxd#0] -- register_copy 
  //SEG140 [135] phi (byte) line_ydxd::yd#5 = (byte) line_ydxd::yd#1 [phi:line::@10->line_ydxd#1] -- register_copy 
  //SEG141 [135] phi (byte) line_ydxd::y#6 = (byte) line_ydxd::y#1 [phi:line::@10->line_ydxd#2] -- register_copy 
  //SEG142 [135] phi (byte) line_ydxd::x#5 = (byte) line_ydxd::x#1 [phi:line::@10->line_ydxd#3] -- register_copy 
  //SEG143 [135] phi (byte) line_ydxd::xd#2 = (byte) line_ydxd::xd#1 [phi:line::@10->line_ydxd#4] -- register_copy 
    jsr line_ydxd
    jmp breturn
  //SEG144 line::@9
  b9:
  //SEG145 [77] (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ) -- zpby1=zpby2_minus_zpby3 
    lda y0
    sec
    sbc y1
    sta yd_10
  //SEG146 [78] if((byte) line::yd#10>=(byte) line::xd#0) goto line::@13 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd_10
    cmp xd
    bcs b13
    jmp b27
  //SEG147 line::@27
  b27:
  //SEG148 [79] (byte) line_xdyi::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ] ) -- zpby1=zpby2 
    lda x1
    sta line_xdyi.x
  //SEG149 [80] (byte) line_xdyi::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_xdyi.y
  //SEG150 [81] (byte) line_xdyi::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ] ) -- zpby1=zpby2 
    lda x0
    sta line_xdyi.x1
  //SEG151 [82] (byte) line_xdyi::xd#1 ← (byte) line::xd#0 [ line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyi.xd
  //SEG152 [83] (byte) line_xdyi::yd#1 ← (byte) line::yd#10 [ line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ] ) -- zpby1=zpby2 
    lda yd_10
    sta line_xdyi.yd
  //SEG153 [84] call line_xdyi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG154 [120] phi from line::@27 to line_xdyi [phi:line::@27->line_xdyi]
  line_xdyi_from_b27:
  //SEG155 [120] phi (byte) line_xdyi::x1#6 = (byte) line_xdyi::x1#1 [phi:line::@27->line_xdyi#0] -- register_copy 
  //SEG156 [120] phi (byte) line_xdyi::xd#5 = (byte) line_xdyi::xd#1 [phi:line::@27->line_xdyi#1] -- register_copy 
  //SEG157 [120] phi (byte) line_xdyi::y#5 = (byte) line_xdyi::y#1 [phi:line::@27->line_xdyi#2] -- register_copy 
  //SEG158 [120] phi (byte) line_xdyi::x#6 = (byte) line_xdyi::x#1 [phi:line::@27->line_xdyi#3] -- register_copy 
  //SEG159 [120] phi (byte) line_xdyi::yd#2 = (byte) line_xdyi::yd#1 [phi:line::@27->line_xdyi#4] -- register_copy 
    jsr line_xdyi
    jmp breturn
  //SEG160 line::@13
  b13:
  //SEG161 [85] (byte) line_ydxi::y#1 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxi.y
  //SEG162 [86] (byte) line_ydxi::x#1 ← (byte) line::x1#0 [ line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ] ) -- zpby1=zpby2 
    lda x1
    sta line_ydxi.x
  //SEG163 [87] (byte) line_ydxi::y1#1 ← (byte) line::y0#0 [ line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ] ) -- zpby1=zpby2 
    lda y0
    sta line_ydxi.y1
  //SEG164 [88] (byte) line_ydxi::yd#1 ← (byte) line::yd#10 [ line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ] ) -- zpby1=zpby2 
    lda yd_10
    sta line_ydxi.yd
  //SEG165 [89] (byte) line_ydxi::xd#1 ← (byte) line::xd#0 [ line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxi.xd
  //SEG166 [90] call line_ydxi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG167 [91] phi from line::@13 to line_ydxi [phi:line::@13->line_ydxi]
  line_ydxi_from_b13:
  //SEG168 [91] phi (byte) line_ydxi::y1#6 = (byte) line_ydxi::y1#1 [phi:line::@13->line_ydxi#0] -- register_copy 
  //SEG169 [91] phi (byte) line_ydxi::yd#5 = (byte) line_ydxi::yd#1 [phi:line::@13->line_ydxi#1] -- register_copy 
  //SEG170 [91] phi (byte) line_ydxi::y#6 = (byte) line_ydxi::y#1 [phi:line::@13->line_ydxi#2] -- register_copy 
  //SEG171 [91] phi (byte) line_ydxi::x#5 = (byte) line_ydxi::x#1 [phi:line::@13->line_ydxi#3] -- register_copy 
  //SEG172 [91] phi (byte) line_ydxi::xd#2 = (byte) line_ydxi::xd#1 [phi:line::@13->line_ydxi#4] -- register_copy 
    jsr line_ydxi
    jmp breturn
}
//SEG173 line_ydxi
line_ydxi: {
    .label _8 = $34
    .label y = 7
    .label x = 6
    .label y1 = 5
    .label yd = 4
    .label xd = 3
    .label e = 8
  //SEG174 [92] (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda xd
    lsr
    sta e
  //SEG175 [93] phi from line_ydxi line_ydxi::@2 to line_ydxi::@1 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1]
  b1_from_line_ydxi:
  b1_from_b2:
  //SEG176 [93] phi (byte) line_ydxi::e#3 = (byte) line_ydxi::e#0 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#0] -- register_copy 
  //SEG177 [93] phi (byte) line_ydxi::y#3 = (byte) line_ydxi::y#6 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#1] -- register_copy 
  //SEG178 [93] phi (byte) line_ydxi::x#3 = (byte) line_ydxi::x#5 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#2] -- register_copy 
    jmp b1
  //SEG179 line_ydxi::@1
  b1:
  //SEG180 [94] (byte) plot::x#2 ← (byte) line_ydxi::x#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] ) -- zpby1=zpby2 
    lda x
    sta plot.x
  //SEG181 [95] (byte) plot::y#2 ← (byte) line_ydxi::y#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] ) -- zpby1=zpby2 
    lda y
    sta plot.y
  //SEG182 [96] call plot param-assignment [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] )
  //SEG183 [106] phi from line_ydxi::@1 to plot [phi:line_ydxi::@1->plot]
  plot_from_b1:
  //SEG184 [106] phi (byte) plot::y#4 = (byte) plot::y#2 [phi:line_ydxi::@1->plot#0] -- register_copy 
  //SEG185 [106] phi (byte) plot::x#4 = (byte) plot::x#2 [phi:line_ydxi::@1->plot#1] -- register_copy 
    jsr plot
    jmp b5
  //SEG186 line_ydxi::@5
  b5:
  //SEG187 [97] (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG188 [98] (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc xd
    sta e
  //SEG189 [99] if((byte) line_ydxi::yd#5>=(byte) line_ydxi::e#1) goto line_ydxi::@2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp e
    bcs b2_from_b5
    jmp b3
  //SEG190 line_ydxi::@3
  b3:
  //SEG191 [100] (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] ) -- zpby1=zpby1_plus_1 
    inc x
  //SEG192 [101] (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc yd
    sta e
  //SEG193 [102] phi from line_ydxi::@3 line_ydxi::@5 to line_ydxi::@2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2]
  b2_from_b3:
  b2_from_b5:
  //SEG194 [102] phi (byte) line_ydxi::e#6 = (byte) line_ydxi::e#2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2#0] -- register_copy 
  //SEG195 [102] phi (byte) line_ydxi::x#6 = (byte) line_ydxi::x#2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2#1] -- register_copy 
    jmp b2
  //SEG196 line_ydxi::@2
  b2:
  //SEG197 [103] (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] ) -- zpby1=zpby2_plus_1 
    lda y1
    clc
    adc #1
    sta _8
  //SEG198 [104] if((byte) line_ydxi::y#2<(byte~) line_ydxi::$8) goto line_ydxi::@1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] ) -- zpby1_lt_zpby2_then_la1 
    lda y
    cmp _8
    bcc b1_from_b2
    jmp breturn
  //SEG199 line_ydxi::@return
  breturn:
  //SEG200 [105] return  [ ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 ] )
    rts
}
//SEG201 plot
plot: {
    .label _0 = $35
    .label _1 = $38
    .label _2 = $3b
    .label _3 = $3e
    .label _5 = $43
    .label _6 = $44
    .label x = 9
    .label y = $a
    .label plotter_x = $36
    .label plotter_x_2 = $39
    .label plotter_y = $3c
    .label plotter_y_2 = $3f
    .label plotter = $41
  //SEG202 [107] (byte~) plot::$0 ← (const byte[]) plot_xhi#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::$0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::$0 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx x
    lda plot_xhi,x
    sta _0
  //SEG203 [108] (byte*) plot::plotter_x#1 ← ((byte*))(byte/signed byte/word/signed word) 0 hi= (byte~) plot::$0 [ plot::x#4 plot::y#4 plot::plotter_x#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] ) -- zpptrby1=cowo1_sethi_zpby1 
    lda _0
    sta plotter_x+1
    lda #<0
    sta plotter_x
  //SEG204 [109] (byte~) plot::$1 ← (const byte[]) plot_xlo#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx x
    lda plot_xlo,x
    sta _1
  //SEG205 [110] (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1 [ plot::x#4 plot::y#4 plot::plotter_x#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] ) -- zpptrby1=zpptrby2_setlo_zpby1 
    lda _1
    sta plotter_x_2
    lda plotter_x+1
    sta plotter_x_2+1
  //SEG206 [111] (byte~) plot::$2 ← (const byte[]) plot_yhi#0 *idx (byte) plot::y#4 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx y
    lda plot_yhi,x
    sta _2
  //SEG207 [112] (word) plot::plotter_y#1 ← (byte/signed byte/word/signed word) 0 hi= (byte~) plot::$2 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] ) -- zpwo1=coby1_sethi_zpby1 
    lda #<0
    sta plotter_y
    lda _2
    sta plotter_y+1
  //SEG208 [113] (byte~) plot::$3 ← (const byte[]) plot_ylo#0 *idx (byte) plot::y#4 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx y
    lda plot_ylo,x
    sta _3
  //SEG209 [114] (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ) -- zpwo1=zpwo2_setlo_zpby1 
    lda _3
    sta plotter_y_2
    lda plotter_y+1
    sta plotter_y_2+1
  //SEG210 [115] (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2 [ plot::x#4 plot::plotter#0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] ) -- zpptrby1=zpptrby2_plus_zpwo1 
    lda plotter
    clc
    adc plotter_x_2
    sta plotter_y_2
    lda plotter+1
    adc plotter_x_2+1
    sta plotter_y_2+1
  //SEG211 [116] (byte~) plot::$5 ← (const byte[]) plot_bit#0 *idx (byte) plot::x#4 [ plot::plotter#0 plot::$5 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$5 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx x
    lda plot_bit,x
    sta _5
  //SEG212 [117] (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5 [ plot::plotter#0 plot::$6 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] ) -- zpby1=_deref_zpptrby1_bor_zpby2 
    ldy #0
    lda (plotter),y
    ora _5
    sta _6
  //SEG213 [118] *((byte*) plot::plotter#0) ← (byte~) plot::$6 [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ) -- _deref_zpptrby1=zpby1 
    ldy #0
    lda _6
    sta (plotter),y
    jmp breturn
  //SEG214 plot::@return
  breturn:
  //SEG215 [119] return  [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
    rts
}
//SEG216 line_xdyi
line_xdyi: {
    .label _8 = $45
    .label x = $e
    .label y = $f
    .label x1 = $d
    .label xd = $c
    .label yd = $b
    .label e = $10
  //SEG217 [121] (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda yd
    lsr
    sta e
  //SEG218 [122] phi from line_xdyi line_xdyi::@2 to line_xdyi::@1 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1]
  b1_from_line_xdyi:
  b1_from_b2:
  //SEG219 [122] phi (byte) line_xdyi::e#3 = (byte) line_xdyi::e#0 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#0] -- register_copy 
  //SEG220 [122] phi (byte) line_xdyi::y#3 = (byte) line_xdyi::y#5 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#1] -- register_copy 
  //SEG221 [122] phi (byte) line_xdyi::x#3 = (byte) line_xdyi::x#6 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#2] -- register_copy 
    jmp b1
  //SEG222 line_xdyi::@1
  b1:
  //SEG223 [123] (byte) plot::x#0 ← (byte) line_xdyi::x#3 [ plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ) -- zpby1=zpby2 
    lda x
    sta plot.x
  //SEG224 [124] (byte) plot::y#0 ← (byte) line_xdyi::y#3 [ plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ) -- zpby1=zpby2 
    lda y
    sta plot.y
  //SEG225 [125] call plot param-assignment [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
  //SEG226 [106] phi from line_xdyi::@1 to plot [phi:line_xdyi::@1->plot]
  plot_from_b1:
  //SEG227 [106] phi (byte) plot::y#4 = (byte) plot::y#0 [phi:line_xdyi::@1->plot#0] -- register_copy 
  //SEG228 [106] phi (byte) plot::x#4 = (byte) plot::x#0 [phi:line_xdyi::@1->plot#1] -- register_copy 
    jsr plot
    jmp b5
  //SEG229 line_xdyi::@5
  b5:
  //SEG230 [126] (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] ) -- zpby1=zpby1_plus_1 
    inc x
  //SEG231 [127] (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc yd
    sta e
  //SEG232 [128] if((byte) line_xdyi::xd#5>=(byte) line_xdyi::e#1) goto line_xdyi::@2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda xd
    cmp e
    bcs b2_from_b5
    jmp b3
  //SEG233 line_xdyi::@3
  b3:
  //SEG234 [129] (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG235 [130] (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc xd
    sta e
  //SEG236 [131] phi from line_xdyi::@3 line_xdyi::@5 to line_xdyi::@2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2]
  b2_from_b3:
  b2_from_b5:
  //SEG237 [131] phi (byte) line_xdyi::e#6 = (byte) line_xdyi::e#2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2#0] -- register_copy 
  //SEG238 [131] phi (byte) line_xdyi::y#6 = (byte) line_xdyi::y#2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2#1] -- register_copy 
    jmp b2
  //SEG239 line_xdyi::@2
  b2:
  //SEG240 [132] (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] ) -- zpby1=zpby2_plus_1 
    lda x1
    clc
    adc #1
    sta _8
  //SEG241 [133] if((byte) line_xdyi::x#2<(byte~) line_xdyi::$8) goto line_xdyi::@1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] ) -- zpby1_lt_zpby2_then_la1 
    lda x
    cmp _8
    bcc b1_from_b2
    jmp breturn
  //SEG242 line_xdyi::@return
  breturn:
  //SEG243 [134] return  [ ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 ] )
    rts
}
//SEG244 line_ydxd
line_ydxd: {
    .label _8 = $46
    .label y = $15
    .label x = $14
    .label y1 = $13
    .label yd = $12
    .label xd = $11
    .label e = $16
  //SEG245 [136] (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda xd
    lsr
    sta e
  //SEG246 [137] phi from line_ydxd line_ydxd::@2 to line_ydxd::@1 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1]
  b1_from_line_ydxd:
  b1_from_b2:
  //SEG247 [137] phi (byte) line_ydxd::e#3 = (byte) line_ydxd::e#0 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#0] -- register_copy 
  //SEG248 [137] phi (byte) line_ydxd::y#3 = (byte) line_ydxd::y#6 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#1] -- register_copy 
  //SEG249 [137] phi (byte) line_ydxd::x#3 = (byte) line_ydxd::x#5 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#2] -- register_copy 
    jmp b1
  //SEG250 line_ydxd::@1
  b1:
  //SEG251 [138] (byte) plot::x#3 ← (byte) line_ydxd::x#3 [ plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ) -- zpby1=zpby2 
    lda x
    sta plot.x
  //SEG252 [139] (byte) plot::y#3 ← (byte) line_ydxd::y#3 [ plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ) -- zpby1=zpby2 
    lda y
    sta plot.y
  //SEG253 [140] call plot param-assignment [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
  //SEG254 [106] phi from line_ydxd::@1 to plot [phi:line_ydxd::@1->plot]
  plot_from_b1:
  //SEG255 [106] phi (byte) plot::y#4 = (byte) plot::y#3 [phi:line_ydxd::@1->plot#0] -- register_copy 
  //SEG256 [106] phi (byte) plot::x#4 = (byte) plot::x#3 [phi:line_ydxd::@1->plot#1] -- register_copy 
    jsr plot
    jmp b5
  //SEG257 line_ydxd::@5
  b5:
  //SEG258 [141] (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG259 [142] (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc xd
    sta e
  //SEG260 [143] if((byte) line_ydxd::yd#5>=(byte) line_ydxd::e#1) goto line_ydxd::@2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp e
    bcs b2_from_b5
    jmp b3
  //SEG261 line_ydxd::@3
  b3:
  //SEG262 [144] (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] ) -- zpby1=zpby1_minus_1 
    dec x
  //SEG263 [145] (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc yd
    sta e
  //SEG264 [146] phi from line_ydxd::@3 line_ydxd::@5 to line_ydxd::@2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2]
  b2_from_b3:
  b2_from_b5:
  //SEG265 [146] phi (byte) line_ydxd::e#6 = (byte) line_ydxd::e#2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2#0] -- register_copy 
  //SEG266 [146] phi (byte) line_ydxd::x#6 = (byte) line_ydxd::x#2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2#1] -- register_copy 
    jmp b2
  //SEG267 line_ydxd::@2
  b2:
  //SEG268 [147] (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] ) -- zpby1=zpby2_plus_1 
    lda y1
    clc
    adc #1
    sta _8
  //SEG269 [148] if((byte) line_ydxd::y#2<(byte~) line_ydxd::$8) goto line_ydxd::@1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] ) -- zpby1_lt_zpby2_then_la1 
    lda y
    cmp _8
    bcc b1_from_b2
    jmp breturn
  //SEG270 line_ydxd::@return
  breturn:
  //SEG271 [149] return  [ ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 ] )
    rts
}
//SEG272 line_xdyd
line_xdyd: {
    .label _8 = $47
    .label x = $1a
    .label y = $1b
    .label x1 = $19
    .label xd = $18
    .label yd = $17
    .label e = $1c
  //SEG273 [151] (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda yd
    lsr
    sta e
  //SEG274 [152] phi from line_xdyd line_xdyd::@2 to line_xdyd::@1 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1]
  b1_from_line_xdyd:
  b1_from_b2:
  //SEG275 [152] phi (byte) line_xdyd::e#3 = (byte) line_xdyd::e#0 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#0] -- register_copy 
  //SEG276 [152] phi (byte) line_xdyd::y#3 = (byte) line_xdyd::y#5 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#1] -- register_copy 
  //SEG277 [152] phi (byte) line_xdyd::x#3 = (byte) line_xdyd::x#6 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#2] -- register_copy 
    jmp b1
  //SEG278 line_xdyd::@1
  b1:
  //SEG279 [153] (byte) plot::x#1 ← (byte) line_xdyd::x#3 [ plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ) -- zpby1=zpby2 
    lda x
    sta plot.x
  //SEG280 [154] (byte) plot::y#1 ← (byte) line_xdyd::y#3 [ plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ) -- zpby1=zpby2 
    lda y
    sta plot.y
  //SEG281 [155] call plot param-assignment [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
  //SEG282 [106] phi from line_xdyd::@1 to plot [phi:line_xdyd::@1->plot]
  plot_from_b1:
  //SEG283 [106] phi (byte) plot::y#4 = (byte) plot::y#1 [phi:line_xdyd::@1->plot#0] -- register_copy 
  //SEG284 [106] phi (byte) plot::x#4 = (byte) plot::x#1 [phi:line_xdyd::@1->plot#1] -- register_copy 
    jsr plot
    jmp b5
  //SEG285 line_xdyd::@5
  b5:
  //SEG286 [156] (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] ) -- zpby1=zpby1_plus_1 
    inc x
  //SEG287 [157] (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc yd
    sta e
  //SEG288 [158] if((byte) line_xdyd::xd#5>=(byte) line_xdyd::e#1) goto line_xdyd::@2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda xd
    cmp e
    bcs b2_from_b5
    jmp b3
  //SEG289 line_xdyd::@3
  b3:
  //SEG290 [159] (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] ) -- zpby1=zpby1_minus_1 
    dec y
  //SEG291 [160] (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc xd
    sta e
  //SEG292 [161] phi from line_xdyd::@3 line_xdyd::@5 to line_xdyd::@2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2]
  b2_from_b3:
  b2_from_b5:
  //SEG293 [161] phi (byte) line_xdyd::e#6 = (byte) line_xdyd::e#2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2#0] -- register_copy 
  //SEG294 [161] phi (byte) line_xdyd::y#6 = (byte) line_xdyd::y#2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2#1] -- register_copy 
    jmp b2
  //SEG295 line_xdyd::@2
  b2:
  //SEG296 [162] (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] ) -- zpby1=zpby2_plus_1 
    lda x1
    clc
    adc #1
    sta _8
  //SEG297 [163] if((byte) line_xdyd::x#2<(byte~) line_xdyd::$8) goto line_xdyd::@1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] ) -- zpby1_lt_zpby2_then_la1 
    lda x
    cmp _8
    bcc b1_from_b2
    jmp breturn
  //SEG298 line_xdyd::@return
  breturn:
  //SEG299 [164] return  [ ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 ] )
    rts
}
//SEG300 init_plot_tables
init_plot_tables: {
    .label _0 = $48
    .label _6 = $49
    .label _7 = $4a
    .label _8 = $4b
    .label _9 = $4c
    .label _10 = $4d
    .label bits = $1e
    .label x = $1d
    .label y = $1f
    .label yoffs = $20
  //SEG301 [166] phi from init_plot_tables to init_plot_tables::@1 [phi:init_plot_tables->init_plot_tables::@1]
  b1_from_init_plot_tables:
  //SEG302 [166] phi (byte) init_plot_tables::bits#3 = (byte/word/signed word) 128 [phi:init_plot_tables->init_plot_tables::@1#0] -- zpby1=coby1 
    lda #$80
    sta bits
  //SEG303 [166] phi (byte) init_plot_tables::x#2 = (byte/signed byte/word/signed word) 0 [phi:init_plot_tables->init_plot_tables::@1#1] -- zpby1=coby1 
    lda #0
    sta x
    jmp b1
  //SEG304 [166] phi from init_plot_tables::@2 to init_plot_tables::@1 [phi:init_plot_tables::@2->init_plot_tables::@1]
  b1_from_b2:
  //SEG305 [166] phi (byte) init_plot_tables::bits#3 = (byte) init_plot_tables::bits#4 [phi:init_plot_tables::@2->init_plot_tables::@1#0] -- register_copy 
  //SEG306 [166] phi (byte) init_plot_tables::x#2 = (byte) init_plot_tables::x#1 [phi:init_plot_tables::@2->init_plot_tables::@1#1] -- register_copy 
    jmp b1
  //SEG307 init_plot_tables::@1
  b1:
  //SEG308 [167] (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ) -- zpby1=zpby2_band_coby1 
    lda x
    and #$f8
    sta _0
  //SEG309 [168] *((const byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_zpby1=zpby2 
    lda _0
    ldx x
    sta plot_xlo,x
  //SEG310 [169] *((const byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← >(const byte*) BITMAP#0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_zpby1=coby2 
    lda #>BITMAP
    ldx x
    sta plot_xhi,x
  //SEG311 [170] *((const byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_zpby1=zpby2 
    lda bits
    ldx x
    sta plot_bit,x
  //SEG312 [171] (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ) -- zpby1=zpby1_ror_1 
    lsr bits
  //SEG313 [172] if((byte) init_plot_tables::bits#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ) -- zpby1_neq_0_then_la1 
    lda bits
    bne b10_from_b1
  //SEG314 [173] phi from init_plot_tables::@1 to init_plot_tables::@2 [phi:init_plot_tables::@1->init_plot_tables::@2]
  b2_from_b1:
  //SEG315 [173] phi (byte) init_plot_tables::bits#4 = (byte/word/signed word) 128 [phi:init_plot_tables::@1->init_plot_tables::@2#0] -- zpby1=coby1 
    lda #$80
    sta bits
    jmp b2
  //SEG316 init_plot_tables::@2
  b2:
  //SEG317 [174] (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ) -- zpby1=_inc_zpby1 
    inc x
  //SEG318 [175] if((byte) init_plot_tables::x#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@1 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ) -- zpby1_neq_0_then_la1 
    lda x
    bne b1_from_b2
  //SEG319 [176] phi from init_plot_tables::@2 to init_plot_tables::@3 [phi:init_plot_tables::@2->init_plot_tables::@3]
  b3_from_b2:
  //SEG320 [176] phi (byte*) init_plot_tables::yoffs#2 = ((byte*))(byte/signed byte/word/signed word) 0 [phi:init_plot_tables::@2->init_plot_tables::@3#0] -- zpptrby1=cowo1 
    lda #<0
    sta yoffs
    lda #>0
    sta yoffs+1
  //SEG321 [176] phi (byte) init_plot_tables::y#2 = (byte/signed byte/word/signed word) 0 [phi:init_plot_tables::@2->init_plot_tables::@3#1] -- zpby1=coby1 
    lda #0
    sta y
    jmp b3
  //SEG322 [176] phi from init_plot_tables::@4 to init_plot_tables::@3 [phi:init_plot_tables::@4->init_plot_tables::@3]
  b3_from_b4:
  //SEG323 [176] phi (byte*) init_plot_tables::yoffs#2 = (byte*) init_plot_tables::yoffs#4 [phi:init_plot_tables::@4->init_plot_tables::@3#0] -- register_copy 
  //SEG324 [176] phi (byte) init_plot_tables::y#2 = (byte) init_plot_tables::y#1 [phi:init_plot_tables::@4->init_plot_tables::@3#1] -- register_copy 
    jmp b3
  //SEG325 init_plot_tables::@3
  b3:
  //SEG326 [177] (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ) -- zpby1=zpby2_band_coby1 
    lda y
    and #7
    sta _6
  //SEG327 [178] (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ] ) -- zpby1=_lo_zpptrby1 
    lda yoffs
    sta _7
  //SEG328 [179] (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ] ) -- zpby1=zpby2_bor_zpby3 
    lda _6
    ora _7
    sta _8
  //SEG329 [180] *((const byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- cowo1_derefidx_zpby1=zpby2 
    lda _8
    ldx y
    sta plot_ylo,x
  //SEG330 [181] (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ) -- zpby1=_hi_zpptrby1 
    lda yoffs+1
    sta _9
  //SEG331 [182] *((const byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- cowo1_derefidx_zpby1=zpby2 
    lda _9
    ldx y
    sta plot_yhi,x
  //SEG332 [183] (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ) -- zpby1=zpby2_band_coby1 
    lda y
    and #7
    sta _10
  //SEG333 [184] if((byte~) init_plot_tables::$10!=(byte/signed byte/word/signed word) 7) goto init_plot_tables::@4 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- zpby1_neq_coby1_then_la1 
    lda _10
    cmp #7
    bne b4_from_b3
    jmp b7
  //SEG334 init_plot_tables::@7
  b7:
  //SEG335 [185] (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ) -- zpptrby1=zpptrby1_plus_cowo1 
    lda yoffs
    clc
    adc #<$140
    sta yoffs
    lda yoffs+1
    adc #>$140
    sta yoffs+1
  //SEG336 [186] phi from init_plot_tables::@3 init_plot_tables::@7 to init_plot_tables::@4 [phi:init_plot_tables::@3/init_plot_tables::@7->init_plot_tables::@4]
  b4_from_b3:
  b4_from_b7:
  //SEG337 [186] phi (byte*) init_plot_tables::yoffs#4 = (byte*) init_plot_tables::yoffs#2 [phi:init_plot_tables::@3/init_plot_tables::@7->init_plot_tables::@4#0] -- register_copy 
    jmp b4
  //SEG338 init_plot_tables::@4
  b4:
  //SEG339 [187] (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ) -- zpby1=_inc_zpby1 
    inc y
  //SEG340 [188] if((byte) init_plot_tables::y#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@3 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ) -- zpby1_neq_0_then_la1 
    lda y
    bne b3_from_b4
    jmp breturn
  //SEG341 init_plot_tables::@return
  breturn:
  //SEG342 [189] return  [ ] ( main:2::init_plot_tables:10 [ ] )
    rts
  //SEG343 [190] phi from init_plot_tables::@1 to init_plot_tables::@10 [phi:init_plot_tables::@1->init_plot_tables::@10]
  b10_from_b1:
    jmp b10
  //SEG344 init_plot_tables::@10
  b10:
  //SEG345 [173] phi from init_plot_tables::@10 to init_plot_tables::@2 [phi:init_plot_tables::@10->init_plot_tables::@2]
  b2_from_b10:
  //SEG346 [173] phi (byte) init_plot_tables::bits#4 = (byte) init_plot_tables::bits#1 [phi:init_plot_tables::@10->init_plot_tables::@2#0] -- register_copy 
    jmp b2
}
//SEG347 init_screen
init_screen: {
    .label b = $22
    .label c = $24
  //SEG348 [192] phi from init_screen to init_screen::@1 [phi:init_screen->init_screen::@1]
  b1_from_init_screen:
  //SEG349 [192] phi (byte*) init_screen::b#2 = (const byte*) BITMAP#0 [phi:init_screen->init_screen::@1#0] -- zpptrby1=cowo1 
    lda #<BITMAP
    sta b
    lda #>BITMAP
    sta b+1
    jmp b1
  //SEG350 [192] phi from init_screen::@1 to init_screen::@1 [phi:init_screen::@1->init_screen::@1]
  b1_from_b1:
  //SEG351 [192] phi (byte*) init_screen::b#2 = (byte*) init_screen::b#1 [phi:init_screen::@1->init_screen::@1#0] -- register_copy 
    jmp b1
  //SEG352 init_screen::@1
  b1:
  //SEG353 [193] *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0 [ init_screen::b#2 ] ( main:2::init_screen:8 [ init_screen::b#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #0
    sta (b),y
  //SEG354 [194] (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc b
    bne !+
    inc b+1
  !:
  //SEG355 [195] if((byte*) init_screen::b#1!=(const byte*) BITMAP#0+(word/signed word) 8192) goto init_screen::@1 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] ) -- zpptrby1_neq_cowo1_then_la1 
    lda b+1
    cmp #>BITMAP+$2000
    bne b1_from_b1
    lda b
    cmp #<BITMAP+$2000
    bne b1_from_b1
  //SEG356 [196] phi from init_screen::@1 to init_screen::@2 [phi:init_screen::@1->init_screen::@2]
  b2_from_b1:
  //SEG357 [196] phi (byte*) init_screen::c#2 = (const byte*) SCREEN#0 [phi:init_screen::@1->init_screen::@2#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta c
    lda #>SCREEN
    sta c+1
    jmp b2
  //SEG358 [196] phi from init_screen::@2 to init_screen::@2 [phi:init_screen::@2->init_screen::@2]
  b2_from_b2:
  //SEG359 [196] phi (byte*) init_screen::c#2 = (byte*) init_screen::c#1 [phi:init_screen::@2->init_screen::@2#0] -- register_copy 
    jmp b2
  //SEG360 init_screen::@2
  b2:
  //SEG361 [197] *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20 [ init_screen::c#2 ] ( main:2::init_screen:8 [ init_screen::c#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #$14
    sta (c),y
  //SEG362 [198] (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc c
    bne !+
    inc c+1
  !:
  //SEG363 [199] if((byte*) init_screen::c#1!=(const byte*) SCREEN#0+(word/signed word) 1024) goto init_screen::@2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] ) -- zpptrby1_neq_cowo1_then_la1 
    lda c+1
    cmp #>SCREEN+$400
    bne b2_from_b2
    lda c
    cmp #<SCREEN+$400
    bne b2_from_b2
    jmp breturn
  //SEG364 init_screen::@return
  breturn:
  //SEG365 [200] return  [ ] ( main:2::init_screen:8 [ ] )
    rts
}

REGISTER UPLIFT POTENTIAL REGISTERS
Equivalence Class zp ZP_BYTE:67 [ plot::$5 ] has ALU potential.
Equivalence Class zp ZP_BYTE:74 [ init_plot_tables::$7 ] has ALU potential.
Statement [4] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [5] *((const byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [6] *((const byte*) D011#0) ← (const byte) BMM#0|(const byte) DEN#0|(const byte) RSEL#0|(byte/signed byte/word/signed word) 3 [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [7] *((const byte*) D018#0) ← (byte/signed byte/word/signed word) 24 [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [30] (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:2 [ lines::l#2 lines::l#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:42 [ line::x0#0 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:43 [ line::x1#0 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:44 [ line::y0#0 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:45 [ line::y1#0 ]
Statement [32] (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:46 [ line::xd#1 ]
Statement [47] (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ) always clobbers reg byte a 
Statement [61] (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ) always clobbers reg byte a 
Statement [63] (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:49 [ line::xd#0 ]
Statement [77] (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ) always clobbers reg byte a 
Statement [101] (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:3 [ line_ydxi::xd#2 line_ydxi::xd#1 line_ydxi::xd#0 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:4 [ line_ydxi::yd#5 line_ydxi::yd#1 line_ydxi::yd#0 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:5 [ line_ydxi::y1#6 line_ydxi::y1#1 line_ydxi::y1#0 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:7 [ line_ydxi::y#3 line_ydxi::y#6 line_ydxi::y#1 line_ydxi::y#0 line_ydxi::y#2 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:6 [ line_ydxi::x#3 line_ydxi::x#5 line_ydxi::x#1 line_ydxi::x#0 line_ydxi::x#6 line_ydxi::x#2 ]
Statement [108] (byte*) plot::plotter_x#1 ← ((byte*))(byte/signed byte/word/signed word) 0 hi= (byte~) plot::$0 [ plot::x#4 plot::y#4 plot::plotter_x#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:8 [ line_ydxi::e#3 line_ydxi::e#0 line_ydxi::e#6 line_ydxi::e#2 line_ydxi::e#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:9 [ plot::x#4 plot::x#1 plot::x#0 plot::x#3 plot::x#2 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:10 [ plot::y#4 plot::y#1 plot::y#0 plot::y#3 plot::y#2 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:11 [ line_xdyi::yd#2 line_xdyi::yd#0 line_xdyi::yd#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:12 [ line_xdyi::xd#5 line_xdyi::xd#0 line_xdyi::xd#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:13 [ line_xdyi::x1#6 line_xdyi::x1#0 line_xdyi::x1#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:14 [ line_xdyi::x#3 line_xdyi::x#6 line_xdyi::x#0 line_xdyi::x#1 line_xdyi::x#2 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:15 [ line_xdyi::y#3 line_xdyi::y#5 line_xdyi::y#0 line_xdyi::y#1 line_xdyi::y#6 line_xdyi::y#2 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:16 [ line_xdyi::e#3 line_xdyi::e#0 line_xdyi::e#6 line_xdyi::e#2 line_xdyi::e#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:17 [ line_ydxd::xd#2 line_ydxd::xd#1 line_ydxd::xd#0 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:18 [ line_ydxd::yd#5 line_ydxd::yd#1 line_ydxd::yd#0 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:19 [ line_ydxd::y1#6 line_ydxd::y1#1 line_ydxd::y1#0 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:20 [ line_ydxd::x#3 line_ydxd::x#5 line_ydxd::x#1 line_ydxd::x#0 line_ydxd::x#6 line_ydxd::x#2 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:21 [ line_ydxd::y#3 line_ydxd::y#6 line_ydxd::y#1 line_ydxd::y#0 line_ydxd::y#2 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:22 [ line_ydxd::e#3 line_ydxd::e#0 line_ydxd::e#6 line_ydxd::e#2 line_ydxd::e#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:23 [ line_xdyd::yd#2 line_xdyd::yd#0 line_xdyd::yd#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:24 [ line_xdyd::xd#5 line_xdyd::xd#0 line_xdyd::xd#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:25 [ line_xdyd::x1#6 line_xdyd::x1#0 line_xdyd::x1#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:26 [ line_xdyd::x#3 line_xdyd::x#6 line_xdyd::x#0 line_xdyd::x#1 line_xdyd::x#2 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:27 [ line_xdyd::y#3 line_xdyd::y#5 line_xdyd::y#0 line_xdyd::y#1 line_xdyd::y#6 line_xdyd::y#2 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:28 [ line_xdyd::e#3 line_xdyd::e#0 line_xdyd::e#6 line_xdyd::e#2 line_xdyd::e#1 ]
Statement [110] (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1 [ plot::x#4 plot::y#4 plot::plotter_x#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] ) always clobbers reg byte a 
Statement [114] (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ) always clobbers reg byte a 
Statement [115] (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2 [ plot::x#4 plot::plotter#0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] ) always clobbers reg byte a 
Statement [117] (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5 [ plot::plotter#0 plot::$6 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:2 [ lines::l#2 lines::l#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:3 [ line_ydxi::xd#2 line_ydxi::xd#1 line_ydxi::xd#0 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:4 [ line_ydxi::yd#5 line_ydxi::yd#1 line_ydxi::yd#0 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:5 [ line_ydxi::y1#6 line_ydxi::y1#1 line_ydxi::y1#0 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:6 [ line_ydxi::x#3 line_ydxi::x#5 line_ydxi::x#1 line_ydxi::x#0 line_ydxi::x#6 line_ydxi::x#2 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:7 [ line_ydxi::y#3 line_ydxi::y#6 line_ydxi::y#1 line_ydxi::y#0 line_ydxi::y#2 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:8 [ line_ydxi::e#3 line_ydxi::e#0 line_ydxi::e#6 line_ydxi::e#2 line_ydxi::e#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:11 [ line_xdyi::yd#2 line_xdyi::yd#0 line_xdyi::yd#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:12 [ line_xdyi::xd#5 line_xdyi::xd#0 line_xdyi::xd#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:13 [ line_xdyi::x1#6 line_xdyi::x1#0 line_xdyi::x1#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:14 [ line_xdyi::x#3 line_xdyi::x#6 line_xdyi::x#0 line_xdyi::x#1 line_xdyi::x#2 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:15 [ line_xdyi::y#3 line_xdyi::y#5 line_xdyi::y#0 line_xdyi::y#1 line_xdyi::y#6 line_xdyi::y#2 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:16 [ line_xdyi::e#3 line_xdyi::e#0 line_xdyi::e#6 line_xdyi::e#2 line_xdyi::e#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:17 [ line_ydxd::xd#2 line_ydxd::xd#1 line_ydxd::xd#0 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:18 [ line_ydxd::yd#5 line_ydxd::yd#1 line_ydxd::yd#0 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:19 [ line_ydxd::y1#6 line_ydxd::y1#1 line_ydxd::y1#0 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:20 [ line_ydxd::x#3 line_ydxd::x#5 line_ydxd::x#1 line_ydxd::x#0 line_ydxd::x#6 line_ydxd::x#2 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:21 [ line_ydxd::y#3 line_ydxd::y#6 line_ydxd::y#1 line_ydxd::y#0 line_ydxd::y#2 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:22 [ line_ydxd::e#3 line_ydxd::e#0 line_ydxd::e#6 line_ydxd::e#2 line_ydxd::e#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:23 [ line_xdyd::yd#2 line_xdyd::yd#0 line_xdyd::yd#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:24 [ line_xdyd::xd#5 line_xdyd::xd#0 line_xdyd::xd#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:25 [ line_xdyd::x1#6 line_xdyd::x1#0 line_xdyd::x1#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:26 [ line_xdyd::x#3 line_xdyd::x#6 line_xdyd::x#0 line_xdyd::x#1 line_xdyd::x#2 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:27 [ line_xdyd::y#3 line_xdyd::y#5 line_xdyd::y#0 line_xdyd::y#1 line_xdyd::y#6 line_xdyd::y#2 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:28 [ line_xdyd::e#3 line_xdyd::e#0 line_xdyd::e#6 line_xdyd::e#2 line_xdyd::e#1 ]
Statement [118] *((byte*) plot::plotter#0) ← (byte~) plot::$6 [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ) always clobbers reg byte y 
Statement [121] (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ) always clobbers reg byte a 
Statement [127] (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ) always clobbers reg byte a 
Statement [130] (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ) always clobbers reg byte a 
Statement [136] (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ) always clobbers reg byte a 
Statement [142] (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ) always clobbers reg byte a 
Statement [145] (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ) always clobbers reg byte a 
Statement [151] (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ) always clobbers reg byte a 
Statement [157] (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ) always clobbers reg byte a 
Statement [160] (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ) always clobbers reg byte a 
Statement [167] (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:29 [ init_plot_tables::x#2 init_plot_tables::x#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:30 [ init_plot_tables::bits#3 init_plot_tables::bits#4 init_plot_tables::bits#1 ]
Statement [169] *((const byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← >(const byte*) BITMAP#0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) always clobbers reg byte a 
Statement [170] *((const byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) always clobbers reg byte a 
Statement [177] (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:31 [ init_plot_tables::y#2 init_plot_tables::y#1 ]
Statement [181] (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ) always clobbers reg byte a 
Statement [183] (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ) always clobbers reg byte a 
Statement [185] (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ) always clobbers reg byte a 
Statement [193] *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0 [ init_screen::b#2 ] ( main:2::init_screen:8 [ init_screen::b#2 ] ) always clobbers reg byte a reg byte y 
Statement [195] if((byte*) init_screen::b#1!=(const byte*) BITMAP#0+(word/signed word) 8192) goto init_screen::@1 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] ) always clobbers reg byte a 
Statement [197] *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20 [ init_screen::c#2 ] ( main:2::init_screen:8 [ init_screen::c#2 ] ) always clobbers reg byte a reg byte y 
Statement [199] if((byte*) init_screen::c#1!=(const byte*) SCREEN#0+(word/signed word) 1024) goto init_screen::@2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] ) always clobbers reg byte a 
Statement [4] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [5] *((const byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [6] *((const byte*) D011#0) ← (const byte) BMM#0|(const byte) DEN#0|(const byte) RSEL#0|(byte/signed byte/word/signed word) 3 [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [7] *((const byte*) D018#0) ← (byte/signed byte/word/signed word) 24 [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [30] (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ) always clobbers reg byte a 
Statement [32] (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ) always clobbers reg byte a 
Statement [47] (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ) always clobbers reg byte a 
Statement [61] (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ) always clobbers reg byte a 
Statement [63] (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ) always clobbers reg byte a 
Statement [77] (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ) always clobbers reg byte a 
Statement [92] (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] ) always clobbers reg byte a 
Statement [98] (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ) always clobbers reg byte a 
Statement [101] (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ) always clobbers reg byte a 
Statement [108] (byte*) plot::plotter_x#1 ← ((byte*))(byte/signed byte/word/signed word) 0 hi= (byte~) plot::$0 [ plot::x#4 plot::y#4 plot::plotter_x#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] ) always clobbers reg byte a 
Statement [110] (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1 [ plot::x#4 plot::y#4 plot::plotter_x#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] ) always clobbers reg byte a 
Statement [114] (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ) always clobbers reg byte a 
Statement [115] (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2 [ plot::x#4 plot::plotter#0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] ) always clobbers reg byte a 
Statement [117] (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5 [ plot::plotter#0 plot::$6 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] ) always clobbers reg byte a reg byte y 
Statement [118] *((byte*) plot::plotter#0) ← (byte~) plot::$6 [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ) always clobbers reg byte y 
Statement [121] (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ) always clobbers reg byte a 
Statement [127] (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ) always clobbers reg byte a 
Statement [130] (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ) always clobbers reg byte a 
Statement [136] (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ) always clobbers reg byte a 
Statement [142] (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ) always clobbers reg byte a 
Statement [145] (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ) always clobbers reg byte a 
Statement [151] (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ) always clobbers reg byte a 
Statement [157] (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ) always clobbers reg byte a 
Statement [160] (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ) always clobbers reg byte a 
Statement [167] (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ) always clobbers reg byte a 
Statement [169] *((const byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← >(const byte*) BITMAP#0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) always clobbers reg byte a 
Statement [170] *((const byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) always clobbers reg byte a 
Statement [177] (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ) always clobbers reg byte a 
Statement [181] (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ) always clobbers reg byte a 
Statement [183] (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ) always clobbers reg byte a 
Statement [185] (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ) always clobbers reg byte a 
Statement [193] *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0 [ init_screen::b#2 ] ( main:2::init_screen:8 [ init_screen::b#2 ] ) always clobbers reg byte a reg byte y 
Statement [195] if((byte*) init_screen::b#1!=(const byte*) BITMAP#0+(word/signed word) 8192) goto init_screen::@1 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] ) always clobbers reg byte a 
Statement [197] *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20 [ init_screen::c#2 ] ( main:2::init_screen:8 [ init_screen::c#2 ] ) always clobbers reg byte a reg byte y 
Statement [199] if((byte*) init_screen::c#1!=(const byte*) SCREEN#0+(word/signed word) 1024) goto init_screen::@2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] ) always clobbers reg byte a 
Potential registers zp ZP_BYTE:2 [ lines::l#2 lines::l#1 ] : zp ZP_BYTE:2 , reg byte x , 
Potential registers zp ZP_BYTE:3 [ line_ydxi::xd#2 line_ydxi::xd#1 line_ydxi::xd#0 ] : zp ZP_BYTE:3 , reg byte x , 
Potential registers zp ZP_BYTE:4 [ line_ydxi::yd#5 line_ydxi::yd#1 line_ydxi::yd#0 ] : zp ZP_BYTE:4 , reg byte x , 
Potential registers zp ZP_BYTE:5 [ line_ydxi::y1#6 line_ydxi::y1#1 line_ydxi::y1#0 ] : zp ZP_BYTE:5 , reg byte x , 
Potential registers zp ZP_BYTE:6 [ line_ydxi::x#3 line_ydxi::x#5 line_ydxi::x#1 line_ydxi::x#0 line_ydxi::x#6 line_ydxi::x#2 ] : zp ZP_BYTE:6 , reg byte x , 
Potential registers zp ZP_BYTE:7 [ line_ydxi::y#3 line_ydxi::y#6 line_ydxi::y#1 line_ydxi::y#0 line_ydxi::y#2 ] : zp ZP_BYTE:7 , reg byte x , 
Potential registers zp ZP_BYTE:8 [ line_ydxi::e#3 line_ydxi::e#0 line_ydxi::e#6 line_ydxi::e#2 line_ydxi::e#1 ] : zp ZP_BYTE:8 , reg byte x , 
Potential registers zp ZP_BYTE:9 [ plot::x#4 plot::x#1 plot::x#0 plot::x#3 plot::x#2 ] : zp ZP_BYTE:9 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:10 [ plot::y#4 plot::y#1 plot::y#0 plot::y#3 plot::y#2 ] : zp ZP_BYTE:10 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:11 [ line_xdyi::yd#2 line_xdyi::yd#0 line_xdyi::yd#1 ] : zp ZP_BYTE:11 , reg byte x , 
Potential registers zp ZP_BYTE:12 [ line_xdyi::xd#5 line_xdyi::xd#0 line_xdyi::xd#1 ] : zp ZP_BYTE:12 , reg byte x , 
Potential registers zp ZP_BYTE:13 [ line_xdyi::x1#6 line_xdyi::x1#0 line_xdyi::x1#1 ] : zp ZP_BYTE:13 , reg byte x , 
Potential registers zp ZP_BYTE:14 [ line_xdyi::x#3 line_xdyi::x#6 line_xdyi::x#0 line_xdyi::x#1 line_xdyi::x#2 ] : zp ZP_BYTE:14 , reg byte x , 
Potential registers zp ZP_BYTE:15 [ line_xdyi::y#3 line_xdyi::y#5 line_xdyi::y#0 line_xdyi::y#1 line_xdyi::y#6 line_xdyi::y#2 ] : zp ZP_BYTE:15 , reg byte x , 
Potential registers zp ZP_BYTE:16 [ line_xdyi::e#3 line_xdyi::e#0 line_xdyi::e#6 line_xdyi::e#2 line_xdyi::e#1 ] : zp ZP_BYTE:16 , reg byte x , 
Potential registers zp ZP_BYTE:17 [ line_ydxd::xd#2 line_ydxd::xd#1 line_ydxd::xd#0 ] : zp ZP_BYTE:17 , reg byte x , 
Potential registers zp ZP_BYTE:18 [ line_ydxd::yd#5 line_ydxd::yd#1 line_ydxd::yd#0 ] : zp ZP_BYTE:18 , reg byte x , 
Potential registers zp ZP_BYTE:19 [ line_ydxd::y1#6 line_ydxd::y1#1 line_ydxd::y1#0 ] : zp ZP_BYTE:19 , reg byte x , 
Potential registers zp ZP_BYTE:20 [ line_ydxd::x#3 line_ydxd::x#5 line_ydxd::x#1 line_ydxd::x#0 line_ydxd::x#6 line_ydxd::x#2 ] : zp ZP_BYTE:20 , reg byte x , 
Potential registers zp ZP_BYTE:21 [ line_ydxd::y#3 line_ydxd::y#6 line_ydxd::y#1 line_ydxd::y#0 line_ydxd::y#2 ] : zp ZP_BYTE:21 , reg byte x , 
Potential registers zp ZP_BYTE:22 [ line_ydxd::e#3 line_ydxd::e#0 line_ydxd::e#6 line_ydxd::e#2 line_ydxd::e#1 ] : zp ZP_BYTE:22 , reg byte x , 
Potential registers zp ZP_BYTE:23 [ line_xdyd::yd#2 line_xdyd::yd#0 line_xdyd::yd#1 ] : zp ZP_BYTE:23 , reg byte x , 
Potential registers zp ZP_BYTE:24 [ line_xdyd::xd#5 line_xdyd::xd#0 line_xdyd::xd#1 ] : zp ZP_BYTE:24 , reg byte x , 
Potential registers zp ZP_BYTE:25 [ line_xdyd::x1#6 line_xdyd::x1#0 line_xdyd::x1#1 ] : zp ZP_BYTE:25 , reg byte x , 
Potential registers zp ZP_BYTE:26 [ line_xdyd::x#3 line_xdyd::x#6 line_xdyd::x#0 line_xdyd::x#1 line_xdyd::x#2 ] : zp ZP_BYTE:26 , reg byte x , 
Potential registers zp ZP_BYTE:27 [ line_xdyd::y#3 line_xdyd::y#5 line_xdyd::y#0 line_xdyd::y#1 line_xdyd::y#6 line_xdyd::y#2 ] : zp ZP_BYTE:27 , reg byte x , 
Potential registers zp ZP_BYTE:28 [ line_xdyd::e#3 line_xdyd::e#0 line_xdyd::e#6 line_xdyd::e#2 line_xdyd::e#1 ] : zp ZP_BYTE:28 , reg byte x , 
Potential registers zp ZP_BYTE:29 [ init_plot_tables::x#2 init_plot_tables::x#1 ] : zp ZP_BYTE:29 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:30 [ init_plot_tables::bits#3 init_plot_tables::bits#4 init_plot_tables::bits#1 ] : zp ZP_BYTE:30 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:31 [ init_plot_tables::y#2 init_plot_tables::y#1 ] : zp ZP_BYTE:31 , reg byte x , reg byte y , 
Potential registers zp ZP_PTR_BYTE:32 [ init_plot_tables::yoffs#2 init_plot_tables::yoffs#4 init_plot_tables::yoffs#1 ] : zp ZP_PTR_BYTE:32 , 
Potential registers zp ZP_PTR_BYTE:34 [ init_screen::b#2 init_screen::b#1 ] : zp ZP_PTR_BYTE:34 , 
Potential registers zp ZP_PTR_BYTE:36 [ init_screen::c#2 init_screen::c#1 ] : zp ZP_PTR_BYTE:36 , 
Potential registers zp ZP_BYTE:38 [ lines::$0 ] : zp ZP_BYTE:38 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:39 [ lines::$2 ] : zp ZP_BYTE:39 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:40 [ lines::$3 ] : zp ZP_BYTE:40 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:41 [ lines::$5 ] : zp ZP_BYTE:41 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:42 [ line::x0#0 ] : zp ZP_BYTE:42 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:43 [ line::x1#0 ] : zp ZP_BYTE:43 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:44 [ line::y0#0 ] : zp ZP_BYTE:44 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:45 [ line::y1#0 ] : zp ZP_BYTE:45 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:46 [ line::xd#1 ] : zp ZP_BYTE:46 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:47 [ line::yd#1 ] : zp ZP_BYTE:47 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:48 [ line::yd#0 ] : zp ZP_BYTE:48 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:49 [ line::xd#0 ] : zp ZP_BYTE:49 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:50 [ line::yd#3 ] : zp ZP_BYTE:50 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:51 [ line::yd#10 ] : zp ZP_BYTE:51 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:52 [ line_ydxi::$8 ] : zp ZP_BYTE:52 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:53 [ plot::$0 ] : zp ZP_BYTE:53 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_PTR_BYTE:54 [ plot::plotter_x#1 ] : zp ZP_PTR_BYTE:54 , 
Potential registers zp ZP_BYTE:56 [ plot::$1 ] : zp ZP_BYTE:56 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_PTR_BYTE:57 [ plot::plotter_x#2 ] : zp ZP_PTR_BYTE:57 , 
Potential registers zp ZP_BYTE:59 [ plot::$2 ] : zp ZP_BYTE:59 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_WORD:60 [ plot::plotter_y#1 ] : zp ZP_WORD:60 , 
Potential registers zp ZP_BYTE:62 [ plot::$3 ] : zp ZP_BYTE:62 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_WORD:63 [ plot::plotter_y#2 ] : zp ZP_WORD:63 , 
Potential registers zp ZP_PTR_BYTE:65 [ plot::plotter#0 ] : zp ZP_PTR_BYTE:65 , 
Potential registers zp ZP_BYTE:67 [ plot::$5 ] : zp ZP_BYTE:67 , reg byte a , reg byte x , reg byte y , reg byte alu , 
Potential registers zp ZP_BYTE:68 [ plot::$6 ] : zp ZP_BYTE:68 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:69 [ line_xdyi::$8 ] : zp ZP_BYTE:69 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:70 [ line_ydxd::$8 ] : zp ZP_BYTE:70 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:71 [ line_xdyd::$8 ] : zp ZP_BYTE:71 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:72 [ init_plot_tables::$0 ] : zp ZP_BYTE:72 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:73 [ init_plot_tables::$6 ] : zp ZP_BYTE:73 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:74 [ init_plot_tables::$7 ] : zp ZP_BYTE:74 , reg byte a , reg byte x , reg byte y , reg byte alu , 
Potential registers zp ZP_BYTE:75 [ init_plot_tables::$8 ] : zp ZP_BYTE:75 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:76 [ init_plot_tables::$9 ] : zp ZP_BYTE:76 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:77 [ init_plot_tables::$10 ] : zp ZP_BYTE:77 , reg byte a , reg byte x , reg byte y , 

REGISTER UPLIFT SCOPES
Uplift Scope [lines] 212.1: zp ZP_BYTE:2 [ lines::l#2 lines::l#1 ] 50.5: zp ZP_BYTE:38 [ lines::$0 ] 50.5: zp ZP_BYTE:39 [ lines::$2 ] 50.5: zp ZP_BYTE:40 [ lines::$3 ] 50.5: zp ZP_BYTE:41 [ lines::$5 ] 
Uplift Scope [init_plot_tables] 39.11: zp ZP_PTR_BYTE:32 [ init_plot_tables::yoffs#2 init_plot_tables::yoffs#4 init_plot_tables::yoffs#1 ] 24.93: zp ZP_BYTE:30 [ init_plot_tables::bits#3 init_plot_tables::bits#4 init_plot_tables::bits#1 ] 23.83: zp ZP_BYTE:29 [ init_plot_tables::x#2 init_plot_tables::x#1 ] 22.5: zp ZP_BYTE:31 [ init_plot_tables::y#2 init_plot_tables::y#1 ] 22: zp ZP_BYTE:72 [ init_plot_tables::$0 ] 22: zp ZP_BYTE:74 [ init_plot_tables::$7 ] 22: zp ZP_BYTE:75 [ init_plot_tables::$8 ] 22: zp ZP_BYTE:76 [ init_plot_tables::$9 ] 22: zp ZP_BYTE:77 [ init_plot_tables::$10 ] 11: zp ZP_BYTE:73 [ init_plot_tables::$6 ] 
Uplift Scope [plot] 94.86: zp ZP_BYTE:10 [ plot::y#4 plot::y#1 plot::y#0 plot::y#3 plot::y#2 ] 49: zp ZP_BYTE:9 [ plot::x#4 plot::x#1 plot::x#0 plot::x#3 plot::x#2 ] 4: zp ZP_BYTE:53 [ plot::$0 ] 4: zp ZP_BYTE:56 [ plot::$1 ] 4: zp ZP_BYTE:59 [ plot::$2 ] 4: zp ZP_BYTE:62 [ plot::$3 ] 4: zp ZP_WORD:63 [ plot::plotter_y#2 ] 4: zp ZP_BYTE:67 [ plot::$5 ] 4: zp ZP_BYTE:68 [ plot::$6 ] 2: zp ZP_PTR_BYTE:54 [ plot::plotter_x#1 ] 2: zp ZP_WORD:60 [ plot::plotter_y#1 ] 2: zp ZP_PTR_BYTE:65 [ plot::plotter#0 ] 0.8: zp ZP_PTR_BYTE:57 [ plot::plotter_x#2 ] 
Uplift Scope [line_xdyi] 56.47: zp ZP_BYTE:16 [ line_xdyi::e#3 line_xdyi::e#0 line_xdyi::e#6 line_xdyi::e#2 line_xdyi::e#1 ] 33.57: zp ZP_BYTE:15 [ line_xdyi::y#3 line_xdyi::y#5 line_xdyi::y#0 line_xdyi::y#1 line_xdyi::y#6 line_xdyi::y#2 ] 22: zp ZP_BYTE:69 [ line_xdyi::$8 ] 17.48: zp ZP_BYTE:14 [ line_xdyi::x#3 line_xdyi::x#6 line_xdyi::x#0 line_xdyi::x#1 line_xdyi::x#2 ] 9.21: zp ZP_BYTE:11 [ line_xdyi::yd#2 line_xdyi::yd#0 line_xdyi::yd#1 ] 5.86: zp ZP_BYTE:12 [ line_xdyi::xd#5 line_xdyi::xd#0 line_xdyi::xd#1 ] 3.74: zp ZP_BYTE:13 [ line_xdyi::x1#6 line_xdyi::x1#0 line_xdyi::x1#1 ] 
Uplift Scope [line_xdyd] 56.47: zp ZP_BYTE:28 [ line_xdyd::e#3 line_xdyd::e#0 line_xdyd::e#6 line_xdyd::e#2 line_xdyd::e#1 ] 33.57: zp ZP_BYTE:27 [ line_xdyd::y#3 line_xdyd::y#5 line_xdyd::y#0 line_xdyd::y#1 line_xdyd::y#6 line_xdyd::y#2 ] 22: zp ZP_BYTE:71 [ line_xdyd::$8 ] 17.48: zp ZP_BYTE:26 [ line_xdyd::x#3 line_xdyd::x#6 line_xdyd::x#0 line_xdyd::x#1 line_xdyd::x#2 ] 9.21: zp ZP_BYTE:23 [ line_xdyd::yd#2 line_xdyd::yd#0 line_xdyd::yd#1 ] 5.86: zp ZP_BYTE:24 [ line_xdyd::xd#5 line_xdyd::xd#0 line_xdyd::xd#1 ] 3.74: zp ZP_BYTE:25 [ line_xdyd::x1#6 line_xdyd::x1#0 line_xdyd::x1#1 ] 
Uplift Scope [line_ydxi] 56.47: zp ZP_BYTE:8 [ line_ydxi::e#3 line_ydxi::e#0 line_ydxi::e#6 line_ydxi::e#2 line_ydxi::e#1 ] 33.57: zp ZP_BYTE:6 [ line_ydxi::x#3 line_ydxi::x#5 line_ydxi::x#1 line_ydxi::x#0 line_ydxi::x#6 line_ydxi::x#2 ] 22: zp ZP_BYTE:52 [ line_ydxi::$8 ] 17.48: zp ZP_BYTE:7 [ line_ydxi::y#3 line_ydxi::y#6 line_ydxi::y#1 line_ydxi::y#0 line_ydxi::y#2 ] 9.21: zp ZP_BYTE:3 [ line_ydxi::xd#2 line_ydxi::xd#1 line_ydxi::xd#0 ] 5.86: zp ZP_BYTE:4 [ line_ydxi::yd#5 line_ydxi::yd#1 line_ydxi::yd#0 ] 3.74: zp ZP_BYTE:5 [ line_ydxi::y1#6 line_ydxi::y1#1 line_ydxi::y1#0 ] 
Uplift Scope [line_ydxd] 56.47: zp ZP_BYTE:22 [ line_ydxd::e#3 line_ydxd::e#0 line_ydxd::e#6 line_ydxd::e#2 line_ydxd::e#1 ] 33.57: zp ZP_BYTE:20 [ line_ydxd::x#3 line_ydxd::x#5 line_ydxd::x#1 line_ydxd::x#0 line_ydxd::x#6 line_ydxd::x#2 ] 22: zp ZP_BYTE:70 [ line_ydxd::$8 ] 17.48: zp ZP_BYTE:21 [ line_ydxd::y#3 line_ydxd::y#6 line_ydxd::y#1 line_ydxd::y#0 line_ydxd::y#2 ] 9.21: zp ZP_BYTE:17 [ line_ydxd::xd#2 line_ydxd::xd#1 line_ydxd::xd#0 ] 5.86: zp ZP_BYTE:18 [ line_ydxd::yd#5 line_ydxd::yd#1 line_ydxd::yd#0 ] 3.74: zp ZP_BYTE:19 [ line_ydxd::y1#6 line_ydxd::y1#1 line_ydxd::y1#0 ] 
Uplift Scope [init_screen] 33: zp ZP_PTR_BYTE:34 [ init_screen::b#2 init_screen::b#1 ] 33: zp ZP_PTR_BYTE:36 [ init_screen::c#2 init_screen::c#1 ] 
Uplift Scope [line] 6.25: zp ZP_BYTE:45 [ line::y1#0 ] 5.95: zp ZP_BYTE:44 [ line::y0#0 ] 5.41: zp ZP_BYTE:43 [ line::x1#0 ] 5.17: zp ZP_BYTE:42 [ line::x0#0 ] 0.89: zp ZP_BYTE:47 [ line::yd#1 ] 0.89: zp ZP_BYTE:48 [ line::yd#0 ] 0.89: zp ZP_BYTE:50 [ line::yd#3 ] 0.89: zp ZP_BYTE:51 [ line::yd#10 ] 0.7: zp ZP_BYTE:46 [ line::xd#1 ] 0.7: zp ZP_BYTE:49 [ line::xd#0 ] 
Uplift Scope [main] 
Uplift Scope [] 

Uplifting [lines] best 16915 combination zp ZP_BYTE:2 [ lines::l#2 lines::l#1 ] reg byte y [ lines::$0 ] zp ZP_BYTE:39 [ lines::$2 ] zp ZP_BYTE:40 [ lines::$3 ] reg byte x [ lines::$5 ] 
Uplift attempts [init_plot_tables] 10000/138240 (limiting to 10000)
Uplifting [init_plot_tables] best 16285 combination zp ZP_PTR_BYTE:32 [ init_plot_tables::yoffs#2 init_plot_tables::yoffs#4 init_plot_tables::yoffs#1 ] reg byte y [ init_plot_tables::bits#3 init_plot_tables::bits#4 init_plot_tables::bits#1 ] reg byte x [ init_plot_tables::x#2 init_plot_tables::x#1 ] reg byte x [ init_plot_tables::y#2 init_plot_tables::y#1 ] reg byte a [ init_plot_tables::$0 ] reg byte a [ init_plot_tables::$7 ] reg byte a [ init_plot_tables::$8 ] reg byte a [ init_plot_tables::$9 ] zp ZP_BYTE:77 [ init_plot_tables::$10 ] zp ZP_BYTE:73 [ init_plot_tables::$6 ] 
Limited combination testing to 10000 combinations of 138240 possible.
Uplift attempts [plot] 10000/46080 (limiting to 10000)
Uplifting [plot] best 16000 combination reg byte y [ plot::y#4 plot::y#1 plot::y#0 plot::y#3 plot::y#2 ] reg byte x [ plot::x#4 plot::x#1 plot::x#0 plot::x#3 plot::x#2 ] reg byte a [ plot::$0 ] reg byte a [ plot::$1 ] reg byte a [ plot::$2 ] reg byte a [ plot::$3 ] zp ZP_WORD:63 [ plot::plotter_y#2 ] reg byte a [ plot::$5 ] zp ZP_BYTE:68 [ plot::$6 ] zp ZP_PTR_BYTE:54 [ plot::plotter_x#1 ] zp ZP_WORD:60 [ plot::plotter_y#1 ] zp ZP_PTR_BYTE:65 [ plot::plotter#0 ] zp ZP_PTR_BYTE:57 [ plot::plotter_x#2 ] 
Limited combination testing to 10000 combinations of 46080 possible.
Uplifting [line_xdyi] best 15904 combination zp ZP_BYTE:16 [ line_xdyi::e#3 line_xdyi::e#0 line_xdyi::e#6 line_xdyi::e#2 line_xdyi::e#1 ] zp ZP_BYTE:15 [ line_xdyi::y#3 line_xdyi::y#5 line_xdyi::y#0 line_xdyi::y#1 line_xdyi::y#6 line_xdyi::y#2 ] zp ZP_BYTE:69 [ line_xdyi::$8 ] reg byte x [ line_xdyi::x#3 line_xdyi::x#6 line_xdyi::x#0 line_xdyi::x#1 line_xdyi::x#2 ] zp ZP_BYTE:11 [ line_xdyi::yd#2 line_xdyi::yd#0 line_xdyi::yd#1 ] zp ZP_BYTE:12 [ line_xdyi::xd#5 line_xdyi::xd#0 line_xdyi::xd#1 ] zp ZP_BYTE:13 [ line_xdyi::x1#6 line_xdyi::x1#0 line_xdyi::x1#1 ] 
Uplifting [line_xdyd] best 15808 combination zp ZP_BYTE:28 [ line_xdyd::e#3 line_xdyd::e#0 line_xdyd::e#6 line_xdyd::e#2 line_xdyd::e#1 ] zp ZP_BYTE:27 [ line_xdyd::y#3 line_xdyd::y#5 line_xdyd::y#0 line_xdyd::y#1 line_xdyd::y#6 line_xdyd::y#2 ] zp ZP_BYTE:71 [ line_xdyd::$8 ] reg byte x [ line_xdyd::x#3 line_xdyd::x#6 line_xdyd::x#0 line_xdyd::x#1 line_xdyd::x#2 ] zp ZP_BYTE:23 [ line_xdyd::yd#2 line_xdyd::yd#0 line_xdyd::yd#1 ] zp ZP_BYTE:24 [ line_xdyd::xd#5 line_xdyd::xd#0 line_xdyd::xd#1 ] zp ZP_BYTE:25 [ line_xdyd::x1#6 line_xdyd::x1#0 line_xdyd::x1#1 ] 
Uplifting [line_ydxi] best 15682 combination zp ZP_BYTE:8 [ line_ydxi::e#3 line_ydxi::e#0 line_ydxi::e#6 line_ydxi::e#2 line_ydxi::e#1 ] reg byte x [ line_ydxi::x#3 line_ydxi::x#5 line_ydxi::x#1 line_ydxi::x#0 line_ydxi::x#6 line_ydxi::x#2 ] reg byte a [ line_ydxi::$8 ] zp ZP_BYTE:7 [ line_ydxi::y#3 line_ydxi::y#6 line_ydxi::y#1 line_ydxi::y#0 line_ydxi::y#2 ] zp ZP_BYTE:3 [ line_ydxi::xd#2 line_ydxi::xd#1 line_ydxi::xd#0 ] zp ZP_BYTE:4 [ line_ydxi::yd#5 line_ydxi::yd#1 line_ydxi::yd#0 ] zp ZP_BYTE:5 [ line_ydxi::y1#6 line_ydxi::y1#1 line_ydxi::y1#0 ] 
Uplifting [line_ydxd] best 15556 combination zp ZP_BYTE:22 [ line_ydxd::e#3 line_ydxd::e#0 line_ydxd::e#6 line_ydxd::e#2 line_ydxd::e#1 ] reg byte x [ line_ydxd::x#3 line_ydxd::x#5 line_ydxd::x#1 line_ydxd::x#0 line_ydxd::x#6 line_ydxd::x#2 ] reg byte a [ line_ydxd::$8 ] zp ZP_BYTE:21 [ line_ydxd::y#3 line_ydxd::y#6 line_ydxd::y#1 line_ydxd::y#0 line_ydxd::y#2 ] zp ZP_BYTE:17 [ line_ydxd::xd#2 line_ydxd::xd#1 line_ydxd::xd#0 ] zp ZP_BYTE:18 [ line_ydxd::yd#5 line_ydxd::yd#1 line_ydxd::yd#0 ] zp ZP_BYTE:19 [ line_ydxd::y1#6 line_ydxd::y1#1 line_ydxd::y1#0 ] 
Uplifting [init_screen] best 15556 combination zp ZP_PTR_BYTE:34 [ init_screen::b#2 init_screen::b#1 ] zp ZP_PTR_BYTE:36 [ init_screen::c#2 init_screen::c#1 ] 
Uplift attempts [line] 10000/186624 (limiting to 10000)
Uplifting [line] best 15240 combination zp ZP_BYTE:45 [ line::y1#0 ] reg byte y [ line::y0#0 ] zp ZP_BYTE:43 [ line::x1#0 ] zp ZP_BYTE:42 [ line::x0#0 ] zp ZP_BYTE:47 [ line::yd#1 ] zp ZP_BYTE:48 [ line::yd#0 ] zp ZP_BYTE:50 [ line::yd#3 ] zp ZP_BYTE:51 [ line::yd#10 ] zp ZP_BYTE:46 [ line::xd#1 ] zp ZP_BYTE:49 [ line::xd#0 ] 
Limited combination testing to 10000 combinations of 186624 possible.
Uplifting [main] best 15240 combination 
Uplifting [] best 15240 combination 
MISSING FRAGMENTS
  zpby1=_deref_zpptrby1_bor_cowo1_derefidx_yby
Attempting to uplift remaining variables inzp ZP_BYTE:2 [ lines::l#2 lines::l#1 ]
Uplifting [lines] best 15240 combination zp ZP_BYTE:2 [ lines::l#2 lines::l#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:8 [ line_ydxi::e#3 line_ydxi::e#0 line_ydxi::e#6 line_ydxi::e#2 line_ydxi::e#1 ]
Uplifting [line_ydxi] best 15240 combination zp ZP_BYTE:8 [ line_ydxi::e#3 line_ydxi::e#0 line_ydxi::e#6 line_ydxi::e#2 line_ydxi::e#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:16 [ line_xdyi::e#3 line_xdyi::e#0 line_xdyi::e#6 line_xdyi::e#2 line_xdyi::e#1 ]
Uplifting [line_xdyi] best 15240 combination zp ZP_BYTE:16 [ line_xdyi::e#3 line_xdyi::e#0 line_xdyi::e#6 line_xdyi::e#2 line_xdyi::e#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:22 [ line_ydxd::e#3 line_ydxd::e#0 line_ydxd::e#6 line_ydxd::e#2 line_ydxd::e#1 ]
Uplifting [line_ydxd] best 15240 combination zp ZP_BYTE:22 [ line_ydxd::e#3 line_ydxd::e#0 line_ydxd::e#6 line_ydxd::e#2 line_ydxd::e#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:28 [ line_xdyd::e#3 line_xdyd::e#0 line_xdyd::e#6 line_xdyd::e#2 line_xdyd::e#1 ]
Uplifting [line_xdyd] best 15240 combination zp ZP_BYTE:28 [ line_xdyd::e#3 line_xdyd::e#0 line_xdyd::e#6 line_xdyd::e#2 line_xdyd::e#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:39 [ lines::$2 ]
Uplifting [lines] best 15240 combination zp ZP_BYTE:39 [ lines::$2 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:40 [ lines::$3 ]
Uplifting [lines] best 15240 combination zp ZP_BYTE:40 [ lines::$3 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:15 [ line_xdyi::y#3 line_xdyi::y#5 line_xdyi::y#0 line_xdyi::y#1 line_xdyi::y#6 line_xdyi::y#2 ]
Uplifting [line_xdyi] best 15240 combination zp ZP_BYTE:15 [ line_xdyi::y#3 line_xdyi::y#5 line_xdyi::y#0 line_xdyi::y#1 line_xdyi::y#6 line_xdyi::y#2 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:27 [ line_xdyd::y#3 line_xdyd::y#5 line_xdyd::y#0 line_xdyd::y#1 line_xdyd::y#6 line_xdyd::y#2 ]
Uplifting [line_xdyd] best 15240 combination zp ZP_BYTE:27 [ line_xdyd::y#3 line_xdyd::y#5 line_xdyd::y#0 line_xdyd::y#1 line_xdyd::y#6 line_xdyd::y#2 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:69 [ line_xdyi::$8 ]
Uplifting [line_xdyi] best 15240 combination zp ZP_BYTE:69 [ line_xdyi::$8 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:71 [ line_xdyd::$8 ]
Uplifting [line_xdyd] best 15240 combination zp ZP_BYTE:71 [ line_xdyd::$8 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:77 [ init_plot_tables::$10 ]
Uplifting [init_plot_tables] best 15180 combination reg byte a [ init_plot_tables::$10 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:7 [ line_ydxi::y#3 line_ydxi::y#6 line_ydxi::y#1 line_ydxi::y#0 line_ydxi::y#2 ]
Uplifting [line_ydxi] best 15180 combination zp ZP_BYTE:7 [ line_ydxi::y#3 line_ydxi::y#6 line_ydxi::y#1 line_ydxi::y#0 line_ydxi::y#2 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:21 [ line_ydxd::y#3 line_ydxd::y#6 line_ydxd::y#1 line_ydxd::y#0 line_ydxd::y#2 ]
Uplifting [line_ydxd] best 15180 combination zp ZP_BYTE:21 [ line_ydxd::y#3 line_ydxd::y#6 line_ydxd::y#1 line_ydxd::y#0 line_ydxd::y#2 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:73 [ init_plot_tables::$6 ]
Uplifting [init_plot_tables] best 15180 combination zp ZP_BYTE:73 [ init_plot_tables::$6 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:3 [ line_ydxi::xd#2 line_ydxi::xd#1 line_ydxi::xd#0 ]
Uplifting [line_ydxi] best 15180 combination zp ZP_BYTE:3 [ line_ydxi::xd#2 line_ydxi::xd#1 line_ydxi::xd#0 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:11 [ line_xdyi::yd#2 line_xdyi::yd#0 line_xdyi::yd#1 ]
Uplifting [line_xdyi] best 15180 combination zp ZP_BYTE:11 [ line_xdyi::yd#2 line_xdyi::yd#0 line_xdyi::yd#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:17 [ line_ydxd::xd#2 line_ydxd::xd#1 line_ydxd::xd#0 ]
Uplifting [line_ydxd] best 15180 combination zp ZP_BYTE:17 [ line_ydxd::xd#2 line_ydxd::xd#1 line_ydxd::xd#0 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:23 [ line_xdyd::yd#2 line_xdyd::yd#0 line_xdyd::yd#1 ]
Uplifting [line_xdyd] best 15180 combination zp ZP_BYTE:23 [ line_xdyd::yd#2 line_xdyd::yd#0 line_xdyd::yd#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:45 [ line::y1#0 ]
Uplifting [line] best 15180 combination zp ZP_BYTE:45 [ line::y1#0 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:4 [ line_ydxi::yd#5 line_ydxi::yd#1 line_ydxi::yd#0 ]
Uplifting [line_ydxi] best 15180 combination zp ZP_BYTE:4 [ line_ydxi::yd#5 line_ydxi::yd#1 line_ydxi::yd#0 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:12 [ line_xdyi::xd#5 line_xdyi::xd#0 line_xdyi::xd#1 ]
Uplifting [line_xdyi] best 15180 combination zp ZP_BYTE:12 [ line_xdyi::xd#5 line_xdyi::xd#0 line_xdyi::xd#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:18 [ line_ydxd::yd#5 line_ydxd::yd#1 line_ydxd::yd#0 ]
Uplifting [line_ydxd] best 15180 combination zp ZP_BYTE:18 [ line_ydxd::yd#5 line_ydxd::yd#1 line_ydxd::yd#0 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:24 [ line_xdyd::xd#5 line_xdyd::xd#0 line_xdyd::xd#1 ]
Uplifting [line_xdyd] best 15180 combination zp ZP_BYTE:24 [ line_xdyd::xd#5 line_xdyd::xd#0 line_xdyd::xd#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:43 [ line::x1#0 ]
Uplifting [line] best 15180 combination zp ZP_BYTE:43 [ line::x1#0 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:42 [ line::x0#0 ]
Uplifting [line] best 15180 combination zp ZP_BYTE:42 [ line::x0#0 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:68 [ plot::$6 ]
Uplifting [plot] best 15174 combination reg byte a [ plot::$6 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:5 [ line_ydxi::y1#6 line_ydxi::y1#1 line_ydxi::y1#0 ]
Uplifting [line_ydxi] best 15174 combination zp ZP_BYTE:5 [ line_ydxi::y1#6 line_ydxi::y1#1 line_ydxi::y1#0 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:13 [ line_xdyi::x1#6 line_xdyi::x1#0 line_xdyi::x1#1 ]
Uplifting [line_xdyi] best 15174 combination zp ZP_BYTE:13 [ line_xdyi::x1#6 line_xdyi::x1#0 line_xdyi::x1#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:19 [ line_ydxd::y1#6 line_ydxd::y1#1 line_ydxd::y1#0 ]
Uplifting [line_ydxd] best 15174 combination zp ZP_BYTE:19 [ line_ydxd::y1#6 line_ydxd::y1#1 line_ydxd::y1#0 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:25 [ line_xdyd::x1#6 line_xdyd::x1#0 line_xdyd::x1#1 ]
Uplifting [line_xdyd] best 15174 combination zp ZP_BYTE:25 [ line_xdyd::x1#6 line_xdyd::x1#0 line_xdyd::x1#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:47 [ line::yd#1 ]
Uplifting [line] best 15174 combination zp ZP_BYTE:47 [ line::yd#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:48 [ line::yd#0 ]
Uplifting [line] best 15174 combination zp ZP_BYTE:48 [ line::yd#0 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:50 [ line::yd#3 ]
Uplifting [line] best 15174 combination zp ZP_BYTE:50 [ line::yd#3 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:51 [ line::yd#10 ]
Uplifting [line] best 15174 combination zp ZP_BYTE:51 [ line::yd#10 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:46 [ line::xd#1 ]
Uplifting [line] best 15174 combination zp ZP_BYTE:46 [ line::xd#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:49 [ line::xd#0 ]
Uplifting [line] best 15174 combination zp ZP_BYTE:49 [ line::xd#0 ] 
Coalescing zero page register [ zp ZP_BYTE:2 [ lines::l#2 lines::l#1 ] ] with [ zp ZP_BYTE:73 [ init_plot_tables::$6 ] ]
Coalescing zero page register [ zp ZP_BYTE:3 [ line_ydxi::xd#2 line_ydxi::xd#1 line_ydxi::xd#0 ] ] with [ zp ZP_BYTE:11 [ line_xdyi::yd#2 line_xdyi::yd#0 line_xdyi::yd#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:3 [ line_ydxi::xd#2 line_ydxi::xd#1 line_ydxi::xd#0 line_xdyi::yd#2 line_xdyi::yd#0 line_xdyi::yd#1 ] ] with [ zp ZP_BYTE:17 [ line_ydxd::xd#2 line_ydxd::xd#1 line_ydxd::xd#0 ] ]
Coalescing zero page register [ zp ZP_BYTE:3 [ line_ydxi::xd#2 line_ydxi::xd#1 line_ydxi::xd#0 line_xdyi::yd#2 line_xdyi::yd#0 line_xdyi::yd#1 line_ydxd::xd#2 line_ydxd::xd#1 line_ydxd::xd#0 ] ] with [ zp ZP_BYTE:23 [ line_xdyd::yd#2 line_xdyd::yd#0 line_xdyd::yd#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:3 [ line_ydxi::xd#2 line_ydxi::xd#1 line_ydxi::xd#0 line_xdyi::yd#2 line_xdyi::yd#0 line_xdyi::yd#1 line_ydxd::xd#2 line_ydxd::xd#1 line_ydxd::xd#0 line_xdyd::yd#2 line_xdyd::yd#0 line_xdyd::yd#1 ] ] with [ zp ZP_BYTE:39 [ lines::$2 ] ]
Coalescing zero page register [ zp ZP_BYTE:3 [ line_ydxi::xd#2 line_ydxi::xd#1 line_ydxi::xd#0 line_xdyi::yd#2 line_xdyi::yd#0 line_xdyi::yd#1 line_ydxd::xd#2 line_ydxd::xd#1 line_ydxd::xd#0 line_xdyd::yd#2 line_xdyd::yd#0 line_xdyd::yd#1 lines::$2 ] ] with [ zp ZP_BYTE:43 [ line::x1#0 ] ]
Coalescing zero page register [ zp ZP_BYTE:4 [ line_ydxi::yd#5 line_ydxi::yd#1 line_ydxi::yd#0 ] ] with [ zp ZP_BYTE:12 [ line_xdyi::xd#5 line_xdyi::xd#0 line_xdyi::xd#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:4 [ line_ydxi::yd#5 line_ydxi::yd#1 line_ydxi::yd#0 line_xdyi::xd#5 line_xdyi::xd#0 line_xdyi::xd#1 ] ] with [ zp ZP_BYTE:18 [ line_ydxd::yd#5 line_ydxd::yd#1 line_ydxd::yd#0 ] ]
Coalescing zero page register [ zp ZP_BYTE:4 [ line_ydxi::yd#5 line_ydxi::yd#1 line_ydxi::yd#0 line_xdyi::xd#5 line_xdyi::xd#0 line_xdyi::xd#1 line_ydxd::yd#5 line_ydxd::yd#1 line_ydxd::yd#0 ] ] with [ zp ZP_BYTE:24 [ line_xdyd::xd#5 line_xdyd::xd#0 line_xdyd::xd#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:4 [ line_ydxi::yd#5 line_ydxi::yd#1 line_ydxi::yd#0 line_xdyi::xd#5 line_xdyi::xd#0 line_xdyi::xd#1 line_ydxd::yd#5 line_ydxd::yd#1 line_ydxd::yd#0 line_xdyd::xd#5 line_xdyd::xd#0 line_xdyd::xd#1 ] ] with [ zp ZP_BYTE:40 [ lines::$3 ] ]
Coalescing zero page register [ zp ZP_BYTE:4 [ line_ydxi::yd#5 line_ydxi::yd#1 line_ydxi::yd#0 line_xdyi::xd#5 line_xdyi::xd#0 line_xdyi::xd#1 line_ydxd::yd#5 line_ydxd::yd#1 line_ydxd::yd#0 line_xdyd::xd#5 line_xdyd::xd#0 line_xdyd::xd#1 lines::$3 ] ] with [ zp ZP_BYTE:45 [ line::y1#0 ] ]
Coalescing zero page register [ zp ZP_BYTE:5 [ line_ydxi::y1#6 line_ydxi::y1#1 line_ydxi::y1#0 ] ] with [ zp ZP_BYTE:13 [ line_xdyi::x1#6 line_xdyi::x1#0 line_xdyi::x1#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:5 [ line_ydxi::y1#6 line_ydxi::y1#1 line_ydxi::y1#0 line_xdyi::x1#6 line_xdyi::x1#0 line_xdyi::x1#1 ] ] with [ zp ZP_BYTE:19 [ line_ydxd::y1#6 line_ydxd::y1#1 line_ydxd::y1#0 ] ]
Coalescing zero page register [ zp ZP_BYTE:5 [ line_ydxi::y1#6 line_ydxi::y1#1 line_ydxi::y1#0 line_xdyi::x1#6 line_xdyi::x1#0 line_xdyi::x1#1 line_ydxd::y1#6 line_ydxd::y1#1 line_ydxd::y1#0 ] ] with [ zp ZP_BYTE:25 [ line_xdyd::x1#6 line_xdyd::x1#0 line_xdyd::x1#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:5 [ line_ydxi::y1#6 line_ydxi::y1#1 line_ydxi::y1#0 line_xdyi::x1#6 line_xdyi::x1#0 line_xdyi::x1#1 line_ydxd::y1#6 line_ydxd::y1#1 line_ydxd::y1#0 line_xdyd::x1#6 line_xdyd::x1#0 line_xdyd::x1#1 ] ] with [ zp ZP_BYTE:42 [ line::x0#0 ] ]
Coalescing zero page register [ zp ZP_BYTE:7 [ line_ydxi::y#3 line_ydxi::y#6 line_ydxi::y#1 line_ydxi::y#0 line_ydxi::y#2 ] ] with [ zp ZP_BYTE:15 [ line_xdyi::y#3 line_xdyi::y#5 line_xdyi::y#0 line_xdyi::y#1 line_xdyi::y#6 line_xdyi::y#2 ] ]
Coalescing zero page register [ zp ZP_BYTE:7 [ line_ydxi::y#3 line_ydxi::y#6 line_ydxi::y#1 line_ydxi::y#0 line_ydxi::y#2 line_xdyi::y#3 line_xdyi::y#5 line_xdyi::y#0 line_xdyi::y#1 line_xdyi::y#6 line_xdyi::y#2 ] ] with [ zp ZP_BYTE:21 [ line_ydxd::y#3 line_ydxd::y#6 line_ydxd::y#1 line_ydxd::y#0 line_ydxd::y#2 ] ]
Coalescing zero page register [ zp ZP_BYTE:7 [ line_ydxi::y#3 line_ydxi::y#6 line_ydxi::y#1 line_ydxi::y#0 line_ydxi::y#2 line_xdyi::y#3 line_xdyi::y#5 line_xdyi::y#0 line_xdyi::y#1 line_xdyi::y#6 line_xdyi::y#2 line_ydxd::y#3 line_ydxd::y#6 line_ydxd::y#1 line_ydxd::y#0 line_ydxd::y#2 ] ] with [ zp ZP_BYTE:27 [ line_xdyd::y#3 line_xdyd::y#5 line_xdyd::y#0 line_xdyd::y#1 line_xdyd::y#6 line_xdyd::y#2 ] ]
Coalescing zero page register [ zp ZP_BYTE:8 [ line_ydxi::e#3 line_ydxi::e#0 line_ydxi::e#6 line_ydxi::e#2 line_ydxi::e#1 ] ] with [ zp ZP_BYTE:16 [ line_xdyi::e#3 line_xdyi::e#0 line_xdyi::e#6 line_xdyi::e#2 line_xdyi::e#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:8 [ line_ydxi::e#3 line_ydxi::e#0 line_ydxi::e#6 line_ydxi::e#2 line_ydxi::e#1 line_xdyi::e#3 line_xdyi::e#0 line_xdyi::e#6 line_xdyi::e#2 line_xdyi::e#1 ] ] with [ zp ZP_BYTE:22 [ line_ydxd::e#3 line_ydxd::e#0 line_ydxd::e#6 line_ydxd::e#2 line_ydxd::e#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:8 [ line_ydxi::e#3 line_ydxi::e#0 line_ydxi::e#6 line_ydxi::e#2 line_ydxi::e#1 line_xdyi::e#3 line_xdyi::e#0 line_xdyi::e#6 line_xdyi::e#2 line_xdyi::e#1 line_ydxd::e#3 line_ydxd::e#0 line_ydxd::e#6 line_ydxd::e#2 line_ydxd::e#1 ] ] with [ zp ZP_BYTE:28 [ line_xdyd::e#3 line_xdyd::e#0 line_xdyd::e#6 line_xdyd::e#2 line_xdyd::e#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:8 [ line_ydxi::e#3 line_ydxi::e#0 line_ydxi::e#6 line_ydxi::e#2 line_ydxi::e#1 line_xdyi::e#3 line_xdyi::e#0 line_xdyi::e#6 line_xdyi::e#2 line_xdyi::e#1 line_ydxd::e#3 line_ydxd::e#0 line_ydxd::e#6 line_ydxd::e#2 line_ydxd::e#1 line_xdyd::e#3 line_xdyd::e#0 line_xdyd::e#6 line_xdyd::e#2 line_xdyd::e#1 ] ] with [ zp ZP_BYTE:46 [ line::xd#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:8 [ line_ydxi::e#3 line_ydxi::e#0 line_ydxi::e#6 line_ydxi::e#2 line_ydxi::e#1 line_xdyi::e#3 line_xdyi::e#0 line_xdyi::e#6 line_xdyi::e#2 line_xdyi::e#1 line_ydxd::e#3 line_ydxd::e#0 line_ydxd::e#6 line_ydxd::e#2 line_ydxd::e#1 line_xdyd::e#3 line_xdyd::e#0 line_xdyd::e#6 line_xdyd::e#2 line_xdyd::e#1 line::xd#1 ] ] with [ zp ZP_BYTE:49 [ line::xd#0 ] ]
Coalescing zero page register [ zp ZP_PTR_BYTE:32 [ init_plot_tables::yoffs#2 init_plot_tables::yoffs#4 init_plot_tables::yoffs#1 ] ] with [ zp ZP_PTR_BYTE:34 [ init_screen::b#2 init_screen::b#1 ] ]
Coalescing zero page register [ zp ZP_PTR_BYTE:32 [ init_plot_tables::yoffs#2 init_plot_tables::yoffs#4 init_plot_tables::yoffs#1 init_screen::b#2 init_screen::b#1 ] ] with [ zp ZP_PTR_BYTE:36 [ init_screen::c#2 init_screen::c#1 ] ]
Coalescing zero page register [ zp ZP_PTR_BYTE:32 [ init_plot_tables::yoffs#2 init_plot_tables::yoffs#4 init_plot_tables::yoffs#1 init_screen::b#2 init_screen::b#1 init_screen::c#2 init_screen::c#1 ] ] with [ zp ZP_PTR_BYTE:54 [ plot::plotter_x#1 ] ]
Coalescing zero page register [ zp ZP_PTR_BYTE:32 [ init_plot_tables::yoffs#2 init_plot_tables::yoffs#4 init_plot_tables::yoffs#1 init_screen::b#2 init_screen::b#1 init_screen::c#2 init_screen::c#1 plot::plotter_x#1 ] ] with [ zp ZP_PTR_BYTE:57 [ plot::plotter_x#2 ] ]
Coalescing zero page register [ zp ZP_PTR_BYTE:32 [ init_plot_tables::yoffs#2 init_plot_tables::yoffs#4 init_plot_tables::yoffs#1 init_screen::b#2 init_screen::b#1 init_screen::c#2 init_screen::c#1 plot::plotter_x#1 plot::plotter_x#2 ] ] with [ zp ZP_PTR_BYTE:65 [ plot::plotter#0 ] ]
Coalescing zero page register [ zp ZP_BYTE:47 [ line::yd#1 ] ] with [ zp ZP_BYTE:48 [ line::yd#0 ] ]
Coalescing zero page register [ zp ZP_BYTE:47 [ line::yd#1 line::yd#0 ] ] with [ zp ZP_BYTE:50 [ line::yd#3 ] ]
Coalescing zero page register [ zp ZP_BYTE:47 [ line::yd#1 line::yd#0 line::yd#3 ] ] with [ zp ZP_BYTE:51 [ line::yd#10 ] ]
Coalescing zero page register [ zp ZP_BYTE:47 [ line::yd#1 line::yd#0 line::yd#3 line::yd#10 ] ] with [ zp ZP_BYTE:69 [ line_xdyi::$8 ] ]
Coalescing zero page register [ zp ZP_BYTE:47 [ line::yd#1 line::yd#0 line::yd#3 line::yd#10 line_xdyi::$8 ] ] with [ zp ZP_BYTE:71 [ line_xdyd::$8 ] ]
Coalescing zero page register [ zp ZP_WORD:60 [ plot::plotter_y#1 ] ] with [ zp ZP_WORD:63 [ plot::plotter_y#2 ] ]
Allocated (was zp ZP_BYTE:7) zp ZP_BYTE:6 [ line_ydxi::y#3 line_ydxi::y#6 line_ydxi::y#1 line_ydxi::y#0 line_ydxi::y#2 line_xdyi::y#3 line_xdyi::y#5 line_xdyi::y#0 line_xdyi::y#1 line_xdyi::y#6 line_xdyi::y#2 line_ydxd::y#3 line_ydxd::y#6 line_ydxd::y#1 line_ydxd::y#0 line_ydxd::y#2 line_xdyd::y#3 line_xdyd::y#5 line_xdyd::y#0 line_xdyd::y#1 line_xdyd::y#6 line_xdyd::y#2 ]
Allocated (was zp ZP_BYTE:8) zp ZP_BYTE:7 [ line_ydxi::e#3 line_ydxi::e#0 line_ydxi::e#6 line_ydxi::e#2 line_ydxi::e#1 line_xdyi::e#3 line_xdyi::e#0 line_xdyi::e#6 line_xdyi::e#2 line_xdyi::e#1 line_ydxd::e#3 line_ydxd::e#0 line_ydxd::e#6 line_ydxd::e#2 line_ydxd::e#1 line_xdyd::e#3 line_xdyd::e#0 line_xdyd::e#6 line_xdyd::e#2 line_xdyd::e#1 line::xd#1 line::xd#0 ]
Allocated (was zp ZP_PTR_BYTE:32) zp ZP_PTR_BYTE:8 [ init_plot_tables::yoffs#2 init_plot_tables::yoffs#4 init_plot_tables::yoffs#1 init_screen::b#2 init_screen::b#1 init_screen::c#2 init_screen::c#1 plot::plotter_x#1 plot::plotter_x#2 plot::plotter#0 ]
Allocated (was zp ZP_BYTE:47) zp ZP_BYTE:10 [ line::yd#1 line::yd#0 line::yd#3 line::yd#10 line_xdyi::$8 line_xdyd::$8 ]
Allocated (was zp ZP_WORD:60) zp ZP_WORD:11 [ plot::plotter_y#1 plot::plotter_y#2 ]
Removing instruction jmp b10
Removing instruction jmp bend
Removing instruction jmp b3
Removing instruction jmp b1
Removing instruction jmp b5
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp b3
Removing instruction jmp breturn
Removing instruction jmp b15
Removing instruction jmp b16
Removing instruction jmp b17
Removing instruction jmp breturn
Removing instruction jmp b20
Removing instruction jmp b23
Removing instruction jmp b24
Removing instruction jmp b27
Removing instruction jmp b1
Removing instruction jmp b5
Removing instruction jmp b3
Removing instruction jmp b2
Removing instruction jmp breturn
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp b5
Removing instruction jmp b3
Removing instruction jmp b2
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp b5
Removing instruction jmp b3
Removing instruction jmp b2
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp b5
Removing instruction jmp b3
Removing instruction jmp b2
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b7
Removing instruction jmp b4
Removing instruction jmp breturn
Removing instruction jmp b10
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp breturn
Succesful ASM optimization Pass5NextJumpElimination
ASSEMBLER
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const BGCOL = $d020
  .const FGCOL = $d021
  .const D018 = $d018
  .const D011 = $d011
  .const BMM = $20
  .const DEN = $10
  .const RSEL = 8
  .const SCREEN = $400
  .const BITMAP = $2000
  .const plot_xlo = $1000
  .const plot_xhi = $1100
  .const plot_ylo = $1200
  .const plot_yhi = $1300
  .const plot_bit = $1400
  .const lines_cnt = 8
  lines_x: .byte $3c, $50, $6e, $50, $3c, $28, $a, $28, $3c
  lines_y: .byte $a, $28, $3c, $50, $6e, $50, $3c, $28, $a
//SEG2 @begin
bbegin:
//SEG3 [1] phi from @begin to @10 [phi:@begin->@10]
b10_from_bbegin:
//SEG4 @10
b10:
//SEG5 [2] call main param-assignment [ ] ( )
  jsr main
//SEG6 [3] phi from @10 to @end [phi:@10->@end]
bend_from_b10:
//SEG7 @end
bend:
//SEG8 main
main: {
  //SEG9 [4] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #0
    sta BGCOL
  //SEG10 [5] *((const byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #0
    sta FGCOL
  //SEG11 [6] *((const byte*) D011#0) ← (const byte) BMM#0|(const byte) DEN#0|(const byte) RSEL#0|(byte/signed byte/word/signed word) 3 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #BMM|DEN|RSEL|3
    sta D011
  //SEG12 [7] *((const byte*) D018#0) ← (byte/signed byte/word/signed word) 24 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #$18
    sta D018
  //SEG13 [8] call init_screen param-assignment [ ] ( main:2 [ ] )
  //SEG14 [191] phi from main to init_screen [phi:main->init_screen]
  init_screen_from_main:
    jsr init_screen
  //SEG15 [9] phi from main to main::@3 [phi:main->main::@3]
  b3_from_main:
  //SEG16 main::@3
  b3:
  //SEG17 [10] call init_plot_tables param-assignment [ ] ( main:2 [ ] )
  //SEG18 [165] phi from main::@3 to init_plot_tables [phi:main::@3->init_plot_tables]
  init_plot_tables_from_b3:
    jsr init_plot_tables
  //SEG19 [11] phi from main::@3 main::@5 to main::@1 [phi:main::@3/main::@5->main::@1]
  b1_from_b3:
  b1_from_b5:
  //SEG20 main::@1
  b1:
  //SEG21 [12] call lines param-assignment [ ] ( main:2 [ ] )
  //SEG22 [15] phi from main::@1 to lines [phi:main::@1->lines]
  lines_from_b1:
    jsr lines
  //SEG23 main::@5
  b5:
  //SEG24 [13] if(true) goto main::@1 [ ] ( main:2 [ ] ) -- true_then_la1 
    jmp b1_from_b5
  //SEG25 main::@return
  breturn:
  //SEG26 [14] return  [ ] ( main:2 [ ] )
    rts
}
//SEG27 lines
lines: {
    .label _2 = 3
    .label _3 = 4
    .label l = 2
  //SEG28 [16] phi from lines to lines::@1 [phi:lines->lines::@1]
  b1_from_lines:
  //SEG29 [16] phi (byte) lines::l#2 = (byte/signed byte/word/signed word) 0 [phi:lines->lines::@1#0] -- zpby1=coby1 
    lda #0
    sta l
    jmp b1
  //SEG30 [16] phi from lines::@3 to lines::@1 [phi:lines::@3->lines::@1]
  b1_from_b3:
  //SEG31 [16] phi (byte) lines::l#2 = (byte) lines::l#1 [phi:lines::@3->lines::@1#0] -- register_copy 
  //SEG32 lines::@1
  b1:
  //SEG33 [17] (byte~) lines::$0 ← (const byte[]) lines_x#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 ] ( main:2::lines:12 [ lines::l#2 lines::$0 ] ) -- yby=cowo1_derefidx_zpby1 
    ldx l
    lda lines_x,x
    tay
  //SEG34 [18] (byte~) lines::$2 ← (const byte[]) lines_x#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx l
    lda lines_x+1,x
    sta _2
  //SEG35 [19] (byte~) lines::$3 ← (const byte[]) lines_y#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 lines::$3 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx l
    lda lines_y,x
    sta _3
  //SEG36 [20] (byte~) lines::$5 ← (const byte[]) lines_y#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ] ) -- xby=cowo1_derefidx_zpby1 
    ldx l
    lda lines_y+1,x
    tax
  //SEG37 [21] (byte) line::x0#0 ← (byte~) lines::$0 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ] ( main:2::lines:12 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ] ) -- zpby1=yby 
    sty line.x0
  //SEG38 [22] (byte) line::x1#0 ← (byte~) lines::$2 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ] ( main:2::lines:12 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ] )
    // (byte) line::x1#0 = (byte~) lines::$2  // register copy zp ZP_BYTE:3
  //SEG39 [23] (byte) line::y0#0 ← (byte~) lines::$3 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ] ( main:2::lines:12 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ] ) -- yby=zpby1 
    ldy _3
  //SEG40 [24] (byte) line::y1#0 ← (byte~) lines::$5 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ( main:2::lines:12 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ) -- zpby1=xby 
    stx line.y1
  //SEG41 [25] call line param-assignment [ lines::l#2 ] ( main:2::lines:12 [ lines::l#2 ] )
    jsr line
  //SEG42 lines::@3
  b3:
  //SEG43 [26] (byte) lines::l#1 ← ++ (byte) lines::l#2 [ lines::l#1 ] ( main:2::lines:12 [ lines::l#1 ] ) -- zpby1=_inc_zpby1 
    inc l
  //SEG44 [27] if((byte) lines::l#1<(const byte) lines_cnt#0) goto lines::@1 [ lines::l#1 ] ( main:2::lines:12 [ lines::l#1 ] ) -- zpby1_lt_coby1_then_la1 
    lda l
    cmp #lines_cnt
    bcc b1_from_b3
  //SEG45 lines::@return
  breturn:
  //SEG46 [28] return  [ ] ( main:2::lines:12 [ ] )
    rts
}
//SEG47 line
line: {
    .label x0 = 5
    .label x1 = 3
    .label y1 = 4
    .label xd = 7
    .label yd = $a
  //SEG48 [29] if((byte) line::x0#0>=(byte) line::x1#0) goto line::@1 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ) -- zpby1_ge_zpby2_then_la1 
    lda x0
    cmp x1
    bcs b1
  //SEG49 line::@15
  b15:
  //SEG50 [30] (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ) -- zpby1=zpby2_minus_zpby3 
    lda x1
    sec
    sbc x0
    sta xd
  //SEG51 [31] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@2 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ) -- yby_ge_zpby1_then_la1 
    cpy y1
    bcs b2
  //SEG52 line::@16
  b16:
  //SEG53 [32] (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ) -- zpby1=zpby2_minus_yby 
    sty $ff
    lda y1
    sec
    sbc $ff
    sta yd
  //SEG54 [33] if((byte) line::yd#1>=(byte) line::xd#1) goto line::@3 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp xd
    bcs b3
  //SEG55 line::@17
  b17:
  //SEG56 [34] (byte) line_xdyi::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG57 [35] (byte) line_xdyi::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ] ) -- zpby1=yby 
    sty line_xdyi.y
  //SEG58 [36] (byte) line_xdyi::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ] ) -- zpby1=zpby2 
    lda x1
    sta line_xdyi.x1
  //SEG59 [37] (byte) line_xdyi::xd#0 ← (byte) line::xd#1 [ line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyi.xd
  //SEG60 [38] (byte) line_xdyi::yd#0 ← (byte) line::yd#1 [ line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyi.yd
  //SEG61 [39] call line_xdyi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG62 [120] phi from line::@17 to line_xdyi [phi:line::@17->line_xdyi]
  line_xdyi_from_b17:
  //SEG63 [120] phi (byte) line_xdyi::x1#6 = (byte) line_xdyi::x1#0 [phi:line::@17->line_xdyi#0] -- register_copy 
  //SEG64 [120] phi (byte) line_xdyi::xd#5 = (byte) line_xdyi::xd#0 [phi:line::@17->line_xdyi#1] -- register_copy 
  //SEG65 [120] phi (byte) line_xdyi::y#5 = (byte) line_xdyi::y#0 [phi:line::@17->line_xdyi#2] -- register_copy 
  //SEG66 [120] phi (byte) line_xdyi::x#6 = (byte) line_xdyi::x#0 [phi:line::@17->line_xdyi#3] -- register_copy 
  //SEG67 [120] phi (byte) line_xdyi::yd#2 = (byte) line_xdyi::yd#0 [phi:line::@17->line_xdyi#4] -- register_copy 
    jsr line_xdyi
  //SEG68 line::@return
  breturn:
  //SEG69 [40] return  [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
    rts
  //SEG70 line::@3
  b3:
  //SEG71 [41] (byte) line_ydxi::y#0 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ] ) -- zpby1=yby 
    sty line_ydxi.y
  //SEG72 [42] (byte) line_ydxi::x#0 ← (byte) line::x0#0 [ line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG73 [43] (byte) line_ydxi::y1#0 ← (byte) line::y1#0 [ line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxi.y1
  //SEG74 [44] (byte) line_ydxi::yd#0 ← (byte) line::yd#1 [ line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxi.yd
  //SEG75 [45] (byte) line_ydxi::xd#0 ← (byte) line::xd#1 [ line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxi.xd
  //SEG76 [46] call line_ydxi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG77 [91] phi from line::@3 to line_ydxi [phi:line::@3->line_ydxi]
  line_ydxi_from_b3:
  //SEG78 [91] phi (byte) line_ydxi::y1#6 = (byte) line_ydxi::y1#0 [phi:line::@3->line_ydxi#0] -- register_copy 
  //SEG79 [91] phi (byte) line_ydxi::yd#5 = (byte) line_ydxi::yd#0 [phi:line::@3->line_ydxi#1] -- register_copy 
  //SEG80 [91] phi (byte) line_ydxi::y#6 = (byte) line_ydxi::y#0 [phi:line::@3->line_ydxi#2] -- register_copy 
  //SEG81 [91] phi (byte) line_ydxi::x#5 = (byte) line_ydxi::x#0 [phi:line::@3->line_ydxi#3] -- register_copy 
  //SEG82 [91] phi (byte) line_ydxi::xd#2 = (byte) line_ydxi::xd#0 [phi:line::@3->line_ydxi#4] -- register_copy 
    jsr line_ydxi
    jmp breturn
  //SEG83 line::@2
  b2:
  //SEG84 [47] (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ) -- zpby1=yby_minus_zpby2 
    tya
    sec
    sbc y1
    sta yd
  //SEG85 [48] if((byte) line::yd#0>=(byte) line::xd#1) goto line::@6 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp xd
    bcs b6
  //SEG86 line::@20
  b20:
  //SEG87 [49] (byte) line_xdyd::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG88 [50] (byte) line_xdyd::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ] ) -- zpby1=yby 
    sty line_xdyd.y
  //SEG89 [51] (byte) line_xdyd::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ] ) -- zpby1=zpby2 
    lda x1
    sta line_xdyd.x1
  //SEG90 [52] (byte) line_xdyd::xd#0 ← (byte) line::xd#1 [ line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyd.xd
  //SEG91 [53] (byte) line_xdyd::yd#0 ← (byte) line::yd#0 [ line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyd.yd
  //SEG92 [54] call line_xdyd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG93 [150] phi from line::@20 to line_xdyd [phi:line::@20->line_xdyd]
  line_xdyd_from_b20:
  //SEG94 [150] phi (byte) line_xdyd::x1#6 = (byte) line_xdyd::x1#0 [phi:line::@20->line_xdyd#0] -- register_copy 
  //SEG95 [150] phi (byte) line_xdyd::xd#5 = (byte) line_xdyd::xd#0 [phi:line::@20->line_xdyd#1] -- register_copy 
  //SEG96 [150] phi (byte) line_xdyd::y#5 = (byte) line_xdyd::y#0 [phi:line::@20->line_xdyd#2] -- register_copy 
  //SEG97 [150] phi (byte) line_xdyd::x#6 = (byte) line_xdyd::x#0 [phi:line::@20->line_xdyd#3] -- register_copy 
  //SEG98 [150] phi (byte) line_xdyd::yd#2 = (byte) line_xdyd::yd#0 [phi:line::@20->line_xdyd#4] -- register_copy 
    jsr line_xdyd
    jmp breturn
  //SEG99 line::@6
  b6:
  //SEG100 [55] (byte) line_ydxd::y#0 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxd.y
  //SEG101 [56] (byte) line_ydxd::x#0 ← (byte) line::x1#0 [ line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ] ) -- xby=zpby1 
    ldx x1
  //SEG102 [57] (byte) line_ydxd::y1#0 ← (byte) line::y0#0 [ line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ] ) -- zpby1=yby 
    sty line_ydxd.y1
  //SEG103 [58] (byte) line_ydxd::yd#0 ← (byte) line::yd#0 [ line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxd.yd
  //SEG104 [59] (byte) line_ydxd::xd#0 ← (byte) line::xd#1 [ line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxd.xd
  //SEG105 [60] call line_ydxd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG106 [135] phi from line::@6 to line_ydxd [phi:line::@6->line_ydxd]
  line_ydxd_from_b6:
  //SEG107 [135] phi (byte) line_ydxd::y1#6 = (byte) line_ydxd::y1#0 [phi:line::@6->line_ydxd#0] -- register_copy 
  //SEG108 [135] phi (byte) line_ydxd::yd#5 = (byte) line_ydxd::yd#0 [phi:line::@6->line_ydxd#1] -- register_copy 
  //SEG109 [135] phi (byte) line_ydxd::y#6 = (byte) line_ydxd::y#0 [phi:line::@6->line_ydxd#2] -- register_copy 
  //SEG110 [135] phi (byte) line_ydxd::x#5 = (byte) line_ydxd::x#0 [phi:line::@6->line_ydxd#3] -- register_copy 
  //SEG111 [135] phi (byte) line_ydxd::xd#2 = (byte) line_ydxd::xd#0 [phi:line::@6->line_ydxd#4] -- register_copy 
    jsr line_ydxd
    jmp breturn
  //SEG112 line::@1
  b1:
  //SEG113 [61] (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ) -- zpby1=zpby2_minus_zpby3 
    lda x0
    sec
    sbc x1
    sta xd
  //SEG114 [62] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@9 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ) -- yby_ge_zpby1_then_la1 
    cpy y1
    bcs b9
  //SEG115 line::@23
  b23:
  //SEG116 [63] (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ) -- zpby1=zpby2_minus_yby 
    sty $ff
    lda y1
    sec
    sbc $ff
    sta yd
  //SEG117 [64] if((byte) line::yd#3>=(byte) line::xd#0) goto line::@10 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp xd
    bcs b10
  //SEG118 line::@24
  b24:
  //SEG119 [65] (byte) line_xdyd::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG120 [66] (byte) line_xdyd::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_xdyd.y
  //SEG121 [67] (byte) line_xdyd::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ] )
    // (byte) line_xdyd::x1#1 = (byte) line::x0#0  // register copy zp ZP_BYTE:5
  //SEG122 [68] (byte) line_xdyd::xd#1 ← (byte) line::xd#0 [ line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyd.xd
  //SEG123 [69] (byte) line_xdyd::yd#1 ← (byte) line::yd#3 [ line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyd.yd
  //SEG124 [70] call line_xdyd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG125 [150] phi from line::@24 to line_xdyd [phi:line::@24->line_xdyd]
  line_xdyd_from_b24:
  //SEG126 [150] phi (byte) line_xdyd::x1#6 = (byte) line_xdyd::x1#1 [phi:line::@24->line_xdyd#0] -- register_copy 
  //SEG127 [150] phi (byte) line_xdyd::xd#5 = (byte) line_xdyd::xd#1 [phi:line::@24->line_xdyd#1] -- register_copy 
  //SEG128 [150] phi (byte) line_xdyd::y#5 = (byte) line_xdyd::y#1 [phi:line::@24->line_xdyd#2] -- register_copy 
  //SEG129 [150] phi (byte) line_xdyd::x#6 = (byte) line_xdyd::x#1 [phi:line::@24->line_xdyd#3] -- register_copy 
  //SEG130 [150] phi (byte) line_xdyd::yd#2 = (byte) line_xdyd::yd#1 [phi:line::@24->line_xdyd#4] -- register_copy 
    jsr line_xdyd
    jmp breturn
  //SEG131 line::@10
  b10:
  //SEG132 [71] (byte) line_ydxd::y#1 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ] ) -- zpby1=yby 
    sty line_ydxd.y
  //SEG133 [72] (byte) line_ydxd::x#1 ← (byte) line::x0#0 [ line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ] ) -- xby=zpby1 
    ldx x0
  //SEG134 [73] (byte) line_ydxd::y1#1 ← (byte) line::y1#0 [ line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxd.y1
  //SEG135 [74] (byte) line_ydxd::yd#1 ← (byte) line::yd#3 [ line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxd.yd
  //SEG136 [75] (byte) line_ydxd::xd#1 ← (byte) line::xd#0 [ line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxd.xd
  //SEG137 [76] call line_ydxd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG138 [135] phi from line::@10 to line_ydxd [phi:line::@10->line_ydxd]
  line_ydxd_from_b10:
  //SEG139 [135] phi (byte) line_ydxd::y1#6 = (byte) line_ydxd::y1#1 [phi:line::@10->line_ydxd#0] -- register_copy 
  //SEG140 [135] phi (byte) line_ydxd::yd#5 = (byte) line_ydxd::yd#1 [phi:line::@10->line_ydxd#1] -- register_copy 
  //SEG141 [135] phi (byte) line_ydxd::y#6 = (byte) line_ydxd::y#1 [phi:line::@10->line_ydxd#2] -- register_copy 
  //SEG142 [135] phi (byte) line_ydxd::x#5 = (byte) line_ydxd::x#1 [phi:line::@10->line_ydxd#3] -- register_copy 
  //SEG143 [135] phi (byte) line_ydxd::xd#2 = (byte) line_ydxd::xd#1 [phi:line::@10->line_ydxd#4] -- register_copy 
    jsr line_ydxd
    jmp breturn
  //SEG144 line::@9
  b9:
  //SEG145 [77] (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ) -- zpby1=yby_minus_zpby2 
    tya
    sec
    sbc y1
    sta yd
  //SEG146 [78] if((byte) line::yd#10>=(byte) line::xd#0) goto line::@13 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp xd
    bcs b13
  //SEG147 line::@27
  b27:
  //SEG148 [79] (byte) line_xdyi::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG149 [80] (byte) line_xdyi::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_xdyi.y
  //SEG150 [81] (byte) line_xdyi::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ] )
    // (byte) line_xdyi::x1#1 = (byte) line::x0#0  // register copy zp ZP_BYTE:5
  //SEG151 [82] (byte) line_xdyi::xd#1 ← (byte) line::xd#0 [ line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyi.xd
  //SEG152 [83] (byte) line_xdyi::yd#1 ← (byte) line::yd#10 [ line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyi.yd
  //SEG153 [84] call line_xdyi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG154 [120] phi from line::@27 to line_xdyi [phi:line::@27->line_xdyi]
  line_xdyi_from_b27:
  //SEG155 [120] phi (byte) line_xdyi::x1#6 = (byte) line_xdyi::x1#1 [phi:line::@27->line_xdyi#0] -- register_copy 
  //SEG156 [120] phi (byte) line_xdyi::xd#5 = (byte) line_xdyi::xd#1 [phi:line::@27->line_xdyi#1] -- register_copy 
  //SEG157 [120] phi (byte) line_xdyi::y#5 = (byte) line_xdyi::y#1 [phi:line::@27->line_xdyi#2] -- register_copy 
  //SEG158 [120] phi (byte) line_xdyi::x#6 = (byte) line_xdyi::x#1 [phi:line::@27->line_xdyi#3] -- register_copy 
  //SEG159 [120] phi (byte) line_xdyi::yd#2 = (byte) line_xdyi::yd#1 [phi:line::@27->line_xdyi#4] -- register_copy 
    jsr line_xdyi
    jmp breturn
  //SEG160 line::@13
  b13:
  //SEG161 [85] (byte) line_ydxi::y#1 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxi.y
  //SEG162 [86] (byte) line_ydxi::x#1 ← (byte) line::x1#0 [ line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG163 [87] (byte) line_ydxi::y1#1 ← (byte) line::y0#0 [ line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ] ) -- zpby1=yby 
    sty line_ydxi.y1
  //SEG164 [88] (byte) line_ydxi::yd#1 ← (byte) line::yd#10 [ line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxi.yd
  //SEG165 [89] (byte) line_ydxi::xd#1 ← (byte) line::xd#0 [ line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxi.xd
  //SEG166 [90] call line_ydxi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG167 [91] phi from line::@13 to line_ydxi [phi:line::@13->line_ydxi]
  line_ydxi_from_b13:
  //SEG168 [91] phi (byte) line_ydxi::y1#6 = (byte) line_ydxi::y1#1 [phi:line::@13->line_ydxi#0] -- register_copy 
  //SEG169 [91] phi (byte) line_ydxi::yd#5 = (byte) line_ydxi::yd#1 [phi:line::@13->line_ydxi#1] -- register_copy 
  //SEG170 [91] phi (byte) line_ydxi::y#6 = (byte) line_ydxi::y#1 [phi:line::@13->line_ydxi#2] -- register_copy 
  //SEG171 [91] phi (byte) line_ydxi::x#5 = (byte) line_ydxi::x#1 [phi:line::@13->line_ydxi#3] -- register_copy 
  //SEG172 [91] phi (byte) line_ydxi::xd#2 = (byte) line_ydxi::xd#1 [phi:line::@13->line_ydxi#4] -- register_copy 
    jsr line_ydxi
    jmp breturn
}
//SEG173 line_ydxi
line_ydxi: {
    .label y = 6
    .label y1 = 5
    .label yd = 4
    .label xd = 3
    .label e = 7
  //SEG174 [92] (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda xd
    lsr
    sta e
  //SEG175 [93] phi from line_ydxi line_ydxi::@2 to line_ydxi::@1 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1]
  b1_from_line_ydxi:
  b1_from_b2:
  //SEG176 [93] phi (byte) line_ydxi::e#3 = (byte) line_ydxi::e#0 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#0] -- register_copy 
  //SEG177 [93] phi (byte) line_ydxi::y#3 = (byte) line_ydxi::y#6 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#1] -- register_copy 
  //SEG178 [93] phi (byte) line_ydxi::x#3 = (byte) line_ydxi::x#5 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#2] -- register_copy 
  //SEG179 line_ydxi::@1
  b1:
  //SEG180 [94] (byte) plot::x#2 ← (byte) line_ydxi::x#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] )
    // (byte) plot::x#2 = (byte) line_ydxi::x#3  // register copy reg byte x
  //SEG181 [95] (byte) plot::y#2 ← (byte) line_ydxi::y#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] ) -- yby=zpby1 
    ldy y
  //SEG182 [96] call plot param-assignment [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] )
  //SEG183 [106] phi from line_ydxi::@1 to plot [phi:line_ydxi::@1->plot]
  plot_from_b1:
  //SEG184 [106] phi (byte) plot::y#4 = (byte) plot::y#2 [phi:line_ydxi::@1->plot#0] -- register_copy 
  //SEG185 [106] phi (byte) plot::x#4 = (byte) plot::x#2 [phi:line_ydxi::@1->plot#1] -- register_copy 
    jsr plot
  //SEG186 line_ydxi::@5
  b5:
  //SEG187 [97] (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG188 [98] (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc xd
    sta e
  //SEG189 [99] if((byte) line_ydxi::yd#5>=(byte) line_ydxi::e#1) goto line_ydxi::@2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp e
    bcs b2_from_b5
  //SEG190 line_ydxi::@3
  b3:
  //SEG191 [100] (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG192 [101] (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc yd
    sta e
  //SEG193 [102] phi from line_ydxi::@3 line_ydxi::@5 to line_ydxi::@2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2]
  b2_from_b3:
  b2_from_b5:
  //SEG194 [102] phi (byte) line_ydxi::e#6 = (byte) line_ydxi::e#2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2#0] -- register_copy 
  //SEG195 [102] phi (byte) line_ydxi::x#6 = (byte) line_ydxi::x#2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2#1] -- register_copy 
  //SEG196 line_ydxi::@2
  b2:
  //SEG197 [103] (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] ) -- aby=zpby1_plus_1 
    lda y1
    clc
    adc #1
  //SEG198 [104] if((byte) line_ydxi::y#2<(byte~) line_ydxi::$8) goto line_ydxi::@1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] ) -- zpby1_lt_aby_then_la1 
    cmp y
    bcs b1_from_b2
  //SEG199 line_ydxi::@return
  breturn:
  //SEG200 [105] return  [ ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 ] )
    rts
}
//SEG201 plot
plot: {
    .label plotter_x = 8
    .label plotter_y = $b
    .label plotter = 8
  //SEG202 [107] (byte~) plot::$0 ← (const byte[]) plot_xhi#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::$0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::$0 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_xhi,x
  //SEG203 [108] (byte*) plot::plotter_x#1 ← ((byte*))(byte/signed byte/word/signed word) 0 hi= (byte~) plot::$0 [ plot::x#4 plot::y#4 plot::plotter_x#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] ) -- zpptrby1=cowo1_sethi_aby 
    sta plotter_x+1
    lda #<0
    sta plotter_x
  //SEG204 [109] (byte~) plot::$1 ← (const byte[]) plot_xlo#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_xlo,x
  //SEG205 [110] (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1 [ plot::x#4 plot::y#4 plot::plotter_x#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] ) -- zpptrby1=zpptrby1_setlo_aby 
    sta plotter_x
  //SEG206 [111] (byte~) plot::$2 ← (const byte[]) plot_yhi#0 *idx (byte) plot::y#4 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] ) -- aby=cowo1_derefidx_yby 
    lda plot_yhi,y
  //SEG207 [112] (word) plot::plotter_y#1 ← (byte/signed byte/word/signed word) 0 hi= (byte~) plot::$2 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] ) -- zpwo1=coby1_sethi_aby 
    sta plotter_y+1
    lda #<0
    sta plotter_y
  //SEG208 [113] (byte~) plot::$3 ← (const byte[]) plot_ylo#0 *idx (byte) plot::y#4 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] ) -- aby=cowo1_derefidx_yby 
    lda plot_ylo,y
  //SEG209 [114] (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ) -- zpwo1=zpwo1_setlo_aby 
    sta plotter_y
  //SEG210 [115] (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2 [ plot::x#4 plot::plotter#0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] ) -- zpptrby1=zpptrby1_plus_zpwo1 
    lda plotter
    clc
    adc plotter_y
    sta plotter
    lda plotter+1
    adc plotter_y+1
    sta plotter+1
  //SEG211 [116] (byte~) plot::$5 ← (const byte[]) plot_bit#0 *idx (byte) plot::x#4 [ plot::plotter#0 plot::$5 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$5 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_bit,x
  //SEG212 [117] (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5 [ plot::plotter#0 plot::$6 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] ) -- aby=_deref_zpptrby1_bor_aby 
    ldy #0
    ora (plotter),y
  //SEG213 [118] *((byte*) plot::plotter#0) ← (byte~) plot::$6 [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ) -- _deref_zpptrby1=aby 
    ldy #0
    sta (plotter),y
  //SEG214 plot::@return
  breturn:
  //SEG215 [119] return  [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
    rts
}
//SEG216 line_xdyi
line_xdyi: {
    .label _8 = $a
    .label y = 6
    .label x1 = 5
    .label xd = 4
    .label yd = 3
    .label e = 7
  //SEG217 [121] (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda yd
    lsr
    sta e
  //SEG218 [122] phi from line_xdyi line_xdyi::@2 to line_xdyi::@1 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1]
  b1_from_line_xdyi:
  b1_from_b2:
  //SEG219 [122] phi (byte) line_xdyi::e#3 = (byte) line_xdyi::e#0 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#0] -- register_copy 
  //SEG220 [122] phi (byte) line_xdyi::y#3 = (byte) line_xdyi::y#5 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#1] -- register_copy 
  //SEG221 [122] phi (byte) line_xdyi::x#3 = (byte) line_xdyi::x#6 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#2] -- register_copy 
  //SEG222 line_xdyi::@1
  b1:
  //SEG223 [123] (byte) plot::x#0 ← (byte) line_xdyi::x#3 [ plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
    // (byte) plot::x#0 = (byte) line_xdyi::x#3  // register copy reg byte x
  //SEG224 [124] (byte) plot::y#0 ← (byte) line_xdyi::y#3 [ plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG225 [125] call plot param-assignment [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
  //SEG226 [106] phi from line_xdyi::@1 to plot [phi:line_xdyi::@1->plot]
  plot_from_b1:
  //SEG227 [106] phi (byte) plot::y#4 = (byte) plot::y#0 [phi:line_xdyi::@1->plot#0] -- register_copy 
  //SEG228 [106] phi (byte) plot::x#4 = (byte) plot::x#0 [phi:line_xdyi::@1->plot#1] -- register_copy 
    jsr plot
  //SEG229 line_xdyi::@5
  b5:
  //SEG230 [126] (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG231 [127] (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc yd
    sta e
  //SEG232 [128] if((byte) line_xdyi::xd#5>=(byte) line_xdyi::e#1) goto line_xdyi::@2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda xd
    cmp e
    bcs b2_from_b5
  //SEG233 line_xdyi::@3
  b3:
  //SEG234 [129] (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG235 [130] (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc xd
    sta e
  //SEG236 [131] phi from line_xdyi::@3 line_xdyi::@5 to line_xdyi::@2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2]
  b2_from_b3:
  b2_from_b5:
  //SEG237 [131] phi (byte) line_xdyi::e#6 = (byte) line_xdyi::e#2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2#0] -- register_copy 
  //SEG238 [131] phi (byte) line_xdyi::y#6 = (byte) line_xdyi::y#2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2#1] -- register_copy 
  //SEG239 line_xdyi::@2
  b2:
  //SEG240 [132] (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] ) -- zpby1=zpby2_plus_1 
    lda x1
    clc
    adc #1
    sta _8
  //SEG241 [133] if((byte) line_xdyi::x#2<(byte~) line_xdyi::$8) goto line_xdyi::@1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] ) -- xby_lt_zpby1_then_la1 
    cpx _8
    bcc b1_from_b2
  //SEG242 line_xdyi::@return
  breturn:
  //SEG243 [134] return  [ ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 ] )
    rts
}
//SEG244 line_ydxd
line_ydxd: {
    .label y = 6
    .label y1 = 5
    .label yd = 4
    .label xd = 3
    .label e = 7
  //SEG245 [136] (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda xd
    lsr
    sta e
  //SEG246 [137] phi from line_ydxd line_ydxd::@2 to line_ydxd::@1 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1]
  b1_from_line_ydxd:
  b1_from_b2:
  //SEG247 [137] phi (byte) line_ydxd::e#3 = (byte) line_ydxd::e#0 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#0] -- register_copy 
  //SEG248 [137] phi (byte) line_ydxd::y#3 = (byte) line_ydxd::y#6 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#1] -- register_copy 
  //SEG249 [137] phi (byte) line_ydxd::x#3 = (byte) line_ydxd::x#5 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#2] -- register_copy 
  //SEG250 line_ydxd::@1
  b1:
  //SEG251 [138] (byte) plot::x#3 ← (byte) line_ydxd::x#3 [ plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
    // (byte) plot::x#3 = (byte) line_ydxd::x#3  // register copy reg byte x
  //SEG252 [139] (byte) plot::y#3 ← (byte) line_ydxd::y#3 [ plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG253 [140] call plot param-assignment [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
  //SEG254 [106] phi from line_ydxd::@1 to plot [phi:line_ydxd::@1->plot]
  plot_from_b1:
  //SEG255 [106] phi (byte) plot::y#4 = (byte) plot::y#3 [phi:line_ydxd::@1->plot#0] -- register_copy 
  //SEG256 [106] phi (byte) plot::x#4 = (byte) plot::x#3 [phi:line_ydxd::@1->plot#1] -- register_copy 
    jsr plot
  //SEG257 line_ydxd::@5
  b5:
  //SEG258 [141] (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG259 [142] (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc xd
    sta e
  //SEG260 [143] if((byte) line_ydxd::yd#5>=(byte) line_ydxd::e#1) goto line_ydxd::@2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp e
    bcs b2_from_b5
  //SEG261 line_ydxd::@3
  b3:
  //SEG262 [144] (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] ) -- xby=xby_minus_1 
    dex
  //SEG263 [145] (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc yd
    sta e
  //SEG264 [146] phi from line_ydxd::@3 line_ydxd::@5 to line_ydxd::@2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2]
  b2_from_b3:
  b2_from_b5:
  //SEG265 [146] phi (byte) line_ydxd::e#6 = (byte) line_ydxd::e#2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2#0] -- register_copy 
  //SEG266 [146] phi (byte) line_ydxd::x#6 = (byte) line_ydxd::x#2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2#1] -- register_copy 
  //SEG267 line_ydxd::@2
  b2:
  //SEG268 [147] (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] ) -- aby=zpby1_plus_1 
    lda y1
    clc
    adc #1
  //SEG269 [148] if((byte) line_ydxd::y#2<(byte~) line_ydxd::$8) goto line_ydxd::@1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] ) -- zpby1_lt_aby_then_la1 
    cmp y
    bcs b1_from_b2
  //SEG270 line_ydxd::@return
  breturn:
  //SEG271 [149] return  [ ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 ] )
    rts
}
//SEG272 line_xdyd
line_xdyd: {
    .label _8 = $a
    .label y = 6
    .label x1 = 5
    .label xd = 4
    .label yd = 3
    .label e = 7
  //SEG273 [151] (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda yd
    lsr
    sta e
  //SEG274 [152] phi from line_xdyd line_xdyd::@2 to line_xdyd::@1 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1]
  b1_from_line_xdyd:
  b1_from_b2:
  //SEG275 [152] phi (byte) line_xdyd::e#3 = (byte) line_xdyd::e#0 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#0] -- register_copy 
  //SEG276 [152] phi (byte) line_xdyd::y#3 = (byte) line_xdyd::y#5 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#1] -- register_copy 
  //SEG277 [152] phi (byte) line_xdyd::x#3 = (byte) line_xdyd::x#6 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#2] -- register_copy 
  //SEG278 line_xdyd::@1
  b1:
  //SEG279 [153] (byte) plot::x#1 ← (byte) line_xdyd::x#3 [ plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
    // (byte) plot::x#1 = (byte) line_xdyd::x#3  // register copy reg byte x
  //SEG280 [154] (byte) plot::y#1 ← (byte) line_xdyd::y#3 [ plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG281 [155] call plot param-assignment [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
  //SEG282 [106] phi from line_xdyd::@1 to plot [phi:line_xdyd::@1->plot]
  plot_from_b1:
  //SEG283 [106] phi (byte) plot::y#4 = (byte) plot::y#1 [phi:line_xdyd::@1->plot#0] -- register_copy 
  //SEG284 [106] phi (byte) plot::x#4 = (byte) plot::x#1 [phi:line_xdyd::@1->plot#1] -- register_copy 
    jsr plot
  //SEG285 line_xdyd::@5
  b5:
  //SEG286 [156] (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG287 [157] (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc yd
    sta e
  //SEG288 [158] if((byte) line_xdyd::xd#5>=(byte) line_xdyd::e#1) goto line_xdyd::@2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda xd
    cmp e
    bcs b2_from_b5
  //SEG289 line_xdyd::@3
  b3:
  //SEG290 [159] (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] ) -- zpby1=zpby1_minus_1 
    dec y
  //SEG291 [160] (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc xd
    sta e
  //SEG292 [161] phi from line_xdyd::@3 line_xdyd::@5 to line_xdyd::@2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2]
  b2_from_b3:
  b2_from_b5:
  //SEG293 [161] phi (byte) line_xdyd::e#6 = (byte) line_xdyd::e#2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2#0] -- register_copy 
  //SEG294 [161] phi (byte) line_xdyd::y#6 = (byte) line_xdyd::y#2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2#1] -- register_copy 
  //SEG295 line_xdyd::@2
  b2:
  //SEG296 [162] (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] ) -- zpby1=zpby2_plus_1 
    lda x1
    clc
    adc #1
    sta _8
  //SEG297 [163] if((byte) line_xdyd::x#2<(byte~) line_xdyd::$8) goto line_xdyd::@1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] ) -- xby_lt_zpby1_then_la1 
    cpx _8
    bcc b1_from_b2
  //SEG298 line_xdyd::@return
  breturn:
  //SEG299 [164] return  [ ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 ] )
    rts
}
//SEG300 init_plot_tables
init_plot_tables: {
    .label _6 = 2
    .label yoffs = 8
  //SEG301 [166] phi from init_plot_tables to init_plot_tables::@1 [phi:init_plot_tables->init_plot_tables::@1]
  b1_from_init_plot_tables:
  //SEG302 [166] phi (byte) init_plot_tables::bits#3 = (byte/word/signed word) 128 [phi:init_plot_tables->init_plot_tables::@1#0] -- yby=coby1 
    ldy #$80
  //SEG303 [166] phi (byte) init_plot_tables::x#2 = (byte/signed byte/word/signed word) 0 [phi:init_plot_tables->init_plot_tables::@1#1] -- xby=coby1 
    ldx #0
    jmp b1
  //SEG304 [166] phi from init_plot_tables::@2 to init_plot_tables::@1 [phi:init_plot_tables::@2->init_plot_tables::@1]
  b1_from_b2:
  //SEG305 [166] phi (byte) init_plot_tables::bits#3 = (byte) init_plot_tables::bits#4 [phi:init_plot_tables::@2->init_plot_tables::@1#0] -- register_copy 
  //SEG306 [166] phi (byte) init_plot_tables::x#2 = (byte) init_plot_tables::x#1 [phi:init_plot_tables::@2->init_plot_tables::@1#1] -- register_copy 
  //SEG307 init_plot_tables::@1
  b1:
  //SEG308 [167] (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ) -- aby=xby_band_coby1 
    txa
    and #$f8
  //SEG309 [168] *((const byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_xlo,x
  //SEG310 [169] *((const byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← >(const byte*) BITMAP#0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=coby2 
    lda #>BITMAP
    sta plot_xhi,x
  //SEG311 [170] *((const byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=yby 
    tya
    sta plot_bit,x
  //SEG312 [171] (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ) -- yby=yby_ror_1 
    tya
    lsr
    tay
  //SEG313 [172] if((byte) init_plot_tables::bits#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ) -- yby_neq_0_then_la1 
    cpy #0
    bne b10_from_b1
  //SEG314 [173] phi from init_plot_tables::@1 to init_plot_tables::@2 [phi:init_plot_tables::@1->init_plot_tables::@2]
  b2_from_b1:
  //SEG315 [173] phi (byte) init_plot_tables::bits#4 = (byte/word/signed word) 128 [phi:init_plot_tables::@1->init_plot_tables::@2#0] -- yby=coby1 
    ldy #$80
  //SEG316 init_plot_tables::@2
  b2:
  //SEG317 [174] (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ) -- xby=_inc_xby 
    inx
  //SEG318 [175] if((byte) init_plot_tables::x#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@1 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ) -- xby_neq_0_then_la1 
    cpx #0
    bne b1_from_b2
  //SEG319 [176] phi from init_plot_tables::@2 to init_plot_tables::@3 [phi:init_plot_tables::@2->init_plot_tables::@3]
  b3_from_b2:
  //SEG320 [176] phi (byte*) init_plot_tables::yoffs#2 = ((byte*))(byte/signed byte/word/signed word) 0 [phi:init_plot_tables::@2->init_plot_tables::@3#0] -- zpptrby1=cowo1 
    lda #<0
    sta yoffs
    lda #>0
    sta yoffs+1
  //SEG321 [176] phi (byte) init_plot_tables::y#2 = (byte/signed byte/word/signed word) 0 [phi:init_plot_tables::@2->init_plot_tables::@3#1] -- xby=coby1 
    ldx #0
    jmp b3
  //SEG322 [176] phi from init_plot_tables::@4 to init_plot_tables::@3 [phi:init_plot_tables::@4->init_plot_tables::@3]
  b3_from_b4:
  //SEG323 [176] phi (byte*) init_plot_tables::yoffs#2 = (byte*) init_plot_tables::yoffs#4 [phi:init_plot_tables::@4->init_plot_tables::@3#0] -- register_copy 
  //SEG324 [176] phi (byte) init_plot_tables::y#2 = (byte) init_plot_tables::y#1 [phi:init_plot_tables::@4->init_plot_tables::@3#1] -- register_copy 
  //SEG325 init_plot_tables::@3
  b3:
  //SEG326 [177] (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ) -- zpby1=xby_band_coby1 
    txa
    and #7
    sta _6
  //SEG327 [178] (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ] ) -- aby=_lo_zpptrby1 
    lda yoffs
  //SEG328 [179] (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ] ) -- aby=zpby1_bor_aby 
    ora _6
  //SEG329 [180] *((const byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_ylo,x
  //SEG330 [181] (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ) -- aby=_hi_zpptrby1 
    lda yoffs+1
  //SEG331 [182] *((const byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_yhi,x
  //SEG332 [183] (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ) -- aby=xby_band_coby1 
    txa
    and #7
  //SEG333 [184] if((byte~) init_plot_tables::$10!=(byte/signed byte/word/signed word) 7) goto init_plot_tables::@4 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- aby_neq_coby1_then_la1 
    cmp #7
    bne b4_from_b3
  //SEG334 init_plot_tables::@7
  b7:
  //SEG335 [185] (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ) -- zpptrby1=zpptrby1_plus_cowo1 
    lda yoffs
    clc
    adc #<$140
    sta yoffs
    lda yoffs+1
    adc #>$140
    sta yoffs+1
  //SEG336 [186] phi from init_plot_tables::@3 init_plot_tables::@7 to init_plot_tables::@4 [phi:init_plot_tables::@3/init_plot_tables::@7->init_plot_tables::@4]
  b4_from_b3:
  b4_from_b7:
  //SEG337 [186] phi (byte*) init_plot_tables::yoffs#4 = (byte*) init_plot_tables::yoffs#2 [phi:init_plot_tables::@3/init_plot_tables::@7->init_plot_tables::@4#0] -- register_copy 
  //SEG338 init_plot_tables::@4
  b4:
  //SEG339 [187] (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ) -- xby=_inc_xby 
    inx
  //SEG340 [188] if((byte) init_plot_tables::y#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@3 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ) -- xby_neq_0_then_la1 
    cpx #0
    bne b3_from_b4
  //SEG341 init_plot_tables::@return
  breturn:
  //SEG342 [189] return  [ ] ( main:2::init_plot_tables:10 [ ] )
    rts
  //SEG343 [190] phi from init_plot_tables::@1 to init_plot_tables::@10 [phi:init_plot_tables::@1->init_plot_tables::@10]
  b10_from_b1:
  //SEG344 init_plot_tables::@10
  b10:
  //SEG345 [173] phi from init_plot_tables::@10 to init_plot_tables::@2 [phi:init_plot_tables::@10->init_plot_tables::@2]
  b2_from_b10:
  //SEG346 [173] phi (byte) init_plot_tables::bits#4 = (byte) init_plot_tables::bits#1 [phi:init_plot_tables::@10->init_plot_tables::@2#0] -- register_copy 
    jmp b2
}
//SEG347 init_screen
init_screen: {
    .label b = 8
    .label c = 8
  //SEG348 [192] phi from init_screen to init_screen::@1 [phi:init_screen->init_screen::@1]
  b1_from_init_screen:
  //SEG349 [192] phi (byte*) init_screen::b#2 = (const byte*) BITMAP#0 [phi:init_screen->init_screen::@1#0] -- zpptrby1=cowo1 
    lda #<BITMAP
    sta b
    lda #>BITMAP
    sta b+1
    jmp b1
  //SEG350 [192] phi from init_screen::@1 to init_screen::@1 [phi:init_screen::@1->init_screen::@1]
  b1_from_b1:
  //SEG351 [192] phi (byte*) init_screen::b#2 = (byte*) init_screen::b#1 [phi:init_screen::@1->init_screen::@1#0] -- register_copy 
  //SEG352 init_screen::@1
  b1:
  //SEG353 [193] *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0 [ init_screen::b#2 ] ( main:2::init_screen:8 [ init_screen::b#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #0
    sta (b),y
  //SEG354 [194] (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc b
    bne !+
    inc b+1
  !:
  //SEG355 [195] if((byte*) init_screen::b#1!=(const byte*) BITMAP#0+(word/signed word) 8192) goto init_screen::@1 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] ) -- zpptrby1_neq_cowo1_then_la1 
    lda b+1
    cmp #>BITMAP+$2000
    bne b1_from_b1
    lda b
    cmp #<BITMAP+$2000
    bne b1_from_b1
  //SEG356 [196] phi from init_screen::@1 to init_screen::@2 [phi:init_screen::@1->init_screen::@2]
  b2_from_b1:
  //SEG357 [196] phi (byte*) init_screen::c#2 = (const byte*) SCREEN#0 [phi:init_screen::@1->init_screen::@2#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta c
    lda #>SCREEN
    sta c+1
    jmp b2
  //SEG358 [196] phi from init_screen::@2 to init_screen::@2 [phi:init_screen::@2->init_screen::@2]
  b2_from_b2:
  //SEG359 [196] phi (byte*) init_screen::c#2 = (byte*) init_screen::c#1 [phi:init_screen::@2->init_screen::@2#0] -- register_copy 
  //SEG360 init_screen::@2
  b2:
  //SEG361 [197] *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20 [ init_screen::c#2 ] ( main:2::init_screen:8 [ init_screen::c#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #$14
    sta (c),y
  //SEG362 [198] (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc c
    bne !+
    inc c+1
  !:
  //SEG363 [199] if((byte*) init_screen::c#1!=(const byte*) SCREEN#0+(word/signed word) 1024) goto init_screen::@2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] ) -- zpptrby1_neq_cowo1_then_la1 
    lda c+1
    cmp #>SCREEN+$400
    bne b2_from_b2
    lda c
    cmp #<SCREEN+$400
    bne b2_from_b2
  //SEG364 init_screen::@return
  breturn:
  //SEG365 [200] return  [ ] ( main:2::init_screen:8 [ ] )
    rts
}

Removing instruction lda #0
Removing instruction lda yd
Removing instruction lda yd
Removing instruction lda yd
Removing instruction lda yd
Removing instruction ldy #0
Removing instruction lda #>0
Replacing instruction ldx #0 with TAX
Replacing instruction lda #0 with TYA
Succesful ASM optimization Pass5UnnecesaryLoadElimination
ASSEMBLER
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const BGCOL = $d020
  .const FGCOL = $d021
  .const D018 = $d018
  .const D011 = $d011
  .const BMM = $20
  .const DEN = $10
  .const RSEL = 8
  .const SCREEN = $400
  .const BITMAP = $2000
  .const plot_xlo = $1000
  .const plot_xhi = $1100
  .const plot_ylo = $1200
  .const plot_yhi = $1300
  .const plot_bit = $1400
  .const lines_cnt = 8
  lines_x: .byte $3c, $50, $6e, $50, $3c, $28, $a, $28, $3c
  lines_y: .byte $a, $28, $3c, $50, $6e, $50, $3c, $28, $a
//SEG2 @begin
bbegin:
//SEG3 [1] phi from @begin to @10 [phi:@begin->@10]
b10_from_bbegin:
//SEG4 @10
b10:
//SEG5 [2] call main param-assignment [ ] ( )
  jsr main
//SEG6 [3] phi from @10 to @end [phi:@10->@end]
bend_from_b10:
//SEG7 @end
bend:
//SEG8 main
main: {
  //SEG9 [4] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #0
    sta BGCOL
  //SEG10 [5] *((const byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    sta FGCOL
  //SEG11 [6] *((const byte*) D011#0) ← (const byte) BMM#0|(const byte) DEN#0|(const byte) RSEL#0|(byte/signed byte/word/signed word) 3 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #BMM|DEN|RSEL|3
    sta D011
  //SEG12 [7] *((const byte*) D018#0) ← (byte/signed byte/word/signed word) 24 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #$18
    sta D018
  //SEG13 [8] call init_screen param-assignment [ ] ( main:2 [ ] )
  //SEG14 [191] phi from main to init_screen [phi:main->init_screen]
  init_screen_from_main:
    jsr init_screen
  //SEG15 [9] phi from main to main::@3 [phi:main->main::@3]
  b3_from_main:
  //SEG16 main::@3
  b3:
  //SEG17 [10] call init_plot_tables param-assignment [ ] ( main:2 [ ] )
  //SEG18 [165] phi from main::@3 to init_plot_tables [phi:main::@3->init_plot_tables]
  init_plot_tables_from_b3:
    jsr init_plot_tables
  //SEG19 [11] phi from main::@3 main::@5 to main::@1 [phi:main::@3/main::@5->main::@1]
  b1_from_b3:
  b1_from_b5:
  //SEG20 main::@1
  b1:
  //SEG21 [12] call lines param-assignment [ ] ( main:2 [ ] )
  //SEG22 [15] phi from main::@1 to lines [phi:main::@1->lines]
  lines_from_b1:
    jsr lines
  //SEG23 main::@5
  b5:
  //SEG24 [13] if(true) goto main::@1 [ ] ( main:2 [ ] ) -- true_then_la1 
    jmp b1_from_b5
  //SEG25 main::@return
  breturn:
  //SEG26 [14] return  [ ] ( main:2 [ ] )
    rts
}
//SEG27 lines
lines: {
    .label _2 = 3
    .label _3 = 4
    .label l = 2
  //SEG28 [16] phi from lines to lines::@1 [phi:lines->lines::@1]
  b1_from_lines:
  //SEG29 [16] phi (byte) lines::l#2 = (byte/signed byte/word/signed word) 0 [phi:lines->lines::@1#0] -- zpby1=coby1 
    lda #0
    sta l
    jmp b1
  //SEG30 [16] phi from lines::@3 to lines::@1 [phi:lines::@3->lines::@1]
  b1_from_b3:
  //SEG31 [16] phi (byte) lines::l#2 = (byte) lines::l#1 [phi:lines::@3->lines::@1#0] -- register_copy 
  //SEG32 lines::@1
  b1:
  //SEG33 [17] (byte~) lines::$0 ← (const byte[]) lines_x#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 ] ( main:2::lines:12 [ lines::l#2 lines::$0 ] ) -- yby=cowo1_derefidx_zpby1 
    ldx l
    lda lines_x,x
    tay
  //SEG34 [18] (byte~) lines::$2 ← (const byte[]) lines_x#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx l
    lda lines_x+1,x
    sta _2
  //SEG35 [19] (byte~) lines::$3 ← (const byte[]) lines_y#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 lines::$3 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx l
    lda lines_y,x
    sta _3
  //SEG36 [20] (byte~) lines::$5 ← (const byte[]) lines_y#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ] ) -- xby=cowo1_derefidx_zpby1 
    ldx l
    lda lines_y+1,x
    tax
  //SEG37 [21] (byte) line::x0#0 ← (byte~) lines::$0 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ] ( main:2::lines:12 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ] ) -- zpby1=yby 
    sty line.x0
  //SEG38 [22] (byte) line::x1#0 ← (byte~) lines::$2 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ] ( main:2::lines:12 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ] )
    // (byte) line::x1#0 = (byte~) lines::$2  // register copy zp ZP_BYTE:3
  //SEG39 [23] (byte) line::y0#0 ← (byte~) lines::$3 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ] ( main:2::lines:12 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ] ) -- yby=zpby1 
    ldy _3
  //SEG40 [24] (byte) line::y1#0 ← (byte~) lines::$5 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ( main:2::lines:12 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ) -- zpby1=xby 
    stx line.y1
  //SEG41 [25] call line param-assignment [ lines::l#2 ] ( main:2::lines:12 [ lines::l#2 ] )
    jsr line
  //SEG42 lines::@3
  b3:
  //SEG43 [26] (byte) lines::l#1 ← ++ (byte) lines::l#2 [ lines::l#1 ] ( main:2::lines:12 [ lines::l#1 ] ) -- zpby1=_inc_zpby1 
    inc l
  //SEG44 [27] if((byte) lines::l#1<(const byte) lines_cnt#0) goto lines::@1 [ lines::l#1 ] ( main:2::lines:12 [ lines::l#1 ] ) -- zpby1_lt_coby1_then_la1 
    lda l
    cmp #lines_cnt
    bcc b1_from_b3
  //SEG45 lines::@return
  breturn:
  //SEG46 [28] return  [ ] ( main:2::lines:12 [ ] )
    rts
}
//SEG47 line
line: {
    .label x0 = 5
    .label x1 = 3
    .label y1 = 4
    .label xd = 7
    .label yd = $a
  //SEG48 [29] if((byte) line::x0#0>=(byte) line::x1#0) goto line::@1 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ) -- zpby1_ge_zpby2_then_la1 
    lda x0
    cmp x1
    bcs b1
  //SEG49 line::@15
  b15:
  //SEG50 [30] (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ) -- zpby1=zpby2_minus_zpby3 
    lda x1
    sec
    sbc x0
    sta xd
  //SEG51 [31] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@2 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ) -- yby_ge_zpby1_then_la1 
    cpy y1
    bcs b2
  //SEG52 line::@16
  b16:
  //SEG53 [32] (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ) -- zpby1=zpby2_minus_yby 
    sty $ff
    lda y1
    sec
    sbc $ff
    sta yd
  //SEG54 [33] if((byte) line::yd#1>=(byte) line::xd#1) goto line::@3 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b3
  //SEG55 line::@17
  b17:
  //SEG56 [34] (byte) line_xdyi::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG57 [35] (byte) line_xdyi::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ] ) -- zpby1=yby 
    sty line_xdyi.y
  //SEG58 [36] (byte) line_xdyi::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ] ) -- zpby1=zpby2 
    lda x1
    sta line_xdyi.x1
  //SEG59 [37] (byte) line_xdyi::xd#0 ← (byte) line::xd#1 [ line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyi.xd
  //SEG60 [38] (byte) line_xdyi::yd#0 ← (byte) line::yd#1 [ line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyi.yd
  //SEG61 [39] call line_xdyi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG62 [120] phi from line::@17 to line_xdyi [phi:line::@17->line_xdyi]
  line_xdyi_from_b17:
  //SEG63 [120] phi (byte) line_xdyi::x1#6 = (byte) line_xdyi::x1#0 [phi:line::@17->line_xdyi#0] -- register_copy 
  //SEG64 [120] phi (byte) line_xdyi::xd#5 = (byte) line_xdyi::xd#0 [phi:line::@17->line_xdyi#1] -- register_copy 
  //SEG65 [120] phi (byte) line_xdyi::y#5 = (byte) line_xdyi::y#0 [phi:line::@17->line_xdyi#2] -- register_copy 
  //SEG66 [120] phi (byte) line_xdyi::x#6 = (byte) line_xdyi::x#0 [phi:line::@17->line_xdyi#3] -- register_copy 
  //SEG67 [120] phi (byte) line_xdyi::yd#2 = (byte) line_xdyi::yd#0 [phi:line::@17->line_xdyi#4] -- register_copy 
    jsr line_xdyi
  //SEG68 line::@return
  breturn:
  //SEG69 [40] return  [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
    rts
  //SEG70 line::@3
  b3:
  //SEG71 [41] (byte) line_ydxi::y#0 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ] ) -- zpby1=yby 
    sty line_ydxi.y
  //SEG72 [42] (byte) line_ydxi::x#0 ← (byte) line::x0#0 [ line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG73 [43] (byte) line_ydxi::y1#0 ← (byte) line::y1#0 [ line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxi.y1
  //SEG74 [44] (byte) line_ydxi::yd#0 ← (byte) line::yd#1 [ line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxi.yd
  //SEG75 [45] (byte) line_ydxi::xd#0 ← (byte) line::xd#1 [ line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxi.xd
  //SEG76 [46] call line_ydxi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG77 [91] phi from line::@3 to line_ydxi [phi:line::@3->line_ydxi]
  line_ydxi_from_b3:
  //SEG78 [91] phi (byte) line_ydxi::y1#6 = (byte) line_ydxi::y1#0 [phi:line::@3->line_ydxi#0] -- register_copy 
  //SEG79 [91] phi (byte) line_ydxi::yd#5 = (byte) line_ydxi::yd#0 [phi:line::@3->line_ydxi#1] -- register_copy 
  //SEG80 [91] phi (byte) line_ydxi::y#6 = (byte) line_ydxi::y#0 [phi:line::@3->line_ydxi#2] -- register_copy 
  //SEG81 [91] phi (byte) line_ydxi::x#5 = (byte) line_ydxi::x#0 [phi:line::@3->line_ydxi#3] -- register_copy 
  //SEG82 [91] phi (byte) line_ydxi::xd#2 = (byte) line_ydxi::xd#0 [phi:line::@3->line_ydxi#4] -- register_copy 
    jsr line_ydxi
    jmp breturn
  //SEG83 line::@2
  b2:
  //SEG84 [47] (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ) -- zpby1=yby_minus_zpby2 
    tya
    sec
    sbc y1
    sta yd
  //SEG85 [48] if((byte) line::yd#0>=(byte) line::xd#1) goto line::@6 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b6
  //SEG86 line::@20
  b20:
  //SEG87 [49] (byte) line_xdyd::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG88 [50] (byte) line_xdyd::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ] ) -- zpby1=yby 
    sty line_xdyd.y
  //SEG89 [51] (byte) line_xdyd::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ] ) -- zpby1=zpby2 
    lda x1
    sta line_xdyd.x1
  //SEG90 [52] (byte) line_xdyd::xd#0 ← (byte) line::xd#1 [ line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyd.xd
  //SEG91 [53] (byte) line_xdyd::yd#0 ← (byte) line::yd#0 [ line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyd.yd
  //SEG92 [54] call line_xdyd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG93 [150] phi from line::@20 to line_xdyd [phi:line::@20->line_xdyd]
  line_xdyd_from_b20:
  //SEG94 [150] phi (byte) line_xdyd::x1#6 = (byte) line_xdyd::x1#0 [phi:line::@20->line_xdyd#0] -- register_copy 
  //SEG95 [150] phi (byte) line_xdyd::xd#5 = (byte) line_xdyd::xd#0 [phi:line::@20->line_xdyd#1] -- register_copy 
  //SEG96 [150] phi (byte) line_xdyd::y#5 = (byte) line_xdyd::y#0 [phi:line::@20->line_xdyd#2] -- register_copy 
  //SEG97 [150] phi (byte) line_xdyd::x#6 = (byte) line_xdyd::x#0 [phi:line::@20->line_xdyd#3] -- register_copy 
  //SEG98 [150] phi (byte) line_xdyd::yd#2 = (byte) line_xdyd::yd#0 [phi:line::@20->line_xdyd#4] -- register_copy 
    jsr line_xdyd
    jmp breturn
  //SEG99 line::@6
  b6:
  //SEG100 [55] (byte) line_ydxd::y#0 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxd.y
  //SEG101 [56] (byte) line_ydxd::x#0 ← (byte) line::x1#0 [ line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ] ) -- xby=zpby1 
    ldx x1
  //SEG102 [57] (byte) line_ydxd::y1#0 ← (byte) line::y0#0 [ line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ] ) -- zpby1=yby 
    sty line_ydxd.y1
  //SEG103 [58] (byte) line_ydxd::yd#0 ← (byte) line::yd#0 [ line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxd.yd
  //SEG104 [59] (byte) line_ydxd::xd#0 ← (byte) line::xd#1 [ line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxd.xd
  //SEG105 [60] call line_ydxd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG106 [135] phi from line::@6 to line_ydxd [phi:line::@6->line_ydxd]
  line_ydxd_from_b6:
  //SEG107 [135] phi (byte) line_ydxd::y1#6 = (byte) line_ydxd::y1#0 [phi:line::@6->line_ydxd#0] -- register_copy 
  //SEG108 [135] phi (byte) line_ydxd::yd#5 = (byte) line_ydxd::yd#0 [phi:line::@6->line_ydxd#1] -- register_copy 
  //SEG109 [135] phi (byte) line_ydxd::y#6 = (byte) line_ydxd::y#0 [phi:line::@6->line_ydxd#2] -- register_copy 
  //SEG110 [135] phi (byte) line_ydxd::x#5 = (byte) line_ydxd::x#0 [phi:line::@6->line_ydxd#3] -- register_copy 
  //SEG111 [135] phi (byte) line_ydxd::xd#2 = (byte) line_ydxd::xd#0 [phi:line::@6->line_ydxd#4] -- register_copy 
    jsr line_ydxd
    jmp breturn
  //SEG112 line::@1
  b1:
  //SEG113 [61] (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ) -- zpby1=zpby2_minus_zpby3 
    lda x0
    sec
    sbc x1
    sta xd
  //SEG114 [62] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@9 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ) -- yby_ge_zpby1_then_la1 
    cpy y1
    bcs b9
  //SEG115 line::@23
  b23:
  //SEG116 [63] (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ) -- zpby1=zpby2_minus_yby 
    sty $ff
    lda y1
    sec
    sbc $ff
    sta yd
  //SEG117 [64] if((byte) line::yd#3>=(byte) line::xd#0) goto line::@10 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b10
  //SEG118 line::@24
  b24:
  //SEG119 [65] (byte) line_xdyd::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG120 [66] (byte) line_xdyd::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_xdyd.y
  //SEG121 [67] (byte) line_xdyd::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ] )
    // (byte) line_xdyd::x1#1 = (byte) line::x0#0  // register copy zp ZP_BYTE:5
  //SEG122 [68] (byte) line_xdyd::xd#1 ← (byte) line::xd#0 [ line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyd.xd
  //SEG123 [69] (byte) line_xdyd::yd#1 ← (byte) line::yd#3 [ line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyd.yd
  //SEG124 [70] call line_xdyd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG125 [150] phi from line::@24 to line_xdyd [phi:line::@24->line_xdyd]
  line_xdyd_from_b24:
  //SEG126 [150] phi (byte) line_xdyd::x1#6 = (byte) line_xdyd::x1#1 [phi:line::@24->line_xdyd#0] -- register_copy 
  //SEG127 [150] phi (byte) line_xdyd::xd#5 = (byte) line_xdyd::xd#1 [phi:line::@24->line_xdyd#1] -- register_copy 
  //SEG128 [150] phi (byte) line_xdyd::y#5 = (byte) line_xdyd::y#1 [phi:line::@24->line_xdyd#2] -- register_copy 
  //SEG129 [150] phi (byte) line_xdyd::x#6 = (byte) line_xdyd::x#1 [phi:line::@24->line_xdyd#3] -- register_copy 
  //SEG130 [150] phi (byte) line_xdyd::yd#2 = (byte) line_xdyd::yd#1 [phi:line::@24->line_xdyd#4] -- register_copy 
    jsr line_xdyd
    jmp breturn
  //SEG131 line::@10
  b10:
  //SEG132 [71] (byte) line_ydxd::y#1 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ] ) -- zpby1=yby 
    sty line_ydxd.y
  //SEG133 [72] (byte) line_ydxd::x#1 ← (byte) line::x0#0 [ line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ] ) -- xby=zpby1 
    ldx x0
  //SEG134 [73] (byte) line_ydxd::y1#1 ← (byte) line::y1#0 [ line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxd.y1
  //SEG135 [74] (byte) line_ydxd::yd#1 ← (byte) line::yd#3 [ line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxd.yd
  //SEG136 [75] (byte) line_ydxd::xd#1 ← (byte) line::xd#0 [ line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxd.xd
  //SEG137 [76] call line_ydxd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG138 [135] phi from line::@10 to line_ydxd [phi:line::@10->line_ydxd]
  line_ydxd_from_b10:
  //SEG139 [135] phi (byte) line_ydxd::y1#6 = (byte) line_ydxd::y1#1 [phi:line::@10->line_ydxd#0] -- register_copy 
  //SEG140 [135] phi (byte) line_ydxd::yd#5 = (byte) line_ydxd::yd#1 [phi:line::@10->line_ydxd#1] -- register_copy 
  //SEG141 [135] phi (byte) line_ydxd::y#6 = (byte) line_ydxd::y#1 [phi:line::@10->line_ydxd#2] -- register_copy 
  //SEG142 [135] phi (byte) line_ydxd::x#5 = (byte) line_ydxd::x#1 [phi:line::@10->line_ydxd#3] -- register_copy 
  //SEG143 [135] phi (byte) line_ydxd::xd#2 = (byte) line_ydxd::xd#1 [phi:line::@10->line_ydxd#4] -- register_copy 
    jsr line_ydxd
    jmp breturn
  //SEG144 line::@9
  b9:
  //SEG145 [77] (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ) -- zpby1=yby_minus_zpby2 
    tya
    sec
    sbc y1
    sta yd
  //SEG146 [78] if((byte) line::yd#10>=(byte) line::xd#0) goto line::@13 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b13
  //SEG147 line::@27
  b27:
  //SEG148 [79] (byte) line_xdyi::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG149 [80] (byte) line_xdyi::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_xdyi.y
  //SEG150 [81] (byte) line_xdyi::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ] )
    // (byte) line_xdyi::x1#1 = (byte) line::x0#0  // register copy zp ZP_BYTE:5
  //SEG151 [82] (byte) line_xdyi::xd#1 ← (byte) line::xd#0 [ line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyi.xd
  //SEG152 [83] (byte) line_xdyi::yd#1 ← (byte) line::yd#10 [ line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyi.yd
  //SEG153 [84] call line_xdyi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG154 [120] phi from line::@27 to line_xdyi [phi:line::@27->line_xdyi]
  line_xdyi_from_b27:
  //SEG155 [120] phi (byte) line_xdyi::x1#6 = (byte) line_xdyi::x1#1 [phi:line::@27->line_xdyi#0] -- register_copy 
  //SEG156 [120] phi (byte) line_xdyi::xd#5 = (byte) line_xdyi::xd#1 [phi:line::@27->line_xdyi#1] -- register_copy 
  //SEG157 [120] phi (byte) line_xdyi::y#5 = (byte) line_xdyi::y#1 [phi:line::@27->line_xdyi#2] -- register_copy 
  //SEG158 [120] phi (byte) line_xdyi::x#6 = (byte) line_xdyi::x#1 [phi:line::@27->line_xdyi#3] -- register_copy 
  //SEG159 [120] phi (byte) line_xdyi::yd#2 = (byte) line_xdyi::yd#1 [phi:line::@27->line_xdyi#4] -- register_copy 
    jsr line_xdyi
    jmp breturn
  //SEG160 line::@13
  b13:
  //SEG161 [85] (byte) line_ydxi::y#1 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxi.y
  //SEG162 [86] (byte) line_ydxi::x#1 ← (byte) line::x1#0 [ line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG163 [87] (byte) line_ydxi::y1#1 ← (byte) line::y0#0 [ line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ] ) -- zpby1=yby 
    sty line_ydxi.y1
  //SEG164 [88] (byte) line_ydxi::yd#1 ← (byte) line::yd#10 [ line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxi.yd
  //SEG165 [89] (byte) line_ydxi::xd#1 ← (byte) line::xd#0 [ line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxi.xd
  //SEG166 [90] call line_ydxi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG167 [91] phi from line::@13 to line_ydxi [phi:line::@13->line_ydxi]
  line_ydxi_from_b13:
  //SEG168 [91] phi (byte) line_ydxi::y1#6 = (byte) line_ydxi::y1#1 [phi:line::@13->line_ydxi#0] -- register_copy 
  //SEG169 [91] phi (byte) line_ydxi::yd#5 = (byte) line_ydxi::yd#1 [phi:line::@13->line_ydxi#1] -- register_copy 
  //SEG170 [91] phi (byte) line_ydxi::y#6 = (byte) line_ydxi::y#1 [phi:line::@13->line_ydxi#2] -- register_copy 
  //SEG171 [91] phi (byte) line_ydxi::x#5 = (byte) line_ydxi::x#1 [phi:line::@13->line_ydxi#3] -- register_copy 
  //SEG172 [91] phi (byte) line_ydxi::xd#2 = (byte) line_ydxi::xd#1 [phi:line::@13->line_ydxi#4] -- register_copy 
    jsr line_ydxi
    jmp breturn
}
//SEG173 line_ydxi
line_ydxi: {
    .label y = 6
    .label y1 = 5
    .label yd = 4
    .label xd = 3
    .label e = 7
  //SEG174 [92] (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda xd
    lsr
    sta e
  //SEG175 [93] phi from line_ydxi line_ydxi::@2 to line_ydxi::@1 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1]
  b1_from_line_ydxi:
  b1_from_b2:
  //SEG176 [93] phi (byte) line_ydxi::e#3 = (byte) line_ydxi::e#0 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#0] -- register_copy 
  //SEG177 [93] phi (byte) line_ydxi::y#3 = (byte) line_ydxi::y#6 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#1] -- register_copy 
  //SEG178 [93] phi (byte) line_ydxi::x#3 = (byte) line_ydxi::x#5 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#2] -- register_copy 
  //SEG179 line_ydxi::@1
  b1:
  //SEG180 [94] (byte) plot::x#2 ← (byte) line_ydxi::x#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] )
    // (byte) plot::x#2 = (byte) line_ydxi::x#3  // register copy reg byte x
  //SEG181 [95] (byte) plot::y#2 ← (byte) line_ydxi::y#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] ) -- yby=zpby1 
    ldy y
  //SEG182 [96] call plot param-assignment [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] )
  //SEG183 [106] phi from line_ydxi::@1 to plot [phi:line_ydxi::@1->plot]
  plot_from_b1:
  //SEG184 [106] phi (byte) plot::y#4 = (byte) plot::y#2 [phi:line_ydxi::@1->plot#0] -- register_copy 
  //SEG185 [106] phi (byte) plot::x#4 = (byte) plot::x#2 [phi:line_ydxi::@1->plot#1] -- register_copy 
    jsr plot
  //SEG186 line_ydxi::@5
  b5:
  //SEG187 [97] (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG188 [98] (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc xd
    sta e
  //SEG189 [99] if((byte) line_ydxi::yd#5>=(byte) line_ydxi::e#1) goto line_ydxi::@2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp e
    bcs b2_from_b5
  //SEG190 line_ydxi::@3
  b3:
  //SEG191 [100] (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG192 [101] (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc yd
    sta e
  //SEG193 [102] phi from line_ydxi::@3 line_ydxi::@5 to line_ydxi::@2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2]
  b2_from_b3:
  b2_from_b5:
  //SEG194 [102] phi (byte) line_ydxi::e#6 = (byte) line_ydxi::e#2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2#0] -- register_copy 
  //SEG195 [102] phi (byte) line_ydxi::x#6 = (byte) line_ydxi::x#2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2#1] -- register_copy 
  //SEG196 line_ydxi::@2
  b2:
  //SEG197 [103] (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] ) -- aby=zpby1_plus_1 
    lda y1
    clc
    adc #1
  //SEG198 [104] if((byte) line_ydxi::y#2<(byte~) line_ydxi::$8) goto line_ydxi::@1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] ) -- zpby1_lt_aby_then_la1 
    cmp y
    bcs b1_from_b2
  //SEG199 line_ydxi::@return
  breturn:
  //SEG200 [105] return  [ ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 ] )
    rts
}
//SEG201 plot
plot: {
    .label plotter_x = 8
    .label plotter_y = $b
    .label plotter = 8
  //SEG202 [107] (byte~) plot::$0 ← (const byte[]) plot_xhi#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::$0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::$0 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_xhi,x
  //SEG203 [108] (byte*) plot::plotter_x#1 ← ((byte*))(byte/signed byte/word/signed word) 0 hi= (byte~) plot::$0 [ plot::x#4 plot::y#4 plot::plotter_x#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] ) -- zpptrby1=cowo1_sethi_aby 
    sta plotter_x+1
    lda #<0
    sta plotter_x
  //SEG204 [109] (byte~) plot::$1 ← (const byte[]) plot_xlo#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_xlo,x
  //SEG205 [110] (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1 [ plot::x#4 plot::y#4 plot::plotter_x#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] ) -- zpptrby1=zpptrby1_setlo_aby 
    sta plotter_x
  //SEG206 [111] (byte~) plot::$2 ← (const byte[]) plot_yhi#0 *idx (byte) plot::y#4 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] ) -- aby=cowo1_derefidx_yby 
    lda plot_yhi,y
  //SEG207 [112] (word) plot::plotter_y#1 ← (byte/signed byte/word/signed word) 0 hi= (byte~) plot::$2 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] ) -- zpwo1=coby1_sethi_aby 
    sta plotter_y+1
    lda #<0
    sta plotter_y
  //SEG208 [113] (byte~) plot::$3 ← (const byte[]) plot_ylo#0 *idx (byte) plot::y#4 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] ) -- aby=cowo1_derefidx_yby 
    lda plot_ylo,y
  //SEG209 [114] (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ) -- zpwo1=zpwo1_setlo_aby 
    sta plotter_y
  //SEG210 [115] (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2 [ plot::x#4 plot::plotter#0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] ) -- zpptrby1=zpptrby1_plus_zpwo1 
    lda plotter
    clc
    adc plotter_y
    sta plotter
    lda plotter+1
    adc plotter_y+1
    sta plotter+1
  //SEG211 [116] (byte~) plot::$5 ← (const byte[]) plot_bit#0 *idx (byte) plot::x#4 [ plot::plotter#0 plot::$5 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$5 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_bit,x
  //SEG212 [117] (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5 [ plot::plotter#0 plot::$6 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] ) -- aby=_deref_zpptrby1_bor_aby 
    ldy #0
    ora (plotter),y
  //SEG213 [118] *((byte*) plot::plotter#0) ← (byte~) plot::$6 [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ) -- _deref_zpptrby1=aby 
    sta (plotter),y
  //SEG214 plot::@return
  breturn:
  //SEG215 [119] return  [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
    rts
}
//SEG216 line_xdyi
line_xdyi: {
    .label _8 = $a
    .label y = 6
    .label x1 = 5
    .label xd = 4
    .label yd = 3
    .label e = 7
  //SEG217 [121] (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda yd
    lsr
    sta e
  //SEG218 [122] phi from line_xdyi line_xdyi::@2 to line_xdyi::@1 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1]
  b1_from_line_xdyi:
  b1_from_b2:
  //SEG219 [122] phi (byte) line_xdyi::e#3 = (byte) line_xdyi::e#0 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#0] -- register_copy 
  //SEG220 [122] phi (byte) line_xdyi::y#3 = (byte) line_xdyi::y#5 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#1] -- register_copy 
  //SEG221 [122] phi (byte) line_xdyi::x#3 = (byte) line_xdyi::x#6 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#2] -- register_copy 
  //SEG222 line_xdyi::@1
  b1:
  //SEG223 [123] (byte) plot::x#0 ← (byte) line_xdyi::x#3 [ plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
    // (byte) plot::x#0 = (byte) line_xdyi::x#3  // register copy reg byte x
  //SEG224 [124] (byte) plot::y#0 ← (byte) line_xdyi::y#3 [ plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG225 [125] call plot param-assignment [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
  //SEG226 [106] phi from line_xdyi::@1 to plot [phi:line_xdyi::@1->plot]
  plot_from_b1:
  //SEG227 [106] phi (byte) plot::y#4 = (byte) plot::y#0 [phi:line_xdyi::@1->plot#0] -- register_copy 
  //SEG228 [106] phi (byte) plot::x#4 = (byte) plot::x#0 [phi:line_xdyi::@1->plot#1] -- register_copy 
    jsr plot
  //SEG229 line_xdyi::@5
  b5:
  //SEG230 [126] (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG231 [127] (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc yd
    sta e
  //SEG232 [128] if((byte) line_xdyi::xd#5>=(byte) line_xdyi::e#1) goto line_xdyi::@2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda xd
    cmp e
    bcs b2_from_b5
  //SEG233 line_xdyi::@3
  b3:
  //SEG234 [129] (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG235 [130] (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc xd
    sta e
  //SEG236 [131] phi from line_xdyi::@3 line_xdyi::@5 to line_xdyi::@2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2]
  b2_from_b3:
  b2_from_b5:
  //SEG237 [131] phi (byte) line_xdyi::e#6 = (byte) line_xdyi::e#2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2#0] -- register_copy 
  //SEG238 [131] phi (byte) line_xdyi::y#6 = (byte) line_xdyi::y#2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2#1] -- register_copy 
  //SEG239 line_xdyi::@2
  b2:
  //SEG240 [132] (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] ) -- zpby1=zpby2_plus_1 
    lda x1
    clc
    adc #1
    sta _8
  //SEG241 [133] if((byte) line_xdyi::x#2<(byte~) line_xdyi::$8) goto line_xdyi::@1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] ) -- xby_lt_zpby1_then_la1 
    cpx _8
    bcc b1_from_b2
  //SEG242 line_xdyi::@return
  breturn:
  //SEG243 [134] return  [ ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 ] )
    rts
}
//SEG244 line_ydxd
line_ydxd: {
    .label y = 6
    .label y1 = 5
    .label yd = 4
    .label xd = 3
    .label e = 7
  //SEG245 [136] (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda xd
    lsr
    sta e
  //SEG246 [137] phi from line_ydxd line_ydxd::@2 to line_ydxd::@1 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1]
  b1_from_line_ydxd:
  b1_from_b2:
  //SEG247 [137] phi (byte) line_ydxd::e#3 = (byte) line_ydxd::e#0 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#0] -- register_copy 
  //SEG248 [137] phi (byte) line_ydxd::y#3 = (byte) line_ydxd::y#6 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#1] -- register_copy 
  //SEG249 [137] phi (byte) line_ydxd::x#3 = (byte) line_ydxd::x#5 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#2] -- register_copy 
  //SEG250 line_ydxd::@1
  b1:
  //SEG251 [138] (byte) plot::x#3 ← (byte) line_ydxd::x#3 [ plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
    // (byte) plot::x#3 = (byte) line_ydxd::x#3  // register copy reg byte x
  //SEG252 [139] (byte) plot::y#3 ← (byte) line_ydxd::y#3 [ plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG253 [140] call plot param-assignment [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
  //SEG254 [106] phi from line_ydxd::@1 to plot [phi:line_ydxd::@1->plot]
  plot_from_b1:
  //SEG255 [106] phi (byte) plot::y#4 = (byte) plot::y#3 [phi:line_ydxd::@1->plot#0] -- register_copy 
  //SEG256 [106] phi (byte) plot::x#4 = (byte) plot::x#3 [phi:line_ydxd::@1->plot#1] -- register_copy 
    jsr plot
  //SEG257 line_ydxd::@5
  b5:
  //SEG258 [141] (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG259 [142] (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc xd
    sta e
  //SEG260 [143] if((byte) line_ydxd::yd#5>=(byte) line_ydxd::e#1) goto line_ydxd::@2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp e
    bcs b2_from_b5
  //SEG261 line_ydxd::@3
  b3:
  //SEG262 [144] (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] ) -- xby=xby_minus_1 
    dex
  //SEG263 [145] (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc yd
    sta e
  //SEG264 [146] phi from line_ydxd::@3 line_ydxd::@5 to line_ydxd::@2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2]
  b2_from_b3:
  b2_from_b5:
  //SEG265 [146] phi (byte) line_ydxd::e#6 = (byte) line_ydxd::e#2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2#0] -- register_copy 
  //SEG266 [146] phi (byte) line_ydxd::x#6 = (byte) line_ydxd::x#2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2#1] -- register_copy 
  //SEG267 line_ydxd::@2
  b2:
  //SEG268 [147] (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] ) -- aby=zpby1_plus_1 
    lda y1
    clc
    adc #1
  //SEG269 [148] if((byte) line_ydxd::y#2<(byte~) line_ydxd::$8) goto line_ydxd::@1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] ) -- zpby1_lt_aby_then_la1 
    cmp y
    bcs b1_from_b2
  //SEG270 line_ydxd::@return
  breturn:
  //SEG271 [149] return  [ ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 ] )
    rts
}
//SEG272 line_xdyd
line_xdyd: {
    .label _8 = $a
    .label y = 6
    .label x1 = 5
    .label xd = 4
    .label yd = 3
    .label e = 7
  //SEG273 [151] (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda yd
    lsr
    sta e
  //SEG274 [152] phi from line_xdyd line_xdyd::@2 to line_xdyd::@1 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1]
  b1_from_line_xdyd:
  b1_from_b2:
  //SEG275 [152] phi (byte) line_xdyd::e#3 = (byte) line_xdyd::e#0 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#0] -- register_copy 
  //SEG276 [152] phi (byte) line_xdyd::y#3 = (byte) line_xdyd::y#5 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#1] -- register_copy 
  //SEG277 [152] phi (byte) line_xdyd::x#3 = (byte) line_xdyd::x#6 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#2] -- register_copy 
  //SEG278 line_xdyd::@1
  b1:
  //SEG279 [153] (byte) plot::x#1 ← (byte) line_xdyd::x#3 [ plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
    // (byte) plot::x#1 = (byte) line_xdyd::x#3  // register copy reg byte x
  //SEG280 [154] (byte) plot::y#1 ← (byte) line_xdyd::y#3 [ plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG281 [155] call plot param-assignment [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
  //SEG282 [106] phi from line_xdyd::@1 to plot [phi:line_xdyd::@1->plot]
  plot_from_b1:
  //SEG283 [106] phi (byte) plot::y#4 = (byte) plot::y#1 [phi:line_xdyd::@1->plot#0] -- register_copy 
  //SEG284 [106] phi (byte) plot::x#4 = (byte) plot::x#1 [phi:line_xdyd::@1->plot#1] -- register_copy 
    jsr plot
  //SEG285 line_xdyd::@5
  b5:
  //SEG286 [156] (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG287 [157] (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc yd
    sta e
  //SEG288 [158] if((byte) line_xdyd::xd#5>=(byte) line_xdyd::e#1) goto line_xdyd::@2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda xd
    cmp e
    bcs b2_from_b5
  //SEG289 line_xdyd::@3
  b3:
  //SEG290 [159] (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] ) -- zpby1=zpby1_minus_1 
    dec y
  //SEG291 [160] (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc xd
    sta e
  //SEG292 [161] phi from line_xdyd::@3 line_xdyd::@5 to line_xdyd::@2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2]
  b2_from_b3:
  b2_from_b5:
  //SEG293 [161] phi (byte) line_xdyd::e#6 = (byte) line_xdyd::e#2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2#0] -- register_copy 
  //SEG294 [161] phi (byte) line_xdyd::y#6 = (byte) line_xdyd::y#2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2#1] -- register_copy 
  //SEG295 line_xdyd::@2
  b2:
  //SEG296 [162] (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] ) -- zpby1=zpby2_plus_1 
    lda x1
    clc
    adc #1
    sta _8
  //SEG297 [163] if((byte) line_xdyd::x#2<(byte~) line_xdyd::$8) goto line_xdyd::@1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] ) -- xby_lt_zpby1_then_la1 
    cpx _8
    bcc b1_from_b2
  //SEG298 line_xdyd::@return
  breturn:
  //SEG299 [164] return  [ ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 ] )
    rts
}
//SEG300 init_plot_tables
init_plot_tables: {
    .label _6 = 2
    .label yoffs = 8
  //SEG301 [166] phi from init_plot_tables to init_plot_tables::@1 [phi:init_plot_tables->init_plot_tables::@1]
  b1_from_init_plot_tables:
  //SEG302 [166] phi (byte) init_plot_tables::bits#3 = (byte/word/signed word) 128 [phi:init_plot_tables->init_plot_tables::@1#0] -- yby=coby1 
    ldy #$80
  //SEG303 [166] phi (byte) init_plot_tables::x#2 = (byte/signed byte/word/signed word) 0 [phi:init_plot_tables->init_plot_tables::@1#1] -- xby=coby1 
    ldx #0
    jmp b1
  //SEG304 [166] phi from init_plot_tables::@2 to init_plot_tables::@1 [phi:init_plot_tables::@2->init_plot_tables::@1]
  b1_from_b2:
  //SEG305 [166] phi (byte) init_plot_tables::bits#3 = (byte) init_plot_tables::bits#4 [phi:init_plot_tables::@2->init_plot_tables::@1#0] -- register_copy 
  //SEG306 [166] phi (byte) init_plot_tables::x#2 = (byte) init_plot_tables::x#1 [phi:init_plot_tables::@2->init_plot_tables::@1#1] -- register_copy 
  //SEG307 init_plot_tables::@1
  b1:
  //SEG308 [167] (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ) -- aby=xby_band_coby1 
    txa
    and #$f8
  //SEG309 [168] *((const byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_xlo,x
  //SEG310 [169] *((const byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← >(const byte*) BITMAP#0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=coby2 
    lda #>BITMAP
    sta plot_xhi,x
  //SEG311 [170] *((const byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=yby 
    tya
    sta plot_bit,x
  //SEG312 [171] (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ) -- yby=yby_ror_1 
    tya
    lsr
    tay
  //SEG313 [172] if((byte) init_plot_tables::bits#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ) -- yby_neq_0_then_la1 
    cpy #0
    bne b10_from_b1
  //SEG314 [173] phi from init_plot_tables::@1 to init_plot_tables::@2 [phi:init_plot_tables::@1->init_plot_tables::@2]
  b2_from_b1:
  //SEG315 [173] phi (byte) init_plot_tables::bits#4 = (byte/word/signed word) 128 [phi:init_plot_tables::@1->init_plot_tables::@2#0] -- yby=coby1 
    ldy #$80
  //SEG316 init_plot_tables::@2
  b2:
  //SEG317 [174] (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ) -- xby=_inc_xby 
    inx
  //SEG318 [175] if((byte) init_plot_tables::x#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@1 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ) -- xby_neq_0_then_la1 
    cpx #0
    bne b1_from_b2
  //SEG319 [176] phi from init_plot_tables::@2 to init_plot_tables::@3 [phi:init_plot_tables::@2->init_plot_tables::@3]
  b3_from_b2:
  //SEG320 [176] phi (byte*) init_plot_tables::yoffs#2 = ((byte*))(byte/signed byte/word/signed word) 0 [phi:init_plot_tables::@2->init_plot_tables::@3#0] -- zpptrby1=cowo1 
    lda #<0
    sta yoffs
    sta yoffs+1
  //SEG321 [176] phi (byte) init_plot_tables::y#2 = (byte/signed byte/word/signed word) 0 [phi:init_plot_tables::@2->init_plot_tables::@3#1] -- xby=coby1 
    tax
    jmp b3
  //SEG322 [176] phi from init_plot_tables::@4 to init_plot_tables::@3 [phi:init_plot_tables::@4->init_plot_tables::@3]
  b3_from_b4:
  //SEG323 [176] phi (byte*) init_plot_tables::yoffs#2 = (byte*) init_plot_tables::yoffs#4 [phi:init_plot_tables::@4->init_plot_tables::@3#0] -- register_copy 
  //SEG324 [176] phi (byte) init_plot_tables::y#2 = (byte) init_plot_tables::y#1 [phi:init_plot_tables::@4->init_plot_tables::@3#1] -- register_copy 
  //SEG325 init_plot_tables::@3
  b3:
  //SEG326 [177] (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ) -- zpby1=xby_band_coby1 
    txa
    and #7
    sta _6
  //SEG327 [178] (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ] ) -- aby=_lo_zpptrby1 
    lda yoffs
  //SEG328 [179] (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ] ) -- aby=zpby1_bor_aby 
    ora _6
  //SEG329 [180] *((const byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_ylo,x
  //SEG330 [181] (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ) -- aby=_hi_zpptrby1 
    lda yoffs+1
  //SEG331 [182] *((const byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_yhi,x
  //SEG332 [183] (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ) -- aby=xby_band_coby1 
    txa
    and #7
  //SEG333 [184] if((byte~) init_plot_tables::$10!=(byte/signed byte/word/signed word) 7) goto init_plot_tables::@4 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- aby_neq_coby1_then_la1 
    cmp #7
    bne b4_from_b3
  //SEG334 init_plot_tables::@7
  b7:
  //SEG335 [185] (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ) -- zpptrby1=zpptrby1_plus_cowo1 
    lda yoffs
    clc
    adc #<$140
    sta yoffs
    lda yoffs+1
    adc #>$140
    sta yoffs+1
  //SEG336 [186] phi from init_plot_tables::@3 init_plot_tables::@7 to init_plot_tables::@4 [phi:init_plot_tables::@3/init_plot_tables::@7->init_plot_tables::@4]
  b4_from_b3:
  b4_from_b7:
  //SEG337 [186] phi (byte*) init_plot_tables::yoffs#4 = (byte*) init_plot_tables::yoffs#2 [phi:init_plot_tables::@3/init_plot_tables::@7->init_plot_tables::@4#0] -- register_copy 
  //SEG338 init_plot_tables::@4
  b4:
  //SEG339 [187] (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ) -- xby=_inc_xby 
    inx
  //SEG340 [188] if((byte) init_plot_tables::y#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@3 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ) -- xby_neq_0_then_la1 
    cpx #0
    bne b3_from_b4
  //SEG341 init_plot_tables::@return
  breturn:
  //SEG342 [189] return  [ ] ( main:2::init_plot_tables:10 [ ] )
    rts
  //SEG343 [190] phi from init_plot_tables::@1 to init_plot_tables::@10 [phi:init_plot_tables::@1->init_plot_tables::@10]
  b10_from_b1:
  //SEG344 init_plot_tables::@10
  b10:
  //SEG345 [173] phi from init_plot_tables::@10 to init_plot_tables::@2 [phi:init_plot_tables::@10->init_plot_tables::@2]
  b2_from_b10:
  //SEG346 [173] phi (byte) init_plot_tables::bits#4 = (byte) init_plot_tables::bits#1 [phi:init_plot_tables::@10->init_plot_tables::@2#0] -- register_copy 
    jmp b2
}
//SEG347 init_screen
init_screen: {
    .label b = 8
    .label c = 8
  //SEG348 [192] phi from init_screen to init_screen::@1 [phi:init_screen->init_screen::@1]
  b1_from_init_screen:
  //SEG349 [192] phi (byte*) init_screen::b#2 = (const byte*) BITMAP#0 [phi:init_screen->init_screen::@1#0] -- zpptrby1=cowo1 
    lda #<BITMAP
    sta b
    lda #>BITMAP
    sta b+1
    jmp b1
  //SEG350 [192] phi from init_screen::@1 to init_screen::@1 [phi:init_screen::@1->init_screen::@1]
  b1_from_b1:
  //SEG351 [192] phi (byte*) init_screen::b#2 = (byte*) init_screen::b#1 [phi:init_screen::@1->init_screen::@1#0] -- register_copy 
  //SEG352 init_screen::@1
  b1:
  //SEG353 [193] *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0 [ init_screen::b#2 ] ( main:2::init_screen:8 [ init_screen::b#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    tya
    sta (b),y
  //SEG354 [194] (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc b
    bne !+
    inc b+1
  !:
  //SEG355 [195] if((byte*) init_screen::b#1!=(const byte*) BITMAP#0+(word/signed word) 8192) goto init_screen::@1 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] ) -- zpptrby1_neq_cowo1_then_la1 
    lda b+1
    cmp #>BITMAP+$2000
    bne b1_from_b1
    lda b
    cmp #<BITMAP+$2000
    bne b1_from_b1
  //SEG356 [196] phi from init_screen::@1 to init_screen::@2 [phi:init_screen::@1->init_screen::@2]
  b2_from_b1:
  //SEG357 [196] phi (byte*) init_screen::c#2 = (const byte*) SCREEN#0 [phi:init_screen::@1->init_screen::@2#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta c
    lda #>SCREEN
    sta c+1
    jmp b2
  //SEG358 [196] phi from init_screen::@2 to init_screen::@2 [phi:init_screen::@2->init_screen::@2]
  b2_from_b2:
  //SEG359 [196] phi (byte*) init_screen::c#2 = (byte*) init_screen::c#1 [phi:init_screen::@2->init_screen::@2#0] -- register_copy 
  //SEG360 init_screen::@2
  b2:
  //SEG361 [197] *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20 [ init_screen::c#2 ] ( main:2::init_screen:8 [ init_screen::c#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #$14
    sta (c),y
  //SEG362 [198] (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc c
    bne !+
    inc c+1
  !:
  //SEG363 [199] if((byte*) init_screen::c#1!=(const byte*) SCREEN#0+(word/signed word) 1024) goto init_screen::@2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] ) -- zpptrby1_neq_cowo1_then_la1 
    lda c+1
    cmp #>SCREEN+$400
    bne b2_from_b2
    lda c
    cmp #<SCREEN+$400
    bne b2_from_b2
  //SEG364 init_screen::@return
  breturn:
  //SEG365 [200] return  [ ] ( main:2::init_screen:8 [ ] )
    rts
}

Replacing label b1_from_b5 with b1
Replacing label b1_from_b3 with b1
Replacing label b2_from_b5 with b2
Replacing label b1_from_b2 with b1
Replacing label b2_from_b5 with b2
Replacing label b1_from_b2 with b1
Replacing label b2_from_b5 with b2
Replacing label b1_from_b2 with b1
Replacing label b2_from_b5 with b2
Replacing label b1_from_b2 with b1
Replacing label b10_from_b1 with b10
Replacing label b1_from_b2 with b1
Replacing label b4_from_b3 with b4
Replacing label b3_from_b4 with b3
Replacing label b1_from_b1 with b1
Replacing label b1_from_b1 with b1
Replacing label b2_from_b2 with b2
Replacing label b2_from_b2 with b2
Removing instruction bbegin:
Removing instruction b10_from_bbegin:
Removing instruction bend_from_b10:
Removing instruction b3_from_main:
Removing instruction init_plot_tables_from_b3:
Removing instruction b1_from_b3:
Removing instruction b1_from_b5:
Removing instruction lines_from_b1:
Removing instruction b1_from_b3:
Removing instruction b1_from_line_ydxi:
Removing instruction b1_from_b2:
Removing instruction b2_from_b3:
Removing instruction b2_from_b5:
Removing instruction b1_from_line_xdyi:
Removing instruction b1_from_b2:
Removing instruction b2_from_b3:
Removing instruction b2_from_b5:
Removing instruction b1_from_line_ydxd:
Removing instruction b1_from_b2:
Removing instruction b2_from_b3:
Removing instruction b2_from_b5:
Removing instruction b1_from_line_xdyd:
Removing instruction b1_from_b2:
Removing instruction b2_from_b3:
Removing instruction b2_from_b5:
Removing instruction b1_from_b2:
Removing instruction b3_from_b4:
Removing instruction b4_from_b3:
Removing instruction b4_from_b7:
Removing instruction b10_from_b1:
Removing instruction b2_from_b10:
Removing instruction b1_from_b1:
Removing instruction b2_from_b2:
Succesful ASM optimization Pass5RedundantLabelElimination
ASSEMBLER
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const BGCOL = $d020
  .const FGCOL = $d021
  .const D018 = $d018
  .const D011 = $d011
  .const BMM = $20
  .const DEN = $10
  .const RSEL = 8
  .const SCREEN = $400
  .const BITMAP = $2000
  .const plot_xlo = $1000
  .const plot_xhi = $1100
  .const plot_ylo = $1200
  .const plot_yhi = $1300
  .const plot_bit = $1400
  .const lines_cnt = 8
  lines_x: .byte $3c, $50, $6e, $50, $3c, $28, $a, $28, $3c
  lines_y: .byte $a, $28, $3c, $50, $6e, $50, $3c, $28, $a
//SEG2 @begin
//SEG3 [1] phi from @begin to @10 [phi:@begin->@10]
//SEG4 @10
b10:
//SEG5 [2] call main param-assignment [ ] ( )
  jsr main
//SEG6 [3] phi from @10 to @end [phi:@10->@end]
//SEG7 @end
bend:
//SEG8 main
main: {
  //SEG9 [4] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #0
    sta BGCOL
  //SEG10 [5] *((const byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    sta FGCOL
  //SEG11 [6] *((const byte*) D011#0) ← (const byte) BMM#0|(const byte) DEN#0|(const byte) RSEL#0|(byte/signed byte/word/signed word) 3 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #BMM|DEN|RSEL|3
    sta D011
  //SEG12 [7] *((const byte*) D018#0) ← (byte/signed byte/word/signed word) 24 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #$18
    sta D018
  //SEG13 [8] call init_screen param-assignment [ ] ( main:2 [ ] )
  //SEG14 [191] phi from main to init_screen [phi:main->init_screen]
  init_screen_from_main:
    jsr init_screen
  //SEG15 [9] phi from main to main::@3 [phi:main->main::@3]
  //SEG16 main::@3
  b3:
  //SEG17 [10] call init_plot_tables param-assignment [ ] ( main:2 [ ] )
  //SEG18 [165] phi from main::@3 to init_plot_tables [phi:main::@3->init_plot_tables]
    jsr init_plot_tables
  //SEG19 [11] phi from main::@3 main::@5 to main::@1 [phi:main::@3/main::@5->main::@1]
  //SEG20 main::@1
  b1:
  //SEG21 [12] call lines param-assignment [ ] ( main:2 [ ] )
  //SEG22 [15] phi from main::@1 to lines [phi:main::@1->lines]
    jsr lines
  //SEG23 main::@5
  b5:
  //SEG24 [13] if(true) goto main::@1 [ ] ( main:2 [ ] ) -- true_then_la1 
    jmp b1
  //SEG25 main::@return
  breturn:
  //SEG26 [14] return  [ ] ( main:2 [ ] )
    rts
}
//SEG27 lines
lines: {
    .label _2 = 3
    .label _3 = 4
    .label l = 2
  //SEG28 [16] phi from lines to lines::@1 [phi:lines->lines::@1]
  b1_from_lines:
  //SEG29 [16] phi (byte) lines::l#2 = (byte/signed byte/word/signed word) 0 [phi:lines->lines::@1#0] -- zpby1=coby1 
    lda #0
    sta l
    jmp b1
  //SEG30 [16] phi from lines::@3 to lines::@1 [phi:lines::@3->lines::@1]
  //SEG31 [16] phi (byte) lines::l#2 = (byte) lines::l#1 [phi:lines::@3->lines::@1#0] -- register_copy 
  //SEG32 lines::@1
  b1:
  //SEG33 [17] (byte~) lines::$0 ← (const byte[]) lines_x#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 ] ( main:2::lines:12 [ lines::l#2 lines::$0 ] ) -- yby=cowo1_derefidx_zpby1 
    ldx l
    lda lines_x,x
    tay
  //SEG34 [18] (byte~) lines::$2 ← (const byte[]) lines_x#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx l
    lda lines_x+1,x
    sta _2
  //SEG35 [19] (byte~) lines::$3 ← (const byte[]) lines_y#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 lines::$3 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx l
    lda lines_y,x
    sta _3
  //SEG36 [20] (byte~) lines::$5 ← (const byte[]) lines_y#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ] ) -- xby=cowo1_derefidx_zpby1 
    ldx l
    lda lines_y+1,x
    tax
  //SEG37 [21] (byte) line::x0#0 ← (byte~) lines::$0 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ] ( main:2::lines:12 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ] ) -- zpby1=yby 
    sty line.x0
  //SEG38 [22] (byte) line::x1#0 ← (byte~) lines::$2 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ] ( main:2::lines:12 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ] )
    // (byte) line::x1#0 = (byte~) lines::$2  // register copy zp ZP_BYTE:3
  //SEG39 [23] (byte) line::y0#0 ← (byte~) lines::$3 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ] ( main:2::lines:12 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ] ) -- yby=zpby1 
    ldy _3
  //SEG40 [24] (byte) line::y1#0 ← (byte~) lines::$5 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ( main:2::lines:12 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ) -- zpby1=xby 
    stx line.y1
  //SEG41 [25] call line param-assignment [ lines::l#2 ] ( main:2::lines:12 [ lines::l#2 ] )
    jsr line
  //SEG42 lines::@3
  b3:
  //SEG43 [26] (byte) lines::l#1 ← ++ (byte) lines::l#2 [ lines::l#1 ] ( main:2::lines:12 [ lines::l#1 ] ) -- zpby1=_inc_zpby1 
    inc l
  //SEG44 [27] if((byte) lines::l#1<(const byte) lines_cnt#0) goto lines::@1 [ lines::l#1 ] ( main:2::lines:12 [ lines::l#1 ] ) -- zpby1_lt_coby1_then_la1 
    lda l
    cmp #lines_cnt
    bcc b1
  //SEG45 lines::@return
  breturn:
  //SEG46 [28] return  [ ] ( main:2::lines:12 [ ] )
    rts
}
//SEG47 line
line: {
    .label x0 = 5
    .label x1 = 3
    .label y1 = 4
    .label xd = 7
    .label yd = $a
  //SEG48 [29] if((byte) line::x0#0>=(byte) line::x1#0) goto line::@1 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ) -- zpby1_ge_zpby2_then_la1 
    lda x0
    cmp x1
    bcs b1
  //SEG49 line::@15
  b15:
  //SEG50 [30] (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ) -- zpby1=zpby2_minus_zpby3 
    lda x1
    sec
    sbc x0
    sta xd
  //SEG51 [31] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@2 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ) -- yby_ge_zpby1_then_la1 
    cpy y1
    bcs b2
  //SEG52 line::@16
  b16:
  //SEG53 [32] (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ) -- zpby1=zpby2_minus_yby 
    sty $ff
    lda y1
    sec
    sbc $ff
    sta yd
  //SEG54 [33] if((byte) line::yd#1>=(byte) line::xd#1) goto line::@3 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b3
  //SEG55 line::@17
  b17:
  //SEG56 [34] (byte) line_xdyi::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG57 [35] (byte) line_xdyi::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ] ) -- zpby1=yby 
    sty line_xdyi.y
  //SEG58 [36] (byte) line_xdyi::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ] ) -- zpby1=zpby2 
    lda x1
    sta line_xdyi.x1
  //SEG59 [37] (byte) line_xdyi::xd#0 ← (byte) line::xd#1 [ line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyi.xd
  //SEG60 [38] (byte) line_xdyi::yd#0 ← (byte) line::yd#1 [ line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyi.yd
  //SEG61 [39] call line_xdyi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG62 [120] phi from line::@17 to line_xdyi [phi:line::@17->line_xdyi]
  line_xdyi_from_b17:
  //SEG63 [120] phi (byte) line_xdyi::x1#6 = (byte) line_xdyi::x1#0 [phi:line::@17->line_xdyi#0] -- register_copy 
  //SEG64 [120] phi (byte) line_xdyi::xd#5 = (byte) line_xdyi::xd#0 [phi:line::@17->line_xdyi#1] -- register_copy 
  //SEG65 [120] phi (byte) line_xdyi::y#5 = (byte) line_xdyi::y#0 [phi:line::@17->line_xdyi#2] -- register_copy 
  //SEG66 [120] phi (byte) line_xdyi::x#6 = (byte) line_xdyi::x#0 [phi:line::@17->line_xdyi#3] -- register_copy 
  //SEG67 [120] phi (byte) line_xdyi::yd#2 = (byte) line_xdyi::yd#0 [phi:line::@17->line_xdyi#4] -- register_copy 
    jsr line_xdyi
  //SEG68 line::@return
  breturn:
  //SEG69 [40] return  [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
    rts
  //SEG70 line::@3
  b3:
  //SEG71 [41] (byte) line_ydxi::y#0 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ] ) -- zpby1=yby 
    sty line_ydxi.y
  //SEG72 [42] (byte) line_ydxi::x#0 ← (byte) line::x0#0 [ line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG73 [43] (byte) line_ydxi::y1#0 ← (byte) line::y1#0 [ line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxi.y1
  //SEG74 [44] (byte) line_ydxi::yd#0 ← (byte) line::yd#1 [ line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxi.yd
  //SEG75 [45] (byte) line_ydxi::xd#0 ← (byte) line::xd#1 [ line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxi.xd
  //SEG76 [46] call line_ydxi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG77 [91] phi from line::@3 to line_ydxi [phi:line::@3->line_ydxi]
  line_ydxi_from_b3:
  //SEG78 [91] phi (byte) line_ydxi::y1#6 = (byte) line_ydxi::y1#0 [phi:line::@3->line_ydxi#0] -- register_copy 
  //SEG79 [91] phi (byte) line_ydxi::yd#5 = (byte) line_ydxi::yd#0 [phi:line::@3->line_ydxi#1] -- register_copy 
  //SEG80 [91] phi (byte) line_ydxi::y#6 = (byte) line_ydxi::y#0 [phi:line::@3->line_ydxi#2] -- register_copy 
  //SEG81 [91] phi (byte) line_ydxi::x#5 = (byte) line_ydxi::x#0 [phi:line::@3->line_ydxi#3] -- register_copy 
  //SEG82 [91] phi (byte) line_ydxi::xd#2 = (byte) line_ydxi::xd#0 [phi:line::@3->line_ydxi#4] -- register_copy 
    jsr line_ydxi
    jmp breturn
  //SEG83 line::@2
  b2:
  //SEG84 [47] (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ) -- zpby1=yby_minus_zpby2 
    tya
    sec
    sbc y1
    sta yd
  //SEG85 [48] if((byte) line::yd#0>=(byte) line::xd#1) goto line::@6 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b6
  //SEG86 line::@20
  b20:
  //SEG87 [49] (byte) line_xdyd::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG88 [50] (byte) line_xdyd::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ] ) -- zpby1=yby 
    sty line_xdyd.y
  //SEG89 [51] (byte) line_xdyd::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ] ) -- zpby1=zpby2 
    lda x1
    sta line_xdyd.x1
  //SEG90 [52] (byte) line_xdyd::xd#0 ← (byte) line::xd#1 [ line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyd.xd
  //SEG91 [53] (byte) line_xdyd::yd#0 ← (byte) line::yd#0 [ line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyd.yd
  //SEG92 [54] call line_xdyd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG93 [150] phi from line::@20 to line_xdyd [phi:line::@20->line_xdyd]
  line_xdyd_from_b20:
  //SEG94 [150] phi (byte) line_xdyd::x1#6 = (byte) line_xdyd::x1#0 [phi:line::@20->line_xdyd#0] -- register_copy 
  //SEG95 [150] phi (byte) line_xdyd::xd#5 = (byte) line_xdyd::xd#0 [phi:line::@20->line_xdyd#1] -- register_copy 
  //SEG96 [150] phi (byte) line_xdyd::y#5 = (byte) line_xdyd::y#0 [phi:line::@20->line_xdyd#2] -- register_copy 
  //SEG97 [150] phi (byte) line_xdyd::x#6 = (byte) line_xdyd::x#0 [phi:line::@20->line_xdyd#3] -- register_copy 
  //SEG98 [150] phi (byte) line_xdyd::yd#2 = (byte) line_xdyd::yd#0 [phi:line::@20->line_xdyd#4] -- register_copy 
    jsr line_xdyd
    jmp breturn
  //SEG99 line::@6
  b6:
  //SEG100 [55] (byte) line_ydxd::y#0 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxd.y
  //SEG101 [56] (byte) line_ydxd::x#0 ← (byte) line::x1#0 [ line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ] ) -- xby=zpby1 
    ldx x1
  //SEG102 [57] (byte) line_ydxd::y1#0 ← (byte) line::y0#0 [ line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ] ) -- zpby1=yby 
    sty line_ydxd.y1
  //SEG103 [58] (byte) line_ydxd::yd#0 ← (byte) line::yd#0 [ line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxd.yd
  //SEG104 [59] (byte) line_ydxd::xd#0 ← (byte) line::xd#1 [ line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxd.xd
  //SEG105 [60] call line_ydxd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG106 [135] phi from line::@6 to line_ydxd [phi:line::@6->line_ydxd]
  line_ydxd_from_b6:
  //SEG107 [135] phi (byte) line_ydxd::y1#6 = (byte) line_ydxd::y1#0 [phi:line::@6->line_ydxd#0] -- register_copy 
  //SEG108 [135] phi (byte) line_ydxd::yd#5 = (byte) line_ydxd::yd#0 [phi:line::@6->line_ydxd#1] -- register_copy 
  //SEG109 [135] phi (byte) line_ydxd::y#6 = (byte) line_ydxd::y#0 [phi:line::@6->line_ydxd#2] -- register_copy 
  //SEG110 [135] phi (byte) line_ydxd::x#5 = (byte) line_ydxd::x#0 [phi:line::@6->line_ydxd#3] -- register_copy 
  //SEG111 [135] phi (byte) line_ydxd::xd#2 = (byte) line_ydxd::xd#0 [phi:line::@6->line_ydxd#4] -- register_copy 
    jsr line_ydxd
    jmp breturn
  //SEG112 line::@1
  b1:
  //SEG113 [61] (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ) -- zpby1=zpby2_minus_zpby3 
    lda x0
    sec
    sbc x1
    sta xd
  //SEG114 [62] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@9 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ) -- yby_ge_zpby1_then_la1 
    cpy y1
    bcs b9
  //SEG115 line::@23
  b23:
  //SEG116 [63] (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ) -- zpby1=zpby2_minus_yby 
    sty $ff
    lda y1
    sec
    sbc $ff
    sta yd
  //SEG117 [64] if((byte) line::yd#3>=(byte) line::xd#0) goto line::@10 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b10
  //SEG118 line::@24
  b24:
  //SEG119 [65] (byte) line_xdyd::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG120 [66] (byte) line_xdyd::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_xdyd.y
  //SEG121 [67] (byte) line_xdyd::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ] )
    // (byte) line_xdyd::x1#1 = (byte) line::x0#0  // register copy zp ZP_BYTE:5
  //SEG122 [68] (byte) line_xdyd::xd#1 ← (byte) line::xd#0 [ line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyd.xd
  //SEG123 [69] (byte) line_xdyd::yd#1 ← (byte) line::yd#3 [ line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyd.yd
  //SEG124 [70] call line_xdyd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG125 [150] phi from line::@24 to line_xdyd [phi:line::@24->line_xdyd]
  line_xdyd_from_b24:
  //SEG126 [150] phi (byte) line_xdyd::x1#6 = (byte) line_xdyd::x1#1 [phi:line::@24->line_xdyd#0] -- register_copy 
  //SEG127 [150] phi (byte) line_xdyd::xd#5 = (byte) line_xdyd::xd#1 [phi:line::@24->line_xdyd#1] -- register_copy 
  //SEG128 [150] phi (byte) line_xdyd::y#5 = (byte) line_xdyd::y#1 [phi:line::@24->line_xdyd#2] -- register_copy 
  //SEG129 [150] phi (byte) line_xdyd::x#6 = (byte) line_xdyd::x#1 [phi:line::@24->line_xdyd#3] -- register_copy 
  //SEG130 [150] phi (byte) line_xdyd::yd#2 = (byte) line_xdyd::yd#1 [phi:line::@24->line_xdyd#4] -- register_copy 
    jsr line_xdyd
    jmp breturn
  //SEG131 line::@10
  b10:
  //SEG132 [71] (byte) line_ydxd::y#1 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ] ) -- zpby1=yby 
    sty line_ydxd.y
  //SEG133 [72] (byte) line_ydxd::x#1 ← (byte) line::x0#0 [ line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ] ) -- xby=zpby1 
    ldx x0
  //SEG134 [73] (byte) line_ydxd::y1#1 ← (byte) line::y1#0 [ line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxd.y1
  //SEG135 [74] (byte) line_ydxd::yd#1 ← (byte) line::yd#3 [ line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxd.yd
  //SEG136 [75] (byte) line_ydxd::xd#1 ← (byte) line::xd#0 [ line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxd.xd
  //SEG137 [76] call line_ydxd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG138 [135] phi from line::@10 to line_ydxd [phi:line::@10->line_ydxd]
  line_ydxd_from_b10:
  //SEG139 [135] phi (byte) line_ydxd::y1#6 = (byte) line_ydxd::y1#1 [phi:line::@10->line_ydxd#0] -- register_copy 
  //SEG140 [135] phi (byte) line_ydxd::yd#5 = (byte) line_ydxd::yd#1 [phi:line::@10->line_ydxd#1] -- register_copy 
  //SEG141 [135] phi (byte) line_ydxd::y#6 = (byte) line_ydxd::y#1 [phi:line::@10->line_ydxd#2] -- register_copy 
  //SEG142 [135] phi (byte) line_ydxd::x#5 = (byte) line_ydxd::x#1 [phi:line::@10->line_ydxd#3] -- register_copy 
  //SEG143 [135] phi (byte) line_ydxd::xd#2 = (byte) line_ydxd::xd#1 [phi:line::@10->line_ydxd#4] -- register_copy 
    jsr line_ydxd
    jmp breturn
  //SEG144 line::@9
  b9:
  //SEG145 [77] (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ) -- zpby1=yby_minus_zpby2 
    tya
    sec
    sbc y1
    sta yd
  //SEG146 [78] if((byte) line::yd#10>=(byte) line::xd#0) goto line::@13 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b13
  //SEG147 line::@27
  b27:
  //SEG148 [79] (byte) line_xdyi::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG149 [80] (byte) line_xdyi::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_xdyi.y
  //SEG150 [81] (byte) line_xdyi::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ] )
    // (byte) line_xdyi::x1#1 = (byte) line::x0#0  // register copy zp ZP_BYTE:5
  //SEG151 [82] (byte) line_xdyi::xd#1 ← (byte) line::xd#0 [ line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyi.xd
  //SEG152 [83] (byte) line_xdyi::yd#1 ← (byte) line::yd#10 [ line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyi.yd
  //SEG153 [84] call line_xdyi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG154 [120] phi from line::@27 to line_xdyi [phi:line::@27->line_xdyi]
  line_xdyi_from_b27:
  //SEG155 [120] phi (byte) line_xdyi::x1#6 = (byte) line_xdyi::x1#1 [phi:line::@27->line_xdyi#0] -- register_copy 
  //SEG156 [120] phi (byte) line_xdyi::xd#5 = (byte) line_xdyi::xd#1 [phi:line::@27->line_xdyi#1] -- register_copy 
  //SEG157 [120] phi (byte) line_xdyi::y#5 = (byte) line_xdyi::y#1 [phi:line::@27->line_xdyi#2] -- register_copy 
  //SEG158 [120] phi (byte) line_xdyi::x#6 = (byte) line_xdyi::x#1 [phi:line::@27->line_xdyi#3] -- register_copy 
  //SEG159 [120] phi (byte) line_xdyi::yd#2 = (byte) line_xdyi::yd#1 [phi:line::@27->line_xdyi#4] -- register_copy 
    jsr line_xdyi
    jmp breturn
  //SEG160 line::@13
  b13:
  //SEG161 [85] (byte) line_ydxi::y#1 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxi.y
  //SEG162 [86] (byte) line_ydxi::x#1 ← (byte) line::x1#0 [ line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG163 [87] (byte) line_ydxi::y1#1 ← (byte) line::y0#0 [ line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ] ) -- zpby1=yby 
    sty line_ydxi.y1
  //SEG164 [88] (byte) line_ydxi::yd#1 ← (byte) line::yd#10 [ line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxi.yd
  //SEG165 [89] (byte) line_ydxi::xd#1 ← (byte) line::xd#0 [ line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxi.xd
  //SEG166 [90] call line_ydxi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG167 [91] phi from line::@13 to line_ydxi [phi:line::@13->line_ydxi]
  line_ydxi_from_b13:
  //SEG168 [91] phi (byte) line_ydxi::y1#6 = (byte) line_ydxi::y1#1 [phi:line::@13->line_ydxi#0] -- register_copy 
  //SEG169 [91] phi (byte) line_ydxi::yd#5 = (byte) line_ydxi::yd#1 [phi:line::@13->line_ydxi#1] -- register_copy 
  //SEG170 [91] phi (byte) line_ydxi::y#6 = (byte) line_ydxi::y#1 [phi:line::@13->line_ydxi#2] -- register_copy 
  //SEG171 [91] phi (byte) line_ydxi::x#5 = (byte) line_ydxi::x#1 [phi:line::@13->line_ydxi#3] -- register_copy 
  //SEG172 [91] phi (byte) line_ydxi::xd#2 = (byte) line_ydxi::xd#1 [phi:line::@13->line_ydxi#4] -- register_copy 
    jsr line_ydxi
    jmp breturn
}
//SEG173 line_ydxi
line_ydxi: {
    .label y = 6
    .label y1 = 5
    .label yd = 4
    .label xd = 3
    .label e = 7
  //SEG174 [92] (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda xd
    lsr
    sta e
  //SEG175 [93] phi from line_ydxi line_ydxi::@2 to line_ydxi::@1 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1]
  //SEG176 [93] phi (byte) line_ydxi::e#3 = (byte) line_ydxi::e#0 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#0] -- register_copy 
  //SEG177 [93] phi (byte) line_ydxi::y#3 = (byte) line_ydxi::y#6 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#1] -- register_copy 
  //SEG178 [93] phi (byte) line_ydxi::x#3 = (byte) line_ydxi::x#5 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#2] -- register_copy 
  //SEG179 line_ydxi::@1
  b1:
  //SEG180 [94] (byte) plot::x#2 ← (byte) line_ydxi::x#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] )
    // (byte) plot::x#2 = (byte) line_ydxi::x#3  // register copy reg byte x
  //SEG181 [95] (byte) plot::y#2 ← (byte) line_ydxi::y#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] ) -- yby=zpby1 
    ldy y
  //SEG182 [96] call plot param-assignment [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] )
  //SEG183 [106] phi from line_ydxi::@1 to plot [phi:line_ydxi::@1->plot]
  plot_from_b1:
  //SEG184 [106] phi (byte) plot::y#4 = (byte) plot::y#2 [phi:line_ydxi::@1->plot#0] -- register_copy 
  //SEG185 [106] phi (byte) plot::x#4 = (byte) plot::x#2 [phi:line_ydxi::@1->plot#1] -- register_copy 
    jsr plot
  //SEG186 line_ydxi::@5
  b5:
  //SEG187 [97] (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG188 [98] (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc xd
    sta e
  //SEG189 [99] if((byte) line_ydxi::yd#5>=(byte) line_ydxi::e#1) goto line_ydxi::@2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp e
    bcs b2
  //SEG190 line_ydxi::@3
  b3:
  //SEG191 [100] (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG192 [101] (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc yd
    sta e
  //SEG193 [102] phi from line_ydxi::@3 line_ydxi::@5 to line_ydxi::@2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2]
  //SEG194 [102] phi (byte) line_ydxi::e#6 = (byte) line_ydxi::e#2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2#0] -- register_copy 
  //SEG195 [102] phi (byte) line_ydxi::x#6 = (byte) line_ydxi::x#2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2#1] -- register_copy 
  //SEG196 line_ydxi::@2
  b2:
  //SEG197 [103] (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] ) -- aby=zpby1_plus_1 
    lda y1
    clc
    adc #1
  //SEG198 [104] if((byte) line_ydxi::y#2<(byte~) line_ydxi::$8) goto line_ydxi::@1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] ) -- zpby1_lt_aby_then_la1 
    cmp y
    bcs b1
  //SEG199 line_ydxi::@return
  breturn:
  //SEG200 [105] return  [ ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 ] )
    rts
}
//SEG201 plot
plot: {
    .label plotter_x = 8
    .label plotter_y = $b
    .label plotter = 8
  //SEG202 [107] (byte~) plot::$0 ← (const byte[]) plot_xhi#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::$0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::$0 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_xhi,x
  //SEG203 [108] (byte*) plot::plotter_x#1 ← ((byte*))(byte/signed byte/word/signed word) 0 hi= (byte~) plot::$0 [ plot::x#4 plot::y#4 plot::plotter_x#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] ) -- zpptrby1=cowo1_sethi_aby 
    sta plotter_x+1
    lda #<0
    sta plotter_x
  //SEG204 [109] (byte~) plot::$1 ← (const byte[]) plot_xlo#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_xlo,x
  //SEG205 [110] (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1 [ plot::x#4 plot::y#4 plot::plotter_x#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] ) -- zpptrby1=zpptrby1_setlo_aby 
    sta plotter_x
  //SEG206 [111] (byte~) plot::$2 ← (const byte[]) plot_yhi#0 *idx (byte) plot::y#4 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] ) -- aby=cowo1_derefidx_yby 
    lda plot_yhi,y
  //SEG207 [112] (word) plot::plotter_y#1 ← (byte/signed byte/word/signed word) 0 hi= (byte~) plot::$2 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] ) -- zpwo1=coby1_sethi_aby 
    sta plotter_y+1
    lda #<0
    sta plotter_y
  //SEG208 [113] (byte~) plot::$3 ← (const byte[]) plot_ylo#0 *idx (byte) plot::y#4 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] ) -- aby=cowo1_derefidx_yby 
    lda plot_ylo,y
  //SEG209 [114] (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ) -- zpwo1=zpwo1_setlo_aby 
    sta plotter_y
  //SEG210 [115] (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2 [ plot::x#4 plot::plotter#0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] ) -- zpptrby1=zpptrby1_plus_zpwo1 
    lda plotter
    clc
    adc plotter_y
    sta plotter
    lda plotter+1
    adc plotter_y+1
    sta plotter+1
  //SEG211 [116] (byte~) plot::$5 ← (const byte[]) plot_bit#0 *idx (byte) plot::x#4 [ plot::plotter#0 plot::$5 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$5 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_bit,x
  //SEG212 [117] (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5 [ plot::plotter#0 plot::$6 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] ) -- aby=_deref_zpptrby1_bor_aby 
    ldy #0
    ora (plotter),y
  //SEG213 [118] *((byte*) plot::plotter#0) ← (byte~) plot::$6 [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ) -- _deref_zpptrby1=aby 
    sta (plotter),y
  //SEG214 plot::@return
  breturn:
  //SEG215 [119] return  [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
    rts
}
//SEG216 line_xdyi
line_xdyi: {
    .label _8 = $a
    .label y = 6
    .label x1 = 5
    .label xd = 4
    .label yd = 3
    .label e = 7
  //SEG217 [121] (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda yd
    lsr
    sta e
  //SEG218 [122] phi from line_xdyi line_xdyi::@2 to line_xdyi::@1 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1]
  //SEG219 [122] phi (byte) line_xdyi::e#3 = (byte) line_xdyi::e#0 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#0] -- register_copy 
  //SEG220 [122] phi (byte) line_xdyi::y#3 = (byte) line_xdyi::y#5 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#1] -- register_copy 
  //SEG221 [122] phi (byte) line_xdyi::x#3 = (byte) line_xdyi::x#6 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#2] -- register_copy 
  //SEG222 line_xdyi::@1
  b1:
  //SEG223 [123] (byte) plot::x#0 ← (byte) line_xdyi::x#3 [ plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
    // (byte) plot::x#0 = (byte) line_xdyi::x#3  // register copy reg byte x
  //SEG224 [124] (byte) plot::y#0 ← (byte) line_xdyi::y#3 [ plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG225 [125] call plot param-assignment [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
  //SEG226 [106] phi from line_xdyi::@1 to plot [phi:line_xdyi::@1->plot]
  plot_from_b1:
  //SEG227 [106] phi (byte) plot::y#4 = (byte) plot::y#0 [phi:line_xdyi::@1->plot#0] -- register_copy 
  //SEG228 [106] phi (byte) plot::x#4 = (byte) plot::x#0 [phi:line_xdyi::@1->plot#1] -- register_copy 
    jsr plot
  //SEG229 line_xdyi::@5
  b5:
  //SEG230 [126] (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG231 [127] (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc yd
    sta e
  //SEG232 [128] if((byte) line_xdyi::xd#5>=(byte) line_xdyi::e#1) goto line_xdyi::@2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda xd
    cmp e
    bcs b2
  //SEG233 line_xdyi::@3
  b3:
  //SEG234 [129] (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG235 [130] (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc xd
    sta e
  //SEG236 [131] phi from line_xdyi::@3 line_xdyi::@5 to line_xdyi::@2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2]
  //SEG237 [131] phi (byte) line_xdyi::e#6 = (byte) line_xdyi::e#2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2#0] -- register_copy 
  //SEG238 [131] phi (byte) line_xdyi::y#6 = (byte) line_xdyi::y#2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2#1] -- register_copy 
  //SEG239 line_xdyi::@2
  b2:
  //SEG240 [132] (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] ) -- zpby1=zpby2_plus_1 
    lda x1
    clc
    adc #1
    sta _8
  //SEG241 [133] if((byte) line_xdyi::x#2<(byte~) line_xdyi::$8) goto line_xdyi::@1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] ) -- xby_lt_zpby1_then_la1 
    cpx _8
    bcc b1
  //SEG242 line_xdyi::@return
  breturn:
  //SEG243 [134] return  [ ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 ] )
    rts
}
//SEG244 line_ydxd
line_ydxd: {
    .label y = 6
    .label y1 = 5
    .label yd = 4
    .label xd = 3
    .label e = 7
  //SEG245 [136] (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda xd
    lsr
    sta e
  //SEG246 [137] phi from line_ydxd line_ydxd::@2 to line_ydxd::@1 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1]
  //SEG247 [137] phi (byte) line_ydxd::e#3 = (byte) line_ydxd::e#0 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#0] -- register_copy 
  //SEG248 [137] phi (byte) line_ydxd::y#3 = (byte) line_ydxd::y#6 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#1] -- register_copy 
  //SEG249 [137] phi (byte) line_ydxd::x#3 = (byte) line_ydxd::x#5 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#2] -- register_copy 
  //SEG250 line_ydxd::@1
  b1:
  //SEG251 [138] (byte) plot::x#3 ← (byte) line_ydxd::x#3 [ plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
    // (byte) plot::x#3 = (byte) line_ydxd::x#3  // register copy reg byte x
  //SEG252 [139] (byte) plot::y#3 ← (byte) line_ydxd::y#3 [ plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG253 [140] call plot param-assignment [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
  //SEG254 [106] phi from line_ydxd::@1 to plot [phi:line_ydxd::@1->plot]
  plot_from_b1:
  //SEG255 [106] phi (byte) plot::y#4 = (byte) plot::y#3 [phi:line_ydxd::@1->plot#0] -- register_copy 
  //SEG256 [106] phi (byte) plot::x#4 = (byte) plot::x#3 [phi:line_ydxd::@1->plot#1] -- register_copy 
    jsr plot
  //SEG257 line_ydxd::@5
  b5:
  //SEG258 [141] (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG259 [142] (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc xd
    sta e
  //SEG260 [143] if((byte) line_ydxd::yd#5>=(byte) line_ydxd::e#1) goto line_ydxd::@2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp e
    bcs b2
  //SEG261 line_ydxd::@3
  b3:
  //SEG262 [144] (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] ) -- xby=xby_minus_1 
    dex
  //SEG263 [145] (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc yd
    sta e
  //SEG264 [146] phi from line_ydxd::@3 line_ydxd::@5 to line_ydxd::@2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2]
  //SEG265 [146] phi (byte) line_ydxd::e#6 = (byte) line_ydxd::e#2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2#0] -- register_copy 
  //SEG266 [146] phi (byte) line_ydxd::x#6 = (byte) line_ydxd::x#2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2#1] -- register_copy 
  //SEG267 line_ydxd::@2
  b2:
  //SEG268 [147] (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] ) -- aby=zpby1_plus_1 
    lda y1
    clc
    adc #1
  //SEG269 [148] if((byte) line_ydxd::y#2<(byte~) line_ydxd::$8) goto line_ydxd::@1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] ) -- zpby1_lt_aby_then_la1 
    cmp y
    bcs b1
  //SEG270 line_ydxd::@return
  breturn:
  //SEG271 [149] return  [ ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 ] )
    rts
}
//SEG272 line_xdyd
line_xdyd: {
    .label _8 = $a
    .label y = 6
    .label x1 = 5
    .label xd = 4
    .label yd = 3
    .label e = 7
  //SEG273 [151] (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda yd
    lsr
    sta e
  //SEG274 [152] phi from line_xdyd line_xdyd::@2 to line_xdyd::@1 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1]
  //SEG275 [152] phi (byte) line_xdyd::e#3 = (byte) line_xdyd::e#0 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#0] -- register_copy 
  //SEG276 [152] phi (byte) line_xdyd::y#3 = (byte) line_xdyd::y#5 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#1] -- register_copy 
  //SEG277 [152] phi (byte) line_xdyd::x#3 = (byte) line_xdyd::x#6 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#2] -- register_copy 
  //SEG278 line_xdyd::@1
  b1:
  //SEG279 [153] (byte) plot::x#1 ← (byte) line_xdyd::x#3 [ plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
    // (byte) plot::x#1 = (byte) line_xdyd::x#3  // register copy reg byte x
  //SEG280 [154] (byte) plot::y#1 ← (byte) line_xdyd::y#3 [ plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG281 [155] call plot param-assignment [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
  //SEG282 [106] phi from line_xdyd::@1 to plot [phi:line_xdyd::@1->plot]
  plot_from_b1:
  //SEG283 [106] phi (byte) plot::y#4 = (byte) plot::y#1 [phi:line_xdyd::@1->plot#0] -- register_copy 
  //SEG284 [106] phi (byte) plot::x#4 = (byte) plot::x#1 [phi:line_xdyd::@1->plot#1] -- register_copy 
    jsr plot
  //SEG285 line_xdyd::@5
  b5:
  //SEG286 [156] (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG287 [157] (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc yd
    sta e
  //SEG288 [158] if((byte) line_xdyd::xd#5>=(byte) line_xdyd::e#1) goto line_xdyd::@2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda xd
    cmp e
    bcs b2
  //SEG289 line_xdyd::@3
  b3:
  //SEG290 [159] (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] ) -- zpby1=zpby1_minus_1 
    dec y
  //SEG291 [160] (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc xd
    sta e
  //SEG292 [161] phi from line_xdyd::@3 line_xdyd::@5 to line_xdyd::@2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2]
  //SEG293 [161] phi (byte) line_xdyd::e#6 = (byte) line_xdyd::e#2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2#0] -- register_copy 
  //SEG294 [161] phi (byte) line_xdyd::y#6 = (byte) line_xdyd::y#2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2#1] -- register_copy 
  //SEG295 line_xdyd::@2
  b2:
  //SEG296 [162] (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] ) -- zpby1=zpby2_plus_1 
    lda x1
    clc
    adc #1
    sta _8
  //SEG297 [163] if((byte) line_xdyd::x#2<(byte~) line_xdyd::$8) goto line_xdyd::@1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] ) -- xby_lt_zpby1_then_la1 
    cpx _8
    bcc b1
  //SEG298 line_xdyd::@return
  breturn:
  //SEG299 [164] return  [ ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 ] )
    rts
}
//SEG300 init_plot_tables
init_plot_tables: {
    .label _6 = 2
    .label yoffs = 8
  //SEG301 [166] phi from init_plot_tables to init_plot_tables::@1 [phi:init_plot_tables->init_plot_tables::@1]
  b1_from_init_plot_tables:
  //SEG302 [166] phi (byte) init_plot_tables::bits#3 = (byte/word/signed word) 128 [phi:init_plot_tables->init_plot_tables::@1#0] -- yby=coby1 
    ldy #$80
  //SEG303 [166] phi (byte) init_plot_tables::x#2 = (byte/signed byte/word/signed word) 0 [phi:init_plot_tables->init_plot_tables::@1#1] -- xby=coby1 
    ldx #0
    jmp b1
  //SEG304 [166] phi from init_plot_tables::@2 to init_plot_tables::@1 [phi:init_plot_tables::@2->init_plot_tables::@1]
  //SEG305 [166] phi (byte) init_plot_tables::bits#3 = (byte) init_plot_tables::bits#4 [phi:init_plot_tables::@2->init_plot_tables::@1#0] -- register_copy 
  //SEG306 [166] phi (byte) init_plot_tables::x#2 = (byte) init_plot_tables::x#1 [phi:init_plot_tables::@2->init_plot_tables::@1#1] -- register_copy 
  //SEG307 init_plot_tables::@1
  b1:
  //SEG308 [167] (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ) -- aby=xby_band_coby1 
    txa
    and #$f8
  //SEG309 [168] *((const byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_xlo,x
  //SEG310 [169] *((const byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← >(const byte*) BITMAP#0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=coby2 
    lda #>BITMAP
    sta plot_xhi,x
  //SEG311 [170] *((const byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=yby 
    tya
    sta plot_bit,x
  //SEG312 [171] (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ) -- yby=yby_ror_1 
    tya
    lsr
    tay
  //SEG313 [172] if((byte) init_plot_tables::bits#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ) -- yby_neq_0_then_la1 
    cpy #0
    bne b10
  //SEG314 [173] phi from init_plot_tables::@1 to init_plot_tables::@2 [phi:init_plot_tables::@1->init_plot_tables::@2]
  b2_from_b1:
  //SEG315 [173] phi (byte) init_plot_tables::bits#4 = (byte/word/signed word) 128 [phi:init_plot_tables::@1->init_plot_tables::@2#0] -- yby=coby1 
    ldy #$80
  //SEG316 init_plot_tables::@2
  b2:
  //SEG317 [174] (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ) -- xby=_inc_xby 
    inx
  //SEG318 [175] if((byte) init_plot_tables::x#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@1 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ) -- xby_neq_0_then_la1 
    cpx #0
    bne b1
  //SEG319 [176] phi from init_plot_tables::@2 to init_plot_tables::@3 [phi:init_plot_tables::@2->init_plot_tables::@3]
  b3_from_b2:
  //SEG320 [176] phi (byte*) init_plot_tables::yoffs#2 = ((byte*))(byte/signed byte/word/signed word) 0 [phi:init_plot_tables::@2->init_plot_tables::@3#0] -- zpptrby1=cowo1 
    lda #<0
    sta yoffs
    sta yoffs+1
  //SEG321 [176] phi (byte) init_plot_tables::y#2 = (byte/signed byte/word/signed word) 0 [phi:init_plot_tables::@2->init_plot_tables::@3#1] -- xby=coby1 
    tax
    jmp b3
  //SEG322 [176] phi from init_plot_tables::@4 to init_plot_tables::@3 [phi:init_plot_tables::@4->init_plot_tables::@3]
  //SEG323 [176] phi (byte*) init_plot_tables::yoffs#2 = (byte*) init_plot_tables::yoffs#4 [phi:init_plot_tables::@4->init_plot_tables::@3#0] -- register_copy 
  //SEG324 [176] phi (byte) init_plot_tables::y#2 = (byte) init_plot_tables::y#1 [phi:init_plot_tables::@4->init_plot_tables::@3#1] -- register_copy 
  //SEG325 init_plot_tables::@3
  b3:
  //SEG326 [177] (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ) -- zpby1=xby_band_coby1 
    txa
    and #7
    sta _6
  //SEG327 [178] (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ] ) -- aby=_lo_zpptrby1 
    lda yoffs
  //SEG328 [179] (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ] ) -- aby=zpby1_bor_aby 
    ora _6
  //SEG329 [180] *((const byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_ylo,x
  //SEG330 [181] (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ) -- aby=_hi_zpptrby1 
    lda yoffs+1
  //SEG331 [182] *((const byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_yhi,x
  //SEG332 [183] (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ) -- aby=xby_band_coby1 
    txa
    and #7
  //SEG333 [184] if((byte~) init_plot_tables::$10!=(byte/signed byte/word/signed word) 7) goto init_plot_tables::@4 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- aby_neq_coby1_then_la1 
    cmp #7
    bne b4
  //SEG334 init_plot_tables::@7
  b7:
  //SEG335 [185] (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ) -- zpptrby1=zpptrby1_plus_cowo1 
    lda yoffs
    clc
    adc #<$140
    sta yoffs
    lda yoffs+1
    adc #>$140
    sta yoffs+1
  //SEG336 [186] phi from init_plot_tables::@3 init_plot_tables::@7 to init_plot_tables::@4 [phi:init_plot_tables::@3/init_plot_tables::@7->init_plot_tables::@4]
  //SEG337 [186] phi (byte*) init_plot_tables::yoffs#4 = (byte*) init_plot_tables::yoffs#2 [phi:init_plot_tables::@3/init_plot_tables::@7->init_plot_tables::@4#0] -- register_copy 
  //SEG338 init_plot_tables::@4
  b4:
  //SEG339 [187] (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ) -- xby=_inc_xby 
    inx
  //SEG340 [188] if((byte) init_plot_tables::y#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@3 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ) -- xby_neq_0_then_la1 
    cpx #0
    bne b3
  //SEG341 init_plot_tables::@return
  breturn:
  //SEG342 [189] return  [ ] ( main:2::init_plot_tables:10 [ ] )
    rts
  //SEG343 [190] phi from init_plot_tables::@1 to init_plot_tables::@10 [phi:init_plot_tables::@1->init_plot_tables::@10]
  //SEG344 init_plot_tables::@10
  b10:
  //SEG345 [173] phi from init_plot_tables::@10 to init_plot_tables::@2 [phi:init_plot_tables::@10->init_plot_tables::@2]
  //SEG346 [173] phi (byte) init_plot_tables::bits#4 = (byte) init_plot_tables::bits#1 [phi:init_plot_tables::@10->init_plot_tables::@2#0] -- register_copy 
    jmp b2
}
//SEG347 init_screen
init_screen: {
    .label b = 8
    .label c = 8
  //SEG348 [192] phi from init_screen to init_screen::@1 [phi:init_screen->init_screen::@1]
  b1_from_init_screen:
  //SEG349 [192] phi (byte*) init_screen::b#2 = (const byte*) BITMAP#0 [phi:init_screen->init_screen::@1#0] -- zpptrby1=cowo1 
    lda #<BITMAP
    sta b
    lda #>BITMAP
    sta b+1
    jmp b1
  //SEG350 [192] phi from init_screen::@1 to init_screen::@1 [phi:init_screen::@1->init_screen::@1]
  //SEG351 [192] phi (byte*) init_screen::b#2 = (byte*) init_screen::b#1 [phi:init_screen::@1->init_screen::@1#0] -- register_copy 
  //SEG352 init_screen::@1
  b1:
  //SEG353 [193] *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0 [ init_screen::b#2 ] ( main:2::init_screen:8 [ init_screen::b#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    tya
    sta (b),y
  //SEG354 [194] (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc b
    bne !+
    inc b+1
  !:
  //SEG355 [195] if((byte*) init_screen::b#1!=(const byte*) BITMAP#0+(word/signed word) 8192) goto init_screen::@1 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] ) -- zpptrby1_neq_cowo1_then_la1 
    lda b+1
    cmp #>BITMAP+$2000
    bne b1
    lda b
    cmp #<BITMAP+$2000
    bne b1
  //SEG356 [196] phi from init_screen::@1 to init_screen::@2 [phi:init_screen::@1->init_screen::@2]
  b2_from_b1:
  //SEG357 [196] phi (byte*) init_screen::c#2 = (const byte*) SCREEN#0 [phi:init_screen::@1->init_screen::@2#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta c
    lda #>SCREEN
    sta c+1
    jmp b2
  //SEG358 [196] phi from init_screen::@2 to init_screen::@2 [phi:init_screen::@2->init_screen::@2]
  //SEG359 [196] phi (byte*) init_screen::c#2 = (byte*) init_screen::c#1 [phi:init_screen::@2->init_screen::@2#0] -- register_copy 
  //SEG360 init_screen::@2
  b2:
  //SEG361 [197] *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20 [ init_screen::c#2 ] ( main:2::init_screen:8 [ init_screen::c#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #$14
    sta (c),y
  //SEG362 [198] (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc c
    bne !+
    inc c+1
  !:
  //SEG363 [199] if((byte*) init_screen::c#1!=(const byte*) SCREEN#0+(word/signed word) 1024) goto init_screen::@2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] ) -- zpptrby1_neq_cowo1_then_la1 
    lda c+1
    cmp #>SCREEN+$400
    bne b2
    lda c
    cmp #<SCREEN+$400
    bne b2
  //SEG364 init_screen::@return
  breturn:
  //SEG365 [200] return  [ ] ( main:2::init_screen:8 [ ] )
    rts
}

Removing instruction b10:
Removing instruction bend:
Removing instruction init_screen_from_main:
Removing instruction b3:
Removing instruction b5:
Removing instruction breturn:
Removing instruction b1_from_lines:
Removing instruction b3:
Removing instruction breturn:
Removing instruction b15:
Removing instruction b16:
Removing instruction b17:
Removing instruction line_xdyi_from_b17:
Removing instruction line_ydxi_from_b3:
Removing instruction b20:
Removing instruction line_xdyd_from_b20:
Removing instruction line_ydxd_from_b6:
Removing instruction b23:
Removing instruction b24:
Removing instruction line_xdyd_from_b24:
Removing instruction line_ydxd_from_b10:
Removing instruction b27:
Removing instruction line_xdyi_from_b27:
Removing instruction line_ydxi_from_b13:
Removing instruction plot_from_b1:
Removing instruction b5:
Removing instruction b3:
Removing instruction breturn:
Removing instruction breturn:
Removing instruction plot_from_b1:
Removing instruction b5:
Removing instruction b3:
Removing instruction breturn:
Removing instruction plot_from_b1:
Removing instruction b5:
Removing instruction b3:
Removing instruction breturn:
Removing instruction plot_from_b1:
Removing instruction b5:
Removing instruction b3:
Removing instruction breturn:
Removing instruction b1_from_init_plot_tables:
Removing instruction b2_from_b1:
Removing instruction b3_from_b2:
Removing instruction b7:
Removing instruction breturn:
Removing instruction b1_from_init_screen:
Removing instruction b2_from_b1:
Removing instruction breturn:
Succesful ASM optimization Pass5UnusedLabelElimination
ASSEMBLER
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const BGCOL = $d020
  .const FGCOL = $d021
  .const D018 = $d018
  .const D011 = $d011
  .const BMM = $20
  .const DEN = $10
  .const RSEL = 8
  .const SCREEN = $400
  .const BITMAP = $2000
  .const plot_xlo = $1000
  .const plot_xhi = $1100
  .const plot_ylo = $1200
  .const plot_yhi = $1300
  .const plot_bit = $1400
  .const lines_cnt = 8
  lines_x: .byte $3c, $50, $6e, $50, $3c, $28, $a, $28, $3c
  lines_y: .byte $a, $28, $3c, $50, $6e, $50, $3c, $28, $a
//SEG2 @begin
//SEG3 [1] phi from @begin to @10 [phi:@begin->@10]
//SEG4 @10
//SEG5 [2] call main param-assignment [ ] ( )
  jsr main
//SEG6 [3] phi from @10 to @end [phi:@10->@end]
//SEG7 @end
//SEG8 main
main: {
  //SEG9 [4] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #0
    sta BGCOL
  //SEG10 [5] *((const byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    sta FGCOL
  //SEG11 [6] *((const byte*) D011#0) ← (const byte) BMM#0|(const byte) DEN#0|(const byte) RSEL#0|(byte/signed byte/word/signed word) 3 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #BMM|DEN|RSEL|3
    sta D011
  //SEG12 [7] *((const byte*) D018#0) ← (byte/signed byte/word/signed word) 24 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #$18
    sta D018
  //SEG13 [8] call init_screen param-assignment [ ] ( main:2 [ ] )
  //SEG14 [191] phi from main to init_screen [phi:main->init_screen]
    jsr init_screen
  //SEG15 [9] phi from main to main::@3 [phi:main->main::@3]
  //SEG16 main::@3
  //SEG17 [10] call init_plot_tables param-assignment [ ] ( main:2 [ ] )
  //SEG18 [165] phi from main::@3 to init_plot_tables [phi:main::@3->init_plot_tables]
    jsr init_plot_tables
  //SEG19 [11] phi from main::@3 main::@5 to main::@1 [phi:main::@3/main::@5->main::@1]
  //SEG20 main::@1
  b1:
  //SEG21 [12] call lines param-assignment [ ] ( main:2 [ ] )
  //SEG22 [15] phi from main::@1 to lines [phi:main::@1->lines]
    jsr lines
  //SEG23 main::@5
  //SEG24 [13] if(true) goto main::@1 [ ] ( main:2 [ ] ) -- true_then_la1 
    jmp b1
  //SEG25 main::@return
  //SEG26 [14] return  [ ] ( main:2 [ ] )
    rts
}
//SEG27 lines
lines: {
    .label _2 = 3
    .label _3 = 4
    .label l = 2
  //SEG28 [16] phi from lines to lines::@1 [phi:lines->lines::@1]
  //SEG29 [16] phi (byte) lines::l#2 = (byte/signed byte/word/signed word) 0 [phi:lines->lines::@1#0] -- zpby1=coby1 
    lda #0
    sta l
    jmp b1
  //SEG30 [16] phi from lines::@3 to lines::@1 [phi:lines::@3->lines::@1]
  //SEG31 [16] phi (byte) lines::l#2 = (byte) lines::l#1 [phi:lines::@3->lines::@1#0] -- register_copy 
  //SEG32 lines::@1
  b1:
  //SEG33 [17] (byte~) lines::$0 ← (const byte[]) lines_x#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 ] ( main:2::lines:12 [ lines::l#2 lines::$0 ] ) -- yby=cowo1_derefidx_zpby1 
    ldx l
    lda lines_x,x
    tay
  //SEG34 [18] (byte~) lines::$2 ← (const byte[]) lines_x#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx l
    lda lines_x+1,x
    sta _2
  //SEG35 [19] (byte~) lines::$3 ← (const byte[]) lines_y#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 lines::$3 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx l
    lda lines_y,x
    sta _3
  //SEG36 [20] (byte~) lines::$5 ← (const byte[]) lines_y#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ] ) -- xby=cowo1_derefidx_zpby1 
    ldx l
    lda lines_y+1,x
    tax
  //SEG37 [21] (byte) line::x0#0 ← (byte~) lines::$0 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ] ( main:2::lines:12 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ] ) -- zpby1=yby 
    sty line.x0
  //SEG38 [22] (byte) line::x1#0 ← (byte~) lines::$2 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ] ( main:2::lines:12 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ] )
    // (byte) line::x1#0 = (byte~) lines::$2  // register copy zp ZP_BYTE:3
  //SEG39 [23] (byte) line::y0#0 ← (byte~) lines::$3 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ] ( main:2::lines:12 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ] ) -- yby=zpby1 
    ldy _3
  //SEG40 [24] (byte) line::y1#0 ← (byte~) lines::$5 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ( main:2::lines:12 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ) -- zpby1=xby 
    stx line.y1
  //SEG41 [25] call line param-assignment [ lines::l#2 ] ( main:2::lines:12 [ lines::l#2 ] )
    jsr line
  //SEG42 lines::@3
  //SEG43 [26] (byte) lines::l#1 ← ++ (byte) lines::l#2 [ lines::l#1 ] ( main:2::lines:12 [ lines::l#1 ] ) -- zpby1=_inc_zpby1 
    inc l
  //SEG44 [27] if((byte) lines::l#1<(const byte) lines_cnt#0) goto lines::@1 [ lines::l#1 ] ( main:2::lines:12 [ lines::l#1 ] ) -- zpby1_lt_coby1_then_la1 
    lda l
    cmp #lines_cnt
    bcc b1
  //SEG45 lines::@return
  //SEG46 [28] return  [ ] ( main:2::lines:12 [ ] )
    rts
}
//SEG47 line
line: {
    .label x0 = 5
    .label x1 = 3
    .label y1 = 4
    .label xd = 7
    .label yd = $a
  //SEG48 [29] if((byte) line::x0#0>=(byte) line::x1#0) goto line::@1 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ) -- zpby1_ge_zpby2_then_la1 
    lda x0
    cmp x1
    bcs b1
  //SEG49 line::@15
  //SEG50 [30] (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ) -- zpby1=zpby2_minus_zpby3 
    lda x1
    sec
    sbc x0
    sta xd
  //SEG51 [31] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@2 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ) -- yby_ge_zpby1_then_la1 
    cpy y1
    bcs b2
  //SEG52 line::@16
  //SEG53 [32] (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ) -- zpby1=zpby2_minus_yby 
    sty $ff
    lda y1
    sec
    sbc $ff
    sta yd
  //SEG54 [33] if((byte) line::yd#1>=(byte) line::xd#1) goto line::@3 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b3
  //SEG55 line::@17
  //SEG56 [34] (byte) line_xdyi::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG57 [35] (byte) line_xdyi::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ] ) -- zpby1=yby 
    sty line_xdyi.y
  //SEG58 [36] (byte) line_xdyi::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ] ) -- zpby1=zpby2 
    lda x1
    sta line_xdyi.x1
  //SEG59 [37] (byte) line_xdyi::xd#0 ← (byte) line::xd#1 [ line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyi.xd
  //SEG60 [38] (byte) line_xdyi::yd#0 ← (byte) line::yd#1 [ line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyi.yd
  //SEG61 [39] call line_xdyi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG62 [120] phi from line::@17 to line_xdyi [phi:line::@17->line_xdyi]
  //SEG63 [120] phi (byte) line_xdyi::x1#6 = (byte) line_xdyi::x1#0 [phi:line::@17->line_xdyi#0] -- register_copy 
  //SEG64 [120] phi (byte) line_xdyi::xd#5 = (byte) line_xdyi::xd#0 [phi:line::@17->line_xdyi#1] -- register_copy 
  //SEG65 [120] phi (byte) line_xdyi::y#5 = (byte) line_xdyi::y#0 [phi:line::@17->line_xdyi#2] -- register_copy 
  //SEG66 [120] phi (byte) line_xdyi::x#6 = (byte) line_xdyi::x#0 [phi:line::@17->line_xdyi#3] -- register_copy 
  //SEG67 [120] phi (byte) line_xdyi::yd#2 = (byte) line_xdyi::yd#0 [phi:line::@17->line_xdyi#4] -- register_copy 
    jsr line_xdyi
  //SEG68 line::@return
  breturn:
  //SEG69 [40] return  [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
    rts
  //SEG70 line::@3
  b3:
  //SEG71 [41] (byte) line_ydxi::y#0 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ] ) -- zpby1=yby 
    sty line_ydxi.y
  //SEG72 [42] (byte) line_ydxi::x#0 ← (byte) line::x0#0 [ line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG73 [43] (byte) line_ydxi::y1#0 ← (byte) line::y1#0 [ line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxi.y1
  //SEG74 [44] (byte) line_ydxi::yd#0 ← (byte) line::yd#1 [ line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxi.yd
  //SEG75 [45] (byte) line_ydxi::xd#0 ← (byte) line::xd#1 [ line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxi.xd
  //SEG76 [46] call line_ydxi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG77 [91] phi from line::@3 to line_ydxi [phi:line::@3->line_ydxi]
  //SEG78 [91] phi (byte) line_ydxi::y1#6 = (byte) line_ydxi::y1#0 [phi:line::@3->line_ydxi#0] -- register_copy 
  //SEG79 [91] phi (byte) line_ydxi::yd#5 = (byte) line_ydxi::yd#0 [phi:line::@3->line_ydxi#1] -- register_copy 
  //SEG80 [91] phi (byte) line_ydxi::y#6 = (byte) line_ydxi::y#0 [phi:line::@3->line_ydxi#2] -- register_copy 
  //SEG81 [91] phi (byte) line_ydxi::x#5 = (byte) line_ydxi::x#0 [phi:line::@3->line_ydxi#3] -- register_copy 
  //SEG82 [91] phi (byte) line_ydxi::xd#2 = (byte) line_ydxi::xd#0 [phi:line::@3->line_ydxi#4] -- register_copy 
    jsr line_ydxi
    jmp breturn
  //SEG83 line::@2
  b2:
  //SEG84 [47] (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ) -- zpby1=yby_minus_zpby2 
    tya
    sec
    sbc y1
    sta yd
  //SEG85 [48] if((byte) line::yd#0>=(byte) line::xd#1) goto line::@6 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b6
  //SEG86 line::@20
  //SEG87 [49] (byte) line_xdyd::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG88 [50] (byte) line_xdyd::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ] ) -- zpby1=yby 
    sty line_xdyd.y
  //SEG89 [51] (byte) line_xdyd::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ] ) -- zpby1=zpby2 
    lda x1
    sta line_xdyd.x1
  //SEG90 [52] (byte) line_xdyd::xd#0 ← (byte) line::xd#1 [ line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyd.xd
  //SEG91 [53] (byte) line_xdyd::yd#0 ← (byte) line::yd#0 [ line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyd.yd
  //SEG92 [54] call line_xdyd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG93 [150] phi from line::@20 to line_xdyd [phi:line::@20->line_xdyd]
  //SEG94 [150] phi (byte) line_xdyd::x1#6 = (byte) line_xdyd::x1#0 [phi:line::@20->line_xdyd#0] -- register_copy 
  //SEG95 [150] phi (byte) line_xdyd::xd#5 = (byte) line_xdyd::xd#0 [phi:line::@20->line_xdyd#1] -- register_copy 
  //SEG96 [150] phi (byte) line_xdyd::y#5 = (byte) line_xdyd::y#0 [phi:line::@20->line_xdyd#2] -- register_copy 
  //SEG97 [150] phi (byte) line_xdyd::x#6 = (byte) line_xdyd::x#0 [phi:line::@20->line_xdyd#3] -- register_copy 
  //SEG98 [150] phi (byte) line_xdyd::yd#2 = (byte) line_xdyd::yd#0 [phi:line::@20->line_xdyd#4] -- register_copy 
    jsr line_xdyd
    jmp breturn
  //SEG99 line::@6
  b6:
  //SEG100 [55] (byte) line_ydxd::y#0 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxd.y
  //SEG101 [56] (byte) line_ydxd::x#0 ← (byte) line::x1#0 [ line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ] ) -- xby=zpby1 
    ldx x1
  //SEG102 [57] (byte) line_ydxd::y1#0 ← (byte) line::y0#0 [ line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ] ) -- zpby1=yby 
    sty line_ydxd.y1
  //SEG103 [58] (byte) line_ydxd::yd#0 ← (byte) line::yd#0 [ line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxd.yd
  //SEG104 [59] (byte) line_ydxd::xd#0 ← (byte) line::xd#1 [ line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxd.xd
  //SEG105 [60] call line_ydxd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG106 [135] phi from line::@6 to line_ydxd [phi:line::@6->line_ydxd]
  //SEG107 [135] phi (byte) line_ydxd::y1#6 = (byte) line_ydxd::y1#0 [phi:line::@6->line_ydxd#0] -- register_copy 
  //SEG108 [135] phi (byte) line_ydxd::yd#5 = (byte) line_ydxd::yd#0 [phi:line::@6->line_ydxd#1] -- register_copy 
  //SEG109 [135] phi (byte) line_ydxd::y#6 = (byte) line_ydxd::y#0 [phi:line::@6->line_ydxd#2] -- register_copy 
  //SEG110 [135] phi (byte) line_ydxd::x#5 = (byte) line_ydxd::x#0 [phi:line::@6->line_ydxd#3] -- register_copy 
  //SEG111 [135] phi (byte) line_ydxd::xd#2 = (byte) line_ydxd::xd#0 [phi:line::@6->line_ydxd#4] -- register_copy 
    jsr line_ydxd
    jmp breturn
  //SEG112 line::@1
  b1:
  //SEG113 [61] (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ) -- zpby1=zpby2_minus_zpby3 
    lda x0
    sec
    sbc x1
    sta xd
  //SEG114 [62] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@9 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ) -- yby_ge_zpby1_then_la1 
    cpy y1
    bcs b9
  //SEG115 line::@23
  //SEG116 [63] (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ) -- zpby1=zpby2_minus_yby 
    sty $ff
    lda y1
    sec
    sbc $ff
    sta yd
  //SEG117 [64] if((byte) line::yd#3>=(byte) line::xd#0) goto line::@10 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b10
  //SEG118 line::@24
  //SEG119 [65] (byte) line_xdyd::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG120 [66] (byte) line_xdyd::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_xdyd.y
  //SEG121 [67] (byte) line_xdyd::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ] )
    // (byte) line_xdyd::x1#1 = (byte) line::x0#0  // register copy zp ZP_BYTE:5
  //SEG122 [68] (byte) line_xdyd::xd#1 ← (byte) line::xd#0 [ line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyd.xd
  //SEG123 [69] (byte) line_xdyd::yd#1 ← (byte) line::yd#3 [ line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyd.yd
  //SEG124 [70] call line_xdyd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG125 [150] phi from line::@24 to line_xdyd [phi:line::@24->line_xdyd]
  //SEG126 [150] phi (byte) line_xdyd::x1#6 = (byte) line_xdyd::x1#1 [phi:line::@24->line_xdyd#0] -- register_copy 
  //SEG127 [150] phi (byte) line_xdyd::xd#5 = (byte) line_xdyd::xd#1 [phi:line::@24->line_xdyd#1] -- register_copy 
  //SEG128 [150] phi (byte) line_xdyd::y#5 = (byte) line_xdyd::y#1 [phi:line::@24->line_xdyd#2] -- register_copy 
  //SEG129 [150] phi (byte) line_xdyd::x#6 = (byte) line_xdyd::x#1 [phi:line::@24->line_xdyd#3] -- register_copy 
  //SEG130 [150] phi (byte) line_xdyd::yd#2 = (byte) line_xdyd::yd#1 [phi:line::@24->line_xdyd#4] -- register_copy 
    jsr line_xdyd
    jmp breturn
  //SEG131 line::@10
  b10:
  //SEG132 [71] (byte) line_ydxd::y#1 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ] ) -- zpby1=yby 
    sty line_ydxd.y
  //SEG133 [72] (byte) line_ydxd::x#1 ← (byte) line::x0#0 [ line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ] ) -- xby=zpby1 
    ldx x0
  //SEG134 [73] (byte) line_ydxd::y1#1 ← (byte) line::y1#0 [ line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxd.y1
  //SEG135 [74] (byte) line_ydxd::yd#1 ← (byte) line::yd#3 [ line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxd.yd
  //SEG136 [75] (byte) line_ydxd::xd#1 ← (byte) line::xd#0 [ line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxd.xd
  //SEG137 [76] call line_ydxd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG138 [135] phi from line::@10 to line_ydxd [phi:line::@10->line_ydxd]
  //SEG139 [135] phi (byte) line_ydxd::y1#6 = (byte) line_ydxd::y1#1 [phi:line::@10->line_ydxd#0] -- register_copy 
  //SEG140 [135] phi (byte) line_ydxd::yd#5 = (byte) line_ydxd::yd#1 [phi:line::@10->line_ydxd#1] -- register_copy 
  //SEG141 [135] phi (byte) line_ydxd::y#6 = (byte) line_ydxd::y#1 [phi:line::@10->line_ydxd#2] -- register_copy 
  //SEG142 [135] phi (byte) line_ydxd::x#5 = (byte) line_ydxd::x#1 [phi:line::@10->line_ydxd#3] -- register_copy 
  //SEG143 [135] phi (byte) line_ydxd::xd#2 = (byte) line_ydxd::xd#1 [phi:line::@10->line_ydxd#4] -- register_copy 
    jsr line_ydxd
    jmp breturn
  //SEG144 line::@9
  b9:
  //SEG145 [77] (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ) -- zpby1=yby_minus_zpby2 
    tya
    sec
    sbc y1
    sta yd
  //SEG146 [78] if((byte) line::yd#10>=(byte) line::xd#0) goto line::@13 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b13
  //SEG147 line::@27
  //SEG148 [79] (byte) line_xdyi::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG149 [80] (byte) line_xdyi::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_xdyi.y
  //SEG150 [81] (byte) line_xdyi::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ] )
    // (byte) line_xdyi::x1#1 = (byte) line::x0#0  // register copy zp ZP_BYTE:5
  //SEG151 [82] (byte) line_xdyi::xd#1 ← (byte) line::xd#0 [ line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyi.xd
  //SEG152 [83] (byte) line_xdyi::yd#1 ← (byte) line::yd#10 [ line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyi.yd
  //SEG153 [84] call line_xdyi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG154 [120] phi from line::@27 to line_xdyi [phi:line::@27->line_xdyi]
  //SEG155 [120] phi (byte) line_xdyi::x1#6 = (byte) line_xdyi::x1#1 [phi:line::@27->line_xdyi#0] -- register_copy 
  //SEG156 [120] phi (byte) line_xdyi::xd#5 = (byte) line_xdyi::xd#1 [phi:line::@27->line_xdyi#1] -- register_copy 
  //SEG157 [120] phi (byte) line_xdyi::y#5 = (byte) line_xdyi::y#1 [phi:line::@27->line_xdyi#2] -- register_copy 
  //SEG158 [120] phi (byte) line_xdyi::x#6 = (byte) line_xdyi::x#1 [phi:line::@27->line_xdyi#3] -- register_copy 
  //SEG159 [120] phi (byte) line_xdyi::yd#2 = (byte) line_xdyi::yd#1 [phi:line::@27->line_xdyi#4] -- register_copy 
    jsr line_xdyi
    jmp breturn
  //SEG160 line::@13
  b13:
  //SEG161 [85] (byte) line_ydxi::y#1 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxi.y
  //SEG162 [86] (byte) line_ydxi::x#1 ← (byte) line::x1#0 [ line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG163 [87] (byte) line_ydxi::y1#1 ← (byte) line::y0#0 [ line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ] ) -- zpby1=yby 
    sty line_ydxi.y1
  //SEG164 [88] (byte) line_ydxi::yd#1 ← (byte) line::yd#10 [ line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxi.yd
  //SEG165 [89] (byte) line_ydxi::xd#1 ← (byte) line::xd#0 [ line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxi.xd
  //SEG166 [90] call line_ydxi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG167 [91] phi from line::@13 to line_ydxi [phi:line::@13->line_ydxi]
  //SEG168 [91] phi (byte) line_ydxi::y1#6 = (byte) line_ydxi::y1#1 [phi:line::@13->line_ydxi#0] -- register_copy 
  //SEG169 [91] phi (byte) line_ydxi::yd#5 = (byte) line_ydxi::yd#1 [phi:line::@13->line_ydxi#1] -- register_copy 
  //SEG170 [91] phi (byte) line_ydxi::y#6 = (byte) line_ydxi::y#1 [phi:line::@13->line_ydxi#2] -- register_copy 
  //SEG171 [91] phi (byte) line_ydxi::x#5 = (byte) line_ydxi::x#1 [phi:line::@13->line_ydxi#3] -- register_copy 
  //SEG172 [91] phi (byte) line_ydxi::xd#2 = (byte) line_ydxi::xd#1 [phi:line::@13->line_ydxi#4] -- register_copy 
    jsr line_ydxi
    jmp breturn
}
//SEG173 line_ydxi
line_ydxi: {
    .label y = 6
    .label y1 = 5
    .label yd = 4
    .label xd = 3
    .label e = 7
  //SEG174 [92] (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda xd
    lsr
    sta e
  //SEG175 [93] phi from line_ydxi line_ydxi::@2 to line_ydxi::@1 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1]
  //SEG176 [93] phi (byte) line_ydxi::e#3 = (byte) line_ydxi::e#0 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#0] -- register_copy 
  //SEG177 [93] phi (byte) line_ydxi::y#3 = (byte) line_ydxi::y#6 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#1] -- register_copy 
  //SEG178 [93] phi (byte) line_ydxi::x#3 = (byte) line_ydxi::x#5 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#2] -- register_copy 
  //SEG179 line_ydxi::@1
  b1:
  //SEG180 [94] (byte) plot::x#2 ← (byte) line_ydxi::x#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] )
    // (byte) plot::x#2 = (byte) line_ydxi::x#3  // register copy reg byte x
  //SEG181 [95] (byte) plot::y#2 ← (byte) line_ydxi::y#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] ) -- yby=zpby1 
    ldy y
  //SEG182 [96] call plot param-assignment [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] )
  //SEG183 [106] phi from line_ydxi::@1 to plot [phi:line_ydxi::@1->plot]
  //SEG184 [106] phi (byte) plot::y#4 = (byte) plot::y#2 [phi:line_ydxi::@1->plot#0] -- register_copy 
  //SEG185 [106] phi (byte) plot::x#4 = (byte) plot::x#2 [phi:line_ydxi::@1->plot#1] -- register_copy 
    jsr plot
  //SEG186 line_ydxi::@5
  //SEG187 [97] (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG188 [98] (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc xd
    sta e
  //SEG189 [99] if((byte) line_ydxi::yd#5>=(byte) line_ydxi::e#1) goto line_ydxi::@2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp e
    bcs b2
  //SEG190 line_ydxi::@3
  //SEG191 [100] (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG192 [101] (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc yd
    sta e
  //SEG193 [102] phi from line_ydxi::@3 line_ydxi::@5 to line_ydxi::@2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2]
  //SEG194 [102] phi (byte) line_ydxi::e#6 = (byte) line_ydxi::e#2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2#0] -- register_copy 
  //SEG195 [102] phi (byte) line_ydxi::x#6 = (byte) line_ydxi::x#2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2#1] -- register_copy 
  //SEG196 line_ydxi::@2
  b2:
  //SEG197 [103] (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] ) -- aby=zpby1_plus_1 
    lda y1
    clc
    adc #1
  //SEG198 [104] if((byte) line_ydxi::y#2<(byte~) line_ydxi::$8) goto line_ydxi::@1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] ) -- zpby1_lt_aby_then_la1 
    cmp y
    bcs b1
  //SEG199 line_ydxi::@return
  //SEG200 [105] return  [ ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 ] )
    rts
}
//SEG201 plot
plot: {
    .label plotter_x = 8
    .label plotter_y = $b
    .label plotter = 8
  //SEG202 [107] (byte~) plot::$0 ← (const byte[]) plot_xhi#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::$0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::$0 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_xhi,x
  //SEG203 [108] (byte*) plot::plotter_x#1 ← ((byte*))(byte/signed byte/word/signed word) 0 hi= (byte~) plot::$0 [ plot::x#4 plot::y#4 plot::plotter_x#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] ) -- zpptrby1=cowo1_sethi_aby 
    sta plotter_x+1
    lda #<0
    sta plotter_x
  //SEG204 [109] (byte~) plot::$1 ← (const byte[]) plot_xlo#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_xlo,x
  //SEG205 [110] (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1 [ plot::x#4 plot::y#4 plot::plotter_x#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] ) -- zpptrby1=zpptrby1_setlo_aby 
    sta plotter_x
  //SEG206 [111] (byte~) plot::$2 ← (const byte[]) plot_yhi#0 *idx (byte) plot::y#4 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] ) -- aby=cowo1_derefidx_yby 
    lda plot_yhi,y
  //SEG207 [112] (word) plot::plotter_y#1 ← (byte/signed byte/word/signed word) 0 hi= (byte~) plot::$2 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] ) -- zpwo1=coby1_sethi_aby 
    sta plotter_y+1
    lda #<0
    sta plotter_y
  //SEG208 [113] (byte~) plot::$3 ← (const byte[]) plot_ylo#0 *idx (byte) plot::y#4 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] ) -- aby=cowo1_derefidx_yby 
    lda plot_ylo,y
  //SEG209 [114] (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ) -- zpwo1=zpwo1_setlo_aby 
    sta plotter_y
  //SEG210 [115] (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2 [ plot::x#4 plot::plotter#0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] ) -- zpptrby1=zpptrby1_plus_zpwo1 
    lda plotter
    clc
    adc plotter_y
    sta plotter
    lda plotter+1
    adc plotter_y+1
    sta plotter+1
  //SEG211 [116] (byte~) plot::$5 ← (const byte[]) plot_bit#0 *idx (byte) plot::x#4 [ plot::plotter#0 plot::$5 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$5 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_bit,x
  //SEG212 [117] (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5 [ plot::plotter#0 plot::$6 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] ) -- aby=_deref_zpptrby1_bor_aby 
    ldy #0
    ora (plotter),y
  //SEG213 [118] *((byte*) plot::plotter#0) ← (byte~) plot::$6 [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ) -- _deref_zpptrby1=aby 
    sta (plotter),y
  //SEG214 plot::@return
  //SEG215 [119] return  [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
    rts
}
//SEG216 line_xdyi
line_xdyi: {
    .label _8 = $a
    .label y = 6
    .label x1 = 5
    .label xd = 4
    .label yd = 3
    .label e = 7
  //SEG217 [121] (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda yd
    lsr
    sta e
  //SEG218 [122] phi from line_xdyi line_xdyi::@2 to line_xdyi::@1 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1]
  //SEG219 [122] phi (byte) line_xdyi::e#3 = (byte) line_xdyi::e#0 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#0] -- register_copy 
  //SEG220 [122] phi (byte) line_xdyi::y#3 = (byte) line_xdyi::y#5 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#1] -- register_copy 
  //SEG221 [122] phi (byte) line_xdyi::x#3 = (byte) line_xdyi::x#6 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#2] -- register_copy 
  //SEG222 line_xdyi::@1
  b1:
  //SEG223 [123] (byte) plot::x#0 ← (byte) line_xdyi::x#3 [ plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
    // (byte) plot::x#0 = (byte) line_xdyi::x#3  // register copy reg byte x
  //SEG224 [124] (byte) plot::y#0 ← (byte) line_xdyi::y#3 [ plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG225 [125] call plot param-assignment [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
  //SEG226 [106] phi from line_xdyi::@1 to plot [phi:line_xdyi::@1->plot]
  //SEG227 [106] phi (byte) plot::y#4 = (byte) plot::y#0 [phi:line_xdyi::@1->plot#0] -- register_copy 
  //SEG228 [106] phi (byte) plot::x#4 = (byte) plot::x#0 [phi:line_xdyi::@1->plot#1] -- register_copy 
    jsr plot
  //SEG229 line_xdyi::@5
  //SEG230 [126] (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG231 [127] (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc yd
    sta e
  //SEG232 [128] if((byte) line_xdyi::xd#5>=(byte) line_xdyi::e#1) goto line_xdyi::@2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda xd
    cmp e
    bcs b2
  //SEG233 line_xdyi::@3
  //SEG234 [129] (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG235 [130] (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc xd
    sta e
  //SEG236 [131] phi from line_xdyi::@3 line_xdyi::@5 to line_xdyi::@2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2]
  //SEG237 [131] phi (byte) line_xdyi::e#6 = (byte) line_xdyi::e#2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2#0] -- register_copy 
  //SEG238 [131] phi (byte) line_xdyi::y#6 = (byte) line_xdyi::y#2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2#1] -- register_copy 
  //SEG239 line_xdyi::@2
  b2:
  //SEG240 [132] (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] ) -- zpby1=zpby2_plus_1 
    lda x1
    clc
    adc #1
    sta _8
  //SEG241 [133] if((byte) line_xdyi::x#2<(byte~) line_xdyi::$8) goto line_xdyi::@1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] ) -- xby_lt_zpby1_then_la1 
    cpx _8
    bcc b1
  //SEG242 line_xdyi::@return
  //SEG243 [134] return  [ ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 ] )
    rts
}
//SEG244 line_ydxd
line_ydxd: {
    .label y = 6
    .label y1 = 5
    .label yd = 4
    .label xd = 3
    .label e = 7
  //SEG245 [136] (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda xd
    lsr
    sta e
  //SEG246 [137] phi from line_ydxd line_ydxd::@2 to line_ydxd::@1 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1]
  //SEG247 [137] phi (byte) line_ydxd::e#3 = (byte) line_ydxd::e#0 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#0] -- register_copy 
  //SEG248 [137] phi (byte) line_ydxd::y#3 = (byte) line_ydxd::y#6 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#1] -- register_copy 
  //SEG249 [137] phi (byte) line_ydxd::x#3 = (byte) line_ydxd::x#5 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#2] -- register_copy 
  //SEG250 line_ydxd::@1
  b1:
  //SEG251 [138] (byte) plot::x#3 ← (byte) line_ydxd::x#3 [ plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
    // (byte) plot::x#3 = (byte) line_ydxd::x#3  // register copy reg byte x
  //SEG252 [139] (byte) plot::y#3 ← (byte) line_ydxd::y#3 [ plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG253 [140] call plot param-assignment [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
  //SEG254 [106] phi from line_ydxd::@1 to plot [phi:line_ydxd::@1->plot]
  //SEG255 [106] phi (byte) plot::y#4 = (byte) plot::y#3 [phi:line_ydxd::@1->plot#0] -- register_copy 
  //SEG256 [106] phi (byte) plot::x#4 = (byte) plot::x#3 [phi:line_ydxd::@1->plot#1] -- register_copy 
    jsr plot
  //SEG257 line_ydxd::@5
  //SEG258 [141] (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG259 [142] (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc xd
    sta e
  //SEG260 [143] if((byte) line_ydxd::yd#5>=(byte) line_ydxd::e#1) goto line_ydxd::@2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp e
    bcs b2
  //SEG261 line_ydxd::@3
  //SEG262 [144] (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] ) -- xby=xby_minus_1 
    dex
  //SEG263 [145] (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc yd
    sta e
  //SEG264 [146] phi from line_ydxd::@3 line_ydxd::@5 to line_ydxd::@2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2]
  //SEG265 [146] phi (byte) line_ydxd::e#6 = (byte) line_ydxd::e#2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2#0] -- register_copy 
  //SEG266 [146] phi (byte) line_ydxd::x#6 = (byte) line_ydxd::x#2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2#1] -- register_copy 
  //SEG267 line_ydxd::@2
  b2:
  //SEG268 [147] (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] ) -- aby=zpby1_plus_1 
    lda y1
    clc
    adc #1
  //SEG269 [148] if((byte) line_ydxd::y#2<(byte~) line_ydxd::$8) goto line_ydxd::@1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] ) -- zpby1_lt_aby_then_la1 
    cmp y
    bcs b1
  //SEG270 line_ydxd::@return
  //SEG271 [149] return  [ ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 ] )
    rts
}
//SEG272 line_xdyd
line_xdyd: {
    .label _8 = $a
    .label y = 6
    .label x1 = 5
    .label xd = 4
    .label yd = 3
    .label e = 7
  //SEG273 [151] (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda yd
    lsr
    sta e
  //SEG274 [152] phi from line_xdyd line_xdyd::@2 to line_xdyd::@1 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1]
  //SEG275 [152] phi (byte) line_xdyd::e#3 = (byte) line_xdyd::e#0 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#0] -- register_copy 
  //SEG276 [152] phi (byte) line_xdyd::y#3 = (byte) line_xdyd::y#5 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#1] -- register_copy 
  //SEG277 [152] phi (byte) line_xdyd::x#3 = (byte) line_xdyd::x#6 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#2] -- register_copy 
  //SEG278 line_xdyd::@1
  b1:
  //SEG279 [153] (byte) plot::x#1 ← (byte) line_xdyd::x#3 [ plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
    // (byte) plot::x#1 = (byte) line_xdyd::x#3  // register copy reg byte x
  //SEG280 [154] (byte) plot::y#1 ← (byte) line_xdyd::y#3 [ plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG281 [155] call plot param-assignment [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
  //SEG282 [106] phi from line_xdyd::@1 to plot [phi:line_xdyd::@1->plot]
  //SEG283 [106] phi (byte) plot::y#4 = (byte) plot::y#1 [phi:line_xdyd::@1->plot#0] -- register_copy 
  //SEG284 [106] phi (byte) plot::x#4 = (byte) plot::x#1 [phi:line_xdyd::@1->plot#1] -- register_copy 
    jsr plot
  //SEG285 line_xdyd::@5
  //SEG286 [156] (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG287 [157] (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc yd
    sta e
  //SEG288 [158] if((byte) line_xdyd::xd#5>=(byte) line_xdyd::e#1) goto line_xdyd::@2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda xd
    cmp e
    bcs b2
  //SEG289 line_xdyd::@3
  //SEG290 [159] (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] ) -- zpby1=zpby1_minus_1 
    dec y
  //SEG291 [160] (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc xd
    sta e
  //SEG292 [161] phi from line_xdyd::@3 line_xdyd::@5 to line_xdyd::@2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2]
  //SEG293 [161] phi (byte) line_xdyd::e#6 = (byte) line_xdyd::e#2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2#0] -- register_copy 
  //SEG294 [161] phi (byte) line_xdyd::y#6 = (byte) line_xdyd::y#2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2#1] -- register_copy 
  //SEG295 line_xdyd::@2
  b2:
  //SEG296 [162] (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] ) -- zpby1=zpby2_plus_1 
    lda x1
    clc
    adc #1
    sta _8
  //SEG297 [163] if((byte) line_xdyd::x#2<(byte~) line_xdyd::$8) goto line_xdyd::@1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] ) -- xby_lt_zpby1_then_la1 
    cpx _8
    bcc b1
  //SEG298 line_xdyd::@return
  //SEG299 [164] return  [ ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 ] )
    rts
}
//SEG300 init_plot_tables
init_plot_tables: {
    .label _6 = 2
    .label yoffs = 8
  //SEG301 [166] phi from init_plot_tables to init_plot_tables::@1 [phi:init_plot_tables->init_plot_tables::@1]
  //SEG302 [166] phi (byte) init_plot_tables::bits#3 = (byte/word/signed word) 128 [phi:init_plot_tables->init_plot_tables::@1#0] -- yby=coby1 
    ldy #$80
  //SEG303 [166] phi (byte) init_plot_tables::x#2 = (byte/signed byte/word/signed word) 0 [phi:init_plot_tables->init_plot_tables::@1#1] -- xby=coby1 
    ldx #0
    jmp b1
  //SEG304 [166] phi from init_plot_tables::@2 to init_plot_tables::@1 [phi:init_plot_tables::@2->init_plot_tables::@1]
  //SEG305 [166] phi (byte) init_plot_tables::bits#3 = (byte) init_plot_tables::bits#4 [phi:init_plot_tables::@2->init_plot_tables::@1#0] -- register_copy 
  //SEG306 [166] phi (byte) init_plot_tables::x#2 = (byte) init_plot_tables::x#1 [phi:init_plot_tables::@2->init_plot_tables::@1#1] -- register_copy 
  //SEG307 init_plot_tables::@1
  b1:
  //SEG308 [167] (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ) -- aby=xby_band_coby1 
    txa
    and #$f8
  //SEG309 [168] *((const byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_xlo,x
  //SEG310 [169] *((const byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← >(const byte*) BITMAP#0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=coby2 
    lda #>BITMAP
    sta plot_xhi,x
  //SEG311 [170] *((const byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=yby 
    tya
    sta plot_bit,x
  //SEG312 [171] (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ) -- yby=yby_ror_1 
    tya
    lsr
    tay
  //SEG313 [172] if((byte) init_plot_tables::bits#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ) -- yby_neq_0_then_la1 
    cpy #0
    bne b10
  //SEG314 [173] phi from init_plot_tables::@1 to init_plot_tables::@2 [phi:init_plot_tables::@1->init_plot_tables::@2]
  //SEG315 [173] phi (byte) init_plot_tables::bits#4 = (byte/word/signed word) 128 [phi:init_plot_tables::@1->init_plot_tables::@2#0] -- yby=coby1 
    ldy #$80
  //SEG316 init_plot_tables::@2
  b2:
  //SEG317 [174] (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ) -- xby=_inc_xby 
    inx
  //SEG318 [175] if((byte) init_plot_tables::x#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@1 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ) -- xby_neq_0_then_la1 
    cpx #0
    bne b1
  //SEG319 [176] phi from init_plot_tables::@2 to init_plot_tables::@3 [phi:init_plot_tables::@2->init_plot_tables::@3]
  //SEG320 [176] phi (byte*) init_plot_tables::yoffs#2 = ((byte*))(byte/signed byte/word/signed word) 0 [phi:init_plot_tables::@2->init_plot_tables::@3#0] -- zpptrby1=cowo1 
    lda #<0
    sta yoffs
    sta yoffs+1
  //SEG321 [176] phi (byte) init_plot_tables::y#2 = (byte/signed byte/word/signed word) 0 [phi:init_plot_tables::@2->init_plot_tables::@3#1] -- xby=coby1 
    tax
    jmp b3
  //SEG322 [176] phi from init_plot_tables::@4 to init_plot_tables::@3 [phi:init_plot_tables::@4->init_plot_tables::@3]
  //SEG323 [176] phi (byte*) init_plot_tables::yoffs#2 = (byte*) init_plot_tables::yoffs#4 [phi:init_plot_tables::@4->init_plot_tables::@3#0] -- register_copy 
  //SEG324 [176] phi (byte) init_plot_tables::y#2 = (byte) init_plot_tables::y#1 [phi:init_plot_tables::@4->init_plot_tables::@3#1] -- register_copy 
  //SEG325 init_plot_tables::@3
  b3:
  //SEG326 [177] (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ) -- zpby1=xby_band_coby1 
    txa
    and #7
    sta _6
  //SEG327 [178] (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ] ) -- aby=_lo_zpptrby1 
    lda yoffs
  //SEG328 [179] (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ] ) -- aby=zpby1_bor_aby 
    ora _6
  //SEG329 [180] *((const byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_ylo,x
  //SEG330 [181] (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ) -- aby=_hi_zpptrby1 
    lda yoffs+1
  //SEG331 [182] *((const byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_yhi,x
  //SEG332 [183] (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ) -- aby=xby_band_coby1 
    txa
    and #7
  //SEG333 [184] if((byte~) init_plot_tables::$10!=(byte/signed byte/word/signed word) 7) goto init_plot_tables::@4 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- aby_neq_coby1_then_la1 
    cmp #7
    bne b4
  //SEG334 init_plot_tables::@7
  //SEG335 [185] (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ) -- zpptrby1=zpptrby1_plus_cowo1 
    lda yoffs
    clc
    adc #<$140
    sta yoffs
    lda yoffs+1
    adc #>$140
    sta yoffs+1
  //SEG336 [186] phi from init_plot_tables::@3 init_plot_tables::@7 to init_plot_tables::@4 [phi:init_plot_tables::@3/init_plot_tables::@7->init_plot_tables::@4]
  //SEG337 [186] phi (byte*) init_plot_tables::yoffs#4 = (byte*) init_plot_tables::yoffs#2 [phi:init_plot_tables::@3/init_plot_tables::@7->init_plot_tables::@4#0] -- register_copy 
  //SEG338 init_plot_tables::@4
  b4:
  //SEG339 [187] (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ) -- xby=_inc_xby 
    inx
  //SEG340 [188] if((byte) init_plot_tables::y#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@3 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ) -- xby_neq_0_then_la1 
    cpx #0
    bne b3
  //SEG341 init_plot_tables::@return
  //SEG342 [189] return  [ ] ( main:2::init_plot_tables:10 [ ] )
    rts
  //SEG343 [190] phi from init_plot_tables::@1 to init_plot_tables::@10 [phi:init_plot_tables::@1->init_plot_tables::@10]
  //SEG344 init_plot_tables::@10
  b10:
  //SEG345 [173] phi from init_plot_tables::@10 to init_plot_tables::@2 [phi:init_plot_tables::@10->init_plot_tables::@2]
  //SEG346 [173] phi (byte) init_plot_tables::bits#4 = (byte) init_plot_tables::bits#1 [phi:init_plot_tables::@10->init_plot_tables::@2#0] -- register_copy 
    jmp b2
}
//SEG347 init_screen
init_screen: {
    .label b = 8
    .label c = 8
  //SEG348 [192] phi from init_screen to init_screen::@1 [phi:init_screen->init_screen::@1]
  //SEG349 [192] phi (byte*) init_screen::b#2 = (const byte*) BITMAP#0 [phi:init_screen->init_screen::@1#0] -- zpptrby1=cowo1 
    lda #<BITMAP
    sta b
    lda #>BITMAP
    sta b+1
    jmp b1
  //SEG350 [192] phi from init_screen::@1 to init_screen::@1 [phi:init_screen::@1->init_screen::@1]
  //SEG351 [192] phi (byte*) init_screen::b#2 = (byte*) init_screen::b#1 [phi:init_screen::@1->init_screen::@1#0] -- register_copy 
  //SEG352 init_screen::@1
  b1:
  //SEG353 [193] *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0 [ init_screen::b#2 ] ( main:2::init_screen:8 [ init_screen::b#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    tya
    sta (b),y
  //SEG354 [194] (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc b
    bne !+
    inc b+1
  !:
  //SEG355 [195] if((byte*) init_screen::b#1!=(const byte*) BITMAP#0+(word/signed word) 8192) goto init_screen::@1 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] ) -- zpptrby1_neq_cowo1_then_la1 
    lda b+1
    cmp #>BITMAP+$2000
    bne b1
    lda b
    cmp #<BITMAP+$2000
    bne b1
  //SEG356 [196] phi from init_screen::@1 to init_screen::@2 [phi:init_screen::@1->init_screen::@2]
  //SEG357 [196] phi (byte*) init_screen::c#2 = (const byte*) SCREEN#0 [phi:init_screen::@1->init_screen::@2#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta c
    lda #>SCREEN
    sta c+1
    jmp b2
  //SEG358 [196] phi from init_screen::@2 to init_screen::@2 [phi:init_screen::@2->init_screen::@2]
  //SEG359 [196] phi (byte*) init_screen::c#2 = (byte*) init_screen::c#1 [phi:init_screen::@2->init_screen::@2#0] -- register_copy 
  //SEG360 init_screen::@2
  b2:
  //SEG361 [197] *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20 [ init_screen::c#2 ] ( main:2::init_screen:8 [ init_screen::c#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #$14
    sta (c),y
  //SEG362 [198] (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc c
    bne !+
    inc c+1
  !:
  //SEG363 [199] if((byte*) init_screen::c#1!=(const byte*) SCREEN#0+(word/signed word) 1024) goto init_screen::@2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] ) -- zpptrby1_neq_cowo1_then_la1 
    lda c+1
    cmp #>SCREEN+$400
    bne b2
    lda c
    cmp #<SCREEN+$400
    bne b2
  //SEG364 init_screen::@return
  //SEG365 [200] return  [ ] ( main:2::init_screen:8 [ ] )
    rts
}

Skipping double jump to b2 in bne b10
Succesful ASM optimization Pass5DoubleJumpElimination
ASSEMBLER
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const BGCOL = $d020
  .const FGCOL = $d021
  .const D018 = $d018
  .const D011 = $d011
  .const BMM = $20
  .const DEN = $10
  .const RSEL = 8
  .const SCREEN = $400
  .const BITMAP = $2000
  .const plot_xlo = $1000
  .const plot_xhi = $1100
  .const plot_ylo = $1200
  .const plot_yhi = $1300
  .const plot_bit = $1400
  .const lines_cnt = 8
  lines_x: .byte $3c, $50, $6e, $50, $3c, $28, $a, $28, $3c
  lines_y: .byte $a, $28, $3c, $50, $6e, $50, $3c, $28, $a
//SEG2 @begin
//SEG3 [1] phi from @begin to @10 [phi:@begin->@10]
//SEG4 @10
//SEG5 [2] call main param-assignment [ ] ( )
  jsr main
//SEG6 [3] phi from @10 to @end [phi:@10->@end]
//SEG7 @end
//SEG8 main
main: {
  //SEG9 [4] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #0
    sta BGCOL
  //SEG10 [5] *((const byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    sta FGCOL
  //SEG11 [6] *((const byte*) D011#0) ← (const byte) BMM#0|(const byte) DEN#0|(const byte) RSEL#0|(byte/signed byte/word/signed word) 3 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #BMM|DEN|RSEL|3
    sta D011
  //SEG12 [7] *((const byte*) D018#0) ← (byte/signed byte/word/signed word) 24 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #$18
    sta D018
  //SEG13 [8] call init_screen param-assignment [ ] ( main:2 [ ] )
  //SEG14 [191] phi from main to init_screen [phi:main->init_screen]
    jsr init_screen
  //SEG15 [9] phi from main to main::@3 [phi:main->main::@3]
  //SEG16 main::@3
  //SEG17 [10] call init_plot_tables param-assignment [ ] ( main:2 [ ] )
  //SEG18 [165] phi from main::@3 to init_plot_tables [phi:main::@3->init_plot_tables]
    jsr init_plot_tables
  //SEG19 [11] phi from main::@3 main::@5 to main::@1 [phi:main::@3/main::@5->main::@1]
  //SEG20 main::@1
  b1:
  //SEG21 [12] call lines param-assignment [ ] ( main:2 [ ] )
  //SEG22 [15] phi from main::@1 to lines [phi:main::@1->lines]
    jsr lines
  //SEG23 main::@5
  //SEG24 [13] if(true) goto main::@1 [ ] ( main:2 [ ] ) -- true_then_la1 
    jmp b1
  //SEG25 main::@return
  //SEG26 [14] return  [ ] ( main:2 [ ] )
    rts
}
//SEG27 lines
lines: {
    .label _2 = 3
    .label _3 = 4
    .label l = 2
  //SEG28 [16] phi from lines to lines::@1 [phi:lines->lines::@1]
  //SEG29 [16] phi (byte) lines::l#2 = (byte/signed byte/word/signed word) 0 [phi:lines->lines::@1#0] -- zpby1=coby1 
    lda #0
    sta l
    jmp b1
  //SEG30 [16] phi from lines::@3 to lines::@1 [phi:lines::@3->lines::@1]
  //SEG31 [16] phi (byte) lines::l#2 = (byte) lines::l#1 [phi:lines::@3->lines::@1#0] -- register_copy 
  //SEG32 lines::@1
  b1:
  //SEG33 [17] (byte~) lines::$0 ← (const byte[]) lines_x#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 ] ( main:2::lines:12 [ lines::l#2 lines::$0 ] ) -- yby=cowo1_derefidx_zpby1 
    ldx l
    lda lines_x,x
    tay
  //SEG34 [18] (byte~) lines::$2 ← (const byte[]) lines_x#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx l
    lda lines_x+1,x
    sta _2
  //SEG35 [19] (byte~) lines::$3 ← (const byte[]) lines_y#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 lines::$3 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx l
    lda lines_y,x
    sta _3
  //SEG36 [20] (byte~) lines::$5 ← (const byte[]) lines_y#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ] ) -- xby=cowo1_derefidx_zpby1 
    ldx l
    lda lines_y+1,x
    tax
  //SEG37 [21] (byte) line::x0#0 ← (byte~) lines::$0 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ] ( main:2::lines:12 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ] ) -- zpby1=yby 
    sty line.x0
  //SEG38 [22] (byte) line::x1#0 ← (byte~) lines::$2 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ] ( main:2::lines:12 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ] )
    // (byte) line::x1#0 = (byte~) lines::$2  // register copy zp ZP_BYTE:3
  //SEG39 [23] (byte) line::y0#0 ← (byte~) lines::$3 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ] ( main:2::lines:12 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ] ) -- yby=zpby1 
    ldy _3
  //SEG40 [24] (byte) line::y1#0 ← (byte~) lines::$5 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ( main:2::lines:12 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ) -- zpby1=xby 
    stx line.y1
  //SEG41 [25] call line param-assignment [ lines::l#2 ] ( main:2::lines:12 [ lines::l#2 ] )
    jsr line
  //SEG42 lines::@3
  //SEG43 [26] (byte) lines::l#1 ← ++ (byte) lines::l#2 [ lines::l#1 ] ( main:2::lines:12 [ lines::l#1 ] ) -- zpby1=_inc_zpby1 
    inc l
  //SEG44 [27] if((byte) lines::l#1<(const byte) lines_cnt#0) goto lines::@1 [ lines::l#1 ] ( main:2::lines:12 [ lines::l#1 ] ) -- zpby1_lt_coby1_then_la1 
    lda l
    cmp #lines_cnt
    bcc b1
  //SEG45 lines::@return
  //SEG46 [28] return  [ ] ( main:2::lines:12 [ ] )
    rts
}
//SEG47 line
line: {
    .label x0 = 5
    .label x1 = 3
    .label y1 = 4
    .label xd = 7
    .label yd = $a
  //SEG48 [29] if((byte) line::x0#0>=(byte) line::x1#0) goto line::@1 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ) -- zpby1_ge_zpby2_then_la1 
    lda x0
    cmp x1
    bcs b1
  //SEG49 line::@15
  //SEG50 [30] (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ) -- zpby1=zpby2_minus_zpby3 
    lda x1
    sec
    sbc x0
    sta xd
  //SEG51 [31] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@2 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ) -- yby_ge_zpby1_then_la1 
    cpy y1
    bcs b2
  //SEG52 line::@16
  //SEG53 [32] (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ) -- zpby1=zpby2_minus_yby 
    sty $ff
    lda y1
    sec
    sbc $ff
    sta yd
  //SEG54 [33] if((byte) line::yd#1>=(byte) line::xd#1) goto line::@3 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b3
  //SEG55 line::@17
  //SEG56 [34] (byte) line_xdyi::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG57 [35] (byte) line_xdyi::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ] ) -- zpby1=yby 
    sty line_xdyi.y
  //SEG58 [36] (byte) line_xdyi::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ] ) -- zpby1=zpby2 
    lda x1
    sta line_xdyi.x1
  //SEG59 [37] (byte) line_xdyi::xd#0 ← (byte) line::xd#1 [ line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyi.xd
  //SEG60 [38] (byte) line_xdyi::yd#0 ← (byte) line::yd#1 [ line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyi.yd
  //SEG61 [39] call line_xdyi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG62 [120] phi from line::@17 to line_xdyi [phi:line::@17->line_xdyi]
  //SEG63 [120] phi (byte) line_xdyi::x1#6 = (byte) line_xdyi::x1#0 [phi:line::@17->line_xdyi#0] -- register_copy 
  //SEG64 [120] phi (byte) line_xdyi::xd#5 = (byte) line_xdyi::xd#0 [phi:line::@17->line_xdyi#1] -- register_copy 
  //SEG65 [120] phi (byte) line_xdyi::y#5 = (byte) line_xdyi::y#0 [phi:line::@17->line_xdyi#2] -- register_copy 
  //SEG66 [120] phi (byte) line_xdyi::x#6 = (byte) line_xdyi::x#0 [phi:line::@17->line_xdyi#3] -- register_copy 
  //SEG67 [120] phi (byte) line_xdyi::yd#2 = (byte) line_xdyi::yd#0 [phi:line::@17->line_xdyi#4] -- register_copy 
    jsr line_xdyi
  //SEG68 line::@return
  breturn:
  //SEG69 [40] return  [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
    rts
  //SEG70 line::@3
  b3:
  //SEG71 [41] (byte) line_ydxi::y#0 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ] ) -- zpby1=yby 
    sty line_ydxi.y
  //SEG72 [42] (byte) line_ydxi::x#0 ← (byte) line::x0#0 [ line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG73 [43] (byte) line_ydxi::y1#0 ← (byte) line::y1#0 [ line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxi.y1
  //SEG74 [44] (byte) line_ydxi::yd#0 ← (byte) line::yd#1 [ line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxi.yd
  //SEG75 [45] (byte) line_ydxi::xd#0 ← (byte) line::xd#1 [ line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxi.xd
  //SEG76 [46] call line_ydxi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG77 [91] phi from line::@3 to line_ydxi [phi:line::@3->line_ydxi]
  //SEG78 [91] phi (byte) line_ydxi::y1#6 = (byte) line_ydxi::y1#0 [phi:line::@3->line_ydxi#0] -- register_copy 
  //SEG79 [91] phi (byte) line_ydxi::yd#5 = (byte) line_ydxi::yd#0 [phi:line::@3->line_ydxi#1] -- register_copy 
  //SEG80 [91] phi (byte) line_ydxi::y#6 = (byte) line_ydxi::y#0 [phi:line::@3->line_ydxi#2] -- register_copy 
  //SEG81 [91] phi (byte) line_ydxi::x#5 = (byte) line_ydxi::x#0 [phi:line::@3->line_ydxi#3] -- register_copy 
  //SEG82 [91] phi (byte) line_ydxi::xd#2 = (byte) line_ydxi::xd#0 [phi:line::@3->line_ydxi#4] -- register_copy 
    jsr line_ydxi
    jmp breturn
  //SEG83 line::@2
  b2:
  //SEG84 [47] (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ) -- zpby1=yby_minus_zpby2 
    tya
    sec
    sbc y1
    sta yd
  //SEG85 [48] if((byte) line::yd#0>=(byte) line::xd#1) goto line::@6 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b6
  //SEG86 line::@20
  //SEG87 [49] (byte) line_xdyd::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG88 [50] (byte) line_xdyd::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ] ) -- zpby1=yby 
    sty line_xdyd.y
  //SEG89 [51] (byte) line_xdyd::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ] ) -- zpby1=zpby2 
    lda x1
    sta line_xdyd.x1
  //SEG90 [52] (byte) line_xdyd::xd#0 ← (byte) line::xd#1 [ line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyd.xd
  //SEG91 [53] (byte) line_xdyd::yd#0 ← (byte) line::yd#0 [ line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyd.yd
  //SEG92 [54] call line_xdyd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG93 [150] phi from line::@20 to line_xdyd [phi:line::@20->line_xdyd]
  //SEG94 [150] phi (byte) line_xdyd::x1#6 = (byte) line_xdyd::x1#0 [phi:line::@20->line_xdyd#0] -- register_copy 
  //SEG95 [150] phi (byte) line_xdyd::xd#5 = (byte) line_xdyd::xd#0 [phi:line::@20->line_xdyd#1] -- register_copy 
  //SEG96 [150] phi (byte) line_xdyd::y#5 = (byte) line_xdyd::y#0 [phi:line::@20->line_xdyd#2] -- register_copy 
  //SEG97 [150] phi (byte) line_xdyd::x#6 = (byte) line_xdyd::x#0 [phi:line::@20->line_xdyd#3] -- register_copy 
  //SEG98 [150] phi (byte) line_xdyd::yd#2 = (byte) line_xdyd::yd#0 [phi:line::@20->line_xdyd#4] -- register_copy 
    jsr line_xdyd
    jmp breturn
  //SEG99 line::@6
  b6:
  //SEG100 [55] (byte) line_ydxd::y#0 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxd.y
  //SEG101 [56] (byte) line_ydxd::x#0 ← (byte) line::x1#0 [ line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ] ) -- xby=zpby1 
    ldx x1
  //SEG102 [57] (byte) line_ydxd::y1#0 ← (byte) line::y0#0 [ line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ] ) -- zpby1=yby 
    sty line_ydxd.y1
  //SEG103 [58] (byte) line_ydxd::yd#0 ← (byte) line::yd#0 [ line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxd.yd
  //SEG104 [59] (byte) line_ydxd::xd#0 ← (byte) line::xd#1 [ line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxd.xd
  //SEG105 [60] call line_ydxd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG106 [135] phi from line::@6 to line_ydxd [phi:line::@6->line_ydxd]
  //SEG107 [135] phi (byte) line_ydxd::y1#6 = (byte) line_ydxd::y1#0 [phi:line::@6->line_ydxd#0] -- register_copy 
  //SEG108 [135] phi (byte) line_ydxd::yd#5 = (byte) line_ydxd::yd#0 [phi:line::@6->line_ydxd#1] -- register_copy 
  //SEG109 [135] phi (byte) line_ydxd::y#6 = (byte) line_ydxd::y#0 [phi:line::@6->line_ydxd#2] -- register_copy 
  //SEG110 [135] phi (byte) line_ydxd::x#5 = (byte) line_ydxd::x#0 [phi:line::@6->line_ydxd#3] -- register_copy 
  //SEG111 [135] phi (byte) line_ydxd::xd#2 = (byte) line_ydxd::xd#0 [phi:line::@6->line_ydxd#4] -- register_copy 
    jsr line_ydxd
    jmp breturn
  //SEG112 line::@1
  b1:
  //SEG113 [61] (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ) -- zpby1=zpby2_minus_zpby3 
    lda x0
    sec
    sbc x1
    sta xd
  //SEG114 [62] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@9 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ) -- yby_ge_zpby1_then_la1 
    cpy y1
    bcs b9
  //SEG115 line::@23
  //SEG116 [63] (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ) -- zpby1=zpby2_minus_yby 
    sty $ff
    lda y1
    sec
    sbc $ff
    sta yd
  //SEG117 [64] if((byte) line::yd#3>=(byte) line::xd#0) goto line::@10 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b10
  //SEG118 line::@24
  //SEG119 [65] (byte) line_xdyd::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG120 [66] (byte) line_xdyd::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_xdyd.y
  //SEG121 [67] (byte) line_xdyd::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ] )
    // (byte) line_xdyd::x1#1 = (byte) line::x0#0  // register copy zp ZP_BYTE:5
  //SEG122 [68] (byte) line_xdyd::xd#1 ← (byte) line::xd#0 [ line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyd.xd
  //SEG123 [69] (byte) line_xdyd::yd#1 ← (byte) line::yd#3 [ line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyd.yd
  //SEG124 [70] call line_xdyd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG125 [150] phi from line::@24 to line_xdyd [phi:line::@24->line_xdyd]
  //SEG126 [150] phi (byte) line_xdyd::x1#6 = (byte) line_xdyd::x1#1 [phi:line::@24->line_xdyd#0] -- register_copy 
  //SEG127 [150] phi (byte) line_xdyd::xd#5 = (byte) line_xdyd::xd#1 [phi:line::@24->line_xdyd#1] -- register_copy 
  //SEG128 [150] phi (byte) line_xdyd::y#5 = (byte) line_xdyd::y#1 [phi:line::@24->line_xdyd#2] -- register_copy 
  //SEG129 [150] phi (byte) line_xdyd::x#6 = (byte) line_xdyd::x#1 [phi:line::@24->line_xdyd#3] -- register_copy 
  //SEG130 [150] phi (byte) line_xdyd::yd#2 = (byte) line_xdyd::yd#1 [phi:line::@24->line_xdyd#4] -- register_copy 
    jsr line_xdyd
    jmp breturn
  //SEG131 line::@10
  b10:
  //SEG132 [71] (byte) line_ydxd::y#1 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ] ) -- zpby1=yby 
    sty line_ydxd.y
  //SEG133 [72] (byte) line_ydxd::x#1 ← (byte) line::x0#0 [ line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ] ) -- xby=zpby1 
    ldx x0
  //SEG134 [73] (byte) line_ydxd::y1#1 ← (byte) line::y1#0 [ line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxd.y1
  //SEG135 [74] (byte) line_ydxd::yd#1 ← (byte) line::yd#3 [ line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxd.yd
  //SEG136 [75] (byte) line_ydxd::xd#1 ← (byte) line::xd#0 [ line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxd.xd
  //SEG137 [76] call line_ydxd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG138 [135] phi from line::@10 to line_ydxd [phi:line::@10->line_ydxd]
  //SEG139 [135] phi (byte) line_ydxd::y1#6 = (byte) line_ydxd::y1#1 [phi:line::@10->line_ydxd#0] -- register_copy 
  //SEG140 [135] phi (byte) line_ydxd::yd#5 = (byte) line_ydxd::yd#1 [phi:line::@10->line_ydxd#1] -- register_copy 
  //SEG141 [135] phi (byte) line_ydxd::y#6 = (byte) line_ydxd::y#1 [phi:line::@10->line_ydxd#2] -- register_copy 
  //SEG142 [135] phi (byte) line_ydxd::x#5 = (byte) line_ydxd::x#1 [phi:line::@10->line_ydxd#3] -- register_copy 
  //SEG143 [135] phi (byte) line_ydxd::xd#2 = (byte) line_ydxd::xd#1 [phi:line::@10->line_ydxd#4] -- register_copy 
    jsr line_ydxd
    jmp breturn
  //SEG144 line::@9
  b9:
  //SEG145 [77] (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ) -- zpby1=yby_minus_zpby2 
    tya
    sec
    sbc y1
    sta yd
  //SEG146 [78] if((byte) line::yd#10>=(byte) line::xd#0) goto line::@13 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b13
  //SEG147 line::@27
  //SEG148 [79] (byte) line_xdyi::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG149 [80] (byte) line_xdyi::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_xdyi.y
  //SEG150 [81] (byte) line_xdyi::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ] )
    // (byte) line_xdyi::x1#1 = (byte) line::x0#0  // register copy zp ZP_BYTE:5
  //SEG151 [82] (byte) line_xdyi::xd#1 ← (byte) line::xd#0 [ line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyi.xd
  //SEG152 [83] (byte) line_xdyi::yd#1 ← (byte) line::yd#10 [ line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyi.yd
  //SEG153 [84] call line_xdyi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG154 [120] phi from line::@27 to line_xdyi [phi:line::@27->line_xdyi]
  //SEG155 [120] phi (byte) line_xdyi::x1#6 = (byte) line_xdyi::x1#1 [phi:line::@27->line_xdyi#0] -- register_copy 
  //SEG156 [120] phi (byte) line_xdyi::xd#5 = (byte) line_xdyi::xd#1 [phi:line::@27->line_xdyi#1] -- register_copy 
  //SEG157 [120] phi (byte) line_xdyi::y#5 = (byte) line_xdyi::y#1 [phi:line::@27->line_xdyi#2] -- register_copy 
  //SEG158 [120] phi (byte) line_xdyi::x#6 = (byte) line_xdyi::x#1 [phi:line::@27->line_xdyi#3] -- register_copy 
  //SEG159 [120] phi (byte) line_xdyi::yd#2 = (byte) line_xdyi::yd#1 [phi:line::@27->line_xdyi#4] -- register_copy 
    jsr line_xdyi
    jmp breturn
  //SEG160 line::@13
  b13:
  //SEG161 [85] (byte) line_ydxi::y#1 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxi.y
  //SEG162 [86] (byte) line_ydxi::x#1 ← (byte) line::x1#0 [ line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG163 [87] (byte) line_ydxi::y1#1 ← (byte) line::y0#0 [ line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ] ) -- zpby1=yby 
    sty line_ydxi.y1
  //SEG164 [88] (byte) line_ydxi::yd#1 ← (byte) line::yd#10 [ line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxi.yd
  //SEG165 [89] (byte) line_ydxi::xd#1 ← (byte) line::xd#0 [ line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxi.xd
  //SEG166 [90] call line_ydxi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG167 [91] phi from line::@13 to line_ydxi [phi:line::@13->line_ydxi]
  //SEG168 [91] phi (byte) line_ydxi::y1#6 = (byte) line_ydxi::y1#1 [phi:line::@13->line_ydxi#0] -- register_copy 
  //SEG169 [91] phi (byte) line_ydxi::yd#5 = (byte) line_ydxi::yd#1 [phi:line::@13->line_ydxi#1] -- register_copy 
  //SEG170 [91] phi (byte) line_ydxi::y#6 = (byte) line_ydxi::y#1 [phi:line::@13->line_ydxi#2] -- register_copy 
  //SEG171 [91] phi (byte) line_ydxi::x#5 = (byte) line_ydxi::x#1 [phi:line::@13->line_ydxi#3] -- register_copy 
  //SEG172 [91] phi (byte) line_ydxi::xd#2 = (byte) line_ydxi::xd#1 [phi:line::@13->line_ydxi#4] -- register_copy 
    jsr line_ydxi
    jmp breturn
}
//SEG173 line_ydxi
line_ydxi: {
    .label y = 6
    .label y1 = 5
    .label yd = 4
    .label xd = 3
    .label e = 7
  //SEG174 [92] (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda xd
    lsr
    sta e
  //SEG175 [93] phi from line_ydxi line_ydxi::@2 to line_ydxi::@1 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1]
  //SEG176 [93] phi (byte) line_ydxi::e#3 = (byte) line_ydxi::e#0 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#0] -- register_copy 
  //SEG177 [93] phi (byte) line_ydxi::y#3 = (byte) line_ydxi::y#6 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#1] -- register_copy 
  //SEG178 [93] phi (byte) line_ydxi::x#3 = (byte) line_ydxi::x#5 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#2] -- register_copy 
  //SEG179 line_ydxi::@1
  b1:
  //SEG180 [94] (byte) plot::x#2 ← (byte) line_ydxi::x#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] )
    // (byte) plot::x#2 = (byte) line_ydxi::x#3  // register copy reg byte x
  //SEG181 [95] (byte) plot::y#2 ← (byte) line_ydxi::y#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] ) -- yby=zpby1 
    ldy y
  //SEG182 [96] call plot param-assignment [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] )
  //SEG183 [106] phi from line_ydxi::@1 to plot [phi:line_ydxi::@1->plot]
  //SEG184 [106] phi (byte) plot::y#4 = (byte) plot::y#2 [phi:line_ydxi::@1->plot#0] -- register_copy 
  //SEG185 [106] phi (byte) plot::x#4 = (byte) plot::x#2 [phi:line_ydxi::@1->plot#1] -- register_copy 
    jsr plot
  //SEG186 line_ydxi::@5
  //SEG187 [97] (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG188 [98] (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc xd
    sta e
  //SEG189 [99] if((byte) line_ydxi::yd#5>=(byte) line_ydxi::e#1) goto line_ydxi::@2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp e
    bcs b2
  //SEG190 line_ydxi::@3
  //SEG191 [100] (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG192 [101] (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc yd
    sta e
  //SEG193 [102] phi from line_ydxi::@3 line_ydxi::@5 to line_ydxi::@2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2]
  //SEG194 [102] phi (byte) line_ydxi::e#6 = (byte) line_ydxi::e#2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2#0] -- register_copy 
  //SEG195 [102] phi (byte) line_ydxi::x#6 = (byte) line_ydxi::x#2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2#1] -- register_copy 
  //SEG196 line_ydxi::@2
  b2:
  //SEG197 [103] (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] ) -- aby=zpby1_plus_1 
    lda y1
    clc
    adc #1
  //SEG198 [104] if((byte) line_ydxi::y#2<(byte~) line_ydxi::$8) goto line_ydxi::@1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] ) -- zpby1_lt_aby_then_la1 
    cmp y
    bcs b1
  //SEG199 line_ydxi::@return
  //SEG200 [105] return  [ ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 ] )
    rts
}
//SEG201 plot
plot: {
    .label plotter_x = 8
    .label plotter_y = $b
    .label plotter = 8
  //SEG202 [107] (byte~) plot::$0 ← (const byte[]) plot_xhi#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::$0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::$0 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_xhi,x
  //SEG203 [108] (byte*) plot::plotter_x#1 ← ((byte*))(byte/signed byte/word/signed word) 0 hi= (byte~) plot::$0 [ plot::x#4 plot::y#4 plot::plotter_x#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] ) -- zpptrby1=cowo1_sethi_aby 
    sta plotter_x+1
    lda #<0
    sta plotter_x
  //SEG204 [109] (byte~) plot::$1 ← (const byte[]) plot_xlo#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_xlo,x
  //SEG205 [110] (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1 [ plot::x#4 plot::y#4 plot::plotter_x#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] ) -- zpptrby1=zpptrby1_setlo_aby 
    sta plotter_x
  //SEG206 [111] (byte~) plot::$2 ← (const byte[]) plot_yhi#0 *idx (byte) plot::y#4 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] ) -- aby=cowo1_derefidx_yby 
    lda plot_yhi,y
  //SEG207 [112] (word) plot::plotter_y#1 ← (byte/signed byte/word/signed word) 0 hi= (byte~) plot::$2 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] ) -- zpwo1=coby1_sethi_aby 
    sta plotter_y+1
    lda #<0
    sta plotter_y
  //SEG208 [113] (byte~) plot::$3 ← (const byte[]) plot_ylo#0 *idx (byte) plot::y#4 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] ) -- aby=cowo1_derefidx_yby 
    lda plot_ylo,y
  //SEG209 [114] (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ) -- zpwo1=zpwo1_setlo_aby 
    sta plotter_y
  //SEG210 [115] (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2 [ plot::x#4 plot::plotter#0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] ) -- zpptrby1=zpptrby1_plus_zpwo1 
    lda plotter
    clc
    adc plotter_y
    sta plotter
    lda plotter+1
    adc plotter_y+1
    sta plotter+1
  //SEG211 [116] (byte~) plot::$5 ← (const byte[]) plot_bit#0 *idx (byte) plot::x#4 [ plot::plotter#0 plot::$5 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$5 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_bit,x
  //SEG212 [117] (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5 [ plot::plotter#0 plot::$6 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] ) -- aby=_deref_zpptrby1_bor_aby 
    ldy #0
    ora (plotter),y
  //SEG213 [118] *((byte*) plot::plotter#0) ← (byte~) plot::$6 [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ) -- _deref_zpptrby1=aby 
    sta (plotter),y
  //SEG214 plot::@return
  //SEG215 [119] return  [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
    rts
}
//SEG216 line_xdyi
line_xdyi: {
    .label _8 = $a
    .label y = 6
    .label x1 = 5
    .label xd = 4
    .label yd = 3
    .label e = 7
  //SEG217 [121] (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda yd
    lsr
    sta e
  //SEG218 [122] phi from line_xdyi line_xdyi::@2 to line_xdyi::@1 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1]
  //SEG219 [122] phi (byte) line_xdyi::e#3 = (byte) line_xdyi::e#0 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#0] -- register_copy 
  //SEG220 [122] phi (byte) line_xdyi::y#3 = (byte) line_xdyi::y#5 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#1] -- register_copy 
  //SEG221 [122] phi (byte) line_xdyi::x#3 = (byte) line_xdyi::x#6 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#2] -- register_copy 
  //SEG222 line_xdyi::@1
  b1:
  //SEG223 [123] (byte) plot::x#0 ← (byte) line_xdyi::x#3 [ plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
    // (byte) plot::x#0 = (byte) line_xdyi::x#3  // register copy reg byte x
  //SEG224 [124] (byte) plot::y#0 ← (byte) line_xdyi::y#3 [ plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG225 [125] call plot param-assignment [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
  //SEG226 [106] phi from line_xdyi::@1 to plot [phi:line_xdyi::@1->plot]
  //SEG227 [106] phi (byte) plot::y#4 = (byte) plot::y#0 [phi:line_xdyi::@1->plot#0] -- register_copy 
  //SEG228 [106] phi (byte) plot::x#4 = (byte) plot::x#0 [phi:line_xdyi::@1->plot#1] -- register_copy 
    jsr plot
  //SEG229 line_xdyi::@5
  //SEG230 [126] (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG231 [127] (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc yd
    sta e
  //SEG232 [128] if((byte) line_xdyi::xd#5>=(byte) line_xdyi::e#1) goto line_xdyi::@2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda xd
    cmp e
    bcs b2
  //SEG233 line_xdyi::@3
  //SEG234 [129] (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG235 [130] (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc xd
    sta e
  //SEG236 [131] phi from line_xdyi::@3 line_xdyi::@5 to line_xdyi::@2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2]
  //SEG237 [131] phi (byte) line_xdyi::e#6 = (byte) line_xdyi::e#2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2#0] -- register_copy 
  //SEG238 [131] phi (byte) line_xdyi::y#6 = (byte) line_xdyi::y#2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2#1] -- register_copy 
  //SEG239 line_xdyi::@2
  b2:
  //SEG240 [132] (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] ) -- zpby1=zpby2_plus_1 
    lda x1
    clc
    adc #1
    sta _8
  //SEG241 [133] if((byte) line_xdyi::x#2<(byte~) line_xdyi::$8) goto line_xdyi::@1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] ) -- xby_lt_zpby1_then_la1 
    cpx _8
    bcc b1
  //SEG242 line_xdyi::@return
  //SEG243 [134] return  [ ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 ] )
    rts
}
//SEG244 line_ydxd
line_ydxd: {
    .label y = 6
    .label y1 = 5
    .label yd = 4
    .label xd = 3
    .label e = 7
  //SEG245 [136] (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda xd
    lsr
    sta e
  //SEG246 [137] phi from line_ydxd line_ydxd::@2 to line_ydxd::@1 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1]
  //SEG247 [137] phi (byte) line_ydxd::e#3 = (byte) line_ydxd::e#0 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#0] -- register_copy 
  //SEG248 [137] phi (byte) line_ydxd::y#3 = (byte) line_ydxd::y#6 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#1] -- register_copy 
  //SEG249 [137] phi (byte) line_ydxd::x#3 = (byte) line_ydxd::x#5 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#2] -- register_copy 
  //SEG250 line_ydxd::@1
  b1:
  //SEG251 [138] (byte) plot::x#3 ← (byte) line_ydxd::x#3 [ plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
    // (byte) plot::x#3 = (byte) line_ydxd::x#3  // register copy reg byte x
  //SEG252 [139] (byte) plot::y#3 ← (byte) line_ydxd::y#3 [ plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG253 [140] call plot param-assignment [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
  //SEG254 [106] phi from line_ydxd::@1 to plot [phi:line_ydxd::@1->plot]
  //SEG255 [106] phi (byte) plot::y#4 = (byte) plot::y#3 [phi:line_ydxd::@1->plot#0] -- register_copy 
  //SEG256 [106] phi (byte) plot::x#4 = (byte) plot::x#3 [phi:line_ydxd::@1->plot#1] -- register_copy 
    jsr plot
  //SEG257 line_ydxd::@5
  //SEG258 [141] (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG259 [142] (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc xd
    sta e
  //SEG260 [143] if((byte) line_ydxd::yd#5>=(byte) line_ydxd::e#1) goto line_ydxd::@2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp e
    bcs b2
  //SEG261 line_ydxd::@3
  //SEG262 [144] (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] ) -- xby=xby_minus_1 
    dex
  //SEG263 [145] (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc yd
    sta e
  //SEG264 [146] phi from line_ydxd::@3 line_ydxd::@5 to line_ydxd::@2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2]
  //SEG265 [146] phi (byte) line_ydxd::e#6 = (byte) line_ydxd::e#2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2#0] -- register_copy 
  //SEG266 [146] phi (byte) line_ydxd::x#6 = (byte) line_ydxd::x#2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2#1] -- register_copy 
  //SEG267 line_ydxd::@2
  b2:
  //SEG268 [147] (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] ) -- aby=zpby1_plus_1 
    lda y1
    clc
    adc #1
  //SEG269 [148] if((byte) line_ydxd::y#2<(byte~) line_ydxd::$8) goto line_ydxd::@1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] ) -- zpby1_lt_aby_then_la1 
    cmp y
    bcs b1
  //SEG270 line_ydxd::@return
  //SEG271 [149] return  [ ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 ] )
    rts
}
//SEG272 line_xdyd
line_xdyd: {
    .label _8 = $a
    .label y = 6
    .label x1 = 5
    .label xd = 4
    .label yd = 3
    .label e = 7
  //SEG273 [151] (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda yd
    lsr
    sta e
  //SEG274 [152] phi from line_xdyd line_xdyd::@2 to line_xdyd::@1 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1]
  //SEG275 [152] phi (byte) line_xdyd::e#3 = (byte) line_xdyd::e#0 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#0] -- register_copy 
  //SEG276 [152] phi (byte) line_xdyd::y#3 = (byte) line_xdyd::y#5 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#1] -- register_copy 
  //SEG277 [152] phi (byte) line_xdyd::x#3 = (byte) line_xdyd::x#6 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#2] -- register_copy 
  //SEG278 line_xdyd::@1
  b1:
  //SEG279 [153] (byte) plot::x#1 ← (byte) line_xdyd::x#3 [ plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
    // (byte) plot::x#1 = (byte) line_xdyd::x#3  // register copy reg byte x
  //SEG280 [154] (byte) plot::y#1 ← (byte) line_xdyd::y#3 [ plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG281 [155] call plot param-assignment [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
  //SEG282 [106] phi from line_xdyd::@1 to plot [phi:line_xdyd::@1->plot]
  //SEG283 [106] phi (byte) plot::y#4 = (byte) plot::y#1 [phi:line_xdyd::@1->plot#0] -- register_copy 
  //SEG284 [106] phi (byte) plot::x#4 = (byte) plot::x#1 [phi:line_xdyd::@1->plot#1] -- register_copy 
    jsr plot
  //SEG285 line_xdyd::@5
  //SEG286 [156] (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG287 [157] (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc yd
    sta e
  //SEG288 [158] if((byte) line_xdyd::xd#5>=(byte) line_xdyd::e#1) goto line_xdyd::@2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda xd
    cmp e
    bcs b2
  //SEG289 line_xdyd::@3
  //SEG290 [159] (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] ) -- zpby1=zpby1_minus_1 
    dec y
  //SEG291 [160] (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc xd
    sta e
  //SEG292 [161] phi from line_xdyd::@3 line_xdyd::@5 to line_xdyd::@2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2]
  //SEG293 [161] phi (byte) line_xdyd::e#6 = (byte) line_xdyd::e#2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2#0] -- register_copy 
  //SEG294 [161] phi (byte) line_xdyd::y#6 = (byte) line_xdyd::y#2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2#1] -- register_copy 
  //SEG295 line_xdyd::@2
  b2:
  //SEG296 [162] (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] ) -- zpby1=zpby2_plus_1 
    lda x1
    clc
    adc #1
    sta _8
  //SEG297 [163] if((byte) line_xdyd::x#2<(byte~) line_xdyd::$8) goto line_xdyd::@1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] ) -- xby_lt_zpby1_then_la1 
    cpx _8
    bcc b1
  //SEG298 line_xdyd::@return
  //SEG299 [164] return  [ ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 ] )
    rts
}
//SEG300 init_plot_tables
init_plot_tables: {
    .label _6 = 2
    .label yoffs = 8
  //SEG301 [166] phi from init_plot_tables to init_plot_tables::@1 [phi:init_plot_tables->init_plot_tables::@1]
  //SEG302 [166] phi (byte) init_plot_tables::bits#3 = (byte/word/signed word) 128 [phi:init_plot_tables->init_plot_tables::@1#0] -- yby=coby1 
    ldy #$80
  //SEG303 [166] phi (byte) init_plot_tables::x#2 = (byte/signed byte/word/signed word) 0 [phi:init_plot_tables->init_plot_tables::@1#1] -- xby=coby1 
    ldx #0
    jmp b1
  //SEG304 [166] phi from init_plot_tables::@2 to init_plot_tables::@1 [phi:init_plot_tables::@2->init_plot_tables::@1]
  //SEG305 [166] phi (byte) init_plot_tables::bits#3 = (byte) init_plot_tables::bits#4 [phi:init_plot_tables::@2->init_plot_tables::@1#0] -- register_copy 
  //SEG306 [166] phi (byte) init_plot_tables::x#2 = (byte) init_plot_tables::x#1 [phi:init_plot_tables::@2->init_plot_tables::@1#1] -- register_copy 
  //SEG307 init_plot_tables::@1
  b1:
  //SEG308 [167] (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ) -- aby=xby_band_coby1 
    txa
    and #$f8
  //SEG309 [168] *((const byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_xlo,x
  //SEG310 [169] *((const byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← >(const byte*) BITMAP#0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=coby2 
    lda #>BITMAP
    sta plot_xhi,x
  //SEG311 [170] *((const byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=yby 
    tya
    sta plot_bit,x
  //SEG312 [171] (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ) -- yby=yby_ror_1 
    tya
    lsr
    tay
  //SEG313 [172] if((byte) init_plot_tables::bits#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ) -- yby_neq_0_then_la1 
    cpy #0
    bne b2
  //SEG314 [173] phi from init_plot_tables::@1 to init_plot_tables::@2 [phi:init_plot_tables::@1->init_plot_tables::@2]
  //SEG315 [173] phi (byte) init_plot_tables::bits#4 = (byte/word/signed word) 128 [phi:init_plot_tables::@1->init_plot_tables::@2#0] -- yby=coby1 
    ldy #$80
  //SEG316 init_plot_tables::@2
  b2:
  //SEG317 [174] (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ) -- xby=_inc_xby 
    inx
  //SEG318 [175] if((byte) init_plot_tables::x#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@1 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ) -- xby_neq_0_then_la1 
    cpx #0
    bne b1
  //SEG319 [176] phi from init_plot_tables::@2 to init_plot_tables::@3 [phi:init_plot_tables::@2->init_plot_tables::@3]
  //SEG320 [176] phi (byte*) init_plot_tables::yoffs#2 = ((byte*))(byte/signed byte/word/signed word) 0 [phi:init_plot_tables::@2->init_plot_tables::@3#0] -- zpptrby1=cowo1 
    lda #<0
    sta yoffs
    sta yoffs+1
  //SEG321 [176] phi (byte) init_plot_tables::y#2 = (byte/signed byte/word/signed word) 0 [phi:init_plot_tables::@2->init_plot_tables::@3#1] -- xby=coby1 
    tax
    jmp b3
  //SEG322 [176] phi from init_plot_tables::@4 to init_plot_tables::@3 [phi:init_plot_tables::@4->init_plot_tables::@3]
  //SEG323 [176] phi (byte*) init_plot_tables::yoffs#2 = (byte*) init_plot_tables::yoffs#4 [phi:init_plot_tables::@4->init_plot_tables::@3#0] -- register_copy 
  //SEG324 [176] phi (byte) init_plot_tables::y#2 = (byte) init_plot_tables::y#1 [phi:init_plot_tables::@4->init_plot_tables::@3#1] -- register_copy 
  //SEG325 init_plot_tables::@3
  b3:
  //SEG326 [177] (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ) -- zpby1=xby_band_coby1 
    txa
    and #7
    sta _6
  //SEG327 [178] (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ] ) -- aby=_lo_zpptrby1 
    lda yoffs
  //SEG328 [179] (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ] ) -- aby=zpby1_bor_aby 
    ora _6
  //SEG329 [180] *((const byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_ylo,x
  //SEG330 [181] (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ) -- aby=_hi_zpptrby1 
    lda yoffs+1
  //SEG331 [182] *((const byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_yhi,x
  //SEG332 [183] (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ) -- aby=xby_band_coby1 
    txa
    and #7
  //SEG333 [184] if((byte~) init_plot_tables::$10!=(byte/signed byte/word/signed word) 7) goto init_plot_tables::@4 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- aby_neq_coby1_then_la1 
    cmp #7
    bne b4
  //SEG334 init_plot_tables::@7
  //SEG335 [185] (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ) -- zpptrby1=zpptrby1_plus_cowo1 
    lda yoffs
    clc
    adc #<$140
    sta yoffs
    lda yoffs+1
    adc #>$140
    sta yoffs+1
  //SEG336 [186] phi from init_plot_tables::@3 init_plot_tables::@7 to init_plot_tables::@4 [phi:init_plot_tables::@3/init_plot_tables::@7->init_plot_tables::@4]
  //SEG337 [186] phi (byte*) init_plot_tables::yoffs#4 = (byte*) init_plot_tables::yoffs#2 [phi:init_plot_tables::@3/init_plot_tables::@7->init_plot_tables::@4#0] -- register_copy 
  //SEG338 init_plot_tables::@4
  b4:
  //SEG339 [187] (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ) -- xby=_inc_xby 
    inx
  //SEG340 [188] if((byte) init_plot_tables::y#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@3 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ) -- xby_neq_0_then_la1 
    cpx #0
    bne b3
  //SEG341 init_plot_tables::@return
  //SEG342 [189] return  [ ] ( main:2::init_plot_tables:10 [ ] )
    rts
  //SEG343 [190] phi from init_plot_tables::@1 to init_plot_tables::@10 [phi:init_plot_tables::@1->init_plot_tables::@10]
  //SEG344 init_plot_tables::@10
  b10:
  //SEG345 [173] phi from init_plot_tables::@10 to init_plot_tables::@2 [phi:init_plot_tables::@10->init_plot_tables::@2]
  //SEG346 [173] phi (byte) init_plot_tables::bits#4 = (byte) init_plot_tables::bits#1 [phi:init_plot_tables::@10->init_plot_tables::@2#0] -- register_copy 
    jmp b2
}
//SEG347 init_screen
init_screen: {
    .label b = 8
    .label c = 8
  //SEG348 [192] phi from init_screen to init_screen::@1 [phi:init_screen->init_screen::@1]
  //SEG349 [192] phi (byte*) init_screen::b#2 = (const byte*) BITMAP#0 [phi:init_screen->init_screen::@1#0] -- zpptrby1=cowo1 
    lda #<BITMAP
    sta b
    lda #>BITMAP
    sta b+1
    jmp b1
  //SEG350 [192] phi from init_screen::@1 to init_screen::@1 [phi:init_screen::@1->init_screen::@1]
  //SEG351 [192] phi (byte*) init_screen::b#2 = (byte*) init_screen::b#1 [phi:init_screen::@1->init_screen::@1#0] -- register_copy 
  //SEG352 init_screen::@1
  b1:
  //SEG353 [193] *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0 [ init_screen::b#2 ] ( main:2::init_screen:8 [ init_screen::b#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    tya
    sta (b),y
  //SEG354 [194] (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc b
    bne !+
    inc b+1
  !:
  //SEG355 [195] if((byte*) init_screen::b#1!=(const byte*) BITMAP#0+(word/signed word) 8192) goto init_screen::@1 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] ) -- zpptrby1_neq_cowo1_then_la1 
    lda b+1
    cmp #>BITMAP+$2000
    bne b1
    lda b
    cmp #<BITMAP+$2000
    bne b1
  //SEG356 [196] phi from init_screen::@1 to init_screen::@2 [phi:init_screen::@1->init_screen::@2]
  //SEG357 [196] phi (byte*) init_screen::c#2 = (const byte*) SCREEN#0 [phi:init_screen::@1->init_screen::@2#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta c
    lda #>SCREEN
    sta c+1
    jmp b2
  //SEG358 [196] phi from init_screen::@2 to init_screen::@2 [phi:init_screen::@2->init_screen::@2]
  //SEG359 [196] phi (byte*) init_screen::c#2 = (byte*) init_screen::c#1 [phi:init_screen::@2->init_screen::@2#0] -- register_copy 
  //SEG360 init_screen::@2
  b2:
  //SEG361 [197] *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20 [ init_screen::c#2 ] ( main:2::init_screen:8 [ init_screen::c#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #$14
    sta (c),y
  //SEG362 [198] (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc c
    bne !+
    inc c+1
  !:
  //SEG363 [199] if((byte*) init_screen::c#1!=(const byte*) SCREEN#0+(word/signed word) 1024) goto init_screen::@2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] ) -- zpptrby1_neq_cowo1_then_la1 
    lda c+1
    cmp #>SCREEN+$400
    bne b2
    lda c
    cmp #<SCREEN+$400
    bne b2
  //SEG364 init_screen::@return
  //SEG365 [200] return  [ ] ( main:2::init_screen:8 [ ] )
    rts
}

Removing unreachable instruction rts
Succesful ASM optimization Pass5UnreachableCodeElimination
ASSEMBLER
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const BGCOL = $d020
  .const FGCOL = $d021
  .const D018 = $d018
  .const D011 = $d011
  .const BMM = $20
  .const DEN = $10
  .const RSEL = 8
  .const SCREEN = $400
  .const BITMAP = $2000
  .const plot_xlo = $1000
  .const plot_xhi = $1100
  .const plot_ylo = $1200
  .const plot_yhi = $1300
  .const plot_bit = $1400
  .const lines_cnt = 8
  lines_x: .byte $3c, $50, $6e, $50, $3c, $28, $a, $28, $3c
  lines_y: .byte $a, $28, $3c, $50, $6e, $50, $3c, $28, $a
//SEG2 @begin
//SEG3 [1] phi from @begin to @10 [phi:@begin->@10]
//SEG4 @10
//SEG5 [2] call main param-assignment [ ] ( )
  jsr main
//SEG6 [3] phi from @10 to @end [phi:@10->@end]
//SEG7 @end
//SEG8 main
main: {
  //SEG9 [4] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #0
    sta BGCOL
  //SEG10 [5] *((const byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    sta FGCOL
  //SEG11 [6] *((const byte*) D011#0) ← (const byte) BMM#0|(const byte) DEN#0|(const byte) RSEL#0|(byte/signed byte/word/signed word) 3 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #BMM|DEN|RSEL|3
    sta D011
  //SEG12 [7] *((const byte*) D018#0) ← (byte/signed byte/word/signed word) 24 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #$18
    sta D018
  //SEG13 [8] call init_screen param-assignment [ ] ( main:2 [ ] )
  //SEG14 [191] phi from main to init_screen [phi:main->init_screen]
    jsr init_screen
  //SEG15 [9] phi from main to main::@3 [phi:main->main::@3]
  //SEG16 main::@3
  //SEG17 [10] call init_plot_tables param-assignment [ ] ( main:2 [ ] )
  //SEG18 [165] phi from main::@3 to init_plot_tables [phi:main::@3->init_plot_tables]
    jsr init_plot_tables
  //SEG19 [11] phi from main::@3 main::@5 to main::@1 [phi:main::@3/main::@5->main::@1]
  //SEG20 main::@1
  b1:
  //SEG21 [12] call lines param-assignment [ ] ( main:2 [ ] )
  //SEG22 [15] phi from main::@1 to lines [phi:main::@1->lines]
    jsr lines
  //SEG23 main::@5
  //SEG24 [13] if(true) goto main::@1 [ ] ( main:2 [ ] ) -- true_then_la1 
    jmp b1
  //SEG25 main::@return
  //SEG26 [14] return  [ ] ( main:2 [ ] )
}
//SEG27 lines
lines: {
    .label _2 = 3
    .label _3 = 4
    .label l = 2
  //SEG28 [16] phi from lines to lines::@1 [phi:lines->lines::@1]
  //SEG29 [16] phi (byte) lines::l#2 = (byte/signed byte/word/signed word) 0 [phi:lines->lines::@1#0] -- zpby1=coby1 
    lda #0
    sta l
    jmp b1
  //SEG30 [16] phi from lines::@3 to lines::@1 [phi:lines::@3->lines::@1]
  //SEG31 [16] phi (byte) lines::l#2 = (byte) lines::l#1 [phi:lines::@3->lines::@1#0] -- register_copy 
  //SEG32 lines::@1
  b1:
  //SEG33 [17] (byte~) lines::$0 ← (const byte[]) lines_x#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 ] ( main:2::lines:12 [ lines::l#2 lines::$0 ] ) -- yby=cowo1_derefidx_zpby1 
    ldx l
    lda lines_x,x
    tay
  //SEG34 [18] (byte~) lines::$2 ← (const byte[]) lines_x#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx l
    lda lines_x+1,x
    sta _2
  //SEG35 [19] (byte~) lines::$3 ← (const byte[]) lines_y#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 lines::$3 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx l
    lda lines_y,x
    sta _3
  //SEG36 [20] (byte~) lines::$5 ← (const byte[]) lines_y#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ] ) -- xby=cowo1_derefidx_zpby1 
    ldx l
    lda lines_y+1,x
    tax
  //SEG37 [21] (byte) line::x0#0 ← (byte~) lines::$0 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ] ( main:2::lines:12 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ] ) -- zpby1=yby 
    sty line.x0
  //SEG38 [22] (byte) line::x1#0 ← (byte~) lines::$2 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ] ( main:2::lines:12 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ] )
    // (byte) line::x1#0 = (byte~) lines::$2  // register copy zp ZP_BYTE:3
  //SEG39 [23] (byte) line::y0#0 ← (byte~) lines::$3 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ] ( main:2::lines:12 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ] ) -- yby=zpby1 
    ldy _3
  //SEG40 [24] (byte) line::y1#0 ← (byte~) lines::$5 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ( main:2::lines:12 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ) -- zpby1=xby 
    stx line.y1
  //SEG41 [25] call line param-assignment [ lines::l#2 ] ( main:2::lines:12 [ lines::l#2 ] )
    jsr line
  //SEG42 lines::@3
  //SEG43 [26] (byte) lines::l#1 ← ++ (byte) lines::l#2 [ lines::l#1 ] ( main:2::lines:12 [ lines::l#1 ] ) -- zpby1=_inc_zpby1 
    inc l
  //SEG44 [27] if((byte) lines::l#1<(const byte) lines_cnt#0) goto lines::@1 [ lines::l#1 ] ( main:2::lines:12 [ lines::l#1 ] ) -- zpby1_lt_coby1_then_la1 
    lda l
    cmp #lines_cnt
    bcc b1
  //SEG45 lines::@return
  //SEG46 [28] return  [ ] ( main:2::lines:12 [ ] )
    rts
}
//SEG47 line
line: {
    .label x0 = 5
    .label x1 = 3
    .label y1 = 4
    .label xd = 7
    .label yd = $a
  //SEG48 [29] if((byte) line::x0#0>=(byte) line::x1#0) goto line::@1 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ) -- zpby1_ge_zpby2_then_la1 
    lda x0
    cmp x1
    bcs b1
  //SEG49 line::@15
  //SEG50 [30] (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ) -- zpby1=zpby2_minus_zpby3 
    lda x1
    sec
    sbc x0
    sta xd
  //SEG51 [31] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@2 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ) -- yby_ge_zpby1_then_la1 
    cpy y1
    bcs b2
  //SEG52 line::@16
  //SEG53 [32] (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ) -- zpby1=zpby2_minus_yby 
    sty $ff
    lda y1
    sec
    sbc $ff
    sta yd
  //SEG54 [33] if((byte) line::yd#1>=(byte) line::xd#1) goto line::@3 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b3
  //SEG55 line::@17
  //SEG56 [34] (byte) line_xdyi::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG57 [35] (byte) line_xdyi::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ] ) -- zpby1=yby 
    sty line_xdyi.y
  //SEG58 [36] (byte) line_xdyi::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ] ) -- zpby1=zpby2 
    lda x1
    sta line_xdyi.x1
  //SEG59 [37] (byte) line_xdyi::xd#0 ← (byte) line::xd#1 [ line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyi.xd
  //SEG60 [38] (byte) line_xdyi::yd#0 ← (byte) line::yd#1 [ line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyi.yd
  //SEG61 [39] call line_xdyi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG62 [120] phi from line::@17 to line_xdyi [phi:line::@17->line_xdyi]
  //SEG63 [120] phi (byte) line_xdyi::x1#6 = (byte) line_xdyi::x1#0 [phi:line::@17->line_xdyi#0] -- register_copy 
  //SEG64 [120] phi (byte) line_xdyi::xd#5 = (byte) line_xdyi::xd#0 [phi:line::@17->line_xdyi#1] -- register_copy 
  //SEG65 [120] phi (byte) line_xdyi::y#5 = (byte) line_xdyi::y#0 [phi:line::@17->line_xdyi#2] -- register_copy 
  //SEG66 [120] phi (byte) line_xdyi::x#6 = (byte) line_xdyi::x#0 [phi:line::@17->line_xdyi#3] -- register_copy 
  //SEG67 [120] phi (byte) line_xdyi::yd#2 = (byte) line_xdyi::yd#0 [phi:line::@17->line_xdyi#4] -- register_copy 
    jsr line_xdyi
  //SEG68 line::@return
  breturn:
  //SEG69 [40] return  [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
    rts
  //SEG70 line::@3
  b3:
  //SEG71 [41] (byte) line_ydxi::y#0 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ] ) -- zpby1=yby 
    sty line_ydxi.y
  //SEG72 [42] (byte) line_ydxi::x#0 ← (byte) line::x0#0 [ line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG73 [43] (byte) line_ydxi::y1#0 ← (byte) line::y1#0 [ line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxi.y1
  //SEG74 [44] (byte) line_ydxi::yd#0 ← (byte) line::yd#1 [ line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxi.yd
  //SEG75 [45] (byte) line_ydxi::xd#0 ← (byte) line::xd#1 [ line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxi.xd
  //SEG76 [46] call line_ydxi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG77 [91] phi from line::@3 to line_ydxi [phi:line::@3->line_ydxi]
  //SEG78 [91] phi (byte) line_ydxi::y1#6 = (byte) line_ydxi::y1#0 [phi:line::@3->line_ydxi#0] -- register_copy 
  //SEG79 [91] phi (byte) line_ydxi::yd#5 = (byte) line_ydxi::yd#0 [phi:line::@3->line_ydxi#1] -- register_copy 
  //SEG80 [91] phi (byte) line_ydxi::y#6 = (byte) line_ydxi::y#0 [phi:line::@3->line_ydxi#2] -- register_copy 
  //SEG81 [91] phi (byte) line_ydxi::x#5 = (byte) line_ydxi::x#0 [phi:line::@3->line_ydxi#3] -- register_copy 
  //SEG82 [91] phi (byte) line_ydxi::xd#2 = (byte) line_ydxi::xd#0 [phi:line::@3->line_ydxi#4] -- register_copy 
    jsr line_ydxi
    jmp breturn
  //SEG83 line::@2
  b2:
  //SEG84 [47] (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ) -- zpby1=yby_minus_zpby2 
    tya
    sec
    sbc y1
    sta yd
  //SEG85 [48] if((byte) line::yd#0>=(byte) line::xd#1) goto line::@6 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b6
  //SEG86 line::@20
  //SEG87 [49] (byte) line_xdyd::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG88 [50] (byte) line_xdyd::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ] ) -- zpby1=yby 
    sty line_xdyd.y
  //SEG89 [51] (byte) line_xdyd::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ] ) -- zpby1=zpby2 
    lda x1
    sta line_xdyd.x1
  //SEG90 [52] (byte) line_xdyd::xd#0 ← (byte) line::xd#1 [ line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyd.xd
  //SEG91 [53] (byte) line_xdyd::yd#0 ← (byte) line::yd#0 [ line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyd.yd
  //SEG92 [54] call line_xdyd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG93 [150] phi from line::@20 to line_xdyd [phi:line::@20->line_xdyd]
  //SEG94 [150] phi (byte) line_xdyd::x1#6 = (byte) line_xdyd::x1#0 [phi:line::@20->line_xdyd#0] -- register_copy 
  //SEG95 [150] phi (byte) line_xdyd::xd#5 = (byte) line_xdyd::xd#0 [phi:line::@20->line_xdyd#1] -- register_copy 
  //SEG96 [150] phi (byte) line_xdyd::y#5 = (byte) line_xdyd::y#0 [phi:line::@20->line_xdyd#2] -- register_copy 
  //SEG97 [150] phi (byte) line_xdyd::x#6 = (byte) line_xdyd::x#0 [phi:line::@20->line_xdyd#3] -- register_copy 
  //SEG98 [150] phi (byte) line_xdyd::yd#2 = (byte) line_xdyd::yd#0 [phi:line::@20->line_xdyd#4] -- register_copy 
    jsr line_xdyd
    jmp breturn
  //SEG99 line::@6
  b6:
  //SEG100 [55] (byte) line_ydxd::y#0 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxd.y
  //SEG101 [56] (byte) line_ydxd::x#0 ← (byte) line::x1#0 [ line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ] ) -- xby=zpby1 
    ldx x1
  //SEG102 [57] (byte) line_ydxd::y1#0 ← (byte) line::y0#0 [ line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ] ) -- zpby1=yby 
    sty line_ydxd.y1
  //SEG103 [58] (byte) line_ydxd::yd#0 ← (byte) line::yd#0 [ line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxd.yd
  //SEG104 [59] (byte) line_ydxd::xd#0 ← (byte) line::xd#1 [ line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxd.xd
  //SEG105 [60] call line_ydxd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG106 [135] phi from line::@6 to line_ydxd [phi:line::@6->line_ydxd]
  //SEG107 [135] phi (byte) line_ydxd::y1#6 = (byte) line_ydxd::y1#0 [phi:line::@6->line_ydxd#0] -- register_copy 
  //SEG108 [135] phi (byte) line_ydxd::yd#5 = (byte) line_ydxd::yd#0 [phi:line::@6->line_ydxd#1] -- register_copy 
  //SEG109 [135] phi (byte) line_ydxd::y#6 = (byte) line_ydxd::y#0 [phi:line::@6->line_ydxd#2] -- register_copy 
  //SEG110 [135] phi (byte) line_ydxd::x#5 = (byte) line_ydxd::x#0 [phi:line::@6->line_ydxd#3] -- register_copy 
  //SEG111 [135] phi (byte) line_ydxd::xd#2 = (byte) line_ydxd::xd#0 [phi:line::@6->line_ydxd#4] -- register_copy 
    jsr line_ydxd
    jmp breturn
  //SEG112 line::@1
  b1:
  //SEG113 [61] (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ) -- zpby1=zpby2_minus_zpby3 
    lda x0
    sec
    sbc x1
    sta xd
  //SEG114 [62] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@9 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ) -- yby_ge_zpby1_then_la1 
    cpy y1
    bcs b9
  //SEG115 line::@23
  //SEG116 [63] (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ) -- zpby1=zpby2_minus_yby 
    sty $ff
    lda y1
    sec
    sbc $ff
    sta yd
  //SEG117 [64] if((byte) line::yd#3>=(byte) line::xd#0) goto line::@10 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b10
  //SEG118 line::@24
  //SEG119 [65] (byte) line_xdyd::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG120 [66] (byte) line_xdyd::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_xdyd.y
  //SEG121 [67] (byte) line_xdyd::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ] )
    // (byte) line_xdyd::x1#1 = (byte) line::x0#0  // register copy zp ZP_BYTE:5
  //SEG122 [68] (byte) line_xdyd::xd#1 ← (byte) line::xd#0 [ line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyd.xd
  //SEG123 [69] (byte) line_xdyd::yd#1 ← (byte) line::yd#3 [ line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyd.yd
  //SEG124 [70] call line_xdyd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG125 [150] phi from line::@24 to line_xdyd [phi:line::@24->line_xdyd]
  //SEG126 [150] phi (byte) line_xdyd::x1#6 = (byte) line_xdyd::x1#1 [phi:line::@24->line_xdyd#0] -- register_copy 
  //SEG127 [150] phi (byte) line_xdyd::xd#5 = (byte) line_xdyd::xd#1 [phi:line::@24->line_xdyd#1] -- register_copy 
  //SEG128 [150] phi (byte) line_xdyd::y#5 = (byte) line_xdyd::y#1 [phi:line::@24->line_xdyd#2] -- register_copy 
  //SEG129 [150] phi (byte) line_xdyd::x#6 = (byte) line_xdyd::x#1 [phi:line::@24->line_xdyd#3] -- register_copy 
  //SEG130 [150] phi (byte) line_xdyd::yd#2 = (byte) line_xdyd::yd#1 [phi:line::@24->line_xdyd#4] -- register_copy 
    jsr line_xdyd
    jmp breturn
  //SEG131 line::@10
  b10:
  //SEG132 [71] (byte) line_ydxd::y#1 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ] ) -- zpby1=yby 
    sty line_ydxd.y
  //SEG133 [72] (byte) line_ydxd::x#1 ← (byte) line::x0#0 [ line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ] ) -- xby=zpby1 
    ldx x0
  //SEG134 [73] (byte) line_ydxd::y1#1 ← (byte) line::y1#0 [ line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxd.y1
  //SEG135 [74] (byte) line_ydxd::yd#1 ← (byte) line::yd#3 [ line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxd.yd
  //SEG136 [75] (byte) line_ydxd::xd#1 ← (byte) line::xd#0 [ line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxd.xd
  //SEG137 [76] call line_ydxd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG138 [135] phi from line::@10 to line_ydxd [phi:line::@10->line_ydxd]
  //SEG139 [135] phi (byte) line_ydxd::y1#6 = (byte) line_ydxd::y1#1 [phi:line::@10->line_ydxd#0] -- register_copy 
  //SEG140 [135] phi (byte) line_ydxd::yd#5 = (byte) line_ydxd::yd#1 [phi:line::@10->line_ydxd#1] -- register_copy 
  //SEG141 [135] phi (byte) line_ydxd::y#6 = (byte) line_ydxd::y#1 [phi:line::@10->line_ydxd#2] -- register_copy 
  //SEG142 [135] phi (byte) line_ydxd::x#5 = (byte) line_ydxd::x#1 [phi:line::@10->line_ydxd#3] -- register_copy 
  //SEG143 [135] phi (byte) line_ydxd::xd#2 = (byte) line_ydxd::xd#1 [phi:line::@10->line_ydxd#4] -- register_copy 
    jsr line_ydxd
    jmp breturn
  //SEG144 line::@9
  b9:
  //SEG145 [77] (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ) -- zpby1=yby_minus_zpby2 
    tya
    sec
    sbc y1
    sta yd
  //SEG146 [78] if((byte) line::yd#10>=(byte) line::xd#0) goto line::@13 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b13
  //SEG147 line::@27
  //SEG148 [79] (byte) line_xdyi::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG149 [80] (byte) line_xdyi::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_xdyi.y
  //SEG150 [81] (byte) line_xdyi::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ] )
    // (byte) line_xdyi::x1#1 = (byte) line::x0#0  // register copy zp ZP_BYTE:5
  //SEG151 [82] (byte) line_xdyi::xd#1 ← (byte) line::xd#0 [ line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyi.xd
  //SEG152 [83] (byte) line_xdyi::yd#1 ← (byte) line::yd#10 [ line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyi.yd
  //SEG153 [84] call line_xdyi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG154 [120] phi from line::@27 to line_xdyi [phi:line::@27->line_xdyi]
  //SEG155 [120] phi (byte) line_xdyi::x1#6 = (byte) line_xdyi::x1#1 [phi:line::@27->line_xdyi#0] -- register_copy 
  //SEG156 [120] phi (byte) line_xdyi::xd#5 = (byte) line_xdyi::xd#1 [phi:line::@27->line_xdyi#1] -- register_copy 
  //SEG157 [120] phi (byte) line_xdyi::y#5 = (byte) line_xdyi::y#1 [phi:line::@27->line_xdyi#2] -- register_copy 
  //SEG158 [120] phi (byte) line_xdyi::x#6 = (byte) line_xdyi::x#1 [phi:line::@27->line_xdyi#3] -- register_copy 
  //SEG159 [120] phi (byte) line_xdyi::yd#2 = (byte) line_xdyi::yd#1 [phi:line::@27->line_xdyi#4] -- register_copy 
    jsr line_xdyi
    jmp breturn
  //SEG160 line::@13
  b13:
  //SEG161 [85] (byte) line_ydxi::y#1 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxi.y
  //SEG162 [86] (byte) line_ydxi::x#1 ← (byte) line::x1#0 [ line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG163 [87] (byte) line_ydxi::y1#1 ← (byte) line::y0#0 [ line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ] ) -- zpby1=yby 
    sty line_ydxi.y1
  //SEG164 [88] (byte) line_ydxi::yd#1 ← (byte) line::yd#10 [ line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxi.yd
  //SEG165 [89] (byte) line_ydxi::xd#1 ← (byte) line::xd#0 [ line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxi.xd
  //SEG166 [90] call line_ydxi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG167 [91] phi from line::@13 to line_ydxi [phi:line::@13->line_ydxi]
  //SEG168 [91] phi (byte) line_ydxi::y1#6 = (byte) line_ydxi::y1#1 [phi:line::@13->line_ydxi#0] -- register_copy 
  //SEG169 [91] phi (byte) line_ydxi::yd#5 = (byte) line_ydxi::yd#1 [phi:line::@13->line_ydxi#1] -- register_copy 
  //SEG170 [91] phi (byte) line_ydxi::y#6 = (byte) line_ydxi::y#1 [phi:line::@13->line_ydxi#2] -- register_copy 
  //SEG171 [91] phi (byte) line_ydxi::x#5 = (byte) line_ydxi::x#1 [phi:line::@13->line_ydxi#3] -- register_copy 
  //SEG172 [91] phi (byte) line_ydxi::xd#2 = (byte) line_ydxi::xd#1 [phi:line::@13->line_ydxi#4] -- register_copy 
    jsr line_ydxi
    jmp breturn
}
//SEG173 line_ydxi
line_ydxi: {
    .label y = 6
    .label y1 = 5
    .label yd = 4
    .label xd = 3
    .label e = 7
  //SEG174 [92] (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda xd
    lsr
    sta e
  //SEG175 [93] phi from line_ydxi line_ydxi::@2 to line_ydxi::@1 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1]
  //SEG176 [93] phi (byte) line_ydxi::e#3 = (byte) line_ydxi::e#0 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#0] -- register_copy 
  //SEG177 [93] phi (byte) line_ydxi::y#3 = (byte) line_ydxi::y#6 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#1] -- register_copy 
  //SEG178 [93] phi (byte) line_ydxi::x#3 = (byte) line_ydxi::x#5 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#2] -- register_copy 
  //SEG179 line_ydxi::@1
  b1:
  //SEG180 [94] (byte) plot::x#2 ← (byte) line_ydxi::x#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] )
    // (byte) plot::x#2 = (byte) line_ydxi::x#3  // register copy reg byte x
  //SEG181 [95] (byte) plot::y#2 ← (byte) line_ydxi::y#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] ) -- yby=zpby1 
    ldy y
  //SEG182 [96] call plot param-assignment [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] )
  //SEG183 [106] phi from line_ydxi::@1 to plot [phi:line_ydxi::@1->plot]
  //SEG184 [106] phi (byte) plot::y#4 = (byte) plot::y#2 [phi:line_ydxi::@1->plot#0] -- register_copy 
  //SEG185 [106] phi (byte) plot::x#4 = (byte) plot::x#2 [phi:line_ydxi::@1->plot#1] -- register_copy 
    jsr plot
  //SEG186 line_ydxi::@5
  //SEG187 [97] (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG188 [98] (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc xd
    sta e
  //SEG189 [99] if((byte) line_ydxi::yd#5>=(byte) line_ydxi::e#1) goto line_ydxi::@2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp e
    bcs b2
  //SEG190 line_ydxi::@3
  //SEG191 [100] (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG192 [101] (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc yd
    sta e
  //SEG193 [102] phi from line_ydxi::@3 line_ydxi::@5 to line_ydxi::@2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2]
  //SEG194 [102] phi (byte) line_ydxi::e#6 = (byte) line_ydxi::e#2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2#0] -- register_copy 
  //SEG195 [102] phi (byte) line_ydxi::x#6 = (byte) line_ydxi::x#2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2#1] -- register_copy 
  //SEG196 line_ydxi::@2
  b2:
  //SEG197 [103] (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] ) -- aby=zpby1_plus_1 
    lda y1
    clc
    adc #1
  //SEG198 [104] if((byte) line_ydxi::y#2<(byte~) line_ydxi::$8) goto line_ydxi::@1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] ) -- zpby1_lt_aby_then_la1 
    cmp y
    bcs b1
  //SEG199 line_ydxi::@return
  //SEG200 [105] return  [ ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 ] )
    rts
}
//SEG201 plot
plot: {
    .label plotter_x = 8
    .label plotter_y = $b
    .label plotter = 8
  //SEG202 [107] (byte~) plot::$0 ← (const byte[]) plot_xhi#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::$0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::$0 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_xhi,x
  //SEG203 [108] (byte*) plot::plotter_x#1 ← ((byte*))(byte/signed byte/word/signed word) 0 hi= (byte~) plot::$0 [ plot::x#4 plot::y#4 plot::plotter_x#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] ) -- zpptrby1=cowo1_sethi_aby 
    sta plotter_x+1
    lda #<0
    sta plotter_x
  //SEG204 [109] (byte~) plot::$1 ← (const byte[]) plot_xlo#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_xlo,x
  //SEG205 [110] (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1 [ plot::x#4 plot::y#4 plot::plotter_x#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] ) -- zpptrby1=zpptrby1_setlo_aby 
    sta plotter_x
  //SEG206 [111] (byte~) plot::$2 ← (const byte[]) plot_yhi#0 *idx (byte) plot::y#4 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] ) -- aby=cowo1_derefidx_yby 
    lda plot_yhi,y
  //SEG207 [112] (word) plot::plotter_y#1 ← (byte/signed byte/word/signed word) 0 hi= (byte~) plot::$2 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] ) -- zpwo1=coby1_sethi_aby 
    sta plotter_y+1
    lda #<0
    sta plotter_y
  //SEG208 [113] (byte~) plot::$3 ← (const byte[]) plot_ylo#0 *idx (byte) plot::y#4 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] ) -- aby=cowo1_derefidx_yby 
    lda plot_ylo,y
  //SEG209 [114] (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ) -- zpwo1=zpwo1_setlo_aby 
    sta plotter_y
  //SEG210 [115] (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2 [ plot::x#4 plot::plotter#0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] ) -- zpptrby1=zpptrby1_plus_zpwo1 
    lda plotter
    clc
    adc plotter_y
    sta plotter
    lda plotter+1
    adc plotter_y+1
    sta plotter+1
  //SEG211 [116] (byte~) plot::$5 ← (const byte[]) plot_bit#0 *idx (byte) plot::x#4 [ plot::plotter#0 plot::$5 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$5 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_bit,x
  //SEG212 [117] (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5 [ plot::plotter#0 plot::$6 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] ) -- aby=_deref_zpptrby1_bor_aby 
    ldy #0
    ora (plotter),y
  //SEG213 [118] *((byte*) plot::plotter#0) ← (byte~) plot::$6 [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ) -- _deref_zpptrby1=aby 
    sta (plotter),y
  //SEG214 plot::@return
  //SEG215 [119] return  [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
    rts
}
//SEG216 line_xdyi
line_xdyi: {
    .label _8 = $a
    .label y = 6
    .label x1 = 5
    .label xd = 4
    .label yd = 3
    .label e = 7
  //SEG217 [121] (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda yd
    lsr
    sta e
  //SEG218 [122] phi from line_xdyi line_xdyi::@2 to line_xdyi::@1 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1]
  //SEG219 [122] phi (byte) line_xdyi::e#3 = (byte) line_xdyi::e#0 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#0] -- register_copy 
  //SEG220 [122] phi (byte) line_xdyi::y#3 = (byte) line_xdyi::y#5 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#1] -- register_copy 
  //SEG221 [122] phi (byte) line_xdyi::x#3 = (byte) line_xdyi::x#6 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#2] -- register_copy 
  //SEG222 line_xdyi::@1
  b1:
  //SEG223 [123] (byte) plot::x#0 ← (byte) line_xdyi::x#3 [ plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
    // (byte) plot::x#0 = (byte) line_xdyi::x#3  // register copy reg byte x
  //SEG224 [124] (byte) plot::y#0 ← (byte) line_xdyi::y#3 [ plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG225 [125] call plot param-assignment [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
  //SEG226 [106] phi from line_xdyi::@1 to plot [phi:line_xdyi::@1->plot]
  //SEG227 [106] phi (byte) plot::y#4 = (byte) plot::y#0 [phi:line_xdyi::@1->plot#0] -- register_copy 
  //SEG228 [106] phi (byte) plot::x#4 = (byte) plot::x#0 [phi:line_xdyi::@1->plot#1] -- register_copy 
    jsr plot
  //SEG229 line_xdyi::@5
  //SEG230 [126] (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG231 [127] (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc yd
    sta e
  //SEG232 [128] if((byte) line_xdyi::xd#5>=(byte) line_xdyi::e#1) goto line_xdyi::@2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda xd
    cmp e
    bcs b2
  //SEG233 line_xdyi::@3
  //SEG234 [129] (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG235 [130] (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc xd
    sta e
  //SEG236 [131] phi from line_xdyi::@3 line_xdyi::@5 to line_xdyi::@2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2]
  //SEG237 [131] phi (byte) line_xdyi::e#6 = (byte) line_xdyi::e#2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2#0] -- register_copy 
  //SEG238 [131] phi (byte) line_xdyi::y#6 = (byte) line_xdyi::y#2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2#1] -- register_copy 
  //SEG239 line_xdyi::@2
  b2:
  //SEG240 [132] (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] ) -- zpby1=zpby2_plus_1 
    lda x1
    clc
    adc #1
    sta _8
  //SEG241 [133] if((byte) line_xdyi::x#2<(byte~) line_xdyi::$8) goto line_xdyi::@1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] ) -- xby_lt_zpby1_then_la1 
    cpx _8
    bcc b1
  //SEG242 line_xdyi::@return
  //SEG243 [134] return  [ ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 ] )
    rts
}
//SEG244 line_ydxd
line_ydxd: {
    .label y = 6
    .label y1 = 5
    .label yd = 4
    .label xd = 3
    .label e = 7
  //SEG245 [136] (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda xd
    lsr
    sta e
  //SEG246 [137] phi from line_ydxd line_ydxd::@2 to line_ydxd::@1 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1]
  //SEG247 [137] phi (byte) line_ydxd::e#3 = (byte) line_ydxd::e#0 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#0] -- register_copy 
  //SEG248 [137] phi (byte) line_ydxd::y#3 = (byte) line_ydxd::y#6 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#1] -- register_copy 
  //SEG249 [137] phi (byte) line_ydxd::x#3 = (byte) line_ydxd::x#5 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#2] -- register_copy 
  //SEG250 line_ydxd::@1
  b1:
  //SEG251 [138] (byte) plot::x#3 ← (byte) line_ydxd::x#3 [ plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
    // (byte) plot::x#3 = (byte) line_ydxd::x#3  // register copy reg byte x
  //SEG252 [139] (byte) plot::y#3 ← (byte) line_ydxd::y#3 [ plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG253 [140] call plot param-assignment [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
  //SEG254 [106] phi from line_ydxd::@1 to plot [phi:line_ydxd::@1->plot]
  //SEG255 [106] phi (byte) plot::y#4 = (byte) plot::y#3 [phi:line_ydxd::@1->plot#0] -- register_copy 
  //SEG256 [106] phi (byte) plot::x#4 = (byte) plot::x#3 [phi:line_ydxd::@1->plot#1] -- register_copy 
    jsr plot
  //SEG257 line_ydxd::@5
  //SEG258 [141] (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG259 [142] (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc xd
    sta e
  //SEG260 [143] if((byte) line_ydxd::yd#5>=(byte) line_ydxd::e#1) goto line_ydxd::@2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp e
    bcs b2
  //SEG261 line_ydxd::@3
  //SEG262 [144] (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] ) -- xby=xby_minus_1 
    dex
  //SEG263 [145] (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc yd
    sta e
  //SEG264 [146] phi from line_ydxd::@3 line_ydxd::@5 to line_ydxd::@2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2]
  //SEG265 [146] phi (byte) line_ydxd::e#6 = (byte) line_ydxd::e#2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2#0] -- register_copy 
  //SEG266 [146] phi (byte) line_ydxd::x#6 = (byte) line_ydxd::x#2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2#1] -- register_copy 
  //SEG267 line_ydxd::@2
  b2:
  //SEG268 [147] (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] ) -- aby=zpby1_plus_1 
    lda y1
    clc
    adc #1
  //SEG269 [148] if((byte) line_ydxd::y#2<(byte~) line_ydxd::$8) goto line_ydxd::@1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] ) -- zpby1_lt_aby_then_la1 
    cmp y
    bcs b1
  //SEG270 line_ydxd::@return
  //SEG271 [149] return  [ ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 ] )
    rts
}
//SEG272 line_xdyd
line_xdyd: {
    .label _8 = $a
    .label y = 6
    .label x1 = 5
    .label xd = 4
    .label yd = 3
    .label e = 7
  //SEG273 [151] (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda yd
    lsr
    sta e
  //SEG274 [152] phi from line_xdyd line_xdyd::@2 to line_xdyd::@1 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1]
  //SEG275 [152] phi (byte) line_xdyd::e#3 = (byte) line_xdyd::e#0 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#0] -- register_copy 
  //SEG276 [152] phi (byte) line_xdyd::y#3 = (byte) line_xdyd::y#5 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#1] -- register_copy 
  //SEG277 [152] phi (byte) line_xdyd::x#3 = (byte) line_xdyd::x#6 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#2] -- register_copy 
  //SEG278 line_xdyd::@1
  b1:
  //SEG279 [153] (byte) plot::x#1 ← (byte) line_xdyd::x#3 [ plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
    // (byte) plot::x#1 = (byte) line_xdyd::x#3  // register copy reg byte x
  //SEG280 [154] (byte) plot::y#1 ← (byte) line_xdyd::y#3 [ plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG281 [155] call plot param-assignment [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
  //SEG282 [106] phi from line_xdyd::@1 to plot [phi:line_xdyd::@1->plot]
  //SEG283 [106] phi (byte) plot::y#4 = (byte) plot::y#1 [phi:line_xdyd::@1->plot#0] -- register_copy 
  //SEG284 [106] phi (byte) plot::x#4 = (byte) plot::x#1 [phi:line_xdyd::@1->plot#1] -- register_copy 
    jsr plot
  //SEG285 line_xdyd::@5
  //SEG286 [156] (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG287 [157] (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc yd
    sta e
  //SEG288 [158] if((byte) line_xdyd::xd#5>=(byte) line_xdyd::e#1) goto line_xdyd::@2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda xd
    cmp e
    bcs b2
  //SEG289 line_xdyd::@3
  //SEG290 [159] (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] ) -- zpby1=zpby1_minus_1 
    dec y
  //SEG291 [160] (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc xd
    sta e
  //SEG292 [161] phi from line_xdyd::@3 line_xdyd::@5 to line_xdyd::@2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2]
  //SEG293 [161] phi (byte) line_xdyd::e#6 = (byte) line_xdyd::e#2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2#0] -- register_copy 
  //SEG294 [161] phi (byte) line_xdyd::y#6 = (byte) line_xdyd::y#2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2#1] -- register_copy 
  //SEG295 line_xdyd::@2
  b2:
  //SEG296 [162] (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] ) -- zpby1=zpby2_plus_1 
    lda x1
    clc
    adc #1
    sta _8
  //SEG297 [163] if((byte) line_xdyd::x#2<(byte~) line_xdyd::$8) goto line_xdyd::@1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] ) -- xby_lt_zpby1_then_la1 
    cpx _8
    bcc b1
  //SEG298 line_xdyd::@return
  //SEG299 [164] return  [ ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 ] )
    rts
}
//SEG300 init_plot_tables
init_plot_tables: {
    .label _6 = 2
    .label yoffs = 8
  //SEG301 [166] phi from init_plot_tables to init_plot_tables::@1 [phi:init_plot_tables->init_plot_tables::@1]
  //SEG302 [166] phi (byte) init_plot_tables::bits#3 = (byte/word/signed word) 128 [phi:init_plot_tables->init_plot_tables::@1#0] -- yby=coby1 
    ldy #$80
  //SEG303 [166] phi (byte) init_plot_tables::x#2 = (byte/signed byte/word/signed word) 0 [phi:init_plot_tables->init_plot_tables::@1#1] -- xby=coby1 
    ldx #0
    jmp b1
  //SEG304 [166] phi from init_plot_tables::@2 to init_plot_tables::@1 [phi:init_plot_tables::@2->init_plot_tables::@1]
  //SEG305 [166] phi (byte) init_plot_tables::bits#3 = (byte) init_plot_tables::bits#4 [phi:init_plot_tables::@2->init_plot_tables::@1#0] -- register_copy 
  //SEG306 [166] phi (byte) init_plot_tables::x#2 = (byte) init_plot_tables::x#1 [phi:init_plot_tables::@2->init_plot_tables::@1#1] -- register_copy 
  //SEG307 init_plot_tables::@1
  b1:
  //SEG308 [167] (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ) -- aby=xby_band_coby1 
    txa
    and #$f8
  //SEG309 [168] *((const byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_xlo,x
  //SEG310 [169] *((const byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← >(const byte*) BITMAP#0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=coby2 
    lda #>BITMAP
    sta plot_xhi,x
  //SEG311 [170] *((const byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=yby 
    tya
    sta plot_bit,x
  //SEG312 [171] (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ) -- yby=yby_ror_1 
    tya
    lsr
    tay
  //SEG313 [172] if((byte) init_plot_tables::bits#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ) -- yby_neq_0_then_la1 
    cpy #0
    bne b2
  //SEG314 [173] phi from init_plot_tables::@1 to init_plot_tables::@2 [phi:init_plot_tables::@1->init_plot_tables::@2]
  //SEG315 [173] phi (byte) init_plot_tables::bits#4 = (byte/word/signed word) 128 [phi:init_plot_tables::@1->init_plot_tables::@2#0] -- yby=coby1 
    ldy #$80
  //SEG316 init_plot_tables::@2
  b2:
  //SEG317 [174] (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ) -- xby=_inc_xby 
    inx
  //SEG318 [175] if((byte) init_plot_tables::x#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@1 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ) -- xby_neq_0_then_la1 
    cpx #0
    bne b1
  //SEG319 [176] phi from init_plot_tables::@2 to init_plot_tables::@3 [phi:init_plot_tables::@2->init_plot_tables::@3]
  //SEG320 [176] phi (byte*) init_plot_tables::yoffs#2 = ((byte*))(byte/signed byte/word/signed word) 0 [phi:init_plot_tables::@2->init_plot_tables::@3#0] -- zpptrby1=cowo1 
    lda #<0
    sta yoffs
    sta yoffs+1
  //SEG321 [176] phi (byte) init_plot_tables::y#2 = (byte/signed byte/word/signed word) 0 [phi:init_plot_tables::@2->init_plot_tables::@3#1] -- xby=coby1 
    tax
    jmp b3
  //SEG322 [176] phi from init_plot_tables::@4 to init_plot_tables::@3 [phi:init_plot_tables::@4->init_plot_tables::@3]
  //SEG323 [176] phi (byte*) init_plot_tables::yoffs#2 = (byte*) init_plot_tables::yoffs#4 [phi:init_plot_tables::@4->init_plot_tables::@3#0] -- register_copy 
  //SEG324 [176] phi (byte) init_plot_tables::y#2 = (byte) init_plot_tables::y#1 [phi:init_plot_tables::@4->init_plot_tables::@3#1] -- register_copy 
  //SEG325 init_plot_tables::@3
  b3:
  //SEG326 [177] (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ) -- zpby1=xby_band_coby1 
    txa
    and #7
    sta _6
  //SEG327 [178] (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ] ) -- aby=_lo_zpptrby1 
    lda yoffs
  //SEG328 [179] (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ] ) -- aby=zpby1_bor_aby 
    ora _6
  //SEG329 [180] *((const byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_ylo,x
  //SEG330 [181] (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ) -- aby=_hi_zpptrby1 
    lda yoffs+1
  //SEG331 [182] *((const byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_yhi,x
  //SEG332 [183] (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ) -- aby=xby_band_coby1 
    txa
    and #7
  //SEG333 [184] if((byte~) init_plot_tables::$10!=(byte/signed byte/word/signed word) 7) goto init_plot_tables::@4 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- aby_neq_coby1_then_la1 
    cmp #7
    bne b4
  //SEG334 init_plot_tables::@7
  //SEG335 [185] (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ) -- zpptrby1=zpptrby1_plus_cowo1 
    lda yoffs
    clc
    adc #<$140
    sta yoffs
    lda yoffs+1
    adc #>$140
    sta yoffs+1
  //SEG336 [186] phi from init_plot_tables::@3 init_plot_tables::@7 to init_plot_tables::@4 [phi:init_plot_tables::@3/init_plot_tables::@7->init_plot_tables::@4]
  //SEG337 [186] phi (byte*) init_plot_tables::yoffs#4 = (byte*) init_plot_tables::yoffs#2 [phi:init_plot_tables::@3/init_plot_tables::@7->init_plot_tables::@4#0] -- register_copy 
  //SEG338 init_plot_tables::@4
  b4:
  //SEG339 [187] (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ) -- xby=_inc_xby 
    inx
  //SEG340 [188] if((byte) init_plot_tables::y#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@3 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ) -- xby_neq_0_then_la1 
    cpx #0
    bne b3
  //SEG341 init_plot_tables::@return
  //SEG342 [189] return  [ ] ( main:2::init_plot_tables:10 [ ] )
    rts
  //SEG343 [190] phi from init_plot_tables::@1 to init_plot_tables::@10 [phi:init_plot_tables::@1->init_plot_tables::@10]
  //SEG344 init_plot_tables::@10
  b10:
  //SEG345 [173] phi from init_plot_tables::@10 to init_plot_tables::@2 [phi:init_plot_tables::@10->init_plot_tables::@2]
  //SEG346 [173] phi (byte) init_plot_tables::bits#4 = (byte) init_plot_tables::bits#1 [phi:init_plot_tables::@10->init_plot_tables::@2#0] -- register_copy 
    jmp b2
}
//SEG347 init_screen
init_screen: {
    .label b = 8
    .label c = 8
  //SEG348 [192] phi from init_screen to init_screen::@1 [phi:init_screen->init_screen::@1]
  //SEG349 [192] phi (byte*) init_screen::b#2 = (const byte*) BITMAP#0 [phi:init_screen->init_screen::@1#0] -- zpptrby1=cowo1 
    lda #<BITMAP
    sta b
    lda #>BITMAP
    sta b+1
    jmp b1
  //SEG350 [192] phi from init_screen::@1 to init_screen::@1 [phi:init_screen::@1->init_screen::@1]
  //SEG351 [192] phi (byte*) init_screen::b#2 = (byte*) init_screen::b#1 [phi:init_screen::@1->init_screen::@1#0] -- register_copy 
  //SEG352 init_screen::@1
  b1:
  //SEG353 [193] *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0 [ init_screen::b#2 ] ( main:2::init_screen:8 [ init_screen::b#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    tya
    sta (b),y
  //SEG354 [194] (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc b
    bne !+
    inc b+1
  !:
  //SEG355 [195] if((byte*) init_screen::b#1!=(const byte*) BITMAP#0+(word/signed word) 8192) goto init_screen::@1 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] ) -- zpptrby1_neq_cowo1_then_la1 
    lda b+1
    cmp #>BITMAP+$2000
    bne b1
    lda b
    cmp #<BITMAP+$2000
    bne b1
  //SEG356 [196] phi from init_screen::@1 to init_screen::@2 [phi:init_screen::@1->init_screen::@2]
  //SEG357 [196] phi (byte*) init_screen::c#2 = (const byte*) SCREEN#0 [phi:init_screen::@1->init_screen::@2#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta c
    lda #>SCREEN
    sta c+1
    jmp b2
  //SEG358 [196] phi from init_screen::@2 to init_screen::@2 [phi:init_screen::@2->init_screen::@2]
  //SEG359 [196] phi (byte*) init_screen::c#2 = (byte*) init_screen::c#1 [phi:init_screen::@2->init_screen::@2#0] -- register_copy 
  //SEG360 init_screen::@2
  b2:
  //SEG361 [197] *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20 [ init_screen::c#2 ] ( main:2::init_screen:8 [ init_screen::c#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #$14
    sta (c),y
  //SEG362 [198] (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc c
    bne !+
    inc c+1
  !:
  //SEG363 [199] if((byte*) init_screen::c#1!=(const byte*) SCREEN#0+(word/signed word) 1024) goto init_screen::@2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] ) -- zpptrby1_neq_cowo1_then_la1 
    lda c+1
    cmp #>SCREEN+$400
    bne b2
    lda c
    cmp #<SCREEN+$400
    bne b2
  //SEG364 init_screen::@return
  //SEG365 [200] return  [ ] ( main:2::init_screen:8 [ ] )
    rts
}

Removing instruction jmp b1
Removing instruction jmp b1
Removing instruction jmp b3
Removing instruction jmp b1
Removing instruction jmp b2
Succesful ASM optimization Pass5NextJumpElimination
ASSEMBLER
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const BGCOL = $d020
  .const FGCOL = $d021
  .const D018 = $d018
  .const D011 = $d011
  .const BMM = $20
  .const DEN = $10
  .const RSEL = 8
  .const SCREEN = $400
  .const BITMAP = $2000
  .const plot_xlo = $1000
  .const plot_xhi = $1100
  .const plot_ylo = $1200
  .const plot_yhi = $1300
  .const plot_bit = $1400
  .const lines_cnt = 8
  lines_x: .byte $3c, $50, $6e, $50, $3c, $28, $a, $28, $3c
  lines_y: .byte $a, $28, $3c, $50, $6e, $50, $3c, $28, $a
//SEG2 @begin
//SEG3 [1] phi from @begin to @10 [phi:@begin->@10]
//SEG4 @10
//SEG5 [2] call main param-assignment [ ] ( )
  jsr main
//SEG6 [3] phi from @10 to @end [phi:@10->@end]
//SEG7 @end
//SEG8 main
main: {
  //SEG9 [4] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #0
    sta BGCOL
  //SEG10 [5] *((const byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    sta FGCOL
  //SEG11 [6] *((const byte*) D011#0) ← (const byte) BMM#0|(const byte) DEN#0|(const byte) RSEL#0|(byte/signed byte/word/signed word) 3 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #BMM|DEN|RSEL|3
    sta D011
  //SEG12 [7] *((const byte*) D018#0) ← (byte/signed byte/word/signed word) 24 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #$18
    sta D018
  //SEG13 [8] call init_screen param-assignment [ ] ( main:2 [ ] )
  //SEG14 [191] phi from main to init_screen [phi:main->init_screen]
    jsr init_screen
  //SEG15 [9] phi from main to main::@3 [phi:main->main::@3]
  //SEG16 main::@3
  //SEG17 [10] call init_plot_tables param-assignment [ ] ( main:2 [ ] )
  //SEG18 [165] phi from main::@3 to init_plot_tables [phi:main::@3->init_plot_tables]
    jsr init_plot_tables
  //SEG19 [11] phi from main::@3 main::@5 to main::@1 [phi:main::@3/main::@5->main::@1]
  //SEG20 main::@1
  b1:
  //SEG21 [12] call lines param-assignment [ ] ( main:2 [ ] )
  //SEG22 [15] phi from main::@1 to lines [phi:main::@1->lines]
    jsr lines
  //SEG23 main::@5
  //SEG24 [13] if(true) goto main::@1 [ ] ( main:2 [ ] ) -- true_then_la1 
    jmp b1
  //SEG25 main::@return
  //SEG26 [14] return  [ ] ( main:2 [ ] )
}
//SEG27 lines
lines: {
    .label _2 = 3
    .label _3 = 4
    .label l = 2
  //SEG28 [16] phi from lines to lines::@1 [phi:lines->lines::@1]
  //SEG29 [16] phi (byte) lines::l#2 = (byte/signed byte/word/signed word) 0 [phi:lines->lines::@1#0] -- zpby1=coby1 
    lda #0
    sta l
  //SEG30 [16] phi from lines::@3 to lines::@1 [phi:lines::@3->lines::@1]
  //SEG31 [16] phi (byte) lines::l#2 = (byte) lines::l#1 [phi:lines::@3->lines::@1#0] -- register_copy 
  //SEG32 lines::@1
  b1:
  //SEG33 [17] (byte~) lines::$0 ← (const byte[]) lines_x#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 ] ( main:2::lines:12 [ lines::l#2 lines::$0 ] ) -- yby=cowo1_derefidx_zpby1 
    ldx l
    lda lines_x,x
    tay
  //SEG34 [18] (byte~) lines::$2 ← (const byte[]) lines_x#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx l
    lda lines_x+1,x
    sta _2
  //SEG35 [19] (byte~) lines::$3 ← (const byte[]) lines_y#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 lines::$3 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx l
    lda lines_y,x
    sta _3
  //SEG36 [20] (byte~) lines::$5 ← (const byte[]) lines_y#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ] ) -- xby=cowo1_derefidx_zpby1 
    ldx l
    lda lines_y+1,x
    tax
  //SEG37 [21] (byte) line::x0#0 ← (byte~) lines::$0 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ] ( main:2::lines:12 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ] ) -- zpby1=yby 
    sty line.x0
  //SEG38 [22] (byte) line::x1#0 ← (byte~) lines::$2 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ] ( main:2::lines:12 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ] )
    // (byte) line::x1#0 = (byte~) lines::$2  // register copy zp ZP_BYTE:3
  //SEG39 [23] (byte) line::y0#0 ← (byte~) lines::$3 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ] ( main:2::lines:12 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ] ) -- yby=zpby1 
    ldy _3
  //SEG40 [24] (byte) line::y1#0 ← (byte~) lines::$5 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ( main:2::lines:12 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ) -- zpby1=xby 
    stx line.y1
  //SEG41 [25] call line param-assignment [ lines::l#2 ] ( main:2::lines:12 [ lines::l#2 ] )
    jsr line
  //SEG42 lines::@3
  //SEG43 [26] (byte) lines::l#1 ← ++ (byte) lines::l#2 [ lines::l#1 ] ( main:2::lines:12 [ lines::l#1 ] ) -- zpby1=_inc_zpby1 
    inc l
  //SEG44 [27] if((byte) lines::l#1<(const byte) lines_cnt#0) goto lines::@1 [ lines::l#1 ] ( main:2::lines:12 [ lines::l#1 ] ) -- zpby1_lt_coby1_then_la1 
    lda l
    cmp #lines_cnt
    bcc b1
  //SEG45 lines::@return
  //SEG46 [28] return  [ ] ( main:2::lines:12 [ ] )
    rts
}
//SEG47 line
line: {
    .label x0 = 5
    .label x1 = 3
    .label y1 = 4
    .label xd = 7
    .label yd = $a
  //SEG48 [29] if((byte) line::x0#0>=(byte) line::x1#0) goto line::@1 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ) -- zpby1_ge_zpby2_then_la1 
    lda x0
    cmp x1
    bcs b1
  //SEG49 line::@15
  //SEG50 [30] (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ) -- zpby1=zpby2_minus_zpby3 
    lda x1
    sec
    sbc x0
    sta xd
  //SEG51 [31] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@2 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ) -- yby_ge_zpby1_then_la1 
    cpy y1
    bcs b2
  //SEG52 line::@16
  //SEG53 [32] (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ) -- zpby1=zpby2_minus_yby 
    sty $ff
    lda y1
    sec
    sbc $ff
    sta yd
  //SEG54 [33] if((byte) line::yd#1>=(byte) line::xd#1) goto line::@3 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b3
  //SEG55 line::@17
  //SEG56 [34] (byte) line_xdyi::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG57 [35] (byte) line_xdyi::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ] ) -- zpby1=yby 
    sty line_xdyi.y
  //SEG58 [36] (byte) line_xdyi::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ] ) -- zpby1=zpby2 
    lda x1
    sta line_xdyi.x1
  //SEG59 [37] (byte) line_xdyi::xd#0 ← (byte) line::xd#1 [ line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyi.xd
  //SEG60 [38] (byte) line_xdyi::yd#0 ← (byte) line::yd#1 [ line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyi.yd
  //SEG61 [39] call line_xdyi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG62 [120] phi from line::@17 to line_xdyi [phi:line::@17->line_xdyi]
  //SEG63 [120] phi (byte) line_xdyi::x1#6 = (byte) line_xdyi::x1#0 [phi:line::@17->line_xdyi#0] -- register_copy 
  //SEG64 [120] phi (byte) line_xdyi::xd#5 = (byte) line_xdyi::xd#0 [phi:line::@17->line_xdyi#1] -- register_copy 
  //SEG65 [120] phi (byte) line_xdyi::y#5 = (byte) line_xdyi::y#0 [phi:line::@17->line_xdyi#2] -- register_copy 
  //SEG66 [120] phi (byte) line_xdyi::x#6 = (byte) line_xdyi::x#0 [phi:line::@17->line_xdyi#3] -- register_copy 
  //SEG67 [120] phi (byte) line_xdyi::yd#2 = (byte) line_xdyi::yd#0 [phi:line::@17->line_xdyi#4] -- register_copy 
    jsr line_xdyi
  //SEG68 line::@return
  breturn:
  //SEG69 [40] return  [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
    rts
  //SEG70 line::@3
  b3:
  //SEG71 [41] (byte) line_ydxi::y#0 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ] ) -- zpby1=yby 
    sty line_ydxi.y
  //SEG72 [42] (byte) line_ydxi::x#0 ← (byte) line::x0#0 [ line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG73 [43] (byte) line_ydxi::y1#0 ← (byte) line::y1#0 [ line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxi.y1
  //SEG74 [44] (byte) line_ydxi::yd#0 ← (byte) line::yd#1 [ line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxi.yd
  //SEG75 [45] (byte) line_ydxi::xd#0 ← (byte) line::xd#1 [ line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxi.xd
  //SEG76 [46] call line_ydxi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG77 [91] phi from line::@3 to line_ydxi [phi:line::@3->line_ydxi]
  //SEG78 [91] phi (byte) line_ydxi::y1#6 = (byte) line_ydxi::y1#0 [phi:line::@3->line_ydxi#0] -- register_copy 
  //SEG79 [91] phi (byte) line_ydxi::yd#5 = (byte) line_ydxi::yd#0 [phi:line::@3->line_ydxi#1] -- register_copy 
  //SEG80 [91] phi (byte) line_ydxi::y#6 = (byte) line_ydxi::y#0 [phi:line::@3->line_ydxi#2] -- register_copy 
  //SEG81 [91] phi (byte) line_ydxi::x#5 = (byte) line_ydxi::x#0 [phi:line::@3->line_ydxi#3] -- register_copy 
  //SEG82 [91] phi (byte) line_ydxi::xd#2 = (byte) line_ydxi::xd#0 [phi:line::@3->line_ydxi#4] -- register_copy 
    jsr line_ydxi
    jmp breturn
  //SEG83 line::@2
  b2:
  //SEG84 [47] (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ) -- zpby1=yby_minus_zpby2 
    tya
    sec
    sbc y1
    sta yd
  //SEG85 [48] if((byte) line::yd#0>=(byte) line::xd#1) goto line::@6 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b6
  //SEG86 line::@20
  //SEG87 [49] (byte) line_xdyd::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG88 [50] (byte) line_xdyd::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ] ) -- zpby1=yby 
    sty line_xdyd.y
  //SEG89 [51] (byte) line_xdyd::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ] ) -- zpby1=zpby2 
    lda x1
    sta line_xdyd.x1
  //SEG90 [52] (byte) line_xdyd::xd#0 ← (byte) line::xd#1 [ line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyd.xd
  //SEG91 [53] (byte) line_xdyd::yd#0 ← (byte) line::yd#0 [ line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyd.yd
  //SEG92 [54] call line_xdyd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG93 [150] phi from line::@20 to line_xdyd [phi:line::@20->line_xdyd]
  //SEG94 [150] phi (byte) line_xdyd::x1#6 = (byte) line_xdyd::x1#0 [phi:line::@20->line_xdyd#0] -- register_copy 
  //SEG95 [150] phi (byte) line_xdyd::xd#5 = (byte) line_xdyd::xd#0 [phi:line::@20->line_xdyd#1] -- register_copy 
  //SEG96 [150] phi (byte) line_xdyd::y#5 = (byte) line_xdyd::y#0 [phi:line::@20->line_xdyd#2] -- register_copy 
  //SEG97 [150] phi (byte) line_xdyd::x#6 = (byte) line_xdyd::x#0 [phi:line::@20->line_xdyd#3] -- register_copy 
  //SEG98 [150] phi (byte) line_xdyd::yd#2 = (byte) line_xdyd::yd#0 [phi:line::@20->line_xdyd#4] -- register_copy 
    jsr line_xdyd
    jmp breturn
  //SEG99 line::@6
  b6:
  //SEG100 [55] (byte) line_ydxd::y#0 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxd.y
  //SEG101 [56] (byte) line_ydxd::x#0 ← (byte) line::x1#0 [ line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ] ) -- xby=zpby1 
    ldx x1
  //SEG102 [57] (byte) line_ydxd::y1#0 ← (byte) line::y0#0 [ line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ] ) -- zpby1=yby 
    sty line_ydxd.y1
  //SEG103 [58] (byte) line_ydxd::yd#0 ← (byte) line::yd#0 [ line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxd.yd
  //SEG104 [59] (byte) line_ydxd::xd#0 ← (byte) line::xd#1 [ line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxd.xd
  //SEG105 [60] call line_ydxd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG106 [135] phi from line::@6 to line_ydxd [phi:line::@6->line_ydxd]
  //SEG107 [135] phi (byte) line_ydxd::y1#6 = (byte) line_ydxd::y1#0 [phi:line::@6->line_ydxd#0] -- register_copy 
  //SEG108 [135] phi (byte) line_ydxd::yd#5 = (byte) line_ydxd::yd#0 [phi:line::@6->line_ydxd#1] -- register_copy 
  //SEG109 [135] phi (byte) line_ydxd::y#6 = (byte) line_ydxd::y#0 [phi:line::@6->line_ydxd#2] -- register_copy 
  //SEG110 [135] phi (byte) line_ydxd::x#5 = (byte) line_ydxd::x#0 [phi:line::@6->line_ydxd#3] -- register_copy 
  //SEG111 [135] phi (byte) line_ydxd::xd#2 = (byte) line_ydxd::xd#0 [phi:line::@6->line_ydxd#4] -- register_copy 
    jsr line_ydxd
    jmp breturn
  //SEG112 line::@1
  b1:
  //SEG113 [61] (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ) -- zpby1=zpby2_minus_zpby3 
    lda x0
    sec
    sbc x1
    sta xd
  //SEG114 [62] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@9 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ) -- yby_ge_zpby1_then_la1 
    cpy y1
    bcs b9
  //SEG115 line::@23
  //SEG116 [63] (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ) -- zpby1=zpby2_minus_yby 
    sty $ff
    lda y1
    sec
    sbc $ff
    sta yd
  //SEG117 [64] if((byte) line::yd#3>=(byte) line::xd#0) goto line::@10 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b10
  //SEG118 line::@24
  //SEG119 [65] (byte) line_xdyd::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG120 [66] (byte) line_xdyd::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_xdyd.y
  //SEG121 [67] (byte) line_xdyd::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ] )
    // (byte) line_xdyd::x1#1 = (byte) line::x0#0  // register copy zp ZP_BYTE:5
  //SEG122 [68] (byte) line_xdyd::xd#1 ← (byte) line::xd#0 [ line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyd.xd
  //SEG123 [69] (byte) line_xdyd::yd#1 ← (byte) line::yd#3 [ line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyd.yd
  //SEG124 [70] call line_xdyd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG125 [150] phi from line::@24 to line_xdyd [phi:line::@24->line_xdyd]
  //SEG126 [150] phi (byte) line_xdyd::x1#6 = (byte) line_xdyd::x1#1 [phi:line::@24->line_xdyd#0] -- register_copy 
  //SEG127 [150] phi (byte) line_xdyd::xd#5 = (byte) line_xdyd::xd#1 [phi:line::@24->line_xdyd#1] -- register_copy 
  //SEG128 [150] phi (byte) line_xdyd::y#5 = (byte) line_xdyd::y#1 [phi:line::@24->line_xdyd#2] -- register_copy 
  //SEG129 [150] phi (byte) line_xdyd::x#6 = (byte) line_xdyd::x#1 [phi:line::@24->line_xdyd#3] -- register_copy 
  //SEG130 [150] phi (byte) line_xdyd::yd#2 = (byte) line_xdyd::yd#1 [phi:line::@24->line_xdyd#4] -- register_copy 
    jsr line_xdyd
    jmp breturn
  //SEG131 line::@10
  b10:
  //SEG132 [71] (byte) line_ydxd::y#1 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ] ) -- zpby1=yby 
    sty line_ydxd.y
  //SEG133 [72] (byte) line_ydxd::x#1 ← (byte) line::x0#0 [ line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ] ) -- xby=zpby1 
    ldx x0
  //SEG134 [73] (byte) line_ydxd::y1#1 ← (byte) line::y1#0 [ line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxd.y1
  //SEG135 [74] (byte) line_ydxd::yd#1 ← (byte) line::yd#3 [ line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxd.yd
  //SEG136 [75] (byte) line_ydxd::xd#1 ← (byte) line::xd#0 [ line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxd.xd
  //SEG137 [76] call line_ydxd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG138 [135] phi from line::@10 to line_ydxd [phi:line::@10->line_ydxd]
  //SEG139 [135] phi (byte) line_ydxd::y1#6 = (byte) line_ydxd::y1#1 [phi:line::@10->line_ydxd#0] -- register_copy 
  //SEG140 [135] phi (byte) line_ydxd::yd#5 = (byte) line_ydxd::yd#1 [phi:line::@10->line_ydxd#1] -- register_copy 
  //SEG141 [135] phi (byte) line_ydxd::y#6 = (byte) line_ydxd::y#1 [phi:line::@10->line_ydxd#2] -- register_copy 
  //SEG142 [135] phi (byte) line_ydxd::x#5 = (byte) line_ydxd::x#1 [phi:line::@10->line_ydxd#3] -- register_copy 
  //SEG143 [135] phi (byte) line_ydxd::xd#2 = (byte) line_ydxd::xd#1 [phi:line::@10->line_ydxd#4] -- register_copy 
    jsr line_ydxd
    jmp breturn
  //SEG144 line::@9
  b9:
  //SEG145 [77] (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ) -- zpby1=yby_minus_zpby2 
    tya
    sec
    sbc y1
    sta yd
  //SEG146 [78] if((byte) line::yd#10>=(byte) line::xd#0) goto line::@13 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b13
  //SEG147 line::@27
  //SEG148 [79] (byte) line_xdyi::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG149 [80] (byte) line_xdyi::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_xdyi.y
  //SEG150 [81] (byte) line_xdyi::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ] )
    // (byte) line_xdyi::x1#1 = (byte) line::x0#0  // register copy zp ZP_BYTE:5
  //SEG151 [82] (byte) line_xdyi::xd#1 ← (byte) line::xd#0 [ line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyi.xd
  //SEG152 [83] (byte) line_xdyi::yd#1 ← (byte) line::yd#10 [ line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyi.yd
  //SEG153 [84] call line_xdyi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG154 [120] phi from line::@27 to line_xdyi [phi:line::@27->line_xdyi]
  //SEG155 [120] phi (byte) line_xdyi::x1#6 = (byte) line_xdyi::x1#1 [phi:line::@27->line_xdyi#0] -- register_copy 
  //SEG156 [120] phi (byte) line_xdyi::xd#5 = (byte) line_xdyi::xd#1 [phi:line::@27->line_xdyi#1] -- register_copy 
  //SEG157 [120] phi (byte) line_xdyi::y#5 = (byte) line_xdyi::y#1 [phi:line::@27->line_xdyi#2] -- register_copy 
  //SEG158 [120] phi (byte) line_xdyi::x#6 = (byte) line_xdyi::x#1 [phi:line::@27->line_xdyi#3] -- register_copy 
  //SEG159 [120] phi (byte) line_xdyi::yd#2 = (byte) line_xdyi::yd#1 [phi:line::@27->line_xdyi#4] -- register_copy 
    jsr line_xdyi
    jmp breturn
  //SEG160 line::@13
  b13:
  //SEG161 [85] (byte) line_ydxi::y#1 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxi.y
  //SEG162 [86] (byte) line_ydxi::x#1 ← (byte) line::x1#0 [ line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG163 [87] (byte) line_ydxi::y1#1 ← (byte) line::y0#0 [ line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ] ) -- zpby1=yby 
    sty line_ydxi.y1
  //SEG164 [88] (byte) line_ydxi::yd#1 ← (byte) line::yd#10 [ line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxi.yd
  //SEG165 [89] (byte) line_ydxi::xd#1 ← (byte) line::xd#0 [ line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxi.xd
  //SEG166 [90] call line_ydxi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG167 [91] phi from line::@13 to line_ydxi [phi:line::@13->line_ydxi]
  //SEG168 [91] phi (byte) line_ydxi::y1#6 = (byte) line_ydxi::y1#1 [phi:line::@13->line_ydxi#0] -- register_copy 
  //SEG169 [91] phi (byte) line_ydxi::yd#5 = (byte) line_ydxi::yd#1 [phi:line::@13->line_ydxi#1] -- register_copy 
  //SEG170 [91] phi (byte) line_ydxi::y#6 = (byte) line_ydxi::y#1 [phi:line::@13->line_ydxi#2] -- register_copy 
  //SEG171 [91] phi (byte) line_ydxi::x#5 = (byte) line_ydxi::x#1 [phi:line::@13->line_ydxi#3] -- register_copy 
  //SEG172 [91] phi (byte) line_ydxi::xd#2 = (byte) line_ydxi::xd#1 [phi:line::@13->line_ydxi#4] -- register_copy 
    jsr line_ydxi
    jmp breturn
}
//SEG173 line_ydxi
line_ydxi: {
    .label y = 6
    .label y1 = 5
    .label yd = 4
    .label xd = 3
    .label e = 7
  //SEG174 [92] (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda xd
    lsr
    sta e
  //SEG175 [93] phi from line_ydxi line_ydxi::@2 to line_ydxi::@1 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1]
  //SEG176 [93] phi (byte) line_ydxi::e#3 = (byte) line_ydxi::e#0 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#0] -- register_copy 
  //SEG177 [93] phi (byte) line_ydxi::y#3 = (byte) line_ydxi::y#6 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#1] -- register_copy 
  //SEG178 [93] phi (byte) line_ydxi::x#3 = (byte) line_ydxi::x#5 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#2] -- register_copy 
  //SEG179 line_ydxi::@1
  b1:
  //SEG180 [94] (byte) plot::x#2 ← (byte) line_ydxi::x#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] )
    // (byte) plot::x#2 = (byte) line_ydxi::x#3  // register copy reg byte x
  //SEG181 [95] (byte) plot::y#2 ← (byte) line_ydxi::y#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] ) -- yby=zpby1 
    ldy y
  //SEG182 [96] call plot param-assignment [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] )
  //SEG183 [106] phi from line_ydxi::@1 to plot [phi:line_ydxi::@1->plot]
  //SEG184 [106] phi (byte) plot::y#4 = (byte) plot::y#2 [phi:line_ydxi::@1->plot#0] -- register_copy 
  //SEG185 [106] phi (byte) plot::x#4 = (byte) plot::x#2 [phi:line_ydxi::@1->plot#1] -- register_copy 
    jsr plot
  //SEG186 line_ydxi::@5
  //SEG187 [97] (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG188 [98] (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc xd
    sta e
  //SEG189 [99] if((byte) line_ydxi::yd#5>=(byte) line_ydxi::e#1) goto line_ydxi::@2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp e
    bcs b2
  //SEG190 line_ydxi::@3
  //SEG191 [100] (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG192 [101] (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc yd
    sta e
  //SEG193 [102] phi from line_ydxi::@3 line_ydxi::@5 to line_ydxi::@2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2]
  //SEG194 [102] phi (byte) line_ydxi::e#6 = (byte) line_ydxi::e#2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2#0] -- register_copy 
  //SEG195 [102] phi (byte) line_ydxi::x#6 = (byte) line_ydxi::x#2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2#1] -- register_copy 
  //SEG196 line_ydxi::@2
  b2:
  //SEG197 [103] (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] ) -- aby=zpby1_plus_1 
    lda y1
    clc
    adc #1
  //SEG198 [104] if((byte) line_ydxi::y#2<(byte~) line_ydxi::$8) goto line_ydxi::@1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] ) -- zpby1_lt_aby_then_la1 
    cmp y
    bcs b1
  //SEG199 line_ydxi::@return
  //SEG200 [105] return  [ ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 ] )
    rts
}
//SEG201 plot
plot: {
    .label plotter_x = 8
    .label plotter_y = $b
    .label plotter = 8
  //SEG202 [107] (byte~) plot::$0 ← (const byte[]) plot_xhi#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::$0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::$0 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_xhi,x
  //SEG203 [108] (byte*) plot::plotter_x#1 ← ((byte*))(byte/signed byte/word/signed word) 0 hi= (byte~) plot::$0 [ plot::x#4 plot::y#4 plot::plotter_x#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] ) -- zpptrby1=cowo1_sethi_aby 
    sta plotter_x+1
    lda #<0
    sta plotter_x
  //SEG204 [109] (byte~) plot::$1 ← (const byte[]) plot_xlo#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_xlo,x
  //SEG205 [110] (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1 [ plot::x#4 plot::y#4 plot::plotter_x#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] ) -- zpptrby1=zpptrby1_setlo_aby 
    sta plotter_x
  //SEG206 [111] (byte~) plot::$2 ← (const byte[]) plot_yhi#0 *idx (byte) plot::y#4 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] ) -- aby=cowo1_derefidx_yby 
    lda plot_yhi,y
  //SEG207 [112] (word) plot::plotter_y#1 ← (byte/signed byte/word/signed word) 0 hi= (byte~) plot::$2 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] ) -- zpwo1=coby1_sethi_aby 
    sta plotter_y+1
    lda #<0
    sta plotter_y
  //SEG208 [113] (byte~) plot::$3 ← (const byte[]) plot_ylo#0 *idx (byte) plot::y#4 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] ) -- aby=cowo1_derefidx_yby 
    lda plot_ylo,y
  //SEG209 [114] (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ) -- zpwo1=zpwo1_setlo_aby 
    sta plotter_y
  //SEG210 [115] (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2 [ plot::x#4 plot::plotter#0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] ) -- zpptrby1=zpptrby1_plus_zpwo1 
    lda plotter
    clc
    adc plotter_y
    sta plotter
    lda plotter+1
    adc plotter_y+1
    sta plotter+1
  //SEG211 [116] (byte~) plot::$5 ← (const byte[]) plot_bit#0 *idx (byte) plot::x#4 [ plot::plotter#0 plot::$5 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$5 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_bit,x
  //SEG212 [117] (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5 [ plot::plotter#0 plot::$6 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] ) -- aby=_deref_zpptrby1_bor_aby 
    ldy #0
    ora (plotter),y
  //SEG213 [118] *((byte*) plot::plotter#0) ← (byte~) plot::$6 [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ) -- _deref_zpptrby1=aby 
    sta (plotter),y
  //SEG214 plot::@return
  //SEG215 [119] return  [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
    rts
}
//SEG216 line_xdyi
line_xdyi: {
    .label _8 = $a
    .label y = 6
    .label x1 = 5
    .label xd = 4
    .label yd = 3
    .label e = 7
  //SEG217 [121] (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda yd
    lsr
    sta e
  //SEG218 [122] phi from line_xdyi line_xdyi::@2 to line_xdyi::@1 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1]
  //SEG219 [122] phi (byte) line_xdyi::e#3 = (byte) line_xdyi::e#0 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#0] -- register_copy 
  //SEG220 [122] phi (byte) line_xdyi::y#3 = (byte) line_xdyi::y#5 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#1] -- register_copy 
  //SEG221 [122] phi (byte) line_xdyi::x#3 = (byte) line_xdyi::x#6 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#2] -- register_copy 
  //SEG222 line_xdyi::@1
  b1:
  //SEG223 [123] (byte) plot::x#0 ← (byte) line_xdyi::x#3 [ plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
    // (byte) plot::x#0 = (byte) line_xdyi::x#3  // register copy reg byte x
  //SEG224 [124] (byte) plot::y#0 ← (byte) line_xdyi::y#3 [ plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG225 [125] call plot param-assignment [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
  //SEG226 [106] phi from line_xdyi::@1 to plot [phi:line_xdyi::@1->plot]
  //SEG227 [106] phi (byte) plot::y#4 = (byte) plot::y#0 [phi:line_xdyi::@1->plot#0] -- register_copy 
  //SEG228 [106] phi (byte) plot::x#4 = (byte) plot::x#0 [phi:line_xdyi::@1->plot#1] -- register_copy 
    jsr plot
  //SEG229 line_xdyi::@5
  //SEG230 [126] (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG231 [127] (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc yd
    sta e
  //SEG232 [128] if((byte) line_xdyi::xd#5>=(byte) line_xdyi::e#1) goto line_xdyi::@2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda xd
    cmp e
    bcs b2
  //SEG233 line_xdyi::@3
  //SEG234 [129] (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG235 [130] (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc xd
    sta e
  //SEG236 [131] phi from line_xdyi::@3 line_xdyi::@5 to line_xdyi::@2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2]
  //SEG237 [131] phi (byte) line_xdyi::e#6 = (byte) line_xdyi::e#2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2#0] -- register_copy 
  //SEG238 [131] phi (byte) line_xdyi::y#6 = (byte) line_xdyi::y#2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2#1] -- register_copy 
  //SEG239 line_xdyi::@2
  b2:
  //SEG240 [132] (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] ) -- zpby1=zpby2_plus_1 
    lda x1
    clc
    adc #1
    sta _8
  //SEG241 [133] if((byte) line_xdyi::x#2<(byte~) line_xdyi::$8) goto line_xdyi::@1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] ) -- xby_lt_zpby1_then_la1 
    cpx _8
    bcc b1
  //SEG242 line_xdyi::@return
  //SEG243 [134] return  [ ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 ] )
    rts
}
//SEG244 line_ydxd
line_ydxd: {
    .label y = 6
    .label y1 = 5
    .label yd = 4
    .label xd = 3
    .label e = 7
  //SEG245 [136] (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda xd
    lsr
    sta e
  //SEG246 [137] phi from line_ydxd line_ydxd::@2 to line_ydxd::@1 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1]
  //SEG247 [137] phi (byte) line_ydxd::e#3 = (byte) line_ydxd::e#0 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#0] -- register_copy 
  //SEG248 [137] phi (byte) line_ydxd::y#3 = (byte) line_ydxd::y#6 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#1] -- register_copy 
  //SEG249 [137] phi (byte) line_ydxd::x#3 = (byte) line_ydxd::x#5 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#2] -- register_copy 
  //SEG250 line_ydxd::@1
  b1:
  //SEG251 [138] (byte) plot::x#3 ← (byte) line_ydxd::x#3 [ plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
    // (byte) plot::x#3 = (byte) line_ydxd::x#3  // register copy reg byte x
  //SEG252 [139] (byte) plot::y#3 ← (byte) line_ydxd::y#3 [ plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG253 [140] call plot param-assignment [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
  //SEG254 [106] phi from line_ydxd::@1 to plot [phi:line_ydxd::@1->plot]
  //SEG255 [106] phi (byte) plot::y#4 = (byte) plot::y#3 [phi:line_ydxd::@1->plot#0] -- register_copy 
  //SEG256 [106] phi (byte) plot::x#4 = (byte) plot::x#3 [phi:line_ydxd::@1->plot#1] -- register_copy 
    jsr plot
  //SEG257 line_ydxd::@5
  //SEG258 [141] (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG259 [142] (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc xd
    sta e
  //SEG260 [143] if((byte) line_ydxd::yd#5>=(byte) line_ydxd::e#1) goto line_ydxd::@2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp e
    bcs b2
  //SEG261 line_ydxd::@3
  //SEG262 [144] (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] ) -- xby=xby_minus_1 
    dex
  //SEG263 [145] (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc yd
    sta e
  //SEG264 [146] phi from line_ydxd::@3 line_ydxd::@5 to line_ydxd::@2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2]
  //SEG265 [146] phi (byte) line_ydxd::e#6 = (byte) line_ydxd::e#2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2#0] -- register_copy 
  //SEG266 [146] phi (byte) line_ydxd::x#6 = (byte) line_ydxd::x#2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2#1] -- register_copy 
  //SEG267 line_ydxd::@2
  b2:
  //SEG268 [147] (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] ) -- aby=zpby1_plus_1 
    lda y1
    clc
    adc #1
  //SEG269 [148] if((byte) line_ydxd::y#2<(byte~) line_ydxd::$8) goto line_ydxd::@1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] ) -- zpby1_lt_aby_then_la1 
    cmp y
    bcs b1
  //SEG270 line_ydxd::@return
  //SEG271 [149] return  [ ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 ] )
    rts
}
//SEG272 line_xdyd
line_xdyd: {
    .label _8 = $a
    .label y = 6
    .label x1 = 5
    .label xd = 4
    .label yd = 3
    .label e = 7
  //SEG273 [151] (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda yd
    lsr
    sta e
  //SEG274 [152] phi from line_xdyd line_xdyd::@2 to line_xdyd::@1 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1]
  //SEG275 [152] phi (byte) line_xdyd::e#3 = (byte) line_xdyd::e#0 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#0] -- register_copy 
  //SEG276 [152] phi (byte) line_xdyd::y#3 = (byte) line_xdyd::y#5 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#1] -- register_copy 
  //SEG277 [152] phi (byte) line_xdyd::x#3 = (byte) line_xdyd::x#6 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#2] -- register_copy 
  //SEG278 line_xdyd::@1
  b1:
  //SEG279 [153] (byte) plot::x#1 ← (byte) line_xdyd::x#3 [ plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
    // (byte) plot::x#1 = (byte) line_xdyd::x#3  // register copy reg byte x
  //SEG280 [154] (byte) plot::y#1 ← (byte) line_xdyd::y#3 [ plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG281 [155] call plot param-assignment [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
  //SEG282 [106] phi from line_xdyd::@1 to plot [phi:line_xdyd::@1->plot]
  //SEG283 [106] phi (byte) plot::y#4 = (byte) plot::y#1 [phi:line_xdyd::@1->plot#0] -- register_copy 
  //SEG284 [106] phi (byte) plot::x#4 = (byte) plot::x#1 [phi:line_xdyd::@1->plot#1] -- register_copy 
    jsr plot
  //SEG285 line_xdyd::@5
  //SEG286 [156] (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG287 [157] (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc yd
    sta e
  //SEG288 [158] if((byte) line_xdyd::xd#5>=(byte) line_xdyd::e#1) goto line_xdyd::@2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda xd
    cmp e
    bcs b2
  //SEG289 line_xdyd::@3
  //SEG290 [159] (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] ) -- zpby1=zpby1_minus_1 
    dec y
  //SEG291 [160] (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc xd
    sta e
  //SEG292 [161] phi from line_xdyd::@3 line_xdyd::@5 to line_xdyd::@2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2]
  //SEG293 [161] phi (byte) line_xdyd::e#6 = (byte) line_xdyd::e#2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2#0] -- register_copy 
  //SEG294 [161] phi (byte) line_xdyd::y#6 = (byte) line_xdyd::y#2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2#1] -- register_copy 
  //SEG295 line_xdyd::@2
  b2:
  //SEG296 [162] (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] ) -- zpby1=zpby2_plus_1 
    lda x1
    clc
    adc #1
    sta _8
  //SEG297 [163] if((byte) line_xdyd::x#2<(byte~) line_xdyd::$8) goto line_xdyd::@1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] ) -- xby_lt_zpby1_then_la1 
    cpx _8
    bcc b1
  //SEG298 line_xdyd::@return
  //SEG299 [164] return  [ ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 ] )
    rts
}
//SEG300 init_plot_tables
init_plot_tables: {
    .label _6 = 2
    .label yoffs = 8
  //SEG301 [166] phi from init_plot_tables to init_plot_tables::@1 [phi:init_plot_tables->init_plot_tables::@1]
  //SEG302 [166] phi (byte) init_plot_tables::bits#3 = (byte/word/signed word) 128 [phi:init_plot_tables->init_plot_tables::@1#0] -- yby=coby1 
    ldy #$80
  //SEG303 [166] phi (byte) init_plot_tables::x#2 = (byte/signed byte/word/signed word) 0 [phi:init_plot_tables->init_plot_tables::@1#1] -- xby=coby1 
    ldx #0
  //SEG304 [166] phi from init_plot_tables::@2 to init_plot_tables::@1 [phi:init_plot_tables::@2->init_plot_tables::@1]
  //SEG305 [166] phi (byte) init_plot_tables::bits#3 = (byte) init_plot_tables::bits#4 [phi:init_plot_tables::@2->init_plot_tables::@1#0] -- register_copy 
  //SEG306 [166] phi (byte) init_plot_tables::x#2 = (byte) init_plot_tables::x#1 [phi:init_plot_tables::@2->init_plot_tables::@1#1] -- register_copy 
  //SEG307 init_plot_tables::@1
  b1:
  //SEG308 [167] (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ) -- aby=xby_band_coby1 
    txa
    and #$f8
  //SEG309 [168] *((const byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_xlo,x
  //SEG310 [169] *((const byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← >(const byte*) BITMAP#0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=coby2 
    lda #>BITMAP
    sta plot_xhi,x
  //SEG311 [170] *((const byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=yby 
    tya
    sta plot_bit,x
  //SEG312 [171] (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ) -- yby=yby_ror_1 
    tya
    lsr
    tay
  //SEG313 [172] if((byte) init_plot_tables::bits#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ) -- yby_neq_0_then_la1 
    cpy #0
    bne b2
  //SEG314 [173] phi from init_plot_tables::@1 to init_plot_tables::@2 [phi:init_plot_tables::@1->init_plot_tables::@2]
  //SEG315 [173] phi (byte) init_plot_tables::bits#4 = (byte/word/signed word) 128 [phi:init_plot_tables::@1->init_plot_tables::@2#0] -- yby=coby1 
    ldy #$80
  //SEG316 init_plot_tables::@2
  b2:
  //SEG317 [174] (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ) -- xby=_inc_xby 
    inx
  //SEG318 [175] if((byte) init_plot_tables::x#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@1 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ) -- xby_neq_0_then_la1 
    cpx #0
    bne b1
  //SEG319 [176] phi from init_plot_tables::@2 to init_plot_tables::@3 [phi:init_plot_tables::@2->init_plot_tables::@3]
  //SEG320 [176] phi (byte*) init_plot_tables::yoffs#2 = ((byte*))(byte/signed byte/word/signed word) 0 [phi:init_plot_tables::@2->init_plot_tables::@3#0] -- zpptrby1=cowo1 
    lda #<0
    sta yoffs
    sta yoffs+1
  //SEG321 [176] phi (byte) init_plot_tables::y#2 = (byte/signed byte/word/signed word) 0 [phi:init_plot_tables::@2->init_plot_tables::@3#1] -- xby=coby1 
    tax
  //SEG322 [176] phi from init_plot_tables::@4 to init_plot_tables::@3 [phi:init_plot_tables::@4->init_plot_tables::@3]
  //SEG323 [176] phi (byte*) init_plot_tables::yoffs#2 = (byte*) init_plot_tables::yoffs#4 [phi:init_plot_tables::@4->init_plot_tables::@3#0] -- register_copy 
  //SEG324 [176] phi (byte) init_plot_tables::y#2 = (byte) init_plot_tables::y#1 [phi:init_plot_tables::@4->init_plot_tables::@3#1] -- register_copy 
  //SEG325 init_plot_tables::@3
  b3:
  //SEG326 [177] (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ) -- zpby1=xby_band_coby1 
    txa
    and #7
    sta _6
  //SEG327 [178] (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ] ) -- aby=_lo_zpptrby1 
    lda yoffs
  //SEG328 [179] (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ] ) -- aby=zpby1_bor_aby 
    ora _6
  //SEG329 [180] *((const byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_ylo,x
  //SEG330 [181] (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ) -- aby=_hi_zpptrby1 
    lda yoffs+1
  //SEG331 [182] *((const byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_yhi,x
  //SEG332 [183] (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ) -- aby=xby_band_coby1 
    txa
    and #7
  //SEG333 [184] if((byte~) init_plot_tables::$10!=(byte/signed byte/word/signed word) 7) goto init_plot_tables::@4 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- aby_neq_coby1_then_la1 
    cmp #7
    bne b4
  //SEG334 init_plot_tables::@7
  //SEG335 [185] (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ) -- zpptrby1=zpptrby1_plus_cowo1 
    lda yoffs
    clc
    adc #<$140
    sta yoffs
    lda yoffs+1
    adc #>$140
    sta yoffs+1
  //SEG336 [186] phi from init_plot_tables::@3 init_plot_tables::@7 to init_plot_tables::@4 [phi:init_plot_tables::@3/init_plot_tables::@7->init_plot_tables::@4]
  //SEG337 [186] phi (byte*) init_plot_tables::yoffs#4 = (byte*) init_plot_tables::yoffs#2 [phi:init_plot_tables::@3/init_plot_tables::@7->init_plot_tables::@4#0] -- register_copy 
  //SEG338 init_plot_tables::@4
  b4:
  //SEG339 [187] (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ) -- xby=_inc_xby 
    inx
  //SEG340 [188] if((byte) init_plot_tables::y#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@3 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ) -- xby_neq_0_then_la1 
    cpx #0
    bne b3
  //SEG341 init_plot_tables::@return
  //SEG342 [189] return  [ ] ( main:2::init_plot_tables:10 [ ] )
    rts
  //SEG343 [190] phi from init_plot_tables::@1 to init_plot_tables::@10 [phi:init_plot_tables::@1->init_plot_tables::@10]
  //SEG344 init_plot_tables::@10
  b10:
  //SEG345 [173] phi from init_plot_tables::@10 to init_plot_tables::@2 [phi:init_plot_tables::@10->init_plot_tables::@2]
  //SEG346 [173] phi (byte) init_plot_tables::bits#4 = (byte) init_plot_tables::bits#1 [phi:init_plot_tables::@10->init_plot_tables::@2#0] -- register_copy 
    jmp b2
}
//SEG347 init_screen
init_screen: {
    .label b = 8
    .label c = 8
  //SEG348 [192] phi from init_screen to init_screen::@1 [phi:init_screen->init_screen::@1]
  //SEG349 [192] phi (byte*) init_screen::b#2 = (const byte*) BITMAP#0 [phi:init_screen->init_screen::@1#0] -- zpptrby1=cowo1 
    lda #<BITMAP
    sta b
    lda #>BITMAP
    sta b+1
  //SEG350 [192] phi from init_screen::@1 to init_screen::@1 [phi:init_screen::@1->init_screen::@1]
  //SEG351 [192] phi (byte*) init_screen::b#2 = (byte*) init_screen::b#1 [phi:init_screen::@1->init_screen::@1#0] -- register_copy 
  //SEG352 init_screen::@1
  b1:
  //SEG353 [193] *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0 [ init_screen::b#2 ] ( main:2::init_screen:8 [ init_screen::b#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    tya
    sta (b),y
  //SEG354 [194] (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc b
    bne !+
    inc b+1
  !:
  //SEG355 [195] if((byte*) init_screen::b#1!=(const byte*) BITMAP#0+(word/signed word) 8192) goto init_screen::@1 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] ) -- zpptrby1_neq_cowo1_then_la1 
    lda b+1
    cmp #>BITMAP+$2000
    bne b1
    lda b
    cmp #<BITMAP+$2000
    bne b1
  //SEG356 [196] phi from init_screen::@1 to init_screen::@2 [phi:init_screen::@1->init_screen::@2]
  //SEG357 [196] phi (byte*) init_screen::c#2 = (const byte*) SCREEN#0 [phi:init_screen::@1->init_screen::@2#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta c
    lda #>SCREEN
    sta c+1
  //SEG358 [196] phi from init_screen::@2 to init_screen::@2 [phi:init_screen::@2->init_screen::@2]
  //SEG359 [196] phi (byte*) init_screen::c#2 = (byte*) init_screen::c#1 [phi:init_screen::@2->init_screen::@2#0] -- register_copy 
  //SEG360 init_screen::@2
  b2:
  //SEG361 [197] *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20 [ init_screen::c#2 ] ( main:2::init_screen:8 [ init_screen::c#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #$14
    sta (c),y
  //SEG362 [198] (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc c
    bne !+
    inc c+1
  !:
  //SEG363 [199] if((byte*) init_screen::c#1!=(const byte*) SCREEN#0+(word/signed word) 1024) goto init_screen::@2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] ) -- zpptrby1_neq_cowo1_then_la1 
    lda c+1
    cmp #>SCREEN+$400
    bne b2
    lda c
    cmp #<SCREEN+$400
    bne b2
  //SEG364 init_screen::@return
  //SEG365 [200] return  [ ] ( main:2::init_screen:8 [ ] )
    rts
}

Removing instruction b10:
Succesful ASM optimization Pass5UnusedLabelElimination
ASSEMBLER
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const BGCOL = $d020
  .const FGCOL = $d021
  .const D018 = $d018
  .const D011 = $d011
  .const BMM = $20
  .const DEN = $10
  .const RSEL = 8
  .const SCREEN = $400
  .const BITMAP = $2000
  .const plot_xlo = $1000
  .const plot_xhi = $1100
  .const plot_ylo = $1200
  .const plot_yhi = $1300
  .const plot_bit = $1400
  .const lines_cnt = 8
  lines_x: .byte $3c, $50, $6e, $50, $3c, $28, $a, $28, $3c
  lines_y: .byte $a, $28, $3c, $50, $6e, $50, $3c, $28, $a
//SEG2 @begin
//SEG3 [1] phi from @begin to @10 [phi:@begin->@10]
//SEG4 @10
//SEG5 [2] call main param-assignment [ ] ( )
  jsr main
//SEG6 [3] phi from @10 to @end [phi:@10->@end]
//SEG7 @end
//SEG8 main
main: {
  //SEG9 [4] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #0
    sta BGCOL
  //SEG10 [5] *((const byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    sta FGCOL
  //SEG11 [6] *((const byte*) D011#0) ← (const byte) BMM#0|(const byte) DEN#0|(const byte) RSEL#0|(byte/signed byte/word/signed word) 3 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #BMM|DEN|RSEL|3
    sta D011
  //SEG12 [7] *((const byte*) D018#0) ← (byte/signed byte/word/signed word) 24 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #$18
    sta D018
  //SEG13 [8] call init_screen param-assignment [ ] ( main:2 [ ] )
  //SEG14 [191] phi from main to init_screen [phi:main->init_screen]
    jsr init_screen
  //SEG15 [9] phi from main to main::@3 [phi:main->main::@3]
  //SEG16 main::@3
  //SEG17 [10] call init_plot_tables param-assignment [ ] ( main:2 [ ] )
  //SEG18 [165] phi from main::@3 to init_plot_tables [phi:main::@3->init_plot_tables]
    jsr init_plot_tables
  //SEG19 [11] phi from main::@3 main::@5 to main::@1 [phi:main::@3/main::@5->main::@1]
  //SEG20 main::@1
  b1:
  //SEG21 [12] call lines param-assignment [ ] ( main:2 [ ] )
  //SEG22 [15] phi from main::@1 to lines [phi:main::@1->lines]
    jsr lines
  //SEG23 main::@5
  //SEG24 [13] if(true) goto main::@1 [ ] ( main:2 [ ] ) -- true_then_la1 
    jmp b1
  //SEG25 main::@return
  //SEG26 [14] return  [ ] ( main:2 [ ] )
}
//SEG27 lines
lines: {
    .label _2 = 3
    .label _3 = 4
    .label l = 2
  //SEG28 [16] phi from lines to lines::@1 [phi:lines->lines::@1]
  //SEG29 [16] phi (byte) lines::l#2 = (byte/signed byte/word/signed word) 0 [phi:lines->lines::@1#0] -- zpby1=coby1 
    lda #0
    sta l
  //SEG30 [16] phi from lines::@3 to lines::@1 [phi:lines::@3->lines::@1]
  //SEG31 [16] phi (byte) lines::l#2 = (byte) lines::l#1 [phi:lines::@3->lines::@1#0] -- register_copy 
  //SEG32 lines::@1
  b1:
  //SEG33 [17] (byte~) lines::$0 ← (const byte[]) lines_x#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 ] ( main:2::lines:12 [ lines::l#2 lines::$0 ] ) -- yby=cowo1_derefidx_zpby1 
    ldx l
    lda lines_x,x
    tay
  //SEG34 [18] (byte~) lines::$2 ← (const byte[]) lines_x#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx l
    lda lines_x+1,x
    sta _2
  //SEG35 [19] (byte~) lines::$3 ← (const byte[]) lines_y#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 lines::$3 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx l
    lda lines_y,x
    sta _3
  //SEG36 [20] (byte~) lines::$5 ← (const byte[]) lines_y#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ] ) -- xby=cowo1_derefidx_zpby1 
    ldx l
    lda lines_y+1,x
    tax
  //SEG37 [21] (byte) line::x0#0 ← (byte~) lines::$0 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ] ( main:2::lines:12 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ] ) -- zpby1=yby 
    sty line.x0
  //SEG38 [22] (byte) line::x1#0 ← (byte~) lines::$2 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ] ( main:2::lines:12 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ] )
    // (byte) line::x1#0 = (byte~) lines::$2  // register copy zp ZP_BYTE:3
  //SEG39 [23] (byte) line::y0#0 ← (byte~) lines::$3 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ] ( main:2::lines:12 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ] ) -- yby=zpby1 
    ldy _3
  //SEG40 [24] (byte) line::y1#0 ← (byte~) lines::$5 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ( main:2::lines:12 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ) -- zpby1=xby 
    stx line.y1
  //SEG41 [25] call line param-assignment [ lines::l#2 ] ( main:2::lines:12 [ lines::l#2 ] )
    jsr line
  //SEG42 lines::@3
  //SEG43 [26] (byte) lines::l#1 ← ++ (byte) lines::l#2 [ lines::l#1 ] ( main:2::lines:12 [ lines::l#1 ] ) -- zpby1=_inc_zpby1 
    inc l
  //SEG44 [27] if((byte) lines::l#1<(const byte) lines_cnt#0) goto lines::@1 [ lines::l#1 ] ( main:2::lines:12 [ lines::l#1 ] ) -- zpby1_lt_coby1_then_la1 
    lda l
    cmp #lines_cnt
    bcc b1
  //SEG45 lines::@return
  //SEG46 [28] return  [ ] ( main:2::lines:12 [ ] )
    rts
}
//SEG47 line
line: {
    .label x0 = 5
    .label x1 = 3
    .label y1 = 4
    .label xd = 7
    .label yd = $a
  //SEG48 [29] if((byte) line::x0#0>=(byte) line::x1#0) goto line::@1 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ) -- zpby1_ge_zpby2_then_la1 
    lda x0
    cmp x1
    bcs b1
  //SEG49 line::@15
  //SEG50 [30] (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ) -- zpby1=zpby2_minus_zpby3 
    lda x1
    sec
    sbc x0
    sta xd
  //SEG51 [31] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@2 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ) -- yby_ge_zpby1_then_la1 
    cpy y1
    bcs b2
  //SEG52 line::@16
  //SEG53 [32] (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ) -- zpby1=zpby2_minus_yby 
    sty $ff
    lda y1
    sec
    sbc $ff
    sta yd
  //SEG54 [33] if((byte) line::yd#1>=(byte) line::xd#1) goto line::@3 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b3
  //SEG55 line::@17
  //SEG56 [34] (byte) line_xdyi::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG57 [35] (byte) line_xdyi::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ] ) -- zpby1=yby 
    sty line_xdyi.y
  //SEG58 [36] (byte) line_xdyi::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ] ) -- zpby1=zpby2 
    lda x1
    sta line_xdyi.x1
  //SEG59 [37] (byte) line_xdyi::xd#0 ← (byte) line::xd#1 [ line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyi.xd
  //SEG60 [38] (byte) line_xdyi::yd#0 ← (byte) line::yd#1 [ line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyi.yd
  //SEG61 [39] call line_xdyi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG62 [120] phi from line::@17 to line_xdyi [phi:line::@17->line_xdyi]
  //SEG63 [120] phi (byte) line_xdyi::x1#6 = (byte) line_xdyi::x1#0 [phi:line::@17->line_xdyi#0] -- register_copy 
  //SEG64 [120] phi (byte) line_xdyi::xd#5 = (byte) line_xdyi::xd#0 [phi:line::@17->line_xdyi#1] -- register_copy 
  //SEG65 [120] phi (byte) line_xdyi::y#5 = (byte) line_xdyi::y#0 [phi:line::@17->line_xdyi#2] -- register_copy 
  //SEG66 [120] phi (byte) line_xdyi::x#6 = (byte) line_xdyi::x#0 [phi:line::@17->line_xdyi#3] -- register_copy 
  //SEG67 [120] phi (byte) line_xdyi::yd#2 = (byte) line_xdyi::yd#0 [phi:line::@17->line_xdyi#4] -- register_copy 
    jsr line_xdyi
  //SEG68 line::@return
  breturn:
  //SEG69 [40] return  [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
    rts
  //SEG70 line::@3
  b3:
  //SEG71 [41] (byte) line_ydxi::y#0 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ] ) -- zpby1=yby 
    sty line_ydxi.y
  //SEG72 [42] (byte) line_ydxi::x#0 ← (byte) line::x0#0 [ line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG73 [43] (byte) line_ydxi::y1#0 ← (byte) line::y1#0 [ line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxi.y1
  //SEG74 [44] (byte) line_ydxi::yd#0 ← (byte) line::yd#1 [ line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxi.yd
  //SEG75 [45] (byte) line_ydxi::xd#0 ← (byte) line::xd#1 [ line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxi.xd
  //SEG76 [46] call line_ydxi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG77 [91] phi from line::@3 to line_ydxi [phi:line::@3->line_ydxi]
  //SEG78 [91] phi (byte) line_ydxi::y1#6 = (byte) line_ydxi::y1#0 [phi:line::@3->line_ydxi#0] -- register_copy 
  //SEG79 [91] phi (byte) line_ydxi::yd#5 = (byte) line_ydxi::yd#0 [phi:line::@3->line_ydxi#1] -- register_copy 
  //SEG80 [91] phi (byte) line_ydxi::y#6 = (byte) line_ydxi::y#0 [phi:line::@3->line_ydxi#2] -- register_copy 
  //SEG81 [91] phi (byte) line_ydxi::x#5 = (byte) line_ydxi::x#0 [phi:line::@3->line_ydxi#3] -- register_copy 
  //SEG82 [91] phi (byte) line_ydxi::xd#2 = (byte) line_ydxi::xd#0 [phi:line::@3->line_ydxi#4] -- register_copy 
    jsr line_ydxi
    jmp breturn
  //SEG83 line::@2
  b2:
  //SEG84 [47] (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ) -- zpby1=yby_minus_zpby2 
    tya
    sec
    sbc y1
    sta yd
  //SEG85 [48] if((byte) line::yd#0>=(byte) line::xd#1) goto line::@6 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b6
  //SEG86 line::@20
  //SEG87 [49] (byte) line_xdyd::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG88 [50] (byte) line_xdyd::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ] ) -- zpby1=yby 
    sty line_xdyd.y
  //SEG89 [51] (byte) line_xdyd::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ] ) -- zpby1=zpby2 
    lda x1
    sta line_xdyd.x1
  //SEG90 [52] (byte) line_xdyd::xd#0 ← (byte) line::xd#1 [ line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyd.xd
  //SEG91 [53] (byte) line_xdyd::yd#0 ← (byte) line::yd#0 [ line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyd.yd
  //SEG92 [54] call line_xdyd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG93 [150] phi from line::@20 to line_xdyd [phi:line::@20->line_xdyd]
  //SEG94 [150] phi (byte) line_xdyd::x1#6 = (byte) line_xdyd::x1#0 [phi:line::@20->line_xdyd#0] -- register_copy 
  //SEG95 [150] phi (byte) line_xdyd::xd#5 = (byte) line_xdyd::xd#0 [phi:line::@20->line_xdyd#1] -- register_copy 
  //SEG96 [150] phi (byte) line_xdyd::y#5 = (byte) line_xdyd::y#0 [phi:line::@20->line_xdyd#2] -- register_copy 
  //SEG97 [150] phi (byte) line_xdyd::x#6 = (byte) line_xdyd::x#0 [phi:line::@20->line_xdyd#3] -- register_copy 
  //SEG98 [150] phi (byte) line_xdyd::yd#2 = (byte) line_xdyd::yd#0 [phi:line::@20->line_xdyd#4] -- register_copy 
    jsr line_xdyd
    jmp breturn
  //SEG99 line::@6
  b6:
  //SEG100 [55] (byte) line_ydxd::y#0 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxd.y
  //SEG101 [56] (byte) line_ydxd::x#0 ← (byte) line::x1#0 [ line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ] ) -- xby=zpby1 
    ldx x1
  //SEG102 [57] (byte) line_ydxd::y1#0 ← (byte) line::y0#0 [ line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ] ) -- zpby1=yby 
    sty line_ydxd.y1
  //SEG103 [58] (byte) line_ydxd::yd#0 ← (byte) line::yd#0 [ line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxd.yd
  //SEG104 [59] (byte) line_ydxd::xd#0 ← (byte) line::xd#1 [ line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxd.xd
  //SEG105 [60] call line_ydxd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG106 [135] phi from line::@6 to line_ydxd [phi:line::@6->line_ydxd]
  //SEG107 [135] phi (byte) line_ydxd::y1#6 = (byte) line_ydxd::y1#0 [phi:line::@6->line_ydxd#0] -- register_copy 
  //SEG108 [135] phi (byte) line_ydxd::yd#5 = (byte) line_ydxd::yd#0 [phi:line::@6->line_ydxd#1] -- register_copy 
  //SEG109 [135] phi (byte) line_ydxd::y#6 = (byte) line_ydxd::y#0 [phi:line::@6->line_ydxd#2] -- register_copy 
  //SEG110 [135] phi (byte) line_ydxd::x#5 = (byte) line_ydxd::x#0 [phi:line::@6->line_ydxd#3] -- register_copy 
  //SEG111 [135] phi (byte) line_ydxd::xd#2 = (byte) line_ydxd::xd#0 [phi:line::@6->line_ydxd#4] -- register_copy 
    jsr line_ydxd
    jmp breturn
  //SEG112 line::@1
  b1:
  //SEG113 [61] (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ) -- zpby1=zpby2_minus_zpby3 
    lda x0
    sec
    sbc x1
    sta xd
  //SEG114 [62] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@9 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ) -- yby_ge_zpby1_then_la1 
    cpy y1
    bcs b9
  //SEG115 line::@23
  //SEG116 [63] (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ) -- zpby1=zpby2_minus_yby 
    sty $ff
    lda y1
    sec
    sbc $ff
    sta yd
  //SEG117 [64] if((byte) line::yd#3>=(byte) line::xd#0) goto line::@10 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b10
  //SEG118 line::@24
  //SEG119 [65] (byte) line_xdyd::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG120 [66] (byte) line_xdyd::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_xdyd.y
  //SEG121 [67] (byte) line_xdyd::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ] )
    // (byte) line_xdyd::x1#1 = (byte) line::x0#0  // register copy zp ZP_BYTE:5
  //SEG122 [68] (byte) line_xdyd::xd#1 ← (byte) line::xd#0 [ line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyd.xd
  //SEG123 [69] (byte) line_xdyd::yd#1 ← (byte) line::yd#3 [ line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyd.yd
  //SEG124 [70] call line_xdyd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG125 [150] phi from line::@24 to line_xdyd [phi:line::@24->line_xdyd]
  //SEG126 [150] phi (byte) line_xdyd::x1#6 = (byte) line_xdyd::x1#1 [phi:line::@24->line_xdyd#0] -- register_copy 
  //SEG127 [150] phi (byte) line_xdyd::xd#5 = (byte) line_xdyd::xd#1 [phi:line::@24->line_xdyd#1] -- register_copy 
  //SEG128 [150] phi (byte) line_xdyd::y#5 = (byte) line_xdyd::y#1 [phi:line::@24->line_xdyd#2] -- register_copy 
  //SEG129 [150] phi (byte) line_xdyd::x#6 = (byte) line_xdyd::x#1 [phi:line::@24->line_xdyd#3] -- register_copy 
  //SEG130 [150] phi (byte) line_xdyd::yd#2 = (byte) line_xdyd::yd#1 [phi:line::@24->line_xdyd#4] -- register_copy 
    jsr line_xdyd
    jmp breturn
  //SEG131 line::@10
  b10:
  //SEG132 [71] (byte) line_ydxd::y#1 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ] ) -- zpby1=yby 
    sty line_ydxd.y
  //SEG133 [72] (byte) line_ydxd::x#1 ← (byte) line::x0#0 [ line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ] ) -- xby=zpby1 
    ldx x0
  //SEG134 [73] (byte) line_ydxd::y1#1 ← (byte) line::y1#0 [ line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxd.y1
  //SEG135 [74] (byte) line_ydxd::yd#1 ← (byte) line::yd#3 [ line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxd.yd
  //SEG136 [75] (byte) line_ydxd::xd#1 ← (byte) line::xd#0 [ line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxd.xd
  //SEG137 [76] call line_ydxd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG138 [135] phi from line::@10 to line_ydxd [phi:line::@10->line_ydxd]
  //SEG139 [135] phi (byte) line_ydxd::y1#6 = (byte) line_ydxd::y1#1 [phi:line::@10->line_ydxd#0] -- register_copy 
  //SEG140 [135] phi (byte) line_ydxd::yd#5 = (byte) line_ydxd::yd#1 [phi:line::@10->line_ydxd#1] -- register_copy 
  //SEG141 [135] phi (byte) line_ydxd::y#6 = (byte) line_ydxd::y#1 [phi:line::@10->line_ydxd#2] -- register_copy 
  //SEG142 [135] phi (byte) line_ydxd::x#5 = (byte) line_ydxd::x#1 [phi:line::@10->line_ydxd#3] -- register_copy 
  //SEG143 [135] phi (byte) line_ydxd::xd#2 = (byte) line_ydxd::xd#1 [phi:line::@10->line_ydxd#4] -- register_copy 
    jsr line_ydxd
    jmp breturn
  //SEG144 line::@9
  b9:
  //SEG145 [77] (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ) -- zpby1=yby_minus_zpby2 
    tya
    sec
    sbc y1
    sta yd
  //SEG146 [78] if((byte) line::yd#10>=(byte) line::xd#0) goto line::@13 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b13
  //SEG147 line::@27
  //SEG148 [79] (byte) line_xdyi::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG149 [80] (byte) line_xdyi::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_xdyi.y
  //SEG150 [81] (byte) line_xdyi::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ] )
    // (byte) line_xdyi::x1#1 = (byte) line::x0#0  // register copy zp ZP_BYTE:5
  //SEG151 [82] (byte) line_xdyi::xd#1 ← (byte) line::xd#0 [ line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyi.xd
  //SEG152 [83] (byte) line_xdyi::yd#1 ← (byte) line::yd#10 [ line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyi.yd
  //SEG153 [84] call line_xdyi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG154 [120] phi from line::@27 to line_xdyi [phi:line::@27->line_xdyi]
  //SEG155 [120] phi (byte) line_xdyi::x1#6 = (byte) line_xdyi::x1#1 [phi:line::@27->line_xdyi#0] -- register_copy 
  //SEG156 [120] phi (byte) line_xdyi::xd#5 = (byte) line_xdyi::xd#1 [phi:line::@27->line_xdyi#1] -- register_copy 
  //SEG157 [120] phi (byte) line_xdyi::y#5 = (byte) line_xdyi::y#1 [phi:line::@27->line_xdyi#2] -- register_copy 
  //SEG158 [120] phi (byte) line_xdyi::x#6 = (byte) line_xdyi::x#1 [phi:line::@27->line_xdyi#3] -- register_copy 
  //SEG159 [120] phi (byte) line_xdyi::yd#2 = (byte) line_xdyi::yd#1 [phi:line::@27->line_xdyi#4] -- register_copy 
    jsr line_xdyi
    jmp breturn
  //SEG160 line::@13
  b13:
  //SEG161 [85] (byte) line_ydxi::y#1 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxi.y
  //SEG162 [86] (byte) line_ydxi::x#1 ← (byte) line::x1#0 [ line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG163 [87] (byte) line_ydxi::y1#1 ← (byte) line::y0#0 [ line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ] ) -- zpby1=yby 
    sty line_ydxi.y1
  //SEG164 [88] (byte) line_ydxi::yd#1 ← (byte) line::yd#10 [ line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxi.yd
  //SEG165 [89] (byte) line_ydxi::xd#1 ← (byte) line::xd#0 [ line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxi.xd
  //SEG166 [90] call line_ydxi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG167 [91] phi from line::@13 to line_ydxi [phi:line::@13->line_ydxi]
  //SEG168 [91] phi (byte) line_ydxi::y1#6 = (byte) line_ydxi::y1#1 [phi:line::@13->line_ydxi#0] -- register_copy 
  //SEG169 [91] phi (byte) line_ydxi::yd#5 = (byte) line_ydxi::yd#1 [phi:line::@13->line_ydxi#1] -- register_copy 
  //SEG170 [91] phi (byte) line_ydxi::y#6 = (byte) line_ydxi::y#1 [phi:line::@13->line_ydxi#2] -- register_copy 
  //SEG171 [91] phi (byte) line_ydxi::x#5 = (byte) line_ydxi::x#1 [phi:line::@13->line_ydxi#3] -- register_copy 
  //SEG172 [91] phi (byte) line_ydxi::xd#2 = (byte) line_ydxi::xd#1 [phi:line::@13->line_ydxi#4] -- register_copy 
    jsr line_ydxi
    jmp breturn
}
//SEG173 line_ydxi
line_ydxi: {
    .label y = 6
    .label y1 = 5
    .label yd = 4
    .label xd = 3
    .label e = 7
  //SEG174 [92] (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda xd
    lsr
    sta e
  //SEG175 [93] phi from line_ydxi line_ydxi::@2 to line_ydxi::@1 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1]
  //SEG176 [93] phi (byte) line_ydxi::e#3 = (byte) line_ydxi::e#0 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#0] -- register_copy 
  //SEG177 [93] phi (byte) line_ydxi::y#3 = (byte) line_ydxi::y#6 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#1] -- register_copy 
  //SEG178 [93] phi (byte) line_ydxi::x#3 = (byte) line_ydxi::x#5 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#2] -- register_copy 
  //SEG179 line_ydxi::@1
  b1:
  //SEG180 [94] (byte) plot::x#2 ← (byte) line_ydxi::x#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] )
    // (byte) plot::x#2 = (byte) line_ydxi::x#3  // register copy reg byte x
  //SEG181 [95] (byte) plot::y#2 ← (byte) line_ydxi::y#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] ) -- yby=zpby1 
    ldy y
  //SEG182 [96] call plot param-assignment [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] )
  //SEG183 [106] phi from line_ydxi::@1 to plot [phi:line_ydxi::@1->plot]
  //SEG184 [106] phi (byte) plot::y#4 = (byte) plot::y#2 [phi:line_ydxi::@1->plot#0] -- register_copy 
  //SEG185 [106] phi (byte) plot::x#4 = (byte) plot::x#2 [phi:line_ydxi::@1->plot#1] -- register_copy 
    jsr plot
  //SEG186 line_ydxi::@5
  //SEG187 [97] (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG188 [98] (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc xd
    sta e
  //SEG189 [99] if((byte) line_ydxi::yd#5>=(byte) line_ydxi::e#1) goto line_ydxi::@2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp e
    bcs b2
  //SEG190 line_ydxi::@3
  //SEG191 [100] (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG192 [101] (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc yd
    sta e
  //SEG193 [102] phi from line_ydxi::@3 line_ydxi::@5 to line_ydxi::@2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2]
  //SEG194 [102] phi (byte) line_ydxi::e#6 = (byte) line_ydxi::e#2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2#0] -- register_copy 
  //SEG195 [102] phi (byte) line_ydxi::x#6 = (byte) line_ydxi::x#2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2#1] -- register_copy 
  //SEG196 line_ydxi::@2
  b2:
  //SEG197 [103] (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] ) -- aby=zpby1_plus_1 
    lda y1
    clc
    adc #1
  //SEG198 [104] if((byte) line_ydxi::y#2<(byte~) line_ydxi::$8) goto line_ydxi::@1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] ) -- zpby1_lt_aby_then_la1 
    cmp y
    bcs b1
  //SEG199 line_ydxi::@return
  //SEG200 [105] return  [ ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 ] )
    rts
}
//SEG201 plot
plot: {
    .label plotter_x = 8
    .label plotter_y = $b
    .label plotter = 8
  //SEG202 [107] (byte~) plot::$0 ← (const byte[]) plot_xhi#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::$0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::$0 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_xhi,x
  //SEG203 [108] (byte*) plot::plotter_x#1 ← ((byte*))(byte/signed byte/word/signed word) 0 hi= (byte~) plot::$0 [ plot::x#4 plot::y#4 plot::plotter_x#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] ) -- zpptrby1=cowo1_sethi_aby 
    sta plotter_x+1
    lda #<0
    sta plotter_x
  //SEG204 [109] (byte~) plot::$1 ← (const byte[]) plot_xlo#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_xlo,x
  //SEG205 [110] (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1 [ plot::x#4 plot::y#4 plot::plotter_x#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] ) -- zpptrby1=zpptrby1_setlo_aby 
    sta plotter_x
  //SEG206 [111] (byte~) plot::$2 ← (const byte[]) plot_yhi#0 *idx (byte) plot::y#4 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] ) -- aby=cowo1_derefidx_yby 
    lda plot_yhi,y
  //SEG207 [112] (word) plot::plotter_y#1 ← (byte/signed byte/word/signed word) 0 hi= (byte~) plot::$2 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] ) -- zpwo1=coby1_sethi_aby 
    sta plotter_y+1
    lda #<0
    sta plotter_y
  //SEG208 [113] (byte~) plot::$3 ← (const byte[]) plot_ylo#0 *idx (byte) plot::y#4 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] ) -- aby=cowo1_derefidx_yby 
    lda plot_ylo,y
  //SEG209 [114] (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ) -- zpwo1=zpwo1_setlo_aby 
    sta plotter_y
  //SEG210 [115] (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2 [ plot::x#4 plot::plotter#0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] ) -- zpptrby1=zpptrby1_plus_zpwo1 
    lda plotter
    clc
    adc plotter_y
    sta plotter
    lda plotter+1
    adc plotter_y+1
    sta plotter+1
  //SEG211 [116] (byte~) plot::$5 ← (const byte[]) plot_bit#0 *idx (byte) plot::x#4 [ plot::plotter#0 plot::$5 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$5 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_bit,x
  //SEG212 [117] (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5 [ plot::plotter#0 plot::$6 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] ) -- aby=_deref_zpptrby1_bor_aby 
    ldy #0
    ora (plotter),y
  //SEG213 [118] *((byte*) plot::plotter#0) ← (byte~) plot::$6 [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ) -- _deref_zpptrby1=aby 
    sta (plotter),y
  //SEG214 plot::@return
  //SEG215 [119] return  [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
    rts
}
//SEG216 line_xdyi
line_xdyi: {
    .label _8 = $a
    .label y = 6
    .label x1 = 5
    .label xd = 4
    .label yd = 3
    .label e = 7
  //SEG217 [121] (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda yd
    lsr
    sta e
  //SEG218 [122] phi from line_xdyi line_xdyi::@2 to line_xdyi::@1 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1]
  //SEG219 [122] phi (byte) line_xdyi::e#3 = (byte) line_xdyi::e#0 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#0] -- register_copy 
  //SEG220 [122] phi (byte) line_xdyi::y#3 = (byte) line_xdyi::y#5 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#1] -- register_copy 
  //SEG221 [122] phi (byte) line_xdyi::x#3 = (byte) line_xdyi::x#6 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#2] -- register_copy 
  //SEG222 line_xdyi::@1
  b1:
  //SEG223 [123] (byte) plot::x#0 ← (byte) line_xdyi::x#3 [ plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
    // (byte) plot::x#0 = (byte) line_xdyi::x#3  // register copy reg byte x
  //SEG224 [124] (byte) plot::y#0 ← (byte) line_xdyi::y#3 [ plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG225 [125] call plot param-assignment [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
  //SEG226 [106] phi from line_xdyi::@1 to plot [phi:line_xdyi::@1->plot]
  //SEG227 [106] phi (byte) plot::y#4 = (byte) plot::y#0 [phi:line_xdyi::@1->plot#0] -- register_copy 
  //SEG228 [106] phi (byte) plot::x#4 = (byte) plot::x#0 [phi:line_xdyi::@1->plot#1] -- register_copy 
    jsr plot
  //SEG229 line_xdyi::@5
  //SEG230 [126] (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG231 [127] (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc yd
    sta e
  //SEG232 [128] if((byte) line_xdyi::xd#5>=(byte) line_xdyi::e#1) goto line_xdyi::@2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda xd
    cmp e
    bcs b2
  //SEG233 line_xdyi::@3
  //SEG234 [129] (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG235 [130] (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc xd
    sta e
  //SEG236 [131] phi from line_xdyi::@3 line_xdyi::@5 to line_xdyi::@2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2]
  //SEG237 [131] phi (byte) line_xdyi::e#6 = (byte) line_xdyi::e#2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2#0] -- register_copy 
  //SEG238 [131] phi (byte) line_xdyi::y#6 = (byte) line_xdyi::y#2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2#1] -- register_copy 
  //SEG239 line_xdyi::@2
  b2:
  //SEG240 [132] (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] ) -- zpby1=zpby2_plus_1 
    lda x1
    clc
    adc #1
    sta _8
  //SEG241 [133] if((byte) line_xdyi::x#2<(byte~) line_xdyi::$8) goto line_xdyi::@1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] ) -- xby_lt_zpby1_then_la1 
    cpx _8
    bcc b1
  //SEG242 line_xdyi::@return
  //SEG243 [134] return  [ ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 ] )
    rts
}
//SEG244 line_ydxd
line_ydxd: {
    .label y = 6
    .label y1 = 5
    .label yd = 4
    .label xd = 3
    .label e = 7
  //SEG245 [136] (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda xd
    lsr
    sta e
  //SEG246 [137] phi from line_ydxd line_ydxd::@2 to line_ydxd::@1 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1]
  //SEG247 [137] phi (byte) line_ydxd::e#3 = (byte) line_ydxd::e#0 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#0] -- register_copy 
  //SEG248 [137] phi (byte) line_ydxd::y#3 = (byte) line_ydxd::y#6 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#1] -- register_copy 
  //SEG249 [137] phi (byte) line_ydxd::x#3 = (byte) line_ydxd::x#5 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#2] -- register_copy 
  //SEG250 line_ydxd::@1
  b1:
  //SEG251 [138] (byte) plot::x#3 ← (byte) line_ydxd::x#3 [ plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
    // (byte) plot::x#3 = (byte) line_ydxd::x#3  // register copy reg byte x
  //SEG252 [139] (byte) plot::y#3 ← (byte) line_ydxd::y#3 [ plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG253 [140] call plot param-assignment [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
  //SEG254 [106] phi from line_ydxd::@1 to plot [phi:line_ydxd::@1->plot]
  //SEG255 [106] phi (byte) plot::y#4 = (byte) plot::y#3 [phi:line_ydxd::@1->plot#0] -- register_copy 
  //SEG256 [106] phi (byte) plot::x#4 = (byte) plot::x#3 [phi:line_ydxd::@1->plot#1] -- register_copy 
    jsr plot
  //SEG257 line_ydxd::@5
  //SEG258 [141] (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG259 [142] (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc xd
    sta e
  //SEG260 [143] if((byte) line_ydxd::yd#5>=(byte) line_ydxd::e#1) goto line_ydxd::@2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp e
    bcs b2
  //SEG261 line_ydxd::@3
  //SEG262 [144] (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] ) -- xby=xby_minus_1 
    dex
  //SEG263 [145] (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc yd
    sta e
  //SEG264 [146] phi from line_ydxd::@3 line_ydxd::@5 to line_ydxd::@2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2]
  //SEG265 [146] phi (byte) line_ydxd::e#6 = (byte) line_ydxd::e#2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2#0] -- register_copy 
  //SEG266 [146] phi (byte) line_ydxd::x#6 = (byte) line_ydxd::x#2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2#1] -- register_copy 
  //SEG267 line_ydxd::@2
  b2:
  //SEG268 [147] (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] ) -- aby=zpby1_plus_1 
    lda y1
    clc
    adc #1
  //SEG269 [148] if((byte) line_ydxd::y#2<(byte~) line_ydxd::$8) goto line_ydxd::@1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] ) -- zpby1_lt_aby_then_la1 
    cmp y
    bcs b1
  //SEG270 line_ydxd::@return
  //SEG271 [149] return  [ ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 ] )
    rts
}
//SEG272 line_xdyd
line_xdyd: {
    .label _8 = $a
    .label y = 6
    .label x1 = 5
    .label xd = 4
    .label yd = 3
    .label e = 7
  //SEG273 [151] (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda yd
    lsr
    sta e
  //SEG274 [152] phi from line_xdyd line_xdyd::@2 to line_xdyd::@1 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1]
  //SEG275 [152] phi (byte) line_xdyd::e#3 = (byte) line_xdyd::e#0 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#0] -- register_copy 
  //SEG276 [152] phi (byte) line_xdyd::y#3 = (byte) line_xdyd::y#5 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#1] -- register_copy 
  //SEG277 [152] phi (byte) line_xdyd::x#3 = (byte) line_xdyd::x#6 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#2] -- register_copy 
  //SEG278 line_xdyd::@1
  b1:
  //SEG279 [153] (byte) plot::x#1 ← (byte) line_xdyd::x#3 [ plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
    // (byte) plot::x#1 = (byte) line_xdyd::x#3  // register copy reg byte x
  //SEG280 [154] (byte) plot::y#1 ← (byte) line_xdyd::y#3 [ plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG281 [155] call plot param-assignment [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
  //SEG282 [106] phi from line_xdyd::@1 to plot [phi:line_xdyd::@1->plot]
  //SEG283 [106] phi (byte) plot::y#4 = (byte) plot::y#1 [phi:line_xdyd::@1->plot#0] -- register_copy 
  //SEG284 [106] phi (byte) plot::x#4 = (byte) plot::x#1 [phi:line_xdyd::@1->plot#1] -- register_copy 
    jsr plot
  //SEG285 line_xdyd::@5
  //SEG286 [156] (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG287 [157] (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc yd
    sta e
  //SEG288 [158] if((byte) line_xdyd::xd#5>=(byte) line_xdyd::e#1) goto line_xdyd::@2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda xd
    cmp e
    bcs b2
  //SEG289 line_xdyd::@3
  //SEG290 [159] (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] ) -- zpby1=zpby1_minus_1 
    dec y
  //SEG291 [160] (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc xd
    sta e
  //SEG292 [161] phi from line_xdyd::@3 line_xdyd::@5 to line_xdyd::@2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2]
  //SEG293 [161] phi (byte) line_xdyd::e#6 = (byte) line_xdyd::e#2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2#0] -- register_copy 
  //SEG294 [161] phi (byte) line_xdyd::y#6 = (byte) line_xdyd::y#2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2#1] -- register_copy 
  //SEG295 line_xdyd::@2
  b2:
  //SEG296 [162] (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] ) -- zpby1=zpby2_plus_1 
    lda x1
    clc
    adc #1
    sta _8
  //SEG297 [163] if((byte) line_xdyd::x#2<(byte~) line_xdyd::$8) goto line_xdyd::@1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] ) -- xby_lt_zpby1_then_la1 
    cpx _8
    bcc b1
  //SEG298 line_xdyd::@return
  //SEG299 [164] return  [ ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 ] )
    rts
}
//SEG300 init_plot_tables
init_plot_tables: {
    .label _6 = 2
    .label yoffs = 8
  //SEG301 [166] phi from init_plot_tables to init_plot_tables::@1 [phi:init_plot_tables->init_plot_tables::@1]
  //SEG302 [166] phi (byte) init_plot_tables::bits#3 = (byte/word/signed word) 128 [phi:init_plot_tables->init_plot_tables::@1#0] -- yby=coby1 
    ldy #$80
  //SEG303 [166] phi (byte) init_plot_tables::x#2 = (byte/signed byte/word/signed word) 0 [phi:init_plot_tables->init_plot_tables::@1#1] -- xby=coby1 
    ldx #0
  //SEG304 [166] phi from init_plot_tables::@2 to init_plot_tables::@1 [phi:init_plot_tables::@2->init_plot_tables::@1]
  //SEG305 [166] phi (byte) init_plot_tables::bits#3 = (byte) init_plot_tables::bits#4 [phi:init_plot_tables::@2->init_plot_tables::@1#0] -- register_copy 
  //SEG306 [166] phi (byte) init_plot_tables::x#2 = (byte) init_plot_tables::x#1 [phi:init_plot_tables::@2->init_plot_tables::@1#1] -- register_copy 
  //SEG307 init_plot_tables::@1
  b1:
  //SEG308 [167] (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ) -- aby=xby_band_coby1 
    txa
    and #$f8
  //SEG309 [168] *((const byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_xlo,x
  //SEG310 [169] *((const byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← >(const byte*) BITMAP#0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=coby2 
    lda #>BITMAP
    sta plot_xhi,x
  //SEG311 [170] *((const byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=yby 
    tya
    sta plot_bit,x
  //SEG312 [171] (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ) -- yby=yby_ror_1 
    tya
    lsr
    tay
  //SEG313 [172] if((byte) init_plot_tables::bits#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ) -- yby_neq_0_then_la1 
    cpy #0
    bne b2
  //SEG314 [173] phi from init_plot_tables::@1 to init_plot_tables::@2 [phi:init_plot_tables::@1->init_plot_tables::@2]
  //SEG315 [173] phi (byte) init_plot_tables::bits#4 = (byte/word/signed word) 128 [phi:init_plot_tables::@1->init_plot_tables::@2#0] -- yby=coby1 
    ldy #$80
  //SEG316 init_plot_tables::@2
  b2:
  //SEG317 [174] (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ) -- xby=_inc_xby 
    inx
  //SEG318 [175] if((byte) init_plot_tables::x#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@1 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ) -- xby_neq_0_then_la1 
    cpx #0
    bne b1
  //SEG319 [176] phi from init_plot_tables::@2 to init_plot_tables::@3 [phi:init_plot_tables::@2->init_plot_tables::@3]
  //SEG320 [176] phi (byte*) init_plot_tables::yoffs#2 = ((byte*))(byte/signed byte/word/signed word) 0 [phi:init_plot_tables::@2->init_plot_tables::@3#0] -- zpptrby1=cowo1 
    lda #<0
    sta yoffs
    sta yoffs+1
  //SEG321 [176] phi (byte) init_plot_tables::y#2 = (byte/signed byte/word/signed word) 0 [phi:init_plot_tables::@2->init_plot_tables::@3#1] -- xby=coby1 
    tax
  //SEG322 [176] phi from init_plot_tables::@4 to init_plot_tables::@3 [phi:init_plot_tables::@4->init_plot_tables::@3]
  //SEG323 [176] phi (byte*) init_plot_tables::yoffs#2 = (byte*) init_plot_tables::yoffs#4 [phi:init_plot_tables::@4->init_plot_tables::@3#0] -- register_copy 
  //SEG324 [176] phi (byte) init_plot_tables::y#2 = (byte) init_plot_tables::y#1 [phi:init_plot_tables::@4->init_plot_tables::@3#1] -- register_copy 
  //SEG325 init_plot_tables::@3
  b3:
  //SEG326 [177] (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ) -- zpby1=xby_band_coby1 
    txa
    and #7
    sta _6
  //SEG327 [178] (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ] ) -- aby=_lo_zpptrby1 
    lda yoffs
  //SEG328 [179] (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ] ) -- aby=zpby1_bor_aby 
    ora _6
  //SEG329 [180] *((const byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_ylo,x
  //SEG330 [181] (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ) -- aby=_hi_zpptrby1 
    lda yoffs+1
  //SEG331 [182] *((const byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_yhi,x
  //SEG332 [183] (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ) -- aby=xby_band_coby1 
    txa
    and #7
  //SEG333 [184] if((byte~) init_plot_tables::$10!=(byte/signed byte/word/signed word) 7) goto init_plot_tables::@4 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- aby_neq_coby1_then_la1 
    cmp #7
    bne b4
  //SEG334 init_plot_tables::@7
  //SEG335 [185] (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ) -- zpptrby1=zpptrby1_plus_cowo1 
    lda yoffs
    clc
    adc #<$140
    sta yoffs
    lda yoffs+1
    adc #>$140
    sta yoffs+1
  //SEG336 [186] phi from init_plot_tables::@3 init_plot_tables::@7 to init_plot_tables::@4 [phi:init_plot_tables::@3/init_plot_tables::@7->init_plot_tables::@4]
  //SEG337 [186] phi (byte*) init_plot_tables::yoffs#4 = (byte*) init_plot_tables::yoffs#2 [phi:init_plot_tables::@3/init_plot_tables::@7->init_plot_tables::@4#0] -- register_copy 
  //SEG338 init_plot_tables::@4
  b4:
  //SEG339 [187] (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ) -- xby=_inc_xby 
    inx
  //SEG340 [188] if((byte) init_plot_tables::y#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@3 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ) -- xby_neq_0_then_la1 
    cpx #0
    bne b3
  //SEG341 init_plot_tables::@return
  //SEG342 [189] return  [ ] ( main:2::init_plot_tables:10 [ ] )
    rts
  //SEG343 [190] phi from init_plot_tables::@1 to init_plot_tables::@10 [phi:init_plot_tables::@1->init_plot_tables::@10]
  //SEG344 init_plot_tables::@10
  //SEG345 [173] phi from init_plot_tables::@10 to init_plot_tables::@2 [phi:init_plot_tables::@10->init_plot_tables::@2]
  //SEG346 [173] phi (byte) init_plot_tables::bits#4 = (byte) init_plot_tables::bits#1 [phi:init_plot_tables::@10->init_plot_tables::@2#0] -- register_copy 
    jmp b2
}
//SEG347 init_screen
init_screen: {
    .label b = 8
    .label c = 8
  //SEG348 [192] phi from init_screen to init_screen::@1 [phi:init_screen->init_screen::@1]
  //SEG349 [192] phi (byte*) init_screen::b#2 = (const byte*) BITMAP#0 [phi:init_screen->init_screen::@1#0] -- zpptrby1=cowo1 
    lda #<BITMAP
    sta b
    lda #>BITMAP
    sta b+1
  //SEG350 [192] phi from init_screen::@1 to init_screen::@1 [phi:init_screen::@1->init_screen::@1]
  //SEG351 [192] phi (byte*) init_screen::b#2 = (byte*) init_screen::b#1 [phi:init_screen::@1->init_screen::@1#0] -- register_copy 
  //SEG352 init_screen::@1
  b1:
  //SEG353 [193] *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0 [ init_screen::b#2 ] ( main:2::init_screen:8 [ init_screen::b#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    tya
    sta (b),y
  //SEG354 [194] (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc b
    bne !+
    inc b+1
  !:
  //SEG355 [195] if((byte*) init_screen::b#1!=(const byte*) BITMAP#0+(word/signed word) 8192) goto init_screen::@1 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] ) -- zpptrby1_neq_cowo1_then_la1 
    lda b+1
    cmp #>BITMAP+$2000
    bne b1
    lda b
    cmp #<BITMAP+$2000
    bne b1
  //SEG356 [196] phi from init_screen::@1 to init_screen::@2 [phi:init_screen::@1->init_screen::@2]
  //SEG357 [196] phi (byte*) init_screen::c#2 = (const byte*) SCREEN#0 [phi:init_screen::@1->init_screen::@2#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta c
    lda #>SCREEN
    sta c+1
  //SEG358 [196] phi from init_screen::@2 to init_screen::@2 [phi:init_screen::@2->init_screen::@2]
  //SEG359 [196] phi (byte*) init_screen::c#2 = (byte*) init_screen::c#1 [phi:init_screen::@2->init_screen::@2#0] -- register_copy 
  //SEG360 init_screen::@2
  b2:
  //SEG361 [197] *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20 [ init_screen::c#2 ] ( main:2::init_screen:8 [ init_screen::c#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #$14
    sta (c),y
  //SEG362 [198] (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc c
    bne !+
    inc c+1
  !:
  //SEG363 [199] if((byte*) init_screen::c#1!=(const byte*) SCREEN#0+(word/signed word) 1024) goto init_screen::@2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] ) -- zpptrby1_neq_cowo1_then_la1 
    lda c+1
    cmp #>SCREEN+$400
    bne b2
    lda c
    cmp #<SCREEN+$400
    bne b2
  //SEG364 init_screen::@return
  //SEG365 [200] return  [ ] ( main:2::init_screen:8 [ ] )
    rts
}

Removing unreachable instruction jmp b2
Succesful ASM optimization Pass5UnreachableCodeElimination
ASSEMBLER
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const BGCOL = $d020
  .const FGCOL = $d021
  .const D018 = $d018
  .const D011 = $d011
  .const BMM = $20
  .const DEN = $10
  .const RSEL = 8
  .const SCREEN = $400
  .const BITMAP = $2000
  .const plot_xlo = $1000
  .const plot_xhi = $1100
  .const plot_ylo = $1200
  .const plot_yhi = $1300
  .const plot_bit = $1400
  .const lines_cnt = 8
  lines_x: .byte $3c, $50, $6e, $50, $3c, $28, $a, $28, $3c
  lines_y: .byte $a, $28, $3c, $50, $6e, $50, $3c, $28, $a
//SEG2 @begin
//SEG3 [1] phi from @begin to @10 [phi:@begin->@10]
//SEG4 @10
//SEG5 [2] call main param-assignment [ ] ( )
  jsr main
//SEG6 [3] phi from @10 to @end [phi:@10->@end]
//SEG7 @end
//SEG8 main
main: {
  //SEG9 [4] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #0
    sta BGCOL
  //SEG10 [5] *((const byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    sta FGCOL
  //SEG11 [6] *((const byte*) D011#0) ← (const byte) BMM#0|(const byte) DEN#0|(const byte) RSEL#0|(byte/signed byte/word/signed word) 3 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #BMM|DEN|RSEL|3
    sta D011
  //SEG12 [7] *((const byte*) D018#0) ← (byte/signed byte/word/signed word) 24 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #$18
    sta D018
  //SEG13 [8] call init_screen param-assignment [ ] ( main:2 [ ] )
  //SEG14 [191] phi from main to init_screen [phi:main->init_screen]
    jsr init_screen
  //SEG15 [9] phi from main to main::@3 [phi:main->main::@3]
  //SEG16 main::@3
  //SEG17 [10] call init_plot_tables param-assignment [ ] ( main:2 [ ] )
  //SEG18 [165] phi from main::@3 to init_plot_tables [phi:main::@3->init_plot_tables]
    jsr init_plot_tables
  //SEG19 [11] phi from main::@3 main::@5 to main::@1 [phi:main::@3/main::@5->main::@1]
  //SEG20 main::@1
  b1:
  //SEG21 [12] call lines param-assignment [ ] ( main:2 [ ] )
  //SEG22 [15] phi from main::@1 to lines [phi:main::@1->lines]
    jsr lines
  //SEG23 main::@5
  //SEG24 [13] if(true) goto main::@1 [ ] ( main:2 [ ] ) -- true_then_la1 
    jmp b1
  //SEG25 main::@return
  //SEG26 [14] return  [ ] ( main:2 [ ] )
}
//SEG27 lines
lines: {
    .label _2 = 3
    .label _3 = 4
    .label l = 2
  //SEG28 [16] phi from lines to lines::@1 [phi:lines->lines::@1]
  //SEG29 [16] phi (byte) lines::l#2 = (byte/signed byte/word/signed word) 0 [phi:lines->lines::@1#0] -- zpby1=coby1 
    lda #0
    sta l
  //SEG30 [16] phi from lines::@3 to lines::@1 [phi:lines::@3->lines::@1]
  //SEG31 [16] phi (byte) lines::l#2 = (byte) lines::l#1 [phi:lines::@3->lines::@1#0] -- register_copy 
  //SEG32 lines::@1
  b1:
  //SEG33 [17] (byte~) lines::$0 ← (const byte[]) lines_x#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 ] ( main:2::lines:12 [ lines::l#2 lines::$0 ] ) -- yby=cowo1_derefidx_zpby1 
    ldx l
    lda lines_x,x
    tay
  //SEG34 [18] (byte~) lines::$2 ← (const byte[]) lines_x#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx l
    lda lines_x+1,x
    sta _2
  //SEG35 [19] (byte~) lines::$3 ← (const byte[]) lines_y#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 lines::$3 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx l
    lda lines_y,x
    sta _3
  //SEG36 [20] (byte~) lines::$5 ← (const byte[]) lines_y#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ] ) -- xby=cowo1_derefidx_zpby1 
    ldx l
    lda lines_y+1,x
    tax
  //SEG37 [21] (byte) line::x0#0 ← (byte~) lines::$0 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ] ( main:2::lines:12 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ] ) -- zpby1=yby 
    sty line.x0
  //SEG38 [22] (byte) line::x1#0 ← (byte~) lines::$2 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ] ( main:2::lines:12 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ] )
    // (byte) line::x1#0 = (byte~) lines::$2  // register copy zp ZP_BYTE:3
  //SEG39 [23] (byte) line::y0#0 ← (byte~) lines::$3 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ] ( main:2::lines:12 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ] ) -- yby=zpby1 
    ldy _3
  //SEG40 [24] (byte) line::y1#0 ← (byte~) lines::$5 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ( main:2::lines:12 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ) -- zpby1=xby 
    stx line.y1
  //SEG41 [25] call line param-assignment [ lines::l#2 ] ( main:2::lines:12 [ lines::l#2 ] )
    jsr line
  //SEG42 lines::@3
  //SEG43 [26] (byte) lines::l#1 ← ++ (byte) lines::l#2 [ lines::l#1 ] ( main:2::lines:12 [ lines::l#1 ] ) -- zpby1=_inc_zpby1 
    inc l
  //SEG44 [27] if((byte) lines::l#1<(const byte) lines_cnt#0) goto lines::@1 [ lines::l#1 ] ( main:2::lines:12 [ lines::l#1 ] ) -- zpby1_lt_coby1_then_la1 
    lda l
    cmp #lines_cnt
    bcc b1
  //SEG45 lines::@return
  //SEG46 [28] return  [ ] ( main:2::lines:12 [ ] )
    rts
}
//SEG47 line
line: {
    .label x0 = 5
    .label x1 = 3
    .label y1 = 4
    .label xd = 7
    .label yd = $a
  //SEG48 [29] if((byte) line::x0#0>=(byte) line::x1#0) goto line::@1 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ) -- zpby1_ge_zpby2_then_la1 
    lda x0
    cmp x1
    bcs b1
  //SEG49 line::@15
  //SEG50 [30] (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ) -- zpby1=zpby2_minus_zpby3 
    lda x1
    sec
    sbc x0
    sta xd
  //SEG51 [31] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@2 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ) -- yby_ge_zpby1_then_la1 
    cpy y1
    bcs b2
  //SEG52 line::@16
  //SEG53 [32] (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ) -- zpby1=zpby2_minus_yby 
    sty $ff
    lda y1
    sec
    sbc $ff
    sta yd
  //SEG54 [33] if((byte) line::yd#1>=(byte) line::xd#1) goto line::@3 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b3
  //SEG55 line::@17
  //SEG56 [34] (byte) line_xdyi::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG57 [35] (byte) line_xdyi::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ] ) -- zpby1=yby 
    sty line_xdyi.y
  //SEG58 [36] (byte) line_xdyi::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ] ) -- zpby1=zpby2 
    lda x1
    sta line_xdyi.x1
  //SEG59 [37] (byte) line_xdyi::xd#0 ← (byte) line::xd#1 [ line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyi.xd
  //SEG60 [38] (byte) line_xdyi::yd#0 ← (byte) line::yd#1 [ line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyi.yd
  //SEG61 [39] call line_xdyi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG62 [120] phi from line::@17 to line_xdyi [phi:line::@17->line_xdyi]
  //SEG63 [120] phi (byte) line_xdyi::x1#6 = (byte) line_xdyi::x1#0 [phi:line::@17->line_xdyi#0] -- register_copy 
  //SEG64 [120] phi (byte) line_xdyi::xd#5 = (byte) line_xdyi::xd#0 [phi:line::@17->line_xdyi#1] -- register_copy 
  //SEG65 [120] phi (byte) line_xdyi::y#5 = (byte) line_xdyi::y#0 [phi:line::@17->line_xdyi#2] -- register_copy 
  //SEG66 [120] phi (byte) line_xdyi::x#6 = (byte) line_xdyi::x#0 [phi:line::@17->line_xdyi#3] -- register_copy 
  //SEG67 [120] phi (byte) line_xdyi::yd#2 = (byte) line_xdyi::yd#0 [phi:line::@17->line_xdyi#4] -- register_copy 
    jsr line_xdyi
  //SEG68 line::@return
  breturn:
  //SEG69 [40] return  [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
    rts
  //SEG70 line::@3
  b3:
  //SEG71 [41] (byte) line_ydxi::y#0 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ] ) -- zpby1=yby 
    sty line_ydxi.y
  //SEG72 [42] (byte) line_ydxi::x#0 ← (byte) line::x0#0 [ line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG73 [43] (byte) line_ydxi::y1#0 ← (byte) line::y1#0 [ line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxi.y1
  //SEG74 [44] (byte) line_ydxi::yd#0 ← (byte) line::yd#1 [ line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxi.yd
  //SEG75 [45] (byte) line_ydxi::xd#0 ← (byte) line::xd#1 [ line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxi.xd
  //SEG76 [46] call line_ydxi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG77 [91] phi from line::@3 to line_ydxi [phi:line::@3->line_ydxi]
  //SEG78 [91] phi (byte) line_ydxi::y1#6 = (byte) line_ydxi::y1#0 [phi:line::@3->line_ydxi#0] -- register_copy 
  //SEG79 [91] phi (byte) line_ydxi::yd#5 = (byte) line_ydxi::yd#0 [phi:line::@3->line_ydxi#1] -- register_copy 
  //SEG80 [91] phi (byte) line_ydxi::y#6 = (byte) line_ydxi::y#0 [phi:line::@3->line_ydxi#2] -- register_copy 
  //SEG81 [91] phi (byte) line_ydxi::x#5 = (byte) line_ydxi::x#0 [phi:line::@3->line_ydxi#3] -- register_copy 
  //SEG82 [91] phi (byte) line_ydxi::xd#2 = (byte) line_ydxi::xd#0 [phi:line::@3->line_ydxi#4] -- register_copy 
    jsr line_ydxi
    jmp breturn
  //SEG83 line::@2
  b2:
  //SEG84 [47] (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ) -- zpby1=yby_minus_zpby2 
    tya
    sec
    sbc y1
    sta yd
  //SEG85 [48] if((byte) line::yd#0>=(byte) line::xd#1) goto line::@6 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b6
  //SEG86 line::@20
  //SEG87 [49] (byte) line_xdyd::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG88 [50] (byte) line_xdyd::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ] ) -- zpby1=yby 
    sty line_xdyd.y
  //SEG89 [51] (byte) line_xdyd::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ] ) -- zpby1=zpby2 
    lda x1
    sta line_xdyd.x1
  //SEG90 [52] (byte) line_xdyd::xd#0 ← (byte) line::xd#1 [ line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyd.xd
  //SEG91 [53] (byte) line_xdyd::yd#0 ← (byte) line::yd#0 [ line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyd.yd
  //SEG92 [54] call line_xdyd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG93 [150] phi from line::@20 to line_xdyd [phi:line::@20->line_xdyd]
  //SEG94 [150] phi (byte) line_xdyd::x1#6 = (byte) line_xdyd::x1#0 [phi:line::@20->line_xdyd#0] -- register_copy 
  //SEG95 [150] phi (byte) line_xdyd::xd#5 = (byte) line_xdyd::xd#0 [phi:line::@20->line_xdyd#1] -- register_copy 
  //SEG96 [150] phi (byte) line_xdyd::y#5 = (byte) line_xdyd::y#0 [phi:line::@20->line_xdyd#2] -- register_copy 
  //SEG97 [150] phi (byte) line_xdyd::x#6 = (byte) line_xdyd::x#0 [phi:line::@20->line_xdyd#3] -- register_copy 
  //SEG98 [150] phi (byte) line_xdyd::yd#2 = (byte) line_xdyd::yd#0 [phi:line::@20->line_xdyd#4] -- register_copy 
    jsr line_xdyd
    jmp breturn
  //SEG99 line::@6
  b6:
  //SEG100 [55] (byte) line_ydxd::y#0 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxd.y
  //SEG101 [56] (byte) line_ydxd::x#0 ← (byte) line::x1#0 [ line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ] ) -- xby=zpby1 
    ldx x1
  //SEG102 [57] (byte) line_ydxd::y1#0 ← (byte) line::y0#0 [ line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ] ) -- zpby1=yby 
    sty line_ydxd.y1
  //SEG103 [58] (byte) line_ydxd::yd#0 ← (byte) line::yd#0 [ line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxd.yd
  //SEG104 [59] (byte) line_ydxd::xd#0 ← (byte) line::xd#1 [ line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxd.xd
  //SEG105 [60] call line_ydxd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG106 [135] phi from line::@6 to line_ydxd [phi:line::@6->line_ydxd]
  //SEG107 [135] phi (byte) line_ydxd::y1#6 = (byte) line_ydxd::y1#0 [phi:line::@6->line_ydxd#0] -- register_copy 
  //SEG108 [135] phi (byte) line_ydxd::yd#5 = (byte) line_ydxd::yd#0 [phi:line::@6->line_ydxd#1] -- register_copy 
  //SEG109 [135] phi (byte) line_ydxd::y#6 = (byte) line_ydxd::y#0 [phi:line::@6->line_ydxd#2] -- register_copy 
  //SEG110 [135] phi (byte) line_ydxd::x#5 = (byte) line_ydxd::x#0 [phi:line::@6->line_ydxd#3] -- register_copy 
  //SEG111 [135] phi (byte) line_ydxd::xd#2 = (byte) line_ydxd::xd#0 [phi:line::@6->line_ydxd#4] -- register_copy 
    jsr line_ydxd
    jmp breturn
  //SEG112 line::@1
  b1:
  //SEG113 [61] (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ) -- zpby1=zpby2_minus_zpby3 
    lda x0
    sec
    sbc x1
    sta xd
  //SEG114 [62] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@9 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ) -- yby_ge_zpby1_then_la1 
    cpy y1
    bcs b9
  //SEG115 line::@23
  //SEG116 [63] (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ) -- zpby1=zpby2_minus_yby 
    sty $ff
    lda y1
    sec
    sbc $ff
    sta yd
  //SEG117 [64] if((byte) line::yd#3>=(byte) line::xd#0) goto line::@10 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b10
  //SEG118 line::@24
  //SEG119 [65] (byte) line_xdyd::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG120 [66] (byte) line_xdyd::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_xdyd.y
  //SEG121 [67] (byte) line_xdyd::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ] )
    // (byte) line_xdyd::x1#1 = (byte) line::x0#0  // register copy zp ZP_BYTE:5
  //SEG122 [68] (byte) line_xdyd::xd#1 ← (byte) line::xd#0 [ line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyd.xd
  //SEG123 [69] (byte) line_xdyd::yd#1 ← (byte) line::yd#3 [ line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyd.yd
  //SEG124 [70] call line_xdyd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG125 [150] phi from line::@24 to line_xdyd [phi:line::@24->line_xdyd]
  //SEG126 [150] phi (byte) line_xdyd::x1#6 = (byte) line_xdyd::x1#1 [phi:line::@24->line_xdyd#0] -- register_copy 
  //SEG127 [150] phi (byte) line_xdyd::xd#5 = (byte) line_xdyd::xd#1 [phi:line::@24->line_xdyd#1] -- register_copy 
  //SEG128 [150] phi (byte) line_xdyd::y#5 = (byte) line_xdyd::y#1 [phi:line::@24->line_xdyd#2] -- register_copy 
  //SEG129 [150] phi (byte) line_xdyd::x#6 = (byte) line_xdyd::x#1 [phi:line::@24->line_xdyd#3] -- register_copy 
  //SEG130 [150] phi (byte) line_xdyd::yd#2 = (byte) line_xdyd::yd#1 [phi:line::@24->line_xdyd#4] -- register_copy 
    jsr line_xdyd
    jmp breturn
  //SEG131 line::@10
  b10:
  //SEG132 [71] (byte) line_ydxd::y#1 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ] ) -- zpby1=yby 
    sty line_ydxd.y
  //SEG133 [72] (byte) line_ydxd::x#1 ← (byte) line::x0#0 [ line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ] ) -- xby=zpby1 
    ldx x0
  //SEG134 [73] (byte) line_ydxd::y1#1 ← (byte) line::y1#0 [ line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxd.y1
  //SEG135 [74] (byte) line_ydxd::yd#1 ← (byte) line::yd#3 [ line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxd.yd
  //SEG136 [75] (byte) line_ydxd::xd#1 ← (byte) line::xd#0 [ line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxd.xd
  //SEG137 [76] call line_ydxd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG138 [135] phi from line::@10 to line_ydxd [phi:line::@10->line_ydxd]
  //SEG139 [135] phi (byte) line_ydxd::y1#6 = (byte) line_ydxd::y1#1 [phi:line::@10->line_ydxd#0] -- register_copy 
  //SEG140 [135] phi (byte) line_ydxd::yd#5 = (byte) line_ydxd::yd#1 [phi:line::@10->line_ydxd#1] -- register_copy 
  //SEG141 [135] phi (byte) line_ydxd::y#6 = (byte) line_ydxd::y#1 [phi:line::@10->line_ydxd#2] -- register_copy 
  //SEG142 [135] phi (byte) line_ydxd::x#5 = (byte) line_ydxd::x#1 [phi:line::@10->line_ydxd#3] -- register_copy 
  //SEG143 [135] phi (byte) line_ydxd::xd#2 = (byte) line_ydxd::xd#1 [phi:line::@10->line_ydxd#4] -- register_copy 
    jsr line_ydxd
    jmp breturn
  //SEG144 line::@9
  b9:
  //SEG145 [77] (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ) -- zpby1=yby_minus_zpby2 
    tya
    sec
    sbc y1
    sta yd
  //SEG146 [78] if((byte) line::yd#10>=(byte) line::xd#0) goto line::@13 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b13
  //SEG147 line::@27
  //SEG148 [79] (byte) line_xdyi::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG149 [80] (byte) line_xdyi::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_xdyi.y
  //SEG150 [81] (byte) line_xdyi::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ] )
    // (byte) line_xdyi::x1#1 = (byte) line::x0#0  // register copy zp ZP_BYTE:5
  //SEG151 [82] (byte) line_xdyi::xd#1 ← (byte) line::xd#0 [ line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyi.xd
  //SEG152 [83] (byte) line_xdyi::yd#1 ← (byte) line::yd#10 [ line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyi.yd
  //SEG153 [84] call line_xdyi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG154 [120] phi from line::@27 to line_xdyi [phi:line::@27->line_xdyi]
  //SEG155 [120] phi (byte) line_xdyi::x1#6 = (byte) line_xdyi::x1#1 [phi:line::@27->line_xdyi#0] -- register_copy 
  //SEG156 [120] phi (byte) line_xdyi::xd#5 = (byte) line_xdyi::xd#1 [phi:line::@27->line_xdyi#1] -- register_copy 
  //SEG157 [120] phi (byte) line_xdyi::y#5 = (byte) line_xdyi::y#1 [phi:line::@27->line_xdyi#2] -- register_copy 
  //SEG158 [120] phi (byte) line_xdyi::x#6 = (byte) line_xdyi::x#1 [phi:line::@27->line_xdyi#3] -- register_copy 
  //SEG159 [120] phi (byte) line_xdyi::yd#2 = (byte) line_xdyi::yd#1 [phi:line::@27->line_xdyi#4] -- register_copy 
    jsr line_xdyi
    jmp breturn
  //SEG160 line::@13
  b13:
  //SEG161 [85] (byte) line_ydxi::y#1 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxi.y
  //SEG162 [86] (byte) line_ydxi::x#1 ← (byte) line::x1#0 [ line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG163 [87] (byte) line_ydxi::y1#1 ← (byte) line::y0#0 [ line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ] ) -- zpby1=yby 
    sty line_ydxi.y1
  //SEG164 [88] (byte) line_ydxi::yd#1 ← (byte) line::yd#10 [ line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxi.yd
  //SEG165 [89] (byte) line_ydxi::xd#1 ← (byte) line::xd#0 [ line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxi.xd
  //SEG166 [90] call line_ydxi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG167 [91] phi from line::@13 to line_ydxi [phi:line::@13->line_ydxi]
  //SEG168 [91] phi (byte) line_ydxi::y1#6 = (byte) line_ydxi::y1#1 [phi:line::@13->line_ydxi#0] -- register_copy 
  //SEG169 [91] phi (byte) line_ydxi::yd#5 = (byte) line_ydxi::yd#1 [phi:line::@13->line_ydxi#1] -- register_copy 
  //SEG170 [91] phi (byte) line_ydxi::y#6 = (byte) line_ydxi::y#1 [phi:line::@13->line_ydxi#2] -- register_copy 
  //SEG171 [91] phi (byte) line_ydxi::x#5 = (byte) line_ydxi::x#1 [phi:line::@13->line_ydxi#3] -- register_copy 
  //SEG172 [91] phi (byte) line_ydxi::xd#2 = (byte) line_ydxi::xd#1 [phi:line::@13->line_ydxi#4] -- register_copy 
    jsr line_ydxi
    jmp breturn
}
//SEG173 line_ydxi
line_ydxi: {
    .label y = 6
    .label y1 = 5
    .label yd = 4
    .label xd = 3
    .label e = 7
  //SEG174 [92] (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda xd
    lsr
    sta e
  //SEG175 [93] phi from line_ydxi line_ydxi::@2 to line_ydxi::@1 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1]
  //SEG176 [93] phi (byte) line_ydxi::e#3 = (byte) line_ydxi::e#0 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#0] -- register_copy 
  //SEG177 [93] phi (byte) line_ydxi::y#3 = (byte) line_ydxi::y#6 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#1] -- register_copy 
  //SEG178 [93] phi (byte) line_ydxi::x#3 = (byte) line_ydxi::x#5 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#2] -- register_copy 
  //SEG179 line_ydxi::@1
  b1:
  //SEG180 [94] (byte) plot::x#2 ← (byte) line_ydxi::x#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] )
    // (byte) plot::x#2 = (byte) line_ydxi::x#3  // register copy reg byte x
  //SEG181 [95] (byte) plot::y#2 ← (byte) line_ydxi::y#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] ) -- yby=zpby1 
    ldy y
  //SEG182 [96] call plot param-assignment [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] )
  //SEG183 [106] phi from line_ydxi::@1 to plot [phi:line_ydxi::@1->plot]
  //SEG184 [106] phi (byte) plot::y#4 = (byte) plot::y#2 [phi:line_ydxi::@1->plot#0] -- register_copy 
  //SEG185 [106] phi (byte) plot::x#4 = (byte) plot::x#2 [phi:line_ydxi::@1->plot#1] -- register_copy 
    jsr plot
  //SEG186 line_ydxi::@5
  //SEG187 [97] (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG188 [98] (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc xd
    sta e
  //SEG189 [99] if((byte) line_ydxi::yd#5>=(byte) line_ydxi::e#1) goto line_ydxi::@2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp e
    bcs b2
  //SEG190 line_ydxi::@3
  //SEG191 [100] (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG192 [101] (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc yd
    sta e
  //SEG193 [102] phi from line_ydxi::@3 line_ydxi::@5 to line_ydxi::@2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2]
  //SEG194 [102] phi (byte) line_ydxi::e#6 = (byte) line_ydxi::e#2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2#0] -- register_copy 
  //SEG195 [102] phi (byte) line_ydxi::x#6 = (byte) line_ydxi::x#2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2#1] -- register_copy 
  //SEG196 line_ydxi::@2
  b2:
  //SEG197 [103] (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] ) -- aby=zpby1_plus_1 
    lda y1
    clc
    adc #1
  //SEG198 [104] if((byte) line_ydxi::y#2<(byte~) line_ydxi::$8) goto line_ydxi::@1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] ) -- zpby1_lt_aby_then_la1 
    cmp y
    bcs b1
  //SEG199 line_ydxi::@return
  //SEG200 [105] return  [ ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 ] )
    rts
}
//SEG201 plot
plot: {
    .label plotter_x = 8
    .label plotter_y = $b
    .label plotter = 8
  //SEG202 [107] (byte~) plot::$0 ← (const byte[]) plot_xhi#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::$0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::$0 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_xhi,x
  //SEG203 [108] (byte*) plot::plotter_x#1 ← ((byte*))(byte/signed byte/word/signed word) 0 hi= (byte~) plot::$0 [ plot::x#4 plot::y#4 plot::plotter_x#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] ) -- zpptrby1=cowo1_sethi_aby 
    sta plotter_x+1
    lda #<0
    sta plotter_x
  //SEG204 [109] (byte~) plot::$1 ← (const byte[]) plot_xlo#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_xlo,x
  //SEG205 [110] (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1 [ plot::x#4 plot::y#4 plot::plotter_x#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] ) -- zpptrby1=zpptrby1_setlo_aby 
    sta plotter_x
  //SEG206 [111] (byte~) plot::$2 ← (const byte[]) plot_yhi#0 *idx (byte) plot::y#4 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] ) -- aby=cowo1_derefidx_yby 
    lda plot_yhi,y
  //SEG207 [112] (word) plot::plotter_y#1 ← (byte/signed byte/word/signed word) 0 hi= (byte~) plot::$2 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] ) -- zpwo1=coby1_sethi_aby 
    sta plotter_y+1
    lda #<0
    sta plotter_y
  //SEG208 [113] (byte~) plot::$3 ← (const byte[]) plot_ylo#0 *idx (byte) plot::y#4 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] ) -- aby=cowo1_derefidx_yby 
    lda plot_ylo,y
  //SEG209 [114] (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ) -- zpwo1=zpwo1_setlo_aby 
    sta plotter_y
  //SEG210 [115] (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2 [ plot::x#4 plot::plotter#0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] ) -- zpptrby1=zpptrby1_plus_zpwo1 
    lda plotter
    clc
    adc plotter_y
    sta plotter
    lda plotter+1
    adc plotter_y+1
    sta plotter+1
  //SEG211 [116] (byte~) plot::$5 ← (const byte[]) plot_bit#0 *idx (byte) plot::x#4 [ plot::plotter#0 plot::$5 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$5 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_bit,x
  //SEG212 [117] (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5 [ plot::plotter#0 plot::$6 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] ) -- aby=_deref_zpptrby1_bor_aby 
    ldy #0
    ora (plotter),y
  //SEG213 [118] *((byte*) plot::plotter#0) ← (byte~) plot::$6 [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ) -- _deref_zpptrby1=aby 
    sta (plotter),y
  //SEG214 plot::@return
  //SEG215 [119] return  [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
    rts
}
//SEG216 line_xdyi
line_xdyi: {
    .label _8 = $a
    .label y = 6
    .label x1 = 5
    .label xd = 4
    .label yd = 3
    .label e = 7
  //SEG217 [121] (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda yd
    lsr
    sta e
  //SEG218 [122] phi from line_xdyi line_xdyi::@2 to line_xdyi::@1 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1]
  //SEG219 [122] phi (byte) line_xdyi::e#3 = (byte) line_xdyi::e#0 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#0] -- register_copy 
  //SEG220 [122] phi (byte) line_xdyi::y#3 = (byte) line_xdyi::y#5 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#1] -- register_copy 
  //SEG221 [122] phi (byte) line_xdyi::x#3 = (byte) line_xdyi::x#6 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#2] -- register_copy 
  //SEG222 line_xdyi::@1
  b1:
  //SEG223 [123] (byte) plot::x#0 ← (byte) line_xdyi::x#3 [ plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
    // (byte) plot::x#0 = (byte) line_xdyi::x#3  // register copy reg byte x
  //SEG224 [124] (byte) plot::y#0 ← (byte) line_xdyi::y#3 [ plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG225 [125] call plot param-assignment [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
  //SEG226 [106] phi from line_xdyi::@1 to plot [phi:line_xdyi::@1->plot]
  //SEG227 [106] phi (byte) plot::y#4 = (byte) plot::y#0 [phi:line_xdyi::@1->plot#0] -- register_copy 
  //SEG228 [106] phi (byte) plot::x#4 = (byte) plot::x#0 [phi:line_xdyi::@1->plot#1] -- register_copy 
    jsr plot
  //SEG229 line_xdyi::@5
  //SEG230 [126] (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG231 [127] (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc yd
    sta e
  //SEG232 [128] if((byte) line_xdyi::xd#5>=(byte) line_xdyi::e#1) goto line_xdyi::@2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda xd
    cmp e
    bcs b2
  //SEG233 line_xdyi::@3
  //SEG234 [129] (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG235 [130] (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc xd
    sta e
  //SEG236 [131] phi from line_xdyi::@3 line_xdyi::@5 to line_xdyi::@2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2]
  //SEG237 [131] phi (byte) line_xdyi::e#6 = (byte) line_xdyi::e#2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2#0] -- register_copy 
  //SEG238 [131] phi (byte) line_xdyi::y#6 = (byte) line_xdyi::y#2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2#1] -- register_copy 
  //SEG239 line_xdyi::@2
  b2:
  //SEG240 [132] (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] ) -- zpby1=zpby2_plus_1 
    lda x1
    clc
    adc #1
    sta _8
  //SEG241 [133] if((byte) line_xdyi::x#2<(byte~) line_xdyi::$8) goto line_xdyi::@1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] ) -- xby_lt_zpby1_then_la1 
    cpx _8
    bcc b1
  //SEG242 line_xdyi::@return
  //SEG243 [134] return  [ ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 ] )
    rts
}
//SEG244 line_ydxd
line_ydxd: {
    .label y = 6
    .label y1 = 5
    .label yd = 4
    .label xd = 3
    .label e = 7
  //SEG245 [136] (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda xd
    lsr
    sta e
  //SEG246 [137] phi from line_ydxd line_ydxd::@2 to line_ydxd::@1 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1]
  //SEG247 [137] phi (byte) line_ydxd::e#3 = (byte) line_ydxd::e#0 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#0] -- register_copy 
  //SEG248 [137] phi (byte) line_ydxd::y#3 = (byte) line_ydxd::y#6 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#1] -- register_copy 
  //SEG249 [137] phi (byte) line_ydxd::x#3 = (byte) line_ydxd::x#5 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#2] -- register_copy 
  //SEG250 line_ydxd::@1
  b1:
  //SEG251 [138] (byte) plot::x#3 ← (byte) line_ydxd::x#3 [ plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
    // (byte) plot::x#3 = (byte) line_ydxd::x#3  // register copy reg byte x
  //SEG252 [139] (byte) plot::y#3 ← (byte) line_ydxd::y#3 [ plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG253 [140] call plot param-assignment [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
  //SEG254 [106] phi from line_ydxd::@1 to plot [phi:line_ydxd::@1->plot]
  //SEG255 [106] phi (byte) plot::y#4 = (byte) plot::y#3 [phi:line_ydxd::@1->plot#0] -- register_copy 
  //SEG256 [106] phi (byte) plot::x#4 = (byte) plot::x#3 [phi:line_ydxd::@1->plot#1] -- register_copy 
    jsr plot
  //SEG257 line_ydxd::@5
  //SEG258 [141] (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG259 [142] (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc xd
    sta e
  //SEG260 [143] if((byte) line_ydxd::yd#5>=(byte) line_ydxd::e#1) goto line_ydxd::@2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp e
    bcs b2
  //SEG261 line_ydxd::@3
  //SEG262 [144] (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] ) -- xby=xby_minus_1 
    dex
  //SEG263 [145] (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc yd
    sta e
  //SEG264 [146] phi from line_ydxd::@3 line_ydxd::@5 to line_ydxd::@2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2]
  //SEG265 [146] phi (byte) line_ydxd::e#6 = (byte) line_ydxd::e#2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2#0] -- register_copy 
  //SEG266 [146] phi (byte) line_ydxd::x#6 = (byte) line_ydxd::x#2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2#1] -- register_copy 
  //SEG267 line_ydxd::@2
  b2:
  //SEG268 [147] (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] ) -- aby=zpby1_plus_1 
    lda y1
    clc
    adc #1
  //SEG269 [148] if((byte) line_ydxd::y#2<(byte~) line_ydxd::$8) goto line_ydxd::@1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] ) -- zpby1_lt_aby_then_la1 
    cmp y
    bcs b1
  //SEG270 line_ydxd::@return
  //SEG271 [149] return  [ ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 ] )
    rts
}
//SEG272 line_xdyd
line_xdyd: {
    .label _8 = $a
    .label y = 6
    .label x1 = 5
    .label xd = 4
    .label yd = 3
    .label e = 7
  //SEG273 [151] (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda yd
    lsr
    sta e
  //SEG274 [152] phi from line_xdyd line_xdyd::@2 to line_xdyd::@1 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1]
  //SEG275 [152] phi (byte) line_xdyd::e#3 = (byte) line_xdyd::e#0 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#0] -- register_copy 
  //SEG276 [152] phi (byte) line_xdyd::y#3 = (byte) line_xdyd::y#5 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#1] -- register_copy 
  //SEG277 [152] phi (byte) line_xdyd::x#3 = (byte) line_xdyd::x#6 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#2] -- register_copy 
  //SEG278 line_xdyd::@1
  b1:
  //SEG279 [153] (byte) plot::x#1 ← (byte) line_xdyd::x#3 [ plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
    // (byte) plot::x#1 = (byte) line_xdyd::x#3  // register copy reg byte x
  //SEG280 [154] (byte) plot::y#1 ← (byte) line_xdyd::y#3 [ plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG281 [155] call plot param-assignment [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
  //SEG282 [106] phi from line_xdyd::@1 to plot [phi:line_xdyd::@1->plot]
  //SEG283 [106] phi (byte) plot::y#4 = (byte) plot::y#1 [phi:line_xdyd::@1->plot#0] -- register_copy 
  //SEG284 [106] phi (byte) plot::x#4 = (byte) plot::x#1 [phi:line_xdyd::@1->plot#1] -- register_copy 
    jsr plot
  //SEG285 line_xdyd::@5
  //SEG286 [156] (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG287 [157] (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc yd
    sta e
  //SEG288 [158] if((byte) line_xdyd::xd#5>=(byte) line_xdyd::e#1) goto line_xdyd::@2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda xd
    cmp e
    bcs b2
  //SEG289 line_xdyd::@3
  //SEG290 [159] (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] ) -- zpby1=zpby1_minus_1 
    dec y
  //SEG291 [160] (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc xd
    sta e
  //SEG292 [161] phi from line_xdyd::@3 line_xdyd::@5 to line_xdyd::@2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2]
  //SEG293 [161] phi (byte) line_xdyd::e#6 = (byte) line_xdyd::e#2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2#0] -- register_copy 
  //SEG294 [161] phi (byte) line_xdyd::y#6 = (byte) line_xdyd::y#2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2#1] -- register_copy 
  //SEG295 line_xdyd::@2
  b2:
  //SEG296 [162] (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] ) -- zpby1=zpby2_plus_1 
    lda x1
    clc
    adc #1
    sta _8
  //SEG297 [163] if((byte) line_xdyd::x#2<(byte~) line_xdyd::$8) goto line_xdyd::@1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] ) -- xby_lt_zpby1_then_la1 
    cpx _8
    bcc b1
  //SEG298 line_xdyd::@return
  //SEG299 [164] return  [ ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 ] )
    rts
}
//SEG300 init_plot_tables
init_plot_tables: {
    .label _6 = 2
    .label yoffs = 8
  //SEG301 [166] phi from init_plot_tables to init_plot_tables::@1 [phi:init_plot_tables->init_plot_tables::@1]
  //SEG302 [166] phi (byte) init_plot_tables::bits#3 = (byte/word/signed word) 128 [phi:init_plot_tables->init_plot_tables::@1#0] -- yby=coby1 
    ldy #$80
  //SEG303 [166] phi (byte) init_plot_tables::x#2 = (byte/signed byte/word/signed word) 0 [phi:init_plot_tables->init_plot_tables::@1#1] -- xby=coby1 
    ldx #0
  //SEG304 [166] phi from init_plot_tables::@2 to init_plot_tables::@1 [phi:init_plot_tables::@2->init_plot_tables::@1]
  //SEG305 [166] phi (byte) init_plot_tables::bits#3 = (byte) init_plot_tables::bits#4 [phi:init_plot_tables::@2->init_plot_tables::@1#0] -- register_copy 
  //SEG306 [166] phi (byte) init_plot_tables::x#2 = (byte) init_plot_tables::x#1 [phi:init_plot_tables::@2->init_plot_tables::@1#1] -- register_copy 
  //SEG307 init_plot_tables::@1
  b1:
  //SEG308 [167] (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ) -- aby=xby_band_coby1 
    txa
    and #$f8
  //SEG309 [168] *((const byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_xlo,x
  //SEG310 [169] *((const byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← >(const byte*) BITMAP#0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=coby2 
    lda #>BITMAP
    sta plot_xhi,x
  //SEG311 [170] *((const byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=yby 
    tya
    sta plot_bit,x
  //SEG312 [171] (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ) -- yby=yby_ror_1 
    tya
    lsr
    tay
  //SEG313 [172] if((byte) init_plot_tables::bits#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ) -- yby_neq_0_then_la1 
    cpy #0
    bne b2
  //SEG314 [173] phi from init_plot_tables::@1 to init_plot_tables::@2 [phi:init_plot_tables::@1->init_plot_tables::@2]
  //SEG315 [173] phi (byte) init_plot_tables::bits#4 = (byte/word/signed word) 128 [phi:init_plot_tables::@1->init_plot_tables::@2#0] -- yby=coby1 
    ldy #$80
  //SEG316 init_plot_tables::@2
  b2:
  //SEG317 [174] (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ) -- xby=_inc_xby 
    inx
  //SEG318 [175] if((byte) init_plot_tables::x#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@1 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ) -- xby_neq_0_then_la1 
    cpx #0
    bne b1
  //SEG319 [176] phi from init_plot_tables::@2 to init_plot_tables::@3 [phi:init_plot_tables::@2->init_plot_tables::@3]
  //SEG320 [176] phi (byte*) init_plot_tables::yoffs#2 = ((byte*))(byte/signed byte/word/signed word) 0 [phi:init_plot_tables::@2->init_plot_tables::@3#0] -- zpptrby1=cowo1 
    lda #<0
    sta yoffs
    sta yoffs+1
  //SEG321 [176] phi (byte) init_plot_tables::y#2 = (byte/signed byte/word/signed word) 0 [phi:init_plot_tables::@2->init_plot_tables::@3#1] -- xby=coby1 
    tax
  //SEG322 [176] phi from init_plot_tables::@4 to init_plot_tables::@3 [phi:init_plot_tables::@4->init_plot_tables::@3]
  //SEG323 [176] phi (byte*) init_plot_tables::yoffs#2 = (byte*) init_plot_tables::yoffs#4 [phi:init_plot_tables::@4->init_plot_tables::@3#0] -- register_copy 
  //SEG324 [176] phi (byte) init_plot_tables::y#2 = (byte) init_plot_tables::y#1 [phi:init_plot_tables::@4->init_plot_tables::@3#1] -- register_copy 
  //SEG325 init_plot_tables::@3
  b3:
  //SEG326 [177] (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ) -- zpby1=xby_band_coby1 
    txa
    and #7
    sta _6
  //SEG327 [178] (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ] ) -- aby=_lo_zpptrby1 
    lda yoffs
  //SEG328 [179] (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ] ) -- aby=zpby1_bor_aby 
    ora _6
  //SEG329 [180] *((const byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_ylo,x
  //SEG330 [181] (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ) -- aby=_hi_zpptrby1 
    lda yoffs+1
  //SEG331 [182] *((const byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_yhi,x
  //SEG332 [183] (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ) -- aby=xby_band_coby1 
    txa
    and #7
  //SEG333 [184] if((byte~) init_plot_tables::$10!=(byte/signed byte/word/signed word) 7) goto init_plot_tables::@4 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- aby_neq_coby1_then_la1 
    cmp #7
    bne b4
  //SEG334 init_plot_tables::@7
  //SEG335 [185] (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ) -- zpptrby1=zpptrby1_plus_cowo1 
    lda yoffs
    clc
    adc #<$140
    sta yoffs
    lda yoffs+1
    adc #>$140
    sta yoffs+1
  //SEG336 [186] phi from init_plot_tables::@3 init_plot_tables::@7 to init_plot_tables::@4 [phi:init_plot_tables::@3/init_plot_tables::@7->init_plot_tables::@4]
  //SEG337 [186] phi (byte*) init_plot_tables::yoffs#4 = (byte*) init_plot_tables::yoffs#2 [phi:init_plot_tables::@3/init_plot_tables::@7->init_plot_tables::@4#0] -- register_copy 
  //SEG338 init_plot_tables::@4
  b4:
  //SEG339 [187] (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ) -- xby=_inc_xby 
    inx
  //SEG340 [188] if((byte) init_plot_tables::y#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@3 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ) -- xby_neq_0_then_la1 
    cpx #0
    bne b3
  //SEG341 init_plot_tables::@return
  //SEG342 [189] return  [ ] ( main:2::init_plot_tables:10 [ ] )
    rts
  //SEG343 [190] phi from init_plot_tables::@1 to init_plot_tables::@10 [phi:init_plot_tables::@1->init_plot_tables::@10]
  //SEG344 init_plot_tables::@10
  //SEG345 [173] phi from init_plot_tables::@10 to init_plot_tables::@2 [phi:init_plot_tables::@10->init_plot_tables::@2]
  //SEG346 [173] phi (byte) init_plot_tables::bits#4 = (byte) init_plot_tables::bits#1 [phi:init_plot_tables::@10->init_plot_tables::@2#0] -- register_copy 
}
//SEG347 init_screen
init_screen: {
    .label b = 8
    .label c = 8
  //SEG348 [192] phi from init_screen to init_screen::@1 [phi:init_screen->init_screen::@1]
  //SEG349 [192] phi (byte*) init_screen::b#2 = (const byte*) BITMAP#0 [phi:init_screen->init_screen::@1#0] -- zpptrby1=cowo1 
    lda #<BITMAP
    sta b
    lda #>BITMAP
    sta b+1
  //SEG350 [192] phi from init_screen::@1 to init_screen::@1 [phi:init_screen::@1->init_screen::@1]
  //SEG351 [192] phi (byte*) init_screen::b#2 = (byte*) init_screen::b#1 [phi:init_screen::@1->init_screen::@1#0] -- register_copy 
  //SEG352 init_screen::@1
  b1:
  //SEG353 [193] *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0 [ init_screen::b#2 ] ( main:2::init_screen:8 [ init_screen::b#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    tya
    sta (b),y
  //SEG354 [194] (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc b
    bne !+
    inc b+1
  !:
  //SEG355 [195] if((byte*) init_screen::b#1!=(const byte*) BITMAP#0+(word/signed word) 8192) goto init_screen::@1 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] ) -- zpptrby1_neq_cowo1_then_la1 
    lda b+1
    cmp #>BITMAP+$2000
    bne b1
    lda b
    cmp #<BITMAP+$2000
    bne b1
  //SEG356 [196] phi from init_screen::@1 to init_screen::@2 [phi:init_screen::@1->init_screen::@2]
  //SEG357 [196] phi (byte*) init_screen::c#2 = (const byte*) SCREEN#0 [phi:init_screen::@1->init_screen::@2#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta c
    lda #>SCREEN
    sta c+1
  //SEG358 [196] phi from init_screen::@2 to init_screen::@2 [phi:init_screen::@2->init_screen::@2]
  //SEG359 [196] phi (byte*) init_screen::c#2 = (byte*) init_screen::c#1 [phi:init_screen::@2->init_screen::@2#0] -- register_copy 
  //SEG360 init_screen::@2
  b2:
  //SEG361 [197] *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20 [ init_screen::c#2 ] ( main:2::init_screen:8 [ init_screen::c#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #$14
    sta (c),y
  //SEG362 [198] (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc c
    bne !+
    inc c+1
  !:
  //SEG363 [199] if((byte*) init_screen::c#1!=(const byte*) SCREEN#0+(word/signed word) 1024) goto init_screen::@2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] ) -- zpptrby1_neq_cowo1_then_la1 
    lda c+1
    cmp #>SCREEN+$400
    bne b2
    lda c
    cmp #<SCREEN+$400
    bne b2
  //SEG364 init_screen::@return
  //SEG365 [200] return  [ ] ( main:2::init_screen:8 [ ] )
    rts
}

FINAL SYMBOL TABLE
(label) @10
(label) @begin
(label) @end
(byte*) BGCOL
(const byte*) BGCOL#0 BGCOL = ((byte*))(word) 53280
(byte*) BITMAP
(const byte*) BITMAP#0 BITMAP = ((byte*))(word/signed word) 8192
(byte) BMM
(const byte) BMM#0 BMM = (byte/signed byte/word/signed word) 32
(byte*) D011
(const byte*) D011#0 D011 = ((byte*))(word) 53265
(byte*) D018
(const byte*) D018#0 D018 = ((byte*))(word) 53272
(byte) DEN
(const byte) DEN#0 DEN = (byte/signed byte/word/signed word) 16
(byte*) FGCOL
(const byte*) FGCOL#0 FGCOL = ((byte*))(word) 53281
(byte) RSEL
(const byte) RSEL#0 RSEL = (byte/signed byte/word/signed word) 8
(byte*) SCREEN
(const byte*) SCREEN#0 SCREEN = ((byte*))(word/signed word) 1024
(void()) init_plot_tables()
(byte~) init_plot_tables::$0 reg byte a 22.0
(byte~) init_plot_tables::$10 reg byte a 22.0
(byte~) init_plot_tables::$6 $6 zp ZP_BYTE:2 11.0
(byte~) init_plot_tables::$7 reg byte a 22.0
(byte~) init_plot_tables::$8 reg byte a 22.0
(byte~) init_plot_tables::$9 reg byte a 22.0
(label) init_plot_tables::@1
(label) init_plot_tables::@10
(label) init_plot_tables::@2
(label) init_plot_tables::@3
(label) init_plot_tables::@4
(label) init_plot_tables::@7
(label) init_plot_tables::@return
(byte) init_plot_tables::bits
(byte) init_plot_tables::bits#1 reg byte y 11.0
(byte) init_plot_tables::bits#3 reg byte y 6.6000000000000005
(byte) init_plot_tables::bits#4 reg byte y 7.333333333333333
(byte) init_plot_tables::x
(byte) init_plot_tables::x#1 reg byte x 16.5
(byte) init_plot_tables::x#2 reg byte x 7.333333333333334
(byte) init_plot_tables::y
(byte) init_plot_tables::y#1 reg byte x 16.5
(byte) init_plot_tables::y#2 reg byte x 6.0
(byte*) init_plot_tables::yoffs
(byte*) init_plot_tables::yoffs#1 yoffs zp ZP_PTR_BYTE:8 22.0
(byte*) init_plot_tables::yoffs#2 yoffs zp ZP_PTR_BYTE:8 6.111111111111112
(byte*) init_plot_tables::yoffs#4 yoffs zp ZP_PTR_BYTE:8 11.0
(void()) init_screen()
(label) init_screen::@1
(label) init_screen::@2
(label) init_screen::@return
(byte*) init_screen::b
(byte*) init_screen::b#1 b zp ZP_PTR_BYTE:8 16.5
(byte*) init_screen::b#2 b zp ZP_PTR_BYTE:8 16.5
(byte*) init_screen::c
(byte*) init_screen::c#1 c zp ZP_PTR_BYTE:8 16.5
(byte*) init_screen::c#2 c zp ZP_PTR_BYTE:8 16.5
(void()) line((byte) line::x0 , (byte) line::x1 , (byte) line::y0 , (byte) line::y1)
(label) line::@1
(label) line::@10
(label) line::@13
(label) line::@15
(label) line::@16
(label) line::@17
(label) line::@2
(label) line::@20
(label) line::@23
(label) line::@24
(label) line::@27
(label) line::@3
(label) line::@6
(label) line::@9
(label) line::@return
(byte) line::x0
(byte) line::x0#0 x0 zp ZP_BYTE:5 5.173913043478264
(byte) line::x1
(byte) line::x1#0 x1 zp ZP_BYTE:3 5.409090909090908
(byte) line::xd
(byte) line::xd#0 xd zp ZP_BYTE:7 0.7
(byte) line::xd#1 xd zp ZP_BYTE:7 0.7
(byte) line::y0
(byte) line::y0#0 reg byte y 5.952380952380948
(byte) line::y1
(byte) line::y1#0 y1 zp ZP_BYTE:4 6.249999999999996
(byte) line::yd
(byte) line::yd#0 yd zp ZP_BYTE:10 0.8888888888888888
(byte) line::yd#1 yd zp ZP_BYTE:10 0.8888888888888888
(byte) line::yd#10 yd zp ZP_BYTE:10 0.8888888888888888
(byte) line::yd#3 yd zp ZP_BYTE:10 0.8888888888888888
(void()) line_xdyd((byte) line_xdyd::x , (byte) line_xdyd::y , (byte) line_xdyd::x1 , (byte) line_xdyd::xd , (byte) line_xdyd::yd)
(byte~) line_xdyd::$8 $8 zp ZP_BYTE:10 22.0
(label) line_xdyd::@1
(label) line_xdyd::@2
(label) line_xdyd::@3
(label) line_xdyd::@5
(label) line_xdyd::@return
(byte) line_xdyd::e
(byte) line_xdyd::e#0 e zp ZP_BYTE:7 4.0
(byte) line_xdyd::e#1 e zp ZP_BYTE:7 14.666666666666666
(byte) line_xdyd::e#2 e zp ZP_BYTE:7 22.0
(byte) line_xdyd::e#3 e zp ZP_BYTE:7 4.800000000000001
(byte) line_xdyd::e#6 e zp ZP_BYTE:7 11.0
(byte) line_xdyd::x
(byte) line_xdyd::x#0 reg byte x 0.8
(byte) line_xdyd::x#1 reg byte x 0.8
(byte) line_xdyd::x#2 reg byte x 4.125
(byte) line_xdyd::x#3 reg byte x 8.75
(byte) line_xdyd::x#6 reg byte x 3.0
(byte) line_xdyd::x1
(byte) line_xdyd::x1#0 x1 zp ZP_BYTE:5 1.3333333333333333
(byte) line_xdyd::x1#1 x1 zp ZP_BYTE:5 1.3333333333333333
(byte) line_xdyd::x1#6 x1 zp ZP_BYTE:5 1.0714285714285714
(byte) line_xdyd::xd
(byte) line_xdyd::xd#0 xd zp ZP_BYTE:4 2.0
(byte) line_xdyd::xd#1 xd zp ZP_BYTE:4 2.0
(byte) line_xdyd::xd#5 xd zp ZP_BYTE:4 1.8571428571428572
(byte) line_xdyd::y
(byte) line_xdyd::y#0 y zp ZP_BYTE:6 1.0
(byte) line_xdyd::y#1 y zp ZP_BYTE:6 1.0
(byte) line_xdyd::y#2 y zp ZP_BYTE:6 11.0
(byte) line_xdyd::y#3 y zp ZP_BYTE:6 6.571428571428571
(byte) line_xdyd::y#5 y zp ZP_BYTE:6 3.0
(byte) line_xdyd::y#6 y zp ZP_BYTE:6 11.0
(byte) line_xdyd::yd
(byte) line_xdyd::yd#0 yd zp ZP_BYTE:3 4.0
(byte) line_xdyd::yd#1 yd zp ZP_BYTE:3 4.0
(byte) line_xdyd::yd#2 yd zp ZP_BYTE:3 1.2142857142857142
(void()) line_xdyi((byte) line_xdyi::x , (byte) line_xdyi::y , (byte) line_xdyi::x1 , (byte) line_xdyi::xd , (byte) line_xdyi::yd)
(byte~) line_xdyi::$8 $8 zp ZP_BYTE:10 22.0
(label) line_xdyi::@1
(label) line_xdyi::@2
(label) line_xdyi::@3
(label) line_xdyi::@5
(label) line_xdyi::@return
(byte) line_xdyi::e
(byte) line_xdyi::e#0 e zp ZP_BYTE:7 4.0
(byte) line_xdyi::e#1 e zp ZP_BYTE:7 14.666666666666666
(byte) line_xdyi::e#2 e zp ZP_BYTE:7 22.0
(byte) line_xdyi::e#3 e zp ZP_BYTE:7 4.800000000000001
(byte) line_xdyi::e#6 e zp ZP_BYTE:7 11.0
(byte) line_xdyi::x
(byte) line_xdyi::x#0 reg byte x 0.8
(byte) line_xdyi::x#1 reg byte x 0.8
(byte) line_xdyi::x#2 reg byte x 4.125
(byte) line_xdyi::x#3 reg byte x 8.75
(byte) line_xdyi::x#6 reg byte x 3.0
(byte) line_xdyi::x1
(byte) line_xdyi::x1#0 x1 zp ZP_BYTE:5 1.3333333333333333
(byte) line_xdyi::x1#1 x1 zp ZP_BYTE:5 1.3333333333333333
(byte) line_xdyi::x1#6 x1 zp ZP_BYTE:5 1.0714285714285714
(byte) line_xdyi::xd
(byte) line_xdyi::xd#0 xd zp ZP_BYTE:4 2.0
(byte) line_xdyi::xd#1 xd zp ZP_BYTE:4 2.0
(byte) line_xdyi::xd#5 xd zp ZP_BYTE:4 1.8571428571428572
(byte) line_xdyi::y
(byte) line_xdyi::y#0 y zp ZP_BYTE:6 1.0
(byte) line_xdyi::y#1 y zp ZP_BYTE:6 1.0
(byte) line_xdyi::y#2 y zp ZP_BYTE:6 11.0
(byte) line_xdyi::y#3 y zp ZP_BYTE:6 6.571428571428571
(byte) line_xdyi::y#5 y zp ZP_BYTE:6 3.0
(byte) line_xdyi::y#6 y zp ZP_BYTE:6 11.0
(byte) line_xdyi::yd
(byte) line_xdyi::yd#0 yd zp ZP_BYTE:3 4.0
(byte) line_xdyi::yd#1 yd zp ZP_BYTE:3 4.0
(byte) line_xdyi::yd#2 yd zp ZP_BYTE:3 1.2142857142857142
(void()) line_ydxd((byte) line_ydxd::y , (byte) line_ydxd::x , (byte) line_ydxd::y1 , (byte) line_ydxd::yd , (byte) line_ydxd::xd)
(byte~) line_ydxd::$8 reg byte a 22.0
(label) line_ydxd::@1
(label) line_ydxd::@2
(label) line_ydxd::@3
(label) line_ydxd::@5
(label) line_ydxd::@return
(byte) line_ydxd::e
(byte) line_ydxd::e#0 e zp ZP_BYTE:7 4.0
(byte) line_ydxd::e#1 e zp ZP_BYTE:7 14.666666666666666
(byte) line_ydxd::e#2 e zp ZP_BYTE:7 22.0
(byte) line_ydxd::e#3 e zp ZP_BYTE:7 4.800000000000001
(byte) line_ydxd::e#6 e zp ZP_BYTE:7 11.0
(byte) line_ydxd::x
(byte) line_ydxd::x#0 reg byte x 1.0
(byte) line_ydxd::x#1 reg byte x 1.0
(byte) line_ydxd::x#2 reg byte x 11.0
(byte) line_ydxd::x#3 reg byte x 6.571428571428571
(byte) line_ydxd::x#5 reg byte x 3.0
(byte) line_ydxd::x#6 reg byte x 11.0
(byte) line_ydxd::xd
(byte) line_ydxd::xd#0 xd zp ZP_BYTE:3 4.0
(byte) line_ydxd::xd#1 xd zp ZP_BYTE:3 4.0
(byte) line_ydxd::xd#2 xd zp ZP_BYTE:3 1.2142857142857142
(byte) line_ydxd::y
(byte) line_ydxd::y#0 y zp ZP_BYTE:6 0.8
(byte) line_ydxd::y#1 y zp ZP_BYTE:6 0.8
(byte) line_ydxd::y#2 y zp ZP_BYTE:6 4.125
(byte) line_ydxd::y#3 y zp ZP_BYTE:6 8.75
(byte) line_ydxd::y#6 y zp ZP_BYTE:6 3.0
(byte) line_ydxd::y1
(byte) line_ydxd::y1#0 y1 zp ZP_BYTE:5 1.3333333333333333
(byte) line_ydxd::y1#1 y1 zp ZP_BYTE:5 1.3333333333333333
(byte) line_ydxd::y1#6 y1 zp ZP_BYTE:5 1.0714285714285714
(byte) line_ydxd::yd
(byte) line_ydxd::yd#0 yd zp ZP_BYTE:4 2.0
(byte) line_ydxd::yd#1 yd zp ZP_BYTE:4 2.0
(byte) line_ydxd::yd#5 yd zp ZP_BYTE:4 1.8571428571428572
(void()) line_ydxi((byte) line_ydxi::y , (byte) line_ydxi::x , (byte) line_ydxi::y1 , (byte) line_ydxi::yd , (byte) line_ydxi::xd)
(byte~) line_ydxi::$8 reg byte a 22.0
(label) line_ydxi::@1
(label) line_ydxi::@2
(label) line_ydxi::@3
(label) line_ydxi::@5
(label) line_ydxi::@return
(byte) line_ydxi::e
(byte) line_ydxi::e#0 e zp ZP_BYTE:7 4.0
(byte) line_ydxi::e#1 e zp ZP_BYTE:7 14.666666666666666
(byte) line_ydxi::e#2 e zp ZP_BYTE:7 22.0
(byte) line_ydxi::e#3 e zp ZP_BYTE:7 4.800000000000001
(byte) line_ydxi::e#6 e zp ZP_BYTE:7 11.0
(byte) line_ydxi::x
(byte) line_ydxi::x#0 reg byte x 1.0
(byte) line_ydxi::x#1 reg byte x 1.0
(byte) line_ydxi::x#2 reg byte x 11.0
(byte) line_ydxi::x#3 reg byte x 6.571428571428571
(byte) line_ydxi::x#5 reg byte x 3.0
(byte) line_ydxi::x#6 reg byte x 11.0
(byte) line_ydxi::xd
(byte) line_ydxi::xd#0 xd zp ZP_BYTE:3 4.0
(byte) line_ydxi::xd#1 xd zp ZP_BYTE:3 4.0
(byte) line_ydxi::xd#2 xd zp ZP_BYTE:3 1.2142857142857142
(byte) line_ydxi::y
(byte) line_ydxi::y#0 y zp ZP_BYTE:6 0.8
(byte) line_ydxi::y#1 y zp ZP_BYTE:6 0.8
(byte) line_ydxi::y#2 y zp ZP_BYTE:6 4.125
(byte) line_ydxi::y#3 y zp ZP_BYTE:6 8.75
(byte) line_ydxi::y#6 y zp ZP_BYTE:6 3.0
(byte) line_ydxi::y1
(byte) line_ydxi::y1#0 y1 zp ZP_BYTE:5 1.3333333333333333
(byte) line_ydxi::y1#1 y1 zp ZP_BYTE:5 1.3333333333333333
(byte) line_ydxi::y1#6 y1 zp ZP_BYTE:5 1.0714285714285714
(byte) line_ydxi::yd
(byte) line_ydxi::yd#0 yd zp ZP_BYTE:4 2.0
(byte) line_ydxi::yd#1 yd zp ZP_BYTE:4 2.0
(byte) line_ydxi::yd#5 yd zp ZP_BYTE:4 1.8571428571428572
(void()) lines()
(byte~) lines::$0 reg byte y 50.5
(byte~) lines::$2 $2 zp ZP_BYTE:3 50.5
(byte~) lines::$3 $3 zp ZP_BYTE:4 50.5
(byte~) lines::$5 reg byte x 50.5
(label) lines::@1
(label) lines::@3
(label) lines::@return
(byte) lines::l
(byte) lines::l#1 l zp ZP_BYTE:2 151.5
(byte) lines::l#2 l zp ZP_BYTE:2 60.6
(byte) lines_cnt
(const byte) lines_cnt#0 lines_cnt = (byte/signed byte/word/signed word) 8
(byte[]) lines_x
(const byte[]) lines_x#0 lines_x = { (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60 }
(byte[]) lines_y
(const byte[]) lines_y#0 lines_y = { (byte/signed byte/word/signed word) 10, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 110, (byte/signed byte/word/signed word) 80, (byte/signed byte/word/signed word) 60, (byte/signed byte/word/signed word) 40, (byte/signed byte/word/signed word) 10 }
(void()) main()
(label) main::@1
(label) main::@3
(label) main::@5
(label) main::@return
(void()) plot((byte) plot::x , (byte) plot::y)
(byte~) plot::$0 reg byte a 4.0
(byte~) plot::$1 reg byte a 4.0
(byte~) plot::$2 reg byte a 4.0
(byte~) plot::$3 reg byte a 4.0
(byte~) plot::$5 reg byte a 4.0
(byte~) plot::$6 reg byte a 4.0
(label) plot::@return
(byte*) plot::plotter
(byte*) plot::plotter#0 plotter zp ZP_PTR_BYTE:8 2.0
(byte*) plot::plotter_x
(byte*) plot::plotter_x#1 plotter_x zp ZP_PTR_BYTE:8 2.0
(byte*) plot::plotter_x#2 plotter_x zp ZP_PTR_BYTE:8 0.8
(word) plot::plotter_y
(word) plot::plotter_y#1 plotter_y zp ZP_WORD:11 2.0
(word) plot::plotter_y#2 plotter_y zp ZP_WORD:11 4.0
(byte) plot::x
(byte) plot::x#0 reg byte x 11.0
(byte) plot::x#1 reg byte x 11.0
(byte) plot::x#2 reg byte x 11.0
(byte) plot::x#3 reg byte x 11.0
(byte) plot::x#4 reg byte x 5.000000000000001
(byte) plot::y
(byte) plot::y#0 reg byte y 22.0
(byte) plot::y#1 reg byte y 22.0
(byte) plot::y#2 reg byte y 22.0
(byte) plot::y#3 reg byte y 22.0
(byte) plot::y#4 reg byte y 6.857142857142857
(byte[]) plot_bit
(const byte[]) plot_bit#0 plot_bit = ((byte*))(word/signed word) 5120
(byte[]) plot_xhi
(const byte[]) plot_xhi#0 plot_xhi = ((byte*))(word/signed word) 4352
(byte[]) plot_xlo
(const byte[]) plot_xlo#0 plot_xlo = ((byte*))(word/signed word) 4096
(byte[]) plot_yhi
(const byte[]) plot_yhi#0 plot_yhi = ((byte*))(word/signed word) 4864
(byte[]) plot_ylo
(const byte[]) plot_ylo#0 plot_ylo = ((byte*))(word/signed word) 4608

zp ZP_BYTE:2 [ lines::l#2 lines::l#1 init_plot_tables::$6 ]
zp ZP_BYTE:3 [ line_ydxi::xd#2 line_ydxi::xd#1 line_ydxi::xd#0 line_xdyi::yd#2 line_xdyi::yd#0 line_xdyi::yd#1 line_ydxd::xd#2 line_ydxd::xd#1 line_ydxd::xd#0 line_xdyd::yd#2 line_xdyd::yd#0 line_xdyd::yd#1 lines::$2 line::x1#0 ]
zp ZP_BYTE:4 [ line_ydxi::yd#5 line_ydxi::yd#1 line_ydxi::yd#0 line_xdyi::xd#5 line_xdyi::xd#0 line_xdyi::xd#1 line_ydxd::yd#5 line_ydxd::yd#1 line_ydxd::yd#0 line_xdyd::xd#5 line_xdyd::xd#0 line_xdyd::xd#1 lines::$3 line::y1#0 ]
zp ZP_BYTE:5 [ line_ydxi::y1#6 line_ydxi::y1#1 line_ydxi::y1#0 line_xdyi::x1#6 line_xdyi::x1#0 line_xdyi::x1#1 line_ydxd::y1#6 line_ydxd::y1#1 line_ydxd::y1#0 line_xdyd::x1#6 line_xdyd::x1#0 line_xdyd::x1#1 line::x0#0 ]
reg byte x [ line_ydxi::x#3 line_ydxi::x#5 line_ydxi::x#1 line_ydxi::x#0 line_ydxi::x#6 line_ydxi::x#2 ]
zp ZP_BYTE:6 [ line_ydxi::y#3 line_ydxi::y#6 line_ydxi::y#1 line_ydxi::y#0 line_ydxi::y#2 line_xdyi::y#3 line_xdyi::y#5 line_xdyi::y#0 line_xdyi::y#1 line_xdyi::y#6 line_xdyi::y#2 line_ydxd::y#3 line_ydxd::y#6 line_ydxd::y#1 line_ydxd::y#0 line_ydxd::y#2 line_xdyd::y#3 line_xdyd::y#5 line_xdyd::y#0 line_xdyd::y#1 line_xdyd::y#6 line_xdyd::y#2 ]
zp ZP_BYTE:7 [ line_ydxi::e#3 line_ydxi::e#0 line_ydxi::e#6 line_ydxi::e#2 line_ydxi::e#1 line_xdyi::e#3 line_xdyi::e#0 line_xdyi::e#6 line_xdyi::e#2 line_xdyi::e#1 line_ydxd::e#3 line_ydxd::e#0 line_ydxd::e#6 line_ydxd::e#2 line_ydxd::e#1 line_xdyd::e#3 line_xdyd::e#0 line_xdyd::e#6 line_xdyd::e#2 line_xdyd::e#1 line::xd#1 line::xd#0 ]
reg byte x [ plot::x#4 plot::x#1 plot::x#0 plot::x#3 plot::x#2 ]
reg byte y [ plot::y#4 plot::y#1 plot::y#0 plot::y#3 plot::y#2 ]
reg byte x [ line_xdyi::x#3 line_xdyi::x#6 line_xdyi::x#0 line_xdyi::x#1 line_xdyi::x#2 ]
reg byte x [ line_ydxd::x#3 line_ydxd::x#5 line_ydxd::x#1 line_ydxd::x#0 line_ydxd::x#6 line_ydxd::x#2 ]
reg byte x [ line_xdyd::x#3 line_xdyd::x#6 line_xdyd::x#0 line_xdyd::x#1 line_xdyd::x#2 ]
reg byte x [ init_plot_tables::x#2 init_plot_tables::x#1 ]
reg byte y [ init_plot_tables::bits#3 init_plot_tables::bits#4 init_plot_tables::bits#1 ]
reg byte x [ init_plot_tables::y#2 init_plot_tables::y#1 ]
zp ZP_PTR_BYTE:8 [ init_plot_tables::yoffs#2 init_plot_tables::yoffs#4 init_plot_tables::yoffs#1 init_screen::b#2 init_screen::b#1 init_screen::c#2 init_screen::c#1 plot::plotter_x#1 plot::plotter_x#2 plot::plotter#0 ]
reg byte y [ lines::$0 ]
reg byte x [ lines::$5 ]
reg byte y [ line::y0#0 ]
zp ZP_BYTE:10 [ line::yd#1 line::yd#0 line::yd#3 line::yd#10 line_xdyi::$8 line_xdyd::$8 ]
reg byte a [ line_ydxi::$8 ]
reg byte a [ plot::$0 ]
reg byte a [ plot::$1 ]
reg byte a [ plot::$2 ]
zp ZP_WORD:11 [ plot::plotter_y#1 plot::plotter_y#2 ]
reg byte a [ plot::$3 ]
reg byte a [ plot::$5 ]
reg byte a [ plot::$6 ]
reg byte a [ line_ydxd::$8 ]
reg byte a [ init_plot_tables::$0 ]
reg byte a [ init_plot_tables::$7 ]
reg byte a [ init_plot_tables::$8 ]
reg byte a [ init_plot_tables::$9 ]
reg byte a [ init_plot_tables::$10 ]

FINAL CODE
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const BGCOL = $d020
  .const FGCOL = $d021
  .const D018 = $d018
  .const D011 = $d011
  .const BMM = $20
  .const DEN = $10
  .const RSEL = 8
  .const SCREEN = $400
  .const BITMAP = $2000
  .const plot_xlo = $1000
  .const plot_xhi = $1100
  .const plot_ylo = $1200
  .const plot_yhi = $1300
  .const plot_bit = $1400
  .const lines_cnt = 8
  lines_x: .byte $3c, $50, $6e, $50, $3c, $28, $a, $28, $3c
  lines_y: .byte $a, $28, $3c, $50, $6e, $50, $3c, $28, $a
//SEG2 @begin
//SEG3 [1] phi from @begin to @10 [phi:@begin->@10]
//SEG4 @10
//SEG5 [2] call main param-assignment [ ] ( )
  jsr main
//SEG6 [3] phi from @10 to @end [phi:@10->@end]
//SEG7 @end
//SEG8 main
main: {
  //SEG9 [4] *((const byte*) BGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #0
    sta BGCOL
  //SEG10 [5] *((const byte*) FGCOL#0) ← (byte/signed byte/word/signed word) 0 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    sta FGCOL
  //SEG11 [6] *((const byte*) D011#0) ← (const byte) BMM#0|(const byte) DEN#0|(const byte) RSEL#0|(byte/signed byte/word/signed word) 3 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #BMM|DEN|RSEL|3
    sta D011
  //SEG12 [7] *((const byte*) D018#0) ← (byte/signed byte/word/signed word) 24 [ ] ( main:2 [ ] ) -- _deref_cowo1=coby2 
    lda #$18
    sta D018
  //SEG13 [8] call init_screen param-assignment [ ] ( main:2 [ ] )
  //SEG14 [191] phi from main to init_screen [phi:main->init_screen]
    jsr init_screen
  //SEG15 [9] phi from main to main::@3 [phi:main->main::@3]
  //SEG16 main::@3
  //SEG17 [10] call init_plot_tables param-assignment [ ] ( main:2 [ ] )
  //SEG18 [165] phi from main::@3 to init_plot_tables [phi:main::@3->init_plot_tables]
    jsr init_plot_tables
  //SEG19 [11] phi from main::@3 main::@5 to main::@1 [phi:main::@3/main::@5->main::@1]
  //SEG20 main::@1
  b1:
  //SEG21 [12] call lines param-assignment [ ] ( main:2 [ ] )
  //SEG22 [15] phi from main::@1 to lines [phi:main::@1->lines]
    jsr lines
  //SEG23 main::@5
  //SEG24 [13] if(true) goto main::@1 [ ] ( main:2 [ ] ) -- true_then_la1 
    jmp b1
  //SEG25 main::@return
  //SEG26 [14] return  [ ] ( main:2 [ ] )
}
//SEG27 lines
lines: {
    .label _2 = 3
    .label _3 = 4
    .label l = 2
  //SEG28 [16] phi from lines to lines::@1 [phi:lines->lines::@1]
  //SEG29 [16] phi (byte) lines::l#2 = (byte/signed byte/word/signed word) 0 [phi:lines->lines::@1#0] -- zpby1=coby1 
    lda #0
    sta l
  //SEG30 [16] phi from lines::@3 to lines::@1 [phi:lines::@3->lines::@1]
  //SEG31 [16] phi (byte) lines::l#2 = (byte) lines::l#1 [phi:lines::@3->lines::@1#0] -- register_copy 
  //SEG32 lines::@1
  b1:
  //SEG33 [17] (byte~) lines::$0 ← (const byte[]) lines_x#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 ] ( main:2::lines:12 [ lines::l#2 lines::$0 ] ) -- yby=cowo1_derefidx_zpby1 
    ldx l
    lda lines_x,x
    tay
  //SEG34 [18] (byte~) lines::$2 ← (const byte[]) lines_x#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx l
    lda lines_x+1,x
    sta _2
  //SEG35 [19] (byte~) lines::$3 ← (const byte[]) lines_y#0 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 lines::$3 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx l
    lda lines_y,x
    sta _3
  //SEG36 [20] (byte~) lines::$5 ← (const byte[]) lines_y#0+(byte/signed byte/word/signed word) 1 *idx (byte) lines::l#2 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ] ( main:2::lines:12 [ lines::l#2 lines::$0 lines::$2 lines::$3 lines::$5 ] ) -- xby=cowo1_derefidx_zpby1 
    ldx l
    lda lines_y+1,x
    tax
  //SEG37 [21] (byte) line::x0#0 ← (byte~) lines::$0 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ] ( main:2::lines:12 [ lines::l#2 lines::$2 lines::$3 lines::$5 line::x0#0 ] ) -- zpby1=yby 
    sty line.x0
  //SEG38 [22] (byte) line::x1#0 ← (byte~) lines::$2 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ] ( main:2::lines:12 [ lines::l#2 lines::$3 lines::$5 line::x0#0 line::x1#0 ] )
    // (byte) line::x1#0 = (byte~) lines::$2  // register copy zp ZP_BYTE:3
  //SEG39 [23] (byte) line::y0#0 ← (byte~) lines::$3 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ] ( main:2::lines:12 [ lines::l#2 lines::$5 line::x0#0 line::x1#0 line::y0#0 ] ) -- yby=zpby1 
    ldy _3
  //SEG40 [24] (byte) line::y1#0 ← (byte~) lines::$5 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ( main:2::lines:12 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ) -- zpby1=xby 
    stx line.y1
  //SEG41 [25] call line param-assignment [ lines::l#2 ] ( main:2::lines:12 [ lines::l#2 ] )
    jsr line
  //SEG42 lines::@3
  //SEG43 [26] (byte) lines::l#1 ← ++ (byte) lines::l#2 [ lines::l#1 ] ( main:2::lines:12 [ lines::l#1 ] ) -- zpby1=_inc_zpby1 
    inc l
  //SEG44 [27] if((byte) lines::l#1<(const byte) lines_cnt#0) goto lines::@1 [ lines::l#1 ] ( main:2::lines:12 [ lines::l#1 ] ) -- zpby1_lt_coby1_then_la1 
    lda l
    cmp #lines_cnt
    bcc b1
  //SEG45 lines::@return
  //SEG46 [28] return  [ ] ( main:2::lines:12 [ ] )
    rts
}
//SEG47 line
line: {
    .label x0 = 5
    .label x1 = 3
    .label y1 = 4
    .label xd = 7
    .label yd = $a
  //SEG48 [29] if((byte) line::x0#0>=(byte) line::x1#0) goto line::@1 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 ] ) -- zpby1_ge_zpby2_then_la1 
    lda x0
    cmp x1
    bcs b1
  //SEG49 line::@15
  //SEG50 [30] (byte) line::xd#1 ← (byte) line::x1#0 - (byte) line::x0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ) -- zpby1=zpby2_minus_zpby3 
    lda x1
    sec
    sbc x0
    sta xd
  //SEG51 [31] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@2 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 ] ) -- yby_ge_zpby1_then_la1 
    cpy y1
    bcs b2
  //SEG52 line::@16
  //SEG53 [32] (byte) line::yd#1 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ) -- zpby1=zpby2_minus_yby 
    sty $ff
    lda y1
    sec
    sbc $ff
    sta yd
  //SEG54 [33] if((byte) line::yd#1>=(byte) line::xd#1) goto line::@3 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#1 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b3
  //SEG55 line::@17
  //SEG56 [34] (byte) line_xdyi::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#1 line_xdyi::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG57 [35] (byte) line_xdyi::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 ] ) -- zpby1=yby 
    sty line_xdyi.y
  //SEG58 [36] (byte) line_xdyi::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 ] ) -- zpby1=zpby2 
    lda x1
    sta line_xdyi.x1
  //SEG59 [37] (byte) line_xdyi::xd#0 ← (byte) line::xd#1 [ line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#1 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyi.xd
  //SEG60 [38] (byte) line_xdyi::yd#0 ← (byte) line::yd#1 [ line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyi::x#0 line_xdyi::y#0 line_xdyi::x1#0 line_xdyi::xd#0 line_xdyi::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyi.yd
  //SEG61 [39] call line_xdyi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG62 [120] phi from line::@17 to line_xdyi [phi:line::@17->line_xdyi]
  //SEG63 [120] phi (byte) line_xdyi::x1#6 = (byte) line_xdyi::x1#0 [phi:line::@17->line_xdyi#0] -- register_copy 
  //SEG64 [120] phi (byte) line_xdyi::xd#5 = (byte) line_xdyi::xd#0 [phi:line::@17->line_xdyi#1] -- register_copy 
  //SEG65 [120] phi (byte) line_xdyi::y#5 = (byte) line_xdyi::y#0 [phi:line::@17->line_xdyi#2] -- register_copy 
  //SEG66 [120] phi (byte) line_xdyi::x#6 = (byte) line_xdyi::x#0 [phi:line::@17->line_xdyi#3] -- register_copy 
  //SEG67 [120] phi (byte) line_xdyi::yd#2 = (byte) line_xdyi::yd#0 [phi:line::@17->line_xdyi#4] -- register_copy 
    jsr line_xdyi
  //SEG68 line::@return
  breturn:
  //SEG69 [40] return  [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
    rts
  //SEG70 line::@3
  b3:
  //SEG71 [41] (byte) line_ydxi::y#0 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 ] ) -- zpby1=yby 
    sty line_ydxi.y
  //SEG72 [42] (byte) line_ydxi::x#0 ← (byte) line::x0#0 [ line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y1#0 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG73 [43] (byte) line_ydxi::y1#0 ← (byte) line::y1#0 [ line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxi.y1
  //SEG74 [44] (byte) line_ydxi::yd#0 ← (byte) line::yd#1 [ line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxi.yd
  //SEG75 [45] (byte) line_ydxi::xd#0 ← (byte) line::xd#1 [ line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxi::y#0 line_ydxi::x#0 line_ydxi::y1#0 line_ydxi::yd#0 line_ydxi::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxi.xd
  //SEG76 [46] call line_ydxi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG77 [91] phi from line::@3 to line_ydxi [phi:line::@3->line_ydxi]
  //SEG78 [91] phi (byte) line_ydxi::y1#6 = (byte) line_ydxi::y1#0 [phi:line::@3->line_ydxi#0] -- register_copy 
  //SEG79 [91] phi (byte) line_ydxi::yd#5 = (byte) line_ydxi::yd#0 [phi:line::@3->line_ydxi#1] -- register_copy 
  //SEG80 [91] phi (byte) line_ydxi::y#6 = (byte) line_ydxi::y#0 [phi:line::@3->line_ydxi#2] -- register_copy 
  //SEG81 [91] phi (byte) line_ydxi::x#5 = (byte) line_ydxi::x#0 [phi:line::@3->line_ydxi#3] -- register_copy 
  //SEG82 [91] phi (byte) line_ydxi::xd#2 = (byte) line_ydxi::xd#0 [phi:line::@3->line_ydxi#4] -- register_copy 
    jsr line_ydxi
    jmp breturn
  //SEG83 line::@2
  b2:
  //SEG84 [47] (byte) line::yd#0 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ) -- zpby1=yby_minus_zpby2 
    tya
    sec
    sbc y1
    sta yd
  //SEG85 [48] if((byte) line::yd#0>=(byte) line::xd#1) goto line::@6 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#1 line::yd#0 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b6
  //SEG86 line::@20
  //SEG87 [49] (byte) line_xdyd::x#0 ← (byte) line::x0#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_xdyd::x#0 ] ) -- xby=zpby1 
    ldx x0
  //SEG88 [50] (byte) line_xdyd::y#0 ← (byte) line::y0#0 [ line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 ] ) -- zpby1=yby 
    sty line_xdyd.y
  //SEG89 [51] (byte) line_xdyd::x1#0 ← (byte) line::x1#0 [ line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 ] ) -- zpby1=zpby2 
    lda x1
    sta line_xdyd.x1
  //SEG90 [52] (byte) line_xdyd::xd#0 ← (byte) line::xd#1 [ line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#0 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyd.xd
  //SEG91 [53] (byte) line_xdyd::yd#0 ← (byte) line::yd#0 [ line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyd::x#0 line_xdyd::y#0 line_xdyd::x1#0 line_xdyd::xd#0 line_xdyd::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyd.yd
  //SEG92 [54] call line_xdyd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG93 [150] phi from line::@20 to line_xdyd [phi:line::@20->line_xdyd]
  //SEG94 [150] phi (byte) line_xdyd::x1#6 = (byte) line_xdyd::x1#0 [phi:line::@20->line_xdyd#0] -- register_copy 
  //SEG95 [150] phi (byte) line_xdyd::xd#5 = (byte) line_xdyd::xd#0 [phi:line::@20->line_xdyd#1] -- register_copy 
  //SEG96 [150] phi (byte) line_xdyd::y#5 = (byte) line_xdyd::y#0 [phi:line::@20->line_xdyd#2] -- register_copy 
  //SEG97 [150] phi (byte) line_xdyd::x#6 = (byte) line_xdyd::x#0 [phi:line::@20->line_xdyd#3] -- register_copy 
  //SEG98 [150] phi (byte) line_xdyd::yd#2 = (byte) line_xdyd::yd#0 [phi:line::@20->line_xdyd#4] -- register_copy 
    jsr line_xdyd
    jmp breturn
  //SEG99 line::@6
  b6:
  //SEG100 [55] (byte) line_ydxd::y#0 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxd.y
  //SEG101 [56] (byte) line_ydxd::x#0 ← (byte) line::x1#0 [ line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y0#0 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 ] ) -- xby=zpby1 
    ldx x1
  //SEG102 [57] (byte) line_ydxd::y1#0 ← (byte) line::y0#0 [ line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line::yd#0 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 ] ) -- zpby1=yby 
    sty line_ydxd.y1
  //SEG103 [58] (byte) line_ydxd::yd#0 ← (byte) line::yd#0 [ line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#1 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxd.yd
  //SEG104 [59] (byte) line_ydxd::xd#0 ← (byte) line::xd#1 [ line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxd::y#0 line_ydxd::x#0 line_ydxd::y1#0 line_ydxd::yd#0 line_ydxd::xd#0 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxd.xd
  //SEG105 [60] call line_ydxd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG106 [135] phi from line::@6 to line_ydxd [phi:line::@6->line_ydxd]
  //SEG107 [135] phi (byte) line_ydxd::y1#6 = (byte) line_ydxd::y1#0 [phi:line::@6->line_ydxd#0] -- register_copy 
  //SEG108 [135] phi (byte) line_ydxd::yd#5 = (byte) line_ydxd::yd#0 [phi:line::@6->line_ydxd#1] -- register_copy 
  //SEG109 [135] phi (byte) line_ydxd::y#6 = (byte) line_ydxd::y#0 [phi:line::@6->line_ydxd#2] -- register_copy 
  //SEG110 [135] phi (byte) line_ydxd::x#5 = (byte) line_ydxd::x#0 [phi:line::@6->line_ydxd#3] -- register_copy 
  //SEG111 [135] phi (byte) line_ydxd::xd#2 = (byte) line_ydxd::xd#0 [phi:line::@6->line_ydxd#4] -- register_copy 
    jsr line_ydxd
    jmp breturn
  //SEG112 line::@1
  b1:
  //SEG113 [61] (byte) line::xd#0 ← (byte) line::x0#0 - (byte) line::x1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ) -- zpby1=zpby2_minus_zpby3 
    lda x0
    sec
    sbc x1
    sta xd
  //SEG114 [62] if((byte) line::y0#0>=(byte) line::y1#0) goto line::@9 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 ] ) -- yby_ge_zpby1_then_la1 
    cpy y1
    bcs b9
  //SEG115 line::@23
  //SEG116 [63] (byte) line::yd#3 ← (byte) line::y1#0 - (byte) line::y0#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ) -- zpby1=zpby2_minus_yby 
    sty $ff
    lda y1
    sec
    sbc $ff
    sta yd
  //SEG117 [64] if((byte) line::yd#3>=(byte) line::xd#0) goto line::@10 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#3 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b10
  //SEG118 line::@24
  //SEG119 [65] (byte) line_xdyd::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_xdyd::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG120 [66] (byte) line_xdyd::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_xdyd.y
  //SEG121 [67] (byte) line_xdyd::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 ] )
    // (byte) line_xdyd::x1#1 = (byte) line::x0#0  // register copy zp ZP_BYTE:5
  //SEG122 [68] (byte) line_xdyd::xd#1 ← (byte) line::xd#0 [ line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#3 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyd.xd
  //SEG123 [69] (byte) line_xdyd::yd#1 ← (byte) line::yd#3 [ line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyd::x#1 line_xdyd::y#1 line_xdyd::x1#1 line_xdyd::xd#1 line_xdyd::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyd.yd
  //SEG124 [70] call line_xdyd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG125 [150] phi from line::@24 to line_xdyd [phi:line::@24->line_xdyd]
  //SEG126 [150] phi (byte) line_xdyd::x1#6 = (byte) line_xdyd::x1#1 [phi:line::@24->line_xdyd#0] -- register_copy 
  //SEG127 [150] phi (byte) line_xdyd::xd#5 = (byte) line_xdyd::xd#1 [phi:line::@24->line_xdyd#1] -- register_copy 
  //SEG128 [150] phi (byte) line_xdyd::y#5 = (byte) line_xdyd::y#1 [phi:line::@24->line_xdyd#2] -- register_copy 
  //SEG129 [150] phi (byte) line_xdyd::x#6 = (byte) line_xdyd::x#1 [phi:line::@24->line_xdyd#3] -- register_copy 
  //SEG130 [150] phi (byte) line_xdyd::yd#2 = (byte) line_xdyd::yd#1 [phi:line::@24->line_xdyd#4] -- register_copy 
    jsr line_xdyd
    jmp breturn
  //SEG131 line::@10
  b10:
  //SEG132 [71] (byte) line_ydxd::y#1 ← (byte) line::y0#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 ] ) -- zpby1=yby 
    sty line_ydxd.y
  //SEG133 [72] (byte) line_ydxd::x#1 ← (byte) line::x0#0 [ line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y1#0 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 ] ) -- xby=zpby1 
    ldx x0
  //SEG134 [73] (byte) line_ydxd::y1#1 ← (byte) line::y1#0 [ line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#3 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxd.y1
  //SEG135 [74] (byte) line_ydxd::yd#1 ← (byte) line::yd#3 [ line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxd.yd
  //SEG136 [75] (byte) line_ydxd::xd#1 ← (byte) line::xd#0 [ line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxd::y#1 line_ydxd::x#1 line_ydxd::y1#1 line_ydxd::yd#1 line_ydxd::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxd.xd
  //SEG137 [76] call line_ydxd param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG138 [135] phi from line::@10 to line_ydxd [phi:line::@10->line_ydxd]
  //SEG139 [135] phi (byte) line_ydxd::y1#6 = (byte) line_ydxd::y1#1 [phi:line::@10->line_ydxd#0] -- register_copy 
  //SEG140 [135] phi (byte) line_ydxd::yd#5 = (byte) line_ydxd::yd#1 [phi:line::@10->line_ydxd#1] -- register_copy 
  //SEG141 [135] phi (byte) line_ydxd::y#6 = (byte) line_ydxd::y#1 [phi:line::@10->line_ydxd#2] -- register_copy 
  //SEG142 [135] phi (byte) line_ydxd::x#5 = (byte) line_ydxd::x#1 [phi:line::@10->line_ydxd#3] -- register_copy 
  //SEG143 [135] phi (byte) line_ydxd::xd#2 = (byte) line_ydxd::xd#1 [phi:line::@10->line_ydxd#4] -- register_copy 
    jsr line_ydxd
    jmp breturn
  //SEG144 line::@9
  b9:
  //SEG145 [77] (byte) line::yd#10 ← (byte) line::y0#0 - (byte) line::y1#0 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ) -- zpby1=yby_minus_zpby2 
    tya
    sec
    sbc y1
    sta yd
  //SEG146 [78] if((byte) line::yd#10>=(byte) line::xd#0) goto line::@13 [ line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::x1#0 line::y0#0 line::y1#0 line::xd#0 line::yd#10 ] ) -- zpby1_ge_zpby2_then_la1 
    cmp xd
    bcs b13
  //SEG147 line::@27
  //SEG148 [79] (byte) line_xdyi::x#1 ← (byte) line::x1#0 [ line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::y1#0 line::xd#0 line::yd#10 line_xdyi::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG149 [80] (byte) line_xdyi::y#1 ← (byte) line::y1#0 [ line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x0#0 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_xdyi.y
  //SEG150 [81] (byte) line_xdyi::x1#1 ← (byte) line::x0#0 [ line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 ] )
    // (byte) line_xdyi::x1#1 = (byte) line::x0#0  // register copy zp ZP_BYTE:5
  //SEG151 [82] (byte) line_xdyi::xd#1 ← (byte) line::xd#0 [ line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::yd#10 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_xdyi.xd
  //SEG152 [83] (byte) line_xdyi::yd#1 ← (byte) line::yd#10 [ line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_xdyi::x#1 line_xdyi::y#1 line_xdyi::x1#1 line_xdyi::xd#1 line_xdyi::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_xdyi.yd
  //SEG153 [84] call line_xdyi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG154 [120] phi from line::@27 to line_xdyi [phi:line::@27->line_xdyi]
  //SEG155 [120] phi (byte) line_xdyi::x1#6 = (byte) line_xdyi::x1#1 [phi:line::@27->line_xdyi#0] -- register_copy 
  //SEG156 [120] phi (byte) line_xdyi::xd#5 = (byte) line_xdyi::xd#1 [phi:line::@27->line_xdyi#1] -- register_copy 
  //SEG157 [120] phi (byte) line_xdyi::y#5 = (byte) line_xdyi::y#1 [phi:line::@27->line_xdyi#2] -- register_copy 
  //SEG158 [120] phi (byte) line_xdyi::x#6 = (byte) line_xdyi::x#1 [phi:line::@27->line_xdyi#3] -- register_copy 
  //SEG159 [120] phi (byte) line_xdyi::yd#2 = (byte) line_xdyi::yd#1 [phi:line::@27->line_xdyi#4] -- register_copy 
    jsr line_xdyi
    jmp breturn
  //SEG160 line::@13
  b13:
  //SEG161 [85] (byte) line_ydxi::y#1 ← (byte) line::y1#0 [ line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::x1#0 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 ] ) -- zpby1=zpby2 
    lda y1
    sta line_ydxi.y
  //SEG162 [86] (byte) line_ydxi::x#1 ← (byte) line::x1#0 [ line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::y0#0 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 ] ) -- xby=zpby1 
    ldx x1
  //SEG163 [87] (byte) line_ydxi::y1#1 ← (byte) line::y0#0 [ line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line::yd#10 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 ] ) -- zpby1=yby 
    sty line_ydxi.y1
  //SEG164 [88] (byte) line_ydxi::yd#1 ← (byte) line::yd#10 [ line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line::xd#0 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 ] ) -- zpby1=zpby2 
    lda yd
    sta line_ydxi.yd
  //SEG165 [89] (byte) line_ydxi::xd#1 ← (byte) line::xd#0 [ line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ] ( main:2::lines:12::line:25 [ lines::l#2 line_ydxi::y#1 line_ydxi::x#1 line_ydxi::y1#1 line_ydxi::yd#1 line_ydxi::xd#1 ] ) -- zpby1=zpby2 
    lda xd
    sta line_ydxi.xd
  //SEG166 [90] call line_ydxi param-assignment [ ] ( main:2::lines:12::line:25 [ lines::l#2 ] )
  //SEG167 [91] phi from line::@13 to line_ydxi [phi:line::@13->line_ydxi]
  //SEG168 [91] phi (byte) line_ydxi::y1#6 = (byte) line_ydxi::y1#1 [phi:line::@13->line_ydxi#0] -- register_copy 
  //SEG169 [91] phi (byte) line_ydxi::yd#5 = (byte) line_ydxi::yd#1 [phi:line::@13->line_ydxi#1] -- register_copy 
  //SEG170 [91] phi (byte) line_ydxi::y#6 = (byte) line_ydxi::y#1 [phi:line::@13->line_ydxi#2] -- register_copy 
  //SEG171 [91] phi (byte) line_ydxi::x#5 = (byte) line_ydxi::x#1 [phi:line::@13->line_ydxi#3] -- register_copy 
  //SEG172 [91] phi (byte) line_ydxi::xd#2 = (byte) line_ydxi::xd#1 [phi:line::@13->line_ydxi#4] -- register_copy 
    jsr line_ydxi
    jmp breturn
}
//SEG173 line_ydxi
line_ydxi: {
    .label y = 6
    .label y1 = 5
    .label yd = 4
    .label xd = 3
    .label e = 7
  //SEG174 [92] (byte) line_ydxi::e#0 ← (byte) line_ydxi::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::x#5 line_ydxi::y#6 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda xd
    lsr
    sta e
  //SEG175 [93] phi from line_ydxi line_ydxi::@2 to line_ydxi::@1 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1]
  //SEG176 [93] phi (byte) line_ydxi::e#3 = (byte) line_ydxi::e#0 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#0] -- register_copy 
  //SEG177 [93] phi (byte) line_ydxi::y#3 = (byte) line_ydxi::y#6 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#1] -- register_copy 
  //SEG178 [93] phi (byte) line_ydxi::x#3 = (byte) line_ydxi::x#5 [phi:line_ydxi/line_ydxi::@2->line_ydxi::@1#2] -- register_copy 
  //SEG179 line_ydxi::@1
  b1:
  //SEG180 [94] (byte) plot::x#2 ← (byte) line_ydxi::x#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 ] )
    // (byte) plot::x#2 = (byte) line_ydxi::x#3  // register copy reg byte x
  //SEG181 [95] (byte) plot::y#2 ← (byte) line_ydxi::y#3 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#2 plot::y#2 ] ) -- yby=zpby1 
    ldy y
  //SEG182 [96] call plot param-assignment [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] )
  //SEG183 [106] phi from line_ydxi::@1 to plot [phi:line_ydxi::@1->plot]
  //SEG184 [106] phi (byte) plot::y#4 = (byte) plot::y#2 [phi:line_ydxi::@1->plot#0] -- register_copy 
  //SEG185 [106] phi (byte) plot::x#4 = (byte) plot::x#2 [phi:line_ydxi::@1->plot#1] -- register_copy 
    jsr plot
  //SEG186 line_ydxi::@5
  //SEG187 [97] (byte) line_ydxi::y#2 ← (byte) line_ydxi::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::e#3 line_ydxi::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG188 [98] (byte) line_ydxi::e#1 ← (byte) line_ydxi::e#3 + (byte) line_ydxi::xd#2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc xd
    sta e
  //SEG189 [99] if((byte) line_ydxi::yd#5>=(byte) line_ydxi::e#1) goto line_ydxi::@2 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#2 line_ydxi::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp e
    bcs b2
  //SEG190 line_ydxi::@3
  //SEG191 [100] (byte) line_ydxi::x#2 ← (byte) line_ydxi::x#3 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::e#1 line_ydxi::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG192 [101] (byte) line_ydxi::e#2 ← (byte) line_ydxi::e#1 - (byte) line_ydxi::yd#5 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::y#2 line_ydxi::x#2 line_ydxi::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc yd
    sta e
  //SEG193 [102] phi from line_ydxi::@3 line_ydxi::@5 to line_ydxi::@2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2]
  //SEG194 [102] phi (byte) line_ydxi::e#6 = (byte) line_ydxi::e#2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2#0] -- register_copy 
  //SEG195 [102] phi (byte) line_ydxi::x#6 = (byte) line_ydxi::x#2 [phi:line_ydxi::@3/line_ydxi::@5->line_ydxi::@2#1] -- register_copy 
  //SEG196 line_ydxi::@2
  b2:
  //SEG197 [103] (byte~) line_ydxi::$8 ← (byte) line_ydxi::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 line_ydxi::$8 ] ) -- aby=zpby1_plus_1 
    lda y1
    clc
    adc #1
  //SEG198 [104] if((byte) line_ydxi::y#2<(byte~) line_ydxi::$8) goto line_ydxi::@1 [ line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#6 line_ydxi::y#2 line_ydxi::e#6 ] ) -- zpby1_lt_aby_then_la1 
    cmp y
    bcs b1
  //SEG199 line_ydxi::@return
  //SEG200 [105] return  [ ] ( main:2::lines:12::line:25::line_ydxi:46 [ lines::l#2 ] main:2::lines:12::line:25::line_ydxi:90 [ lines::l#2 ] )
    rts
}
//SEG201 plot
plot: {
    .label plotter_x = 8
    .label plotter_y = $b
    .label plotter = 8
  //SEG202 [107] (byte~) plot::$0 ← (const byte[]) plot_xhi#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::$0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::$0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::$0 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_xhi,x
  //SEG203 [108] (byte*) plot::plotter_x#1 ← ((byte*))(byte/signed byte/word/signed word) 0 hi= (byte~) plot::$0 [ plot::x#4 plot::y#4 plot::plotter_x#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 ] ) -- zpptrby1=cowo1_sethi_aby 
    sta plotter_x+1
    lda #<0
    sta plotter_x
  //SEG204 [109] (byte~) plot::$1 ← (const byte[]) plot_xlo#0 *idx (byte) plot::x#4 [ plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#1 plot::$1 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_xlo,x
  //SEG205 [110] (byte*) plot::plotter_x#2 ← (byte*) plot::plotter_x#1 lo= (byte~) plot::$1 [ plot::x#4 plot::y#4 plot::plotter_x#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 ] ) -- zpptrby1=zpptrby1_setlo_aby 
    sta plotter_x
  //SEG206 [111] (byte~) plot::$2 ← (const byte[]) plot_yhi#0 *idx (byte) plot::y#4 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::$2 ] ) -- aby=cowo1_derefidx_yby 
    lda plot_yhi,y
  //SEG207 [112] (word) plot::plotter_y#1 ← (byte/signed byte/word/signed word) 0 hi= (byte~) plot::$2 [ plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::y#4 plot::plotter_x#2 plot::plotter_y#1 ] ) -- zpwo1=coby1_sethi_aby 
    sta plotter_y+1
    lda #<0
    sta plotter_y
  //SEG208 [113] (byte~) plot::$3 ← (const byte[]) plot_ylo#0 *idx (byte) plot::y#4 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#1 plot::$3 ] ) -- aby=cowo1_derefidx_yby 
    lda plot_ylo,y
  //SEG209 [114] (word) plot::plotter_y#2 ← (word) plot::plotter_y#1 lo= (byte~) plot::$3 [ plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter_x#2 plot::plotter_y#2 ] ) -- zpwo1=zpwo1_setlo_aby 
    sta plotter_y
  //SEG210 [115] (byte*) plot::plotter#0 ← (byte*) plot::plotter_x#2 + (word) plot::plotter_y#2 [ plot::x#4 plot::plotter#0 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::x#4 plot::plotter#0 ] ) -- zpptrby1=zpptrby1_plus_zpwo1 
    lda plotter
    clc
    adc plotter_y
    sta plotter
    lda plotter+1
    adc plotter_y+1
    sta plotter+1
  //SEG211 [116] (byte~) plot::$5 ← (const byte[]) plot_bit#0 *idx (byte) plot::x#4 [ plot::plotter#0 plot::$5 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$5 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$5 ] ) -- aby=cowo1_derefidx_xby 
    lda plot_bit,x
  //SEG212 [117] (byte~) plot::$6 ← *((byte*) plot::plotter#0) | (byte~) plot::$5 [ plot::plotter#0 plot::$6 ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 plot::plotter#0 plot::$6 ] ) -- aby=_deref_zpptrby1_bor_aby 
    ldy #0
    ora (plotter),y
  //SEG213 [118] *((byte*) plot::plotter#0) ← (byte~) plot::$6 [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ) -- _deref_zpptrby1=aby 
    sta (plotter),y
  //SEG214 plot::@return
  //SEG215 [119] return  [ ] ( main:2::lines:12::line:25::line_ydxi:46::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_ydxi:90::plot:96 [ lines::l#2 line_ydxi::xd#2 line_ydxi::yd#5 line_ydxi::y1#6 line_ydxi::x#3 line_ydxi::y#3 line_ydxi::e#3 ] main:2::lines:12::line:25::line_xdyi:39::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84::plot:125 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_ydxd:60::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76::plot:140 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_xdyd:54::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70::plot:155 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
    rts
}
//SEG216 line_xdyi
line_xdyi: {
    .label _8 = $a
    .label y = 6
    .label x1 = 5
    .label xd = 4
    .label yd = 3
    .label e = 7
  //SEG217 [121] (byte) line_xdyi::e#0 ← (byte) line_xdyi::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::x#6 line_xdyi::y#5 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda yd
    lsr
    sta e
  //SEG218 [122] phi from line_xdyi line_xdyi::@2 to line_xdyi::@1 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1]
  //SEG219 [122] phi (byte) line_xdyi::e#3 = (byte) line_xdyi::e#0 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#0] -- register_copy 
  //SEG220 [122] phi (byte) line_xdyi::y#3 = (byte) line_xdyi::y#5 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#1] -- register_copy 
  //SEG221 [122] phi (byte) line_xdyi::x#3 = (byte) line_xdyi::x#6 [phi:line_xdyi/line_xdyi::@2->line_xdyi::@1#2] -- register_copy 
  //SEG222 line_xdyi::@1
  b1:
  //SEG223 [123] (byte) plot::x#0 ← (byte) line_xdyi::x#3 [ plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 plot::x#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
    // (byte) plot::x#0 = (byte) line_xdyi::x#3  // register copy reg byte x
  //SEG224 [124] (byte) plot::y#0 ← (byte) line_xdyi::y#3 [ plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 plot::x#0 plot::y#0 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG225 [125] call plot param-assignment [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#3 line_xdyi::y#3 line_xdyi::e#3 ] )
  //SEG226 [106] phi from line_xdyi::@1 to plot [phi:line_xdyi::@1->plot]
  //SEG227 [106] phi (byte) plot::y#4 = (byte) plot::y#0 [phi:line_xdyi::@1->plot#0] -- register_copy 
  //SEG228 [106] phi (byte) plot::x#4 = (byte) plot::x#0 [phi:line_xdyi::@1->plot#1] -- register_copy 
    jsr plot
  //SEG229 line_xdyi::@5
  //SEG230 [126] (byte) line_xdyi::x#2 ← (byte) line_xdyi::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::e#3 line_xdyi::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG231 [127] (byte) line_xdyi::e#1 ← (byte) line_xdyi::e#3 + (byte) line_xdyi::yd#2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc yd
    sta e
  //SEG232 [128] if((byte) line_xdyi::xd#5>=(byte) line_xdyi::e#1) goto line_xdyi::@2 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::y#3 line_xdyi::x#2 line_xdyi::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda xd
    cmp e
    bcs b2
  //SEG233 line_xdyi::@3
  //SEG234 [129] (byte) line_xdyi::y#2 ← (byte) line_xdyi::y#3 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::e#1 line_xdyi::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG235 [130] (byte) line_xdyi::e#2 ← (byte) line_xdyi::e#1 - (byte) line_xdyi::xd#5 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#2 line_xdyi::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc xd
    sta e
  //SEG236 [131] phi from line_xdyi::@3 line_xdyi::@5 to line_xdyi::@2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2]
  //SEG237 [131] phi (byte) line_xdyi::e#6 = (byte) line_xdyi::e#2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2#0] -- register_copy 
  //SEG238 [131] phi (byte) line_xdyi::y#6 = (byte) line_xdyi::y#2 [phi:line_xdyi::@3/line_xdyi::@5->line_xdyi::@2#1] -- register_copy 
  //SEG239 line_xdyi::@2
  b2:
  //SEG240 [132] (byte~) line_xdyi::$8 ← (byte) line_xdyi::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 line_xdyi::$8 ] ) -- zpby1=zpby2_plus_1 
    lda x1
    clc
    adc #1
    sta _8
  //SEG241 [133] if((byte) line_xdyi::x#2<(byte~) line_xdyi::$8) goto line_xdyi::@1 [ line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 line_xdyi::yd#2 line_xdyi::xd#5 line_xdyi::x1#6 line_xdyi::x#2 line_xdyi::y#6 line_xdyi::e#6 ] ) -- xby_lt_zpby1_then_la1 
    cpx _8
    bcc b1
  //SEG242 line_xdyi::@return
  //SEG243 [134] return  [ ] ( main:2::lines:12::line:25::line_xdyi:39 [ lines::l#2 ] main:2::lines:12::line:25::line_xdyi:84 [ lines::l#2 ] )
    rts
}
//SEG244 line_ydxd
line_ydxd: {
    .label y = 6
    .label y1 = 5
    .label yd = 4
    .label xd = 3
    .label e = 7
  //SEG245 [136] (byte) line_ydxd::e#0 ← (byte) line_ydxd::xd#2 >> (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::x#5 line_ydxd::y#6 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda xd
    lsr
    sta e
  //SEG246 [137] phi from line_ydxd line_ydxd::@2 to line_ydxd::@1 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1]
  //SEG247 [137] phi (byte) line_ydxd::e#3 = (byte) line_ydxd::e#0 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#0] -- register_copy 
  //SEG248 [137] phi (byte) line_ydxd::y#3 = (byte) line_ydxd::y#6 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#1] -- register_copy 
  //SEG249 [137] phi (byte) line_ydxd::x#3 = (byte) line_ydxd::x#5 [phi:line_ydxd/line_ydxd::@2->line_ydxd::@1#2] -- register_copy 
  //SEG250 line_ydxd::@1
  b1:
  //SEG251 [138] (byte) plot::x#3 ← (byte) line_ydxd::x#3 [ plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 plot::x#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
    // (byte) plot::x#3 = (byte) line_ydxd::x#3  // register copy reg byte x
  //SEG252 [139] (byte) plot::y#3 ← (byte) line_ydxd::y#3 [ plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 plot::x#3 plot::y#3 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG253 [140] call plot param-assignment [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#3 line_ydxd::e#3 ] )
  //SEG254 [106] phi from line_ydxd::@1 to plot [phi:line_ydxd::@1->plot]
  //SEG255 [106] phi (byte) plot::y#4 = (byte) plot::y#3 [phi:line_ydxd::@1->plot#0] -- register_copy 
  //SEG256 [106] phi (byte) plot::x#4 = (byte) plot::x#3 [phi:line_ydxd::@1->plot#1] -- register_copy 
    jsr plot
  //SEG257 line_ydxd::@5
  //SEG258 [141] (byte) line_ydxd::y#2 ← (byte) line_ydxd::y#3 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::e#3 line_ydxd::y#2 ] ) -- zpby1=zpby1_plus_1 
    inc y
  //SEG259 [142] (byte) line_ydxd::e#1 ← (byte) line_ydxd::e#3 + (byte) line_ydxd::xd#2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc xd
    sta e
  //SEG260 [143] if((byte) line_ydxd::yd#5>=(byte) line_ydxd::e#1) goto line_ydxd::@2 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#3 line_ydxd::y#2 line_ydxd::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda yd
    cmp e
    bcs b2
  //SEG261 line_ydxd::@3
  //SEG262 [144] (byte) line_ydxd::x#2 ← (byte) line_ydxd::x#3 - (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::e#1 line_ydxd::x#2 ] ) -- xby=xby_minus_1 
    dex
  //SEG263 [145] (byte) line_ydxd::e#2 ← (byte) line_ydxd::e#1 - (byte) line_ydxd::yd#5 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::y#2 line_ydxd::x#2 line_ydxd::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc yd
    sta e
  //SEG264 [146] phi from line_ydxd::@3 line_ydxd::@5 to line_ydxd::@2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2]
  //SEG265 [146] phi (byte) line_ydxd::e#6 = (byte) line_ydxd::e#2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2#0] -- register_copy 
  //SEG266 [146] phi (byte) line_ydxd::x#6 = (byte) line_ydxd::x#2 [phi:line_ydxd::@3/line_ydxd::@5->line_ydxd::@2#1] -- register_copy 
  //SEG267 line_ydxd::@2
  b2:
  //SEG268 [147] (byte~) line_ydxd::$8 ← (byte) line_ydxd::y1#6 + (byte/signed byte/word/signed word) 1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 line_ydxd::$8 ] ) -- aby=zpby1_plus_1 
    lda y1
    clc
    adc #1
  //SEG269 [148] if((byte) line_ydxd::y#2<(byte~) line_ydxd::$8) goto line_ydxd::@1 [ line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 line_ydxd::xd#2 line_ydxd::yd#5 line_ydxd::y1#6 line_ydxd::x#6 line_ydxd::y#2 line_ydxd::e#6 ] ) -- zpby1_lt_aby_then_la1 
    cmp y
    bcs b1
  //SEG270 line_ydxd::@return
  //SEG271 [149] return  [ ] ( main:2::lines:12::line:25::line_ydxd:60 [ lines::l#2 ] main:2::lines:12::line:25::line_ydxd:76 [ lines::l#2 ] )
    rts
}
//SEG272 line_xdyd
line_xdyd: {
    .label _8 = $a
    .label y = 6
    .label x1 = 5
    .label xd = 4
    .label yd = 3
    .label e = 7
  //SEG273 [151] (byte) line_xdyd::e#0 ← (byte) line_xdyd::yd#2 >> (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::x#6 line_xdyd::y#5 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::e#0 ] ) -- zpby1=zpby2_ror_1 
    lda yd
    lsr
    sta e
  //SEG274 [152] phi from line_xdyd line_xdyd::@2 to line_xdyd::@1 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1]
  //SEG275 [152] phi (byte) line_xdyd::e#3 = (byte) line_xdyd::e#0 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#0] -- register_copy 
  //SEG276 [152] phi (byte) line_xdyd::y#3 = (byte) line_xdyd::y#5 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#1] -- register_copy 
  //SEG277 [152] phi (byte) line_xdyd::x#3 = (byte) line_xdyd::x#6 [phi:line_xdyd/line_xdyd::@2->line_xdyd::@1#2] -- register_copy 
  //SEG278 line_xdyd::@1
  b1:
  //SEG279 [153] (byte) plot::x#1 ← (byte) line_xdyd::x#3 [ plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 plot::x#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
    // (byte) plot::x#1 = (byte) line_xdyd::x#3  // register copy reg byte x
  //SEG280 [154] (byte) plot::y#1 ← (byte) line_xdyd::y#3 [ plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 plot::x#1 plot::y#1 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ) -- yby=zpby1 
    ldy y
  //SEG281 [155] call plot param-assignment [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#3 line_xdyd::y#3 line_xdyd::e#3 ] )
  //SEG282 [106] phi from line_xdyd::@1 to plot [phi:line_xdyd::@1->plot]
  //SEG283 [106] phi (byte) plot::y#4 = (byte) plot::y#1 [phi:line_xdyd::@1->plot#0] -- register_copy 
  //SEG284 [106] phi (byte) plot::x#4 = (byte) plot::x#1 [phi:line_xdyd::@1->plot#1] -- register_copy 
    jsr plot
  //SEG285 line_xdyd::@5
  //SEG286 [156] (byte) line_xdyd::x#2 ← (byte) line_xdyd::x#3 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::e#3 line_xdyd::x#2 ] ) -- xby=xby_plus_1 
    inx
  //SEG287 [157] (byte) line_xdyd::e#1 ← (byte) line_xdyd::e#3 + (byte) line_xdyd::yd#2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ) -- zpby1=zpby1_plus_zpby2 
    lda e
    clc
    adc yd
    sta e
  //SEG288 [158] if((byte) line_xdyd::xd#5>=(byte) line_xdyd::e#1) goto line_xdyd::@2 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::y#3 line_xdyd::x#2 line_xdyd::e#1 ] ) -- zpby1_ge_zpby2_then_la1 
    lda xd
    cmp e
    bcs b2
  //SEG289 line_xdyd::@3
  //SEG290 [159] (byte) line_xdyd::y#2 ← (byte) line_xdyd::y#3 - (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::e#1 line_xdyd::y#2 ] ) -- zpby1=zpby1_minus_1 
    dec y
  //SEG291 [160] (byte) line_xdyd::e#2 ← (byte) line_xdyd::e#1 - (byte) line_xdyd::xd#5 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#2 line_xdyd::e#2 ] ) -- zpby1=zpby1_minus_zpby2 
    lda e
    sec
    sbc xd
    sta e
  //SEG292 [161] phi from line_xdyd::@3 line_xdyd::@5 to line_xdyd::@2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2]
  //SEG293 [161] phi (byte) line_xdyd::e#6 = (byte) line_xdyd::e#2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2#0] -- register_copy 
  //SEG294 [161] phi (byte) line_xdyd::y#6 = (byte) line_xdyd::y#2 [phi:line_xdyd::@3/line_xdyd::@5->line_xdyd::@2#1] -- register_copy 
  //SEG295 line_xdyd::@2
  b2:
  //SEG296 [162] (byte~) line_xdyd::$8 ← (byte) line_xdyd::x1#6 + (byte/signed byte/word/signed word) 1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 line_xdyd::$8 ] ) -- zpby1=zpby2_plus_1 
    lda x1
    clc
    adc #1
    sta _8
  //SEG297 [163] if((byte) line_xdyd::x#2<(byte~) line_xdyd::$8) goto line_xdyd::@1 [ line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 line_xdyd::yd#2 line_xdyd::xd#5 line_xdyd::x1#6 line_xdyd::x#2 line_xdyd::y#6 line_xdyd::e#6 ] ) -- xby_lt_zpby1_then_la1 
    cpx _8
    bcc b1
  //SEG298 line_xdyd::@return
  //SEG299 [164] return  [ ] ( main:2::lines:12::line:25::line_xdyd:54 [ lines::l#2 ] main:2::lines:12::line:25::line_xdyd:70 [ lines::l#2 ] )
    rts
}
//SEG300 init_plot_tables
init_plot_tables: {
    .label _6 = 2
    .label yoffs = 8
  //SEG301 [166] phi from init_plot_tables to init_plot_tables::@1 [phi:init_plot_tables->init_plot_tables::@1]
  //SEG302 [166] phi (byte) init_plot_tables::bits#3 = (byte/word/signed word) 128 [phi:init_plot_tables->init_plot_tables::@1#0] -- yby=coby1 
    ldy #$80
  //SEG303 [166] phi (byte) init_plot_tables::x#2 = (byte/signed byte/word/signed word) 0 [phi:init_plot_tables->init_plot_tables::@1#1] -- xby=coby1 
    ldx #0
  //SEG304 [166] phi from init_plot_tables::@2 to init_plot_tables::@1 [phi:init_plot_tables::@2->init_plot_tables::@1]
  //SEG305 [166] phi (byte) init_plot_tables::bits#3 = (byte) init_plot_tables::bits#4 [phi:init_plot_tables::@2->init_plot_tables::@1#0] -- register_copy 
  //SEG306 [166] phi (byte) init_plot_tables::x#2 = (byte) init_plot_tables::x#1 [phi:init_plot_tables::@2->init_plot_tables::@1#1] -- register_copy 
  //SEG307 init_plot_tables::@1
  b1:
  //SEG308 [167] (byte~) init_plot_tables::$0 ← (byte) init_plot_tables::x#2 & (byte/word/signed word) 248 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 init_plot_tables::$0 ] ) -- aby=xby_band_coby1 
    txa
    and #$f8
  //SEG309 [168] *((const byte[]) plot_xlo#0 + (byte) init_plot_tables::x#2) ← (byte~) init_plot_tables::$0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_xlo,x
  //SEG310 [169] *((const byte[]) plot_xhi#0 + (byte) init_plot_tables::x#2) ← >(const byte*) BITMAP#0 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=coby2 
    lda #>BITMAP
    sta plot_xhi,x
  //SEG311 [170] *((const byte[]) plot_bit#0 + (byte) init_plot_tables::x#2) ← (byte) init_plot_tables::bits#3 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#3 ] ) -- cowo1_derefidx_xby=yby 
    tya
    sta plot_bit,x
  //SEG312 [171] (byte) init_plot_tables::bits#1 ← (byte) init_plot_tables::bits#3 >> (byte/signed byte/word/signed word) 1 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ) -- yby=yby_ror_1 
    tya
    lsr
    tay
  //SEG313 [172] if((byte) init_plot_tables::bits#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#2 init_plot_tables::bits#1 ] ) -- yby_neq_0_then_la1 
    cpy #0
    bne b2
  //SEG314 [173] phi from init_plot_tables::@1 to init_plot_tables::@2 [phi:init_plot_tables::@1->init_plot_tables::@2]
  //SEG315 [173] phi (byte) init_plot_tables::bits#4 = (byte/word/signed word) 128 [phi:init_plot_tables::@1->init_plot_tables::@2#0] -- yby=coby1 
    ldy #$80
  //SEG316 init_plot_tables::@2
  b2:
  //SEG317 [174] (byte) init_plot_tables::x#1 ← ++ (byte) init_plot_tables::x#2 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ) -- xby=_inc_xby 
    inx
  //SEG318 [175] if((byte) init_plot_tables::x#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@1 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::x#1 init_plot_tables::bits#4 ] ) -- xby_neq_0_then_la1 
    cpx #0
    bne b1
  //SEG319 [176] phi from init_plot_tables::@2 to init_plot_tables::@3 [phi:init_plot_tables::@2->init_plot_tables::@3]
  //SEG320 [176] phi (byte*) init_plot_tables::yoffs#2 = ((byte*))(byte/signed byte/word/signed word) 0 [phi:init_plot_tables::@2->init_plot_tables::@3#0] -- zpptrby1=cowo1 
    lda #<0
    sta yoffs
    sta yoffs+1
  //SEG321 [176] phi (byte) init_plot_tables::y#2 = (byte/signed byte/word/signed word) 0 [phi:init_plot_tables::@2->init_plot_tables::@3#1] -- xby=coby1 
    tax
  //SEG322 [176] phi from init_plot_tables::@4 to init_plot_tables::@3 [phi:init_plot_tables::@4->init_plot_tables::@3]
  //SEG323 [176] phi (byte*) init_plot_tables::yoffs#2 = (byte*) init_plot_tables::yoffs#4 [phi:init_plot_tables::@4->init_plot_tables::@3#0] -- register_copy 
  //SEG324 [176] phi (byte) init_plot_tables::y#2 = (byte) init_plot_tables::y#1 [phi:init_plot_tables::@4->init_plot_tables::@3#1] -- register_copy 
  //SEG325 init_plot_tables::@3
  b3:
  //SEG326 [177] (byte~) init_plot_tables::$6 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 ] ) -- zpby1=xby_band_coby1 
    txa
    and #7
    sta _6
  //SEG327 [178] (byte~) init_plot_tables::$7 ← < (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$6 init_plot_tables::$7 ] ) -- aby=_lo_zpptrby1 
    lda yoffs
  //SEG328 [179] (byte~) init_plot_tables::$8 ← (byte~) init_plot_tables::$6 | (byte~) init_plot_tables::$7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$8 ] ) -- aby=zpby1_bor_aby 
    ora _6
  //SEG329 [180] *((const byte[]) plot_ylo#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$8 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_ylo,x
  //SEG330 [181] (byte~) init_plot_tables::$9 ← > (byte*) init_plot_tables::yoffs#2 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$9 ] ) -- aby=_hi_zpptrby1 
    lda yoffs+1
  //SEG331 [182] *((const byte[]) plot_yhi#0 + (byte) init_plot_tables::y#2) ← (byte~) init_plot_tables::$9 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- cowo1_derefidx_xby=aby 
    sta plot_yhi,x
  //SEG332 [183] (byte~) init_plot_tables::$10 ← (byte) init_plot_tables::y#2 & (byte/signed byte/word/signed word) 7 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 init_plot_tables::$10 ] ) -- aby=xby_band_coby1 
    txa
    and #7
  //SEG333 [184] if((byte~) init_plot_tables::$10!=(byte/signed byte/word/signed word) 7) goto init_plot_tables::@4 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#2 ] ) -- aby_neq_coby1_then_la1 
    cmp #7
    bne b4
  //SEG334 init_plot_tables::@7
  //SEG335 [185] (byte*) init_plot_tables::yoffs#1 ← (byte*) init_plot_tables::yoffs#2 + (word/signed word) 320 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#2 init_plot_tables::yoffs#1 ] ) -- zpptrby1=zpptrby1_plus_cowo1 
    lda yoffs
    clc
    adc #<$140
    sta yoffs
    lda yoffs+1
    adc #>$140
    sta yoffs+1
  //SEG336 [186] phi from init_plot_tables::@3 init_plot_tables::@7 to init_plot_tables::@4 [phi:init_plot_tables::@3/init_plot_tables::@7->init_plot_tables::@4]
  //SEG337 [186] phi (byte*) init_plot_tables::yoffs#4 = (byte*) init_plot_tables::yoffs#2 [phi:init_plot_tables::@3/init_plot_tables::@7->init_plot_tables::@4#0] -- register_copy 
  //SEG338 init_plot_tables::@4
  b4:
  //SEG339 [187] (byte) init_plot_tables::y#1 ← ++ (byte) init_plot_tables::y#2 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ) -- xby=_inc_xby 
    inx
  //SEG340 [188] if((byte) init_plot_tables::y#1!=(byte/signed byte/word/signed word) 0) goto init_plot_tables::@3 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ( main:2::init_plot_tables:10 [ init_plot_tables::y#1 init_plot_tables::yoffs#4 ] ) -- xby_neq_0_then_la1 
    cpx #0
    bne b3
  //SEG341 init_plot_tables::@return
  //SEG342 [189] return  [ ] ( main:2::init_plot_tables:10 [ ] )
    rts
  //SEG343 [190] phi from init_plot_tables::@1 to init_plot_tables::@10 [phi:init_plot_tables::@1->init_plot_tables::@10]
  //SEG344 init_plot_tables::@10
  //SEG345 [173] phi from init_plot_tables::@10 to init_plot_tables::@2 [phi:init_plot_tables::@10->init_plot_tables::@2]
  //SEG346 [173] phi (byte) init_plot_tables::bits#4 = (byte) init_plot_tables::bits#1 [phi:init_plot_tables::@10->init_plot_tables::@2#0] -- register_copy 
}
//SEG347 init_screen
init_screen: {
    .label b = 8
    .label c = 8
  //SEG348 [192] phi from init_screen to init_screen::@1 [phi:init_screen->init_screen::@1]
  //SEG349 [192] phi (byte*) init_screen::b#2 = (const byte*) BITMAP#0 [phi:init_screen->init_screen::@1#0] -- zpptrby1=cowo1 
    lda #<BITMAP
    sta b
    lda #>BITMAP
    sta b+1
  //SEG350 [192] phi from init_screen::@1 to init_screen::@1 [phi:init_screen::@1->init_screen::@1]
  //SEG351 [192] phi (byte*) init_screen::b#2 = (byte*) init_screen::b#1 [phi:init_screen::@1->init_screen::@1#0] -- register_copy 
  //SEG352 init_screen::@1
  b1:
  //SEG353 [193] *((byte*) init_screen::b#2) ← (byte/signed byte/word/signed word) 0 [ init_screen::b#2 ] ( main:2::init_screen:8 [ init_screen::b#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    tya
    sta (b),y
  //SEG354 [194] (byte*) init_screen::b#1 ← ++ (byte*) init_screen::b#2 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc b
    bne !+
    inc b+1
  !:
  //SEG355 [195] if((byte*) init_screen::b#1!=(const byte*) BITMAP#0+(word/signed word) 8192) goto init_screen::@1 [ init_screen::b#1 ] ( main:2::init_screen:8 [ init_screen::b#1 ] ) -- zpptrby1_neq_cowo1_then_la1 
    lda b+1
    cmp #>BITMAP+$2000
    bne b1
    lda b
    cmp #<BITMAP+$2000
    bne b1
  //SEG356 [196] phi from init_screen::@1 to init_screen::@2 [phi:init_screen::@1->init_screen::@2]
  //SEG357 [196] phi (byte*) init_screen::c#2 = (const byte*) SCREEN#0 [phi:init_screen::@1->init_screen::@2#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta c
    lda #>SCREEN
    sta c+1
  //SEG358 [196] phi from init_screen::@2 to init_screen::@2 [phi:init_screen::@2->init_screen::@2]
  //SEG359 [196] phi (byte*) init_screen::c#2 = (byte*) init_screen::c#1 [phi:init_screen::@2->init_screen::@2#0] -- register_copy 
  //SEG360 init_screen::@2
  b2:
  //SEG361 [197] *((byte*) init_screen::c#2) ← (byte/signed byte/word/signed word) 20 [ init_screen::c#2 ] ( main:2::init_screen:8 [ init_screen::c#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #$14
    sta (c),y
  //SEG362 [198] (byte*) init_screen::c#1 ← ++ (byte*) init_screen::c#2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc c
    bne !+
    inc c+1
  !:
  //SEG363 [199] if((byte*) init_screen::c#1!=(const byte*) SCREEN#0+(word/signed word) 1024) goto init_screen::@2 [ init_screen::c#1 ] ( main:2::init_screen:8 [ init_screen::c#1 ] ) -- zpptrby1_neq_cowo1_then_la1 
    lda c+1
    cmp #>SCREEN+$400
    bne b2
    lda c
    cmp #<SCREEN+$400
    bne b2
  //SEG364 init_screen::@return
  //SEG365 [200] return  [ ] ( main:2::init_screen:8 [ ] )
    rts
}

