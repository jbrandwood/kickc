
(void()) main()
main: scope:[main]  from
  [0] phi()
  [1] call strncat 
  to:main::@3
main::@3: scope:[main]  from main
  [2] phi()
  [3] call strncat 
  to:main::@4
main::@4: scope:[main]  from main::@3
  [4] phi()
  [5] call strncat 
  to:main::@1
main::@1: scope:[main]  from main::@2 main::@4
  [6] (byte) main::i#2 ← phi( main::@2/(byte) main::i#1 main::@4/(byte) 0 )
  [7] if((byte) 0!=*((const byte*) build + (byte) main::i#2)) goto main::@2
  to:main::@return
main::@return: scope:[main]  from main::@1
  [8] return 
  to:@return
main::@2: scope:[main]  from main::@1
  [9] *((const nomodify byte*) SCREEN + (byte) main::i#2) ← *((const byte*) build + (byte) main::i#2)
  [10] (byte) main::i#1 ← ++ (byte) main::i#2
  to:main::@1

(byte*()) strncat((byte*) strncat::destination , (to_nomodify byte*) strncat::source , (word) strncat::num)
strncat: scope:[strncat]  from main main::@3 main::@4
  [11] (to_nomodify byte*) strncat::source#7 ← phi( main/(const byte*) hello main::@3/(const byte*) space main::@4/(const byte*) world )
  to:strncat::@1
strncat::@1: scope:[strncat]  from strncat strncat::@2
  [12] (byte*) strncat::dst#3 ← phi( strncat/(const byte*) build strncat::@2/(byte*) strncat::dst#1 )
  [13] if((byte) 0!=*((byte*) strncat::dst#3)) goto strncat::@2
  to:strncat::@3
strncat::@3: scope:[strncat]  from strncat::@1 strncat::@4
  [14] (word) strncat::num#4 ← phi( strncat::@1/(byte) 5 strncat::@4/(word) strncat::num#3 )
  [14] (byte*) strncat::dst#5 ← phi( strncat::@1/(byte*) strncat::dst#3 strncat::@4/(byte*) strncat::dst#2 )
  [14] (to_nomodify byte*) strncat::source#4 ← phi( strncat::@1/(to_nomodify byte*) strncat::source#7 strncat::@4/(to_nomodify byte*) strncat::source#3 )
  [15] *((byte*) strncat::dst#5) ← *((to_nomodify byte*) strncat::source#4)
  [16] (to_nomodify byte*) strncat::source#3 ← ++ (to_nomodify byte*) strncat::source#4
  [17] if((byte) 0==(word) strncat::num#4) goto strncat::@5
  to:strncat::@6
strncat::@6: scope:[strncat]  from strncat::@3
  [18] if((byte) 0!=*((byte*) strncat::dst#5)) goto strncat::@4
  to:strncat::@5
strncat::@5: scope:[strncat]  from strncat::@3 strncat::@6
  [19] *((byte*) strncat::dst#5) ← (byte) 0
  to:strncat::@return
strncat::@return: scope:[strncat]  from strncat::@5
  [20] return 
  to:@return
strncat::@4: scope:[strncat]  from strncat::@6
  [21] (word) strncat::num#3 ← -- (word) strncat::num#4
  [22] (byte*) strncat::dst#2 ← ++ (byte*) strncat::dst#5
  to:strncat::@3
strncat::@2: scope:[strncat]  from strncat::@1
  [23] (byte*) strncat::dst#1 ← ++ (byte*) strncat::dst#3
  to:strncat::@1
