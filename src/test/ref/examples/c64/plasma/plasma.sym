__constant const char BLACK = 0
__constant const char BLUE = 6
__constant char * const CHARSET = (char *) 8192
__constant char * const COLS = (char *) 55296
__constant char * const D018 = (char *) 53272
__constant char OFFSET_STRUCT_MOS6569_VICII_BG_COLOR = $21
__constant char OFFSET_STRUCT_MOS6569_VICII_BORDER_COLOR = $20
__constant char OFFSET_STRUCT_MOS6581_SID_CH3_CONTROL = $12
__constant char OFFSET_STRUCT_MOS6581_SID_CH3_FREQ = $e
__constant char OFFSET_STRUCT_MOS6581_SID_CH3_OSC = $1b
__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
__constant char * const SCREEN1 = (char *) 10240
__constant char * const SCREEN2 = (char *) 11264
__constant struct MOS6581_SID * const SID = (struct MOS6581_SID *) 54272
__constant const char SID_CONTROL_NOISE = $80
__constant const char SINTABLE[$100] = kickasm {{ .for(var i=0;i<$100;i++)
        .byte round(127.5+127.5*sin(2*PI*i/256))
 }}
__constant struct MOS6569_VICII * const VICII = (struct MOS6569_VICII *) 53248
char c1A
char c1A#10 // c1A zp[1]:4 11.0
char c1A#11 // c1A zp[1]:4 22.4
char c1A#3 // c1A zp[1]:4 4.241379310344827
char c1B
char c1B#10 // c1B zp[1]:14 11.0
char c1B#11 // c1B zp[1]:14 20.363636363636363
char c1B#3 // c1B zp[1]:14 4.392857142857143
char c2A
char c2A#10 // c2A zp[1]:17 11.0
char c2A#26 // c2A zp[1]:17 10.666666666666666
char c2A#3 // c2A zp[1]:17 6.833333333333333
char c2B
char c2B#10 // c2B zp[1]:5 11.0
char c2B#26 // c2B zp[1]:5 10.181818181818182
char c2B#3 // c2B zp[1]:5 7.235294117647059
void doplasma(char *screen)
char doplasma::$1 // reg byte a 20002.0
char doplasma::$3 // reg byte a 20002.0
char doplasma::$6 // reg byte a 200002.0
char doplasma::c1a
char doplasma::c1a#0 // c1a zp[1]:7 101.0
char doplasma::c1a#1 // c1a zp[1]:7 6667.333333333333
char doplasma::c1a#2 // c1a zp[1]:7 7526.0
char doplasma::c1b
char doplasma::c1b#0 // c1b zp[1]:8 202.0
char doplasma::c1b#1 // c1b zp[1]:8 10001.0
char doplasma::c1b#2 // c1b zp[1]:8 6020.8
char doplasma::c2a
char doplasma::c2a#0 // c2a zp[1]:10 101.0
char doplasma::c2a#1 // c2a zp[1]:10 6667.333333333333
char doplasma::c2a#2 // c2a zp[1]:10 7526.0
char doplasma::c2b
char doplasma::c2b#0 // c2b zp[1]:11 202.0
char doplasma::c2b#1 // c2b zp[1]:11 10001.0
char doplasma::c2b#2 // c2b zp[1]:11 6020.8
char doplasma::i
char doplasma::i#1 // i zp[1]:6 20002.0
char doplasma::i#2 // i zp[1]:6 6667.333333333333
char doplasma::i1
char doplasma::i1#1 // i1 zp[1]:9 20002.0
char doplasma::i1#2 // i1 zp[1]:9 6667.333333333333
char doplasma::i2
char doplasma::i2#1 // reg byte y 200002.0
char doplasma::i2#2 // reg byte y 125001.25
char doplasma::ii
char doplasma::ii#1 // reg byte x 20002.0
char doplasma::ii#2 // reg byte x 16250.5
char *doplasma::screen
char *doplasma::screen#13 // screen zp[2]:12 4.391304347826087
char *doplasma::screen#2 // screen zp[2]:12 10001.0
char *doplasma::screen#6 // screen zp[2]:12 17157.714285714286
__constant char doplasma::xbuf[$28] = { fill( $28, 0) }
__constant char doplasma::ybuf[$19] = { fill( $19, 0) }
void main()
char *main::col
char *main::col#1 // col zp[2]:2 16.5
char *main::col#2 // col zp[2]:2 16.5
char *main::toD0181_gfx
char main::toD0181_return
__constant char main::toD0181_return#0 = byte1 (unsigned int)SCREEN1&$3fff*4|byte1 (unsigned int)CHARSET/4&$f // toD0181_return
char *main::toD0181_screen
char *main::toD0182_gfx
char main::toD0182_return
__constant char main::toD0182_return#0 = byte1 (unsigned int)SCREEN2&$3fff*4|byte1 (unsigned int)CHARSET/4&$f // toD0182_return
char *main::toD0182_screen
void makecharset(char *charset)
unsigned int makecharset::$10 // zp[2]:15 2002.0
unsigned int makecharset::$11 // zp[2]:15 2002.0
char makecharset::$12 // reg byte a 202.0
char *makecharset::$16 // zp[2]:15 2002.0
char makecharset::$3 // reg byte x 202.0
char makecharset::$7 // zp[1]:17 20002.0
char makecharset::b
char makecharset::b#1 // reg byte y 20002.0
char makecharset::b#2 // reg byte y 3875.5
char makecharset::b#6 // reg byte y 15001.5
__constant const char makecharset::bittab[8] = { 1, 2, 4, 8, $10, $20, $40, $80 }
unsigned int makecharset::c
unsigned int makecharset::c#1 // c zp[2]:12 202.0
unsigned int makecharset::c#2 // c zp[2]:12 62.75
char *makecharset::charset
char makecharset::i
char makecharset::i#1 // i zp[1]:4 2002.0
char makecharset::i#2 // i zp[1]:4 286.0
char makecharset::ii
char makecharset::ii#1 // reg byte x 20002.0
char makecharset::ii#2 // reg byte x 5714.857142857143
char makecharset::s
char makecharset::s#0 // s zp[1]:14 631.375
char makecharset::sid_rnd1_return
char makecharset::sid_rnd1_return#0 // reg byte a 20002.0
void * memset(void *str , char c , unsigned int num)
char memset::c
__constant char memset::c#0 = ' ' // c
char *memset::dst
char *memset::dst#1 // dst zp[2]:15 20002.0
char *memset::dst#2 // dst zp[2]:15 13334.666666666666
char *memset::end
__constant char *memset::end#0 = (char *)memset::str#0+memset::num#0 // end
unsigned int memset::num
__constant unsigned int memset::num#0 = $3e8 // num
void *memset::return
void *memset::str
__constant void *memset::str#0 = (void *)print_screen#0 // str
void print_char(char ch)
char print_char::ch
__constant char print_char::ch#0 = '.' // ch
char *print_char_cursor
char *print_char_cursor#0 // print_char_cursor zp[2]:2 367.33333333333337
char *print_char_cursor#19 // print_char_cursor zp[2]:2 95.82608695652173
char *print_char_cursor#31 // print_char_cursor zp[2]:2 151.5
void print_cls()
char *print_line_cursor
char *print_screen
__constant char *print_screen#0 = (char *) 1024 // print_screen

zp[2]:2 [ print_char_cursor#19 print_char_cursor#31 print_char_cursor#0 main::col#2 main::col#1 ]
reg byte x [ makecharset::ii#2 makecharset::ii#1 ]
reg byte y [ makecharset::b#2 makecharset::b#6 makecharset::b#1 ]
zp[1]:4 [ c1A#11 c1A#10 c1A#3 makecharset::i#2 makecharset::i#1 ]
zp[1]:5 [ c2B#26 c2B#10 c2B#3 ]
zp[1]:6 [ doplasma::i#2 doplasma::i#1 ]
zp[1]:7 [ doplasma::c1a#2 doplasma::c1a#0 doplasma::c1a#1 ]
zp[1]:8 [ doplasma::c1b#2 doplasma::c1b#0 doplasma::c1b#1 ]
zp[1]:9 [ doplasma::i1#2 doplasma::i1#1 ]
zp[1]:10 [ doplasma::c2a#2 doplasma::c2a#0 doplasma::c2a#1 ]
zp[1]:11 [ doplasma::c2b#2 doplasma::c2b#0 doplasma::c2b#1 ]
reg byte x [ doplasma::ii#2 doplasma::ii#1 ]
zp[2]:12 [ doplasma::screen#6 doplasma::screen#2 doplasma::screen#13 makecharset::c#2 makecharset::c#1 ]
reg byte y [ doplasma::i2#2 doplasma::i2#1 ]
reg byte x [ makecharset::$3 ]
zp[1]:14 [ makecharset::s#0 c1B#11 c1B#10 c1B#3 ]
reg byte a [ makecharset::$12 ]
zp[2]:15 [ makecharset::$10 makecharset::$11 makecharset::$16 memset::dst#2 memset::dst#1 ]
reg byte a [ makecharset::sid_rnd1_return#0 ]
zp[1]:17 [ makecharset::$7 c2A#26 c2A#10 c2A#3 ]
reg byte a [ doplasma::$6 ]
reg byte a [ doplasma::$3 ]
reg byte a [ doplasma::$1 ]
