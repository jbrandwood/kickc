(label) @3
(label) @8
(label) @begin
(label) @end
(byte*) BORDERCOL
(const byte*) BORDERCOL#0 BORDERCOL = ((byte*))(word/dword/signed dword) 53280
(signed byte*) COSH
(const signed byte*) COSH#0 COSH = ((signed byte*))(word/signed word/dword/signed dword) 8192
(signed byte*) COSQ
(const signed byte*) COSQ#0 COSQ = ((signed byte*))(word/signed word/dword/signed dword) 8704
(byte) GREEN
(const byte) GREEN#0 GREEN = (byte/signed byte/word/signed word/dword/signed dword) 5
(byte) LIGHT_BLUE
(const byte) LIGHT_BLUE#0 LIGHT_BLUE = (byte/signed byte/word/signed word/dword/signed dword) 14
(byte*) RASTER
(const byte*) RASTER#0 RASTER = ((byte*))(word/dword/signed dword) 53266
(byte*) SCREEN
(const byte*) SCREEN#0 SCREEN = ((byte*))(word/signed word/dword/signed dword) 1024
(signed byte*) SINH
(const signed byte*) SINH#0 SINH = (const signed byte*) COSH#0+(byte/signed byte/word/signed word/dword/signed dword) 64
(signed byte*) SINQ
(const signed byte*) SINQ#0 SINQ = (const signed byte*) COSQ#0+(byte/signed byte/word/signed word/dword/signed dword) 64
(byte*) SPRITE
(const byte*) SPRITE#0 SPRITE = ((byte*))(word/signed word/dword/signed dword) 12288
(byte*) SPRITES_COLS
(const byte*) SPRITES_COLS#0 SPRITES_COLS = ((byte*))(word/dword/signed dword) 53287
(byte*) SPRITES_ENABLE
(const byte*) SPRITES_ENABLE#0 SPRITES_ENABLE = ((byte*))(word/dword/signed dword) 53269
(byte*) SPRITES_XPOS
(const byte*) SPRITES_XPOS#0 SPRITES_XPOS = ((byte*))(word/dword/signed dword) 53248
(byte*) SPRITES_YPOS
(const byte*) SPRITES_YPOS#0 SPRITES_YPOS = ((byte*))(word/dword/signed dword) 53249
(void()) main()
(byte/word/signed word/dword/signed dword~) main::$11 reg byte a 202.0
(signed byte~) main::$12 reg byte a 101.0
(byte/word/signed word/dword/signed dword~) main::$14 reg byte a 202.0
(byte~) main::$4 reg byte a 22.0
(signed byte~) main::$9 reg byte a 101.0
(label) main::@1
(label) main::@14
(label) main::@15
(label) main::@17
(label) main::@19
(label) main::@20
(label) main::@4
(label) main::@6
(label) main::@7
(label) main::@8
(byte) main::i
(byte) main::i#1 i zp ZP_BYTE:5 151.5
(byte) main::i#2 i zp ZP_BYTE:5 46.61538461538461
(byte) main::i2
(byte) main::i2#0 reg byte x 50.5
(signed byte) main::sx
(signed byte) main::sx#1 sx zp ZP_BYTE:2 22.0
(signed byte) main::sx#12 sx zp ZP_BYTE:2 1.9411764705882355
(signed byte) main::sx#6 sx zp ZP_BYTE:2 4.0
(signed byte) main::sy
(signed byte) main::sy#1 sy zp ZP_BYTE:3 1.5
(signed byte) main::sy#5 sy zp ZP_BYTE:3 4.714285714285714
(signed byte) main::sz
(signed byte) main::sz#1 sz zp ZP_BYTE:4 1.0476190476190477
(signed byte) main::sz#5 sz zp ZP_BYTE:4 4.125
(void()) mulf_init()
(byte~) mulf_init::$0 reg byte a 22.0
(byte~) mulf_init::$12 reg byte a 22.0
(byte/signed word/word/dword/signed dword~) mulf_init::$13 reg byte y 11.0
(byte~) mulf_init::$14 reg byte a 22.0
(byte/signed word/word/dword/signed dword~) mulf_init::$16 reg byte y 11.0
(byte~) mulf_init::$17 reg byte a 22.0
(byte~) mulf_init::$2 reg byte a 22.0
(byte~) mulf_init::$3 reg byte y 11.0
(byte~) mulf_init::$4 reg byte a 22.0
(byte~) mulf_init::$6 reg byte y 11.0
(byte~) mulf_init::$7 reg byte a 22.0
(byte~) mulf_init::$9 reg byte a 22.0
(label) mulf_init::@1
(label) mulf_init::@return
(signed word) mulf_init::add
(signed word) mulf_init::add#1 add zp ZP_WORD:8 7.333333333333333
(signed word) mulf_init::add#2 add zp ZP_WORD:8 1.5
(byte) mulf_init::i
(byte) mulf_init::i#1 reg byte x 16.5
(byte) mulf_init::i#2 reg byte x 4.782608695652174
(signed word) mulf_init::sqr1
(signed word) mulf_init::sqr1#1 sqr1 zp ZP_WORD:6 5.5
(signed word) mulf_init::sqr1#2 sqr1 zp ZP_WORD:6 5.238095238095238
(byte[512]) mulf_sqr1
(const byte[512]) mulf_sqr1#0 mulf_sqr1 = { fill( 512, 0) }
(byte[512]) mulf_sqr2
(const byte[512]) mulf_sqr2#0 mulf_sqr2 = { fill( 512, 0) }
(void()) prepare_matrix((signed byte) prepare_matrix::sx , (signed byte) prepare_matrix::sy , (signed byte) prepare_matrix::sz)
(signed byte~) prepare_matrix::$10 reg byte a 4.0
(signed byte~) prepare_matrix::$11 reg byte a 4.0
(signed byte~) prepare_matrix::$12 reg byte a 4.0
(signed byte~) prepare_matrix::$13 reg byte a 4.0
(signed byte~) prepare_matrix::$14 reg byte a 4.0
(signed byte~) prepare_matrix::$15 reg byte a 4.0
(signed byte~) prepare_matrix::$16 reg byte a 4.0
(signed byte~) prepare_matrix::$17 reg byte a 4.0
(signed byte~) prepare_matrix::$18 reg byte a 4.0
(signed byte~) prepare_matrix::$19 reg byte a 4.0
(signed byte~) prepare_matrix::$20 reg byte a 4.0
(signed byte~) prepare_matrix::$21 reg byte a 4.0
(signed byte~) prepare_matrix::$22 reg byte a 4.0
(signed byte~) prepare_matrix::$23 reg byte a 4.0
(signed byte~) prepare_matrix::$24 reg byte a 4.0
(signed byte~) prepare_matrix::$25 reg byte a 4.0
(signed byte~) prepare_matrix::$26 reg byte a 4.0
(signed byte~) prepare_matrix::$27 reg byte a 4.0
(signed byte~) prepare_matrix::$28 reg byte a 4.0
(signed byte~) prepare_matrix::$29 reg byte a 4.0
(signed byte~) prepare_matrix::$30 reg byte a 4.0
(signed byte~) prepare_matrix::$31 reg byte a 4.0
(signed byte~) prepare_matrix::$32 reg byte a 4.0
(signed byte~) prepare_matrix::$33 reg byte a 4.0
(signed byte~) prepare_matrix::$34 reg byte a 4.0
(label) prepare_matrix::@return
(signed byte) prepare_matrix::sx
(signed byte) prepare_matrix::sx#0 reg byte y 2.25
(signed byte) prepare_matrix::sy
(signed byte) prepare_matrix::sy#0 sy zp ZP_BYTE:3 1.4375
(signed byte) prepare_matrix::sz
(signed byte) prepare_matrix::sz#0 reg byte x 4.75
(signed byte) prepare_matrix::t1
(signed byte) prepare_matrix::t1#0 t1 zp ZP_BYTE:5 0.8333333333333333
(signed byte) prepare_matrix::t10
(signed byte) prepare_matrix::t10#0 t10 zp ZP_BYTE:18 0.18181818181818182
(signed byte) prepare_matrix::t2
(signed byte) prepare_matrix::t2#0 t2 zp ZP_BYTE:10 0.9090909090909092
(signed byte) prepare_matrix::t3
(signed byte) prepare_matrix::t3#0 t3 zp ZP_BYTE:11 0.29411764705882354
(signed byte) prepare_matrix::t4
(signed byte) prepare_matrix::t4#0 t4 zp ZP_BYTE:12 0.30303030303030304
(signed byte) prepare_matrix::t5
(signed byte) prepare_matrix::t5#0 t5 zp ZP_BYTE:13 0.29411764705882354
(signed byte) prepare_matrix::t6
(signed byte) prepare_matrix::t6#0 t6 zp ZP_BYTE:14 0.3125
(signed byte) prepare_matrix::t7
(signed byte) prepare_matrix::t7#0 t7 zp ZP_BYTE:15 0.30303030303030304
(signed byte) prepare_matrix::t8
(signed byte) prepare_matrix::t8#0 t8 zp ZP_BYTE:16 0.30303030303030304
(signed byte) prepare_matrix::t9
(signed byte) prepare_matrix::t9#0 t9 zp ZP_BYTE:17 0.1764705882352941
(void()) rotate((signed byte) rotate::x , (signed byte) rotate::y , (signed byte) rotate::z)
(label) rotate::@return
(signed byte) rotate::x
(signed byte) rotate::x#0 x zp ZP_BYTE:10 34.33333333333333
(signed byte) rotate::y
(signed byte) rotate::y#0 reg byte y 34.33333333333333
(signed byte) rotate::z
(signed byte) rotate::z#0 reg byte x 34.33333333333333
(signed byte[9]) rotation_matrix
(const signed byte[9]) rotation_matrix#0 rotation_matrix = { fill( 9, 0) }
(void()) sprites_init()
(label) sprites_init::@1
(label) sprites_init::@return
(byte) sprites_init::i
(byte) sprites_init::i#1 reg byte x 16.5
(byte) sprites_init::i#2 reg byte x 14.666666666666666
(byte*) sprites_init::sprites_ptr
(const byte*) sprites_init::sprites_ptr#0 sprites_ptr = (const byte*) SCREEN#0+(word/signed word/dword/signed dword) 1016
(signed byte*) xr
(const signed byte*) xr#0 xr = ((signed byte*))(byte/word/signed word/dword/signed dword) 240
(signed byte[8]) xs
(const signed byte[8]) xs#0 xs = { -(byte/signed byte/word/signed word/dword/signed dword) 63, -(byte/signed byte/word/signed word/dword/signed dword) 63, -(byte/signed byte/word/signed word/dword/signed dword) 63, -(byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63 }
(signed byte*) yr
(const signed byte*) yr#0 yr = ((signed byte*))(byte/word/signed word/dword/signed dword) 241
(signed byte[8]) ys
(const signed byte[8]) ys#0 ys = { -(byte/signed byte/word/signed word/dword/signed dword) 63, -(byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, -(byte/signed byte/word/signed word/dword/signed dword) 63, -(byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63 }
(signed byte*) zr
(const signed byte*) zr#0 zr = ((signed byte*))(byte/word/signed word/dword/signed dword) 242
(signed byte[8]) zs
(const signed byte[8]) zs#0 zs = { -(byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, -(byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, -(byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63, -(byte/signed byte/word/signed word/dword/signed dword) 63, (byte/signed byte/word/signed word/dword/signed dword) 63 }

zp ZP_BYTE:2 [ main::sx#6 main::sx#12 main::sx#1 ]
zp ZP_BYTE:3 [ main::sy#5 main::sy#1 prepare_matrix::sy#0 ]
zp ZP_BYTE:4 [ main::sz#5 main::sz#1 ]
zp ZP_BYTE:5 [ main::i#2 main::i#1 prepare_matrix::t1#0 ]
zp ZP_WORD:6 [ mulf_init::sqr1#2 mulf_init::sqr1#1 ]
reg byte x [ mulf_init::i#2 mulf_init::i#1 ]
zp ZP_WORD:8 [ mulf_init::add#2 mulf_init::add#1 ]
reg byte x [ sprites_init::i#2 sprites_init::i#1 ]
reg byte y [ prepare_matrix::sx#0 ]
reg byte x [ prepare_matrix::sz#0 ]
reg byte a [ main::$4 ]
zp ZP_BYTE:10 [ rotate::x#0 prepare_matrix::t2#0 ]
reg byte y [ rotate::y#0 ]
reg byte x [ rotate::z#0 ]
reg byte x [ main::i2#0 ]
reg byte a [ main::$9 ]
reg byte a [ main::$11 ]
reg byte a [ main::$12 ]
reg byte a [ main::$14 ]
zp ZP_BYTE:11 [ prepare_matrix::t3#0 ]
zp ZP_BYTE:12 [ prepare_matrix::t4#0 ]
zp ZP_BYTE:13 [ prepare_matrix::t5#0 ]
zp ZP_BYTE:14 [ prepare_matrix::t6#0 ]
zp ZP_BYTE:15 [ prepare_matrix::t7#0 ]
zp ZP_BYTE:16 [ prepare_matrix::t8#0 ]
zp ZP_BYTE:17 [ prepare_matrix::t9#0 ]
zp ZP_BYTE:18 [ prepare_matrix::t10#0 ]
reg byte a [ prepare_matrix::$10 ]
reg byte a [ prepare_matrix::$11 ]
reg byte a [ prepare_matrix::$12 ]
reg byte a [ prepare_matrix::$13 ]
reg byte a [ prepare_matrix::$14 ]
reg byte a [ prepare_matrix::$15 ]
reg byte a [ prepare_matrix::$16 ]
reg byte a [ prepare_matrix::$17 ]
reg byte a [ prepare_matrix::$18 ]
reg byte a [ prepare_matrix::$19 ]
reg byte a [ prepare_matrix::$20 ]
reg byte a [ prepare_matrix::$21 ]
reg byte a [ prepare_matrix::$22 ]
reg byte a [ prepare_matrix::$23 ]
reg byte a [ prepare_matrix::$24 ]
reg byte a [ prepare_matrix::$25 ]
reg byte a [ prepare_matrix::$26 ]
reg byte a [ prepare_matrix::$27 ]
reg byte a [ prepare_matrix::$28 ]
reg byte a [ prepare_matrix::$29 ]
reg byte a [ prepare_matrix::$30 ]
reg byte a [ prepare_matrix::$31 ]
reg byte a [ prepare_matrix::$32 ]
reg byte a [ prepare_matrix::$33 ]
reg byte a [ prepare_matrix::$34 ]
reg byte a [ mulf_init::$0 ]
reg byte a [ mulf_init::$2 ]
reg byte y [ mulf_init::$3 ]
reg byte a [ mulf_init::$4 ]
reg byte y [ mulf_init::$6 ]
reg byte a [ mulf_init::$7 ]
reg byte a [ mulf_init::$9 ]
reg byte a [ mulf_init::$12 ]
reg byte y [ mulf_init::$13 ]
reg byte a [ mulf_init::$14 ]
reg byte y [ mulf_init::$16 ]
reg byte a [ mulf_init::$17 ]
