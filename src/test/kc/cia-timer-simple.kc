// Setup and run a simple CIA-timer

import "c64"
import "print"

const byte* SCREEN = 0x0400;

void main() {

    asm { sei }

    // Timer AB initial value
    dword TIMER_INIT = 0xffffffff;
    // Setup CIA#2 timer A to count (down) CPU cycles
    *CIA2_TIMER_A_CONTROL = CIA_TIMER_CONTROL_STOP | CIA_TIMER_CONTROL_CONTINUOUS | CIA_TIMER_CONTROL_A_COUNT_CYCLES;
    *CIA2_TIMER_B_CONTROL = CIA_TIMER_CONTROL_STOP | CIA_TIMER_CONTROL_CONTINUOUS | CIA_TIMER_CONTROL_B_COUNT_UNDERFLOW_A;
    *CIA2_TIMER_AB = TIMER_INIT;
    *CIA2_TIMER_B_CONTROL = CIA_TIMER_CONTROL_START | CIA_TIMER_CONTROL_CONTINUOUS | CIA_TIMER_CONTROL_B_COUNT_UNDERFLOW_A;
    *CIA2_TIMER_A_CONTROL = CIA_TIMER_CONTROL_START | CIA_TIMER_CONTROL_CONTINUOUS | CIA_TIMER_CONTROL_A_COUNT_CYCLES;

    // Continously print cycle count since timer start
    while(true) {
        print_dword_at(TIMER_INIT-*CIA2_TIMER_AB, SCREEN);
    }
}
