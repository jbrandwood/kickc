(label) @1
(label) @begin
(label) @end
(const dword*) CIA2_TIMER_AB = (dword*) 56580
(const byte*) CIA2_TIMER_A_CONTROL = (byte*) 56590
(const byte*) CIA2_TIMER_B_CONTROL = (byte*) 56591
(const byte) CIA_TIMER_CONTROL_B_COUNT_UNDERFLOW_A = (number) $40
(const byte) CIA_TIMER_CONTROL_START = (number) 1
(const word) CLOCKS_PER_FRAME = (number) $4cc8
(const dword) CLOCKS_PER_INIT = (number) $12
(const dword) CLOCKS_PER_SEC = (const word) CLOCKS_PER_FRAME*(const byte) FRAMES_PER_SEC
(const word) COUNT = (number) $4000
(const byte*) D018 = (byte*) 53272
(const byte*) DIGITS = (string) "0123456789abcdef"z
(const byte) FRAMES_PER_SEC = (number) $3c
(const byte) RADIX::BINARY = (number) 2
(const byte) RADIX::DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL = (number) 8
(const word*) RADIX_DECIMAL_VALUES = { (word) $2710, (word) $3e8, (word) $64, (word) $a }
(const dword*) RADIX_DECIMAL_VALUES_LONG = { (dword) $3b9aca00, (dword) $5f5e100, (dword) $989680, (dword) $f4240, (dword) $186a0, (dword) $2710, (dword) $3e8, (dword) $64, (dword) $a }
(const byte*) SCREEN = (byte*) 1024
(const byte) SQRT_COUNT = (number) $80
(dword()) clock()
(label) clock::@return
(dword) clock::return
(dword) clock::return#0 return zp[4]:9 1.3333333333333333
(dword) clock::return#2 return zp[4]:9 4.0
(void()) clock_start()
(label) clock_start::@return
(const byte*) decimal_digits = { fill( 6, 0) }
(const byte*) decimal_digits_long = { fill( $b, 0) }
(dword()) div32u16u((dword) div32u16u::dividend , (word) div32u16u::divisor)
(label) div32u16u::@1
(label) div32u16u::@2
(label) div32u16u::@return
(dword) div32u16u::dividend
(dword) div32u16u::dividend#0 dividend zp[4]:9 1.2000000000000002
(word) div32u16u::divisor
(const word) div32u16u::divisor#0 divisor = (word)(const dword) CLOCKS_PER_SEC/(byte) $64
(dword) div32u16u::quotient
(word) div32u16u::quotient_hi
(word) div32u16u::quotient_hi#0 quotient_hi zp[2]:25 0.6666666666666666
(word) div32u16u::quotient_lo
(word) div32u16u::quotient_lo#0 quotient_lo zp[2]:19 4.0
(dword) div32u16u::return
(dword) div32u16u::return#0 return zp[4]:21 1.3333333333333333
(dword) div32u16u::return#2 return zp[4]:21 4.0
(word()) divr16u((word) divr16u::dividend , (word) divr16u::divisor , (word) divr16u::rem)
(byte~) divr16u::$1 reg byte a 22.0
(byte~) divr16u::$2 reg byte a 22.0
(label) divr16u::@1
(label) divr16u::@2
(label) divr16u::@3
(label) divr16u::@4
(label) divr16u::@5
(label) divr16u::@6
(label) divr16u::@return
(word) divr16u::dividend
(word) divr16u::dividend#0 dividend zp[2]:17 2.75
(word) divr16u::dividend#1 dividend zp[2]:17 4.0
(word) divr16u::dividend#2 dividend zp[2]:17 2.0
(word) divr16u::dividend#3 dividend zp[2]:17 5.0
(word) divr16u::dividend#5 dividend zp[2]:17 6.0
(word) divr16u::divisor
(byte) divr16u::i
(byte) divr16u::i#1 reg byte x 16.5
(byte) divr16u::i#2 reg byte x 1.6923076923076923
(word) divr16u::quotient
(word) divr16u::quotient#1 quotient zp[2]:19 16.5
(word) divr16u::quotient#2 quotient zp[2]:19 11.0
(word) divr16u::quotient#3 quotient zp[2]:19 2.75
(word) divr16u::rem
(word) divr16u::rem#0 rem zp[2]:15 8.25
(word) divr16u::rem#1 rem zp[2]:15 22.0
(word) divr16u::rem#10 rem zp[2]:15 4.0
(word) divr16u::rem#11 rem zp[2]:15 11.666666666666666
(word) divr16u::rem#2 rem zp[2]:15 22.0
(word) divr16u::rem#4 rem zp[2]:15 4.0
(word) divr16u::rem#5 rem zp[2]:15 24.0
(word) divr16u::rem#6 rem zp[2]:15 11.0
(word) divr16u::return
(word) divr16u::return#0 return zp[2]:19 5.285714285714286
(word) divr16u::return#2 return zp[2]:19 4.0
(word) divr16u::return#3 return zp[2]:19 4.0
(void()) main()
(dword~) main::$10 zp[4]:9 4.0
(dword~) main::$12 zp[4]:21 2.0
(byte*~) main::$34 zp[2]:19 22.0
(label) main::@1
(label) main::@10
(label) main::@11
(label) main::@12
(label) main::@13
(label) main::@14
(label) main::@15
(label) main::@16
(label) main::@17
(label) main::@18
(label) main::@19
(label) main::@2
(label) main::@20
(label) main::@21
(label) main::@22
(label) main::@23
(label) main::@24
(label) main::@25
(label) main::@26
(label) main::@27
(label) main::@28
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::@8
(label) main::@9
(dword) main::cyclecount
(dword) main::cyclecount#0 cyclecount zp[4]:9 0.5
(word) main::i
(word) main::i#10 i_1 zp[2]:13 5.5
(word) main::i#12 i zp[2]:17 24.6
(word) main::i#2 i zp[2]:17 11.0
(word) main::i#3 i_1 zp[2]:13 22.0
(word) main::j
(word) main::j#0 j zp[2]:2 16.5
(word) main::j#1 j zp[2]:2 202.0
(word) main::j#2 j zp[2]:2 78.5
(byte*) main::s
(byte*) main::s#0 s zp[2]:4 22.0
(byte*) main::s#1 s zp[2]:4 101.0
(byte*) main::s#2 s zp[2]:4 104.66666666666666
(word) main::sec100s
(word) main::sec100s#0 sec100s zp[2]:13 1.3333333333333333
(byte*) main::sieve_i
(byte*) main::sieve_i#1 sieve_i zp[2]:15 22.0
(byte*) main::sieve_i#2 sieve_i zp[2]:15 3.0
(const string) main::str = (string) "Sieve benchmark - calculating primes"
(const string) main::str1 = (string) "between 2 and "
(const string) main::str2 = (string) "100ths seconds used: "
(const string) main::str3 = (string) " cycles: "
(const string) main::str4 = (string) "..."
(label) main::toD0181
(byte*) main::toD0181_gfx
(const byte*) main::toD0181_gfx#0 toD0181_gfx = (byte*) 6144
(byte) main::toD0181_return
(const byte) main::toD0181_return#0 toD0181_return = >(word)(const byte*) SCREEN&(word) $3fff*(byte) 4|>(word)(const byte*) main::toD0181_gfx#0/(byte) 4&(byte) $f
(byte*) main::toD0181_screen
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(label) memset::@1
(label) memset::@2
(label) memset::@3
(label) memset::@return
(byte) memset::c
(byte) memset::c#4 reg byte x 1.375
(byte*) memset::dst
(byte*) memset::dst#1 dst zp[2]:17 22.0
(byte*) memset::dst#2 dst zp[2]:17 15.333333333333332
(byte*) memset::dst#4 dst zp[2]:17 4.0
(byte*) memset::end
(byte*) memset::end#0 end zp[2]:15 2.1666666666666665
(word) memset::num
(word) memset::num#2 num zp[2]:15 2.0
(void*) memset::return
(void*) memset::str
(void*) memset::str#3 str zp[2]:17
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(const byte) print_char::ch#0 ch = (byte) ' '
(byte*) print_char_cursor
(byte*) print_char_cursor#1 print_char_cursor zp[2]:17 101.0
(byte*) print_char_cursor#10 print_char_cursor_1 zp[2]:6 4.333333333333333
(byte*) print_char_cursor#2 print_char_cursor zp[2]:17 10.25
(byte*) print_char_cursor#58 print_char_cursor zp[2]:17 4.25
(byte*) print_char_cursor#62 print_char_cursor_1 zp[2]:6 7.4
(byte*) print_char_cursor#66 print_char_cursor zp[2]:17 14.0
(byte*) print_char_cursor#76 print_char_cursor_1 zp[2]:6 16.5
(byte*) print_char_cursor#86 print_char_cursor zp[2]:17 4.0
(byte*) print_char_cursor#87 print_char_cursor zp[2]:17 4.0
(byte*) print_char_cursor#88 print_char_cursor zp[2]:17 4.0
(byte*) print_char_cursor#94 print_char_cursor zp[2]:17 22.0
(void()) print_cls()
(label) print_cls::@return
(void()) print_dword_decimal((dword) print_dword_decimal::w)
(label) print_dword_decimal::@1
(label) print_dword_decimal::@return
(dword) print_dword_decimal::w
(dword) print_dword_decimal::w#0 w zp[4]:9 4.0
(byte*) print_line_cursor
(byte*) print_line_cursor#1 print_line_cursor zp[2]:6 0.9347826086956521
(byte*) print_line_cursor#11 print_line_cursor zp[2]:6 24.0
(byte*) print_line_cursor#21 print_line_cursor zp[2]:6 6.0
(void()) print_ln()
(label) print_ln::@1
(label) print_ln::@return
(byte*) print_screen
(void()) print_str((byte*) print_str::str)
(label) print_str::@1
(label) print_str::@2
(label) print_str::@return
(byte*) print_str::str
(byte*) print_str::str#0 str zp[2]:15 202.0
(byte*) print_str::str#10 str zp[2]:15 2.0
(byte*) print_str::str#8 str zp[2]:15 101.5
(void()) print_word_decimal((word) print_word_decimal::w)
(label) print_word_decimal::@1
(label) print_word_decimal::@return
(word) print_word_decimal::w
(word) print_word_decimal::w#1 w zp[2]:13 4.0
(word) print_word_decimal::w#2 w zp[2]:13 11.0
(word) print_word_decimal::w#3 w zp[2]:13 15.0
(word) rem16u
(word) rem16u#1 rem16u zp[2]:15 0.6666666666666666
(const byte*) sieve = (byte*) 4096
(void()) ultoa((dword) ultoa::value , (byte*) ultoa::buffer , (byte) ultoa::radix)
(byte~) ultoa::$11 reg byte a 22.0
(byte~) ultoa::$4 reg byte a 4.0
(label) ultoa::@1
(label) ultoa::@2
(label) ultoa::@3
(label) ultoa::@4
(label) ultoa::@5
(label) ultoa::@6
(label) ultoa::@7
(label) ultoa::@return
(byte*) ultoa::buffer
(byte*) ultoa::buffer#11 buffer zp[2]:13 3.4285714285714284
(byte*) ultoa::buffer#14 buffer zp[2]:13 16.5
(byte*) ultoa::buffer#3 buffer zp[2]:13 4.0
(byte*) ultoa::buffer#4 buffer zp[2]:13 22.0
(byte) ultoa::digit
(byte) ultoa::digit#1 digit zp[1]:8 22.0
(byte) ultoa::digit#2 digit zp[1]:8 3.142857142857143
(dword) ultoa::digit_value
(dword) ultoa::digit_value#0 digit_value zp[4]:21 6.6000000000000005
(dword*) ultoa::digit_values
(byte) ultoa::max_digits
(const byte) ultoa::max_digits#1 max_digits = (byte) $a
(byte) ultoa::radix
(byte) ultoa::started
(byte) ultoa::started#2 reg byte x 5.5
(byte) ultoa::started#4 reg byte x 11.0
(dword) ultoa::value
(dword) ultoa::value#0 value zp[4]:9 11.0
(dword) ultoa::value#1 value zp[4]:9 2.0
(dword) ultoa::value#2 value zp[4]:9 6.571428571428571
(dword) ultoa::value#6 value zp[4]:9 16.5
(dword()) ultoa_append((byte*) ultoa_append::buffer , (dword) ultoa_append::value , (dword) ultoa_append::sub)
(label) ultoa_append::@1
(label) ultoa_append::@2
(label) ultoa_append::@3
(label) ultoa_append::@return
(byte*) ultoa_append::buffer
(byte*) ultoa_append::buffer#0 buffer zp[2]:13 1.625
(byte) ultoa_append::digit
(byte) ultoa_append::digit#1 reg byte x 101.0
(byte) ultoa_append::digit#2 reg byte x 102.0
(dword) ultoa_append::return
(dword) ultoa_append::return#0 return zp[4]:9 22.0
(dword) ultoa_append::sub
(dword) ultoa_append::sub#0 sub zp[4]:21 35.5
(dword) ultoa_append::value
(dword) ultoa_append::value#0 value zp[4]:9 4.333333333333333
(dword) ultoa_append::value#1 value zp[4]:9 202.0
(dword) ultoa_append::value#2 value zp[4]:9 52.66666666666666
(void()) utoa((word) utoa::value , (byte*) utoa::buffer , (byte) utoa::radix)
(byte~) utoa::$11 reg byte a 202.0
(byte~) utoa::$4 reg byte a 4.0
(label) utoa::@1
(label) utoa::@2
(label) utoa::@3
(label) utoa::@4
(label) utoa::@5
(label) utoa::@6
(label) utoa::@7
(label) utoa::@return
(byte*) utoa::buffer
(byte*) utoa::buffer#11 buffer zp[2]:4 29.142857142857146
(byte*) utoa::buffer#14 buffer zp[2]:4 151.5
(byte*) utoa::buffer#3 buffer zp[2]:4 4.0
(byte*) utoa::buffer#4 buffer zp[2]:4 202.0
(byte) utoa::digit
(byte) utoa::digit#1 digit zp[1]:8 202.0
(byte) utoa::digit#2 digit zp[1]:8 28.857142857142858
(word) utoa::digit_value
(word) utoa::digit_value#0 digit_value zp[2]:25 60.599999999999994
(word*) utoa::digit_values
(byte) utoa::max_digits
(const byte) utoa::max_digits#1 max_digits = (byte) 5
(byte) utoa::radix
(byte) utoa::started
(byte) utoa::started#2 reg byte x 50.5
(byte) utoa::started#4 reg byte x 101.0
(word) utoa::value
(word) utoa::value#0 value zp[2]:2 101.0
(word) utoa::value#1 value zp[2]:2 2.0
(word) utoa::value#2 value zp[2]:2 58.00000000000001
(word) utoa::value#6 value zp[2]:2 151.5
(word()) utoa_append((byte*) utoa_append::buffer , (word) utoa_append::value , (word) utoa_append::sub)
(label) utoa_append::@1
(label) utoa_append::@2
(label) utoa_append::@3
(label) utoa_append::@return
(byte*) utoa_append::buffer
(byte*) utoa_append::buffer#0 buffer zp[2]:4 12.875
(byte) utoa_append::digit
(byte) utoa_append::digit#1 reg byte x 1001.0
(byte) utoa_append::digit#2 reg byte x 1002.0
(word) utoa_append::return
(word) utoa_append::return#0 return zp[2]:2 202.0
(word) utoa_append::sub
(word) utoa_append::sub#0 sub zp[2]:25 350.5
(word) utoa_append::value
(word) utoa_append::value#0 value zp[2]:2 34.33333333333333
(word) utoa_append::value#1 value zp[2]:2 2002.0
(word) utoa_append::value#2 value zp[2]:2 517.6666666666667

zp[2]:2 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 utoa_append::return#0 main::j#2 main::j#0 main::j#1 ]
reg byte x [ utoa::started#2 utoa::started#4 ]
zp[2]:4 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 main::s#2 main::s#0 main::s#1 ]
reg byte x [ utoa_append::digit#2 utoa_append::digit#1 ]
zp[2]:6 [ print_line_cursor#11 print_line_cursor#21 print_char_cursor#62 print_char_cursor#76 print_line_cursor#1 print_char_cursor#10 ]
zp[1]:8 [ ultoa::digit#2 ultoa::digit#1 utoa::digit#2 utoa::digit#1 ]
zp[4]:9 [ ultoa::value#2 ultoa::value#6 ultoa::value#1 ultoa::value#0 ultoa_append::value#2 ultoa_append::value#0 ultoa_append::value#1 print_dword_decimal::w#0 ultoa_append::return#0 main::cyclecount#0 div32u16u::dividend#0 clock::return#2 main::$10 clock::return#0 ]
reg byte x [ ultoa::started#2 ultoa::started#4 ]
zp[2]:13 [ ultoa::buffer#11 ultoa::buffer#14 ultoa::buffer#4 ultoa::buffer#3 ultoa_append::buffer#0 main::i#10 main::i#3 print_word_decimal::w#3 print_word_decimal::w#2 print_word_decimal::w#1 main::sec100s#0 ]
reg byte x [ ultoa_append::digit#2 ultoa_append::digit#1 ]
reg byte x [ divr16u::i#2 divr16u::i#1 ]
zp[2]:15 [ memset::num#2 memset::end#0 divr16u::rem#5 divr16u::rem#10 divr16u::rem#4 divr16u::rem#11 divr16u::rem#6 divr16u::rem#0 divr16u::rem#1 divr16u::rem#2 rem16u#1 print_str::str#8 print_str::str#10 print_str::str#0 main::sieve_i#2 main::sieve_i#1 ]
zp[2]:17 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 divr16u::dividend#3 divr16u::dividend#5 divr16u::dividend#1 divr16u::dividend#2 divr16u::dividend#0 print_char_cursor#66 print_char_cursor#86 print_char_cursor#87 print_char_cursor#88 print_char_cursor#58 print_char_cursor#94 print_char_cursor#2 print_char_cursor#1 main::i#12 main::i#2 ]
reg byte x [ memset::c#4 ]
zp[2]:19 [ main::$34 divr16u::quotient#3 divr16u::return#0 divr16u::quotient#1 divr16u::quotient#2 divr16u::return#2 divr16u::return#3 div32u16u::quotient_lo#0 ]
reg byte a [ utoa::$4 ]
reg byte a [ utoa::$11 ]
reg byte a [ ultoa::$4 ]
reg byte a [ ultoa::$11 ]
zp[4]:21 [ ultoa::digit_value#0 ultoa_append::sub#0 div32u16u::return#2 main::$12 div32u16u::return#0 ]
zp[2]:25 [ div32u16u::quotient_hi#0 utoa::digit_value#0 utoa_append::sub#0 ]
reg byte a [ divr16u::$1 ]
reg byte a [ divr16u::$2 ]
