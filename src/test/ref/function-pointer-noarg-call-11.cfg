@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] phi()
  [5] call myFunc 
  [6] call myFunc2 
  to:main::@return
main::@return: scope:[main]  from main
  [7] return 
  to:@return

__stackcall (void()) myFunc2()
myFunc2: scope:[myFunc2]  from main
  [8] *((const nomodify byte*) myFunc2::BG_COLOR) ← ++ *((const nomodify byte*) myFunc2::BG_COLOR)
  to:myFunc2::@return
myFunc2::@return: scope:[myFunc2]  from myFunc2
  [9] return 
  to:@return

__stackcall (void()) myFunc()
myFunc: scope:[myFunc]  from
  [10] *((const nomodify byte*) myFunc::BORDER_COLOR) ← ++ *((const nomodify byte*) myFunc::BORDER_COLOR)
  to:myFunc::@return
myFunc::@return: scope:[myFunc]  from myFunc
  [11] return 
  to:@return
