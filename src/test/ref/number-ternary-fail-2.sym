const byte* HEAP_TOP = (byte*) 40960
const byte RADIX::BINARY = 2
const byte RADIX::DECIMAL = $a
const byte RADIX::HEXADECIMAL = $10
const byte RADIX::OCTAL = 8
void SolveMaze(byte* SolveMaze::maze , word SolveMaze::width , word SolveMaze::height)
byte~ SolveMaze::$9 reg byte a 101.0
word SolveMaze::forward
word SolveMaze::forward#3 forward zp[2]:2 101.0
word SolveMaze::height
byte* SolveMaze::maze
word SolveMaze::width
const word SolveMaze::x = 3
const word SolveMaze::y = 2
byte* heap_head
void main()
const word main::height = (word)6*2+3
byte* main::maze
const byte* main::maze#1 maze = (byte*)malloc::return#0
const word main::width = (word)$12*2+3
void* malloc(word malloc::size)
byte* malloc::mem
const byte* malloc::mem#0 mem = HEAP_TOP-malloc::size#0
void* malloc::return
const void* malloc::return#0 return = (void*)malloc::mem#0
word malloc::size
const word malloc::size#0 size = main::width*main::height

zp[2]:2 [ SolveMaze::forward#3 ]
reg byte a [ SolveMaze::$9 ]
