@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] (volatile byte) XSize ← (byte) 0
  [2] (volatile byte) YSize ← (byte) 0
  to:@2
@2: scope:[]  from @1
  [3] phi()
  [4] call main 
  to:@end
@end: scope:[]  from @2
  [5] phi()

(void()) main()
main: scope:[main]  from @2
  [6] *((const nomodify byte*) VIC_MEMORY) ← (byte) $17
  [7] call screensize 
  to:main::@3
main::@3: scope:[main]  from main
  [8] phi()
  [9] call MakeNiceScreen 
  to:main::@1
main::@1: scope:[main]  from main::@3 main::@4
  [10] phi()
  [11] call kbhit 
  [12] (byte) kbhit::return#2 ← (byte) kbhit::return#0
  to:main::@4
main::@4: scope:[main]  from main::@1
  [13] (byte~) main::$3 ← (byte) kbhit::return#2
  [14] if((byte) 0==(byte~) main::$3) goto main::@1
  to:main::@2
main::@2: scope:[main]  from main::@4
  [15] phi()
  [16] call clrscr 
  to:main::@return
main::@return: scope:[main]  from main::@2
  [17] return 
  to:@return

(void()) clrscr()
clrscr: scope:[clrscr]  from MakeNiceScreen::@5 main::@2
  [18] phi()
  to:clrscr::@1
clrscr::@1: scope:[clrscr]  from clrscr clrscr::@4
  [19] (byte*) clrscr::line_cols#5 ← phi( clrscr/(const nomodify byte*) CONIO_SCREEN_COLORS clrscr::@4/(byte*) clrscr::line_cols#1 )
  [19] (byte*) clrscr::line_text#5 ← phi( clrscr/(const nomodify byte*) CONIO_SCREEN_TEXT clrscr::@4/(byte*) clrscr::line_text#1 )
  [19] (byte) clrscr::l#2 ← phi( clrscr/(byte) 0 clrscr::@4/(byte) clrscr::l#1 )
  [20] if((byte) clrscr::l#2<(const nomodify byte) CONIO_HEIGHT) goto clrscr::@2
  to:clrscr::@return
clrscr::@return: scope:[clrscr]  from clrscr::@1
  [21] return 
  to:@return
clrscr::@2: scope:[clrscr]  from clrscr::@1 clrscr::@3
  [22] (byte) clrscr::c#2 ← phi( clrscr::@1/(byte) 0 clrscr::@3/(byte) clrscr::c#1 )
  [23] if((byte) clrscr::c#2<(const nomodify byte) CONIO_WIDTH) goto clrscr::@3
  to:clrscr::@4
clrscr::@4: scope:[clrscr]  from clrscr::@2
  [24] (byte*) clrscr::line_text#1 ← (byte*) clrscr::line_text#5 + (const nomodify byte) CONIO_WIDTH
  [25] (byte*) clrscr::line_cols#1 ← (byte*) clrscr::line_cols#5 + (const nomodify byte) CONIO_WIDTH
  [26] (byte) clrscr::l#1 ← ++ (byte) clrscr::l#2
  to:clrscr::@1
clrscr::@3: scope:[clrscr]  from clrscr::@2
  [27] *((byte*) clrscr::line_text#5 + (byte) clrscr::c#2) ← (byte) ' '
  [28] *((byte*) clrscr::line_cols#5 + (byte) clrscr::c#2) ← (const nomodify byte) COLOR_GRAY3
  [29] (byte) clrscr::c#1 ← ++ (byte) clrscr::c#2
  to:clrscr::@2

(byte()) kbhit()
kbhit: scope:[kbhit]  from main::@1
  [30] *((const nomodify byte*) CONIO_CIA1_PORT_A) ← (byte) 0
  [31] (byte) kbhit::return#0 ← ~ *((const nomodify byte*) CONIO_CIA1_PORT_B)
  to:kbhit::@return
kbhit::@return: scope:[kbhit]  from kbhit
  [32] return 
  to:@return

(void()) MakeNiceScreen()
MakeNiceScreen: scope:[MakeNiceScreen]  from main::@3
  [33] phi()
  [34] call textcolor 
  to:MakeNiceScreen::@3
MakeNiceScreen::@3: scope:[MakeNiceScreen]  from MakeNiceScreen
  [35] phi()
  [36] call bordercolor 
  to:MakeNiceScreen::@4
MakeNiceScreen::@4: scope:[MakeNiceScreen]  from MakeNiceScreen::@3
  [37] phi()
  [38] call bgcolor 
  to:MakeNiceScreen::@5
MakeNiceScreen::@5: scope:[MakeNiceScreen]  from MakeNiceScreen::@4
  [39] phi()
  [40] call clrscr 
  to:MakeNiceScreen::@6
MakeNiceScreen::@6: scope:[MakeNiceScreen]  from MakeNiceScreen::@5
  [41] phi()
  [42] call cursor 
  to:MakeNiceScreen::@7
MakeNiceScreen::@7: scope:[MakeNiceScreen]  from MakeNiceScreen::@6
  [43] phi()
  [44] call cputcxy 
  to:MakeNiceScreen::@8
MakeNiceScreen::@8: scope:[MakeNiceScreen]  from MakeNiceScreen::@7
  [45] (byte) chline::length#1 ← (volatile byte) XSize - (byte) 2
  [46] call chline 
  to:MakeNiceScreen::@9
MakeNiceScreen::@9: scope:[MakeNiceScreen]  from MakeNiceScreen::@8
  [47] phi()
  [48] call cputc 
  to:MakeNiceScreen::@10
MakeNiceScreen::@10: scope:[MakeNiceScreen]  from MakeNiceScreen::@9
  [49] phi()
  [50] call cvlinexy 
  to:MakeNiceScreen::@11
MakeNiceScreen::@11: scope:[MakeNiceScreen]  from MakeNiceScreen::@10
  [51] phi()
  [52] call cputc 
  to:MakeNiceScreen::@12
MakeNiceScreen::@12: scope:[MakeNiceScreen]  from MakeNiceScreen::@11
  [53] (byte) chline::length#2 ← (volatile byte) XSize - (byte) 2
  [54] call chline 
  to:MakeNiceScreen::@13
MakeNiceScreen::@13: scope:[MakeNiceScreen]  from MakeNiceScreen::@12
  [55] phi()
  [56] call cputc 
  to:MakeNiceScreen::@14
MakeNiceScreen::@14: scope:[MakeNiceScreen]  from MakeNiceScreen::@13
  [57] (byte) cvlinexy::x#1 ← (volatile byte) XSize - (byte) 1
  [58] call cvlinexy 
  to:MakeNiceScreen::@15
MakeNiceScreen::@15: scope:[MakeNiceScreen]  from MakeNiceScreen::@14
  [59] phi()
  [60] call MakeTeeLine 
  to:MakeNiceScreen::@16
MakeNiceScreen::@16: scope:[MakeNiceScreen]  from MakeNiceScreen::@15
  [61] phi()
  [62] call MakeTeeLine 
  to:MakeNiceScreen::@1
MakeNiceScreen::@1: scope:[MakeNiceScreen]  from MakeNiceScreen::@16 MakeNiceScreen::@18
  [63] (to_nomodify struct $0*) MakeNiceScreen::T#3 ← phi( MakeNiceScreen::@16/(const struct $0*) MakeNiceScreen::Text MakeNiceScreen::@18/(to_nomodify struct $0*) MakeNiceScreen::T#2 )
  [63] (byte) MakeNiceScreen::I#3 ← phi( MakeNiceScreen::@16/(byte) 0 MakeNiceScreen::@18/(byte) MakeNiceScreen::I#2 )
  [64] if((byte) MakeNiceScreen::I#3<(byte) $c*(byte) $29/(byte) $29) goto MakeNiceScreen::@2
  to:MakeNiceScreen::@return
MakeNiceScreen::@return: scope:[MakeNiceScreen]  from MakeNiceScreen::@1
  [65] return 
  to:@return
MakeNiceScreen::@2: scope:[MakeNiceScreen]  from MakeNiceScreen::@1
  [66] (byte*) strlen::str#1 ← (byte*)(to_nomodify struct $0*) MakeNiceScreen::T#3 + (byte) 1
  [67] call strlen 
  [68] (word) strlen::return#2 ← (word) strlen::len#2
  to:MakeNiceScreen::@17
MakeNiceScreen::@17: scope:[MakeNiceScreen]  from MakeNiceScreen::@2
  [69] (word~) MakeNiceScreen::$21 ← (word) strlen::return#2
  [70] (byte~) MakeNiceScreen::$22 ← (byte)(word~) MakeNiceScreen::$21
  [71] (byte~) MakeNiceScreen::$23 ← (volatile byte) XSize - (byte~) MakeNiceScreen::$22
  [72] (byte) MakeNiceScreen::X#1 ← (byte~) MakeNiceScreen::$23 >> (byte) 1
  [73] (to_nomodify byte*) cputsxy::s#0 ← (byte*)(to_nomodify struct $0*) MakeNiceScreen::T#3 + (byte) 1
  [74] (byte) cputsxy::x#0 ← (byte) MakeNiceScreen::X#1
  [75] (byte) cputsxy::y#0 ← *((byte*)(to_nomodify struct $0*) MakeNiceScreen::T#3)
  [76] call cputsxy 
  to:MakeNiceScreen::@18
MakeNiceScreen::@18: scope:[MakeNiceScreen]  from MakeNiceScreen::@17
  [77] (to_nomodify struct $0*) MakeNiceScreen::T#2 ← (to_nomodify struct $0*) MakeNiceScreen::T#3 + (byte) $29
  [78] (byte) MakeNiceScreen::I#2 ← ++ (byte) MakeNiceScreen::I#3
  to:MakeNiceScreen::@1

(void()) cputsxy((byte) cputsxy::x , (byte) cputsxy::y , (to_nomodify byte*) cputsxy::s)
cputsxy: scope:[cputsxy]  from MakeNiceScreen::@17
  [79] (byte) gotoxy::x#4 ← (byte) cputsxy::x#0
  [80] (byte) gotoxy::y#4 ← (byte) cputsxy::y#0
  [81] call gotoxy 
  to:cputsxy::@1
cputsxy::@1: scope:[cputsxy]  from cputsxy
  [82] (to_nomodify byte*) cputs::s#1 ← (to_nomodify byte*) cputsxy::s#0
  [83] call cputs 
  to:cputsxy::@return
cputsxy::@return: scope:[cputsxy]  from cputsxy::@1
  [84] return 
  to:@return

(void()) cputs((to_nomodify byte*) cputs::s)
cputs: scope:[cputs]  from cputsxy::@1
  [85] phi()
  to:cputs::@1
cputs::@1: scope:[cputs]  from cputs cputs::@2
  [86] (byte*) conio_cursor_color#13 ← phi( cputs/(byte*) conio_cursor_color#3 cputs::@2/(byte*) conio_cursor_color#51 )
  [86] (byte*) conio_cursor_text#13 ← phi( cputs/(byte*) conio_cursor_text#3 cputs::@2/(byte*) conio_cursor_text#51 )
  [86] (byte) conio_cursor_y#13 ← phi( cputs/(byte) conio_cursor_y#3 cputs::@2/(byte) conio_cursor_y#52 )
  [86] (byte) conio_cursor_x#14 ← phi( cputs/(byte) conio_cursor_x#3 cputs::@2/(byte) conio_cursor_x#52 )
  [86] (to_nomodify byte*) cputs::s#2 ← phi( cputs/(to_nomodify byte*) cputs::s#1 cputs::@2/(to_nomodify byte*) cputs::s#0 )
  [87] (byte) cputs::c#1 ← *((to_nomodify byte*) cputs::s#2)
  [88] (to_nomodify byte*) cputs::s#0 ← ++ (to_nomodify byte*) cputs::s#2
  [89] if((byte) 0!=(byte) cputs::c#1) goto cputs::@2
  to:cputs::@return
cputs::@return: scope:[cputs]  from cputs::@1
  [90] return 
  to:@return
cputs::@2: scope:[cputs]  from cputs::@1
  [91] (byte) cputc::c#1 ← (byte) cputs::c#1
  [92] call cputc 
  to:cputs::@1

(void()) cputc((byte) cputc::c)
cputc: scope:[cputc]  from MakeNiceScreen::@11 MakeNiceScreen::@13 MakeNiceScreen::@9 MakeTeeLine::@2 chline::@2 cputcxy::@1 cputs::@2 cvline::@2
  [93] (byte) conio_cursor_x#50 ← phi( MakeNiceScreen::@9/(byte) conio_cursor_x#52 MakeNiceScreen::@11/(byte) conio_cursor_x#3 MakeNiceScreen::@13/(byte) conio_cursor_x#52 MakeTeeLine::@2/(byte) conio_cursor_x#52 chline::@2/(byte) conio_cursor_x#52 cputcxy::@1/(byte) conio_cursor_x#3 cputs::@2/(byte) conio_cursor_x#14 cvline::@2/(byte) conio_cursor_x#3 )
  [93] (byte*) conio_cursor_color#49 ← phi( MakeNiceScreen::@9/(byte*) conio_cursor_color#51 MakeNiceScreen::@11/(byte*) conio_cursor_color#3 MakeNiceScreen::@13/(byte*) conio_cursor_color#51 MakeTeeLine::@2/(byte*) conio_cursor_color#51 chline::@2/(byte*) conio_cursor_color#51 cputcxy::@1/(byte*) conio_cursor_color#3 cputs::@2/(byte*) conio_cursor_color#13 cvline::@2/(byte*) conio_cursor_color#3 )
  [93] (byte*) conio_cursor_text#49 ← phi( MakeNiceScreen::@9/(byte*) conio_cursor_text#51 MakeNiceScreen::@11/(byte*) conio_cursor_text#3 MakeNiceScreen::@13/(byte*) conio_cursor_text#51 MakeTeeLine::@2/(byte*) conio_cursor_text#51 chline::@2/(byte*) conio_cursor_text#51 cputcxy::@1/(byte*) conio_cursor_text#3 cputs::@2/(byte*) conio_cursor_text#13 cvline::@2/(byte*) conio_cursor_text#3 )
  [93] (byte) conio_cursor_y#48 ← phi( MakeNiceScreen::@9/(byte) conio_cursor_y#52 MakeNiceScreen::@11/(byte) conio_cursor_y#3 MakeNiceScreen::@13/(byte) conio_cursor_y#52 MakeTeeLine::@2/(byte) conio_cursor_y#52 chline::@2/(byte) conio_cursor_y#52 cputcxy::@1/(byte) conio_cursor_y#3 cputs::@2/(byte) conio_cursor_y#13 cvline::@2/(byte) conio_cursor_y#3 )
  [93] (byte) cputc::c#8 ← phi( MakeNiceScreen::@9/(const nomodify byte) CH_URCORNER MakeNiceScreen::@11/(const nomodify byte) CH_LLCORNER MakeNiceScreen::@13/(const nomodify byte) CH_LRCORNER MakeTeeLine::@2/(const nomodify byte) CH_RTEE chline::@2/(const nomodify byte) CH_HLINE cputcxy::@1/(byte) cputc::c#0 cputs::@2/(byte) cputc::c#1 cvline::@2/(const nomodify byte) CH_VLINE )
  [94] if((byte) cputc::c#8==(byte) '
') goto cputc::@1
  to:cputc::@2
cputc::@2: scope:[cputc]  from cputc
  [95] *((byte*) conio_cursor_text#49) ← (byte) cputc::c#8
  [96] (byte*) conio_cursor_text#6 ← ++ (byte*) conio_cursor_text#49
  [97] *((byte*) conio_cursor_color#49) ← (const nomodify byte) COLOR_GRAY3
  [98] (byte*) conio_cursor_color#6 ← ++ (byte*) conio_cursor_color#49
  [99] (byte) conio_cursor_x#6 ← ++ (byte) conio_cursor_x#50
  [100] if((byte) conio_cursor_x#6!=(const nomodify byte) CONIO_WIDTH) goto cputc::@return
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc::@2
  [101] (byte) conio_cursor_y#6 ← ++ (byte) conio_cursor_y#48
  [102] if((byte) conio_cursor_y#6!=(const nomodify byte) CONIO_HEIGHT) goto cputc::@return
  to:cputc::@4
cputc::@4: scope:[cputc]  from cputc::@3
  [103] phi()
  [104] call gotoxy 
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@1 cputc::@2 cputc::@3 cputc::@4
  [105] (byte*) conio_cursor_color#51 ← phi( cputc::@4/(byte*) conio_cursor_color#3 cputc::@2/(byte*) conio_cursor_color#6 cputc::@3/(byte*) conio_cursor_color#6 cputc::@1/(byte*) conio_cursor_color#3 )
  [105] (byte*) conio_cursor_text#51 ← phi( cputc::@4/(byte*) conio_cursor_text#3 cputc::@2/(byte*) conio_cursor_text#6 cputc::@3/(byte*) conio_cursor_text#6 cputc::@1/(byte*) conio_cursor_text#3 )
  [105] (byte) conio_cursor_y#52 ← phi( cputc::@4/(byte) conio_cursor_y#3 cputc::@2/(byte) conio_cursor_y#48 cputc::@3/(byte) conio_cursor_y#6 cputc::@1/(byte) conio_cursor_y#3 )
  [105] (byte) conio_cursor_x#52 ← phi( cputc::@4/(byte) conio_cursor_x#3 cputc::@2/(byte) conio_cursor_x#6 cputc::@3/(byte) 0 cputc::@1/(byte) conio_cursor_x#3 )
  [106] return 
  to:@return
cputc::@1: scope:[cputc]  from cputc
  [107] (byte) gotoxy::y#1 ← (byte) conio_cursor_y#48 + (byte) 1
  [108] call gotoxy 
  to:cputc::@return

(void()) gotoxy((byte) gotoxy::x , (byte) gotoxy::y)
gotoxy: scope:[gotoxy]  from cputc::@1 cputc::@4 cputcxy cputsxy cvline::@3 cvlinexy
  [109] (byte) gotoxy::y#10 ← phi( cputc::@1/(byte) gotoxy::y#1 cputc::@4/(byte) 0 cputcxy/(byte) gotoxy::y#3 cputsxy/(byte) gotoxy::y#4 cvline::@3/(byte) gotoxy::y#5 cvlinexy/(byte) 1 )
  [109] (byte) gotoxy::x#7 ← phi( cputc::@1/(byte) 0 cputc::@4/(byte) 0 cputcxy/(byte) 0 cputsxy/(byte) gotoxy::x#4 cvline::@3/(byte) gotoxy::x#5 cvlinexy/(byte) gotoxy::x#6 )
  [110] if((byte) gotoxy::x#7<(const nomodify byte) CONIO_WIDTH) goto gotoxy::@3
  to:gotoxy::@1
gotoxy::@3: scope:[gotoxy]  from gotoxy
  [111] phi()
  to:gotoxy::@1
gotoxy::@1: scope:[gotoxy]  from gotoxy gotoxy::@3
  [112] (byte) gotoxy::x#10 ← phi( gotoxy::@3/(byte) gotoxy::x#7 gotoxy/(byte) 0 )
  [113] if((byte) gotoxy::y#10<(const nomodify byte) CONIO_HEIGHT) goto gotoxy::@4
  to:gotoxy::@2
gotoxy::@4: scope:[gotoxy]  from gotoxy::@1
  [114] phi()
  to:gotoxy::@2
gotoxy::@2: scope:[gotoxy]  from gotoxy::@1 gotoxy::@4
  [115] (byte) gotoxy::y#8 ← phi( gotoxy::@4/(byte) gotoxy::y#10 gotoxy::@1/(byte) 0 )
  [116] (byte) conio_cursor_x#3 ← (byte) gotoxy::x#10
  [117] (byte) conio_cursor_y#3 ← (byte) gotoxy::y#8
  [118] (word~) gotoxy::$4 ← (word)(byte) gotoxy::y#8
  [119] (word~) gotoxy::$9 ← (word~) gotoxy::$4 << (byte) 2
  [120] (word~) gotoxy::$10 ← (word~) gotoxy::$9 + (word~) gotoxy::$4
  [121] (word~) gotoxy::$5 ← (word~) gotoxy::$10 << (byte) 3
  [122] (word) gotoxy::offset#0 ← (word~) gotoxy::$5 + (byte) gotoxy::x#10
  [123] (byte*) conio_cursor_text#3 ← (const nomodify byte*) CONIO_SCREEN_TEXT + (word) gotoxy::offset#0
  [124] (byte*) conio_cursor_color#3 ← (const nomodify byte*) CONIO_SCREEN_COLORS + (word) gotoxy::offset#0
  to:gotoxy::@return
gotoxy::@return: scope:[gotoxy]  from gotoxy::@2
  [125] return 
  to:@return

(word()) strlen((byte*) strlen::str)
strlen: scope:[strlen]  from MakeNiceScreen::@2
  [126] phi()
  to:strlen::@1
strlen::@1: scope:[strlen]  from strlen strlen::@2
  [127] (word) strlen::len#2 ← phi( strlen/(word) 0 strlen::@2/(word) strlen::len#1 )
  [127] (byte*) strlen::str#2 ← phi( strlen/(byte*) strlen::str#1 strlen::@2/(byte*) strlen::str#0 )
  [128] if((byte) 0!=*((byte*) strlen::str#2)) goto strlen::@2
  to:strlen::@return
strlen::@return: scope:[strlen]  from strlen::@1
  [129] return 
  to:@return
strlen::@2: scope:[strlen]  from strlen::@1
  [130] (word) strlen::len#1 ← ++ (word) strlen::len#2
  [131] (byte*) strlen::str#0 ← ++ (byte*) strlen::str#2
  to:strlen::@1

(void()) MakeTeeLine((byte) MakeTeeLine::Y)
MakeTeeLine: scope:[MakeTeeLine]  from MakeNiceScreen::@15 MakeNiceScreen::@16
  [132] (byte) MakeTeeLine::Y#2 ← phi( MakeNiceScreen::@15/(byte) 7 MakeNiceScreen::@16/(byte) $16 )
  [133] (byte) cputcxy::y#0 ← (byte) MakeTeeLine::Y#2
  [134] call cputcxy 
  to:MakeTeeLine::@1
MakeTeeLine::@1: scope:[MakeTeeLine]  from MakeTeeLine
  [135] (byte) chline::length#0 ← (volatile byte) XSize - (byte) 2
  [136] call chline 
  to:MakeTeeLine::@2
MakeTeeLine::@2: scope:[MakeTeeLine]  from MakeTeeLine::@1
  [137] phi()
  [138] call cputc 
  to:MakeTeeLine::@return
MakeTeeLine::@return: scope:[MakeTeeLine]  from MakeTeeLine::@2
  [139] return 
  to:@return

(void()) chline((byte) chline::length)
chline: scope:[chline]  from MakeNiceScreen::@12 MakeNiceScreen::@8 MakeTeeLine::@1
  [140] (byte) chline::length#4 ← phi( MakeNiceScreen::@8/(byte) chline::length#1 MakeNiceScreen::@12/(byte) chline::length#2 MakeTeeLine::@1/(byte) chline::length#0 )
  to:chline::@1
chline::@1: scope:[chline]  from chline chline::@3
  [141] (byte) chline::i#2 ← phi( chline/(byte) 0 chline::@3/(byte) chline::i#1 )
  [142] if((byte) chline::i#2<(byte) chline::length#4) goto chline::@2
  to:chline::@return
chline::@return: scope:[chline]  from chline::@1
  [143] return 
  to:@return
chline::@2: scope:[chline]  from chline::@1
  [144] phi()
  [145] call cputc 
  to:chline::@3
chline::@3: scope:[chline]  from chline::@2
  [146] (byte) chline::i#1 ← ++ (byte) chline::i#2
  to:chline::@1

(void()) cputcxy((byte) cputcxy::x , (byte) cputcxy::y , (byte) cputcxy::c)
cputcxy: scope:[cputcxy]  from MakeNiceScreen::@7 MakeTeeLine
  [147] (byte) cputcxy::c#2 ← phi( MakeNiceScreen::@7/(const nomodify byte) CH_ULCORNER MakeTeeLine/(const nomodify byte) CH_LTEE )
  [147] (byte) cputcxy::y#2 ← phi( MakeNiceScreen::@7/(byte) 0 MakeTeeLine/(byte) cputcxy::y#0 )
  [148] (byte) gotoxy::y#3 ← (byte) cputcxy::y#2
  [149] call gotoxy 
  to:cputcxy::@1
cputcxy::@1: scope:[cputcxy]  from cputcxy
  [150] (byte) cputc::c#0 ← (byte) cputcxy::c#2
  [151] call cputc 
  to:cputcxy::@return
cputcxy::@return: scope:[cputcxy]  from cputcxy::@1
  [152] return 
  to:@return

(void()) cvlinexy((byte) cvlinexy::x , (byte) cvlinexy::y , (byte) cvlinexy::length)
cvlinexy: scope:[cvlinexy]  from MakeNiceScreen::@10 MakeNiceScreen::@14
  [153] (byte) cvlinexy::x#2 ← phi( MakeNiceScreen::@10/(byte) 0 MakeNiceScreen::@14/(byte) cvlinexy::x#1 )
  [154] (byte) gotoxy::x#6 ← (byte) cvlinexy::x#2
  [155] call gotoxy 
  to:cvlinexy::@1
cvlinexy::@1: scope:[cvlinexy]  from cvlinexy
  [156] phi()
  [157] call cvline 
  to:cvlinexy::@return
cvlinexy::@return: scope:[cvlinexy]  from cvlinexy::@1
  [158] return 
  to:@return

(void()) cvline((byte) cvline::length)
cvline: scope:[cvline]  from cvlinexy::@1
  [159] (byte) cvline::x#0 ← (byte) conio_cursor_x#3
  [160] (byte) cvline::y#0 ← (byte) conio_cursor_y#3
  to:cvline::@1
cvline::@1: scope:[cvline]  from cvline cvline::@4
  [161] (byte) cvline::y#2 ← phi( cvline/(byte) cvline::y#0 cvline::@4/(byte) cvline::y#1 )
  [161] (byte) cvline::i#2 ← phi( cvline/(byte) 0 cvline::@4/(byte) cvline::i#1 )
  [162] if((byte) cvline::i#2<(const byte) cvline::length#0) goto cvline::@2
  to:cvline::@return
cvline::@return: scope:[cvline]  from cvline::@1
  [163] return 
  to:@return
cvline::@2: scope:[cvline]  from cvline::@1
  [164] phi()
  [165] call cputc 
  to:cvline::@3
cvline::@3: scope:[cvline]  from cvline::@2
  [166] (byte) cvline::y#1 ← ++ (byte) cvline::y#2
  [167] (byte) gotoxy::x#5 ← (byte) cvline::x#0
  [168] (byte) gotoxy::y#5 ← (byte) cvline::y#1
  [169] call gotoxy 
  to:cvline::@4
cvline::@4: scope:[cvline]  from cvline::@3
  [170] (byte) cvline::i#1 ← ++ (byte) cvline::i#2
  to:cvline::@1

(byte()) cursor((byte) cursor::onoff)
cursor: scope:[cursor]  from MakeNiceScreen::@6
  [171] phi()
  to:cursor::@return
cursor::@return: scope:[cursor]  from cursor
  [172] return 
  to:@return

(byte()) bgcolor((byte) bgcolor::color)
bgcolor: scope:[bgcolor]  from MakeNiceScreen::@4
  [173] *((const nomodify byte*) CONIO_BGCOLOR) ← (const nomodify byte) COLOR_BLACK
  to:bgcolor::@return
bgcolor::@return: scope:[bgcolor]  from bgcolor
  [174] return 
  to:@return

(byte()) bordercolor((byte) bordercolor::color)
bordercolor: scope:[bordercolor]  from MakeNiceScreen::@3
  [175] *((const nomodify byte*) CONIO_BORDERCOLOR) ← (const nomodify byte) COLOR_BLACK
  to:bordercolor::@return
bordercolor::@return: scope:[bordercolor]  from bordercolor
  [176] return 
  to:@return

(byte()) textcolor((byte) textcolor::color)
textcolor: scope:[textcolor]  from MakeNiceScreen
  [177] phi()
  to:textcolor::@return
textcolor::@return: scope:[textcolor]  from textcolor
  [178] return 
  to:@return

(void()) screensize((byte*) screensize::x , (byte*) screensize::y)
screensize: scope:[screensize]  from main
  [179] *((const byte*) screensize::x#0) ← (const nomodify byte) CONIO_WIDTH
  [180] *((const byte*) screensize::y#0) ← (const nomodify byte) CONIO_HEIGHT
  to:screensize::@return
screensize::@return: scope:[screensize]  from screensize
  [181] return 
  to:@return
