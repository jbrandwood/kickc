
(void()) __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] (volatile byte) sinpos ← (byte) 0
  [2] (volatile byte) zoomx ← (byte) 0
  [3] (volatile byte) xpos ← (byte) 7
  [4] (volatile byte) greetnm ← (byte) 0
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  [5] phi()
  [6] call main 
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [7] return 
  to:@return

interrupt(HARDWARE_STACK)(void()) irq1()
irq1: scope:[irq1]  from
  [8] *((byte*)(const nomodify struct MEGA65_VICIV*) VICIV+(const byte) OFFSET_STRUCT_MEGA65_VICIV_RASLINE0) ← *((byte*)(const nomodify struct MEGA65_VICIV*) VICIV+(const byte) OFFSET_STRUCT_MEGA65_VICIV_RASLINE0) | (byte) $80
  [9] *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_IRQ_STATUS) ← (const nomodify byte) IRQ_RASTER
  [10] *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_CONTROL2) ← (byte) 0
  [11] (volatile byte) sinpos ← ++ (volatile byte) sinpos
  [12] (byte) irq1::wobblepos#0 ← (volatile byte) sinpos
  to:irq1::@1
irq1::@1: scope:[irq1]  from irq1 irq1::@9
  [13] (byte) irq1::wobblepos#10 ← phi( irq1/(byte) irq1::wobblepos#0 irq1::@9/(byte) irq1::wobblepos#7 )
  [13] (byte) irq1::line#10 ← phi( irq1/(byte) 0 irq1::@9/(byte) irq1::line#1 )
  [14] if((byte) irq1::line#10!=(const nomodify byte) NUMBERL) goto irq1::@2
  to:irq1::@3
irq1::@3: scope:[irq1]  from irq1::@1
  [15] *((byte*)(const nomodify struct MOS4569_VICIII*) VICIII+(const byte) OFFSET_STRUCT_MOS4569_VICIII_BORDER_COLOR) ← (byte) 1
  [16] *((byte*)(const nomodify struct MOS4569_VICIII*) VICIII+(const byte) OFFSET_STRUCT_MOS4569_VICIII_BG_COLOR) ← (byte) 1
  to:irq1::@16
irq1::@16: scope:[irq1]  from irq1::@17 irq1::@3
  [17] (byte) irq1::l#2 ← phi( irq1::@17/(byte) irq1::l#1 irq1::@3/(byte) 0 )
  [18] if((byte) irq1::l#2!=(const nomodify byte) NUMBERL) goto irq1::@17
  to:irq1::@18
irq1::@18: scope:[irq1]  from irq1::@16
  [19] *((byte*)(const nomodify struct MOS4569_VICIII*) VICIII+(const byte) OFFSET_STRUCT_MOS4569_VICIII_BORDER_COLOR) ← (byte) 1
  [20] *((byte*)(const nomodify struct MOS4569_VICIII*) VICIII+(const byte) OFFSET_STRUCT_MOS4569_VICIII_BG_COLOR) ← (byte) 1
  [21] call *((const void()*) songPlay) 
  [22] *((byte*)(const nomodify struct MOS4569_VICIII*) VICIII+(const byte) OFFSET_STRUCT_MOS4569_VICIII_BORDER_COLOR) ← (byte) 2
  [23] *((byte*)(const nomodify struct MOS4569_VICIII*) VICIII+(const byte) OFFSET_STRUCT_MOS4569_VICIII_BG_COLOR) ← (byte) 2
  to:irq1::@return
irq1::@return: scope:[irq1]  from irq1::@18
  [24] return 
  to:@return
irq1::@17: scope:[irq1]  from irq1::@16
  [25] *((const byte*) rasters + (byte) irq1::l#2) ← (byte) 0
  [26] (byte) irq1::l#1 ← ++ (byte) irq1::l#2
  to:irq1::@16
irq1::@2: scope:[irq1]  from irq1::@1
  [27] (byte) irq1::col#0 ← *((const byte*) rasters + (byte) irq1::line#10)
  [28] *((byte*)(const nomodify struct MOS4569_VICIII*) VICIII+(const byte) OFFSET_STRUCT_MOS4569_VICIII_BORDER_COLOR) ← (byte) irq1::col#0
  [29] *((byte*)(const nomodify struct MOS4569_VICIII*) VICIII+(const byte) OFFSET_STRUCT_MOS4569_VICIII_BG_COLOR) ← (byte) irq1::col#0
  [30] if((byte) irq1::line#10<(const nomodify byte) irq1::scrollypos) goto irq1::@4
  to:irq1::@10
irq1::@10: scope:[irq1]  from irq1::@2
  [31] if((byte) irq1::line#10==(const nomodify byte) irq1::scrollypos) goto irq1::@5
  to:irq1::@11
irq1::@11: scope:[irq1]  from irq1::@10
  [32] if((byte) irq1::line#10==(const nomodify byte) irq1::scrollypos+(const nomodify byte) irq1::blackbar) goto irq1::@6
  to:irq1::@12
irq1::@12: scope:[irq1]  from irq1::@11
  [33] if((byte) irq1::line#10!=(const nomodify byte) irq1::scrollypos+(const nomodify byte) irq1::blackbar+(byte) 1) goto irq1::@7
  to:irq1::@13
irq1::@13: scope:[irq1]  from irq1::@12
  [34] (byte) irq1::zoomval#0 ← *((const byte*) SINUS + (volatile byte) zoomx)
  [35] (volatile byte) zoomx ← ++ (volatile byte) zoomx
  [36] *((byte*)(const nomodify struct MEGA65_VICIV*) VICIV+(const byte) OFFSET_STRUCT_MEGA65_VICIV_CHRXSCL) ← (byte) irq1::zoomval#0
  [37] (byte~) irq1::$7 ← (byte) irq1::zoomval#0 + (byte) 1
  [38] *((byte*)(const nomodify struct MEGA65_VICIV*) VICIV+(const byte) OFFSET_STRUCT_MEGA65_VICIV_TEXTXPOS_LO) ← (byte~) irq1::$7
  [39] if((volatile byte) zoomx!=(byte) 0) goto irq1::@7
  to:irq1::@14
irq1::@14: scope:[irq1]  from irq1::@13
  [40] (volatile byte) greetnm ← ++ (volatile byte) greetnm
  [41] if((volatile byte) greetnm!=(const nomodify byte) GREETCOUNT) goto irq1::@7
  to:irq1::@15
irq1::@15: scope:[irq1]  from irq1::@14
  [42] (volatile byte) greetnm ← (byte) 0
  to:irq1::@7
irq1::@7: scope:[irq1]  from irq1::@12 irq1::@13 irq1::@14 irq1::@15 irq1::@4 irq1::@5 irq1::@6
  [43] (byte) irq1::wobblepos#7 ← phi( irq1::@12/(byte) irq1::wobblepos#10 irq1::@13/(byte) irq1::wobblepos#10 irq1::@14/(byte) irq1::wobblepos#10 irq1::@15/(byte) irq1::wobblepos#10 irq1::@4/(byte) irq1::wobblepos#1 irq1::@5/(byte) irq1::wobblepos#10 irq1::@6/(byte) irq1::wobblepos#10 )
  [44] (byte) irq1::raster#0 ← *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_RASTER)
  to:irq1::@8
irq1::@8: scope:[irq1]  from irq1::@7 irq1::@8
  [45] if((byte) irq1::raster#0==*((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_RASTER)) goto irq1::@8
  to:irq1::@9
irq1::@9: scope:[irq1]  from irq1::@8
  [46] (byte) irq1::line#1 ← ++ (byte) irq1::line#10
  to:irq1::@1
irq1::@6: scope:[irq1]  from irq1::@11
  [47] *((byte*)(const nomodify struct MEGA65_VICIV*) VICIV+(const byte) OFFSET_STRUCT_MEGA65_VICIV_TEXTXPOS_LO) ← (byte) $50
  to:irq1::@7
irq1::@5: scope:[irq1]  from irq1::@10
  [48] *((byte*)(const nomodify struct MEGA65_VICIV*) VICIV+(const byte) OFFSET_STRUCT_MEGA65_VICIV_TEXTXPOS_LO) ← (byte) $50
  [49] *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_CONTROL2) ← (volatile byte) xpos
  to:irq1::@7
irq1::@4: scope:[irq1]  from irq1::@2
  [50] (byte~) irq1::$12 ← (byte) $28 + *((const byte*) SINUS + (byte) irq1::wobblepos#10)
  [51] *((byte*)(const nomodify struct MEGA65_VICIV*) VICIV+(const byte) OFFSET_STRUCT_MEGA65_VICIV_TEXTXPOS_LO) ← (byte~) irq1::$12
  [52] (byte) irq1::wobblepos#1 ← ++ (byte) irq1::wobblepos#10
  [53] *((byte*)(const nomodify struct MEGA65_VICIV*) VICIV+(const byte) OFFSET_STRUCT_MEGA65_VICIV_CHRXSCL) ← (byte) $66
  to:irq1::@7

(void()) main()
main: scope:[main]  from __start::@1
  [54] *((byte*)(const nomodify struct MOS4569_VICIII*) VICIII+(const byte) OFFSET_STRUCT_MOS4569_VICIII_KEY) ← (byte) $47
  [55] *((byte*)(const nomodify struct MOS4569_VICIII*) VICIII+(const byte) OFFSET_STRUCT_MOS4569_VICIII_KEY) ← (byte) $53
  [56] *((byte*)(const nomodify struct MEGA65_VICIV*) VICIV+(const byte) OFFSET_STRUCT_MEGA65_VICIV_CONTROLB) ← *((byte*)(const nomodify struct MEGA65_VICIV*) VICIV+(const byte) OFFSET_STRUCT_MEGA65_VICIV_CONTROLB) | (byte) $40
  [57] *((byte*)(const nomodify struct MEGA65_VICIV*) VICIV+(const byte) OFFSET_STRUCT_MEGA65_VICIV_CONTROLC) ← *((byte*)(const nomodify struct MEGA65_VICIV*) VICIV+(const byte) OFFSET_STRUCT_MEGA65_VICIV_CONTROLC) | (byte) $40
  [58] call memset 
  to:main::@6
main::@6: scope:[main]  from main
  asm { lda#0  }
  [60] call *((const void()*) songInit) 
  to:main::@1
main::@1: scope:[main]  from main::@2 main::@6
  [61] (byte) main::i1#2 ← phi( main::@2/(byte) main::i1#1 main::@6/(byte) 0 )
  [62] if((byte) main::i1#2<(byte) $bc*(const byte) SIZEOF_BYTE) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@1 main::@3
  [63] (byte) main::i#2 ← phi( main::@1/(byte) 0 main::@3/(byte) main::i#1 )
  [64] *((const nomodify byte*) PALETTE_RED + (byte) main::i#2) ← *((const byte*) PAL_RED + (byte) main::i#2)
  [65] *((const nomodify byte*) PALETTE_GREEN + (byte) main::i#2) ← *((const byte*) PAL_GREEN + (byte) main::i#2)
  [66] *((const nomodify byte*) PALETTE_BLUE + (byte) main::i#2) ← *((const byte*) PAL_BLUE + (byte) main::i#2)
  [67] (byte) main::i#1 ← ++ (byte) main::i#2
  [68] if((byte) main::i#1!=(byte) 0) goto main::@3
  to:main::@4
main::@4: scope:[main]  from main::@3
  asm { sei  }
  [70] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_INTERRUPT) ← (const nomodify byte) CIA_INTERRUPT_CLEAR
  [71] *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_RASTER) ← (byte) $16
  [72] *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_CONTROL1) ← *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_CONTROL1) & (byte) $7f
  [73] *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_IRQ_ENABLE) ← (const nomodify byte) IRQ_RASTER
  [74] *((const nomodify void()**) HARDWARE_IRQ) ← &interrupt(HARDWARE_STACK)(void()) irq1()
  [75] *((const nomodify byte*) PROCPORT_DDR) ← (const nomodify byte) PROCPORT_DDR_MEMORY_MASK
  [76] *((const nomodify byte*) PROCPORT) ← (const nomodify byte) PROCPORT_RAM_IO
  [77] *((byte*)(const nomodify struct MEGA65_VICIV*) VICIV+(const byte) OFFSET_STRUCT_MEGA65_VICIV_SIDBDRWD_LO) ← (byte) 1
  asm { cli  }
  to:main::@5
main::@5: scope:[main]  from main::@4 main::@5
  [79] phi()
  to:main::@5
main::@2: scope:[main]  from main::@1
  [80] *((const nomodify byte*) SCREEN+(byte)(number) 3*(number) $28 + (byte) main::i1#2) ← *((const byte*) MEGA_LOGO + (byte) main::i1#2)
  [81] (byte) main::i1#1 ← ++ (byte) main::i1#2
  to:main::@1

(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
memset: scope:[memset]  from main
  [82] phi()
  to:memset::@1
memset::@1: scope:[memset]  from memset memset::@2
  [83] (byte*) memset::dst#2 ← phi( memset/(byte*)(const void*) memset::str#0 memset::@2/(byte*) memset::dst#1 )
  [84] if((byte*) memset::dst#2!=(const byte*) memset::end#0) goto memset::@2
  to:memset::@return
memset::@return: scope:[memset]  from memset::@1
  [85] return 
  to:@return
memset::@2: scope:[memset]  from memset::@1
  [86] *((byte*) memset::dst#2) ← (const byte) memset::c#0
  [87] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2
  to:memset::@1
