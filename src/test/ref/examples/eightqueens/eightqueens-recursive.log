Fixing struct type size struct printf_buffer_number to 12
Fixing struct type size struct printf_buffer_number to 12
Fixing struct type size struct printf_buffer_number to 12
Fixing struct type SIZE_OF struct printf_buffer_number to 12
Fixing struct type SIZE_OF struct printf_buffer_number to 12
Setting inferred volatile on symbol affected by address-of: queen::column in asm { ldacolumn pha ldar pha  }
Setting inferred volatile on symbol affected by address-of: queen::r in asm { ldacolumn pha ldar pha  }
Converting variable modified inside __stackcall procedure queen() to load/store count
Adding parameter assignment in __stackcall procedure queen::row = param(queen::row)
Added struct type cast to parameter value list call printf_uint 8 (struct printf_format_number){ 0, 0, 0, 0, 0, DECIMAL } 
Added struct type cast to parameter value list call printf_ulong count (struct printf_format_number){ 0, 0, 0, 0, 0, DECIMAL } 
Added struct type cast to parameter value list call printf_ulong count (struct printf_format_number){ 0, 0, 0, 0, 0, DECIMAL } 
Added struct type cast to parameter value list call printf_uchar print::i (struct printf_format_number){ 0, 0, 0, 0, 0, HEXADECIMAL } 
Added struct type cast to parameter value list call printf_uchar print::i1 (struct printf_format_number){ 0, 0, 0, 0, 0, HEXADECIMAL } 
Inlined call vicSelectGfxBank::$0 = call toDd00 vicSelectGfxBank::gfx 
Inlined call call __init 
Eliminating unused variable with no statement main::$1
Eliminating unused variable with no statement main::$2
Eliminating unused variable with no statement main::$4
Eliminating unused variable with no statement print::$1
Eliminating unused variable with no statement print::$3
Eliminating unused variable with no statement print::$5
Eliminating unused variable with no statement print::$8
Eliminating unused variable with no statement print::$9
Calling convention __stackcall adding prepare/execute/finalize for call queen 1 
Calling convention __stackcall adding prepare/execute/finalize for call queen queen::$4 
Calling convention STACK_CALL replacing param(queen::row) with stackidx(byte,queen::OFFSET_STACK_ROW)
Calling convention STACK_CALL adding stack push stackpush(byte) = 1
Calling convention STACK_CALL adding stack push stackpush(byte) = queen::$4

CONTROL FLOW GRAPH SSA

void* memcpy(void* memcpy::destination , void* memcpy::source , word memcpy::num)
memcpy: scope:[memcpy]  from cscroll::@3 cscroll::@4
  memcpy::num#2 = phi( cscroll::@3/memcpy::num#0, cscroll::@4/memcpy::num#1 )
  memcpy::destination#2 = phi( cscroll::@3/memcpy::destination#0, cscroll::@4/memcpy::destination#1 )
  memcpy::source#2 = phi( cscroll::@3/memcpy::source#0, cscroll::@4/memcpy::source#1 )
  memcpy::src#0 = ((byte*)) memcpy::source#2
  memcpy::dst#0 = ((byte*)) memcpy::destination#2
  memcpy::$2 = (byte*)memcpy::source#2
  memcpy::$0 = memcpy::$2 + memcpy::num#2
  memcpy::src_end#0 = memcpy::$0
  to:memcpy::@1
memcpy::@1: scope:[memcpy]  from memcpy memcpy::@2
  memcpy::destination#4 = phi( memcpy/memcpy::destination#2, memcpy::@2/memcpy::destination#5 )
  memcpy::dst#3 = phi( memcpy/memcpy::dst#0, memcpy::@2/memcpy::dst#1 )
  memcpy::src_end#1 = phi( memcpy/memcpy::src_end#0, memcpy::@2/memcpy::src_end#2 )
  memcpy::src#2 = phi( memcpy/memcpy::src#0, memcpy::@2/memcpy::src#1 )
  memcpy::$1 = memcpy::src#2 != memcpy::src_end#1
  if(memcpy::$1) goto memcpy::@2
  to:memcpy::@3
memcpy::@2: scope:[memcpy]  from memcpy::@1
  memcpy::destination#5 = phi( memcpy::@1/memcpy::destination#4 )
  memcpy::src_end#2 = phi( memcpy::@1/memcpy::src_end#1 )
  memcpy::dst#2 = phi( memcpy::@1/memcpy::dst#3 )
  memcpy::src#3 = phi( memcpy::@1/memcpy::src#2 )
  *memcpy::dst#2 = *memcpy::src#3
  memcpy::dst#1 = ++ memcpy::dst#2
  memcpy::src#1 = ++ memcpy::src#3
  to:memcpy::@1
memcpy::@3: scope:[memcpy]  from memcpy::@1
  memcpy::destination#3 = phi( memcpy::@1/memcpy::destination#4 )
  memcpy::return#0 = memcpy::destination#3
  to:memcpy::@return
memcpy::@return: scope:[memcpy]  from memcpy::@3
  memcpy::return#4 = phi( memcpy::@3/memcpy::return#0 )
  memcpy::return#1 = memcpy::return#4
  return 
  to:@return

void* memset(void* memset::str , byte memset::c , word memset::num)
memset: scope:[memset]  from cscroll::@5 cscroll::@6
  memset::c#5 = phi( cscroll::@5/memset::c#0, cscroll::@6/memset::c#1 )
  memset::str#4 = phi( cscroll::@5/memset::str#0, cscroll::@6/memset::str#1 )
  memset::num#2 = phi( cscroll::@5/memset::num#0, cscroll::@6/memset::num#1 )
  memset::$0 = memset::num#2 > 0
  memset::$1 = ! memset::$0
  if(memset::$1) goto memset::@1
  to:memset::@2
memset::@1: scope:[memset]  from memset memset::@3
  memset::str#2 = phi( memset/memset::str#4, memset::@3/memset::str#5 )
  memset::return#0 = memset::str#2
  to:memset::@return
memset::@2: scope:[memset]  from memset
  memset::c#4 = phi( memset/memset::c#5 )
  memset::num#3 = phi( memset/memset::num#2 )
  memset::str#3 = phi( memset/memset::str#4 )
  memset::$4 = (byte*)memset::str#3
  memset::$2 = memset::$4 + memset::num#3
  memset::end#0 = memset::$2
  memset::dst#0 = ((byte*)) memset::str#3
  to:memset::@3
memset::@3: scope:[memset]  from memset::@2 memset::@4
  memset::c#3 = phi( memset::@2/memset::c#4, memset::@4/memset::c#2 )
  memset::str#5 = phi( memset::@2/memset::str#3, memset::@4/memset::str#6 )
  memset::end#1 = phi( memset::@2/memset::end#0, memset::@4/memset::end#2 )
  memset::dst#2 = phi( memset::@2/memset::dst#0, memset::@4/memset::dst#1 )
  memset::$3 = memset::dst#2 != memset::end#1
  if(memset::$3) goto memset::@4
  to:memset::@1
memset::@4: scope:[memset]  from memset::@3
  memset::str#6 = phi( memset::@3/memset::str#5 )
  memset::end#2 = phi( memset::@3/memset::end#1 )
  memset::dst#3 = phi( memset::@3/memset::dst#2 )
  memset::c#2 = phi( memset::@3/memset::c#3 )
  *memset::dst#3 = memset::c#2
  memset::dst#1 = ++ memset::dst#3
  to:memset::@3
memset::@return: scope:[memset]  from memset::@1
  memset::return#4 = phi( memset::@1/memset::return#0 )
  memset::return#1 = memset::return#4
  return 
  to:@return

word strlen(byte* strlen::str)
strlen: scope:[strlen]  from printf_number_buffer::@6
  strlen::str#4 = phi( printf_number_buffer::@6/strlen::str#1 )
  strlen::len#0 = 0
  to:strlen::@1
strlen::@1: scope:[strlen]  from strlen strlen::@2
  strlen::len#4 = phi( strlen/strlen::len#0, strlen::@2/strlen::len#1 )
  strlen::str#2 = phi( strlen/strlen::str#4, strlen::@2/strlen::str#0 )
  strlen::$0 = 0 != *strlen::str#2
  if(strlen::$0) goto strlen::@2
  to:strlen::@3
strlen::@2: scope:[strlen]  from strlen::@1
  strlen::str#3 = phi( strlen::@1/strlen::str#2 )
  strlen::len#2 = phi( strlen::@1/strlen::len#4 )
  strlen::len#1 = ++ strlen::len#2
  strlen::str#0 = ++ strlen::str#3
  to:strlen::@1
strlen::@3: scope:[strlen]  from strlen::@1
  strlen::len#3 = phi( strlen::@1/strlen::len#4 )
  strlen::return#0 = strlen::len#3
  to:strlen::@return
strlen::@return: scope:[strlen]  from strlen::@3
  strlen::return#3 = phi( strlen::@3/strlen::return#0 )
  strlen::return#1 = strlen::return#3
  return 
  to:@return

byte toupper(byte toupper::ch)
toupper: scope:[toupper]  from strupr::@2
  toupper::ch#1 = phi( strupr::@2/toupper::ch#0 )
  toupper::$0 = toupper::ch#1 >= 'a'
  toupper::$1 = toupper::ch#1 <= 'z'
  toupper::$2 = toupper::$0 && toupper::$1
  if(toupper::$2) goto toupper::@1
  to:toupper::@2
toupper::@1: scope:[toupper]  from toupper
  toupper::ch#2 = phi( toupper/toupper::ch#1 )
  toupper::$3 = toupper::ch#2 + 'A'-'a'
  toupper::return#0 = toupper::$3
  to:toupper::@return
toupper::@2: scope:[toupper]  from toupper
  toupper::ch#3 = phi( toupper/toupper::ch#1 )
  toupper::return#1 = toupper::ch#3
  to:toupper::@return
toupper::@return: scope:[toupper]  from toupper::@1 toupper::@2
  toupper::return#4 = phi( toupper::@1/toupper::return#0, toupper::@2/toupper::return#1 )
  toupper::return#2 = toupper::return#4
  return 
  to:@return

byte* strupr(byte* strupr::str)
strupr: scope:[strupr]  from printf_number_buffer::@11
  strupr::str#1 = phi( printf_number_buffer::@11/strupr::str#0 )
  strupr::src#0 = strupr::str#1
  to:strupr::@1
strupr::@1: scope:[strupr]  from strupr strupr::@4
  strupr::str#3 = phi( strupr/strupr::str#1, strupr::@4/strupr::str#4 )
  strupr::src#2 = phi( strupr/strupr::src#0, strupr::@4/strupr::src#1 )
  strupr::$1 = 0 != *strupr::src#2
  if(strupr::$1) goto strupr::@2
  to:strupr::@3
strupr::@2: scope:[strupr]  from strupr::@1
  strupr::str#5 = phi( strupr::@1/strupr::str#3 )
  strupr::src#3 = phi( strupr::@1/strupr::src#2 )
  toupper::ch#0 = *strupr::src#3
  call toupper 
  toupper::return#3 = toupper::return#2
  to:strupr::@4
strupr::@4: scope:[strupr]  from strupr::@2
  strupr::str#4 = phi( strupr::@2/strupr::str#5 )
  strupr::src#4 = phi( strupr::@2/strupr::src#3 )
  toupper::return#5 = phi( strupr::@2/toupper::return#3 )
  strupr::$0 = toupper::return#5
  *strupr::src#4 = strupr::$0
  strupr::src#1 = ++ strupr::src#4
  to:strupr::@1
strupr::@3: scope:[strupr]  from strupr::@1
  strupr::str#2 = phi( strupr::@1/strupr::str#3 )
  strupr::return#0 = strupr::str#2
  to:strupr::@return
strupr::@return: scope:[strupr]  from strupr::@3
  strupr::return#3 = phi( strupr::@3/strupr::return#0 )
  strupr::return#1 = strupr::return#3
  return 
  to:@return

void utoa(word utoa::value , byte* utoa::buffer , byte utoa::radix)
utoa: scope:[utoa]  from printf_uint::@3
  utoa::buffer#21 = phi( printf_uint::@3/utoa::buffer#5 )
  utoa::value#12 = phi( printf_uint::@3/utoa::value#1 )
  utoa::radix#1 = phi( printf_uint::@3/utoa::radix#0 )
  utoa::max_digits#0 = 0
  utoa::digit_values#0 = (word*) 0
  utoa::$0 = utoa::radix#1 == DECIMAL
  if(utoa::$0) goto utoa::@1
  to:utoa::@6
utoa::@1: scope:[utoa]  from utoa
  utoa::buffer#17 = phi( utoa/utoa::buffer#21 )
  utoa::value#8 = phi( utoa/utoa::value#12 )
  utoa::max_digits#1 = 5
  utoa::digit_values#1 = RADIX_DECIMAL_VALUES
  to:utoa::@5
utoa::@6: scope:[utoa]  from utoa
  utoa::value#13 = phi( utoa/utoa::value#12 )
  utoa::buffer#16 = phi( utoa/utoa::buffer#21 )
  utoa::radix#2 = phi( utoa/utoa::radix#1 )
  utoa::$1 = utoa::radix#2 == HEXADECIMAL
  if(utoa::$1) goto utoa::@2
  to:utoa::@7
utoa::@2: scope:[utoa]  from utoa::@6
  utoa::buffer#18 = phi( utoa::@6/utoa::buffer#16 )
  utoa::value#9 = phi( utoa::@6/utoa::value#13 )
  utoa::max_digits#2 = 4
  utoa::digit_values#2 = RADIX_HEXADECIMAL_VALUES
  to:utoa::@5
utoa::@7: scope:[utoa]  from utoa::@6
  utoa::value#14 = phi( utoa::@6/utoa::value#13 )
  utoa::buffer#13 = phi( utoa::@6/utoa::buffer#16 )
  utoa::radix#3 = phi( utoa::@6/utoa::radix#2 )
  utoa::$2 = utoa::radix#3 == OCTAL
  if(utoa::$2) goto utoa::@3
  to:utoa::@8
utoa::@3: scope:[utoa]  from utoa::@7
  utoa::buffer#19 = phi( utoa::@7/utoa::buffer#13 )
  utoa::value#10 = phi( utoa::@7/utoa::value#14 )
  utoa::max_digits#3 = 6
  utoa::digit_values#3 = RADIX_OCTAL_VALUES
  to:utoa::@5
utoa::@8: scope:[utoa]  from utoa::@7
  utoa::value#15 = phi( utoa::@7/utoa::value#14 )
  utoa::buffer#10 = phi( utoa::@7/utoa::buffer#13 )
  utoa::radix#4 = phi( utoa::@7/utoa::radix#3 )
  utoa::$3 = utoa::radix#4 == BINARY
  if(utoa::$3) goto utoa::@4
  to:utoa::@9
utoa::@4: scope:[utoa]  from utoa::@8
  utoa::buffer#20 = phi( utoa::@8/utoa::buffer#10 )
  utoa::value#11 = phi( utoa::@8/utoa::value#15 )
  utoa::max_digits#4 = $10
  utoa::digit_values#4 = RADIX_BINARY_VALUES
  to:utoa::@5
utoa::@9: scope:[utoa]  from utoa::@8
  utoa::buffer#6 = phi( utoa::@8/utoa::buffer#10 )
  *utoa::buffer#6 = 'e'
  utoa::buffer#0 = ++ utoa::buffer#6
  *utoa::buffer#0 = 'r'
  utoa::buffer#1 = ++ utoa::buffer#0
  *utoa::buffer#1 = 'r'
  utoa::buffer#2 = ++ utoa::buffer#1
  *utoa::buffer#2 = 0
  to:utoa::@return
utoa::@return: scope:[utoa]  from utoa::@12 utoa::@9
  return 
  to:@return
utoa::@5: scope:[utoa]  from utoa::@1 utoa::@2 utoa::@3 utoa::@4
  utoa::buffer#15 = phi( utoa::@1/utoa::buffer#17, utoa::@2/utoa::buffer#18, utoa::@3/utoa::buffer#19, utoa::@4/utoa::buffer#20 )
  utoa::value#7 = phi( utoa::@1/utoa::value#8, utoa::@2/utoa::value#9, utoa::@3/utoa::value#10, utoa::@4/utoa::value#11 )
  utoa::digit_values#8 = phi( utoa::@1/utoa::digit_values#1, utoa::@2/utoa::digit_values#2, utoa::@3/utoa::digit_values#3, utoa::@4/utoa::digit_values#4 )
  utoa::max_digits#7 = phi( utoa::@1/utoa::max_digits#1, utoa::@2/utoa::max_digits#2, utoa::@3/utoa::max_digits#3, utoa::@4/utoa::max_digits#4 )
  utoa::started#0 = 0
  utoa::digit#0 = 0
  to:utoa::@10
utoa::@10: scope:[utoa]  from utoa::@13 utoa::@5
  utoa::buffer#11 = phi( utoa::@13/utoa::buffer#14, utoa::@5/utoa::buffer#15 )
  utoa::started#3 = phi( utoa::@13/utoa::started#4, utoa::@5/utoa::started#0 )
  utoa::value#5 = phi( utoa::@13/utoa::value#6, utoa::@5/utoa::value#7 )
  utoa::digit_values#6 = phi( utoa::@13/utoa::digit_values#7, utoa::@5/utoa::digit_values#8 )
  utoa::digit#2 = phi( utoa::@13/utoa::digit#1, utoa::@5/utoa::digit#0 )
  utoa::max_digits#5 = phi( utoa::@13/utoa::max_digits#6, utoa::@5/utoa::max_digits#7 )
  utoa::$4 = utoa::max_digits#5 - 1
  utoa::$5 = utoa::digit#2 < utoa::$4
  if(utoa::$5) goto utoa::@11
  to:utoa::@12
utoa::@11: scope:[utoa]  from utoa::@10
  utoa::max_digits#8 = phi( utoa::@10/utoa::max_digits#5 )
  utoa::buffer#12 = phi( utoa::@10/utoa::buffer#11 )
  utoa::started#2 = phi( utoa::@10/utoa::started#3 )
  utoa::value#2 = phi( utoa::@10/utoa::value#5 )
  utoa::digit_values#5 = phi( utoa::@10/utoa::digit_values#6 )
  utoa::digit#3 = phi( utoa::@10/utoa::digit#2 )
  utoa::$10 = utoa::digit#3 * SIZEOF_WORD
  utoa::digit_value#0 = utoa::digit_values#5[utoa::$10]
  utoa::$6 = utoa::value#2 >= utoa::digit_value#0
  utoa::$7 = utoa::started#2 || utoa::$6
  utoa::$8 = ! utoa::$7
  if(utoa::$8) goto utoa::@13
  to:utoa::@14
utoa::@12: scope:[utoa]  from utoa::@10
  utoa::buffer#7 = phi( utoa::@10/utoa::buffer#11 )
  utoa::value#3 = phi( utoa::@10/utoa::value#5 )
  utoa::$11 = (byte)utoa::value#3
  *utoa::buffer#7 = DIGITS[utoa::$11]
  utoa::buffer#3 = ++ utoa::buffer#7
  *utoa::buffer#3 = 0
  to:utoa::@return
utoa::@13: scope:[utoa]  from utoa::@11 utoa::@15
  utoa::buffer#14 = phi( utoa::@11/utoa::buffer#12, utoa::@15/utoa::buffer#4 )
  utoa::started#4 = phi( utoa::@11/utoa::started#2, utoa::@15/utoa::started#1 )
  utoa::value#6 = phi( utoa::@11/utoa::value#2, utoa::@15/utoa::value#0 )
  utoa::digit_values#7 = phi( utoa::@11/utoa::digit_values#5, utoa::@15/utoa::digit_values#9 )
  utoa::max_digits#6 = phi( utoa::@11/utoa::max_digits#8, utoa::@15/utoa::max_digits#9 )
  utoa::digit#4 = phi( utoa::@11/utoa::digit#3, utoa::@15/utoa::digit#5 )
  utoa::digit#1 = ++ utoa::digit#4
  to:utoa::@10
utoa::@14: scope:[utoa]  from utoa::@11
  utoa::digit_values#10 = phi( utoa::@11/utoa::digit_values#5 )
  utoa::max_digits#10 = phi( utoa::@11/utoa::max_digits#8 )
  utoa::digit#6 = phi( utoa::@11/utoa::digit#3 )
  utoa::digit_value#1 = phi( utoa::@11/utoa::digit_value#0 )
  utoa::value#4 = phi( utoa::@11/utoa::value#2 )
  utoa::buffer#8 = phi( utoa::@11/utoa::buffer#12 )
  utoa_append::buffer#0 = utoa::buffer#8
  utoa_append::value#0 = utoa::value#4
  utoa_append::sub#0 = utoa::digit_value#1
  call utoa_append 
  utoa_append::return#0 = utoa_append::return#2
  to:utoa::@15
utoa::@15: scope:[utoa]  from utoa::@14
  utoa::digit_values#9 = phi( utoa::@14/utoa::digit_values#10 )
  utoa::max_digits#9 = phi( utoa::@14/utoa::max_digits#10 )
  utoa::digit#5 = phi( utoa::@14/utoa::digit#6 )
  utoa::buffer#9 = phi( utoa::@14/utoa::buffer#8 )
  utoa_append::return#3 = phi( utoa::@14/utoa_append::return#0 )
  utoa::$9 = utoa_append::return#3
  utoa::value#0 = utoa::$9
  utoa::buffer#4 = ++ utoa::buffer#9
  utoa::started#1 = 1
  to:utoa::@13

void ultoa(dword ultoa::value , byte* ultoa::buffer , byte ultoa::radix)
ultoa: scope:[ultoa]  from printf_ulong::@3
  ultoa::buffer#21 = phi( printf_ulong::@3/ultoa::buffer#5 )
  ultoa::value#12 = phi( printf_ulong::@3/ultoa::value#1 )
  ultoa::radix#1 = phi( printf_ulong::@3/ultoa::radix#0 )
  ultoa::max_digits#0 = 0
  ultoa::digit_values#0 = (dword*) 0
  ultoa::$0 = ultoa::radix#1 == DECIMAL
  if(ultoa::$0) goto ultoa::@1
  to:ultoa::@6
ultoa::@1: scope:[ultoa]  from ultoa
  ultoa::buffer#17 = phi( ultoa/ultoa::buffer#21 )
  ultoa::value#8 = phi( ultoa/ultoa::value#12 )
  ultoa::max_digits#1 = $a
  ultoa::digit_values#1 = RADIX_DECIMAL_VALUES_LONG
  to:ultoa::@5
ultoa::@6: scope:[ultoa]  from ultoa
  ultoa::value#13 = phi( ultoa/ultoa::value#12 )
  ultoa::buffer#16 = phi( ultoa/ultoa::buffer#21 )
  ultoa::radix#2 = phi( ultoa/ultoa::radix#1 )
  ultoa::$1 = ultoa::radix#2 == HEXADECIMAL
  if(ultoa::$1) goto ultoa::@2
  to:ultoa::@7
ultoa::@2: scope:[ultoa]  from ultoa::@6
  ultoa::buffer#18 = phi( ultoa::@6/ultoa::buffer#16 )
  ultoa::value#9 = phi( ultoa::@6/ultoa::value#13 )
  ultoa::max_digits#2 = 8
  ultoa::digit_values#2 = RADIX_HEXADECIMAL_VALUES_LONG
  to:ultoa::@5
ultoa::@7: scope:[ultoa]  from ultoa::@6
  ultoa::value#14 = phi( ultoa::@6/ultoa::value#13 )
  ultoa::buffer#13 = phi( ultoa::@6/ultoa::buffer#16 )
  ultoa::radix#3 = phi( ultoa::@6/ultoa::radix#2 )
  ultoa::$2 = ultoa::radix#3 == OCTAL
  if(ultoa::$2) goto ultoa::@3
  to:ultoa::@8
ultoa::@3: scope:[ultoa]  from ultoa::@7
  ultoa::buffer#19 = phi( ultoa::@7/ultoa::buffer#13 )
  ultoa::value#10 = phi( ultoa::@7/ultoa::value#14 )
  ultoa::max_digits#3 = $b
  ultoa::digit_values#3 = RADIX_OCTAL_VALUES_LONG
  to:ultoa::@5
ultoa::@8: scope:[ultoa]  from ultoa::@7
  ultoa::value#15 = phi( ultoa::@7/ultoa::value#14 )
  ultoa::buffer#10 = phi( ultoa::@7/ultoa::buffer#13 )
  ultoa::radix#4 = phi( ultoa::@7/ultoa::radix#3 )
  ultoa::$3 = ultoa::radix#4 == BINARY
  if(ultoa::$3) goto ultoa::@4
  to:ultoa::@9
ultoa::@4: scope:[ultoa]  from ultoa::@8
  ultoa::buffer#20 = phi( ultoa::@8/ultoa::buffer#10 )
  ultoa::value#11 = phi( ultoa::@8/ultoa::value#15 )
  ultoa::max_digits#4 = $20
  ultoa::digit_values#4 = RADIX_BINARY_VALUES_LONG
  to:ultoa::@5
ultoa::@9: scope:[ultoa]  from ultoa::@8
  ultoa::buffer#6 = phi( ultoa::@8/ultoa::buffer#10 )
  *ultoa::buffer#6 = 'e'
  ultoa::buffer#0 = ++ ultoa::buffer#6
  *ultoa::buffer#0 = 'r'
  ultoa::buffer#1 = ++ ultoa::buffer#0
  *ultoa::buffer#1 = 'r'
  ultoa::buffer#2 = ++ ultoa::buffer#1
  *ultoa::buffer#2 = 0
  to:ultoa::@return
ultoa::@return: scope:[ultoa]  from ultoa::@12 ultoa::@9
  return 
  to:@return
ultoa::@5: scope:[ultoa]  from ultoa::@1 ultoa::@2 ultoa::@3 ultoa::@4
  ultoa::buffer#15 = phi( ultoa::@1/ultoa::buffer#17, ultoa::@2/ultoa::buffer#18, ultoa::@3/ultoa::buffer#19, ultoa::@4/ultoa::buffer#20 )
  ultoa::value#7 = phi( ultoa::@1/ultoa::value#8, ultoa::@2/ultoa::value#9, ultoa::@3/ultoa::value#10, ultoa::@4/ultoa::value#11 )
  ultoa::digit_values#8 = phi( ultoa::@1/ultoa::digit_values#1, ultoa::@2/ultoa::digit_values#2, ultoa::@3/ultoa::digit_values#3, ultoa::@4/ultoa::digit_values#4 )
  ultoa::max_digits#7 = phi( ultoa::@1/ultoa::max_digits#1, ultoa::@2/ultoa::max_digits#2, ultoa::@3/ultoa::max_digits#3, ultoa::@4/ultoa::max_digits#4 )
  ultoa::started#0 = 0
  ultoa::digit#0 = 0
  to:ultoa::@10
ultoa::@10: scope:[ultoa]  from ultoa::@13 ultoa::@5
  ultoa::buffer#11 = phi( ultoa::@13/ultoa::buffer#14, ultoa::@5/ultoa::buffer#15 )
  ultoa::started#3 = phi( ultoa::@13/ultoa::started#4, ultoa::@5/ultoa::started#0 )
  ultoa::value#5 = phi( ultoa::@13/ultoa::value#6, ultoa::@5/ultoa::value#7 )
  ultoa::digit_values#6 = phi( ultoa::@13/ultoa::digit_values#7, ultoa::@5/ultoa::digit_values#8 )
  ultoa::digit#2 = phi( ultoa::@13/ultoa::digit#1, ultoa::@5/ultoa::digit#0 )
  ultoa::max_digits#5 = phi( ultoa::@13/ultoa::max_digits#6, ultoa::@5/ultoa::max_digits#7 )
  ultoa::$4 = ultoa::max_digits#5 - 1
  ultoa::$5 = ultoa::digit#2 < ultoa::$4
  if(ultoa::$5) goto ultoa::@11
  to:ultoa::@12
ultoa::@11: scope:[ultoa]  from ultoa::@10
  ultoa::max_digits#8 = phi( ultoa::@10/ultoa::max_digits#5 )
  ultoa::buffer#12 = phi( ultoa::@10/ultoa::buffer#11 )
  ultoa::started#2 = phi( ultoa::@10/ultoa::started#3 )
  ultoa::value#2 = phi( ultoa::@10/ultoa::value#5 )
  ultoa::digit_values#5 = phi( ultoa::@10/ultoa::digit_values#6 )
  ultoa::digit#3 = phi( ultoa::@10/ultoa::digit#2 )
  ultoa::$10 = ultoa::digit#3 * SIZEOF_DWORD
  ultoa::digit_value#0 = ultoa::digit_values#5[ultoa::$10]
  ultoa::$6 = ultoa::value#2 >= ultoa::digit_value#0
  ultoa::$7 = ultoa::started#2 || ultoa::$6
  ultoa::$8 = ! ultoa::$7
  if(ultoa::$8) goto ultoa::@13
  to:ultoa::@14
ultoa::@12: scope:[ultoa]  from ultoa::@10
  ultoa::buffer#7 = phi( ultoa::@10/ultoa::buffer#11 )
  ultoa::value#3 = phi( ultoa::@10/ultoa::value#5 )
  ultoa::$11 = (byte)ultoa::value#3
  *ultoa::buffer#7 = DIGITS[ultoa::$11]
  ultoa::buffer#3 = ++ ultoa::buffer#7
  *ultoa::buffer#3 = 0
  to:ultoa::@return
ultoa::@13: scope:[ultoa]  from ultoa::@11 ultoa::@15
  ultoa::buffer#14 = phi( ultoa::@11/ultoa::buffer#12, ultoa::@15/ultoa::buffer#4 )
  ultoa::started#4 = phi( ultoa::@11/ultoa::started#2, ultoa::@15/ultoa::started#1 )
  ultoa::value#6 = phi( ultoa::@11/ultoa::value#2, ultoa::@15/ultoa::value#0 )
  ultoa::digit_values#7 = phi( ultoa::@11/ultoa::digit_values#5, ultoa::@15/ultoa::digit_values#9 )
  ultoa::max_digits#6 = phi( ultoa::@11/ultoa::max_digits#8, ultoa::@15/ultoa::max_digits#9 )
  ultoa::digit#4 = phi( ultoa::@11/ultoa::digit#3, ultoa::@15/ultoa::digit#5 )
  ultoa::digit#1 = ++ ultoa::digit#4
  to:ultoa::@10
ultoa::@14: scope:[ultoa]  from ultoa::@11
  ultoa::digit_values#10 = phi( ultoa::@11/ultoa::digit_values#5 )
  ultoa::max_digits#10 = phi( ultoa::@11/ultoa::max_digits#8 )
  ultoa::digit#6 = phi( ultoa::@11/ultoa::digit#3 )
  ultoa::digit_value#1 = phi( ultoa::@11/ultoa::digit_value#0 )
  ultoa::value#4 = phi( ultoa::@11/ultoa::value#2 )
  ultoa::buffer#8 = phi( ultoa::@11/ultoa::buffer#12 )
  ultoa_append::buffer#0 = ultoa::buffer#8
  ultoa_append::value#0 = ultoa::value#4
  ultoa_append::sub#0 = ultoa::digit_value#1
  call ultoa_append 
  ultoa_append::return#0 = ultoa_append::return#2
  to:ultoa::@15
ultoa::@15: scope:[ultoa]  from ultoa::@14
  ultoa::digit_values#9 = phi( ultoa::@14/ultoa::digit_values#10 )
  ultoa::max_digits#9 = phi( ultoa::@14/ultoa::max_digits#10 )
  ultoa::digit#5 = phi( ultoa::@14/ultoa::digit#6 )
  ultoa::buffer#9 = phi( ultoa::@14/ultoa::buffer#8 )
  ultoa_append::return#3 = phi( ultoa::@14/ultoa_append::return#0 )
  ultoa::$9 = ultoa_append::return#3
  ultoa::value#0 = ultoa::$9
  ultoa::buffer#4 = ++ ultoa::buffer#9
  ultoa::started#1 = 1
  to:ultoa::@13

void uctoa(byte uctoa::value , byte* uctoa::buffer , byte uctoa::radix)
uctoa: scope:[uctoa]  from printf_uchar::@3
  uctoa::buffer#21 = phi( printf_uchar::@3/uctoa::buffer#5 )
  uctoa::value#12 = phi( printf_uchar::@3/uctoa::value#1 )
  uctoa::radix#1 = phi( printf_uchar::@3/uctoa::radix#0 )
  uctoa::max_digits#0 = 0
  uctoa::digit_values#0 = (byte*) 0
  uctoa::$0 = uctoa::radix#1 == DECIMAL
  if(uctoa::$0) goto uctoa::@1
  to:uctoa::@6
uctoa::@1: scope:[uctoa]  from uctoa
  uctoa::buffer#17 = phi( uctoa/uctoa::buffer#21 )
  uctoa::value#8 = phi( uctoa/uctoa::value#12 )
  uctoa::max_digits#1 = 3
  uctoa::digit_values#1 = RADIX_DECIMAL_VALUES_CHAR
  to:uctoa::@5
uctoa::@6: scope:[uctoa]  from uctoa
  uctoa::value#13 = phi( uctoa/uctoa::value#12 )
  uctoa::buffer#16 = phi( uctoa/uctoa::buffer#21 )
  uctoa::radix#2 = phi( uctoa/uctoa::radix#1 )
  uctoa::$1 = uctoa::radix#2 == HEXADECIMAL
  if(uctoa::$1) goto uctoa::@2
  to:uctoa::@7
uctoa::@2: scope:[uctoa]  from uctoa::@6
  uctoa::buffer#18 = phi( uctoa::@6/uctoa::buffer#16 )
  uctoa::value#9 = phi( uctoa::@6/uctoa::value#13 )
  uctoa::max_digits#2 = 2
  uctoa::digit_values#2 = RADIX_HEXADECIMAL_VALUES_CHAR
  to:uctoa::@5
uctoa::@7: scope:[uctoa]  from uctoa::@6
  uctoa::value#14 = phi( uctoa::@6/uctoa::value#13 )
  uctoa::buffer#13 = phi( uctoa::@6/uctoa::buffer#16 )
  uctoa::radix#3 = phi( uctoa::@6/uctoa::radix#2 )
  uctoa::$2 = uctoa::radix#3 == OCTAL
  if(uctoa::$2) goto uctoa::@3
  to:uctoa::@8
uctoa::@3: scope:[uctoa]  from uctoa::@7
  uctoa::buffer#19 = phi( uctoa::@7/uctoa::buffer#13 )
  uctoa::value#10 = phi( uctoa::@7/uctoa::value#14 )
  uctoa::max_digits#3 = 3
  uctoa::digit_values#3 = RADIX_OCTAL_VALUES_CHAR
  to:uctoa::@5
uctoa::@8: scope:[uctoa]  from uctoa::@7
  uctoa::value#15 = phi( uctoa::@7/uctoa::value#14 )
  uctoa::buffer#10 = phi( uctoa::@7/uctoa::buffer#13 )
  uctoa::radix#4 = phi( uctoa::@7/uctoa::radix#3 )
  uctoa::$3 = uctoa::radix#4 == BINARY
  if(uctoa::$3) goto uctoa::@4
  to:uctoa::@9
uctoa::@4: scope:[uctoa]  from uctoa::@8
  uctoa::buffer#20 = phi( uctoa::@8/uctoa::buffer#10 )
  uctoa::value#11 = phi( uctoa::@8/uctoa::value#15 )
  uctoa::max_digits#4 = 8
  uctoa::digit_values#4 = RADIX_BINARY_VALUES_CHAR
  to:uctoa::@5
uctoa::@9: scope:[uctoa]  from uctoa::@8
  uctoa::buffer#6 = phi( uctoa::@8/uctoa::buffer#10 )
  *uctoa::buffer#6 = 'e'
  uctoa::buffer#0 = ++ uctoa::buffer#6
  *uctoa::buffer#0 = 'r'
  uctoa::buffer#1 = ++ uctoa::buffer#0
  *uctoa::buffer#1 = 'r'
  uctoa::buffer#2 = ++ uctoa::buffer#1
  *uctoa::buffer#2 = 0
  to:uctoa::@return
uctoa::@return: scope:[uctoa]  from uctoa::@12 uctoa::@9
  return 
  to:@return
uctoa::@5: scope:[uctoa]  from uctoa::@1 uctoa::@2 uctoa::@3 uctoa::@4
  uctoa::buffer#15 = phi( uctoa::@1/uctoa::buffer#17, uctoa::@2/uctoa::buffer#18, uctoa::@3/uctoa::buffer#19, uctoa::@4/uctoa::buffer#20 )
  uctoa::value#7 = phi( uctoa::@1/uctoa::value#8, uctoa::@2/uctoa::value#9, uctoa::@3/uctoa::value#10, uctoa::@4/uctoa::value#11 )
  uctoa::digit_values#8 = phi( uctoa::@1/uctoa::digit_values#1, uctoa::@2/uctoa::digit_values#2, uctoa::@3/uctoa::digit_values#3, uctoa::@4/uctoa::digit_values#4 )
  uctoa::max_digits#7 = phi( uctoa::@1/uctoa::max_digits#1, uctoa::@2/uctoa::max_digits#2, uctoa::@3/uctoa::max_digits#3, uctoa::@4/uctoa::max_digits#4 )
  uctoa::started#0 = 0
  uctoa::digit#0 = 0
  to:uctoa::@10
uctoa::@10: scope:[uctoa]  from uctoa::@13 uctoa::@5
  uctoa::buffer#11 = phi( uctoa::@13/uctoa::buffer#14, uctoa::@5/uctoa::buffer#15 )
  uctoa::started#3 = phi( uctoa::@13/uctoa::started#4, uctoa::@5/uctoa::started#0 )
  uctoa::value#5 = phi( uctoa::@13/uctoa::value#6, uctoa::@5/uctoa::value#7 )
  uctoa::digit_values#6 = phi( uctoa::@13/uctoa::digit_values#7, uctoa::@5/uctoa::digit_values#8 )
  uctoa::digit#2 = phi( uctoa::@13/uctoa::digit#1, uctoa::@5/uctoa::digit#0 )
  uctoa::max_digits#5 = phi( uctoa::@13/uctoa::max_digits#6, uctoa::@5/uctoa::max_digits#7 )
  uctoa::$4 = uctoa::max_digits#5 - 1
  uctoa::$5 = uctoa::digit#2 < uctoa::$4
  if(uctoa::$5) goto uctoa::@11
  to:uctoa::@12
uctoa::@11: scope:[uctoa]  from uctoa::@10
  uctoa::max_digits#8 = phi( uctoa::@10/uctoa::max_digits#5 )
  uctoa::buffer#12 = phi( uctoa::@10/uctoa::buffer#11 )
  uctoa::started#2 = phi( uctoa::@10/uctoa::started#3 )
  uctoa::value#2 = phi( uctoa::@10/uctoa::value#5 )
  uctoa::digit#3 = phi( uctoa::@10/uctoa::digit#2 )
  uctoa::digit_values#5 = phi( uctoa::@10/uctoa::digit_values#6 )
  uctoa::digit_value#0 = uctoa::digit_values#5[uctoa::digit#3]
  uctoa::$6 = uctoa::value#2 >= uctoa::digit_value#0
  uctoa::$7 = uctoa::started#2 || uctoa::$6
  uctoa::$8 = ! uctoa::$7
  if(uctoa::$8) goto uctoa::@13
  to:uctoa::@14
uctoa::@12: scope:[uctoa]  from uctoa::@10
  uctoa::buffer#7 = phi( uctoa::@10/uctoa::buffer#11 )
  uctoa::value#3 = phi( uctoa::@10/uctoa::value#5 )
  uctoa::$10 = (byte)uctoa::value#3
  *uctoa::buffer#7 = DIGITS[uctoa::$10]
  uctoa::buffer#3 = ++ uctoa::buffer#7
  *uctoa::buffer#3 = 0
  to:uctoa::@return
uctoa::@13: scope:[uctoa]  from uctoa::@11 uctoa::@15
  uctoa::buffer#14 = phi( uctoa::@11/uctoa::buffer#12, uctoa::@15/uctoa::buffer#4 )
  uctoa::started#4 = phi( uctoa::@11/uctoa::started#2, uctoa::@15/uctoa::started#1 )
  uctoa::value#6 = phi( uctoa::@11/uctoa::value#2, uctoa::@15/uctoa::value#0 )
  uctoa::digit_values#7 = phi( uctoa::@11/uctoa::digit_values#5, uctoa::@15/uctoa::digit_values#9 )
  uctoa::max_digits#6 = phi( uctoa::@11/uctoa::max_digits#8, uctoa::@15/uctoa::max_digits#9 )
  uctoa::digit#4 = phi( uctoa::@11/uctoa::digit#3, uctoa::@15/uctoa::digit#5 )
  uctoa::digit#1 = ++ uctoa::digit#4
  to:uctoa::@10
uctoa::@14: scope:[uctoa]  from uctoa::@11
  uctoa::digit_values#10 = phi( uctoa::@11/uctoa::digit_values#5 )
  uctoa::max_digits#10 = phi( uctoa::@11/uctoa::max_digits#8 )
  uctoa::digit#6 = phi( uctoa::@11/uctoa::digit#3 )
  uctoa::digit_value#1 = phi( uctoa::@11/uctoa::digit_value#0 )
  uctoa::value#4 = phi( uctoa::@11/uctoa::value#2 )
  uctoa::buffer#8 = phi( uctoa::@11/uctoa::buffer#12 )
  uctoa_append::buffer#0 = uctoa::buffer#8
  uctoa_append::value#0 = uctoa::value#4
  uctoa_append::sub#0 = uctoa::digit_value#1
  call uctoa_append 
  uctoa_append::return#0 = uctoa_append::return#2
  to:uctoa::@15
uctoa::@15: scope:[uctoa]  from uctoa::@14
  uctoa::digit_values#9 = phi( uctoa::@14/uctoa::digit_values#10 )
  uctoa::max_digits#9 = phi( uctoa::@14/uctoa::max_digits#10 )
  uctoa::digit#5 = phi( uctoa::@14/uctoa::digit#6 )
  uctoa::buffer#9 = phi( uctoa::@14/uctoa::buffer#8 )
  uctoa_append::return#3 = phi( uctoa::@14/uctoa_append::return#0 )
  uctoa::$9 = uctoa_append::return#3
  uctoa::value#0 = uctoa::$9
  uctoa::buffer#4 = ++ uctoa::buffer#9
  uctoa::started#1 = 1
  to:uctoa::@13

byte uctoa_append(byte* uctoa_append::buffer , byte uctoa_append::value , byte uctoa_append::sub)
uctoa_append: scope:[uctoa_append]  from uctoa::@14
  uctoa_append::buffer#3 = phi( uctoa::@14/uctoa_append::buffer#0 )
  uctoa_append::sub#3 = phi( uctoa::@14/uctoa_append::sub#0 )
  uctoa_append::value#5 = phi( uctoa::@14/uctoa_append::value#0 )
  uctoa_append::digit#0 = 0
  to:uctoa_append::@1
uctoa_append::@1: scope:[uctoa_append]  from uctoa_append uctoa_append::@2
  uctoa_append::buffer#2 = phi( uctoa_append/uctoa_append::buffer#3, uctoa_append::@2/uctoa_append::buffer#4 )
  uctoa_append::digit#4 = phi( uctoa_append/uctoa_append::digit#0, uctoa_append::@2/uctoa_append::digit#1 )
  uctoa_append::sub#1 = phi( uctoa_append/uctoa_append::sub#3, uctoa_append::@2/uctoa_append::sub#2 )
  uctoa_append::value#2 = phi( uctoa_append/uctoa_append::value#5, uctoa_append::@2/uctoa_append::value#1 )
  uctoa_append::$0 = uctoa_append::value#2 >= uctoa_append::sub#1
  if(uctoa_append::$0) goto uctoa_append::@2
  to:uctoa_append::@3
uctoa_append::@2: scope:[uctoa_append]  from uctoa_append::@1
  uctoa_append::buffer#4 = phi( uctoa_append::@1/uctoa_append::buffer#2 )
  uctoa_append::sub#2 = phi( uctoa_append::@1/uctoa_append::sub#1 )
  uctoa_append::value#3 = phi( uctoa_append::@1/uctoa_append::value#2 )
  uctoa_append::digit#2 = phi( uctoa_append::@1/uctoa_append::digit#4 )
  uctoa_append::digit#1 = ++ uctoa_append::digit#2
  uctoa_append::value#1 = uctoa_append::value#3 - uctoa_append::sub#2
  to:uctoa_append::@1
uctoa_append::@3: scope:[uctoa_append]  from uctoa_append::@1
  uctoa_append::value#4 = phi( uctoa_append::@1/uctoa_append::value#2 )
  uctoa_append::buffer#1 = phi( uctoa_append::@1/uctoa_append::buffer#2 )
  uctoa_append::digit#3 = phi( uctoa_append::@1/uctoa_append::digit#4 )
  *uctoa_append::buffer#1 = DIGITS[uctoa_append::digit#3]
  uctoa_append::return#1 = uctoa_append::value#4
  to:uctoa_append::@return
uctoa_append::@return: scope:[uctoa_append]  from uctoa_append::@3
  uctoa_append::return#4 = phi( uctoa_append::@3/uctoa_append::return#1 )
  uctoa_append::return#2 = uctoa_append::return#4
  return 
  to:@return

word utoa_append(byte* utoa_append::buffer , word utoa_append::value , word utoa_append::sub)
utoa_append: scope:[utoa_append]  from utoa::@14
  utoa_append::buffer#3 = phi( utoa::@14/utoa_append::buffer#0 )
  utoa_append::sub#3 = phi( utoa::@14/utoa_append::sub#0 )
  utoa_append::value#5 = phi( utoa::@14/utoa_append::value#0 )
  utoa_append::digit#0 = 0
  to:utoa_append::@1
utoa_append::@1: scope:[utoa_append]  from utoa_append utoa_append::@2
  utoa_append::buffer#2 = phi( utoa_append/utoa_append::buffer#3, utoa_append::@2/utoa_append::buffer#4 )
  utoa_append::digit#4 = phi( utoa_append/utoa_append::digit#0, utoa_append::@2/utoa_append::digit#1 )
  utoa_append::sub#1 = phi( utoa_append/utoa_append::sub#3, utoa_append::@2/utoa_append::sub#2 )
  utoa_append::value#2 = phi( utoa_append/utoa_append::value#5, utoa_append::@2/utoa_append::value#1 )
  utoa_append::$0 = utoa_append::value#2 >= utoa_append::sub#1
  if(utoa_append::$0) goto utoa_append::@2
  to:utoa_append::@3
utoa_append::@2: scope:[utoa_append]  from utoa_append::@1
  utoa_append::buffer#4 = phi( utoa_append::@1/utoa_append::buffer#2 )
  utoa_append::sub#2 = phi( utoa_append::@1/utoa_append::sub#1 )
  utoa_append::value#3 = phi( utoa_append::@1/utoa_append::value#2 )
  utoa_append::digit#2 = phi( utoa_append::@1/utoa_append::digit#4 )
  utoa_append::digit#1 = ++ utoa_append::digit#2
  utoa_append::value#1 = utoa_append::value#3 - utoa_append::sub#2
  to:utoa_append::@1
utoa_append::@3: scope:[utoa_append]  from utoa_append::@1
  utoa_append::value#4 = phi( utoa_append::@1/utoa_append::value#2 )
  utoa_append::buffer#1 = phi( utoa_append::@1/utoa_append::buffer#2 )
  utoa_append::digit#3 = phi( utoa_append::@1/utoa_append::digit#4 )
  *utoa_append::buffer#1 = DIGITS[utoa_append::digit#3]
  utoa_append::return#1 = utoa_append::value#4
  to:utoa_append::@return
utoa_append::@return: scope:[utoa_append]  from utoa_append::@3
  utoa_append::return#4 = phi( utoa_append::@3/utoa_append::return#1 )
  utoa_append::return#2 = utoa_append::return#4
  return 
  to:@return

dword ultoa_append(byte* ultoa_append::buffer , dword ultoa_append::value , dword ultoa_append::sub)
ultoa_append: scope:[ultoa_append]  from ultoa::@14
  ultoa_append::buffer#3 = phi( ultoa::@14/ultoa_append::buffer#0 )
  ultoa_append::sub#3 = phi( ultoa::@14/ultoa_append::sub#0 )
  ultoa_append::value#5 = phi( ultoa::@14/ultoa_append::value#0 )
  ultoa_append::digit#0 = 0
  to:ultoa_append::@1
ultoa_append::@1: scope:[ultoa_append]  from ultoa_append ultoa_append::@2
  ultoa_append::buffer#2 = phi( ultoa_append/ultoa_append::buffer#3, ultoa_append::@2/ultoa_append::buffer#4 )
  ultoa_append::digit#4 = phi( ultoa_append/ultoa_append::digit#0, ultoa_append::@2/ultoa_append::digit#1 )
  ultoa_append::sub#1 = phi( ultoa_append/ultoa_append::sub#3, ultoa_append::@2/ultoa_append::sub#2 )
  ultoa_append::value#2 = phi( ultoa_append/ultoa_append::value#5, ultoa_append::@2/ultoa_append::value#1 )
  ultoa_append::$0 = ultoa_append::value#2 >= ultoa_append::sub#1
  if(ultoa_append::$0) goto ultoa_append::@2
  to:ultoa_append::@3
ultoa_append::@2: scope:[ultoa_append]  from ultoa_append::@1
  ultoa_append::buffer#4 = phi( ultoa_append::@1/ultoa_append::buffer#2 )
  ultoa_append::sub#2 = phi( ultoa_append::@1/ultoa_append::sub#1 )
  ultoa_append::value#3 = phi( ultoa_append::@1/ultoa_append::value#2 )
  ultoa_append::digit#2 = phi( ultoa_append::@1/ultoa_append::digit#4 )
  ultoa_append::digit#1 = ++ ultoa_append::digit#2
  ultoa_append::value#1 = ultoa_append::value#3 - ultoa_append::sub#2
  to:ultoa_append::@1
ultoa_append::@3: scope:[ultoa_append]  from ultoa_append::@1
  ultoa_append::value#4 = phi( ultoa_append::@1/ultoa_append::value#2 )
  ultoa_append::buffer#1 = phi( ultoa_append::@1/ultoa_append::buffer#2 )
  ultoa_append::digit#3 = phi( ultoa_append::@1/ultoa_append::digit#4 )
  *ultoa_append::buffer#1 = DIGITS[ultoa_append::digit#3]
  ultoa_append::return#1 = ultoa_append::value#4
  to:ultoa_append::@return
ultoa_append::@return: scope:[ultoa_append]  from ultoa_append::@3
  ultoa_append::return#4 = phi( ultoa_append::@3/ultoa_append::return#1 )
  ultoa_append::return#2 = ultoa_append::return#4
  return 
  to:@return

void clrscr()
clrscr: scope:[clrscr]  from main
  clrscr::line_text#0 = CONIO_SCREEN_TEXT
  clrscr::line_cols#0 = CONIO_SCREEN_COLORS
  clrscr::l#0 = 0
  to:clrscr::@1
clrscr::@1: scope:[clrscr]  from clrscr clrscr::@6
  clrscr::line_cols#6 = phi( clrscr/clrscr::line_cols#0, clrscr::@6/clrscr::line_cols#1 )
  clrscr::line_text#6 = phi( clrscr/clrscr::line_text#0, clrscr::@6/clrscr::line_text#1 )
  clrscr::l#2 = phi( clrscr/clrscr::l#0, clrscr::@6/clrscr::l#1 )
  clrscr::$0 = clrscr::l#2 < $19
  if(clrscr::$0) goto clrscr::@2
  to:clrscr::@3
clrscr::@2: scope:[clrscr]  from clrscr::@1
  clrscr::l#5 = phi( clrscr::@1/clrscr::l#2 )
  clrscr::line_cols#5 = phi( clrscr::@1/clrscr::line_cols#6 )
  clrscr::line_text#5 = phi( clrscr::@1/clrscr::line_text#6 )
  clrscr::c#0 = 0
  to:clrscr::@4
clrscr::@3: scope:[clrscr]  from clrscr::@1
  conio_cursor_x = 0
  conio_cursor_y = 0
  conio_line_text = CONIO_SCREEN_TEXT
  conio_line_color = CONIO_SCREEN_COLORS
  to:clrscr::@return
clrscr::@4: scope:[clrscr]  from clrscr::@2 clrscr::@5
  clrscr::l#4 = phi( clrscr::@2/clrscr::l#5, clrscr::@5/clrscr::l#6 )
  clrscr::line_cols#4 = phi( clrscr::@2/clrscr::line_cols#5, clrscr::@5/clrscr::line_cols#2 )
  clrscr::line_text#4 = phi( clrscr::@2/clrscr::line_text#5, clrscr::@5/clrscr::line_text#2 )
  clrscr::c#2 = phi( clrscr::@2/clrscr::c#0, clrscr::@5/clrscr::c#1 )
  clrscr::$1 = clrscr::c#2 < $28
  if(clrscr::$1) goto clrscr::@5
  to:clrscr::@6
clrscr::@5: scope:[clrscr]  from clrscr::@4
  clrscr::l#6 = phi( clrscr::@4/clrscr::l#4 )
  clrscr::line_cols#2 = phi( clrscr::@4/clrscr::line_cols#4 )
  clrscr::c#3 = phi( clrscr::@4/clrscr::c#2 )
  clrscr::line_text#2 = phi( clrscr::@4/clrscr::line_text#4 )
  clrscr::line_text#2[clrscr::c#3] = ' '
  clrscr::line_cols#2[clrscr::c#3] = conio_textcolor
  clrscr::c#1 = ++ clrscr::c#3
  to:clrscr::@4
clrscr::@6: scope:[clrscr]  from clrscr::@4
  clrscr::l#3 = phi( clrscr::@4/clrscr::l#4 )
  clrscr::line_cols#3 = phi( clrscr::@4/clrscr::line_cols#4 )
  clrscr::line_text#3 = phi( clrscr::@4/clrscr::line_text#4 )
  clrscr::line_text#1 = clrscr::line_text#3 + $28
  clrscr::line_cols#1 = clrscr::line_cols#3 + $28
  clrscr::l#1 = ++ clrscr::l#3
  to:clrscr::@1
clrscr::@return: scope:[clrscr]  from clrscr::@3
  return 
  to:@return

void gotoxy(byte gotoxy::x , byte gotoxy::y)
gotoxy: scope:[gotoxy]  from conio_c64_init::@1 cscroll::@2 print
  gotoxy::x#6 = phi( conio_c64_init::@1/gotoxy::x#2, cscroll::@2/gotoxy::x#1, print/gotoxy::x#3 )
  gotoxy::y#4 = phi( conio_c64_init::@1/gotoxy::y#2, cscroll::@2/gotoxy::y#1, print/gotoxy::y#3 )
  gotoxy::$0 = gotoxy::y#4 > $19
  gotoxy::$1 = ! gotoxy::$0
  if(gotoxy::$1) goto gotoxy::@1
  to:gotoxy::@3
gotoxy::@1: scope:[gotoxy]  from gotoxy gotoxy::@3
  gotoxy::y#6 = phi( gotoxy/gotoxy::y#4, gotoxy::@3/gotoxy::y#0 )
  gotoxy::x#4 = phi( gotoxy/gotoxy::x#6, gotoxy::@3/gotoxy::x#7 )
  gotoxy::$2 = gotoxy::x#4 >= $28
  gotoxy::$3 = ! gotoxy::$2
  if(gotoxy::$3) goto gotoxy::@2
  to:gotoxy::@4
gotoxy::@3: scope:[gotoxy]  from gotoxy
  gotoxy::x#7 = phi( gotoxy/gotoxy::x#6 )
  gotoxy::y#0 = 0
  to:gotoxy::@1
gotoxy::@2: scope:[gotoxy]  from gotoxy::@1 gotoxy::@4
  gotoxy::y#5 = phi( gotoxy::@1/gotoxy::y#6, gotoxy::@4/gotoxy::y#7 )
  gotoxy::x#5 = phi( gotoxy::@1/gotoxy::x#4, gotoxy::@4/gotoxy::x#0 )
  conio_cursor_x = gotoxy::x#5
  conio_cursor_y = gotoxy::y#5
  gotoxy::$7 = (word)gotoxy::y#5
  gotoxy::$4 = gotoxy::$7 * $28
  gotoxy::line_offset#0 = gotoxy::$4
  gotoxy::$5 = CONIO_SCREEN_TEXT + gotoxy::line_offset#0
  conio_line_text = gotoxy::$5
  gotoxy::$6 = CONIO_SCREEN_COLORS + gotoxy::line_offset#0
  conio_line_color = gotoxy::$6
  to:gotoxy::@return
gotoxy::@4: scope:[gotoxy]  from gotoxy::@1
  gotoxy::y#7 = phi( gotoxy::@1/gotoxy::y#6 )
  gotoxy::x#0 = 0
  to:gotoxy::@2
gotoxy::@return: scope:[gotoxy]  from gotoxy::@2
  return 
  to:@return

void cputc(byte cputc::c)
cputc: scope:[cputc]  from cputs::@2 printf_number_buffer::@9 printf_padding::@2
  cputc::c#3 = phi( cputs::@2/cputc::c#0, printf_number_buffer::@9/cputc::c#2, printf_padding::@2/cputc::c#1 )
  cputc::$0 = cputc::c#3 == '
'
  if(cputc::$0) goto cputc::@1
  to:cputc::@2
cputc::@1: scope:[cputc]  from cputc
  call cputln 
  to:cputc::@4
cputc::@4: scope:[cputc]  from cputc::@1
  to:cputc::@return
cputc::@2: scope:[cputc]  from cputc
  cputc::c#4 = phi( cputc/cputc::c#3 )
  conio_line_text[conio_cursor_x] = cputc::c#4
  conio_line_color[conio_cursor_x] = conio_textcolor
  conio_cursor_x = ++ conio_cursor_x
  cputc::$1 = conio_cursor_x == $28
  cputc::$2 = ! cputc::$1
  if(cputc::$2) goto cputc::@return
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc::@2
  call cputln 
  to:cputc::@5
cputc::@5: scope:[cputc]  from cputc::@3
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@2 cputc::@4 cputc::@5
  return 
  to:@return

void cputln()
cputln: scope:[cputln]  from cputc::@1 cputc::@3
  conio_line_text = conio_line_text + $28
  conio_line_color = conio_line_color + $28
  conio_cursor_x = 0
  conio_cursor_y = ++ conio_cursor_y
  call cscroll 
  to:cputln::@1
cputln::@1: scope:[cputln]  from cputln
  to:cputln::@return
cputln::@return: scope:[cputln]  from cputln::@1
  return 
  to:@return

void cputs(const byte* cputs::s)
cputs: scope:[cputs]  from main::@1 main::@2 main::@4 main::@6 print::@11 print::@12 print::@14 print::@5 print::@9 printf_number_buffer::@5
  cputs::s#12 = phi( main::@1/cputs::s#2, main::@2/cputs::s#3, main::@4/cputs::s#4, main::@6/cputs::s#5, print::@11/cputs::s#10, print::@12/cputs::s#6, print::@14/cputs::s#7, print::@5/cputs::s#8, print::@9/cputs::s#9, printf_number_buffer::@5/cputs::s#1 )
  cputs::c#0 = 0
  to:cputs::@1
cputs::@1: scope:[cputs]  from cputs cputs::@3
  cputs::s#11 = phi( cputs/cputs::s#12, cputs::@3/cputs::s#13 )
  cputs::c#1 = *cputs::s#11
  cputs::$0 = cputs::c#1
  cputs::s#0 = ++ cputs::s#11
  cputs::$2 = 0 != cputs::$0
  if(cputs::$2) goto cputs::@2
  to:cputs::@return
cputs::@2: scope:[cputs]  from cputs::@1
  cputs::s#14 = phi( cputs::@1/cputs::s#0 )
  cputs::c#2 = phi( cputs::@1/cputs::c#1 )
  cputc::c#0 = cputs::c#2
  call cputc 
  to:cputs::@3
cputs::@3: scope:[cputs]  from cputs::@2
  cputs::s#13 = phi( cputs::@2/cputs::s#14 )
  to:cputs::@1
cputs::@return: scope:[cputs]  from cputs::@1
  return 
  to:@return

void cscroll()
cscroll: scope:[cscroll]  from cputln
  cscroll::$0 = conio_cursor_y == $19
  cscroll::$1 = ! cscroll::$0
  if(cscroll::$1) goto cscroll::@return
  to:cscroll::@1
cscroll::@1: scope:[cscroll]  from cscroll
  cscroll::$7 = 0 != conio_scroll_enable
  if(cscroll::$7) goto cscroll::@3
  to:cscroll::@2
cscroll::@3: scope:[cscroll]  from cscroll::@1
  memcpy::destination#0 = (void*)CONIO_SCREEN_TEXT
  memcpy::source#0 = (void*)CONIO_SCREEN_TEXT+$28
  memcpy::num#0 = $19*$28-$28
  call memcpy 
  memcpy::return#2 = memcpy::return#1
  to:cscroll::@4
cscroll::@4: scope:[cscroll]  from cscroll::@3
  memcpy::destination#1 = (void*)CONIO_SCREEN_COLORS
  memcpy::source#1 = (void*)CONIO_SCREEN_COLORS+$28
  memcpy::num#1 = $19*$28-$28
  call memcpy 
  memcpy::return#3 = memcpy::return#1
  to:cscroll::@5
cscroll::@5: scope:[cscroll]  from cscroll::@4
  memset::str#0 = (void*)CONIO_SCREEN_TEXT+$19*$28-$28
  memset::c#0 = ' '
  memset::num#0 = $28
  call memset 
  memset::return#2 = memset::return#1
  to:cscroll::@6
cscroll::@6: scope:[cscroll]  from cscroll::@5
  memset::str#1 = (void*)CONIO_SCREEN_COLORS+$19*$28-$28
  memset::c#1 = conio_textcolor
  memset::num#1 = $28
  call memset 
  memset::return#3 = memset::return#1
  to:cscroll::@7
cscroll::@7: scope:[cscroll]  from cscroll::@6
  conio_line_text = conio_line_text - $28
  conio_line_color = conio_line_color - $28
  conio_cursor_y = -- conio_cursor_y
  to:cscroll::@return
cscroll::@2: scope:[cscroll]  from cscroll::@1
  gotoxy::x#1 = 0
  gotoxy::y#1 = 0
  call gotoxy 
  to:cscroll::@8
cscroll::@8: scope:[cscroll]  from cscroll::@2
  to:cscroll::@return
cscroll::@return: scope:[cscroll]  from cscroll cscroll::@7 cscroll::@8
  return 
  to:@return

void conio_c64_init()
conio_c64_init: scope:[conio_c64_init]  from __start::__init1
  conio_c64_init::line#0 = *conio_c64_init::BASIC_CURSOR_LINE
  conio_c64_init::$0 = conio_c64_init::line#0 >= $19
  conio_c64_init::$1 = ! conio_c64_init::$0
  if(conio_c64_init::$1) goto conio_c64_init::@1
  to:conio_c64_init::@2
conio_c64_init::@1: scope:[conio_c64_init]  from conio_c64_init conio_c64_init::@2
  conio_c64_init::line#2 = phi( conio_c64_init/conio_c64_init::line#0, conio_c64_init::@2/conio_c64_init::line#1 )
  gotoxy::x#2 = 0
  gotoxy::y#2 = conio_c64_init::line#2
  call gotoxy 
  to:conio_c64_init::@3
conio_c64_init::@3: scope:[conio_c64_init]  from conio_c64_init::@1
  to:conio_c64_init::@return
conio_c64_init::@2: scope:[conio_c64_init]  from conio_c64_init
  conio_c64_init::line#1 = $19-1
  to:conio_c64_init::@1
conio_c64_init::@return: scope:[conio_c64_init]  from conio_c64_init::@3
  return 
  to:@return

void printf_padding(byte printf_padding::pad , byte printf_padding::length)
printf_padding: scope:[printf_padding]  from printf_number_buffer::@10 printf_number_buffer::@12 printf_number_buffer::@8
  printf_padding::pad#5 = phi( printf_number_buffer::@10/printf_padding::pad#1, printf_number_buffer::@12/printf_padding::pad#2, printf_number_buffer::@8/printf_padding::pad#0 )
  printf_padding::length#4 = phi( printf_number_buffer::@10/printf_padding::length#1, printf_number_buffer::@12/printf_padding::length#2, printf_number_buffer::@8/printf_padding::length#0 )
  printf_padding::i#0 = 0
  to:printf_padding::@1
printf_padding::@1: scope:[printf_padding]  from printf_padding printf_padding::@3
  printf_padding::pad#4 = phi( printf_padding/printf_padding::pad#5, printf_padding::@3/printf_padding::pad#6 )
  printf_padding::length#3 = phi( printf_padding/printf_padding::length#4, printf_padding::@3/printf_padding::length#5 )
  printf_padding::i#2 = phi( printf_padding/printf_padding::i#0, printf_padding::@3/printf_padding::i#1 )
  printf_padding::$0 = printf_padding::i#2 < printf_padding::length#3
  if(printf_padding::$0) goto printf_padding::@2
  to:printf_padding::@return
printf_padding::@2: scope:[printf_padding]  from printf_padding::@1
  printf_padding::length#6 = phi( printf_padding::@1/printf_padding::length#3 )
  printf_padding::i#4 = phi( printf_padding::@1/printf_padding::i#2 )
  printf_padding::pad#3 = phi( printf_padding::@1/printf_padding::pad#4 )
  cputc::c#1 = printf_padding::pad#3
  call cputc 
  to:printf_padding::@3
printf_padding::@3: scope:[printf_padding]  from printf_padding::@2
  printf_padding::pad#6 = phi( printf_padding::@2/printf_padding::pad#3 )
  printf_padding::length#5 = phi( printf_padding::@2/printf_padding::length#6 )
  printf_padding::i#3 = phi( printf_padding::@2/printf_padding::i#4 )
  printf_padding::i#1 = ++ printf_padding::i#3
  to:printf_padding::@1
printf_padding::@return: scope:[printf_padding]  from printf_padding::@1
  return 
  to:@return

void printf_ulong(dword printf_ulong::uvalue , byte printf_ulong::format_min_length , byte printf_ulong::format_justify_left , byte printf_ulong::format_sign_always , byte printf_ulong::format_zero_padding , byte printf_ulong::format_upper_case , byte printf_ulong::format_radix)
printf_ulong: scope:[printf_ulong]  from main::@5 print::@13
  printf_ulong::format_upper_case#6 = phi( main::@5/printf_ulong::format_upper_case#0, print::@13/printf_ulong::format_upper_case#1 )
  printf_ulong::format_zero_padding#6 = phi( main::@5/printf_ulong::format_zero_padding#0, print::@13/printf_ulong::format_zero_padding#1 )
  printf_ulong::format_justify_left#6 = phi( main::@5/printf_ulong::format_justify_left#0, print::@13/printf_ulong::format_justify_left#1 )
  printf_ulong::format_min_length#6 = phi( main::@5/printf_ulong::format_min_length#0, print::@13/printf_ulong::format_min_length#1 )
  printf_ulong::format_radix#6 = phi( main::@5/printf_ulong::format_radix#0, print::@13/printf_ulong::format_radix#1 )
  printf_ulong::uvalue#5 = phi( main::@5/printf_ulong::uvalue#0, print::@13/printf_ulong::uvalue#1 )
  printf_ulong::format_sign_always#2 = phi( main::@5/printf_ulong::format_sign_always#0, print::@13/printf_ulong::format_sign_always#1 )
  printf_ulong::$5 = 0 != printf_ulong::format_sign_always#2
  if(printf_ulong::$5) goto printf_ulong::@1
  to:printf_ulong::@2
printf_ulong::@1: scope:[printf_ulong]  from printf_ulong
  printf_ulong::format_upper_case#4 = phi( printf_ulong/printf_ulong::format_upper_case#6 )
  printf_ulong::format_zero_padding#4 = phi( printf_ulong/printf_ulong::format_zero_padding#6 )
  printf_ulong::format_sign_always#5 = phi( printf_ulong/printf_ulong::format_sign_always#2 )
  printf_ulong::format_justify_left#4 = phi( printf_ulong/printf_ulong::format_justify_left#6 )
  printf_ulong::format_min_length#4 = phi( printf_ulong/printf_ulong::format_min_length#6 )
  printf_ulong::format_radix#4 = phi( printf_ulong/printf_ulong::format_radix#6 )
  printf_ulong::uvalue#3 = phi( printf_ulong/printf_ulong::uvalue#5 )
  printf_ulong::$1 = '+'
  to:printf_ulong::@3
printf_ulong::@2: scope:[printf_ulong]  from printf_ulong
  printf_ulong::format_upper_case#5 = phi( printf_ulong/printf_ulong::format_upper_case#6 )
  printf_ulong::format_zero_padding#5 = phi( printf_ulong/printf_ulong::format_zero_padding#6 )
  printf_ulong::format_sign_always#6 = phi( printf_ulong/printf_ulong::format_sign_always#2 )
  printf_ulong::format_justify_left#5 = phi( printf_ulong/printf_ulong::format_justify_left#6 )
  printf_ulong::format_min_length#5 = phi( printf_ulong/printf_ulong::format_min_length#6 )
  printf_ulong::format_radix#5 = phi( printf_ulong/printf_ulong::format_radix#6 )
  printf_ulong::uvalue#4 = phi( printf_ulong/printf_ulong::uvalue#5 )
  printf_ulong::$0 = 0
  to:printf_ulong::@3
printf_ulong::@3: scope:[printf_ulong]  from printf_ulong::@1 printf_ulong::@2
  printf_ulong::format_upper_case#3 = phi( printf_ulong::@1/printf_ulong::format_upper_case#4, printf_ulong::@2/printf_ulong::format_upper_case#5 )
  printf_ulong::format_zero_padding#3 = phi( printf_ulong::@1/printf_ulong::format_zero_padding#4, printf_ulong::@2/printf_ulong::format_zero_padding#5 )
  printf_ulong::format_sign_always#4 = phi( printf_ulong::@1/printf_ulong::format_sign_always#5, printf_ulong::@2/printf_ulong::format_sign_always#6 )
  printf_ulong::format_justify_left#3 = phi( printf_ulong::@1/printf_ulong::format_justify_left#4, printf_ulong::@2/printf_ulong::format_justify_left#5 )
  printf_ulong::format_min_length#3 = phi( printf_ulong::@1/printf_ulong::format_min_length#4, printf_ulong::@2/printf_ulong::format_min_length#5 )
  printf_ulong::format_radix#2 = phi( printf_ulong::@1/printf_ulong::format_radix#4, printf_ulong::@2/printf_ulong::format_radix#5 )
  printf_ulong::uvalue#2 = phi( printf_ulong::@1/printf_ulong::uvalue#3, printf_ulong::@2/printf_ulong::uvalue#4 )
  printf_ulong::$2 = phi( printf_ulong::@1/printf_ulong::$1, printf_ulong::@2/printf_ulong::$0 )
  *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN) = printf_ulong::$2
  ultoa::value#1 = printf_ulong::uvalue#2
  ultoa::buffer#5 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
  ultoa::radix#0 = printf_ulong::format_radix#2
  call ultoa 
  to:printf_ulong::@4
printf_ulong::@4: scope:[printf_ulong]  from printf_ulong::@3
  printf_ulong::format_radix#3 = phi( printf_ulong::@3/printf_ulong::format_radix#2 )
  printf_ulong::format_upper_case#2 = phi( printf_ulong::@3/printf_ulong::format_upper_case#3 )
  printf_ulong::format_zero_padding#2 = phi( printf_ulong::@3/printf_ulong::format_zero_padding#3 )
  printf_ulong::format_sign_always#3 = phi( printf_ulong::@3/printf_ulong::format_sign_always#4 )
  printf_ulong::format_justify_left#2 = phi( printf_ulong::@3/printf_ulong::format_justify_left#3 )
  printf_ulong::format_min_length#2 = phi( printf_ulong::@3/printf_ulong::format_min_length#3 )
  printf_number_buffer::buffer_sign#0 = *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN)
  printf_number_buffer::buffer_digits#0 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
  printf_number_buffer::format_min_length#0 = printf_ulong::format_min_length#2
  printf_number_buffer::format_justify_left#0 = printf_ulong::format_justify_left#2
  printf_number_buffer::format_sign_always#0 = printf_ulong::format_sign_always#3
  printf_number_buffer::format_zero_padding#0 = printf_ulong::format_zero_padding#2
  printf_number_buffer::format_upper_case#0 = printf_ulong::format_upper_case#2
  printf_number_buffer::format_radix#0 = printf_ulong::format_radix#3
  call printf_number_buffer 
  to:printf_ulong::@5
printf_ulong::@5: scope:[printf_ulong]  from printf_ulong::@4
  to:printf_ulong::@return
printf_ulong::@return: scope:[printf_ulong]  from printf_ulong::@5
  return 
  to:@return

void printf_uint(word printf_uint::uvalue , byte printf_uint::format_min_length , byte printf_uint::format_justify_left , byte printf_uint::format_sign_always , byte printf_uint::format_zero_padding , byte printf_uint::format_upper_case , byte printf_uint::format_radix)
printf_uint: scope:[printf_uint]  from main::@3
  printf_uint::format_upper_case#5 = phi( main::@3/printf_uint::format_upper_case#0 )
  printf_uint::format_zero_padding#5 = phi( main::@3/printf_uint::format_zero_padding#0 )
  printf_uint::format_justify_left#5 = phi( main::@3/printf_uint::format_justify_left#0 )
  printf_uint::format_min_length#5 = phi( main::@3/printf_uint::format_min_length#0 )
  printf_uint::format_radix#5 = phi( main::@3/printf_uint::format_radix#0 )
  printf_uint::uvalue#4 = phi( main::@3/printf_uint::uvalue#0 )
  printf_uint::format_sign_always#1 = phi( main::@3/printf_uint::format_sign_always#0 )
  printf_uint::$5 = 0 != printf_uint::format_sign_always#1
  if(printf_uint::$5) goto printf_uint::@1
  to:printf_uint::@2
printf_uint::@1: scope:[printf_uint]  from printf_uint
  printf_uint::format_upper_case#3 = phi( printf_uint/printf_uint::format_upper_case#5 )
  printf_uint::format_zero_padding#3 = phi( printf_uint/printf_uint::format_zero_padding#5 )
  printf_uint::format_sign_always#4 = phi( printf_uint/printf_uint::format_sign_always#1 )
  printf_uint::format_justify_left#3 = phi( printf_uint/printf_uint::format_justify_left#5 )
  printf_uint::format_min_length#3 = phi( printf_uint/printf_uint::format_min_length#5 )
  printf_uint::format_radix#3 = phi( printf_uint/printf_uint::format_radix#5 )
  printf_uint::uvalue#2 = phi( printf_uint/printf_uint::uvalue#4 )
  printf_uint::$1 = '+'
  to:printf_uint::@3
printf_uint::@2: scope:[printf_uint]  from printf_uint
  printf_uint::format_upper_case#4 = phi( printf_uint/printf_uint::format_upper_case#5 )
  printf_uint::format_zero_padding#4 = phi( printf_uint/printf_uint::format_zero_padding#5 )
  printf_uint::format_sign_always#5 = phi( printf_uint/printf_uint::format_sign_always#1 )
  printf_uint::format_justify_left#4 = phi( printf_uint/printf_uint::format_justify_left#5 )
  printf_uint::format_min_length#4 = phi( printf_uint/printf_uint::format_min_length#5 )
  printf_uint::format_radix#4 = phi( printf_uint/printf_uint::format_radix#5 )
  printf_uint::uvalue#3 = phi( printf_uint/printf_uint::uvalue#4 )
  printf_uint::$0 = 0
  to:printf_uint::@3
printf_uint::@3: scope:[printf_uint]  from printf_uint::@1 printf_uint::@2
  printf_uint::format_upper_case#2 = phi( printf_uint::@1/printf_uint::format_upper_case#3, printf_uint::@2/printf_uint::format_upper_case#4 )
  printf_uint::format_zero_padding#2 = phi( printf_uint::@1/printf_uint::format_zero_padding#3, printf_uint::@2/printf_uint::format_zero_padding#4 )
  printf_uint::format_sign_always#3 = phi( printf_uint::@1/printf_uint::format_sign_always#4, printf_uint::@2/printf_uint::format_sign_always#5 )
  printf_uint::format_justify_left#2 = phi( printf_uint::@1/printf_uint::format_justify_left#3, printf_uint::@2/printf_uint::format_justify_left#4 )
  printf_uint::format_min_length#2 = phi( printf_uint::@1/printf_uint::format_min_length#3, printf_uint::@2/printf_uint::format_min_length#4 )
  printf_uint::format_radix#1 = phi( printf_uint::@1/printf_uint::format_radix#3, printf_uint::@2/printf_uint::format_radix#4 )
  printf_uint::uvalue#1 = phi( printf_uint::@1/printf_uint::uvalue#2, printf_uint::@2/printf_uint::uvalue#3 )
  printf_uint::$2 = phi( printf_uint::@1/printf_uint::$1, printf_uint::@2/printf_uint::$0 )
  *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN) = printf_uint::$2
  utoa::value#1 = printf_uint::uvalue#1
  utoa::buffer#5 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
  utoa::radix#0 = printf_uint::format_radix#1
  call utoa 
  to:printf_uint::@4
printf_uint::@4: scope:[printf_uint]  from printf_uint::@3
  printf_uint::format_radix#2 = phi( printf_uint::@3/printf_uint::format_radix#1 )
  printf_uint::format_upper_case#1 = phi( printf_uint::@3/printf_uint::format_upper_case#2 )
  printf_uint::format_zero_padding#1 = phi( printf_uint::@3/printf_uint::format_zero_padding#2 )
  printf_uint::format_sign_always#2 = phi( printf_uint::@3/printf_uint::format_sign_always#3 )
  printf_uint::format_justify_left#1 = phi( printf_uint::@3/printf_uint::format_justify_left#2 )
  printf_uint::format_min_length#1 = phi( printf_uint::@3/printf_uint::format_min_length#2 )
  printf_number_buffer::buffer_sign#1 = *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN)
  printf_number_buffer::buffer_digits#1 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
  printf_number_buffer::format_min_length#1 = printf_uint::format_min_length#1
  printf_number_buffer::format_justify_left#1 = printf_uint::format_justify_left#1
  printf_number_buffer::format_sign_always#1 = printf_uint::format_sign_always#2
  printf_number_buffer::format_zero_padding#1 = printf_uint::format_zero_padding#1
  printf_number_buffer::format_upper_case#1 = printf_uint::format_upper_case#1
  printf_number_buffer::format_radix#1 = printf_uint::format_radix#2
  call printf_number_buffer 
  to:printf_uint::@5
printf_uint::@5: scope:[printf_uint]  from printf_uint::@4
  to:printf_uint::@return
printf_uint::@return: scope:[printf_uint]  from printf_uint::@5
  return 
  to:@return

void printf_uchar(byte printf_uchar::uvalue , byte printf_uchar::format_min_length , byte printf_uchar::format_justify_left , byte printf_uchar::format_sign_always , byte printf_uchar::format_zero_padding , byte printf_uchar::format_upper_case , byte printf_uchar::format_radix)
printf_uchar: scope:[printf_uchar]  from print::@17 print::@2
  printf_uchar::format_upper_case#6 = phi( print::@17/printf_uchar::format_upper_case#1, print::@2/printf_uchar::format_upper_case#0 )
  printf_uchar::format_zero_padding#6 = phi( print::@17/printf_uchar::format_zero_padding#1, print::@2/printf_uchar::format_zero_padding#0 )
  printf_uchar::format_justify_left#6 = phi( print::@17/printf_uchar::format_justify_left#1, print::@2/printf_uchar::format_justify_left#0 )
  printf_uchar::format_min_length#6 = phi( print::@17/printf_uchar::format_min_length#1, print::@2/printf_uchar::format_min_length#0 )
  printf_uchar::format_radix#6 = phi( print::@17/printf_uchar::format_radix#1, print::@2/printf_uchar::format_radix#0 )
  printf_uchar::uvalue#5 = phi( print::@17/printf_uchar::uvalue#1, print::@2/printf_uchar::uvalue#0 )
  printf_uchar::format_sign_always#2 = phi( print::@17/printf_uchar::format_sign_always#1, print::@2/printf_uchar::format_sign_always#0 )
  printf_uchar::$5 = 0 != printf_uchar::format_sign_always#2
  if(printf_uchar::$5) goto printf_uchar::@1
  to:printf_uchar::@2
printf_uchar::@1: scope:[printf_uchar]  from printf_uchar
  printf_uchar::format_upper_case#4 = phi( printf_uchar/printf_uchar::format_upper_case#6 )
  printf_uchar::format_zero_padding#4 = phi( printf_uchar/printf_uchar::format_zero_padding#6 )
  printf_uchar::format_sign_always#5 = phi( printf_uchar/printf_uchar::format_sign_always#2 )
  printf_uchar::format_justify_left#4 = phi( printf_uchar/printf_uchar::format_justify_left#6 )
  printf_uchar::format_min_length#4 = phi( printf_uchar/printf_uchar::format_min_length#6 )
  printf_uchar::format_radix#4 = phi( printf_uchar/printf_uchar::format_radix#6 )
  printf_uchar::uvalue#3 = phi( printf_uchar/printf_uchar::uvalue#5 )
  printf_uchar::$1 = '+'
  to:printf_uchar::@3
printf_uchar::@2: scope:[printf_uchar]  from printf_uchar
  printf_uchar::format_upper_case#5 = phi( printf_uchar/printf_uchar::format_upper_case#6 )
  printf_uchar::format_zero_padding#5 = phi( printf_uchar/printf_uchar::format_zero_padding#6 )
  printf_uchar::format_sign_always#6 = phi( printf_uchar/printf_uchar::format_sign_always#2 )
  printf_uchar::format_justify_left#5 = phi( printf_uchar/printf_uchar::format_justify_left#6 )
  printf_uchar::format_min_length#5 = phi( printf_uchar/printf_uchar::format_min_length#6 )
  printf_uchar::format_radix#5 = phi( printf_uchar/printf_uchar::format_radix#6 )
  printf_uchar::uvalue#4 = phi( printf_uchar/printf_uchar::uvalue#5 )
  printf_uchar::$0 = 0
  to:printf_uchar::@3
printf_uchar::@3: scope:[printf_uchar]  from printf_uchar::@1 printf_uchar::@2
  printf_uchar::format_upper_case#3 = phi( printf_uchar::@1/printf_uchar::format_upper_case#4, printf_uchar::@2/printf_uchar::format_upper_case#5 )
  printf_uchar::format_zero_padding#3 = phi( printf_uchar::@1/printf_uchar::format_zero_padding#4, printf_uchar::@2/printf_uchar::format_zero_padding#5 )
  printf_uchar::format_sign_always#4 = phi( printf_uchar::@1/printf_uchar::format_sign_always#5, printf_uchar::@2/printf_uchar::format_sign_always#6 )
  printf_uchar::format_justify_left#3 = phi( printf_uchar::@1/printf_uchar::format_justify_left#4, printf_uchar::@2/printf_uchar::format_justify_left#5 )
  printf_uchar::format_min_length#3 = phi( printf_uchar::@1/printf_uchar::format_min_length#4, printf_uchar::@2/printf_uchar::format_min_length#5 )
  printf_uchar::format_radix#2 = phi( printf_uchar::@1/printf_uchar::format_radix#4, printf_uchar::@2/printf_uchar::format_radix#5 )
  printf_uchar::uvalue#2 = phi( printf_uchar::@1/printf_uchar::uvalue#3, printf_uchar::@2/printf_uchar::uvalue#4 )
  printf_uchar::$2 = phi( printf_uchar::@1/printf_uchar::$1, printf_uchar::@2/printf_uchar::$0 )
  *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN) = printf_uchar::$2
  uctoa::value#1 = printf_uchar::uvalue#2
  uctoa::buffer#5 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
  uctoa::radix#0 = printf_uchar::format_radix#2
  call uctoa 
  to:printf_uchar::@4
printf_uchar::@4: scope:[printf_uchar]  from printf_uchar::@3
  printf_uchar::format_radix#3 = phi( printf_uchar::@3/printf_uchar::format_radix#2 )
  printf_uchar::format_upper_case#2 = phi( printf_uchar::@3/printf_uchar::format_upper_case#3 )
  printf_uchar::format_zero_padding#2 = phi( printf_uchar::@3/printf_uchar::format_zero_padding#3 )
  printf_uchar::format_sign_always#3 = phi( printf_uchar::@3/printf_uchar::format_sign_always#4 )
  printf_uchar::format_justify_left#2 = phi( printf_uchar::@3/printf_uchar::format_justify_left#3 )
  printf_uchar::format_min_length#2 = phi( printf_uchar::@3/printf_uchar::format_min_length#3 )
  printf_number_buffer::buffer_sign#2 = *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN)
  printf_number_buffer::buffer_digits#2 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
  printf_number_buffer::format_min_length#2 = printf_uchar::format_min_length#2
  printf_number_buffer::format_justify_left#2 = printf_uchar::format_justify_left#2
  printf_number_buffer::format_sign_always#2 = printf_uchar::format_sign_always#3
  printf_number_buffer::format_zero_padding#2 = printf_uchar::format_zero_padding#2
  printf_number_buffer::format_upper_case#2 = printf_uchar::format_upper_case#2
  printf_number_buffer::format_radix#2 = printf_uchar::format_radix#3
  call printf_number_buffer 
  to:printf_uchar::@5
printf_uchar::@5: scope:[printf_uchar]  from printf_uchar::@4
  to:printf_uchar::@return
printf_uchar::@return: scope:[printf_uchar]  from printf_uchar::@5
  return 
  to:@return

void printf_number_buffer(byte printf_number_buffer::buffer_sign , byte* printf_number_buffer::buffer_digits , byte printf_number_buffer::format_min_length , byte printf_number_buffer::format_justify_left , byte printf_number_buffer::format_sign_always , byte printf_number_buffer::format_zero_padding , byte printf_number_buffer::format_upper_case , byte printf_number_buffer::format_radix)
printf_number_buffer: scope:[printf_number_buffer]  from printf_uchar::@4 printf_uint::@4 printf_ulong::@4
  printf_number_buffer::format_upper_case#12 = phi( printf_uchar::@4/printf_number_buffer::format_upper_case#2, printf_uint::@4/printf_number_buffer::format_upper_case#1, printf_ulong::@4/printf_number_buffer::format_upper_case#0 )
  printf_number_buffer::buffer_sign#9 = phi( printf_uchar::@4/printf_number_buffer::buffer_sign#2, printf_uint::@4/printf_number_buffer::buffer_sign#1, printf_ulong::@4/printf_number_buffer::buffer_sign#0 )
  printf_number_buffer::buffer_digits#6 = phi( printf_uchar::@4/printf_number_buffer::buffer_digits#2, printf_uint::@4/printf_number_buffer::buffer_digits#1, printf_ulong::@4/printf_number_buffer::buffer_digits#0 )
  printf_number_buffer::format_zero_padding#6 = phi( printf_uchar::@4/printf_number_buffer::format_zero_padding#2, printf_uint::@4/printf_number_buffer::format_zero_padding#1, printf_ulong::@4/printf_number_buffer::format_zero_padding#0 )
  printf_number_buffer::format_justify_left#5 = phi( printf_uchar::@4/printf_number_buffer::format_justify_left#2, printf_uint::@4/printf_number_buffer::format_justify_left#1, printf_ulong::@4/printf_number_buffer::format_justify_left#0 )
  printf_number_buffer::format_min_length#3 = phi( printf_uchar::@4/printf_number_buffer::format_min_length#2, printf_uint::@4/printf_number_buffer::format_min_length#1, printf_ulong::@4/printf_number_buffer::format_min_length#0 )
  printf_number_buffer::padding#0 = 0
  printf_number_buffer::$26 = 0 != printf_number_buffer::format_min_length#3
  printf_number_buffer::$0 = ! printf_number_buffer::$26
  if(printf_number_buffer::$0) goto printf_number_buffer::@1
  to:printf_number_buffer::@6
printf_number_buffer::@1: scope:[printf_number_buffer]  from printf_number_buffer printf_number_buffer::@13 printf_number_buffer::@14
  printf_number_buffer::buffer_digits#14 = phi( printf_number_buffer/printf_number_buffer::buffer_digits#6, printf_number_buffer::@13/printf_number_buffer::buffer_digits#17, printf_number_buffer::@14/printf_number_buffer::buffer_digits#18 )
  printf_number_buffer::format_upper_case#9 = phi( printf_number_buffer/printf_number_buffer::format_upper_case#12, printf_number_buffer::@13/printf_number_buffer::format_upper_case#13, printf_number_buffer::@14/printf_number_buffer::format_upper_case#14 )
  printf_number_buffer::buffer_sign#7 = phi( printf_number_buffer/printf_number_buffer::buffer_sign#9, printf_number_buffer::@13/printf_number_buffer::buffer_sign#10, printf_number_buffer::@14/printf_number_buffer::buffer_sign#11 )
  printf_number_buffer::padding#3 = phi( printf_number_buffer/printf_number_buffer::padding#0, printf_number_buffer::@13/printf_number_buffer::padding#1, printf_number_buffer::@14/printf_number_buffer::padding#2 )
  printf_number_buffer::format_zero_padding#3 = phi( printf_number_buffer/printf_number_buffer::format_zero_padding#6, printf_number_buffer::@13/printf_number_buffer::format_zero_padding#7, printf_number_buffer::@14/printf_number_buffer::format_zero_padding#8 )
  printf_number_buffer::format_justify_left#3 = phi( printf_number_buffer/printf_number_buffer::format_justify_left#5, printf_number_buffer::@13/printf_number_buffer::format_justify_left#6, printf_number_buffer::@14/printf_number_buffer::format_justify_left#7 )
  printf_number_buffer::$27 = 0 != printf_number_buffer::format_justify_left#3
  printf_number_buffer::$1 = ! printf_number_buffer::$27
  printf_number_buffer::$28 = 0 != printf_number_buffer::format_zero_padding#3
  printf_number_buffer::$2 = ! printf_number_buffer::$28
  printf_number_buffer::$3 = printf_number_buffer::$1 && printf_number_buffer::$2
  printf_number_buffer::$4 = printf_number_buffer::$3 && printf_number_buffer::padding#3
  printf_number_buffer::$5 = ! printf_number_buffer::$4
  if(printf_number_buffer::$5) goto printf_number_buffer::@2
  to:printf_number_buffer::@8
printf_number_buffer::@6: scope:[printf_number_buffer]  from printf_number_buffer
  printf_number_buffer::format_upper_case#18 = phi( printf_number_buffer/printf_number_buffer::format_upper_case#12 )
  printf_number_buffer::format_zero_padding#18 = phi( printf_number_buffer/printf_number_buffer::format_zero_padding#6 )
  printf_number_buffer::format_justify_left#13 = phi( printf_number_buffer/printf_number_buffer::format_justify_left#5 )
  printf_number_buffer::format_min_length#7 = phi( printf_number_buffer/printf_number_buffer::format_min_length#3 )
  printf_number_buffer::buffer_sign#6 = phi( printf_number_buffer/printf_number_buffer::buffer_sign#9 )
  printf_number_buffer::buffer_digits#3 = phi( printf_number_buffer/printf_number_buffer::buffer_digits#6 )
  strlen::str#1 = printf_number_buffer::buffer_digits#3
  call strlen 
  strlen::return#2 = strlen::return#1
  to:printf_number_buffer::@15
printf_number_buffer::@15: scope:[printf_number_buffer]  from printf_number_buffer::@6
  printf_number_buffer::buffer_digits#20 = phi( printf_number_buffer::@6/printf_number_buffer::buffer_digits#3 )
  printf_number_buffer::format_upper_case#16 = phi( printf_number_buffer::@6/printf_number_buffer::format_upper_case#18 )
  printf_number_buffer::format_zero_padding#12 = phi( printf_number_buffer::@6/printf_number_buffer::format_zero_padding#18 )
  printf_number_buffer::format_justify_left#9 = phi( printf_number_buffer::@6/printf_number_buffer::format_justify_left#13 )
  printf_number_buffer::format_min_length#5 = phi( printf_number_buffer::@6/printf_number_buffer::format_min_length#7 )
  printf_number_buffer::buffer_sign#3 = phi( printf_number_buffer::@6/printf_number_buffer::buffer_sign#6 )
  strlen::return#4 = phi( printf_number_buffer::@6/strlen::return#2 )
  printf_number_buffer::$19 = strlen::return#4
  printf_number_buffer::len#0 = (signed byte)printf_number_buffer::$19
  printf_number_buffer::$29 = 0 != printf_number_buffer::buffer_sign#3
  printf_number_buffer::$20 = ! printf_number_buffer::$29
  if(printf_number_buffer::$20) goto printf_number_buffer::@13
  to:printf_number_buffer::@7
printf_number_buffer::@13: scope:[printf_number_buffer]  from printf_number_buffer::@15 printf_number_buffer::@7
  printf_number_buffer::buffer_digits#17 = phi( printf_number_buffer::@15/printf_number_buffer::buffer_digits#20, printf_number_buffer::@7/printf_number_buffer::buffer_digits#21 )
  printf_number_buffer::format_upper_case#13 = phi( printf_number_buffer::@15/printf_number_buffer::format_upper_case#16, printf_number_buffer::@7/printf_number_buffer::format_upper_case#17 )
  printf_number_buffer::buffer_sign#10 = phi( printf_number_buffer::@15/printf_number_buffer::buffer_sign#3, printf_number_buffer::@7/printf_number_buffer::buffer_sign#13 )
  printf_number_buffer::format_zero_padding#7 = phi( printf_number_buffer::@15/printf_number_buffer::format_zero_padding#12, printf_number_buffer::@7/printf_number_buffer::format_zero_padding#13 )
  printf_number_buffer::format_justify_left#6 = phi( printf_number_buffer::@15/printf_number_buffer::format_justify_left#9, printf_number_buffer::@7/printf_number_buffer::format_justify_left#10 )
  printf_number_buffer::len#2 = phi( printf_number_buffer::@15/printf_number_buffer::len#0, printf_number_buffer::@7/printf_number_buffer::len#1 )
  printf_number_buffer::format_min_length#4 = phi( printf_number_buffer::@15/printf_number_buffer::format_min_length#5, printf_number_buffer::@7/printf_number_buffer::format_min_length#6 )
  printf_number_buffer::$25 = (signed byte)printf_number_buffer::format_min_length#4
  printf_number_buffer::$21 = printf_number_buffer::$25 - printf_number_buffer::len#2
  printf_number_buffer::padding#1 = printf_number_buffer::$21
  printf_number_buffer::$22 = printf_number_buffer::padding#1 < 0
  printf_number_buffer::$23 = ! printf_number_buffer::$22
  if(printf_number_buffer::$23) goto printf_number_buffer::@1
  to:printf_number_buffer::@14
printf_number_buffer::@7: scope:[printf_number_buffer]  from printf_number_buffer::@15
  printf_number_buffer::buffer_digits#21 = phi( printf_number_buffer::@15/printf_number_buffer::buffer_digits#20 )
  printf_number_buffer::format_upper_case#17 = phi( printf_number_buffer::@15/printf_number_buffer::format_upper_case#16 )
  printf_number_buffer::buffer_sign#13 = phi( printf_number_buffer::@15/printf_number_buffer::buffer_sign#3 )
  printf_number_buffer::format_zero_padding#13 = phi( printf_number_buffer::@15/printf_number_buffer::format_zero_padding#12 )
  printf_number_buffer::format_justify_left#10 = phi( printf_number_buffer::@15/printf_number_buffer::format_justify_left#9 )
  printf_number_buffer::format_min_length#6 = phi( printf_number_buffer::@15/printf_number_buffer::format_min_length#5 )
  printf_number_buffer::len#3 = phi( printf_number_buffer::@15/printf_number_buffer::len#0 )
  printf_number_buffer::len#1 = ++ printf_number_buffer::len#3
  to:printf_number_buffer::@13
printf_number_buffer::@14: scope:[printf_number_buffer]  from printf_number_buffer::@13
  printf_number_buffer::buffer_digits#18 = phi( printf_number_buffer::@13/printf_number_buffer::buffer_digits#17 )
  printf_number_buffer::format_upper_case#14 = phi( printf_number_buffer::@13/printf_number_buffer::format_upper_case#13 )
  printf_number_buffer::buffer_sign#11 = phi( printf_number_buffer::@13/printf_number_buffer::buffer_sign#10 )
  printf_number_buffer::format_zero_padding#8 = phi( printf_number_buffer::@13/printf_number_buffer::format_zero_padding#7 )
  printf_number_buffer::format_justify_left#7 = phi( printf_number_buffer::@13/printf_number_buffer::format_justify_left#6 )
  printf_number_buffer::padding#2 = 0
  to:printf_number_buffer::@1
printf_number_buffer::@2: scope:[printf_number_buffer]  from printf_number_buffer::@1 printf_number_buffer::@16
  printf_number_buffer::format_justify_left#18 = phi( printf_number_buffer::@1/printf_number_buffer::format_justify_left#3, printf_number_buffer::@16/printf_number_buffer::format_justify_left#20 )
  printf_number_buffer::buffer_digits#12 = phi( printf_number_buffer::@1/printf_number_buffer::buffer_digits#14, printf_number_buffer::@16/printf_number_buffer::buffer_digits#15 )
  printf_number_buffer::format_upper_case#7 = phi( printf_number_buffer::@1/printf_number_buffer::format_upper_case#9, printf_number_buffer::@16/printf_number_buffer::format_upper_case#10 )
  printf_number_buffer::padding#10 = phi( printf_number_buffer::@1/printf_number_buffer::padding#3, printf_number_buffer::@16/printf_number_buffer::padding#12 )
  printf_number_buffer::format_zero_padding#10 = phi( printf_number_buffer::@1/printf_number_buffer::format_zero_padding#3, printf_number_buffer::@16/printf_number_buffer::format_zero_padding#14 )
  printf_number_buffer::buffer_sign#4 = phi( printf_number_buffer::@1/printf_number_buffer::buffer_sign#7, printf_number_buffer::@16/printf_number_buffer::buffer_sign#8 )
  printf_number_buffer::$30 = 0 != printf_number_buffer::buffer_sign#4
  printf_number_buffer::$7 = ! printf_number_buffer::$30
  if(printf_number_buffer::$7) goto printf_number_buffer::@3
  to:printf_number_buffer::@9
printf_number_buffer::@8: scope:[printf_number_buffer]  from printf_number_buffer::@1
  printf_number_buffer::format_justify_left#22 = phi( printf_number_buffer::@1/printf_number_buffer::format_justify_left#3 )
  printf_number_buffer::buffer_digits#19 = phi( printf_number_buffer::@1/printf_number_buffer::buffer_digits#14 )
  printf_number_buffer::format_upper_case#15 = phi( printf_number_buffer::@1/printf_number_buffer::format_upper_case#9 )
  printf_number_buffer::format_zero_padding#19 = phi( printf_number_buffer::@1/printf_number_buffer::format_zero_padding#3 )
  printf_number_buffer::buffer_sign#12 = phi( printf_number_buffer::@1/printf_number_buffer::buffer_sign#7 )
  printf_number_buffer::padding#4 = phi( printf_number_buffer::@1/printf_number_buffer::padding#3 )
  printf_padding::pad#0 = ' '
  printf_padding::length#0 = (byte)printf_number_buffer::padding#4
  call printf_padding 
  to:printf_number_buffer::@16
printf_number_buffer::@16: scope:[printf_number_buffer]  from printf_number_buffer::@8
  printf_number_buffer::format_justify_left#20 = phi( printf_number_buffer::@8/printf_number_buffer::format_justify_left#22 )
  printf_number_buffer::buffer_digits#15 = phi( printf_number_buffer::@8/printf_number_buffer::buffer_digits#19 )
  printf_number_buffer::format_upper_case#10 = phi( printf_number_buffer::@8/printf_number_buffer::format_upper_case#15 )
  printf_number_buffer::padding#12 = phi( printf_number_buffer::@8/printf_number_buffer::padding#4 )
  printf_number_buffer::format_zero_padding#14 = phi( printf_number_buffer::@8/printf_number_buffer::format_zero_padding#19 )
  printf_number_buffer::buffer_sign#8 = phi( printf_number_buffer::@8/printf_number_buffer::buffer_sign#12 )
  to:printf_number_buffer::@2
printf_number_buffer::@3: scope:[printf_number_buffer]  from printf_number_buffer::@17 printf_number_buffer::@2
  printf_number_buffer::format_justify_left#15 = phi( printf_number_buffer::@17/printf_number_buffer::format_justify_left#17, printf_number_buffer::@2/printf_number_buffer::format_justify_left#18 )
  printf_number_buffer::buffer_digits#10 = phi( printf_number_buffer::@17/printf_number_buffer::buffer_digits#11, printf_number_buffer::@2/printf_number_buffer::buffer_digits#12 )
  printf_number_buffer::format_upper_case#5 = phi( printf_number_buffer::@17/printf_number_buffer::format_upper_case#6, printf_number_buffer::@2/printf_number_buffer::format_upper_case#7 )
  printf_number_buffer::padding#5 = phi( printf_number_buffer::@17/printf_number_buffer::padding#9, printf_number_buffer::@2/printf_number_buffer::padding#10 )
  printf_number_buffer::format_zero_padding#4 = phi( printf_number_buffer::@17/printf_number_buffer::format_zero_padding#9, printf_number_buffer::@2/printf_number_buffer::format_zero_padding#10 )
  printf_number_buffer::$9 = printf_number_buffer::format_zero_padding#4 && printf_number_buffer::padding#5
  printf_number_buffer::$10 = ! printf_number_buffer::$9
  if(printf_number_buffer::$10) goto printf_number_buffer::@4
  to:printf_number_buffer::@10
printf_number_buffer::@9: scope:[printf_number_buffer]  from printf_number_buffer::@2
  printf_number_buffer::format_justify_left#21 = phi( printf_number_buffer::@2/printf_number_buffer::format_justify_left#18 )
  printf_number_buffer::buffer_digits#16 = phi( printf_number_buffer::@2/printf_number_buffer::buffer_digits#12 )
  printf_number_buffer::format_upper_case#11 = phi( printf_number_buffer::@2/printf_number_buffer::format_upper_case#7 )
  printf_number_buffer::padding#13 = phi( printf_number_buffer::@2/printf_number_buffer::padding#10 )
  printf_number_buffer::format_zero_padding#15 = phi( printf_number_buffer::@2/printf_number_buffer::format_zero_padding#10 )
  printf_number_buffer::buffer_sign#5 = phi( printf_number_buffer::@2/printf_number_buffer::buffer_sign#4 )
  cputc::c#2 = printf_number_buffer::buffer_sign#5
  call cputc 
  to:printf_number_buffer::@17
printf_number_buffer::@17: scope:[printf_number_buffer]  from printf_number_buffer::@9
  printf_number_buffer::format_justify_left#17 = phi( printf_number_buffer::@9/printf_number_buffer::format_justify_left#21 )
  printf_number_buffer::buffer_digits#11 = phi( printf_number_buffer::@9/printf_number_buffer::buffer_digits#16 )
  printf_number_buffer::format_upper_case#6 = phi( printf_number_buffer::@9/printf_number_buffer::format_upper_case#11 )
  printf_number_buffer::padding#9 = phi( printf_number_buffer::@9/printf_number_buffer::padding#13 )
  printf_number_buffer::format_zero_padding#9 = phi( printf_number_buffer::@9/printf_number_buffer::format_zero_padding#15 )
  to:printf_number_buffer::@3
printf_number_buffer::@4: scope:[printf_number_buffer]  from printf_number_buffer::@18 printf_number_buffer::@3
  printf_number_buffer::padding#15 = phi( printf_number_buffer::@18/printf_number_buffer::padding#16, printf_number_buffer::@3/printf_number_buffer::padding#5 )
  printf_number_buffer::format_justify_left#12 = phi( printf_number_buffer::@18/printf_number_buffer::format_justify_left#14, printf_number_buffer::@3/printf_number_buffer::format_justify_left#15 )
  printf_number_buffer::format_zero_padding#17 = phi( printf_number_buffer::@18/printf_number_buffer::format_zero_padding#20, printf_number_buffer::@3/printf_number_buffer::format_zero_padding#4 )
  printf_number_buffer::buffer_digits#8 = phi( printf_number_buffer::@18/printf_number_buffer::buffer_digits#9, printf_number_buffer::@3/printf_number_buffer::buffer_digits#10 )
  printf_number_buffer::format_upper_case#3 = phi( printf_number_buffer::@18/printf_number_buffer::format_upper_case#4, printf_number_buffer::@3/printf_number_buffer::format_upper_case#5 )
  printf_number_buffer::$31 = 0 != printf_number_buffer::format_upper_case#3
  printf_number_buffer::$12 = ! printf_number_buffer::$31
  if(printf_number_buffer::$12) goto printf_number_buffer::@5
  to:printf_number_buffer::@11
printf_number_buffer::@10: scope:[printf_number_buffer]  from printf_number_buffer::@3
  printf_number_buffer::format_justify_left#19 = phi( printf_number_buffer::@3/printf_number_buffer::format_justify_left#15 )
  printf_number_buffer::format_zero_padding#22 = phi( printf_number_buffer::@3/printf_number_buffer::format_zero_padding#4 )
  printf_number_buffer::buffer_digits#13 = phi( printf_number_buffer::@3/printf_number_buffer::buffer_digits#10 )
  printf_number_buffer::format_upper_case#8 = phi( printf_number_buffer::@3/printf_number_buffer::format_upper_case#5 )
  printf_number_buffer::padding#6 = phi( printf_number_buffer::@3/printf_number_buffer::padding#5 )
  printf_padding::pad#1 = '0'
  printf_padding::length#1 = (byte)printf_number_buffer::padding#6
  call printf_padding 
  to:printf_number_buffer::@18
printf_number_buffer::@18: scope:[printf_number_buffer]  from printf_number_buffer::@10
  printf_number_buffer::padding#16 = phi( printf_number_buffer::@10/printf_number_buffer::padding#6 )
  printf_number_buffer::format_justify_left#14 = phi( printf_number_buffer::@10/printf_number_buffer::format_justify_left#19 )
  printf_number_buffer::format_zero_padding#20 = phi( printf_number_buffer::@10/printf_number_buffer::format_zero_padding#22 )
  printf_number_buffer::buffer_digits#9 = phi( printf_number_buffer::@10/printf_number_buffer::buffer_digits#13 )
  printf_number_buffer::format_upper_case#4 = phi( printf_number_buffer::@10/printf_number_buffer::format_upper_case#8 )
  to:printf_number_buffer::@4
printf_number_buffer::@5: scope:[printf_number_buffer]  from printf_number_buffer::@20 printf_number_buffer::@4
  printf_number_buffer::padding#11 = phi( printf_number_buffer::@20/printf_number_buffer::padding#14, printf_number_buffer::@4/printf_number_buffer::padding#15 )
  printf_number_buffer::format_justify_left#8 = phi( printf_number_buffer::@20/printf_number_buffer::format_justify_left#11, printf_number_buffer::@4/printf_number_buffer::format_justify_left#12 )
  printf_number_buffer::format_zero_padding#11 = phi( printf_number_buffer::@20/printf_number_buffer::format_zero_padding#16, printf_number_buffer::@4/printf_number_buffer::format_zero_padding#17 )
  printf_number_buffer::buffer_digits#4 = phi( printf_number_buffer::@20/printf_number_buffer::buffer_digits#7, printf_number_buffer::@4/printf_number_buffer::buffer_digits#8 )
  cputs::s#1 = printf_number_buffer::buffer_digits#4
  call cputs 
  to:printf_number_buffer::@19
printf_number_buffer::@19: scope:[printf_number_buffer]  from printf_number_buffer::@5
  printf_number_buffer::padding#7 = phi( printf_number_buffer::@5/printf_number_buffer::padding#11 )
  printf_number_buffer::format_justify_left#4 = phi( printf_number_buffer::@5/printf_number_buffer::format_justify_left#8 )
  printf_number_buffer::format_zero_padding#5 = phi( printf_number_buffer::@5/printf_number_buffer::format_zero_padding#11 )
  printf_number_buffer::$32 = 0 != printf_number_buffer::format_zero_padding#5
  printf_number_buffer::$14 = ! printf_number_buffer::$32
  printf_number_buffer::$15 = printf_number_buffer::format_justify_left#4 && printf_number_buffer::$14
  printf_number_buffer::$16 = printf_number_buffer::$15 && printf_number_buffer::padding#7
  printf_number_buffer::$17 = ! printf_number_buffer::$16
  if(printf_number_buffer::$17) goto printf_number_buffer::@return
  to:printf_number_buffer::@12
printf_number_buffer::@11: scope:[printf_number_buffer]  from printf_number_buffer::@4
  printf_number_buffer::padding#17 = phi( printf_number_buffer::@4/printf_number_buffer::padding#15 )
  printf_number_buffer::format_justify_left#16 = phi( printf_number_buffer::@4/printf_number_buffer::format_justify_left#12 )
  printf_number_buffer::format_zero_padding#21 = phi( printf_number_buffer::@4/printf_number_buffer::format_zero_padding#17 )
  printf_number_buffer::buffer_digits#5 = phi( printf_number_buffer::@4/printf_number_buffer::buffer_digits#8 )
  strupr::str#0 = printf_number_buffer::buffer_digits#5
  call strupr 
  strupr::return#2 = strupr::return#1
  to:printf_number_buffer::@20
printf_number_buffer::@20: scope:[printf_number_buffer]  from printf_number_buffer::@11
  printf_number_buffer::padding#14 = phi( printf_number_buffer::@11/printf_number_buffer::padding#17 )
  printf_number_buffer::format_justify_left#11 = phi( printf_number_buffer::@11/printf_number_buffer::format_justify_left#16 )
  printf_number_buffer::format_zero_padding#16 = phi( printf_number_buffer::@11/printf_number_buffer::format_zero_padding#21 )
  printf_number_buffer::buffer_digits#7 = phi( printf_number_buffer::@11/printf_number_buffer::buffer_digits#5 )
  to:printf_number_buffer::@5
printf_number_buffer::@12: scope:[printf_number_buffer]  from printf_number_buffer::@19
  printf_number_buffer::padding#8 = phi( printf_number_buffer::@19/printf_number_buffer::padding#7 )
  printf_padding::pad#2 = ' '
  printf_padding::length#2 = (byte)printf_number_buffer::padding#8
  call printf_padding 
  to:printf_number_buffer::@21
printf_number_buffer::@21: scope:[printf_number_buffer]  from printf_number_buffer::@12
  to:printf_number_buffer::@return
printf_number_buffer::@return: scope:[printf_number_buffer]  from printf_number_buffer::@19 printf_number_buffer::@21
  return 
  to:@return

void main()
main: scope:[main]  from __start::@1
  call clrscr 
  to:main::@1
main::@1: scope:[main]  from main
  cputs::s#2 = main::s
  call cputs 
  to:main::@2
main::@2: scope:[main]  from main::@1
  cputs::s#3 = main::s1
  call cputs 
  to:main::@3
main::@3: scope:[main]  from main::@2
  printf_uint::uvalue#0 = 8
  printf_uint::format_min_length#0 = 0
  printf_uint::format_justify_left#0 = 0
  printf_uint::format_sign_always#0 = 0
  printf_uint::format_zero_padding#0 = 0
  printf_uint::format_upper_case#0 = 0
  printf_uint::format_radix#0 = DECIMAL
  call printf_uint 
  to:main::@4
main::@4: scope:[main]  from main::@3
  stackpush(byte) = 1
  callexecute queen 
  sideeffect stackpullbytes(1)
  cputs::s#4 = main::s2
  call cputs 
  to:main::@5
main::@5: scope:[main]  from main::@4
  printf_ulong::uvalue#0 = count
  printf_ulong::format_min_length#0 = 0
  printf_ulong::format_justify_left#0 = 0
  printf_ulong::format_sign_always#0 = 0
  printf_ulong::format_zero_padding#0 = 0
  printf_ulong::format_upper_case#0 = 0
  printf_ulong::format_radix#0 = DECIMAL
  call printf_ulong 
  to:main::@6
main::@6: scope:[main]  from main::@5
  cputs::s#5 = main::s3
  call cputs 
  to:main::@7
main::@7: scope:[main]  from main::@6
  to:main::@return
main::@return: scope:[main]  from main::@7
  return 
  to:@return

__stackcall void queen(byte queen::row)
queen: scope:[queen]  from
  queen::row#0 = stackidx(byte,queen::OFFSET_STACK_ROW)
  queen::r = queen::row#0
  queen::column = 1
  to:queen::@1
queen::@1: scope:[queen]  from queen queen::@3
  queen::$0 = queen::column <= 8
  if(queen::$0) goto queen::@2
  to:queen::@return
queen::@2: scope:[queen]  from queen::@1
  legal::row#0 = queen::r
  legal::column#0 = queen::column
  call legal 
  legal::return#0 = legal::return#4
  to:queen::@7
queen::@7: scope:[queen]  from queen::@2
  legal::return#5 = phi( queen::@2/legal::return#0 )
  queen::$1 = legal::return#5
  queen::$7 = 0 != queen::$1
  queen::$2 = ! queen::$7
  if(queen::$2) goto queen::@3
  to:queen::@5
queen::@3: scope:[queen]  from queen::@6 queen::@7 queen::@8
  queen::column = ++ queen::column
  to:queen::@1
queen::@5: scope:[queen]  from queen::@7
  board[queen::r] = queen::column
  queen::$3 = queen::r == 8
  if(queen::$3) goto queen::@4
  to:queen::@6
queen::@4: scope:[queen]  from queen::@5
  count = ++ count
  call print 
  to:queen::@8
queen::@8: scope:[queen]  from queen::@4
  to:queen::@3
queen::@6: scope:[queen]  from queen::@5
  asm { ldacolumn pha ldar pha  }
  queen::$4 = queen::r + 1
  stackpush(byte) = queen::$4
  callexecute queen 
  sideeffect stackpullbytes(1)
  asm { pla star pla stacolumn  }
  to:queen::@3
queen::@return: scope:[queen]  from queen::@1
  return 
  to:@return

byte legal(byte legal::row , byte legal::column)
legal: scope:[legal]  from queen::@2
  legal::column#4 = phi( queen::@2/legal::column#0 )
  legal::row#3 = phi( queen::@2/legal::row#0 )
  legal::i#0 = 1
  to:legal::@1
legal::@1: scope:[legal]  from legal legal::@5
  legal::column#3 = phi( legal/legal::column#4, legal::@5/legal::column#5 )
  legal::i#2 = phi( legal/legal::i#0, legal::@5/legal::i#1 )
  legal::row#1 = phi( legal/legal::row#3, legal::@5/legal::row#4 )
  legal::$0 = legal::row#1 - 1
  legal::$1 = legal::i#2 <= legal::$0
  if(legal::$1) goto legal::@2
  to:legal::@3
legal::@2: scope:[legal]  from legal::@1
  legal::row#6 = phi( legal::@1/legal::row#1 )
  legal::column#1 = phi( legal::@1/legal::column#3 )
  legal::i#3 = phi( legal::@1/legal::i#2 )
  legal::$2 = board[legal::i#3] == legal::column#1
  if(legal::$2) goto legal::@4
  to:legal::@6
legal::@3: scope:[legal]  from legal::@1
  legal::return#1 = 1
  to:legal::@return
legal::@4: scope:[legal]  from legal::@2
  legal::return#2 = 0
  to:legal::@return
legal::@6: scope:[legal]  from legal::@2
  legal::row#5 = phi( legal::@2/legal::row#6 )
  legal::column#2 = phi( legal::@2/legal::column#1 )
  legal::i#4 = phi( legal::@2/legal::i#3 )
  diff::a#0 = board[legal::i#4]
  diff::b#0 = legal::column#2
  call diff 
  diff::return#0 = diff::return#4
  to:legal::@8
legal::@8: scope:[legal]  from legal::@6
  legal::column#7 = phi( legal::@6/legal::column#2 )
  legal::row#2 = phi( legal::@6/legal::row#5 )
  legal::i#5 = phi( legal::@6/legal::i#4 )
  diff::return#5 = phi( legal::@6/diff::return#0 )
  legal::$3 = diff::return#5
  diff::a#1 = legal::i#5
  diff::b#1 = legal::row#2
  call diff 
  diff::return#1 = diff::return#4
  to:legal::@9
legal::@9: scope:[legal]  from legal::@8
  legal::column#6 = phi( legal::@8/legal::column#7 )
  legal::row#7 = phi( legal::@8/legal::row#2 )
  legal::i#7 = phi( legal::@8/legal::i#5 )
  diff::return#6 = phi( legal::@8/diff::return#1 )
  legal::$4 = diff::return#6
  legal::$5 = legal::$3 == legal::$4
  legal::$6 = ! legal::$5
  if(legal::$6) goto legal::@5
  to:legal::@7
legal::@7: scope:[legal]  from legal::@9
  legal::return#3 = 0
  to:legal::@return
legal::@return: scope:[legal]  from legal::@3 legal::@4 legal::@7
  legal::return#6 = phi( legal::@3/legal::return#1, legal::@4/legal::return#2, legal::@7/legal::return#3 )
  legal::return#4 = legal::return#6
  return 
  to:@return
legal::@5: scope:[legal]  from legal::@9
  legal::column#5 = phi( legal::@9/legal::column#6 )
  legal::row#4 = phi( legal::@9/legal::row#7 )
  legal::i#6 = phi( legal::@9/legal::i#7 )
  legal::i#1 = ++ legal::i#6
  to:legal::@1

byte diff(byte diff::a , byte diff::b)
diff: scope:[diff]  from legal::@6 legal::@8
  diff::b#2 = phi( legal::@6/diff::b#0, legal::@8/diff::b#1 )
  diff::a#2 = phi( legal::@6/diff::a#0, legal::@8/diff::a#1 )
  diff::$0 = diff::a#2 < diff::b#2
  if(diff::$0) goto diff::@1
  to:diff::@2
diff::@1: scope:[diff]  from diff
  diff::a#3 = phi( diff/diff::a#2 )
  diff::b#3 = phi( diff/diff::b#2 )
  diff::$2 = diff::b#3 - diff::a#3
  diff::return#2 = diff::$2
  to:diff::@return
diff::@2: scope:[diff]  from diff
  diff::b#4 = phi( diff/diff::b#2 )
  diff::a#4 = phi( diff/diff::a#2 )
  diff::$1 = diff::a#4 - diff::b#4
  diff::return#3 = diff::$1
  to:diff::@return
diff::@return: scope:[diff]  from diff::@1 diff::@2
  diff::return#7 = phi( diff::@1/diff::return#2, diff::@2/diff::return#3 )
  diff::return#4 = diff::return#7
  return 
  to:@return

void print()
print: scope:[print]  from queen::@4
  gotoxy::x#3 = 0
  gotoxy::y#3 = 5
  call gotoxy 
  to:print::@12
print::@12: scope:[print]  from print
  cputs::s#6 = print::s
  call cputs 
  to:print::@13
print::@13: scope:[print]  from print::@12
  printf_ulong::uvalue#1 = count
  printf_ulong::format_min_length#1 = 0
  printf_ulong::format_justify_left#1 = 0
  printf_ulong::format_sign_always#1 = 0
  printf_ulong::format_zero_padding#1 = 0
  printf_ulong::format_upper_case#1 = 0
  printf_ulong::format_radix#1 = DECIMAL
  call printf_ulong 
  to:print::@14
print::@14: scope:[print]  from print::@13
  cputs::s#7 = print::s1
  call cputs 
  to:print::@15
print::@15: scope:[print]  from print::@14
  print::i#0 = 1
  to:print::@1
print::@1: scope:[print]  from print::@15 print::@16
  print::i#2 = phi( print::@15/print::i#0, print::@16/print::i#1 )
  print::$2 = print::i#2 <= 8
  if(print::$2) goto print::@2
  to:print::@3
print::@2: scope:[print]  from print::@1
  print::i#3 = phi( print::@1/print::i#2 )
  printf_uchar::uvalue#0 = print::i#3
  printf_uchar::format_min_length#0 = 0
  printf_uchar::format_justify_left#0 = 0
  printf_uchar::format_sign_always#0 = 0
  printf_uchar::format_zero_padding#0 = 0
  printf_uchar::format_upper_case#0 = 0
  printf_uchar::format_radix#0 = HEXADECIMAL
  call printf_uchar 
  to:print::@16
print::@16: scope:[print]  from print::@2
  print::i#4 = phi( print::@2/print::i#3 )
  print::i#1 = ++ print::i#4
  to:print::@1
print::@3: scope:[print]  from print::@1
  print::i1#0 = 1
  to:print::@4
print::@4: scope:[print]  from print::@3 print::@8
  print::i1#2 = phi( print::@3/print::i1#0, print::@8/print::i1#1 )
  print::$4 = print::i1#2 <= 8
  if(print::$4) goto print::@5
  to:print::@return
print::@5: scope:[print]  from print::@4
  print::i1#6 = phi( print::@4/print::i1#2 )
  cputs::s#8 = print::s2
  call cputs 
  to:print::@17
print::@17: scope:[print]  from print::@5
  print::i1#3 = phi( print::@5/print::i1#6 )
  printf_uchar::uvalue#1 = print::i1#3
  printf_uchar::format_min_length#1 = 0
  printf_uchar::format_justify_left#1 = 0
  printf_uchar::format_sign_always#1 = 0
  printf_uchar::format_zero_padding#1 = 0
  printf_uchar::format_upper_case#1 = 0
  printf_uchar::format_radix#1 = HEXADECIMAL
  call printf_uchar 
  to:print::@18
print::@18: scope:[print]  from print::@17
  print::i1#9 = phi( print::@17/print::i1#3 )
  print::j#0 = 1
  to:print::@6
print::@6: scope:[print]  from print::@10 print::@18
  print::i1#7 = phi( print::@10/print::i1#8, print::@18/print::i1#9 )
  print::j#2 = phi( print::@10/print::j#1, print::@18/print::j#0 )
  print::$6 = print::j#2 <= 8
  if(print::$6) goto print::@7
  to:print::@8
print::@7: scope:[print]  from print::@6
  print::j#3 = phi( print::@6/print::j#2 )
  print::i1#4 = phi( print::@6/print::i1#7 )
  print::$7 = board[print::i1#4] == print::j#3
  if(print::$7) goto print::@9
  to:print::@11
print::@8: scope:[print]  from print::@6
  print::i1#5 = phi( print::@6/print::i1#7 )
  print::i1#1 = ++ print::i1#5
  to:print::@4
print::@9: scope:[print]  from print::@7
  print::i1#12 = phi( print::@7/print::i1#4 )
  print::j#7 = phi( print::@7/print::j#3 )
  cputs::s#9 = print::s3
  call cputs 
  to:print::@19
print::@19: scope:[print]  from print::@9
  print::i1#10 = phi( print::@9/print::i1#12 )
  print::j#5 = phi( print::@9/print::j#7 )
  to:print::@10
print::@11: scope:[print]  from print::@7
  print::i1#13 = phi( print::@7/print::i1#4 )
  print::j#8 = phi( print::@7/print::j#3 )
  cputs::s#10 = print::s4
  call cputs 
  to:print::@20
print::@20: scope:[print]  from print::@11
  print::i1#11 = phi( print::@11/print::i1#13 )
  print::j#6 = phi( print::@11/print::j#8 )
  to:print::@10
print::@10: scope:[print]  from print::@19 print::@20
  print::i1#8 = phi( print::@19/print::i1#10, print::@20/print::i1#11 )
  print::j#4 = phi( print::@19/print::j#5, print::@20/print::j#6 )
  print::j#1 = ++ print::j#4
  to:print::@6
print::@return: scope:[print]  from print::@4
  return 
  to:@return

void __start()
__start: scope:[__start]  from
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  conio_cursor_x = 0
  conio_cursor_y = 0
  conio_line_text = CONIO_SCREEN_TEXT
  conio_line_color = CONIO_SCREEN_COLORS
  conio_textcolor = CONIO_TEXTCOLOR_DEFAULT
  conio_scroll_enable = 1
  count = 0
  call conio_c64_init 
  to:__start::@2
__start::@2: scope:[__start]  from __start::__init1
  to:__start::@1
__start::@1: scope:[__start]  from __start::@2
  call main 
  to:__start::@3
__start::@3: scope:[__start]  from __start::@1
  to:__start::@return
__start::@return: scope:[__start]  from __start::@3
  return 
  to:@return

SYMBOL TABLE SSA
constant byte BINARY = 2
constant byte* const COLORRAM = (byte*)$d800
constant byte* const CONIO_SCREEN_COLORS = COLORRAM
constant byte* const CONIO_SCREEN_TEXT = DEFAULT_SCREEN
constant const byte CONIO_TEXTCOLOR_DEFAULT = LIGHT_BLUE
constant byte DECIMAL = $a
constant byte* const DEFAULT_SCREEN = (byte*)$400
constant byte* DIGITS[]  = "0123456789abcdef"z
constant byte HEXADECIMAL = $10
constant const byte LIGHT_BLUE = $e
constant byte OCTAL = 8
constant byte OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
constant byte OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN = 0
constant byte RADIX::BINARY = 2
constant byte RADIX::DECIMAL = $a
constant byte RADIX::HEXADECIMAL = $10
constant byte RADIX::OCTAL = 8
constant word* RADIX_BINARY_VALUES[]  = { $8000, $4000, $2000, $1000, $800, $400, $200, $100, $80, $40, $20, $10, 8, 4, 2 }
constant byte* RADIX_BINARY_VALUES_CHAR[]  = { $80, $40, $20, $10, 8, 4, 2 }
constant dword* RADIX_BINARY_VALUES_LONG[]  = { $80000000, $40000000, $20000000, $10000000, $8000000, $4000000, $2000000, $1000000, $800000, $400000, $200000, $100000, $80000, $40000, $20000, $10000, $8000, $4000, $2000, $1000, $800, $400, $200, $100, $80, $40, $20, $10, 8, 4, 2 }
constant word* RADIX_DECIMAL_VALUES[]  = { $2710, $3e8, $64, $a }
constant byte* RADIX_DECIMAL_VALUES_CHAR[]  = { $64, $a }
constant dword* RADIX_DECIMAL_VALUES_LONG[]  = { $3b9aca00, $5f5e100, $989680, $f4240, $186a0, $2710, $3e8, $64, $a }
constant word* RADIX_HEXADECIMAL_VALUES[]  = { $1000, $100, $10 }
constant byte* RADIX_HEXADECIMAL_VALUES_CHAR[]  = { $10 }
constant dword* RADIX_HEXADECIMAL_VALUES_LONG[]  = { $10000000, $1000000, $100000, $10000, $1000, $100, $10 }
constant word* RADIX_OCTAL_VALUES[]  = { $8000, $1000, $200, $40, 8 }
constant byte* RADIX_OCTAL_VALUES_CHAR[]  = { $40, 8 }
constant dword* RADIX_OCTAL_VALUES_LONG[]  = { $40000000, $8000000, $1000000, $200000, $40000, $8000, $1000, $200, $40, 8 }
constant byte SIZEOF_DWORD = 4
constant byte SIZEOF_WORD = 2
constant word STACK_BASE = $103
void __start()
constant byte* board[$14]  = { fill( $14, 0) }
void clrscr()
bool~ clrscr::$0
bool~ clrscr::$1
byte clrscr::c
byte clrscr::c#0
byte clrscr::c#1
byte clrscr::c#2
byte clrscr::c#3
byte clrscr::l
byte clrscr::l#0
byte clrscr::l#1
byte clrscr::l#2
byte clrscr::l#3
byte clrscr::l#4
byte clrscr::l#5
byte clrscr::l#6
byte* clrscr::line_cols
byte* clrscr::line_cols#0
byte* clrscr::line_cols#1
byte* clrscr::line_cols#2
byte* clrscr::line_cols#3
byte* clrscr::line_cols#4
byte* clrscr::line_cols#5
byte* clrscr::line_cols#6
byte* clrscr::line_text
byte* clrscr::line_text#0
byte* clrscr::line_text#1
byte* clrscr::line_text#2
byte* clrscr::line_text#3
byte* clrscr::line_text#4
byte* clrscr::line_text#5
byte* clrscr::line_text#6
void conio_c64_init()
bool~ conio_c64_init::$0
bool~ conio_c64_init::$1
constant byte* const conio_c64_init::BASIC_CURSOR_LINE = (byte*)$d6
byte conio_c64_init::line
byte conio_c64_init::line#0
byte conio_c64_init::line#1
byte conio_c64_init::line#2
byte conio_cursor_x loadstore
byte conio_cursor_y loadstore
byte* conio_line_color loadstore
byte* conio_line_text loadstore
byte conio_scroll_enable loadstore
byte conio_textcolor loadstore
dword count loadstore
void cputc(byte cputc::c)
bool~ cputc::$0
bool~ cputc::$1
bool~ cputc::$2
byte cputc::c
byte cputc::c#0
byte cputc::c#1
byte cputc::c#2
byte cputc::c#3
byte cputc::c#4
void cputln()
void cputs(const byte* cputs::s)
byte~ cputs::$0
bool~ cputs::$2
byte cputs::c
byte cputs::c#0
byte cputs::c#1
byte cputs::c#2
const byte* cputs::s
const byte* cputs::s#0
const byte* cputs::s#1
const byte* cputs::s#10
const byte* cputs::s#11
const byte* cputs::s#12
const byte* cputs::s#13
const byte* cputs::s#14
const byte* cputs::s#2
const byte* cputs::s#3
const byte* cputs::s#4
const byte* cputs::s#5
const byte* cputs::s#6
const byte* cputs::s#7
const byte* cputs::s#8
const byte* cputs::s#9
void cscroll()
bool~ cscroll::$0
bool~ cscroll::$1
bool~ cscroll::$7
byte diff(byte diff::a , byte diff::b)
bool~ diff::$0
byte~ diff::$1
byte~ diff::$2
byte diff::a
byte diff::a#0
byte diff::a#1
byte diff::a#2
byte diff::a#3
byte diff::a#4
byte diff::b
byte diff::b#0
byte diff::b#1
byte diff::b#2
byte diff::b#3
byte diff::b#4
byte diff::return
byte diff::return#0
byte diff::return#1
byte diff::return#2
byte diff::return#3
byte diff::return#4
byte diff::return#5
byte diff::return#6
byte diff::return#7
void gotoxy(byte gotoxy::x , byte gotoxy::y)
bool~ gotoxy::$0
bool~ gotoxy::$1
bool~ gotoxy::$2
bool~ gotoxy::$3
number~ gotoxy::$4
byte*~ gotoxy::$5
byte*~ gotoxy::$6
word~ gotoxy::$7
word gotoxy::line_offset
word gotoxy::line_offset#0
byte gotoxy::x
byte gotoxy::x#0
byte gotoxy::x#1
byte gotoxy::x#2
byte gotoxy::x#3
byte gotoxy::x#4
byte gotoxy::x#5
byte gotoxy::x#6
byte gotoxy::x#7
byte gotoxy::y
byte gotoxy::y#0
byte gotoxy::y#1
byte gotoxy::y#2
byte gotoxy::y#3
byte gotoxy::y#4
byte gotoxy::y#5
byte gotoxy::y#6
byte gotoxy::y#7
byte legal(byte legal::row , byte legal::column)
number~ legal::$0
bool~ legal::$1
bool~ legal::$2
byte~ legal::$3
byte~ legal::$4
bool~ legal::$5
bool~ legal::$6
byte legal::column
byte legal::column#0
byte legal::column#1
byte legal::column#2
byte legal::column#3
byte legal::column#4
byte legal::column#5
byte legal::column#6
byte legal::column#7
byte legal::i
byte legal::i#0
byte legal::i#1
byte legal::i#2
byte legal::i#3
byte legal::i#4
byte legal::i#5
byte legal::i#6
byte legal::i#7
byte legal::return
byte legal::return#0
byte legal::return#1
byte legal::return#2
byte legal::return#3
byte legal::return#4
byte legal::return#5
byte legal::return#6
byte legal::row
byte legal::row#0
byte legal::row#1
byte legal::row#2
byte legal::row#3
byte legal::row#4
byte legal::row#5
byte legal::row#6
byte legal::row#7
void main()
constant byte* main::s[$29]  = " - n queens problem using backtracking -"
constant byte* main::s1[$13]  = "
number of queens:"
constant byte* main::s2[$e]  = "

solutions: "
constant byte* main::s3[3]  = ".
"
void* memcpy(void* memcpy::destination , void* memcpy::source , word memcpy::num)
byte*~ memcpy::$0
bool~ memcpy::$1
byte*~ memcpy::$2
void* memcpy::destination
void* memcpy::destination#0
void* memcpy::destination#1
void* memcpy::destination#2
void* memcpy::destination#3
void* memcpy::destination#4
void* memcpy::destination#5
byte* memcpy::dst
byte* memcpy::dst#0
byte* memcpy::dst#1
byte* memcpy::dst#2
byte* memcpy::dst#3
word memcpy::num
word memcpy::num#0
word memcpy::num#1
word memcpy::num#2
void* memcpy::return
void* memcpy::return#0
void* memcpy::return#1
void* memcpy::return#2
void* memcpy::return#3
void* memcpy::return#4
void* memcpy::source
void* memcpy::source#0
void* memcpy::source#1
void* memcpy::source#2
byte* memcpy::src
byte* memcpy::src#0
byte* memcpy::src#1
byte* memcpy::src#2
byte* memcpy::src#3
byte* memcpy::src_end
byte* memcpy::src_end#0
byte* memcpy::src_end#1
byte* memcpy::src_end#2
void* memset(void* memset::str , byte memset::c , word memset::num)
bool~ memset::$0
bool~ memset::$1
byte*~ memset::$2
bool~ memset::$3
byte*~ memset::$4
byte memset::c
byte memset::c#0
byte memset::c#1
byte memset::c#2
byte memset::c#3
byte memset::c#4
byte memset::c#5
byte* memset::dst
byte* memset::dst#0
byte* memset::dst#1
byte* memset::dst#2
byte* memset::dst#3
byte* memset::end
byte* memset::end#0
byte* memset::end#1
byte* memset::end#2
word memset::num
word memset::num#0
word memset::num#1
word memset::num#2
word memset::num#3
void* memset::return
void* memset::return#0
void* memset::return#1
void* memset::return#2
void* memset::return#3
void* memset::return#4
void* memset::str
void* memset::str#0
void* memset::str#1
void* memset::str#2
void* memset::str#3
void* memset::str#4
void* memset::str#5
void* memset::str#6
void print()
bool~ print::$2
bool~ print::$4
bool~ print::$6
bool~ print::$7
byte print::i
byte print::i#0
byte print::i#1
byte print::i#2
byte print::i#3
byte print::i#4
byte print::i1
byte print::i1#0
byte print::i1#1
byte print::i1#10
byte print::i1#11
byte print::i1#12
byte print::i1#13
byte print::i1#2
byte print::i1#3
byte print::i1#4
byte print::i1#5
byte print::i1#6
byte print::i1#7
byte print::i1#8
byte print::i1#9
byte print::j
byte print::j#0
byte print::j#1
byte print::j#2
byte print::j#3
byte print::j#4
byte print::j#5
byte print::j#6
byte print::j#7
byte print::j#8
constant byte* print::s[3]  = "
#"
constant byte* print::s1[4]  = ":
 "
constant byte* print::s2[2]  = "
"
constant byte* print::s3[2]  = "Q"
constant byte* print::s4[2]  = "-"
struct printf_buffer_number printf_buffer loadstore = {}
void printf_number_buffer(byte printf_number_buffer::buffer_sign , byte* printf_number_buffer::buffer_digits , byte printf_number_buffer::format_min_length , byte printf_number_buffer::format_justify_left , byte printf_number_buffer::format_sign_always , byte printf_number_buffer::format_zero_padding , byte printf_number_buffer::format_upper_case , byte printf_number_buffer::format_radix)
bool~ printf_number_buffer::$0
bool~ printf_number_buffer::$1
bool~ printf_number_buffer::$10
bool~ printf_number_buffer::$12
bool~ printf_number_buffer::$14
bool~ printf_number_buffer::$15
bool~ printf_number_buffer::$16
bool~ printf_number_buffer::$17
word~ printf_number_buffer::$19
bool~ printf_number_buffer::$2
bool~ printf_number_buffer::$20
signed byte~ printf_number_buffer::$21
bool~ printf_number_buffer::$22
bool~ printf_number_buffer::$23
signed byte~ printf_number_buffer::$25
bool~ printf_number_buffer::$26
bool~ printf_number_buffer::$27
bool~ printf_number_buffer::$28
bool~ printf_number_buffer::$29
bool~ printf_number_buffer::$3
bool~ printf_number_buffer::$30
bool~ printf_number_buffer::$31
bool~ printf_number_buffer::$32
bool~ printf_number_buffer::$4
bool~ printf_number_buffer::$5
bool~ printf_number_buffer::$7
bool~ printf_number_buffer::$9
struct printf_buffer_number printf_number_buffer::buffer
byte* printf_number_buffer::buffer_digits
byte* printf_number_buffer::buffer_digits#0
byte* printf_number_buffer::buffer_digits#1
byte* printf_number_buffer::buffer_digits#10
byte* printf_number_buffer::buffer_digits#11
byte* printf_number_buffer::buffer_digits#12
byte* printf_number_buffer::buffer_digits#13
byte* printf_number_buffer::buffer_digits#14
byte* printf_number_buffer::buffer_digits#15
byte* printf_number_buffer::buffer_digits#16
byte* printf_number_buffer::buffer_digits#17
byte* printf_number_buffer::buffer_digits#18
byte* printf_number_buffer::buffer_digits#19
byte* printf_number_buffer::buffer_digits#2
byte* printf_number_buffer::buffer_digits#20
byte* printf_number_buffer::buffer_digits#21
byte* printf_number_buffer::buffer_digits#3
byte* printf_number_buffer::buffer_digits#4
byte* printf_number_buffer::buffer_digits#5
byte* printf_number_buffer::buffer_digits#6
byte* printf_number_buffer::buffer_digits#7
byte* printf_number_buffer::buffer_digits#8
byte* printf_number_buffer::buffer_digits#9
byte printf_number_buffer::buffer_sign
byte printf_number_buffer::buffer_sign#0
byte printf_number_buffer::buffer_sign#1
byte printf_number_buffer::buffer_sign#10
byte printf_number_buffer::buffer_sign#11
byte printf_number_buffer::buffer_sign#12
byte printf_number_buffer::buffer_sign#13
byte printf_number_buffer::buffer_sign#2
byte printf_number_buffer::buffer_sign#3
byte printf_number_buffer::buffer_sign#4
byte printf_number_buffer::buffer_sign#5
byte printf_number_buffer::buffer_sign#6
byte printf_number_buffer::buffer_sign#7
byte printf_number_buffer::buffer_sign#8
byte printf_number_buffer::buffer_sign#9
struct printf_format_number printf_number_buffer::format
byte printf_number_buffer::format_justify_left
byte printf_number_buffer::format_justify_left#0
byte printf_number_buffer::format_justify_left#1
byte printf_number_buffer::format_justify_left#10
byte printf_number_buffer::format_justify_left#11
byte printf_number_buffer::format_justify_left#12
byte printf_number_buffer::format_justify_left#13
byte printf_number_buffer::format_justify_left#14
byte printf_number_buffer::format_justify_left#15
byte printf_number_buffer::format_justify_left#16
byte printf_number_buffer::format_justify_left#17
byte printf_number_buffer::format_justify_left#18
byte printf_number_buffer::format_justify_left#19
byte printf_number_buffer::format_justify_left#2
byte printf_number_buffer::format_justify_left#20
byte printf_number_buffer::format_justify_left#21
byte printf_number_buffer::format_justify_left#22
byte printf_number_buffer::format_justify_left#3
byte printf_number_buffer::format_justify_left#4
byte printf_number_buffer::format_justify_left#5
byte printf_number_buffer::format_justify_left#6
byte printf_number_buffer::format_justify_left#7
byte printf_number_buffer::format_justify_left#8
byte printf_number_buffer::format_justify_left#9
byte printf_number_buffer::format_min_length
byte printf_number_buffer::format_min_length#0
byte printf_number_buffer::format_min_length#1
byte printf_number_buffer::format_min_length#2
byte printf_number_buffer::format_min_length#3
byte printf_number_buffer::format_min_length#4
byte printf_number_buffer::format_min_length#5
byte printf_number_buffer::format_min_length#6
byte printf_number_buffer::format_min_length#7
byte printf_number_buffer::format_radix
byte printf_number_buffer::format_radix#0
byte printf_number_buffer::format_radix#1
byte printf_number_buffer::format_radix#2
byte printf_number_buffer::format_sign_always
byte printf_number_buffer::format_sign_always#0
byte printf_number_buffer::format_sign_always#1
byte printf_number_buffer::format_sign_always#2
byte printf_number_buffer::format_upper_case
byte printf_number_buffer::format_upper_case#0
byte printf_number_buffer::format_upper_case#1
byte printf_number_buffer::format_upper_case#10
byte printf_number_buffer::format_upper_case#11
byte printf_number_buffer::format_upper_case#12
byte printf_number_buffer::format_upper_case#13
byte printf_number_buffer::format_upper_case#14
byte printf_number_buffer::format_upper_case#15
byte printf_number_buffer::format_upper_case#16
byte printf_number_buffer::format_upper_case#17
byte printf_number_buffer::format_upper_case#18
byte printf_number_buffer::format_upper_case#2
byte printf_number_buffer::format_upper_case#3
byte printf_number_buffer::format_upper_case#4
byte printf_number_buffer::format_upper_case#5
byte printf_number_buffer::format_upper_case#6
byte printf_number_buffer::format_upper_case#7
byte printf_number_buffer::format_upper_case#8
byte printf_number_buffer::format_upper_case#9
byte printf_number_buffer::format_zero_padding
byte printf_number_buffer::format_zero_padding#0
byte printf_number_buffer::format_zero_padding#1
byte printf_number_buffer::format_zero_padding#10
byte printf_number_buffer::format_zero_padding#11
byte printf_number_buffer::format_zero_padding#12
byte printf_number_buffer::format_zero_padding#13
byte printf_number_buffer::format_zero_padding#14
byte printf_number_buffer::format_zero_padding#15
byte printf_number_buffer::format_zero_padding#16
byte printf_number_buffer::format_zero_padding#17
byte printf_number_buffer::format_zero_padding#18
byte printf_number_buffer::format_zero_padding#19
byte printf_number_buffer::format_zero_padding#2
byte printf_number_buffer::format_zero_padding#20
byte printf_number_buffer::format_zero_padding#21
byte printf_number_buffer::format_zero_padding#22
byte printf_number_buffer::format_zero_padding#3
byte printf_number_buffer::format_zero_padding#4
byte printf_number_buffer::format_zero_padding#5
byte printf_number_buffer::format_zero_padding#6
byte printf_number_buffer::format_zero_padding#7
byte printf_number_buffer::format_zero_padding#8
byte printf_number_buffer::format_zero_padding#9
signed byte printf_number_buffer::len
signed byte printf_number_buffer::len#0
signed byte printf_number_buffer::len#1
signed byte printf_number_buffer::len#2
signed byte printf_number_buffer::len#3
signed byte printf_number_buffer::padding
signed byte printf_number_buffer::padding#0
signed byte printf_number_buffer::padding#1
signed byte printf_number_buffer::padding#10
signed byte printf_number_buffer::padding#11
signed byte printf_number_buffer::padding#12
signed byte printf_number_buffer::padding#13
signed byte printf_number_buffer::padding#14
signed byte printf_number_buffer::padding#15
signed byte printf_number_buffer::padding#16
signed byte printf_number_buffer::padding#17
signed byte printf_number_buffer::padding#2
signed byte printf_number_buffer::padding#3
signed byte printf_number_buffer::padding#4
signed byte printf_number_buffer::padding#5
signed byte printf_number_buffer::padding#6
signed byte printf_number_buffer::padding#7
signed byte printf_number_buffer::padding#8
signed byte printf_number_buffer::padding#9
void printf_padding(byte printf_padding::pad , byte printf_padding::length)
bool~ printf_padding::$0
byte printf_padding::i
byte printf_padding::i#0
byte printf_padding::i#1
byte printf_padding::i#2
byte printf_padding::i#3
byte printf_padding::i#4
byte printf_padding::length
byte printf_padding::length#0
byte printf_padding::length#1
byte printf_padding::length#2
byte printf_padding::length#3
byte printf_padding::length#4
byte printf_padding::length#5
byte printf_padding::length#6
byte printf_padding::pad
byte printf_padding::pad#0
byte printf_padding::pad#1
byte printf_padding::pad#2
byte printf_padding::pad#3
byte printf_padding::pad#4
byte printf_padding::pad#5
byte printf_padding::pad#6
void printf_uchar(byte printf_uchar::uvalue , byte printf_uchar::format_min_length , byte printf_uchar::format_justify_left , byte printf_uchar::format_sign_always , byte printf_uchar::format_zero_padding , byte printf_uchar::format_upper_case , byte printf_uchar::format_radix)
number~ printf_uchar::$0
byte~ printf_uchar::$1
number~ printf_uchar::$2
bool~ printf_uchar::$5
struct printf_format_number printf_uchar::format
byte printf_uchar::format_justify_left
byte printf_uchar::format_justify_left#0
byte printf_uchar::format_justify_left#1
byte printf_uchar::format_justify_left#2
byte printf_uchar::format_justify_left#3
byte printf_uchar::format_justify_left#4
byte printf_uchar::format_justify_left#5
byte printf_uchar::format_justify_left#6
byte printf_uchar::format_min_length
byte printf_uchar::format_min_length#0
byte printf_uchar::format_min_length#1
byte printf_uchar::format_min_length#2
byte printf_uchar::format_min_length#3
byte printf_uchar::format_min_length#4
byte printf_uchar::format_min_length#5
byte printf_uchar::format_min_length#6
byte printf_uchar::format_radix
byte printf_uchar::format_radix#0
byte printf_uchar::format_radix#1
byte printf_uchar::format_radix#2
byte printf_uchar::format_radix#3
byte printf_uchar::format_radix#4
byte printf_uchar::format_radix#5
byte printf_uchar::format_radix#6
byte printf_uchar::format_sign_always
byte printf_uchar::format_sign_always#0
byte printf_uchar::format_sign_always#1
byte printf_uchar::format_sign_always#2
byte printf_uchar::format_sign_always#3
byte printf_uchar::format_sign_always#4
byte printf_uchar::format_sign_always#5
byte printf_uchar::format_sign_always#6
byte printf_uchar::format_upper_case
byte printf_uchar::format_upper_case#0
byte printf_uchar::format_upper_case#1
byte printf_uchar::format_upper_case#2
byte printf_uchar::format_upper_case#3
byte printf_uchar::format_upper_case#4
byte printf_uchar::format_upper_case#5
byte printf_uchar::format_upper_case#6
byte printf_uchar::format_zero_padding
byte printf_uchar::format_zero_padding#0
byte printf_uchar::format_zero_padding#1
byte printf_uchar::format_zero_padding#2
byte printf_uchar::format_zero_padding#3
byte printf_uchar::format_zero_padding#4
byte printf_uchar::format_zero_padding#5
byte printf_uchar::format_zero_padding#6
byte printf_uchar::uvalue
byte printf_uchar::uvalue#0
byte printf_uchar::uvalue#1
byte printf_uchar::uvalue#2
byte printf_uchar::uvalue#3
byte printf_uchar::uvalue#4
byte printf_uchar::uvalue#5
void printf_uint(word printf_uint::uvalue , byte printf_uint::format_min_length , byte printf_uint::format_justify_left , byte printf_uint::format_sign_always , byte printf_uint::format_zero_padding , byte printf_uint::format_upper_case , byte printf_uint::format_radix)
number~ printf_uint::$0
byte~ printf_uint::$1
number~ printf_uint::$2
bool~ printf_uint::$5
struct printf_format_number printf_uint::format
byte printf_uint::format_justify_left
byte printf_uint::format_justify_left#0
byte printf_uint::format_justify_left#1
byte printf_uint::format_justify_left#2
byte printf_uint::format_justify_left#3
byte printf_uint::format_justify_left#4
byte printf_uint::format_justify_left#5
byte printf_uint::format_min_length
byte printf_uint::format_min_length#0
byte printf_uint::format_min_length#1
byte printf_uint::format_min_length#2
byte printf_uint::format_min_length#3
byte printf_uint::format_min_length#4
byte printf_uint::format_min_length#5
byte printf_uint::format_radix
byte printf_uint::format_radix#0
byte printf_uint::format_radix#1
byte printf_uint::format_radix#2
byte printf_uint::format_radix#3
byte printf_uint::format_radix#4
byte printf_uint::format_radix#5
byte printf_uint::format_sign_always
byte printf_uint::format_sign_always#0
byte printf_uint::format_sign_always#1
byte printf_uint::format_sign_always#2
byte printf_uint::format_sign_always#3
byte printf_uint::format_sign_always#4
byte printf_uint::format_sign_always#5
byte printf_uint::format_upper_case
byte printf_uint::format_upper_case#0
byte printf_uint::format_upper_case#1
byte printf_uint::format_upper_case#2
byte printf_uint::format_upper_case#3
byte printf_uint::format_upper_case#4
byte printf_uint::format_upper_case#5
byte printf_uint::format_zero_padding
byte printf_uint::format_zero_padding#0
byte printf_uint::format_zero_padding#1
byte printf_uint::format_zero_padding#2
byte printf_uint::format_zero_padding#3
byte printf_uint::format_zero_padding#4
byte printf_uint::format_zero_padding#5
word printf_uint::uvalue
word printf_uint::uvalue#0
word printf_uint::uvalue#1
word printf_uint::uvalue#2
word printf_uint::uvalue#3
word printf_uint::uvalue#4
void printf_ulong(dword printf_ulong::uvalue , byte printf_ulong::format_min_length , byte printf_ulong::format_justify_left , byte printf_ulong::format_sign_always , byte printf_ulong::format_zero_padding , byte printf_ulong::format_upper_case , byte printf_ulong::format_radix)
number~ printf_ulong::$0
byte~ printf_ulong::$1
number~ printf_ulong::$2
bool~ printf_ulong::$5
struct printf_format_number printf_ulong::format
byte printf_ulong::format_justify_left
byte printf_ulong::format_justify_left#0
byte printf_ulong::format_justify_left#1
byte printf_ulong::format_justify_left#2
byte printf_ulong::format_justify_left#3
byte printf_ulong::format_justify_left#4
byte printf_ulong::format_justify_left#5
byte printf_ulong::format_justify_left#6
byte printf_ulong::format_min_length
byte printf_ulong::format_min_length#0
byte printf_ulong::format_min_length#1
byte printf_ulong::format_min_length#2
byte printf_ulong::format_min_length#3
byte printf_ulong::format_min_length#4
byte printf_ulong::format_min_length#5
byte printf_ulong::format_min_length#6
byte printf_ulong::format_radix
byte printf_ulong::format_radix#0
byte printf_ulong::format_radix#1
byte printf_ulong::format_radix#2
byte printf_ulong::format_radix#3
byte printf_ulong::format_radix#4
byte printf_ulong::format_radix#5
byte printf_ulong::format_radix#6
byte printf_ulong::format_sign_always
byte printf_ulong::format_sign_always#0
byte printf_ulong::format_sign_always#1
byte printf_ulong::format_sign_always#2
byte printf_ulong::format_sign_always#3
byte printf_ulong::format_sign_always#4
byte printf_ulong::format_sign_always#5
byte printf_ulong::format_sign_always#6
byte printf_ulong::format_upper_case
byte printf_ulong::format_upper_case#0
byte printf_ulong::format_upper_case#1
byte printf_ulong::format_upper_case#2
byte printf_ulong::format_upper_case#3
byte printf_ulong::format_upper_case#4
byte printf_ulong::format_upper_case#5
byte printf_ulong::format_upper_case#6
byte printf_ulong::format_zero_padding
byte printf_ulong::format_zero_padding#0
byte printf_ulong::format_zero_padding#1
byte printf_ulong::format_zero_padding#2
byte printf_ulong::format_zero_padding#3
byte printf_ulong::format_zero_padding#4
byte printf_ulong::format_zero_padding#5
byte printf_ulong::format_zero_padding#6
dword printf_ulong::uvalue
dword printf_ulong::uvalue#0
dword printf_ulong::uvalue#1
dword printf_ulong::uvalue#2
dword printf_ulong::uvalue#3
dword printf_ulong::uvalue#4
dword printf_ulong::uvalue#5
__stackcall void queen(byte queen::row)
bool~ queen::$0
byte~ queen::$1
bool~ queen::$2
bool~ queen::$3
number~ queen::$4
bool~ queen::$7
constant byte queen::OFFSET_STACK_ROW = 0
volatile byte queen::column loadstore
volatile byte queen::r loadstore
byte queen::row
byte queen::row#0
word strlen(byte* strlen::str)
bool~ strlen::$0
word strlen::len
word strlen::len#0
word strlen::len#1
word strlen::len#2
word strlen::len#3
word strlen::len#4
word strlen::return
word strlen::return#0
word strlen::return#1
word strlen::return#2
word strlen::return#3
word strlen::return#4
byte* strlen::str
byte* strlen::str#0
byte* strlen::str#1
byte* strlen::str#2
byte* strlen::str#3
byte* strlen::str#4
byte* strupr(byte* strupr::str)
byte~ strupr::$0
bool~ strupr::$1
byte* strupr::return
byte* strupr::return#0
byte* strupr::return#1
byte* strupr::return#2
byte* strupr::return#3
byte* strupr::src
byte* strupr::src#0
byte* strupr::src#1
byte* strupr::src#2
byte* strupr::src#3
byte* strupr::src#4
byte* strupr::str
byte* strupr::str#0
byte* strupr::str#1
byte* strupr::str#2
byte* strupr::str#3
byte* strupr::str#4
byte* strupr::str#5
byte toupper(byte toupper::ch)
bool~ toupper::$0
bool~ toupper::$1
bool~ toupper::$2
byte~ toupper::$3
byte toupper::ch
byte toupper::ch#0
byte toupper::ch#1
byte toupper::ch#2
byte toupper::ch#3
byte toupper::return
byte toupper::return#0
byte toupper::return#1
byte toupper::return#2
byte toupper::return#3
byte toupper::return#4
byte toupper::return#5
void uctoa(byte uctoa::value , byte* uctoa::buffer , byte uctoa::radix)
bool~ uctoa::$0
bool~ uctoa::$1
byte~ uctoa::$10
bool~ uctoa::$2
bool~ uctoa::$3
number~ uctoa::$4
bool~ uctoa::$5
bool~ uctoa::$6
bool~ uctoa::$7
bool~ uctoa::$8
byte~ uctoa::$9
byte* uctoa::buffer
byte* uctoa::buffer#0
byte* uctoa::buffer#1
byte* uctoa::buffer#10
byte* uctoa::buffer#11
byte* uctoa::buffer#12
byte* uctoa::buffer#13
byte* uctoa::buffer#14
byte* uctoa::buffer#15
byte* uctoa::buffer#16
byte* uctoa::buffer#17
byte* uctoa::buffer#18
byte* uctoa::buffer#19
byte* uctoa::buffer#2
byte* uctoa::buffer#20
byte* uctoa::buffer#21
byte* uctoa::buffer#3
byte* uctoa::buffer#4
byte* uctoa::buffer#5
byte* uctoa::buffer#6
byte* uctoa::buffer#7
byte* uctoa::buffer#8
byte* uctoa::buffer#9
byte uctoa::digit
byte uctoa::digit#0
byte uctoa::digit#1
byte uctoa::digit#2
byte uctoa::digit#3
byte uctoa::digit#4
byte uctoa::digit#5
byte uctoa::digit#6
byte uctoa::digit_value
byte uctoa::digit_value#0
byte uctoa::digit_value#1
byte* uctoa::digit_values
byte* uctoa::digit_values#0
byte* uctoa::digit_values#1
byte* uctoa::digit_values#10
byte* uctoa::digit_values#2
byte* uctoa::digit_values#3
byte* uctoa::digit_values#4
byte* uctoa::digit_values#5
byte* uctoa::digit_values#6
byte* uctoa::digit_values#7
byte* uctoa::digit_values#8
byte* uctoa::digit_values#9
byte uctoa::max_digits
byte uctoa::max_digits#0
byte uctoa::max_digits#1
byte uctoa::max_digits#10
byte uctoa::max_digits#2
byte uctoa::max_digits#3
byte uctoa::max_digits#4
byte uctoa::max_digits#5
byte uctoa::max_digits#6
byte uctoa::max_digits#7
byte uctoa::max_digits#8
byte uctoa::max_digits#9
byte uctoa::radix
byte uctoa::radix#0
byte uctoa::radix#1
byte uctoa::radix#2
byte uctoa::radix#3
byte uctoa::radix#4
byte uctoa::started
byte uctoa::started#0
byte uctoa::started#1
byte uctoa::started#2
byte uctoa::started#3
byte uctoa::started#4
byte uctoa::value
byte uctoa::value#0
byte uctoa::value#1
byte uctoa::value#10
byte uctoa::value#11
byte uctoa::value#12
byte uctoa::value#13
byte uctoa::value#14
byte uctoa::value#15
byte uctoa::value#2
byte uctoa::value#3
byte uctoa::value#4
byte uctoa::value#5
byte uctoa::value#6
byte uctoa::value#7
byte uctoa::value#8
byte uctoa::value#9
byte uctoa_append(byte* uctoa_append::buffer , byte uctoa_append::value , byte uctoa_append::sub)
bool~ uctoa_append::$0
byte* uctoa_append::buffer
byte* uctoa_append::buffer#0
byte* uctoa_append::buffer#1
byte* uctoa_append::buffer#2
byte* uctoa_append::buffer#3
byte* uctoa_append::buffer#4
byte uctoa_append::digit
byte uctoa_append::digit#0
byte uctoa_append::digit#1
byte uctoa_append::digit#2
byte uctoa_append::digit#3
byte uctoa_append::digit#4
byte uctoa_append::return
byte uctoa_append::return#0
byte uctoa_append::return#1
byte uctoa_append::return#2
byte uctoa_append::return#3
byte uctoa_append::return#4
byte uctoa_append::sub
byte uctoa_append::sub#0
byte uctoa_append::sub#1
byte uctoa_append::sub#2
byte uctoa_append::sub#3
byte uctoa_append::value
byte uctoa_append::value#0
byte uctoa_append::value#1
byte uctoa_append::value#2
byte uctoa_append::value#3
byte uctoa_append::value#4
byte uctoa_append::value#5
void ultoa(dword ultoa::value , byte* ultoa::buffer , byte ultoa::radix)
bool~ ultoa::$0
bool~ ultoa::$1
byte~ ultoa::$10
byte~ ultoa::$11
bool~ ultoa::$2
bool~ ultoa::$3
number~ ultoa::$4
bool~ ultoa::$5
bool~ ultoa::$6
bool~ ultoa::$7
bool~ ultoa::$8
dword~ ultoa::$9
byte* ultoa::buffer
byte* ultoa::buffer#0
byte* ultoa::buffer#1
byte* ultoa::buffer#10
byte* ultoa::buffer#11
byte* ultoa::buffer#12
byte* ultoa::buffer#13
byte* ultoa::buffer#14
byte* ultoa::buffer#15
byte* ultoa::buffer#16
byte* ultoa::buffer#17
byte* ultoa::buffer#18
byte* ultoa::buffer#19
byte* ultoa::buffer#2
byte* ultoa::buffer#20
byte* ultoa::buffer#21
byte* ultoa::buffer#3
byte* ultoa::buffer#4
byte* ultoa::buffer#5
byte* ultoa::buffer#6
byte* ultoa::buffer#7
byte* ultoa::buffer#8
byte* ultoa::buffer#9
byte ultoa::digit
byte ultoa::digit#0
byte ultoa::digit#1
byte ultoa::digit#2
byte ultoa::digit#3
byte ultoa::digit#4
byte ultoa::digit#5
byte ultoa::digit#6
dword ultoa::digit_value
dword ultoa::digit_value#0
dword ultoa::digit_value#1
dword* ultoa::digit_values
dword* ultoa::digit_values#0
dword* ultoa::digit_values#1
dword* ultoa::digit_values#10
dword* ultoa::digit_values#2
dword* ultoa::digit_values#3
dword* ultoa::digit_values#4
dword* ultoa::digit_values#5
dword* ultoa::digit_values#6
dword* ultoa::digit_values#7
dword* ultoa::digit_values#8
dword* ultoa::digit_values#9
byte ultoa::max_digits
byte ultoa::max_digits#0
byte ultoa::max_digits#1
byte ultoa::max_digits#10
byte ultoa::max_digits#2
byte ultoa::max_digits#3
byte ultoa::max_digits#4
byte ultoa::max_digits#5
byte ultoa::max_digits#6
byte ultoa::max_digits#7
byte ultoa::max_digits#8
byte ultoa::max_digits#9
byte ultoa::radix
byte ultoa::radix#0
byte ultoa::radix#1
byte ultoa::radix#2
byte ultoa::radix#3
byte ultoa::radix#4
byte ultoa::started
byte ultoa::started#0
byte ultoa::started#1
byte ultoa::started#2
byte ultoa::started#3
byte ultoa::started#4
dword ultoa::value
dword ultoa::value#0
dword ultoa::value#1
dword ultoa::value#10
dword ultoa::value#11
dword ultoa::value#12
dword ultoa::value#13
dword ultoa::value#14
dword ultoa::value#15
dword ultoa::value#2
dword ultoa::value#3
dword ultoa::value#4
dword ultoa::value#5
dword ultoa::value#6
dword ultoa::value#7
dword ultoa::value#8
dword ultoa::value#9
dword ultoa_append(byte* ultoa_append::buffer , dword ultoa_append::value , dword ultoa_append::sub)
bool~ ultoa_append::$0
byte* ultoa_append::buffer
byte* ultoa_append::buffer#0
byte* ultoa_append::buffer#1
byte* ultoa_append::buffer#2
byte* ultoa_append::buffer#3
byte* ultoa_append::buffer#4
byte ultoa_append::digit
byte ultoa_append::digit#0
byte ultoa_append::digit#1
byte ultoa_append::digit#2
byte ultoa_append::digit#3
byte ultoa_append::digit#4
dword ultoa_append::return
dword ultoa_append::return#0
dword ultoa_append::return#1
dword ultoa_append::return#2
dword ultoa_append::return#3
dword ultoa_append::return#4
dword ultoa_append::sub
dword ultoa_append::sub#0
dword ultoa_append::sub#1
dword ultoa_append::sub#2
dword ultoa_append::sub#3
dword ultoa_append::value
dword ultoa_append::value#0
dword ultoa_append::value#1
dword ultoa_append::value#2
dword ultoa_append::value#3
dword ultoa_append::value#4
dword ultoa_append::value#5
void utoa(word utoa::value , byte* utoa::buffer , byte utoa::radix)
bool~ utoa::$0
bool~ utoa::$1
byte~ utoa::$10
byte~ utoa::$11
bool~ utoa::$2
bool~ utoa::$3
number~ utoa::$4
bool~ utoa::$5
bool~ utoa::$6
bool~ utoa::$7
bool~ utoa::$8
word~ utoa::$9
byte* utoa::buffer
byte* utoa::buffer#0
byte* utoa::buffer#1
byte* utoa::buffer#10
byte* utoa::buffer#11
byte* utoa::buffer#12
byte* utoa::buffer#13
byte* utoa::buffer#14
byte* utoa::buffer#15
byte* utoa::buffer#16
byte* utoa::buffer#17
byte* utoa::buffer#18
byte* utoa::buffer#19
byte* utoa::buffer#2
byte* utoa::buffer#20
byte* utoa::buffer#21
byte* utoa::buffer#3
byte* utoa::buffer#4
byte* utoa::buffer#5
byte* utoa::buffer#6
byte* utoa::buffer#7
byte* utoa::buffer#8
byte* utoa::buffer#9
byte utoa::digit
byte utoa::digit#0
byte utoa::digit#1
byte utoa::digit#2
byte utoa::digit#3
byte utoa::digit#4
byte utoa::digit#5
byte utoa::digit#6
word utoa::digit_value
word utoa::digit_value#0
word utoa::digit_value#1
word* utoa::digit_values
word* utoa::digit_values#0
word* utoa::digit_values#1
word* utoa::digit_values#10
word* utoa::digit_values#2
word* utoa::digit_values#3
word* utoa::digit_values#4
word* utoa::digit_values#5
word* utoa::digit_values#6
word* utoa::digit_values#7
word* utoa::digit_values#8
word* utoa::digit_values#9
byte utoa::max_digits
byte utoa::max_digits#0
byte utoa::max_digits#1
byte utoa::max_digits#10
byte utoa::max_digits#2
byte utoa::max_digits#3
byte utoa::max_digits#4
byte utoa::max_digits#5
byte utoa::max_digits#6
byte utoa::max_digits#7
byte utoa::max_digits#8
byte utoa::max_digits#9
byte utoa::radix
byte utoa::radix#0
byte utoa::radix#1
byte utoa::radix#2
byte utoa::radix#3
byte utoa::radix#4
byte utoa::started
byte utoa::started#0
byte utoa::started#1
byte utoa::started#2
byte utoa::started#3
byte utoa::started#4
word utoa::value
word utoa::value#0
word utoa::value#1
word utoa::value#10
word utoa::value#11
word utoa::value#12
word utoa::value#13
word utoa::value#14
word utoa::value#15
word utoa::value#2
word utoa::value#3
word utoa::value#4
word utoa::value#5
word utoa::value#6
word utoa::value#7
word utoa::value#8
word utoa::value#9
word utoa_append(byte* utoa_append::buffer , word utoa_append::value , word utoa_append::sub)
bool~ utoa_append::$0
byte* utoa_append::buffer
byte* utoa_append::buffer#0
byte* utoa_append::buffer#1
byte* utoa_append::buffer#2
byte* utoa_append::buffer#3
byte* utoa_append::buffer#4
byte utoa_append::digit
byte utoa_append::digit#0
byte utoa_append::digit#1
byte utoa_append::digit#2
byte utoa_append::digit#3
byte utoa_append::digit#4
word utoa_append::return
word utoa_append::return#0
word utoa_append::return#1
word utoa_append::return#2
word utoa_append::return#3
word utoa_append::return#4
word utoa_append::sub
word utoa_append::sub#0
word utoa_append::sub#1
word utoa_append::sub#2
word utoa_append::sub#3
word utoa_append::value
word utoa_append::value#0
word utoa_append::value#1
word utoa_append::value#2
word utoa_append::value#3
word utoa_append::value#4
word utoa_append::value#5

Adding number conversion cast (unumber) 0 in memset::$0 = memset::num#2 > 0
Adding number conversion cast (unumber) 0 in strlen::$0 = 0 != *strlen::str#2
Adding number conversion cast (unumber) 0 in strupr::$1 = 0 != *strupr::src#2
Adding number conversion cast (unumber) 5 in utoa::max_digits#1 = 5
Adding number conversion cast (unumber) 4 in utoa::max_digits#2 = 4
Adding number conversion cast (unumber) 6 in utoa::max_digits#3 = 6
Adding number conversion cast (unumber) $10 in utoa::max_digits#4 = $10
Adding number conversion cast (unumber) 0 in *utoa::buffer#2 = 0
Adding number conversion cast (unumber) 1 in utoa::$4 = utoa::max_digits#5 - 1
Adding number conversion cast (unumber) utoa::$4 in utoa::$4 = utoa::max_digits#5 - (unumber)1
Adding number conversion cast (unumber) 0 in *utoa::buffer#3 = 0
Adding number conversion cast (unumber) 1 in utoa::started#1 = 1
Adding number conversion cast (unumber) $a in ultoa::max_digits#1 = $a
Adding number conversion cast (unumber) 8 in ultoa::max_digits#2 = 8
Adding number conversion cast (unumber) $b in ultoa::max_digits#3 = $b
Adding number conversion cast (unumber) $20 in ultoa::max_digits#4 = $20
Adding number conversion cast (unumber) 0 in *ultoa::buffer#2 = 0
Adding number conversion cast (unumber) 1 in ultoa::$4 = ultoa::max_digits#5 - 1
Adding number conversion cast (unumber) ultoa::$4 in ultoa::$4 = ultoa::max_digits#5 - (unumber)1
Adding number conversion cast (unumber) 0 in *ultoa::buffer#3 = 0
Adding number conversion cast (unumber) 1 in ultoa::started#1 = 1
Adding number conversion cast (unumber) 3 in uctoa::max_digits#1 = 3
Adding number conversion cast (unumber) 2 in uctoa::max_digits#2 = 2
Adding number conversion cast (unumber) 3 in uctoa::max_digits#3 = 3
Adding number conversion cast (unumber) 8 in uctoa::max_digits#4 = 8
Adding number conversion cast (unumber) 0 in *uctoa::buffer#2 = 0
Adding number conversion cast (unumber) 1 in uctoa::$4 = uctoa::max_digits#5 - 1
Adding number conversion cast (unumber) uctoa::$4 in uctoa::$4 = uctoa::max_digits#5 - (unumber)1
Adding number conversion cast (unumber) 0 in *uctoa::buffer#3 = 0
Adding number conversion cast (unumber) 1 in uctoa::started#1 = 1
Adding number conversion cast (unumber) $19 in clrscr::$0 = clrscr::l#2 < $19
Adding number conversion cast (unumber) 0 in conio_cursor_x = 0
Adding number conversion cast (unumber) 0 in conio_cursor_y = 0
Adding number conversion cast (unumber) $28 in clrscr::$1 = clrscr::c#2 < $28
Adding number conversion cast (unumber) $28 in clrscr::line_text#1 = clrscr::line_text#3 + $28
Adding number conversion cast (unumber) $28 in clrscr::line_cols#1 = clrscr::line_cols#3 + $28
Adding number conversion cast (unumber) $19 in gotoxy::$0 = gotoxy::y#4 > $19
Adding number conversion cast (unumber) $28 in gotoxy::$2 = gotoxy::x#4 >= $28
Adding number conversion cast (unumber) 0 in gotoxy::y#0 = 0
Adding number conversion cast (unumber) $28 in gotoxy::$4 = gotoxy::$7 * $28
Adding number conversion cast (unumber) gotoxy::$4 in gotoxy::$4 = gotoxy::$7 * (unumber)$28
Adding number conversion cast (unumber) 0 in gotoxy::x#0 = 0
Adding number conversion cast (unumber) $28 in cputc::$1 = conio_cursor_x == $28
Adding number conversion cast (unumber) $28 in conio_line_text = conio_line_text + $28
Adding number conversion cast (unumber) $28 in conio_line_color = conio_line_color + $28
Adding number conversion cast (unumber) 0 in conio_cursor_x = 0
Adding number conversion cast (unumber) 0 in cputs::$2 = 0 != cputs::$0
Adding number conversion cast (unumber) $19 in cscroll::$0 = conio_cursor_y == $19
Adding number conversion cast (unumber) 0 in cscroll::$7 = 0 != conio_scroll_enable
Adding number conversion cast (unumber) $28 in memcpy::source#0 = (void*)CONIO_SCREEN_TEXT+$28
Adding number conversion cast (unumber) $19*$28-$28 in memcpy::num#0 = $19*$28-$28
Adding number conversion cast (unumber) $28 in memcpy::source#1 = (void*)CONIO_SCREEN_COLORS+$28
Adding number conversion cast (unumber) $19*$28-$28 in memcpy::num#1 = $19*$28-$28
Adding number conversion cast (unumber) $28 in memset::str#0 = (void*)CONIO_SCREEN_TEXT+$19*$28-$28
Adding number conversion cast (unumber) $19*$28 in memset::str#0 = (void*)CONIO_SCREEN_TEXT+$19*$28-(unumber)$28
Adding number conversion cast (unumber) $28 in memset::num#0 = $28
Adding number conversion cast (unumber) $28 in memset::str#1 = (void*)CONIO_SCREEN_COLORS+$19*$28-$28
Adding number conversion cast (unumber) $19*$28 in memset::str#1 = (void*)CONIO_SCREEN_COLORS+$19*$28-(unumber)$28
Adding number conversion cast (unumber) $28 in memset::num#1 = $28
Adding number conversion cast (unumber) $28 in conio_line_text = conio_line_text - $28
Adding number conversion cast (unumber) $28 in conio_line_color = conio_line_color - $28
Adding number conversion cast (unumber) 0 in gotoxy::x#1 = 0
Adding number conversion cast (unumber) 0 in gotoxy::y#1 = 0
Adding number conversion cast (unumber) $19 in conio_c64_init::$0 = conio_c64_init::line#0 >= $19
Adding number conversion cast (unumber) 0 in gotoxy::x#2 = 0
Adding number conversion cast (unumber) $19-1 in conio_c64_init::line#1 = $19-1
Adding number conversion cast (unumber) 0 in printf_ulong::$5 = 0 != printf_ulong::format_sign_always#2
Adding number conversion cast (unumber) printf_ulong::$2 in printf_ulong::format_upper_case#3 = phi( printf_ulong::@1/printf_ulong::format_upper_case#4, printf_ulong::@2/printf_ulong::format_upper_case#5 )
  printf_ulong::format_zero_padding#3 = phi( printf_ulong::@1/printf_ulong::format_zero_padding#4, printf_ulong::@2/printf_ulong::format_zero_padding#5 )
  printf_ulong::format_sign_always#4 = phi( printf_ulong::@1/printf_ulong::format_sign_always#5, printf_ulong::@2/printf_ulong::format_sign_always#6 )
  printf_ulong::format_justify_left#3 = phi( printf_ulong::@1/printf_ulong::format_justify_left#4, printf_ulong::@2/printf_ulong::format_justify_left#5 )
  printf_ulong::format_min_length#3 = phi( printf_ulong::@1/printf_ulong::format_min_length#4, printf_ulong::@2/printf_ulong::format_min_length#5 )
  printf_ulong::format_radix#2 = phi( printf_ulong::@1/printf_ulong::format_radix#4, printf_ulong::@2/printf_ulong::format_radix#5 )
  printf_ulong::uvalue#2 = phi( printf_ulong::@1/printf_ulong::uvalue#3, printf_ulong::@2/printf_ulong::uvalue#4 )
  printf_ulong::$2 = phi( printf_ulong::@1/printf_ulong::$1, printf_ulong::@2/printf_ulong::$0 )
Adding number conversion cast (unumber) printf_ulong::$0 in printf_ulong::format_upper_case#3 = phi( printf_ulong::@1/printf_ulong::format_upper_case#4, printf_ulong::@2/printf_ulong::format_upper_case#5 )
  printf_ulong::format_zero_padding#3 = phi( printf_ulong::@1/printf_ulong::format_zero_padding#4, printf_ulong::@2/printf_ulong::format_zero_padding#5 )
  printf_ulong::format_sign_always#4 = phi( printf_ulong::@1/printf_ulong::format_sign_always#5, printf_ulong::@2/printf_ulong::format_sign_always#6 )
  printf_ulong::format_justify_left#3 = phi( printf_ulong::@1/printf_ulong::format_justify_left#4, printf_ulong::@2/printf_ulong::format_justify_left#5 )
  printf_ulong::format_min_length#3 = phi( printf_ulong::@1/printf_ulong::format_min_length#4, printf_ulong::@2/printf_ulong::format_min_length#5 )
  printf_ulong::format_radix#2 = phi( printf_ulong::@1/printf_ulong::format_radix#4, printf_ulong::@2/printf_ulong::format_radix#5 )
  printf_ulong::uvalue#2 = phi( printf_ulong::@1/printf_ulong::uvalue#3, printf_ulong::@2/printf_ulong::uvalue#4 )
  printf_ulong::$2 = phi( printf_ulong::@1/printf_ulong::$1, printf_ulong::@2/printf_ulong::$0 )
Adding number conversion cast (unumber) 0 in printf_uint::$5 = 0 != printf_uint::format_sign_always#1
Adding number conversion cast (unumber) printf_uint::$2 in printf_uint::format_upper_case#2 = phi( printf_uint::@1/printf_uint::format_upper_case#3, printf_uint::@2/printf_uint::format_upper_case#4 )
  printf_uint::format_zero_padding#2 = phi( printf_uint::@1/printf_uint::format_zero_padding#3, printf_uint::@2/printf_uint::format_zero_padding#4 )
  printf_uint::format_sign_always#3 = phi( printf_uint::@1/printf_uint::format_sign_always#4, printf_uint::@2/printf_uint::format_sign_always#5 )
  printf_uint::format_justify_left#2 = phi( printf_uint::@1/printf_uint::format_justify_left#3, printf_uint::@2/printf_uint::format_justify_left#4 )
  printf_uint::format_min_length#2 = phi( printf_uint::@1/printf_uint::format_min_length#3, printf_uint::@2/printf_uint::format_min_length#4 )
  printf_uint::format_radix#1 = phi( printf_uint::@1/printf_uint::format_radix#3, printf_uint::@2/printf_uint::format_radix#4 )
  printf_uint::uvalue#1 = phi( printf_uint::@1/printf_uint::uvalue#2, printf_uint::@2/printf_uint::uvalue#3 )
  printf_uint::$2 = phi( printf_uint::@1/printf_uint::$1, printf_uint::@2/printf_uint::$0 )
Adding number conversion cast (unumber) printf_uint::$0 in printf_uint::format_upper_case#2 = phi( printf_uint::@1/printf_uint::format_upper_case#3, printf_uint::@2/printf_uint::format_upper_case#4 )
  printf_uint::format_zero_padding#2 = phi( printf_uint::@1/printf_uint::format_zero_padding#3, printf_uint::@2/printf_uint::format_zero_padding#4 )
  printf_uint::format_sign_always#3 = phi( printf_uint::@1/printf_uint::format_sign_always#4, printf_uint::@2/printf_uint::format_sign_always#5 )
  printf_uint::format_justify_left#2 = phi( printf_uint::@1/printf_uint::format_justify_left#3, printf_uint::@2/printf_uint::format_justify_left#4 )
  printf_uint::format_min_length#2 = phi( printf_uint::@1/printf_uint::format_min_length#3, printf_uint::@2/printf_uint::format_min_length#4 )
  printf_uint::format_radix#1 = phi( printf_uint::@1/printf_uint::format_radix#3, printf_uint::@2/printf_uint::format_radix#4 )
  printf_uint::uvalue#1 = phi( printf_uint::@1/printf_uint::uvalue#2, printf_uint::@2/printf_uint::uvalue#3 )
  printf_uint::$2 = phi( printf_uint::@1/printf_uint::$1, printf_uint::@2/printf_uint::$0 )
Adding number conversion cast (unumber) 0 in printf_uchar::$5 = 0 != printf_uchar::format_sign_always#2
Adding number conversion cast (unumber) printf_uchar::$2 in printf_uchar::format_upper_case#3 = phi( printf_uchar::@1/printf_uchar::format_upper_case#4, printf_uchar::@2/printf_uchar::format_upper_case#5 )
  printf_uchar::format_zero_padding#3 = phi( printf_uchar::@1/printf_uchar::format_zero_padding#4, printf_uchar::@2/printf_uchar::format_zero_padding#5 )
  printf_uchar::format_sign_always#4 = phi( printf_uchar::@1/printf_uchar::format_sign_always#5, printf_uchar::@2/printf_uchar::format_sign_always#6 )
  printf_uchar::format_justify_left#3 = phi( printf_uchar::@1/printf_uchar::format_justify_left#4, printf_uchar::@2/printf_uchar::format_justify_left#5 )
  printf_uchar::format_min_length#3 = phi( printf_uchar::@1/printf_uchar::format_min_length#4, printf_uchar::@2/printf_uchar::format_min_length#5 )
  printf_uchar::format_radix#2 = phi( printf_uchar::@1/printf_uchar::format_radix#4, printf_uchar::@2/printf_uchar::format_radix#5 )
  printf_uchar::uvalue#2 = phi( printf_uchar::@1/printf_uchar::uvalue#3, printf_uchar::@2/printf_uchar::uvalue#4 )
  printf_uchar::$2 = phi( printf_uchar::@1/printf_uchar::$1, printf_uchar::@2/printf_uchar::$0 )
Adding number conversion cast (unumber) printf_uchar::$0 in printf_uchar::format_upper_case#3 = phi( printf_uchar::@1/printf_uchar::format_upper_case#4, printf_uchar::@2/printf_uchar::format_upper_case#5 )
  printf_uchar::format_zero_padding#3 = phi( printf_uchar::@1/printf_uchar::format_zero_padding#4, printf_uchar::@2/printf_uchar::format_zero_padding#5 )
  printf_uchar::format_sign_always#4 = phi( printf_uchar::@1/printf_uchar::format_sign_always#5, printf_uchar::@2/printf_uchar::format_sign_always#6 )
  printf_uchar::format_justify_left#3 = phi( printf_uchar::@1/printf_uchar::format_justify_left#4, printf_uchar::@2/printf_uchar::format_justify_left#5 )
  printf_uchar::format_min_length#3 = phi( printf_uchar::@1/printf_uchar::format_min_length#4, printf_uchar::@2/printf_uchar::format_min_length#5 )
  printf_uchar::format_radix#2 = phi( printf_uchar::@1/printf_uchar::format_radix#4, printf_uchar::@2/printf_uchar::format_radix#5 )
  printf_uchar::uvalue#2 = phi( printf_uchar::@1/printf_uchar::uvalue#3, printf_uchar::@2/printf_uchar::uvalue#4 )
  printf_uchar::$2 = phi( printf_uchar::@1/printf_uchar::$1, printf_uchar::@2/printf_uchar::$0 )
Adding number conversion cast (unumber) 0 in printf_number_buffer::$26 = 0 != printf_number_buffer::format_min_length#3
Adding number conversion cast (unumber) 0 in printf_number_buffer::$27 = 0 != printf_number_buffer::format_justify_left#3
Adding number conversion cast (unumber) 0 in printf_number_buffer::$28 = 0 != printf_number_buffer::format_zero_padding#3
Adding number conversion cast (unumber) 0 in printf_number_buffer::$29 = 0 != printf_number_buffer::buffer_sign#3
Adding number conversion cast (snumber) 0 in printf_number_buffer::$22 = printf_number_buffer::padding#1 < 0
Adding number conversion cast (snumber) 0 in printf_number_buffer::padding#2 = 0
Adding number conversion cast (unumber) 0 in printf_number_buffer::$30 = 0 != printf_number_buffer::buffer_sign#4
Adding number conversion cast (unumber) 0 in printf_number_buffer::$31 = 0 != printf_number_buffer::format_upper_case#3
Adding number conversion cast (unumber) 0 in printf_number_buffer::$32 = 0 != printf_number_buffer::format_zero_padding#5
Adding number conversion cast (unumber) 8 in printf_uint::uvalue#0 = 8
Adding number conversion cast (unumber) 1 in stackpush(byte) = 1
Adding number conversion cast (unumber) 8 in queen::$0 = queen::column <= 8
Adding number conversion cast (unumber) 0 in queen::$7 = 0 != queen::$1
Adding number conversion cast (unumber) 8 in queen::$3 = queen::r == 8
Adding number conversion cast (unumber) 1 in queen::$4 = queen::r + 1
Adding number conversion cast (unumber) queen::$4 in queen::$4 = queen::r + (unumber)1
Adding number conversion cast (unumber) 1 in legal::$0 = legal::row#1 - 1
Adding number conversion cast (unumber) legal::$0 in legal::$0 = legal::row#1 - (unumber)1
Adding number conversion cast (unumber) 1 in legal::return#1 = 1
Adding number conversion cast (unumber) 0 in legal::return#2 = 0
Adding number conversion cast (unumber) 0 in legal::return#3 = 0
Adding number conversion cast (unumber) 0 in gotoxy::x#3 = 0
Adding number conversion cast (unumber) 5 in gotoxy::y#3 = 5
Adding number conversion cast (unumber) 8 in print::$2 = print::i#2 <= 8
Adding number conversion cast (unumber) 8 in print::$4 = print::i1#2 <= 8
Adding number conversion cast (unumber) 8 in print::$6 = print::j#2 <= 8
Successful SSA optimization PassNAddNumberTypeConversions
Adding number conversion cast (unumber) 0 in printf_ulong::$0 = 0
Adding number conversion cast (unumber) 0 in printf_uint::$0 = 0
Adding number conversion cast (unumber) 0 in printf_uchar::$0 = 0
Successful SSA optimization PassNAddNumberTypeConversions
Inlining cast memcpy::src#0 = (byte*)memcpy::source#2
Inlining cast memcpy::dst#0 = (byte*)memcpy::destination#2
Inlining cast memset::dst#0 = (byte*)memset::str#3
Inlining cast utoa::max_digits#1 = (unumber)5
Inlining cast utoa::max_digits#2 = (unumber)4
Inlining cast utoa::max_digits#3 = (unumber)6
Inlining cast utoa::max_digits#4 = (unumber)$10
Inlining cast *utoa::buffer#2 = (unumber)0
Inlining cast *utoa::buffer#3 = (unumber)0
Inlining cast utoa::started#1 = (unumber)1
Inlining cast ultoa::max_digits#1 = (unumber)$a
Inlining cast ultoa::max_digits#2 = (unumber)8
Inlining cast ultoa::max_digits#3 = (unumber)$b
Inlining cast ultoa::max_digits#4 = (unumber)$20
Inlining cast *ultoa::buffer#2 = (unumber)0
Inlining cast *ultoa::buffer#3 = (unumber)0
Inlining cast ultoa::started#1 = (unumber)1
Inlining cast uctoa::max_digits#1 = (unumber)3
Inlining cast uctoa::max_digits#2 = (unumber)2
Inlining cast uctoa::max_digits#3 = (unumber)3
Inlining cast uctoa::max_digits#4 = (unumber)8
Inlining cast *uctoa::buffer#2 = (unumber)0
Inlining cast *uctoa::buffer#3 = (unumber)0
Inlining cast uctoa::started#1 = (unumber)1
Inlining cast conio_cursor_x = (unumber)0
Inlining cast conio_cursor_y = (unumber)0
Inlining cast gotoxy::y#0 = (unumber)0
Inlining cast gotoxy::x#0 = (unumber)0
Inlining cast conio_cursor_x = (unumber)0
Inlining cast memcpy::num#0 = (unumber)$19*$28-$28
Inlining cast memcpy::num#1 = (unumber)$19*$28-$28
Inlining cast memset::num#0 = (unumber)$28
Inlining cast memset::num#1 = (unumber)$28
Inlining cast gotoxy::x#1 = (unumber)0
Inlining cast gotoxy::y#1 = (unumber)0
Inlining cast gotoxy::x#2 = (unumber)0
Inlining cast conio_c64_init::line#1 = (unumber)$19-1
Inlining cast printf_ulong::$0 = (unumber)0
Inlining cast printf_uint::$0 = (unumber)0
Inlining cast printf_uchar::$0 = (unumber)0
Inlining cast printf_number_buffer::padding#2 = (snumber)0
Inlining cast printf_uint::uvalue#0 = (unumber)8
Inlining cast stackpush(byte) = (unumber)1
Inlining cast legal::return#1 = (unumber)1
Inlining cast legal::return#2 = (unumber)0
Inlining cast legal::return#3 = (unumber)0
Inlining cast gotoxy::x#3 = (unumber)0
Inlining cast gotoxy::y#3 = (unumber)5
Successful SSA optimization Pass2InlineCast
Simplifying constant pointer cast (byte*) 55296
Simplifying constant pointer cast (byte*) 1024
Simplifying constant pointer cast (byte*) 214
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 5
Simplifying constant integer cast 4
Simplifying constant integer cast 6
Simplifying constant integer cast $10
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast $a
Simplifying constant integer cast 8
Simplifying constant integer cast $b
Simplifying constant integer cast $20
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 3
Simplifying constant integer cast 2
Simplifying constant integer cast 3
Simplifying constant integer cast 8
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast uctoa::value#3
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast $19
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $19
Simplifying constant integer cast $28
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $19
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $19
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 8
Simplifying constant integer cast 1
Simplifying constant integer cast 8
Simplifying constant integer cast 0
Simplifying constant integer cast 8
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 5
Simplifying constant integer cast 8
Simplifying constant integer cast 8
Simplifying constant integer cast 8
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 5
Finalized unsigned number type (byte) 4
Finalized unsigned number type (byte) 6
Finalized unsigned number type (byte) $10
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) $a
Finalized unsigned number type (byte) 8
Finalized unsigned number type (byte) $b
Finalized unsigned number type (byte) $20
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 3
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 3
Finalized unsigned number type (byte) 8
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) $19
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $19
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $19
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $19
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized signed number type (signed byte) 0
Finalized signed number type (signed byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 8
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 8
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 8
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 5
Finalized unsigned number type (byte) 8
Finalized unsigned number type (byte) 8
Finalized unsigned number type (byte) 8
Successful SSA optimization PassNFinalizeNumberTypeConversions
Inferred type updated to byte in utoa::$4 = utoa::max_digits#5 - 1
Inferred type updated to byte in ultoa::$4 = ultoa::max_digits#5 - 1
Inferred type updated to byte in uctoa::$4 = uctoa::max_digits#5 - 1
Inferred type updated to word in gotoxy::$4 = gotoxy::$7 * $28
Inferred type updated to byte in printf_ulong::$0 = 0
Inferred type updated to byte for printf_ulong::$2
Inferred type updated to byte in printf_uint::$0 = 0
Inferred type updated to byte for printf_uint::$2
Inferred type updated to byte in printf_uchar::$0 = 0
Inferred type updated to byte for printf_uchar::$2
Inferred type updated to byte in queen::$4 = queen::r + 1
Inferred type updated to byte in legal::$0 = legal::row#1 - 1
Inversing boolean not [20] memset::$1 = memset::num#2 <= 0 from [19] memset::$0 = memset::num#2 > 0
Inversing boolean not [350] gotoxy::$1 = gotoxy::y#4 <= $19 from [349] gotoxy::$0 = gotoxy::y#4 > $19
Inversing boolean not [354] gotoxy::$3 = gotoxy::x#4 < $28 from [353] gotoxy::$2 = gotoxy::x#4 >= $28
Inversing boolean not [380] cputc::$2 = conio_cursor_x != $28 from [379] cputc::$1 = conio_cursor_x == $28
Inversing boolean not [404] cscroll::$1 = conio_cursor_y != $19 from [403] cscroll::$0 = conio_cursor_y == $19
Inversing boolean not [437] conio_c64_init::$1 = conio_c64_init::line#0 < $19 from [436] conio_c64_init::$0 = conio_c64_init::line#0 >= $19
Inversing boolean not [531] printf_number_buffer::$0 = 0 == printf_number_buffer::format_min_length#3 from [530] printf_number_buffer::$26 = 0 != printf_number_buffer::format_min_length#3
Inversing boolean not [535] printf_number_buffer::$1 = 0 == printf_number_buffer::format_justify_left#3 from [534] printf_number_buffer::$27 = 0 != printf_number_buffer::format_justify_left#3
Inversing boolean not [537] printf_number_buffer::$2 = 0 == printf_number_buffer::format_zero_padding#3 from [536] printf_number_buffer::$28 = 0 != printf_number_buffer::format_zero_padding#3
Inversing boolean not [550] printf_number_buffer::$20 = 0 == printf_number_buffer::buffer_sign#3 from [549] printf_number_buffer::$29 = 0 != printf_number_buffer::buffer_sign#3
Inversing boolean not [557] printf_number_buffer::$23 = printf_number_buffer::padding#1 >= 0 from [556] printf_number_buffer::$22 = printf_number_buffer::padding#1 < 0
Inversing boolean not [565] printf_number_buffer::$7 = 0 == printf_number_buffer::buffer_sign#4 from [564] printf_number_buffer::$30 = 0 != printf_number_buffer::buffer_sign#4
Inversing boolean not [582] printf_number_buffer::$12 = 0 == printf_number_buffer::format_upper_case#3 from [581] printf_number_buffer::$31 = 0 != printf_number_buffer::format_upper_case#3
Inversing boolean not [594] printf_number_buffer::$14 = 0 == printf_number_buffer::format_zero_padding#5 from [593] printf_number_buffer::$32 = 0 != printf_number_buffer::format_zero_padding#5
Inversing boolean not [650] queen::$2 = 0 == queen::$1 from [649] queen::$7 = 0 != queen::$1
Inversing boolean not [690] legal::$6 = legal::$3 != legal::$4 from [689] legal::$5 = legal::$3 == legal::$4
Successful SSA optimization Pass2UnaryNotSimplification
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias candidate removed (volatile)queen::row#0 = queen::r 
Alias memcpy::src_end#0 = memcpy::$0 
Alias memcpy::src#2 = memcpy::src#3 
Alias memcpy::dst#2 = memcpy::dst#3 
Alias memcpy::src_end#1 = memcpy::src_end#2 
Alias memcpy::destination#3 = memcpy::destination#5 memcpy::destination#4 memcpy::return#0 memcpy::return#4 memcpy::return#1 
Alias memset::return#0 = memset::str#2 memset::return#4 memset::return#1 
Alias memset::str#3 = memset::str#4 
Alias memset::num#2 = memset::num#3 
Alias memset::c#4 = memset::c#5 
Alias memset::end#0 = memset::$2 
Alias memset::c#2 = memset::c#3 
Alias memset::dst#2 = memset::dst#3 
Alias memset::end#1 = memset::end#2 
Alias memset::str#5 = memset::str#6 
Alias strlen::len#2 = strlen::len#4 strlen::len#3 strlen::return#0 strlen::return#3 strlen::return#1 
Alias strlen::str#2 = strlen::str#3 
Alias toupper::ch#1 = toupper::ch#2 toupper::ch#3 toupper::return#1 
Alias toupper::return#0 = toupper::$3 
Alias toupper::return#2 = toupper::return#4 
Alias strupr::src#0 = strupr::str#1 
Alias strupr::src#2 = strupr::src#3 strupr::src#4 
Alias strupr::str#2 = strupr::str#5 strupr::str#3 strupr::str#4 strupr::return#0 strupr::return#3 strupr::return#1 
Alias toupper::return#3 = toupper::return#5 
Alias utoa::value#10 = utoa::value#8 utoa::value#12 utoa::value#13 utoa::value#9 utoa::value#14 utoa::value#15 utoa::value#11 
Alias utoa::buffer#10 = utoa::buffer#17 utoa::buffer#21 utoa::buffer#16 utoa::buffer#18 utoa::buffer#13 utoa::buffer#19 utoa::buffer#20 utoa::buffer#6 
Alias utoa::radix#1 = utoa::radix#2 utoa::radix#3 utoa::radix#4 
Alias utoa::digit#2 = utoa::digit#3 utoa::digit#6 utoa::digit#5 
Alias utoa::digit_values#10 = utoa::digit_values#5 utoa::digit_values#6 utoa::digit_values#9 
Alias utoa::value#2 = utoa::value#5 utoa::value#3 utoa::value#4 
Alias utoa::started#2 = utoa::started#3 
Alias utoa::buffer#11 = utoa::buffer#12 utoa::buffer#7 utoa::buffer#8 utoa::buffer#9 
Alias utoa::max_digits#10 = utoa::max_digits#8 utoa::max_digits#5 utoa::max_digits#9 
Alias utoa::digit_value#0 = utoa::digit_value#1 
Alias utoa_append::return#0 = utoa_append::return#3 
Alias utoa::value#0 = utoa::$9 
Alias ultoa::value#10 = ultoa::value#8 ultoa::value#12 ultoa::value#13 ultoa::value#9 ultoa::value#14 ultoa::value#15 ultoa::value#11 
Alias ultoa::buffer#10 = ultoa::buffer#17 ultoa::buffer#21 ultoa::buffer#16 ultoa::buffer#18 ultoa::buffer#13 ultoa::buffer#19 ultoa::buffer#20 ultoa::buffer#6 
Alias ultoa::radix#1 = ultoa::radix#2 ultoa::radix#3 ultoa::radix#4 
Alias ultoa::digit#2 = ultoa::digit#3 ultoa::digit#6 ultoa::digit#5 
Alias ultoa::digit_values#10 = ultoa::digit_values#5 ultoa::digit_values#6 ultoa::digit_values#9 
Alias ultoa::value#2 = ultoa::value#5 ultoa::value#3 ultoa::value#4 
Alias ultoa::started#2 = ultoa::started#3 
Alias ultoa::buffer#11 = ultoa::buffer#12 ultoa::buffer#7 ultoa::buffer#8 ultoa::buffer#9 
Alias ultoa::max_digits#10 = ultoa::max_digits#8 ultoa::max_digits#5 ultoa::max_digits#9 
Alias ultoa::digit_value#0 = ultoa::digit_value#1 
Alias ultoa_append::return#0 = ultoa_append::return#3 
Alias ultoa::value#0 = ultoa::$9 
Alias uctoa::value#10 = uctoa::value#8 uctoa::value#12 uctoa::value#13 uctoa::value#9 uctoa::value#14 uctoa::value#15 uctoa::value#11 
Alias uctoa::buffer#10 = uctoa::buffer#17 uctoa::buffer#21 uctoa::buffer#16 uctoa::buffer#18 uctoa::buffer#13 uctoa::buffer#19 uctoa::buffer#20 uctoa::buffer#6 
Alias uctoa::radix#1 = uctoa::radix#2 uctoa::radix#3 uctoa::radix#4 
Alias uctoa::digit_values#10 = uctoa::digit_values#5 uctoa::digit_values#6 uctoa::digit_values#9 
Alias uctoa::digit#2 = uctoa::digit#3 uctoa::digit#6 uctoa::digit#5 
Alias uctoa::value#2 = uctoa::value#5 uctoa::value#3 uctoa::$10 uctoa::value#4 
Alias uctoa::started#2 = uctoa::started#3 
Alias uctoa::buffer#11 = uctoa::buffer#12 uctoa::buffer#7 uctoa::buffer#8 uctoa::buffer#9 
Alias uctoa::max_digits#10 = uctoa::max_digits#8 uctoa::max_digits#5 uctoa::max_digits#9 
Alias uctoa::digit_value#0 = uctoa::digit_value#1 
Alias uctoa_append::return#0 = uctoa_append::return#3 
Alias uctoa::value#0 = uctoa::$9 
Alias uctoa_append::digit#2 = uctoa_append::digit#4 uctoa_append::digit#3 
Alias uctoa_append::value#2 = uctoa_append::value#3 uctoa_append::value#4 uctoa_append::return#1 uctoa_append::return#4 uctoa_append::return#2 
Alias uctoa_append::sub#1 = uctoa_append::sub#2 
Alias uctoa_append::buffer#1 = uctoa_append::buffer#4 uctoa_append::buffer#2 
Alias utoa_append::digit#2 = utoa_append::digit#4 utoa_append::digit#3 
Alias utoa_append::value#2 = utoa_append::value#3 utoa_append::value#4 utoa_append::return#1 utoa_append::return#4 utoa_append::return#2 
Alias utoa_append::sub#1 = utoa_append::sub#2 
Alias utoa_append::buffer#1 = utoa_append::buffer#4 utoa_append::buffer#2 
Alias ultoa_append::digit#2 = ultoa_append::digit#4 ultoa_append::digit#3 
Alias ultoa_append::value#2 = ultoa_append::value#3 ultoa_append::value#4 ultoa_append::return#1 ultoa_append::return#4 ultoa_append::return#2 
Alias ultoa_append::sub#1 = ultoa_append::sub#2 
Alias ultoa_append::buffer#1 = ultoa_append::buffer#4 ultoa_append::buffer#2 
Alias clrscr::line_text#5 = clrscr::line_text#6 
Alias clrscr::line_cols#5 = clrscr::line_cols#6 
Alias clrscr::l#2 = clrscr::l#5 
Alias clrscr::line_text#2 = clrscr::line_text#4 clrscr::line_text#3 
Alias clrscr::c#2 = clrscr::c#3 
Alias clrscr::line_cols#2 = clrscr::line_cols#4 clrscr::line_cols#3 
Alias clrscr::l#3 = clrscr::l#6 clrscr::l#4 
Alias gotoxy::x#6 = gotoxy::x#7 
Alias gotoxy::line_offset#0 = gotoxy::$4 
Alias gotoxy::y#6 = gotoxy::y#7 
Alias cputc::c#3 = cputc::c#4 
Alias cputs::c#1 = cputs::$0 cputs::c#2 
Alias cputs::s#0 = cputs::s#14 cputs::s#13 
Alias printf_padding::pad#3 = printf_padding::pad#4 printf_padding::pad#6 
Alias printf_padding::i#2 = printf_padding::i#4 printf_padding::i#3 
Alias printf_padding::length#3 = printf_padding::length#6 printf_padding::length#5 
Alias printf_ulong::uvalue#3 = printf_ulong::uvalue#5 printf_ulong::uvalue#4 
Alias printf_ulong::format_radix#4 = printf_ulong::format_radix#6 printf_ulong::format_radix#5 
Alias printf_ulong::format_min_length#4 = printf_ulong::format_min_length#6 printf_ulong::format_min_length#5 
Alias printf_ulong::format_justify_left#4 = printf_ulong::format_justify_left#6 printf_ulong::format_justify_left#5 
Alias printf_ulong::format_sign_always#2 = printf_ulong::format_sign_always#5 printf_ulong::format_sign_always#6 
Alias printf_ulong::format_zero_padding#4 = printf_ulong::format_zero_padding#6 printf_ulong::format_zero_padding#5 
Alias printf_ulong::format_upper_case#4 = printf_ulong::format_upper_case#6 printf_ulong::format_upper_case#5 
Alias printf_ulong::format_min_length#2 = printf_ulong::format_min_length#3 
Alias printf_ulong::format_justify_left#2 = printf_ulong::format_justify_left#3 
Alias printf_ulong::format_sign_always#3 = printf_ulong::format_sign_always#4 
Alias printf_ulong::format_zero_padding#2 = printf_ulong::format_zero_padding#3 
Alias printf_ulong::format_upper_case#2 = printf_ulong::format_upper_case#3 
Alias printf_ulong::format_radix#2 = printf_ulong::format_radix#3 
Alias printf_uint::uvalue#2 = printf_uint::uvalue#4 printf_uint::uvalue#3 
Alias printf_uint::format_radix#3 = printf_uint::format_radix#5 printf_uint::format_radix#4 
Alias printf_uint::format_min_length#3 = printf_uint::format_min_length#5 printf_uint::format_min_length#4 
Alias printf_uint::format_justify_left#3 = printf_uint::format_justify_left#5 printf_uint::format_justify_left#4 
Alias printf_uint::format_sign_always#1 = printf_uint::format_sign_always#4 printf_uint::format_sign_always#5 
Alias printf_uint::format_zero_padding#3 = printf_uint::format_zero_padding#5 printf_uint::format_zero_padding#4 
Alias printf_uint::format_upper_case#3 = printf_uint::format_upper_case#5 printf_uint::format_upper_case#4 
Alias printf_uint::format_min_length#1 = printf_uint::format_min_length#2 
Alias printf_uint::format_justify_left#1 = printf_uint::format_justify_left#2 
Alias printf_uint::format_sign_always#2 = printf_uint::format_sign_always#3 
Alias printf_uint::format_zero_padding#1 = printf_uint::format_zero_padding#2 
Alias printf_uint::format_upper_case#1 = printf_uint::format_upper_case#2 
Alias printf_uint::format_radix#1 = printf_uint::format_radix#2 
Alias printf_uchar::uvalue#3 = printf_uchar::uvalue#5 printf_uchar::uvalue#4 
Alias printf_uchar::format_radix#4 = printf_uchar::format_radix#6 printf_uchar::format_radix#5 
Alias printf_uchar::format_min_length#4 = printf_uchar::format_min_length#6 printf_uchar::format_min_length#5 
Alias printf_uchar::format_justify_left#4 = printf_uchar::format_justify_left#6 printf_uchar::format_justify_left#5 
Alias printf_uchar::format_sign_always#2 = printf_uchar::format_sign_always#5 printf_uchar::format_sign_always#6 
Alias printf_uchar::format_zero_padding#4 = printf_uchar::format_zero_padding#6 printf_uchar::format_zero_padding#5 
Alias printf_uchar::format_upper_case#4 = printf_uchar::format_upper_case#6 printf_uchar::format_upper_case#5 
Alias printf_uchar::format_min_length#2 = printf_uchar::format_min_length#3 
Alias printf_uchar::format_justify_left#2 = printf_uchar::format_justify_left#3 
Alias printf_uchar::format_sign_always#3 = printf_uchar::format_sign_always#4 
Alias printf_uchar::format_zero_padding#2 = printf_uchar::format_zero_padding#3 
Alias printf_uchar::format_upper_case#2 = printf_uchar::format_upper_case#3 
Alias printf_uchar::format_radix#2 = printf_uchar::format_radix#3 
Alias printf_number_buffer::buffer_digits#20 = printf_number_buffer::buffer_digits#3 printf_number_buffer::buffer_digits#6 printf_number_buffer::buffer_digits#21 
Alias printf_number_buffer::buffer_sign#13 = printf_number_buffer::buffer_sign#6 printf_number_buffer::buffer_sign#9 printf_number_buffer::buffer_sign#3 
Alias printf_number_buffer::format_min_length#3 = printf_number_buffer::format_min_length#7 printf_number_buffer::format_min_length#5 printf_number_buffer::format_min_length#6 
Alias printf_number_buffer::format_justify_left#10 = printf_number_buffer::format_justify_left#13 printf_number_buffer::format_justify_left#5 printf_number_buffer::format_justify_left#9 
Alias printf_number_buffer::format_zero_padding#12 = printf_number_buffer::format_zero_padding#18 printf_number_buffer::format_zero_padding#6 printf_number_buffer::format_zero_padding#13 
Alias printf_number_buffer::format_upper_case#12 = printf_number_buffer::format_upper_case#18 printf_number_buffer::format_upper_case#16 printf_number_buffer::format_upper_case#17 
Alias strlen::return#2 = strlen::return#4 
Alias printf_number_buffer::padding#1 = printf_number_buffer::$21 
Alias printf_number_buffer::len#0 = printf_number_buffer::len#3 
Alias printf_number_buffer::format_justify_left#6 = printf_number_buffer::format_justify_left#7 
Alias printf_number_buffer::format_zero_padding#7 = printf_number_buffer::format_zero_padding#8 
Alias printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#11 
Alias printf_number_buffer::format_upper_case#13 = printf_number_buffer::format_upper_case#14 
Alias printf_number_buffer::buffer_digits#17 = printf_number_buffer::buffer_digits#18 
Alias printf_number_buffer::padding#12 = printf_number_buffer::padding#4 printf_number_buffer::padding#3 
Alias printf_number_buffer::buffer_sign#12 = printf_number_buffer::buffer_sign#7 printf_number_buffer::buffer_sign#8 
Alias printf_number_buffer::format_zero_padding#14 = printf_number_buffer::format_zero_padding#19 printf_number_buffer::format_zero_padding#3 
Alias printf_number_buffer::format_upper_case#10 = printf_number_buffer::format_upper_case#15 printf_number_buffer::format_upper_case#9 
Alias printf_number_buffer::buffer_digits#14 = printf_number_buffer::buffer_digits#19 printf_number_buffer::buffer_digits#15 
Alias printf_number_buffer::format_justify_left#20 = printf_number_buffer::format_justify_left#22 printf_number_buffer::format_justify_left#3 
Alias printf_number_buffer::buffer_sign#4 = printf_number_buffer::buffer_sign#5 
Alias printf_number_buffer::format_zero_padding#10 = printf_number_buffer::format_zero_padding#15 printf_number_buffer::format_zero_padding#9 
Alias printf_number_buffer::padding#10 = printf_number_buffer::padding#13 printf_number_buffer::padding#9 
Alias printf_number_buffer::format_upper_case#11 = printf_number_buffer::format_upper_case#7 printf_number_buffer::format_upper_case#6 
Alias printf_number_buffer::buffer_digits#11 = printf_number_buffer::buffer_digits#16 printf_number_buffer::buffer_digits#12 
Alias printf_number_buffer::format_justify_left#17 = printf_number_buffer::format_justify_left#21 printf_number_buffer::format_justify_left#18 
Alias printf_number_buffer::padding#16 = printf_number_buffer::padding#6 printf_number_buffer::padding#5 
Alias printf_number_buffer::format_upper_case#4 = printf_number_buffer::format_upper_case#8 printf_number_buffer::format_upper_case#5 
Alias printf_number_buffer::buffer_digits#10 = printf_number_buffer::buffer_digits#13 printf_number_buffer::buffer_digits#9 
Alias printf_number_buffer::format_zero_padding#20 = printf_number_buffer::format_zero_padding#22 printf_number_buffer::format_zero_padding#4 
Alias printf_number_buffer::format_justify_left#14 = printf_number_buffer::format_justify_left#19 printf_number_buffer::format_justify_left#15 
Alias printf_number_buffer::format_zero_padding#11 = printf_number_buffer::format_zero_padding#5 
Alias printf_number_buffer::format_justify_left#4 = printf_number_buffer::format_justify_left#8 
Alias printf_number_buffer::padding#11 = printf_number_buffer::padding#7 printf_number_buffer::padding#8 
Alias printf_number_buffer::buffer_digits#5 = printf_number_buffer::buffer_digits#8 printf_number_buffer::buffer_digits#7 
Alias printf_number_buffer::format_zero_padding#16 = printf_number_buffer::format_zero_padding#21 printf_number_buffer::format_zero_padding#17 
Alias printf_number_buffer::format_justify_left#11 = printf_number_buffer::format_justify_left#16 printf_number_buffer::format_justify_left#12 
Alias printf_number_buffer::padding#14 = printf_number_buffer::padding#17 printf_number_buffer::padding#15 
Alias legal::return#0 = legal::return#5 
Alias legal::i#2 = legal::i#3 legal::i#4 legal::i#5 legal::i#7 legal::i#6 
Alias legal::column#1 = legal::column#3 legal::column#2 legal::column#7 legal::column#6 legal::column#5 
Alias legal::row#1 = legal::row#6 legal::row#5 legal::row#2 legal::row#7 legal::row#4 
Alias diff::return#0 = diff::return#5 
Alias diff::return#1 = diff::return#6 
Alias legal::return#4 = legal::return#6 
Alias diff::b#2 = diff::b#3 diff::b#4 
Alias diff::a#2 = diff::a#3 diff::a#4 
Alias diff::return#2 = diff::$2 
Alias diff::return#3 = diff::$1 
Alias diff::return#4 = diff::return#7 
Alias print::i#2 = print::i#3 print::i#4 
Alias print::i1#2 = print::i1#6 print::i1#3 print::i1#9 
Alias print::i1#10 = print::i1#4 print::i1#7 print::i1#5 print::i1#12 print::i1#13 print::i1#11 
Alias print::j#2 = print::j#3 print::j#7 print::j#5 print::j#8 print::j#6 
Successful SSA optimization Pass2AliasElimination
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias candidate removed (volatile)queen::row#0 = queen::r 
Alias utoa::value#10 = utoa::value#7 
Alias utoa::buffer#10 = utoa::buffer#15 
Alias utoa::digit#2 = utoa::digit#4 
Alias utoa::max_digits#10 = utoa::max_digits#6 
Alias utoa::digit_values#10 = utoa::digit_values#7 
Alias ultoa::value#10 = ultoa::value#7 
Alias ultoa::buffer#10 = ultoa::buffer#15 
Alias ultoa::digit#2 = ultoa::digit#4 
Alias ultoa::max_digits#10 = ultoa::max_digits#6 
Alias ultoa::digit_values#10 = ultoa::digit_values#7 
Alias uctoa::value#10 = uctoa::value#7 
Alias uctoa::buffer#10 = uctoa::buffer#15 
Alias uctoa::digit#2 = uctoa::digit#4 
Alias uctoa::max_digits#10 = uctoa::max_digits#6 
Alias uctoa::digit_values#10 = uctoa::digit_values#7 
Alias gotoxy::x#4 = gotoxy::x#6 
Alias gotoxy::y#5 = gotoxy::y#6 
Alias printf_ulong::uvalue#2 = printf_ulong::uvalue#3 
Alias printf_ulong::format_radix#2 = printf_ulong::format_radix#4 
Alias printf_ulong::format_min_length#2 = printf_ulong::format_min_length#4 
Alias printf_ulong::format_justify_left#2 = printf_ulong::format_justify_left#4 
Alias printf_ulong::format_sign_always#2 = printf_ulong::format_sign_always#3 
Alias printf_ulong::format_zero_padding#2 = printf_ulong::format_zero_padding#4 
Alias printf_ulong::format_upper_case#2 = printf_ulong::format_upper_case#4 
Alias printf_uint::uvalue#1 = printf_uint::uvalue#2 
Alias printf_uint::format_radix#1 = printf_uint::format_radix#3 
Alias printf_uint::format_min_length#1 = printf_uint::format_min_length#3 
Alias printf_uint::format_justify_left#1 = printf_uint::format_justify_left#3 
Alias printf_uint::format_sign_always#1 = printf_uint::format_sign_always#2 
Alias printf_uint::format_zero_padding#1 = printf_uint::format_zero_padding#3 
Alias printf_uint::format_upper_case#1 = printf_uint::format_upper_case#3 
Alias printf_uchar::uvalue#2 = printf_uchar::uvalue#3 
Alias printf_uchar::format_radix#2 = printf_uchar::format_radix#4 
Alias printf_uchar::format_min_length#2 = printf_uchar::format_min_length#4 
Alias printf_uchar::format_justify_left#2 = printf_uchar::format_justify_left#4 
Alias printf_uchar::format_sign_always#2 = printf_uchar::format_sign_always#3 
Alias printf_uchar::format_zero_padding#2 = printf_uchar::format_zero_padding#4 
Alias printf_uchar::format_upper_case#2 = printf_uchar::format_upper_case#4 
Alias printf_number_buffer::format_min_length#3 = printf_number_buffer::format_min_length#4 
Alias printf_number_buffer::format_justify_left#10 = printf_number_buffer::format_justify_left#6 
Alias printf_number_buffer::format_zero_padding#12 = printf_number_buffer::format_zero_padding#7 
Alias printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#13 
Alias printf_number_buffer::format_upper_case#12 = printf_number_buffer::format_upper_case#13 
Alias printf_number_buffer::buffer_digits#17 = printf_number_buffer::buffer_digits#20 
Alias printf_number_buffer::buffer_sign#12 = printf_number_buffer::buffer_sign#4 
Alias printf_number_buffer::format_zero_padding#10 = printf_number_buffer::format_zero_padding#14 printf_number_buffer::format_zero_padding#20 printf_number_buffer::format_zero_padding#16 printf_number_buffer::format_zero_padding#11 
Alias printf_number_buffer::padding#10 = printf_number_buffer::padding#12 printf_number_buffer::padding#16 printf_number_buffer::padding#14 printf_number_buffer::padding#11 
Alias printf_number_buffer::format_upper_case#10 = printf_number_buffer::format_upper_case#11 printf_number_buffer::format_upper_case#4 printf_number_buffer::format_upper_case#3 
Alias printf_number_buffer::buffer_digits#10 = printf_number_buffer::buffer_digits#11 printf_number_buffer::buffer_digits#14 printf_number_buffer::buffer_digits#5 printf_number_buffer::buffer_digits#4 
Alias printf_number_buffer::format_justify_left#11 = printf_number_buffer::format_justify_left#17 printf_number_buffer::format_justify_left#20 printf_number_buffer::format_justify_left#14 printf_number_buffer::format_justify_left#4 
Alias print::j#2 = print::j#4 
Alias print::i1#10 = print::i1#8 
Successful SSA optimization Pass2AliasElimination
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias candidate removed (volatile)queen::row#0 = queen::r 
Alias printf_number_buffer::format_justify_left#10 = printf_number_buffer::format_justify_left#11 
Alias printf_number_buffer::format_zero_padding#10 = printf_number_buffer::format_zero_padding#12 
Alias printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#12 
Alias printf_number_buffer::format_upper_case#10 = printf_number_buffer::format_upper_case#12 
Alias printf_number_buffer::buffer_digits#10 = printf_number_buffer::buffer_digits#17 
Successful SSA optimization Pass2AliasElimination
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias candidate removed (volatile)queen::row#0 = queen::r 
Identical Phi Values memcpy::src_end#1 memcpy::src_end#0
Identical Phi Values memcpy::destination#3 memcpy::destination#2
Identical Phi Values memset::end#1 memset::end#0
Identical Phi Values memset::str#5 memset::str#3
Identical Phi Values memset::c#2 memset::c#4
Identical Phi Values strlen::str#4 strlen::str#1
Identical Phi Values toupper::ch#1 toupper::ch#0
Identical Phi Values strupr::src#0 strupr::str#0
Identical Phi Values strupr::str#2 strupr::src#0
Identical Phi Values utoa::radix#1 utoa::radix#0
Identical Phi Values utoa::value#10 utoa::value#1
Identical Phi Values utoa::buffer#10 utoa::buffer#5
Identical Phi Values utoa::max_digits#10 utoa::max_digits#7
Identical Phi Values utoa::digit_values#10 utoa::digit_values#8
Identical Phi Values ultoa::radix#1 ultoa::radix#0
Identical Phi Values ultoa::value#10 ultoa::value#1
Identical Phi Values ultoa::buffer#10 ultoa::buffer#5
Identical Phi Values ultoa::max_digits#10 ultoa::max_digits#7
Identical Phi Values ultoa::digit_values#10 ultoa::digit_values#8
Identical Phi Values uctoa::radix#1 uctoa::radix#0
Identical Phi Values uctoa::value#10 uctoa::value#1
Identical Phi Values uctoa::buffer#10 uctoa::buffer#5
Identical Phi Values uctoa::max_digits#10 uctoa::max_digits#7
Identical Phi Values uctoa::digit_values#10 uctoa::digit_values#8
Identical Phi Values uctoa_append::value#5 uctoa_append::value#0
Identical Phi Values uctoa_append::sub#3 uctoa_append::sub#0
Identical Phi Values uctoa_append::buffer#3 uctoa_append::buffer#0
Identical Phi Values uctoa_append::sub#1 uctoa_append::sub#3
Identical Phi Values uctoa_append::buffer#1 uctoa_append::buffer#3
Identical Phi Values utoa_append::value#5 utoa_append::value#0
Identical Phi Values utoa_append::sub#3 utoa_append::sub#0
Identical Phi Values utoa_append::buffer#3 utoa_append::buffer#0
Identical Phi Values utoa_append::sub#1 utoa_append::sub#3
Identical Phi Values utoa_append::buffer#1 utoa_append::buffer#3
Identical Phi Values ultoa_append::value#5 ultoa_append::value#0
Identical Phi Values ultoa_append::sub#3 ultoa_append::sub#0
Identical Phi Values ultoa_append::buffer#3 ultoa_append::buffer#0
Identical Phi Values ultoa_append::sub#1 ultoa_append::sub#3
Identical Phi Values ultoa_append::buffer#1 ultoa_append::buffer#3
Identical Phi Values clrscr::line_text#2 clrscr::line_text#5
Identical Phi Values clrscr::line_cols#2 clrscr::line_cols#5
Identical Phi Values clrscr::l#3 clrscr::l#2
Identical Phi Values printf_padding::length#3 printf_padding::length#4
Identical Phi Values printf_padding::pad#3 printf_padding::pad#5
Identical Phi Values printf_uint::format_sign_always#1 printf_uint::format_sign_always#0
Identical Phi Values printf_uint::uvalue#1 printf_uint::uvalue#0
Identical Phi Values printf_uint::format_radix#1 printf_uint::format_radix#0
Identical Phi Values printf_uint::format_min_length#1 printf_uint::format_min_length#0
Identical Phi Values printf_uint::format_justify_left#1 printf_uint::format_justify_left#0
Identical Phi Values printf_uint::format_zero_padding#1 printf_uint::format_zero_padding#0
Identical Phi Values printf_uint::format_upper_case#1 printf_uint::format_upper_case#0
Identical Phi Values legal::row#3 legal::row#0
Identical Phi Values legal::column#4 legal::column#0
Identical Phi Values legal::row#1 legal::row#3
Identical Phi Values legal::column#1 legal::column#4
Identical Phi Values print::i1#10 print::i1#2
Successful SSA optimization Pass2IdenticalPhiElimination
Identical Phi Values memset::return#0 memset::str#3
Successful SSA optimization Pass2IdenticalPhiElimination
Simple Condition memcpy::$1 [7] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2
Simple Condition memset::$1 [14] if(memset::num#2<=0) goto memset::@1
Simple Condition memset::$3 [21] if(memset::dst#2!=memset::end#0) goto memset::@4
Simple Condition strlen::$0 [29] if(0!=*strlen::str#2) goto strlen::@2
Simple Condition strupr::$1 [44] if(0!=*strupr::src#2) goto strupr::@2
Simple Condition utoa::$0 [56] if(utoa::radix#0==DECIMAL) goto utoa::@1
Simple Condition utoa::$1 [60] if(utoa::radix#0==HEXADECIMAL) goto utoa::@2
Simple Condition utoa::$2 [64] if(utoa::radix#0==OCTAL) goto utoa::@3
Simple Condition utoa::$3 [68] if(utoa::radix#0==BINARY) goto utoa::@4
Simple Condition utoa::$5 [85] if(utoa::digit#2<utoa::$4) goto utoa::@11
Simple Condition ultoa::$0 [110] if(ultoa::radix#0==DECIMAL) goto ultoa::@1
Simple Condition ultoa::$1 [114] if(ultoa::radix#0==HEXADECIMAL) goto ultoa::@2
Simple Condition ultoa::$2 [118] if(ultoa::radix#0==OCTAL) goto ultoa::@3
Simple Condition ultoa::$3 [122] if(ultoa::radix#0==BINARY) goto ultoa::@4
Simple Condition ultoa::$5 [139] if(ultoa::digit#2<ultoa::$4) goto ultoa::@11
Simple Condition uctoa::$0 [164] if(uctoa::radix#0==DECIMAL) goto uctoa::@1
Simple Condition uctoa::$1 [168] if(uctoa::radix#0==HEXADECIMAL) goto uctoa::@2
Simple Condition uctoa::$2 [172] if(uctoa::radix#0==OCTAL) goto uctoa::@3
Simple Condition uctoa::$3 [176] if(uctoa::radix#0==BINARY) goto uctoa::@4
Simple Condition uctoa::$5 [193] if(uctoa::digit#2<uctoa::$4) goto uctoa::@11
Simple Condition uctoa_append::$0 [216] if(uctoa_append::value#2>=uctoa_append::sub#0) goto uctoa_append::@2
Simple Condition utoa_append::$0 [225] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2
Simple Condition ultoa_append::$0 [234] if(ultoa_append::value#2>=ultoa_append::sub#0) goto ultoa_append::@2
Simple Condition clrscr::$0 [244] if(clrscr::l#2<$19) goto clrscr::@2
Simple Condition clrscr::$1 [252] if(clrscr::c#2<$28) goto clrscr::@5
Simple Condition gotoxy::$1 [262] if(gotoxy::y#4<=$19) goto gotoxy::@1
Simple Condition gotoxy::$3 [265] if(gotoxy::x#4<$28) goto gotoxy::@2
Simple Condition cputc::$0 [280] if(cputc::c#3=='
') goto cputc::@1
Simple Condition cputc::$2 [286] if(conio_cursor_x!=$28) goto cputc::@return
Simple Condition cputs::$2 [301] if(0!=cputs::c#1) goto cputs::@2
Simple Condition cscroll::$1 [306] if(conio_cursor_y!=$19) goto cscroll::@return
Simple Condition cscroll::$7 [308] if(0!=conio_scroll_enable) goto cscroll::@3
Simple Condition conio_c64_init::$1 [338] if(conio_c64_init::line#0<$19) goto conio_c64_init::@1
Simple Condition printf_padding::$0 [349] if(printf_padding::i#2<printf_padding::length#4) goto printf_padding::@2
Simple Condition printf_ulong::$5 [356] if(0!=printf_ulong::format_sign_always#2) goto printf_ulong::@1
Simple Condition printf_uint::$5 [377] if(0!=printf_uint::format_sign_always#0) goto printf_uint::@1
Simple Condition printf_uchar::$5 [398] if(0!=printf_uchar::format_sign_always#2) goto printf_uchar::@1
Simple Condition printf_number_buffer::$0 [420] if(0==printf_number_buffer::format_min_length#3) goto printf_number_buffer::@1
Simple Condition printf_number_buffer::$20 [434] if(0==printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@13
Simple Condition printf_number_buffer::$23 [439] if(printf_number_buffer::padding#1>=0) goto printf_number_buffer::@1
Simple Condition printf_number_buffer::$7 [443] if(0==printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@3
Simple Condition printf_number_buffer::$12 [453] if(0==printf_number_buffer::format_upper_case#10) goto printf_number_buffer::@5
Simple Condition queen::$0 [504] if(queen::column<=8) goto queen::@2
Simple Condition queen::$2 [511] if(0==queen::$1) goto queen::@3
Simple Condition queen::$3 [515] if(queen::r==8) goto queen::@4
Simple Condition legal::$1 [530] if(legal::i#2<=legal::$0) goto legal::@2
Simple Condition legal::$2 [532] if(board[legal::i#2]==legal::column#0) goto legal::@4
Simple Condition legal::$6 [546] if(legal::$3!=legal::$4) goto legal::@5
Simple Condition diff::$0 [553] if(diff::a#2<diff::b#2) goto diff::@1
Simple Condition print::$2 [576] if(print::i#2<=8) goto print::@2
Simple Condition print::$4 [589] if(print::i1#2<=8) goto print::@5
Simple Condition print::$6 [603] if(print::j#2<=8) goto print::@7
Simple Condition print::$7 [605] if(board[print::i1#2]==print::j#2) goto print::@9
Successful SSA optimization Pass2ConditionalJumpSimplification
Rewriting && if()-condition to two if()s [36] toupper::$2 = toupper::$0 && toupper::$1
Rewriting ! if()-condition to reversed if() [90] utoa::$8 = ! utoa::$7
Rewriting || if()-condition to two if()s [89] utoa::$7 = utoa::started#2 || utoa::$6
Rewriting ! if()-condition to reversed if() [144] ultoa::$8 = ! ultoa::$7
Rewriting || if()-condition to two if()s [143] ultoa::$7 = ultoa::started#2 || ultoa::$6
Rewriting ! if()-condition to reversed if() [197] uctoa::$8 = ! uctoa::$7
Rewriting || if()-condition to two if()s [196] uctoa::$7 = uctoa::started#2 || uctoa::$6
Rewriting ! if()-condition to reversed if() [426] printf_number_buffer::$5 = ! printf_number_buffer::$4
Rewriting && if()-condition to two if()s [425] printf_number_buffer::$4 = printf_number_buffer::$3 && printf_number_buffer::padding#10
Rewriting && if()-condition to two if()s [424] printf_number_buffer::$3 = printf_number_buffer::$1 && printf_number_buffer::$2
Rewriting ! if()-condition to reversed if() [448] printf_number_buffer::$10 = ! printf_number_buffer::$9
Rewriting && if()-condition to two if()s [447] printf_number_buffer::$9 = printf_number_buffer::format_zero_padding#10 && printf_number_buffer::padding#10
Rewriting ! if()-condition to reversed if() [462] printf_number_buffer::$17 = ! printf_number_buffer::$16
Rewriting && if()-condition to two if()s [461] printf_number_buffer::$16 = printf_number_buffer::$15 && printf_number_buffer::padding#10
Rewriting && if()-condition to two if()s [460] printf_number_buffer::$15 = printf_number_buffer::format_justify_left#10 && printf_number_buffer::$14
Successful SSA optimization Pass2ConditionalAndOrRewriting
Warning! Adding boolean cast to non-boolean condition utoa::started#2
Warning! Adding boolean cast to non-boolean condition ultoa::started#2
Warning! Adding boolean cast to non-boolean condition uctoa::started#2
Warning! Adding boolean cast to non-boolean condition printf_number_buffer::format_zero_padding#10
Warning! Adding boolean cast to non-boolean condition printf_number_buffer::format_justify_left#10
Warning! Adding boolean cast to non-boolean condition printf_number_buffer::padding#10
Warning! Adding boolean cast to non-boolean condition printf_number_buffer::padding#10
Warning! Adding boolean cast to non-boolean condition printf_number_buffer::padding#10
Constant right-side identified [311] memcpy::num#0 = (unumber)$19*$28-$28
Constant right-side identified [316] memcpy::num#1 = (unumber)$19*$28-$28
Constant right-side identified [343] conio_c64_init::line#1 = (unumber)$19-1
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant strlen::len#0 = 0
Constant utoa::max_digits#0 = 0
Constant utoa::digit_values#0 = (word*) 0
Constant utoa::max_digits#1 = 5
Constant utoa::digit_values#1 = RADIX_DECIMAL_VALUES
Constant utoa::max_digits#2 = 4
Constant utoa::digit_values#2 = RADIX_HEXADECIMAL_VALUES
Constant utoa::max_digits#3 = 6
Constant utoa::digit_values#3 = RADIX_OCTAL_VALUES
Constant utoa::max_digits#4 = $10
Constant utoa::digit_values#4 = RADIX_BINARY_VALUES
Constant utoa::started#0 = 0
Constant utoa::digit#0 = 0
Constant utoa::started#1 = 1
Constant ultoa::max_digits#0 = 0
Constant ultoa::digit_values#0 = (dword*) 0
Constant ultoa::max_digits#1 = $a
Constant ultoa::digit_values#1 = RADIX_DECIMAL_VALUES_LONG
Constant ultoa::max_digits#2 = 8
Constant ultoa::digit_values#2 = RADIX_HEXADECIMAL_VALUES_LONG
Constant ultoa::max_digits#3 = $b
Constant ultoa::digit_values#3 = RADIX_OCTAL_VALUES_LONG
Constant ultoa::max_digits#4 = $20
Constant ultoa::digit_values#4 = RADIX_BINARY_VALUES_LONG
Constant ultoa::started#0 = 0
Constant ultoa::digit#0 = 0
Constant ultoa::started#1 = 1
Constant uctoa::max_digits#0 = 0
Constant uctoa::digit_values#0 = (byte*) 0
Constant uctoa::max_digits#1 = 3
Constant uctoa::digit_values#1 = RADIX_DECIMAL_VALUES_CHAR
Constant uctoa::max_digits#2 = 2
Constant uctoa::digit_values#2 = RADIX_HEXADECIMAL_VALUES_CHAR
Constant uctoa::max_digits#3 = 3
Constant uctoa::digit_values#3 = RADIX_OCTAL_VALUES_CHAR
Constant uctoa::max_digits#4 = 8
Constant uctoa::digit_values#4 = RADIX_BINARY_VALUES_CHAR
Constant uctoa::started#0 = 0
Constant uctoa::digit#0 = 0
Constant uctoa::started#1 = 1
Constant uctoa_append::digit#0 = 0
Constant utoa_append::digit#0 = 0
Constant ultoa_append::digit#0 = 0
Constant clrscr::line_text#0 = CONIO_SCREEN_TEXT
Constant clrscr::line_cols#0 = CONIO_SCREEN_COLORS
Constant clrscr::l#0 = 0
Constant clrscr::c#0 = 0
Constant gotoxy::y#0 = 0
Constant gotoxy::x#0 = 0
Constant cputs::c#0 = 0
Constant memcpy::destination#0 = (void*)CONIO_SCREEN_TEXT
Constant memcpy::source#0 = (void*)CONIO_SCREEN_TEXT+$28
Constant memcpy::num#0 = (unumber)$19*$28-$28
Constant memcpy::destination#1 = (void*)CONIO_SCREEN_COLORS
Constant memcpy::source#1 = (void*)CONIO_SCREEN_COLORS+$28
Constant memcpy::num#1 = (unumber)$19*$28-$28
Constant memset::str#0 = (void*)CONIO_SCREEN_TEXT+(word)$19*$28-$28
Constant memset::c#0 = ' '
Constant memset::num#0 = $28
Constant memset::str#1 = (void*)CONIO_SCREEN_COLORS+(word)$19*$28-$28
Constant memset::num#1 = $28
Constant gotoxy::x#1 = 0
Constant gotoxy::y#1 = 0
Constant gotoxy::x#2 = 0
Constant conio_c64_init::line#1 = (unumber)$19-1
Constant printf_padding::i#0 = 0
Constant printf_ulong::$1 = '+'
Constant printf_ulong::$0 = 0
Constant ultoa::buffer#5 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant printf_number_buffer::buffer_digits#0 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant printf_uint::$1 = '+'
Constant printf_uint::$0 = 0
Constant utoa::buffer#5 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant printf_number_buffer::buffer_digits#1 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant printf_uchar::$1 = '+'
Constant printf_uchar::$0 = 0
Constant uctoa::buffer#5 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant printf_number_buffer::buffer_digits#2 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant printf_number_buffer::padding#0 = 0
Constant printf_number_buffer::padding#2 = 0
Constant printf_padding::pad#0 = ' '
Constant printf_padding::pad#1 = '0'
Constant printf_padding::pad#2 = ' '
Constant cputs::s#2 = main::s
Constant cputs::s#3 = main::s1
Constant printf_uint::uvalue#0 = 8
Constant printf_uint::format_min_length#0 = 0
Constant printf_uint::format_justify_left#0 = 0
Constant printf_uint::format_sign_always#0 = 0
Constant printf_uint::format_zero_padding#0 = 0
Constant printf_uint::format_upper_case#0 = 0
Constant printf_uint::format_radix#0 = DECIMAL
Constant cputs::s#4 = main::s2
Constant printf_ulong::format_min_length#0 = 0
Constant printf_ulong::format_justify_left#0 = 0
Constant printf_ulong::format_sign_always#0 = 0
Constant printf_ulong::format_zero_padding#0 = 0
Constant printf_ulong::format_upper_case#0 = 0
Constant printf_ulong::format_radix#0 = DECIMAL
Constant cputs::s#5 = main::s3
Constant legal::i#0 = 1
Constant legal::return#1 = 1
Constant legal::return#2 = 0
Constant legal::return#3 = 0
Constant gotoxy::x#3 = 0
Constant gotoxy::y#3 = 5
Constant cputs::s#6 = print::s
Constant printf_ulong::format_min_length#1 = 0
Constant printf_ulong::format_justify_left#1 = 0
Constant printf_ulong::format_sign_always#1 = 0
Constant printf_ulong::format_zero_padding#1 = 0
Constant printf_ulong::format_upper_case#1 = 0
Constant printf_ulong::format_radix#1 = DECIMAL
Constant cputs::s#7 = print::s1
Constant print::i#0 = 1
Constant printf_uchar::format_min_length#0 = 0
Constant printf_uchar::format_justify_left#0 = 0
Constant printf_uchar::format_sign_always#0 = 0
Constant printf_uchar::format_zero_padding#0 = 0
Constant printf_uchar::format_upper_case#0 = 0
Constant printf_uchar::format_radix#0 = HEXADECIMAL
Constant print::i1#0 = 1
Constant cputs::s#8 = print::s2
Constant printf_uchar::format_min_length#1 = 0
Constant printf_uchar::format_justify_left#1 = 0
Constant printf_uchar::format_sign_always#1 = 0
Constant printf_uchar::format_zero_padding#1 = 0
Constant printf_uchar::format_upper_case#1 = 0
Constant printf_uchar::format_radix#1 = HEXADECIMAL
Constant print::j#0 = 1
Constant cputs::s#9 = print::s3
Constant cputs::s#10 = print::s4
Constant conio_textcolor = CONIO_TEXTCOLOR_DEFAULT
Constant conio_scroll_enable = 1
Successful SSA optimization Pass2ConstantIdentification
Constant memset::c#1 = conio_textcolor
Constant utoa::value#1 = printf_uint::uvalue#0
Constant utoa::radix#0 = printf_uint::format_radix#0
Constant printf_number_buffer::format_min_length#1 = printf_uint::format_min_length#0
Constant printf_number_buffer::format_justify_left#1 = printf_uint::format_justify_left#0
Constant printf_number_buffer::format_sign_always#1 = printf_uint::format_sign_always#0
Constant printf_number_buffer::format_zero_padding#1 = printf_uint::format_zero_padding#0
Constant printf_number_buffer::format_upper_case#1 = printf_uint::format_upper_case#0
Constant printf_number_buffer::format_radix#1 = printf_uint::format_radix#0
Successful SSA optimization Pass2ConstantIdentification
if() condition always true - replacing block destination [56] if(utoa::radix#0==DECIMAL) goto utoa::@1
if() condition always false - eliminating [60] if(utoa::radix#0==HEXADECIMAL) goto utoa::@2
if() condition always false - eliminating [64] if(utoa::radix#0==OCTAL) goto utoa::@3
if() condition always false - eliminating [68] if(utoa::radix#0==BINARY) goto utoa::@4
if() condition always true - replacing block destination [308] if(0!=conio_scroll_enable) goto cscroll::@3
if() condition always false - eliminating [377] if(0!=printf_uint::format_sign_always#0) goto printf_uint::@1
Successful SSA optimization Pass2ConstantIfs
Rewriting conditional comparison [262] if(gotoxy::y#4<=$19) goto gotoxy::@1
Rewriting conditional comparison [504] if(queen::column<=8) goto queen::@2
Rewriting conditional comparison [576] if(print::i#2<=8) goto print::@2
Rewriting conditional comparison [589] if(print::i1#2<=8) goto print::@5
Rewriting conditional comparison [603] if(print::j#2<=8) goto print::@7
Simplifying expression containing zero (byte*)&printf_buffer in [360] *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN) = printf_ulong::$2
Simplifying expression containing zero (byte*)&printf_buffer in [365] printf_number_buffer::buffer_sign#0 = *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN)
Simplifying expression containing zero (byte*)&printf_buffer in [381] *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN) = printf_uint::$2
Simplifying expression containing zero (byte*)&printf_buffer in [386] printf_number_buffer::buffer_sign#1 = *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN)
Simplifying expression containing zero (byte*)&printf_buffer in [402] *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN) = printf_uchar::$2
Simplifying expression containing zero (byte*)&printf_buffer in [407] printf_number_buffer::buffer_sign#2 = *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN)
Successful SSA optimization PassNSimplifyExpressionWithZero
Eliminating variable utoa::buffer#0 from unused block utoa::@9
Eliminating variable utoa::buffer#1 from unused block utoa::@9
Eliminating variable utoa::buffer#2 from unused block utoa::@9
Removing unused block utoa::@6
Removing PHI-reference to removed block (utoa::@2) in block utoa::@5
Removing PHI-reference to removed block (utoa::@2) in block utoa::@5
Removing unused block utoa::@2
Removing unused block utoa::@7
Removing PHI-reference to removed block (utoa::@3) in block utoa::@5
Removing PHI-reference to removed block (utoa::@3) in block utoa::@5
Removing unused block utoa::@3
Removing unused block utoa::@8
Removing PHI-reference to removed block (utoa::@4) in block utoa::@5
Removing PHI-reference to removed block (utoa::@4) in block utoa::@5
Removing unused block utoa::@4
Removing unused block utoa::@9
Removing PHI-reference to removed block (cscroll::@2) in block gotoxy
Removing PHI-reference to removed block (cscroll::@2) in block gotoxy
Removing unused block cscroll::@2
Removing unused block cscroll::@8
Removing PHI-reference to removed block (printf_uint::@1) in block printf_uint::@3
Removing unused block printf_uint::@1
Successful SSA optimization Pass2EliminateUnusedBlocks
Eliminating unused variable memcpy::return#2 and assignment [202] memcpy::return#2 = memcpy::destination#2
Eliminating unused variable memcpy::return#3 and assignment [204] memcpy::return#3 = memcpy::destination#2
Eliminating unused variable memset::return#2 and assignment [206] memset::return#2 = memset::str#3
Eliminating unused variable memset::return#3 and assignment [208] memset::return#3 = memset::str#3
Eliminating unused variable printf_number_buffer::format_sign_always#0 and assignment [236] printf_number_buffer::format_sign_always#0 = printf_ulong::format_sign_always#2
Eliminating unused variable printf_number_buffer::format_radix#0 and assignment [239] printf_number_buffer::format_radix#0 = printf_ulong::format_radix#2
Eliminating unused variable printf_number_buffer::format_sign_always#2 and assignment [258] printf_number_buffer::format_sign_always#2 = printf_uchar::format_sign_always#2
Eliminating unused variable printf_number_buffer::format_radix#2 and assignment [261] printf_number_buffer::format_radix#2 = printf_uchar::format_radix#2
Eliminating unused variable strupr::return#2 and assignment [298] strupr::return#2 = strupr::str#0
Eliminating unused constant utoa::max_digits#0
Eliminating unused constant utoa::digit_values#0
Eliminating unused constant utoa::max_digits#2
Eliminating unused constant utoa::digit_values#2
Eliminating unused constant utoa::max_digits#3
Eliminating unused constant utoa::digit_values#3
Eliminating unused constant utoa::max_digits#4
Eliminating unused constant utoa::digit_values#4
Eliminating unused constant utoa::radix#0
Eliminating unused constant ultoa::max_digits#0
Eliminating unused constant ultoa::digit_values#0
Eliminating unused constant uctoa::max_digits#0
Eliminating unused constant uctoa::digit_values#0
Eliminating unused constant gotoxy::x#1
Eliminating unused constant gotoxy::y#1
Eliminating unused constant cputs::c#0
Eliminating unused constant printf_uint::$1
Eliminating unused constant printf_number_buffer::format_sign_always#1
Eliminating unused constant printf_number_buffer::format_radix#1
Eliminating unused constant OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN
Eliminating unused constant conio_scroll_enable
Successful SSA optimization PassNEliminateUnusedVars
Eliminating unused constant RADIX_BINARY_VALUES
Eliminating unused constant RADIX_OCTAL_VALUES
Eliminating unused constant RADIX_HEXADECIMAL_VALUES
Eliminating unused constant printf_uint::format_sign_always#0
Eliminating unused constant printf_uint::format_radix#0
Successful SSA optimization PassNEliminateUnusedVars
Adding number conversion cast (unumber) 0 in utoa::$12 = 0 != utoa::started#2
Adding number conversion cast (unumber) 0 in ultoa::$12 = 0 != ultoa::started#2
Adding number conversion cast (unumber) 0 in uctoa::$11 = 0 != uctoa::started#2
Adding number conversion cast (unumber) $19+1 in if(gotoxy::y#4<$19+1) goto gotoxy::@1
Adding number conversion cast (unumber) 1 in if(gotoxy::y#4<(unumber)$19+1) goto gotoxy::@1
Adding number conversion cast (unumber) 0 in printf_number_buffer::$33 = 0 != printf_number_buffer::format_zero_padding#10
Adding number conversion cast (unumber) 0 in printf_number_buffer::$34 = 0 != printf_number_buffer::format_justify_left#10
Adding number conversion cast (unumber) 8+1 in if(queen::column<8+1) goto queen::@2
Adding number conversion cast (unumber) 1 in if(queen::column<(unumber)8+1) goto queen::@2
Adding number conversion cast (unumber) 8+1 in if(print::i#2<8+1) goto print::@2
Adding number conversion cast (unumber) 1 in if(print::i#2<(unumber)8+1) goto print::@2
Adding number conversion cast (unumber) 8+1 in if(print::i1#2<8+1) goto print::@5
Adding number conversion cast (unumber) 1 in if(print::i1#2<(unumber)8+1) goto print::@5
Adding number conversion cast (unumber) 8+1 in if(print::j#2<8+1) goto print::@7
Adding number conversion cast (unumber) 1 in if(print::j#2<(unumber)8+1) goto print::@7
Adding number conversion cast (snumber) 0 in printf_number_buffer::$35 = 0 != printf_number_buffer::padding#10
Adding number conversion cast (snumber) 0 in printf_number_buffer::$36 = 0 != printf_number_buffer::padding#10
Adding number conversion cast (snumber) 0 in printf_number_buffer::$37 = 0 != printf_number_buffer::padding#10
Successful SSA optimization PassNAddNumberTypeConversions
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $19+(unumber)1
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 8+(unumber)1
Simplifying constant integer cast 1
Simplifying constant integer cast 8+(unumber)1
Simplifying constant integer cast 1
Simplifying constant integer cast 8+(unumber)1
Simplifying constant integer cast 1
Simplifying constant integer cast 8+(unumber)1
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized signed number type (signed byte) 0
Finalized signed number type (signed byte) 0
Finalized signed number type (signed byte) 0
Successful SSA optimization PassNFinalizeNumberTypeConversions
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias candidate removed (volatile)queen::row#0 = queen::r 
Identical Phi Values utoa::max_digits#7 utoa::max_digits#1
Identical Phi Values utoa::digit_values#8 utoa::digit_values#1
Identical Phi Values printf_uint::$2 printf_uint::$0
Successful SSA optimization Pass2IdenticalPhiElimination
Simple Condition toupper::$0 [28] if(toupper::ch#0>='a') goto toupper::@3
Simple Condition utoa::$12 [50] if(0!=utoa::started#2) goto utoa::@14
Simple Condition ultoa::$12 [84] if(0!=ultoa::started#2) goto ultoa::@14
Simple Condition uctoa::$11 [117] if(0!=uctoa::started#2) goto uctoa::@14
Simple Condition printf_number_buffer::$1 [261] if(0==printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@23
Simple Condition printf_number_buffer::$33 [277] if(0!=printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@24
Simple Condition printf_number_buffer::$34 [287] if(0!=printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@26
Simple Condition toupper::$1 [382] if(toupper::ch#0<='z') goto toupper::@1
Simple Condition utoa::$6 [383] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@14
Simple Condition ultoa::$6 [384] if(ultoa::value#2>=ultoa::digit_value#0) goto ultoa::@14
Simple Condition uctoa::$6 [385] if(uctoa::value#2>=uctoa::digit_value#0) goto uctoa::@14
Simple Condition printf_number_buffer::$35 [387] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@8
Simple Condition printf_number_buffer::$2 [388] if(0==printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@22
Simple Condition printf_number_buffer::$36 [390] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@10
Simple Condition printf_number_buffer::$37 [392] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@12
Simple Condition printf_number_buffer::$14 [393] if(0==printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@25
Successful SSA optimization Pass2ConditionalJumpSimplification
Negating conditional jump and destination [28] if(toupper::ch#0<'a') goto toupper::@2
Negating conditional jump and destination [261] if(0!=printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@2
Negating conditional jump and destination [277] if(0==printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@4
Negating conditional jump and destination [287] if(0==printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@return
Negating conditional jump and destination [388] if(0!=printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@2
Negating conditional jump and destination [393] if(0!=printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@return
Successful SSA optimization Pass2ConditionalJumpSequenceImprovement
Constant right-side identified [44] utoa::$4 = utoa::max_digits#1 - 1
Constant right-side identified [69] ultoa::buffer#0 = ++ ultoa::buffer#5
Constant right-side identified [103] uctoa::buffer#0 = ++ uctoa::buffer#5
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant utoa::$4 = utoa::max_digits#1-1
Constant ultoa::buffer#0 = ++ultoa::buffer#5
Constant uctoa::buffer#0 = ++uctoa::buffer#5
Successful SSA optimization Pass2ConstantIdentification
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias candidate removed (volatile)queen::row#0 = queen::r 
Constant right-side identified [64] ultoa::buffer#1 = ++ ultoa::buffer#0
Constant right-side identified [95] uctoa::buffer#1 = ++ uctoa::buffer#0
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant ultoa::buffer#1 = ++ultoa::buffer#0
Constant uctoa::buffer#1 = ++uctoa::buffer#0
Successful SSA optimization Pass2ConstantIdentification
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias candidate removed (volatile)queen::row#0 = queen::r 
Constant right-side identified [65] ultoa::buffer#2 = ++ ultoa::buffer#1
Constant right-side identified [95] uctoa::buffer#2 = ++ uctoa::buffer#1
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant ultoa::buffer#2 = ++ultoa::buffer#1
Constant uctoa::buffer#2 = ++uctoa::buffer#1
Successful SSA optimization Pass2ConstantIdentification
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias candidate removed (volatile)queen::row#0 = queen::r 
Inlining Noop Cast [1] memcpy::src#0 = (byte*)memcpy::source#2 keeping memcpy::source#2
Inlining Noop Cast [2] memcpy::dst#0 = (byte*)memcpy::destination#2 keeping memcpy::destination#2
Inlining Noop Cast [3] memcpy::$2 = (byte*)memcpy::source#2 keeping memcpy::source#2
Inlining Noop Cast [13] memset::$4 = (byte*)memset::str#3 keeping memset::str#3
Inlining Noop Cast [15] memset::dst#0 = (byte*)memset::str#3 keeping memset::str#3
Inlining Noop Cast [250] printf_number_buffer::$25 = (signed byte)printf_number_buffer::format_min_length#3 keeping printf_number_buffer::format_min_length#3
Successful SSA optimization Pass2NopCastInlining
Rewriting multiplication to use shift [42] utoa::$10 = utoa::digit#2 * SIZEOF_WORD
Rewriting multiplication to use shift [71] ultoa::$10 = ultoa::digit#2 * SIZEOF_DWORD
Rewriting multiplication to use shift and addition[155] gotoxy::line_offset#0 = gotoxy::$7 * $28
Successful SSA optimization Pass2MultiplyToShiftRewriting
Inlining constant with var siblings memcpy::destination#0
Inlining constant with var siblings memcpy::source#0
Inlining constant with var siblings memcpy::num#0
Inlining constant with var siblings memcpy::destination#1
Inlining constant with var siblings memcpy::source#1
Inlining constant with var siblings memcpy::num#1
Inlining constant with var siblings memset::str#0
Inlining constant with var siblings memset::c#0
Inlining constant with var siblings memset::num#0
Inlining constant with var siblings memset::str#1
Inlining constant with var siblings memset::num#1
Inlining constant with var siblings memset::c#1
Inlining constant with var siblings strlen::len#0
Inlining constant with var siblings utoa::started#0
Inlining constant with var siblings utoa::digit#0
Inlining constant with var siblings utoa::started#1
Inlining constant with var siblings utoa::buffer#5
Inlining constant with var siblings utoa::value#1
Inlining constant with var siblings ultoa::max_digits#1
Inlining constant with var siblings ultoa::digit_values#1
Inlining constant with var siblings ultoa::max_digits#2
Inlining constant with var siblings ultoa::digit_values#2
Inlining constant with var siblings ultoa::max_digits#3
Inlining constant with var siblings ultoa::digit_values#3
Inlining constant with var siblings ultoa::max_digits#4
Inlining constant with var siblings ultoa::digit_values#4
Inlining constant with var siblings ultoa::started#0
Inlining constant with var siblings ultoa::digit#0
Inlining constant with var siblings ultoa::started#1
Inlining constant with var siblings ultoa::buffer#5
Inlining constant with var siblings ultoa::buffer#0
Inlining constant with var siblings ultoa::buffer#1
Inlining constant with var siblings ultoa::buffer#2
Inlining constant with var siblings uctoa::max_digits#1
Inlining constant with var siblings uctoa::digit_values#1
Inlining constant with var siblings uctoa::max_digits#2
Inlining constant with var siblings uctoa::digit_values#2
Inlining constant with var siblings uctoa::max_digits#3
Inlining constant with var siblings uctoa::digit_values#3
Inlining constant with var siblings uctoa::max_digits#4
Inlining constant with var siblings uctoa::digit_values#4
Inlining constant with var siblings uctoa::started#0
Inlining constant with var siblings uctoa::digit#0
Inlining constant with var siblings uctoa::started#1
Inlining constant with var siblings uctoa::buffer#5
Inlining constant with var siblings uctoa::buffer#0
Inlining constant with var siblings uctoa::buffer#1
Inlining constant with var siblings uctoa::buffer#2
Inlining constant with var siblings uctoa_append::digit#0
Inlining constant with var siblings utoa_append::digit#0
Inlining constant with var siblings ultoa_append::digit#0
Inlining constant with var siblings clrscr::line_text#0
Inlining constant with var siblings clrscr::line_cols#0
Inlining constant with var siblings clrscr::l#0
Inlining constant with var siblings clrscr::c#0
Inlining constant with var siblings gotoxy::y#0
Inlining constant with var siblings gotoxy::x#0
Inlining constant with var siblings gotoxy::x#2
Inlining constant with var siblings gotoxy::x#3
Inlining constant with var siblings gotoxy::y#3
Inlining constant with var siblings cputs::s#2
Inlining constant with var siblings cputs::s#3
Inlining constant with var siblings cputs::s#4
Inlining constant with var siblings cputs::s#5
Inlining constant with var siblings cputs::s#6
Inlining constant with var siblings cputs::s#7
Inlining constant with var siblings cputs::s#8
Inlining constant with var siblings cputs::s#9
Inlining constant with var siblings cputs::s#10
Inlining constant with var siblings conio_c64_init::line#1
Inlining constant with var siblings printf_padding::i#0
Inlining constant with var siblings printf_padding::pad#0
Inlining constant with var siblings printf_padding::pad#1
Inlining constant with var siblings printf_padding::pad#2
Inlining constant with var siblings printf_ulong::format_min_length#0
Inlining constant with var siblings printf_ulong::format_justify_left#0
Inlining constant with var siblings printf_ulong::format_sign_always#0
Inlining constant with var siblings printf_ulong::format_zero_padding#0
Inlining constant with var siblings printf_ulong::format_upper_case#0
Inlining constant with var siblings printf_ulong::format_radix#0
Inlining constant with var siblings printf_ulong::format_min_length#1
Inlining constant with var siblings printf_ulong::format_justify_left#1
Inlining constant with var siblings printf_ulong::format_sign_always#1
Inlining constant with var siblings printf_ulong::format_zero_padding#1
Inlining constant with var siblings printf_ulong::format_upper_case#1
Inlining constant with var siblings printf_ulong::format_radix#1
Inlining constant with var siblings printf_uchar::format_min_length#0
Inlining constant with var siblings printf_uchar::format_justify_left#0
Inlining constant with var siblings printf_uchar::format_sign_always#0
Inlining constant with var siblings printf_uchar::format_zero_padding#0
Inlining constant with var siblings printf_uchar::format_upper_case#0
Inlining constant with var siblings printf_uchar::format_radix#0
Inlining constant with var siblings printf_uchar::format_min_length#1
Inlining constant with var siblings printf_uchar::format_justify_left#1
Inlining constant with var siblings printf_uchar::format_sign_always#1
Inlining constant with var siblings printf_uchar::format_zero_padding#1
Inlining constant with var siblings printf_uchar::format_upper_case#1
Inlining constant with var siblings printf_uchar::format_radix#1
Inlining constant with var siblings printf_number_buffer::buffer_digits#0
Inlining constant with var siblings printf_number_buffer::buffer_digits#1
Inlining constant with var siblings printf_number_buffer::buffer_digits#2
Inlining constant with var siblings printf_number_buffer::padding#0
Inlining constant with var siblings printf_number_buffer::padding#2
Inlining constant with var siblings printf_number_buffer::format_min_length#1
Inlining constant with var siblings printf_number_buffer::format_justify_left#1
Inlining constant with var siblings printf_number_buffer::format_zero_padding#1
Inlining constant with var siblings printf_number_buffer::format_upper_case#1
Inlining constant with var siblings legal::i#0
Inlining constant with var siblings legal::return#1
Inlining constant with var siblings legal::return#2
Inlining constant with var siblings legal::return#3
Inlining constant with var siblings print::i#0
Inlining constant with var siblings print::i1#0
Inlining constant with var siblings print::j#0
Constant inlined cputs::s#5 = main::s3
Constant inlined utoa::digit_values#1 = RADIX_DECIMAL_VALUES
Constant inlined cputs::s#6 = print::s
Constant inlined cputs::s#3 = main::s1
Constant inlined printf_number_buffer::buffer_digits#0 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined cputs::s#4 = main::s2
Constant inlined printf_number_buffer::buffer_digits#1 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined printf_number_buffer::buffer_digits#2 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined cputs::s#2 = main::s
Constant inlined printf_number_buffer::format_justify_left#1 = printf_uint::format_justify_left#0
Constant inlined conio_textcolor = LIGHT_BLUE
Constant inlined clrscr::l#0 = 0
Constant inlined strlen::len#0 = 0
Constant inlined printf_ulong::format_upper_case#0 = 0
Constant inlined CONIO_SCREEN_TEXT = DEFAULT_SCREEN
Constant inlined utoa::$4 = utoa::max_digits#1-1
Constant inlined printf_ulong::format_min_length#1 = 0
Constant inlined printf_ulong::format_upper_case#1 = 0
Constant inlined printf_ulong::format_min_length#0 = 0
Constant inlined uctoa::digit#0 = 0
Constant inlined clrscr::line_text#0 = DEFAULT_SCREEN
Constant inlined memcpy::source#0 = (void*)DEFAULT_SCREEN+$28
Constant inlined ultoa::buffer#2 = ++++++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined ultoa::buffer#0 = ++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined ultoa::buffer#1 = ++++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined printf_uchar::format_sign_always#1 = 0
Constant inlined legal::return#2 = 0
Constant inlined ultoa::digit#0 = 0
Constant inlined legal::return#3 = 0
Constant inlined printf_uchar::format_sign_always#0 = 0
Constant inlined memset::c#0 = ' '
Constant inlined printf_uchar::format_min_length#1 = 0
Constant inlined legal::return#1 = 1
Constant inlined memset::c#1 = LIGHT_BLUE
Constant inlined cputs::s#9 = print::s3
Constant inlined printf_uchar::format_min_length#0 = 0
Constant inlined printf_uchar::format_upper_case#1 = 0
Constant inlined cputs::s#7 = print::s1
Constant inlined cputs::s#8 = print::s2
Constant inlined printf_uchar::format_upper_case#0 = 0
Constant inlined utoa_append::digit#0 = 0
Constant inlined uctoa::digit_values#2 = RADIX_HEXADECIMAL_VALUES_CHAR
Constant inlined uctoa::digit_values#1 = RADIX_DECIMAL_VALUES_CHAR
Constant inlined uctoa::digit_values#4 = RADIX_BINARY_VALUES_CHAR
Constant inlined printf_ulong::format_radix#0 = DECIMAL
Constant inlined uctoa::digit_values#3 = RADIX_OCTAL_VALUES_CHAR
Constant inlined printf_ulong::format_radix#1 = DECIMAL
Constant inlined printf_uchar::$0 = 0
Constant inlined printf_uchar::$1 = '+'
Constant inlined memcpy::destination#0 = (void*)DEFAULT_SCREEN
Constant inlined memcpy::destination#1 = (void*)COLORRAM
Constant inlined uctoa::max_digits#1 = 3
Constant inlined legal::i#0 = 1
Constant inlined utoa::digit#0 = 0
Constant inlined ultoa::max_digits#3 = $b
Constant inlined ultoa::max_digits#4 = $20
Constant inlined uctoa::max_digits#3 = 3
Constant inlined printf_number_buffer::format_min_length#1 = printf_uint::format_min_length#0
Constant inlined uctoa::max_digits#2 = 2
Constant inlined CONIO_TEXTCOLOR_DEFAULT = LIGHT_BLUE
Constant inlined uctoa::max_digits#4 = 8
Constant inlined uctoa::buffer#1 = ++++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined uctoa::buffer#2 = ++++++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined printf_padding::pad#0 = ' '
Constant inlined printf_padding::i#0 = 0
Constant inlined printf_padding::pad#1 = '0'
Constant inlined printf_uchar::format_zero_padding#1 = 0
Constant inlined uctoa::buffer#0 = ++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined printf_padding::pad#2 = ' '
Constant inlined printf_uchar::format_zero_padding#0 = 0
Constant inlined printf_ulong::$1 = '+'
Constant inlined printf_ulong::$0 = 0
Constant inlined ultoa::max_digits#1 = $a
Constant inlined utoa::started#1 = 1
Constant inlined ultoa::max_digits#2 = 8
Constant inlined utoa::started#0 = 0
Constant inlined uctoa::buffer#5 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined gotoxy::y#3 = 5
Constant inlined gotoxy::y#0 = 0
Constant inlined ultoa::digit_values#2 = RADIX_HEXADECIMAL_VALUES_LONG
Constant inlined ultoa::digit_values#3 = RADIX_OCTAL_VALUES_LONG
Constant inlined ultoa_append::digit#0 = 0
Constant inlined ultoa::digit_values#1 = RADIX_DECIMAL_VALUES_LONG
Constant inlined ultoa::digit_values#4 = RADIX_BINARY_VALUES_LONG
Constant inlined utoa::value#1 = printf_uint::uvalue#0
Constant inlined uctoa_append::digit#0 = 0
Constant inlined printf_uchar::format_justify_left#0 = 0
Constant inlined printf_uchar::format_justify_left#1 = 0
Constant inlined memset::num#1 = $28
Constant inlined memset::num#0 = $28
Constant inlined printf_ulong::format_justify_left#1 = 0
Constant inlined printf_ulong::format_justify_left#0 = 0
Constant inlined printf_number_buffer::padding#2 = 0
Constant inlined print::j#0 = 1
Constant inlined ultoa::started#1 = 1
Constant inlined gotoxy::x#3 = 0
Constant inlined printf_ulong::format_zero_padding#0 = 0
Constant inlined printf_ulong::format_zero_padding#1 = 0
Constant inlined utoa::buffer#5 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined gotoxy::x#0 = 0
Constant inlined gotoxy::x#2 = 0
Constant inlined printf_number_buffer::padding#0 = 0
Constant inlined print::i1#0 = 1
Constant inlined uctoa::started#0 = 0
Constant inlined uctoa::started#1 = 1
Constant inlined conio_c64_init::line#1 = (byte)$19-1
Constant inlined memcpy::source#1 = (void*)COLORRAM+$28
Constant inlined ultoa::buffer#5 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined printf_number_buffer::format_upper_case#1 = printf_uint::format_upper_case#0
Constant inlined ultoa::started#0 = 0
Constant inlined printf_ulong::format_sign_always#1 = 0
Constant inlined printf_ulong::format_sign_always#0 = 0
Constant inlined memset::str#1 = (void*)COLORRAM+(word)$19*$28-$28
Constant inlined printf_number_buffer::format_zero_padding#1 = printf_uint::format_zero_padding#0
Constant inlined memset::str#0 = (void*)DEFAULT_SCREEN+(word)$19*$28-$28
Constant inlined CONIO_SCREEN_COLORS = COLORRAM
Constant inlined printf_uint::$0 = 0
Constant inlined print::i#0 = 1
Constant inlined memcpy::num#1 = (word)$19*$28-$28
Constant inlined memcpy::num#0 = (word)$19*$28-$28
Constant inlined printf_uchar::format_radix#1 = HEXADECIMAL
Constant inlined printf_uchar::format_radix#0 = HEXADECIMAL
Constant inlined cputs::s#10 = print::s4
Constant inlined clrscr::c#0 = 0
Constant inlined clrscr::line_cols#0 = COLORRAM
Successful SSA optimization Pass2ConstantInlining
Simplifying constant integer increment ++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Simplifying constant integer increment ++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Simplifying constant integer increment ++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+1
Simplifying constant integer increment ++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Simplifying constant integer increment ++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Simplifying constant integer increment ++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+1
Successful SSA optimization Pass2ConstantSimplification
Simplifying constant integer increment ++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+1
Simplifying constant integer increment ++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+2
Simplifying constant integer increment ++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+1
Simplifying constant integer increment ++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+2
Successful SSA optimization Pass2ConstantSimplification
Adding number conversion cast (unumber) 1 in [63] *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+1) = 'r'
Adding number conversion cast (unumber) 2 in [64] *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+2) = 'r'
Adding number conversion cast (unumber) 3 in [65] *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+3) = 0
Adding number conversion cast (unumber) 1 in [92] *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+1) = 'r'
Adding number conversion cast (unumber) 2 in [93] *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+2) = 'r'
Adding number conversion cast (unumber) 3 in [94] *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+3) = 0
Successful SSA optimization PassNAddNumberTypeConversions
Simplifying constant integer cast 1
Simplifying constant integer cast 2
Simplifying constant integer cast 3
Simplifying constant integer cast 1
Simplifying constant integer cast 2
Simplifying constant integer cast 3
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 3
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 3
Successful SSA optimization PassNFinalizeNumberTypeConversions
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias candidate removed (volatile)queen::row#0 = queen::r 
Alias gotoxy::line_offset#0 = gotoxy::$10 
Successful SSA optimization Pass2AliasElimination
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias candidate removed (volatile)queen::row#0 = queen::r 
Identical Phi Values memcpy::num#2 (word)$19*$28-$28
Identical Phi Values memset::num#2 $28
Identical Phi Values gotoxy::x#4 0
Identical Phi Values printf_ulong::format_sign_always#2 0
Identical Phi Values printf_ulong::format_radix#2 DECIMAL
Identical Phi Values printf_ulong::format_min_length#2 0
Identical Phi Values printf_ulong::format_justify_left#2 0
Identical Phi Values printf_ulong::format_zero_padding#2 0
Identical Phi Values printf_ulong::format_upper_case#2 0
Identical Phi Values printf_uchar::format_sign_always#2 0
Identical Phi Values printf_uchar::format_radix#2 HEXADECIMAL
Identical Phi Values printf_uchar::format_min_length#2 0
Identical Phi Values printf_uchar::format_justify_left#2 0
Identical Phi Values printf_uchar::format_zero_padding#2 0
Identical Phi Values printf_uchar::format_upper_case#2 0
Identical Phi Values printf_number_buffer::buffer_digits#10 (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Successful SSA optimization Pass2IdenticalPhiElimination
Identical Phi Values gotoxy::x#5 0
Successful SSA optimization Pass2IdenticalPhiElimination
Constant ultoa::radix#0 = DECIMAL
Constant printf_number_buffer::format_min_length#0 = 0
Constant printf_number_buffer::format_justify_left#0 = 0
Constant printf_number_buffer::format_zero_padding#0 = 0
Constant printf_number_buffer::format_upper_case#0 = 0
Constant uctoa::radix#0 = HEXADECIMAL
Constant printf_number_buffer::format_min_length#2 = 0
Constant printf_number_buffer::format_justify_left#2 = 0
Constant printf_number_buffer::format_zero_padding#2 = 0
Constant printf_number_buffer::format_upper_case#2 = 0
Constant strlen::str#1 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant cputs::s#1 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant strupr::str#0 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Successful SSA optimization Pass2ConstantIdentification
if() condition always false - eliminating [9] if($28<=0) goto memset::@1
if() condition always true - replacing block destination [53] if(ultoa::radix#0==DECIMAL) goto ultoa::@1
if() condition always false - eliminating [54] if(ultoa::radix#0==HEXADECIMAL) goto ultoa::@2
if() condition always false - eliminating [55] if(ultoa::radix#0==OCTAL) goto ultoa::@3
if() condition always false - eliminating [56] if(ultoa::radix#0==BINARY) goto ultoa::@4
if() condition always false - eliminating [82] if(uctoa::radix#0==DECIMAL) goto uctoa::@1
if() condition always true - replacing block destination [83] if(uctoa::radix#0==HEXADECIMAL) goto uctoa::@2
if() condition always false - eliminating [84] if(uctoa::radix#0==OCTAL) goto uctoa::@3
if() condition always false - eliminating [85] if(uctoa::radix#0==BINARY) goto uctoa::@4
if() condition always true - replacing block destination [145] if(0<$28) goto gotoxy::@2
if() condition always false - eliminating [204] if(0!=0) goto printf_ulong::@1
if() condition always false - eliminating [223] if(0!=0) goto printf_uchar::@1
Successful SSA optimization Pass2ConstantIfs
Removing unused block ultoa::@6
Removing PHI-reference to removed block (ultoa::@2) in block ultoa::@5
Removing PHI-reference to removed block (ultoa::@2) in block ultoa::@5
Removing unused block ultoa::@2
Removing unused block ultoa::@7
Removing PHI-reference to removed block (ultoa::@3) in block ultoa::@5
Removing PHI-reference to removed block (ultoa::@3) in block ultoa::@5
Removing unused block ultoa::@3
Removing unused block ultoa::@8
Removing PHI-reference to removed block (ultoa::@4) in block ultoa::@5
Removing PHI-reference to removed block (ultoa::@4) in block ultoa::@5
Removing unused block ultoa::@4
Removing unused block ultoa::@9
Removing PHI-reference to removed block (uctoa::@1) in block uctoa::@5
Removing PHI-reference to removed block (uctoa::@1) in block uctoa::@5
Removing unused block uctoa::@1
Removing unused block uctoa::@7
Removing PHI-reference to removed block (uctoa::@3) in block uctoa::@5
Removing PHI-reference to removed block (uctoa::@3) in block uctoa::@5
Removing unused block uctoa::@3
Removing unused block uctoa::@8
Removing PHI-reference to removed block (uctoa::@4) in block uctoa::@5
Removing PHI-reference to removed block (uctoa::@4) in block uctoa::@5
Removing unused block uctoa::@4
Removing unused block uctoa::@9
Removing unused block gotoxy::@4
Removing PHI-reference to removed block (printf_ulong::@1) in block printf_ulong::@3
Removing unused block printf_ulong::@1
Removing PHI-reference to removed block (printf_uchar::@1) in block printf_uchar::@3
Removing unused block printf_uchar::@1
Successful SSA optimization Pass2EliminateUnusedBlocks
Eliminating unused constant BINARY
Eliminating unused constant OCTAL
Eliminating unused constant ultoa::radix#0
Eliminating unused constant RADIX_BINARY_VALUES_CHAR
Eliminating unused constant RADIX_OCTAL_VALUES_CHAR
Eliminating unused constant RADIX_DECIMAL_VALUES_CHAR
Eliminating unused constant uctoa::radix#0
Eliminating unused constant RADIX_BINARY_VALUES_LONG
Eliminating unused constant RADIX_OCTAL_VALUES_LONG
Eliminating unused constant RADIX_HEXADECIMAL_VALUES_LONG
Eliminating unused constant SIZEOF_WORD
Eliminating unused constant SIZEOF_DWORD
Successful SSA optimization PassNEliminateUnusedVars
Eliminating unused constant DECIMAL
Eliminating unused constant HEXADECIMAL
Successful SSA optimization PassNEliminateUnusedVars
Inlining constant with var siblings strlen::str#1
Inlining constant with var siblings cputs::s#1
Inlining constant with var siblings printf_number_buffer::format_min_length#0
Inlining constant with var siblings printf_number_buffer::format_justify_left#0
Inlining constant with var siblings printf_number_buffer::format_zero_padding#0
Inlining constant with var siblings printf_number_buffer::format_upper_case#0
Inlining constant with var siblings printf_number_buffer::format_min_length#2
Inlining constant with var siblings printf_number_buffer::format_justify_left#2
Inlining constant with var siblings printf_number_buffer::format_zero_padding#2
Inlining constant with var siblings printf_number_buffer::format_upper_case#2
Constant inlined printf_number_buffer::format_justify_left#0 = 0
Constant inlined printf_number_buffer::format_zero_padding#2 = 0
Constant inlined printf_number_buffer::format_upper_case#2 = 0
Constant inlined cputs::s#1 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined printf_number_buffer::format_justify_left#2 = 0
Constant inlined printf_number_buffer::format_upper_case#0 = 0
Constant inlined strlen::str#1 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined printf_number_buffer::format_min_length#0 = 0
Constant inlined printf_number_buffer::format_zero_padding#0 = 0
Constant inlined printf_number_buffer::format_min_length#2 = 0
Successful SSA optimization Pass2ConstantInlining
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias candidate removed (volatile)queen::row#0 = queen::r 
Identical Phi Values ultoa::max_digits#7 $a
Identical Phi Values ultoa::digit_values#8 RADIX_DECIMAL_VALUES_LONG
Identical Phi Values uctoa::max_digits#7 2
Identical Phi Values uctoa::digit_values#8 RADIX_HEXADECIMAL_VALUES_CHAR
Identical Phi Values printf_ulong::$2 0
Identical Phi Values printf_uchar::$2 0
Successful SSA optimization Pass2IdenticalPhiElimination
Constant right-side identified [55] ultoa::$4 = $a - 1
Constant right-side identified [76] uctoa::$4 = 2 - 1
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant ultoa::$4 = $a-1
Constant uctoa::$4 = 2-1
Successful SSA optimization Pass2ConstantIdentification
Constant inlined uctoa::$4 = 2-1
Constant inlined ultoa::$4 = $a-1
Successful SSA optimization Pass2ConstantInlining
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias candidate removed (volatile)queen::row#0 = queen::r 
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias candidate removed (volatile)queen::row#0 = queen::r 
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 8
Finalized unsigned number type (byte) $a
Finalized unsigned number type (byte) $10
Finalized unsigned number type (byte) $b
Finalized unsigned number type (byte) $b
Finalized unsigned number type (byte) $14
Finalized unsigned number type (byte) $14
Finalized unsigned number type (byte) $19
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $19
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $19
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $19
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Successful SSA optimization PassNFinalizeNumberTypeConversions
Simplifying constant integer cast $19-1
Successful SSA optimization PassNCastSimplification
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias candidate removed (volatile)queen::row#0 = queen::r 
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias candidate removed (volatile)queen::row#0 = queen::r 
Added new block during phi lifting utoa::@17(between utoa::@16 and utoa::@13)
Added new block during phi lifting ultoa::@17(between ultoa::@16 and ultoa::@13)
Added new block during phi lifting uctoa::@17(between uctoa::@16 and uctoa::@13)
Added new block during phi lifting gotoxy::@5(between gotoxy and gotoxy::@1)
Added new block during phi lifting conio_c64_init::@4(between conio_c64_init and conio_c64_init::@1)
Added new block during phi lifting printf_number_buffer::@27(between printf_number_buffer::@13 and printf_number_buffer::@1)
Added new block during phi lifting printf_number_buffer::@28(between printf_number_buffer::@15 and printf_number_buffer::@13)
Adding NOP phi() at start of __start
Adding NOP phi() at start of __start::@2
Adding NOP phi() at start of __start::@1
Adding NOP phi() at start of __start::@3
Adding NOP phi() at start of queen::@8
Adding NOP phi() at start of conio_c64_init::@2
Adding NOP phi() at start of conio_c64_init::@3
Adding NOP phi() at start of main
Adding NOP phi() at start of main::@1
Adding NOP phi() at start of main::@2
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@6
Adding NOP phi() at start of main::@7
Adding NOP phi() at start of legal
Adding NOP phi() at start of legal::@3
Adding NOP phi() at start of legal::@7
Adding NOP phi() at start of legal::@4
Adding NOP phi() at start of print
Adding NOP phi() at start of print::@12
Adding NOP phi() at start of print::@14
Adding NOP phi() at start of print::@15
Adding NOP phi() at start of print::@3
Adding NOP phi() at start of print::@5
Adding NOP phi() at start of print::@18
Adding NOP phi() at start of print::@11
Adding NOP phi() at start of print::@20
Adding NOP phi() at start of print::@9
Adding NOP phi() at start of print::@19
Adding NOP phi() at start of gotoxy::@3
Adding NOP phi() at start of clrscr
Adding NOP phi() at start of clrscr::@2
Adding NOP phi() at start of printf_uint
Adding NOP phi() at start of printf_uint::@2
Adding NOP phi() at start of printf_uint::@5
Adding NOP phi() at start of printf_ulong::@2
Adding NOP phi() at start of printf_ulong::@5
Adding NOP phi() at start of printf_uchar::@2
Adding NOP phi() at start of printf_uchar::@5
Adding NOP phi() at start of cputc::@3
Adding NOP phi() at start of cputc::@5
Adding NOP phi() at start of cputc::@1
Adding NOP phi() at start of cputc::@4
Adding NOP phi() at start of utoa
Adding NOP phi() at start of utoa::@1
Adding NOP phi() at start of utoa::@5
Adding NOP phi() at start of printf_number_buffer::@6
Adding NOP phi() at start of printf_number_buffer::@14
Adding NOP phi() at start of printf_number_buffer::@17
Adding NOP phi() at start of printf_number_buffer::@11
Adding NOP phi() at start of printf_number_buffer::@20
Adding NOP phi() at start of printf_number_buffer::@5
Adding NOP phi() at start of printf_number_buffer::@21
Adding NOP phi() at start of printf_number_buffer::@18
Adding NOP phi() at start of printf_number_buffer::@16
Adding NOP phi() at start of ultoa
Adding NOP phi() at start of ultoa::@1
Adding NOP phi() at start of uctoa
Adding NOP phi() at start of uctoa::@6
Adding NOP phi() at start of uctoa::@2
Adding NOP phi() at start of cputln::@1
Adding NOP phi() at start of strlen
Adding NOP phi() at start of strlen::@3
Adding NOP phi() at start of strupr
Adding NOP phi() at start of strupr::@3
Adding NOP phi() at start of cscroll::@1
Adding NOP phi() at start of cscroll::@3
Adding NOP phi() at start of cscroll::@4
Adding NOP phi() at start of cscroll::@5
Adding NOP phi() at start of cscroll::@6
Adding NOP phi() at start of memcpy::@3
Adding NOP phi() at start of memset::@1
CALL GRAPH
Calls in [__start] to conio_c64_init:6 main:9 
Calls in [queen] to legal:19 queen:28 print:33 
Calls in [conio_c64_init] to gotoxy:41 
Calls in [main] to clrscr:46 cputs:48 cputs:50 printf_uint:52 queen:54 cputs:56 printf_ulong:59 cputs:61 
Calls in [legal] to diff:76 diff:83 
Calls in [print] to gotoxy:92 cputs:94 printf_ulong:97 cputs:99 cputs:108 printf_uchar:111 cputs:119 cputs:124 printf_uchar:128 
Calls in [cputs] to cputc:177 
Calls in [printf_uint] to utoa:182 printf_number_buffer:185 
Calls in [printf_ulong] to ultoa:192 printf_number_buffer:195 
Calls in [printf_uchar] to uctoa:210 printf_number_buffer:213 
Calls in [cputc] to cputln:223 cputln:227 
Calls in [utoa] to utoa_append:255 
Calls in [printf_number_buffer] to strlen:264 cputc:282 strupr:288 cputs:291 printf_padding:298 printf_padding:302 printf_padding:306 
Calls in [ultoa] to ultoa_append:336 
Calls in [uctoa] to uctoa_append:367 
Calls in [cputln] to cscroll:377 
Calls in [strupr] to toupper:404 
Calls in [printf_padding] to cputc:416 
Calls in [cscroll] to memcpy:440 memcpy:442 memset:444 memset:446 

Created 68 initial phi equivalence classes
Coalesced [40] gotoxy::y#8 = gotoxy::y#2
Coalesced [44] conio_c64_init::line#3 = conio_c64_init::line#0
Coalesced [58] printf_ulong::uvalue#6 = printf_ulong::uvalue#0
Coalesced [74] diff::a#5 = diff::a#0
Coalesced [75] diff::b#5 = diff::b#0
Coalesced [81] diff::a#6 = diff::a#1
Coalesced [82] diff::b#6 = diff::b#1
Coalesced [89] legal::i#8 = legal::i#1
Coalesced [96] printf_ulong::uvalue#7 = printf_ulong::uvalue#1
Coalesced [110] printf_uchar::uvalue#6 = printf_uchar::uvalue#1
Coalesced [116] print::i1#14 = print::i1#1
Coalesced [122] print::j#9 = print::j#1
Coalesced [127] printf_uchar::uvalue#7 = printf_uchar::uvalue#0
Coalesced [130] print::i#5 = print::i#1
Coalesced [146] gotoxy::y#9 = gotoxy::y#4
Coalesced [161] clrscr::l#7 = clrscr::l#1
Coalesced [162] clrscr::line_text#7 = clrscr::line_text#1
Coalesced [163] clrscr::line_cols#7 = clrscr::line_cols#1
Coalesced [167] clrscr::c#4 = clrscr::c#1
Coalesced [169] cputs::s#15 = cputs::s#12
Coalesced [176] cputc::c#5 = cputc::c#0
Coalesced [178] cputs::s#16 = cputs::s#0
Coalesced [184] printf_number_buffer::buffer_sign#15 = printf_number_buffer::buffer_sign#1
Coalesced [194] printf_number_buffer::buffer_sign#16 = printf_number_buffer::buffer_sign#0
Coalesced [201] diff::return#9 = diff::return#3
Coalesced [205] diff::return#8 = diff::return#2
Coalesced [212] printf_number_buffer::buffer_sign#14 = printf_number_buffer::buffer_sign#2
Coalesced [243] utoa::value#17 = utoa::value#2
Coalesced [244] utoa::started#6 = utoa::started#2
Coalesced [245] utoa::buffer#23 = utoa::buffer#11
Coalesced [248] utoa::digit#7 = utoa::digit#1
Coalesced (already) [249] utoa::value#16 = utoa::value#6
Coalesced (already) [250] utoa::started#5 = utoa::started#4
Coalesced (already) [251] utoa::buffer#22 = utoa::buffer#14
Coalesced [259] utoa::value#18 = utoa::value#0
Coalesced [260] utoa::buffer#24 = utoa::buffer#4
Coalesced [270] printf_number_buffer::len#5 = printf_number_buffer::len#1
Coalesced [281] cputc::c#6 = cputc::c#2
Coalesced [297] printf_padding::length#8 = printf_padding::length#2
Coalesced [301] printf_padding::length#7 = printf_padding::length#1
Coalesced [305] printf_padding::length#9 = printf_padding::length#0
Coalesced [308] printf_number_buffer::padding#18 = printf_number_buffer::padding#1
Coalesced [309] printf_number_buffer::len#4 = printf_number_buffer::len#0
Coalesced [312] ultoa::value#17 = ultoa::value#1
Coalesced [324] ultoa::value#18 = ultoa::value#2
Coalesced [325] ultoa::started#6 = ultoa::started#2
Coalesced [326] ultoa::buffer#23 = ultoa::buffer#11
Coalesced [329] ultoa::digit#7 = ultoa::digit#1
Coalesced (already) [330] ultoa::value#16 = ultoa::value#6
Coalesced (already) [331] ultoa::started#5 = ultoa::started#4
Coalesced (already) [332] ultoa::buffer#22 = ultoa::buffer#14
Coalesced [340] ultoa::value#19 = ultoa::value#0
Coalesced [341] ultoa::buffer#24 = ultoa::buffer#4
Coalesced [345] uctoa::value#17 = uctoa::value#1
Coalesced [355] uctoa::value#18 = uctoa::value#2
Coalesced [356] uctoa::started#6 = uctoa::started#2
Coalesced [357] uctoa::buffer#23 = uctoa::buffer#11
Coalesced [360] uctoa::digit#7 = uctoa::digit#1
Coalesced (already) [361] uctoa::value#16 = uctoa::value#6
Coalesced (already) [362] uctoa::started#5 = uctoa::started#4
Coalesced (already) [363] uctoa::buffer#22 = uctoa::buffer#14
Coalesced [371] uctoa::value#19 = uctoa::value#0
Coalesced [372] uctoa::buffer#24 = uctoa::buffer#4
Coalesced [380] utoa_append::value#6 = utoa_append::value#0
Coalesced [387] utoa_append::value#7 = utoa_append::value#1
Coalesced [388] utoa_append::digit#5 = utoa_append::digit#1
Coalesced [396] strlen::str#5 = strlen::str#0
Coalesced [397] strlen::len#5 = strlen::len#1
Coalesced [409] strupr::src#5 = strupr::src#1
Coalesced [415] cputc::c#7 = cputc::c#1
Coalesced [418] printf_padding::i#5 = printf_padding::i#1
Coalesced [419] ultoa_append::value#6 = ultoa_append::value#0
Coalesced [426] ultoa_append::value#7 = ultoa_append::value#1
Coalesced [427] ultoa_append::digit#5 = ultoa_append::digit#1
Coalesced [428] uctoa_append::value#6 = uctoa_append::value#0
Coalesced [435] uctoa_append::value#7 = uctoa_append::value#1
Coalesced [436] uctoa_append::digit#5 = uctoa_append::digit#1
Coalesced [453] toupper::return#7 = toupper::ch#0
Coalesced [457] toupper::return#6 = toupper::return#0
Coalesced [469] memcpy::src#5 = memcpy::src#1
Coalesced [470] memcpy::dst#5 = memcpy::dst#1
Coalesced [480] memset::dst#5 = memset::dst#1
Coalesced down to 57 phi equivalence classes
Culled Empty Block label __start::@2
Culled Empty Block label __start::@3
Culled Empty Block label queen::@8
Culled Empty Block label conio_c64_init::@2
Culled Empty Block label conio_c64_init::@3
Culled Empty Block label main::@7
Culled Empty Block label legal::@3
Culled Empty Block label legal::@7
Culled Empty Block label legal::@4
Culled Empty Block label print::@15
Culled Empty Block label print::@3
Culled Empty Block label print::@18
Culled Empty Block label print::@20
Culled Empty Block label print::@19
Culled Empty Block label gotoxy::@3
Culled Empty Block label clrscr::@2
Culled Empty Block label cputs::@3
Culled Empty Block label printf_uint::@2
Culled Empty Block label printf_uint::@5
Culled Empty Block label printf_ulong::@2
Culled Empty Block label printf_ulong::@5
Culled Empty Block label printf_uchar::@2
Culled Empty Block label printf_uchar::@5
Culled Empty Block label cputc::@5
Culled Empty Block label cputc::@4
Culled Empty Block label utoa::@1
Culled Empty Block label utoa::@5
Culled Empty Block label utoa::@17
Culled Empty Block label printf_number_buffer::@14
Culled Empty Block label printf_number_buffer::@17
Culled Empty Block label printf_number_buffer::@20
Culled Empty Block label printf_number_buffer::@21
Culled Empty Block label printf_number_buffer::@18
Culled Empty Block label printf_number_buffer::@16
Culled Empty Block label printf_number_buffer::@28
Culled Empty Block label ultoa::@1
Culled Empty Block label ultoa::@5
Culled Empty Block label ultoa::@17
Culled Empty Block label uctoa::@6
Culled Empty Block label uctoa::@2
Culled Empty Block label uctoa::@5
Culled Empty Block label uctoa::@17
Culled Empty Block label cputln::@1
Culled Empty Block label strlen::@3
Culled Empty Block label strupr::@3
Culled Empty Block label cscroll::@1
Culled Empty Block label toupper::@2
Culled Empty Block label memcpy::@3
Culled Empty Block label memset::@1
Renumbering block memset::@2 to memset::@1
Renumbering block memset::@3 to memset::@2
Renumbering block memset::@4 to memset::@3
Renumbering block toupper::@3 to toupper::@2
Renumbering block strupr::@4 to strupr::@3
Renumbering block utoa::@10 to utoa::@1
Renumbering block utoa::@11 to utoa::@2
Renumbering block utoa::@12 to utoa::@3
Renumbering block utoa::@13 to utoa::@4
Renumbering block utoa::@14 to utoa::@5
Renumbering block utoa::@15 to utoa::@6
Renumbering block utoa::@16 to utoa::@7
Renumbering block ultoa::@10 to ultoa::@1
Renumbering block ultoa::@11 to ultoa::@2
Renumbering block ultoa::@12 to ultoa::@3
Renumbering block ultoa::@13 to ultoa::@4
Renumbering block ultoa::@14 to ultoa::@5
Renumbering block ultoa::@15 to ultoa::@6
Renumbering block ultoa::@16 to ultoa::@7
Renumbering block uctoa::@10 to uctoa::@1
Renumbering block uctoa::@11 to uctoa::@2
Renumbering block uctoa::@12 to uctoa::@3
Renumbering block uctoa::@13 to uctoa::@4
Renumbering block uctoa::@14 to uctoa::@5
Renumbering block uctoa::@15 to uctoa::@6
Renumbering block uctoa::@16 to uctoa::@7
Renumbering block clrscr::@3 to clrscr::@2
Renumbering block clrscr::@4 to clrscr::@3
Renumbering block clrscr::@5 to clrscr::@4
Renumbering block clrscr::@6 to clrscr::@5
Renumbering block gotoxy::@5 to gotoxy::@3
Renumbering block cscroll::@3 to cscroll::@1
Renumbering block cscroll::@4 to cscroll::@2
Renumbering block cscroll::@5 to cscroll::@3
Renumbering block cscroll::@6 to cscroll::@4
Renumbering block cscroll::@7 to cscroll::@5
Renumbering block conio_c64_init::@4 to conio_c64_init::@2
Renumbering block printf_ulong::@3 to printf_ulong::@1
Renumbering block printf_ulong::@4 to printf_ulong::@2
Renumbering block printf_uint::@3 to printf_uint::@1
Renumbering block printf_uint::@4 to printf_uint::@2
Renumbering block printf_uchar::@3 to printf_uchar::@1
Renumbering block printf_uchar::@4 to printf_uchar::@2
Renumbering block printf_number_buffer::@15 to printf_number_buffer::@14
Renumbering block printf_number_buffer::@19 to printf_number_buffer::@15
Renumbering block printf_number_buffer::@22 to printf_number_buffer::@16
Renumbering block printf_number_buffer::@23 to printf_number_buffer::@17
Renumbering block printf_number_buffer::@24 to printf_number_buffer::@18
Renumbering block printf_number_buffer::@25 to printf_number_buffer::@19
Renumbering block printf_number_buffer::@26 to printf_number_buffer::@20
Renumbering block printf_number_buffer::@27 to printf_number_buffer::@21
Renumbering block legal::@5 to legal::@3
Renumbering block legal::@6 to legal::@4
Renumbering block legal::@8 to legal::@5
Renumbering block legal::@9 to legal::@6
Renumbering block print::@4 to print::@3
Renumbering block print::@5 to print::@4
Renumbering block print::@6 to print::@5
Renumbering block print::@7 to print::@6
Renumbering block print::@8 to print::@7
Renumbering block print::@9 to print::@8
Renumbering block print::@10 to print::@9
Renumbering block print::@11 to print::@10
Renumbering block print::@12 to print::@11
Renumbering block print::@13 to print::@12
Renumbering block print::@14 to print::@13
Renumbering block print::@16 to print::@14
Renumbering block print::@17 to print::@15
Adding NOP phi() at start of __start
Adding NOP phi() at start of __start::@1
Adding NOP phi() at start of conio_c64_init::@2
Adding NOP phi() at start of main
Adding NOP phi() at start of main::@1
Adding NOP phi() at start of main::@2
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@6
Adding NOP phi() at start of legal
Adding NOP phi() at start of print
Adding NOP phi() at start of print::@11
Adding NOP phi() at start of print::@13
Adding NOP phi() at start of print::@4
Adding NOP phi() at start of print::@10
Adding NOP phi() at start of print::@8
Adding NOP phi() at start of gotoxy::@3
Adding NOP phi() at start of clrscr
Adding NOP phi() at start of printf_uint
Adding NOP phi() at start of cputc::@3
Adding NOP phi() at start of cputc::@1
Adding NOP phi() at start of utoa
Adding NOP phi() at start of printf_number_buffer::@6
Adding NOP phi() at start of printf_number_buffer::@21
Adding NOP phi() at start of printf_number_buffer::@11
Adding NOP phi() at start of printf_number_buffer::@5
Adding NOP phi() at start of ultoa
Adding NOP phi() at start of uctoa
Adding NOP phi() at start of utoa_append
Adding NOP phi() at start of strlen
Adding NOP phi() at start of strupr
Adding NOP phi() at start of ultoa_append
Adding NOP phi() at start of uctoa_append
Adding NOP phi() at start of cscroll::@1
Adding NOP phi() at start of cscroll::@2
Adding NOP phi() at start of cscroll::@3
Adding NOP phi() at start of cscroll::@4

FINAL CONTROL FLOW GRAPH

void __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] conio_cursor_x = 0
  [2] conio_cursor_y = 0
  [3] conio_line_text = DEFAULT_SCREEN
  [4] conio_line_color = COLORRAM
  [5] count = 0
  [6] call conio_c64_init 
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  [7] phi()
  [8] call main 
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [9] return 
  to:@return

__stackcall void queen(byte queen::row)
queen: scope:[queen]  from
  [10] queen::row#0 = stackidx(byte,queen::OFFSET_STACK_ROW)
  [11] queen::r = queen::row#0
  [12] queen::column = 1
  to:queen::@1
queen::@1: scope:[queen]  from queen queen::@3
  [13] if(queen::column<8+1) goto queen::@2
  to:queen::@return
queen::@return: scope:[queen]  from queen::@1
  [14] return 
  to:@return
queen::@2: scope:[queen]  from queen::@1
  [15] legal::row#0 = queen::r
  [16] legal::column#0 = queen::column
  [17] call legal 
  [18] legal::return#0 = legal::return#4
  to:queen::@7
queen::@7: scope:[queen]  from queen::@2
  [19] queen::$1 = legal::return#0
  [20] if(0==queen::$1) goto queen::@3
  to:queen::@5
queen::@5: scope:[queen]  from queen::@7
  [21] board[queen::r] = queen::column
  [22] if(queen::r==8) goto queen::@4
  to:queen::@6
queen::@6: scope:[queen]  from queen::@5
  asm { ldacolumn pha ldar pha  }
  [24] queen::$4 = queen::r + 1
  [25] stackpush(byte) = queen::$4
  [26] callexecute queen 
  sideeffect stackpullbytes(1)
  asm { pla star pla stacolumn  }
  to:queen::@3
queen::@3: scope:[queen]  from queen::@4 queen::@6 queen::@7
  [29] queen::column = ++ queen::column
  to:queen::@1
queen::@4: scope:[queen]  from queen::@5
  [30] count = ++ count
  [31] call print 
  to:queen::@3

void conio_c64_init()
conio_c64_init: scope:[conio_c64_init]  from __start::__init1
  [32] conio_c64_init::line#0 = *conio_c64_init::BASIC_CURSOR_LINE
  [33] if(conio_c64_init::line#0<$19) goto conio_c64_init::@2
  to:conio_c64_init::@1
conio_c64_init::@2: scope:[conio_c64_init]  from conio_c64_init
  [34] phi()
  to:conio_c64_init::@1
conio_c64_init::@1: scope:[conio_c64_init]  from conio_c64_init conio_c64_init::@2
  [35] conio_c64_init::line#2 = phi( conio_c64_init::@2/conio_c64_init::line#0, conio_c64_init/$19-1 )
  [36] gotoxy::y#2 = conio_c64_init::line#2
  [37] call gotoxy 
  to:conio_c64_init::@return
conio_c64_init::@return: scope:[conio_c64_init]  from conio_c64_init::@1
  [38] return 
  to:@return

void main()
main: scope:[main]  from __start::@1
  [39] phi()
  [40] call clrscr 
  to:main::@1
main::@1: scope:[main]  from main
  [41] phi()
  [42] call cputs 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [43] phi()
  [44] call cputs 
  to:main::@3
main::@3: scope:[main]  from main::@2
  [45] phi()
  [46] call printf_uint 
  to:main::@4
main::@4: scope:[main]  from main::@3
  [47] stackpush(byte) = 1
  [48] callexecute queen 
  sideeffect stackpullbytes(1)
  [50] call cputs 
  to:main::@5
main::@5: scope:[main]  from main::@4
  [51] printf_ulong::uvalue#0 = count
  [52] call printf_ulong 
  to:main::@6
main::@6: scope:[main]  from main::@5
  [53] phi()
  [54] call cputs 
  to:main::@return
main::@return: scope:[main]  from main::@6
  [55] return 
  to:@return

byte legal(byte legal::row , byte legal::column)
legal: scope:[legal]  from queen::@2
  [56] phi()
  to:legal::@1
legal::@1: scope:[legal]  from legal legal::@3
  [57] legal::i#2 = phi( legal/1, legal::@3/legal::i#1 )
  [58] legal::$0 = legal::row#0 - 1
  [59] if(legal::i#2<=legal::$0) goto legal::@2
  to:legal::@return
legal::@return: scope:[legal]  from legal::@1 legal::@2 legal::@6
  [60] legal::return#4 = phi( legal::@1/1, legal::@2/0, legal::@6/0 )
  [61] return 
  to:@return
legal::@2: scope:[legal]  from legal::@1
  [62] if(board[legal::i#2]==legal::column#0) goto legal::@return
  to:legal::@4
legal::@4: scope:[legal]  from legal::@2
  [63] diff::a#0 = board[legal::i#2]
  [64] diff::b#0 = legal::column#0
  [65] call diff 
  [66] diff::return#0 = diff::return#4
  to:legal::@5
legal::@5: scope:[legal]  from legal::@4
  [67] legal::$3 = diff::return#0
  [68] diff::a#1 = legal::i#2
  [69] diff::b#1 = legal::row#0
  [70] call diff 
  [71] diff::return#1 = diff::return#4
  to:legal::@6
legal::@6: scope:[legal]  from legal::@5
  [72] legal::$4 = diff::return#1
  [73] if(legal::$3!=legal::$4) goto legal::@3
  to:legal::@return
legal::@3: scope:[legal]  from legal::@6
  [74] legal::i#1 = ++ legal::i#2
  to:legal::@1

void print()
print: scope:[print]  from queen::@4
  [75] phi()
  [76] call gotoxy 
  to:print::@11
print::@11: scope:[print]  from print
  [77] phi()
  [78] call cputs 
  to:print::@12
print::@12: scope:[print]  from print::@11
  [79] printf_ulong::uvalue#1 = count
  [80] call printf_ulong 
  to:print::@13
print::@13: scope:[print]  from print::@12
  [81] phi()
  [82] call cputs 
  to:print::@1
print::@1: scope:[print]  from print::@13 print::@14
  [83] print::i#2 = phi( print::@13/1, print::@14/print::i#1 )
  [84] if(print::i#2<8+1) goto print::@2
  to:print::@3
print::@3: scope:[print]  from print::@1 print::@7
  [85] print::i1#2 = phi( print::@1/1, print::@7/print::i1#1 )
  [86] if(print::i1#2<8+1) goto print::@4
  to:print::@return
print::@return: scope:[print]  from print::@3
  [87] return 
  to:@return
print::@4: scope:[print]  from print::@3
  [88] phi()
  [89] call cputs 
  to:print::@15
print::@15: scope:[print]  from print::@4
  [90] printf_uchar::uvalue#1 = print::i1#2
  [91] call printf_uchar 
  to:print::@5
print::@5: scope:[print]  from print::@15 print::@9
  [92] print::j#2 = phi( print::@9/print::j#1, print::@15/1 )
  [93] if(print::j#2<8+1) goto print::@6
  to:print::@7
print::@7: scope:[print]  from print::@5
  [94] print::i1#1 = ++ print::i1#2
  to:print::@3
print::@6: scope:[print]  from print::@5
  [95] if(board[print::i1#2]==print::j#2) goto print::@8
  to:print::@10
print::@10: scope:[print]  from print::@6
  [96] phi()
  [97] call cputs 
  to:print::@9
print::@9: scope:[print]  from print::@10 print::@8
  [98] print::j#1 = ++ print::j#2
  to:print::@5
print::@8: scope:[print]  from print::@6
  [99] phi()
  [100] call cputs 
  to:print::@9
print::@2: scope:[print]  from print::@1
  [101] printf_uchar::uvalue#0 = print::i#2
  [102] call printf_uchar 
  to:print::@14
print::@14: scope:[print]  from print::@2
  [103] print::i#1 = ++ print::i#2
  to:print::@1

void gotoxy(byte gotoxy::x , byte gotoxy::y)
gotoxy: scope:[gotoxy]  from conio_c64_init::@1 print
  [104] gotoxy::y#4 = phi( conio_c64_init::@1/gotoxy::y#2, print/5 )
  [105] if(gotoxy::y#4<$19+1) goto gotoxy::@3
  to:gotoxy::@1
gotoxy::@3: scope:[gotoxy]  from gotoxy
  [106] phi()
  to:gotoxy::@1
gotoxy::@1: scope:[gotoxy]  from gotoxy gotoxy::@3
  [107] gotoxy::y#5 = phi( gotoxy::@3/gotoxy::y#4, gotoxy/0 )
  to:gotoxy::@2
gotoxy::@2: scope:[gotoxy]  from gotoxy::@1
  [108] conio_cursor_x = 0
  [109] conio_cursor_y = gotoxy::y#5
  [110] gotoxy::$7 = (word)gotoxy::y#5
  [111] gotoxy::$8 = gotoxy::$7 << 2
  [112] gotoxy::$9 = gotoxy::$8 + gotoxy::$7
  [113] gotoxy::line_offset#0 = gotoxy::$9 << 3
  [114] gotoxy::$5 = DEFAULT_SCREEN + gotoxy::line_offset#0
  [115] conio_line_text = gotoxy::$5
  [116] gotoxy::$6 = COLORRAM + gotoxy::line_offset#0
  [117] conio_line_color = gotoxy::$6
  to:gotoxy::@return
gotoxy::@return: scope:[gotoxy]  from gotoxy::@2
  [118] return 
  to:@return

void clrscr()
clrscr: scope:[clrscr]  from main
  [119] phi()
  to:clrscr::@1
clrscr::@1: scope:[clrscr]  from clrscr clrscr::@5
  [120] clrscr::line_cols#5 = phi( clrscr/COLORRAM, clrscr::@5/clrscr::line_cols#1 )
  [120] clrscr::line_text#5 = phi( clrscr/DEFAULT_SCREEN, clrscr::@5/clrscr::line_text#1 )
  [120] clrscr::l#2 = phi( clrscr/0, clrscr::@5/clrscr::l#1 )
  [121] if(clrscr::l#2<$19) goto clrscr::@3
  to:clrscr::@2
clrscr::@2: scope:[clrscr]  from clrscr::@1
  [122] conio_cursor_x = 0
  [123] conio_cursor_y = 0
  [124] conio_line_text = DEFAULT_SCREEN
  [125] conio_line_color = COLORRAM
  to:clrscr::@return
clrscr::@return: scope:[clrscr]  from clrscr::@2
  [126] return 
  to:@return
clrscr::@3: scope:[clrscr]  from clrscr::@1 clrscr::@4
  [127] clrscr::c#2 = phi( clrscr::@1/0, clrscr::@4/clrscr::c#1 )
  [128] if(clrscr::c#2<$28) goto clrscr::@4
  to:clrscr::@5
clrscr::@5: scope:[clrscr]  from clrscr::@3
  [129] clrscr::line_text#1 = clrscr::line_text#5 + $28
  [130] clrscr::line_cols#1 = clrscr::line_cols#5 + $28
  [131] clrscr::l#1 = ++ clrscr::l#2
  to:clrscr::@1
clrscr::@4: scope:[clrscr]  from clrscr::@3
  [132] clrscr::line_text#5[clrscr::c#2] = ' '
  [133] clrscr::line_cols#5[clrscr::c#2] = LIGHT_BLUE
  [134] clrscr::c#1 = ++ clrscr::c#2
  to:clrscr::@3

void cputs(const byte* cputs::s)
cputs: scope:[cputs]  from main::@1 main::@2 main::@4 main::@6 print::@10 print::@11 print::@13 print::@4 print::@8 printf_number_buffer::@5
  [135] cputs::s#12 = phi( main::@1/main::s, main::@2/main::s1, main::@4/main::s2, main::@6/main::s3, print::@10/print::s4, print::@11/print::s, print::@13/print::s1, print::@4/print::s2, print::@8/print::s3, printf_number_buffer::@5/(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  to:cputs::@1
cputs::@1: scope:[cputs]  from cputs cputs::@2
  [136] cputs::s#11 = phi( cputs/cputs::s#12, cputs::@2/cputs::s#0 )
  [137] cputs::c#1 = *cputs::s#11
  [138] cputs::s#0 = ++ cputs::s#11
  [139] if(0!=cputs::c#1) goto cputs::@2
  to:cputs::@return
cputs::@return: scope:[cputs]  from cputs::@1
  [140] return 
  to:@return
cputs::@2: scope:[cputs]  from cputs::@1
  [141] cputc::c#0 = cputs::c#1
  [142] call cputc 
  to:cputs::@1

void printf_uint(word printf_uint::uvalue , byte printf_uint::format_min_length , byte printf_uint::format_justify_left , byte printf_uint::format_sign_always , byte printf_uint::format_zero_padding , byte printf_uint::format_upper_case , byte printf_uint::format_radix)
printf_uint: scope:[printf_uint]  from main::@3
  [143] phi()
  to:printf_uint::@1
printf_uint::@1: scope:[printf_uint]  from printf_uint
  [144] *((byte*)&printf_buffer) = 0
  [145] call utoa 
  to:printf_uint::@2
printf_uint::@2: scope:[printf_uint]  from printf_uint::@1
  [146] printf_number_buffer::buffer_sign#1 = *((byte*)&printf_buffer)
  [147] call printf_number_buffer 
  to:printf_uint::@return
printf_uint::@return: scope:[printf_uint]  from printf_uint::@2
  [148] return 
  to:@return

void printf_ulong(dword printf_ulong::uvalue , byte printf_ulong::format_min_length , byte printf_ulong::format_justify_left , byte printf_ulong::format_sign_always , byte printf_ulong::format_zero_padding , byte printf_ulong::format_upper_case , byte printf_ulong::format_radix)
printf_ulong: scope:[printf_ulong]  from main::@5 print::@12
  [149] printf_ulong::uvalue#2 = phi( main::@5/printf_ulong::uvalue#0, print::@12/printf_ulong::uvalue#1 )
  to:printf_ulong::@1
printf_ulong::@1: scope:[printf_ulong]  from printf_ulong
  [150] *((byte*)&printf_buffer) = 0
  [151] ultoa::value#1 = printf_ulong::uvalue#2
  [152] call ultoa 
  to:printf_ulong::@2
printf_ulong::@2: scope:[printf_ulong]  from printf_ulong::@1
  [153] printf_number_buffer::buffer_sign#0 = *((byte*)&printf_buffer)
  [154] call printf_number_buffer 
  to:printf_ulong::@return
printf_ulong::@return: scope:[printf_ulong]  from printf_ulong::@2
  [155] return 
  to:@return

byte diff(byte diff::a , byte diff::b)
diff: scope:[diff]  from legal::@4 legal::@5
  [156] diff::b#2 = phi( legal::@4/diff::b#0, legal::@5/diff::b#1 )
  [156] diff::a#2 = phi( legal::@4/diff::a#0, legal::@5/diff::a#1 )
  [157] if(diff::a#2<diff::b#2) goto diff::@1
  to:diff::@2
diff::@2: scope:[diff]  from diff
  [158] diff::return#3 = diff::a#2 - diff::b#2
  to:diff::@return
diff::@return: scope:[diff]  from diff::@1 diff::@2
  [159] diff::return#4 = phi( diff::@1/diff::return#2, diff::@2/diff::return#3 )
  [160] return 
  to:@return
diff::@1: scope:[diff]  from diff
  [161] diff::return#2 = diff::b#2 - diff::a#2
  to:diff::@return

void printf_uchar(byte printf_uchar::uvalue , byte printf_uchar::format_min_length , byte printf_uchar::format_justify_left , byte printf_uchar::format_sign_always , byte printf_uchar::format_zero_padding , byte printf_uchar::format_upper_case , byte printf_uchar::format_radix)
printf_uchar: scope:[printf_uchar]  from print::@15 print::@2
  [162] printf_uchar::uvalue#2 = phi( print::@15/printf_uchar::uvalue#1, print::@2/printf_uchar::uvalue#0 )
  to:printf_uchar::@1
printf_uchar::@1: scope:[printf_uchar]  from printf_uchar
  [163] *((byte*)&printf_buffer) = 0
  [164] uctoa::value#1 = printf_uchar::uvalue#2
  [165] call uctoa 
  to:printf_uchar::@2
printf_uchar::@2: scope:[printf_uchar]  from printf_uchar::@1
  [166] printf_number_buffer::buffer_sign#2 = *((byte*)&printf_buffer)
  [167] call printf_number_buffer 
  to:printf_uchar::@return
printf_uchar::@return: scope:[printf_uchar]  from printf_uchar::@2
  [168] return 
  to:@return

void cputc(byte cputc::c)
cputc: scope:[cputc]  from cputs::@2 printf_number_buffer::@9 printf_padding::@2
  [169] cputc::c#3 = phi( cputs::@2/cputc::c#0, printf_number_buffer::@9/cputc::c#2, printf_padding::@2/cputc::c#1 )
  [170] if(cputc::c#3=='
') goto cputc::@1
  to:cputc::@2
cputc::@2: scope:[cputc]  from cputc
  [171] conio_line_text[conio_cursor_x] = cputc::c#3
  [172] conio_line_color[conio_cursor_x] = LIGHT_BLUE
  [173] conio_cursor_x = ++ conio_cursor_x
  [174] if(conio_cursor_x!=$28) goto cputc::@return
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc::@2
  [175] phi()
  [176] call cputln 
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@1 cputc::@2 cputc::@3
  [177] return 
  to:@return
cputc::@1: scope:[cputc]  from cputc
  [178] phi()
  [179] call cputln 
  to:cputc::@return

void utoa(word utoa::value , byte* utoa::buffer , byte utoa::radix)
utoa: scope:[utoa]  from printf_uint::@1
  [180] phi()
  to:utoa::@1
utoa::@1: scope:[utoa]  from utoa utoa::@4
  [181] utoa::buffer#11 = phi( utoa::@4/utoa::buffer#14, utoa/(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  [181] utoa::started#2 = phi( utoa::@4/utoa::started#4, utoa/0 )
  [181] utoa::value#2 = phi( utoa::@4/utoa::value#6, utoa/printf_uint::uvalue#0 )
  [181] utoa::digit#2 = phi( utoa::@4/utoa::digit#1, utoa/0 )
  [182] if(utoa::digit#2<utoa::max_digits#1-1) goto utoa::@2
  to:utoa::@3
utoa::@3: scope:[utoa]  from utoa::@1
  [183] utoa::$11 = (byte)utoa::value#2
  [184] *utoa::buffer#11 = DIGITS[utoa::$11]
  [185] utoa::buffer#3 = ++ utoa::buffer#11
  [186] *utoa::buffer#3 = 0
  to:utoa::@return
utoa::@return: scope:[utoa]  from utoa::@3
  [187] return 
  to:@return
utoa::@2: scope:[utoa]  from utoa::@1
  [188] utoa::$10 = utoa::digit#2 << 1
  [189] utoa::digit_value#0 = RADIX_DECIMAL_VALUES[utoa::$10]
  [190] if(0!=utoa::started#2) goto utoa::@5
  to:utoa::@7
utoa::@7: scope:[utoa]  from utoa::@2
  [191] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@5
  to:utoa::@4
utoa::@4: scope:[utoa]  from utoa::@6 utoa::@7
  [192] utoa::buffer#14 = phi( utoa::@7/utoa::buffer#11, utoa::@6/utoa::buffer#4 )
  [192] utoa::started#4 = phi( utoa::@7/utoa::started#2, utoa::@6/1 )
  [192] utoa::value#6 = phi( utoa::@7/utoa::value#2, utoa::@6/utoa::value#0 )
  [193] utoa::digit#1 = ++ utoa::digit#2
  to:utoa::@1
utoa::@5: scope:[utoa]  from utoa::@2 utoa::@7
  [194] utoa_append::buffer#0 = utoa::buffer#11
  [195] utoa_append::value#0 = utoa::value#2
  [196] utoa_append::sub#0 = utoa::digit_value#0
  [197] call utoa_append 
  [198] utoa_append::return#0 = utoa_append::value#2
  to:utoa::@6
utoa::@6: scope:[utoa]  from utoa::@5
  [199] utoa::value#0 = utoa_append::return#0
  [200] utoa::buffer#4 = ++ utoa::buffer#11
  to:utoa::@4

void printf_number_buffer(byte printf_number_buffer::buffer_sign , byte* printf_number_buffer::buffer_digits , byte printf_number_buffer::format_min_length , byte printf_number_buffer::format_justify_left , byte printf_number_buffer::format_sign_always , byte printf_number_buffer::format_zero_padding , byte printf_number_buffer::format_upper_case , byte printf_number_buffer::format_radix)
printf_number_buffer: scope:[printf_number_buffer]  from printf_uchar::@2 printf_uint::@2 printf_ulong::@2
  [201] printf_number_buffer::format_upper_case#10 = phi( printf_uchar::@2/0, printf_uint::@2/printf_uint::format_upper_case#0, printf_ulong::@2/0 )
  [201] printf_number_buffer::buffer_sign#10 = phi( printf_uchar::@2/printf_number_buffer::buffer_sign#2, printf_uint::@2/printf_number_buffer::buffer_sign#1, printf_ulong::@2/printf_number_buffer::buffer_sign#0 )
  [201] printf_number_buffer::format_zero_padding#10 = phi( printf_uchar::@2/0, printf_uint::@2/printf_uint::format_zero_padding#0, printf_ulong::@2/0 )
  [201] printf_number_buffer::format_justify_left#10 = phi( printf_uchar::@2/0, printf_uint::@2/printf_uint::format_justify_left#0, printf_ulong::@2/0 )
  [201] printf_number_buffer::format_min_length#3 = phi( printf_uchar::@2/0, printf_uint::@2/printf_uint::format_min_length#0, printf_ulong::@2/0 )
  [202] if(0==printf_number_buffer::format_min_length#3) goto printf_number_buffer::@1
  to:printf_number_buffer::@6
printf_number_buffer::@6: scope:[printf_number_buffer]  from printf_number_buffer
  [203] phi()
  [204] call strlen 
  [205] strlen::return#2 = strlen::len#2
  to:printf_number_buffer::@14
printf_number_buffer::@14: scope:[printf_number_buffer]  from printf_number_buffer::@6
  [206] printf_number_buffer::$19 = strlen::return#2
  [207] printf_number_buffer::len#0 = (signed byte)printf_number_buffer::$19
  [208] if(0==printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@13
  to:printf_number_buffer::@7
printf_number_buffer::@7: scope:[printf_number_buffer]  from printf_number_buffer::@14
  [209] printf_number_buffer::len#1 = ++ printf_number_buffer::len#0
  to:printf_number_buffer::@13
printf_number_buffer::@13: scope:[printf_number_buffer]  from printf_number_buffer::@14 printf_number_buffer::@7
  [210] printf_number_buffer::len#2 = phi( printf_number_buffer::@14/printf_number_buffer::len#0, printf_number_buffer::@7/printf_number_buffer::len#1 )
  [211] printf_number_buffer::padding#1 = (signed byte)printf_number_buffer::format_min_length#3 - printf_number_buffer::len#2
  [212] if(printf_number_buffer::padding#1>=0) goto printf_number_buffer::@21
  to:printf_number_buffer::@1
printf_number_buffer::@21: scope:[printf_number_buffer]  from printf_number_buffer::@13
  [213] phi()
  to:printf_number_buffer::@1
printf_number_buffer::@1: scope:[printf_number_buffer]  from printf_number_buffer printf_number_buffer::@13 printf_number_buffer::@21
  [214] printf_number_buffer::padding#10 = phi( printf_number_buffer/0, printf_number_buffer::@21/printf_number_buffer::padding#1, printf_number_buffer::@13/0 )
  [215] if(0!=printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@2
  to:printf_number_buffer::@17
printf_number_buffer::@17: scope:[printf_number_buffer]  from printf_number_buffer::@1
  [216] if(0!=printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@2
  to:printf_number_buffer::@16
printf_number_buffer::@16: scope:[printf_number_buffer]  from printf_number_buffer::@17
  [217] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@8
  to:printf_number_buffer::@2
printf_number_buffer::@8: scope:[printf_number_buffer]  from printf_number_buffer::@16
  [218] printf_padding::length#0 = (byte)printf_number_buffer::padding#10
  [219] call printf_padding 
  to:printf_number_buffer::@2
printf_number_buffer::@2: scope:[printf_number_buffer]  from printf_number_buffer::@1 printf_number_buffer::@16 printf_number_buffer::@17 printf_number_buffer::@8
  [220] if(0==printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@3
  to:printf_number_buffer::@9
printf_number_buffer::@9: scope:[printf_number_buffer]  from printf_number_buffer::@2
  [221] cputc::c#2 = printf_number_buffer::buffer_sign#10
  [222] call cputc 
  to:printf_number_buffer::@3
printf_number_buffer::@3: scope:[printf_number_buffer]  from printf_number_buffer::@2 printf_number_buffer::@9
  [223] if(0==printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@4
  to:printf_number_buffer::@18
printf_number_buffer::@18: scope:[printf_number_buffer]  from printf_number_buffer::@3
  [224] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@10
  to:printf_number_buffer::@4
printf_number_buffer::@10: scope:[printf_number_buffer]  from printf_number_buffer::@18
  [225] printf_padding::length#1 = (byte)printf_number_buffer::padding#10
  [226] call printf_padding 
  to:printf_number_buffer::@4
printf_number_buffer::@4: scope:[printf_number_buffer]  from printf_number_buffer::@10 printf_number_buffer::@18 printf_number_buffer::@3
  [227] if(0==printf_number_buffer::format_upper_case#10) goto printf_number_buffer::@5
  to:printf_number_buffer::@11
printf_number_buffer::@11: scope:[printf_number_buffer]  from printf_number_buffer::@4
  [228] phi()
  [229] call strupr 
  to:printf_number_buffer::@5
printf_number_buffer::@5: scope:[printf_number_buffer]  from printf_number_buffer::@11 printf_number_buffer::@4
  [230] phi()
  [231] call cputs 
  to:printf_number_buffer::@15
printf_number_buffer::@15: scope:[printf_number_buffer]  from printf_number_buffer::@5
  [232] if(0==printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@return
  to:printf_number_buffer::@20
printf_number_buffer::@20: scope:[printf_number_buffer]  from printf_number_buffer::@15
  [233] if(0!=printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@return
  to:printf_number_buffer::@19
printf_number_buffer::@19: scope:[printf_number_buffer]  from printf_number_buffer::@20
  [234] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@12
  to:printf_number_buffer::@return
printf_number_buffer::@12: scope:[printf_number_buffer]  from printf_number_buffer::@19
  [235] printf_padding::length#2 = (byte)printf_number_buffer::padding#10
  [236] call printf_padding 
  to:printf_number_buffer::@return
printf_number_buffer::@return: scope:[printf_number_buffer]  from printf_number_buffer::@12 printf_number_buffer::@15 printf_number_buffer::@19 printf_number_buffer::@20
  [237] return 
  to:@return

void ultoa(dword ultoa::value , byte* ultoa::buffer , byte ultoa::radix)
ultoa: scope:[ultoa]  from printf_ulong::@1
  [238] phi()
  to:ultoa::@1
ultoa::@1: scope:[ultoa]  from ultoa ultoa::@4
  [239] ultoa::buffer#11 = phi( ultoa::@4/ultoa::buffer#14, ultoa/(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  [239] ultoa::started#2 = phi( ultoa::@4/ultoa::started#4, ultoa/0 )
  [239] ultoa::value#2 = phi( ultoa::@4/ultoa::value#6, ultoa/ultoa::value#1 )
  [239] ultoa::digit#2 = phi( ultoa::@4/ultoa::digit#1, ultoa/0 )
  [240] if(ultoa::digit#2<$a-1) goto ultoa::@2
  to:ultoa::@3
ultoa::@3: scope:[ultoa]  from ultoa::@1
  [241] ultoa::$11 = (byte)ultoa::value#2
  [242] *ultoa::buffer#11 = DIGITS[ultoa::$11]
  [243] ultoa::buffer#3 = ++ ultoa::buffer#11
  [244] *ultoa::buffer#3 = 0
  to:ultoa::@return
ultoa::@return: scope:[ultoa]  from ultoa::@3
  [245] return 
  to:@return
ultoa::@2: scope:[ultoa]  from ultoa::@1
  [246] ultoa::$10 = ultoa::digit#2 << 2
  [247] ultoa::digit_value#0 = RADIX_DECIMAL_VALUES_LONG[ultoa::$10]
  [248] if(0!=ultoa::started#2) goto ultoa::@5
  to:ultoa::@7
ultoa::@7: scope:[ultoa]  from ultoa::@2
  [249] if(ultoa::value#2>=ultoa::digit_value#0) goto ultoa::@5
  to:ultoa::@4
ultoa::@4: scope:[ultoa]  from ultoa::@6 ultoa::@7
  [250] ultoa::buffer#14 = phi( ultoa::@7/ultoa::buffer#11, ultoa::@6/ultoa::buffer#4 )
  [250] ultoa::started#4 = phi( ultoa::@7/ultoa::started#2, ultoa::@6/1 )
  [250] ultoa::value#6 = phi( ultoa::@7/ultoa::value#2, ultoa::@6/ultoa::value#0 )
  [251] ultoa::digit#1 = ++ ultoa::digit#2
  to:ultoa::@1
ultoa::@5: scope:[ultoa]  from ultoa::@2 ultoa::@7
  [252] ultoa_append::buffer#0 = ultoa::buffer#11
  [253] ultoa_append::value#0 = ultoa::value#2
  [254] ultoa_append::sub#0 = ultoa::digit_value#0
  [255] call ultoa_append 
  [256] ultoa_append::return#0 = ultoa_append::value#2
  to:ultoa::@6
ultoa::@6: scope:[ultoa]  from ultoa::@5
  [257] ultoa::value#0 = ultoa_append::return#0
  [258] ultoa::buffer#4 = ++ ultoa::buffer#11
  to:ultoa::@4

void uctoa(byte uctoa::value , byte* uctoa::buffer , byte uctoa::radix)
uctoa: scope:[uctoa]  from printf_uchar::@1
  [259] phi()
  to:uctoa::@1
uctoa::@1: scope:[uctoa]  from uctoa uctoa::@4
  [260] uctoa::buffer#11 = phi( uctoa::@4/uctoa::buffer#14, uctoa/(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  [260] uctoa::started#2 = phi( uctoa::@4/uctoa::started#4, uctoa/0 )
  [260] uctoa::value#2 = phi( uctoa::@4/uctoa::value#6, uctoa/uctoa::value#1 )
  [260] uctoa::digit#2 = phi( uctoa::@4/uctoa::digit#1, uctoa/0 )
  [261] if(uctoa::digit#2<2-1) goto uctoa::@2
  to:uctoa::@3
uctoa::@3: scope:[uctoa]  from uctoa::@1
  [262] *uctoa::buffer#11 = DIGITS[uctoa::value#2]
  [263] uctoa::buffer#3 = ++ uctoa::buffer#11
  [264] *uctoa::buffer#3 = 0
  to:uctoa::@return
uctoa::@return: scope:[uctoa]  from uctoa::@3
  [265] return 
  to:@return
uctoa::@2: scope:[uctoa]  from uctoa::@1
  [266] uctoa::digit_value#0 = RADIX_HEXADECIMAL_VALUES_CHAR[uctoa::digit#2]
  [267] if(0!=uctoa::started#2) goto uctoa::@5
  to:uctoa::@7
uctoa::@7: scope:[uctoa]  from uctoa::@2
  [268] if(uctoa::value#2>=uctoa::digit_value#0) goto uctoa::@5
  to:uctoa::@4
uctoa::@4: scope:[uctoa]  from uctoa::@6 uctoa::@7
  [269] uctoa::buffer#14 = phi( uctoa::@7/uctoa::buffer#11, uctoa::@6/uctoa::buffer#4 )
  [269] uctoa::started#4 = phi( uctoa::@7/uctoa::started#2, uctoa::@6/1 )
  [269] uctoa::value#6 = phi( uctoa::@7/uctoa::value#2, uctoa::@6/uctoa::value#0 )
  [270] uctoa::digit#1 = ++ uctoa::digit#2
  to:uctoa::@1
uctoa::@5: scope:[uctoa]  from uctoa::@2 uctoa::@7
  [271] uctoa_append::buffer#0 = uctoa::buffer#11
  [272] uctoa_append::value#0 = uctoa::value#2
  [273] uctoa_append::sub#0 = uctoa::digit_value#0
  [274] call uctoa_append 
  [275] uctoa_append::return#0 = uctoa_append::value#2
  to:uctoa::@6
uctoa::@6: scope:[uctoa]  from uctoa::@5
  [276] uctoa::value#0 = uctoa_append::return#0
  [277] uctoa::buffer#4 = ++ uctoa::buffer#11
  to:uctoa::@4

void cputln()
cputln: scope:[cputln]  from cputc::@1 cputc::@3
  [278] conio_line_text = conio_line_text + $28
  [279] conio_line_color = conio_line_color + $28
  [280] conio_cursor_x = 0
  [281] conio_cursor_y = ++ conio_cursor_y
  [282] call cscroll 
  to:cputln::@return
cputln::@return: scope:[cputln]  from cputln
  [283] return 
  to:@return

word utoa_append(byte* utoa_append::buffer , word utoa_append::value , word utoa_append::sub)
utoa_append: scope:[utoa_append]  from utoa::@5
  [284] phi()
  to:utoa_append::@1
utoa_append::@1: scope:[utoa_append]  from utoa_append utoa_append::@2
  [285] utoa_append::digit#2 = phi( utoa_append/0, utoa_append::@2/utoa_append::digit#1 )
  [285] utoa_append::value#2 = phi( utoa_append/utoa_append::value#0, utoa_append::@2/utoa_append::value#1 )
  [286] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2
  to:utoa_append::@3
utoa_append::@3: scope:[utoa_append]  from utoa_append::@1
  [287] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2]
  to:utoa_append::@return
utoa_append::@return: scope:[utoa_append]  from utoa_append::@3
  [288] return 
  to:@return
utoa_append::@2: scope:[utoa_append]  from utoa_append::@1
  [289] utoa_append::digit#1 = ++ utoa_append::digit#2
  [290] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0
  to:utoa_append::@1

word strlen(byte* strlen::str)
strlen: scope:[strlen]  from printf_number_buffer::@6
  [291] phi()
  to:strlen::@1
strlen::@1: scope:[strlen]  from strlen strlen::@2
  [292] strlen::len#2 = phi( strlen/0, strlen::@2/strlen::len#1 )
  [292] strlen::str#2 = phi( strlen/(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS, strlen::@2/strlen::str#0 )
  [293] if(0!=*strlen::str#2) goto strlen::@2
  to:strlen::@return
strlen::@return: scope:[strlen]  from strlen::@1
  [294] return 
  to:@return
strlen::@2: scope:[strlen]  from strlen::@1
  [295] strlen::len#1 = ++ strlen::len#2
  [296] strlen::str#0 = ++ strlen::str#2
  to:strlen::@1

void printf_padding(byte printf_padding::pad , byte printf_padding::length)
printf_padding: scope:[printf_padding]  from printf_number_buffer::@10 printf_number_buffer::@12 printf_number_buffer::@8
  [297] printf_padding::pad#5 = phi( printf_number_buffer::@10/'0', printf_number_buffer::@12/' ', printf_number_buffer::@8/' ' )
  [297] printf_padding::length#4 = phi( printf_number_buffer::@10/printf_padding::length#1, printf_number_buffer::@12/printf_padding::length#2, printf_number_buffer::@8/printf_padding::length#0 )
  to:printf_padding::@1
printf_padding::@1: scope:[printf_padding]  from printf_padding printf_padding::@3
  [298] printf_padding::i#2 = phi( printf_padding/0, printf_padding::@3/printf_padding::i#1 )
  [299] if(printf_padding::i#2<printf_padding::length#4) goto printf_padding::@2
  to:printf_padding::@return
printf_padding::@return: scope:[printf_padding]  from printf_padding::@1
  [300] return 
  to:@return
printf_padding::@2: scope:[printf_padding]  from printf_padding::@1
  [301] cputc::c#1 = printf_padding::pad#5
  [302] call cputc 
  to:printf_padding::@3
printf_padding::@3: scope:[printf_padding]  from printf_padding::@2
  [303] printf_padding::i#1 = ++ printf_padding::i#2
  to:printf_padding::@1

byte* strupr(byte* strupr::str)
strupr: scope:[strupr]  from printf_number_buffer::@11
  [304] phi()
  to:strupr::@1
strupr::@1: scope:[strupr]  from strupr strupr::@3
  [305] strupr::src#2 = phi( strupr/strupr::str#0, strupr::@3/strupr::src#1 )
  [306] if(0!=*strupr::src#2) goto strupr::@2
  to:strupr::@return
strupr::@return: scope:[strupr]  from strupr::@1
  [307] return 
  to:@return
strupr::@2: scope:[strupr]  from strupr::@1
  [308] toupper::ch#0 = *strupr::src#2
  [309] call toupper 
  [310] toupper::return#3 = toupper::return#2
  to:strupr::@3
strupr::@3: scope:[strupr]  from strupr::@2
  [311] strupr::$0 = toupper::return#3
  [312] *strupr::src#2 = strupr::$0
  [313] strupr::src#1 = ++ strupr::src#2
  to:strupr::@1

dword ultoa_append(byte* ultoa_append::buffer , dword ultoa_append::value , dword ultoa_append::sub)
ultoa_append: scope:[ultoa_append]  from ultoa::@5
  [314] phi()
  to:ultoa_append::@1
ultoa_append::@1: scope:[ultoa_append]  from ultoa_append ultoa_append::@2
  [315] ultoa_append::digit#2 = phi( ultoa_append/0, ultoa_append::@2/ultoa_append::digit#1 )
  [315] ultoa_append::value#2 = phi( ultoa_append/ultoa_append::value#0, ultoa_append::@2/ultoa_append::value#1 )
  [316] if(ultoa_append::value#2>=ultoa_append::sub#0) goto ultoa_append::@2
  to:ultoa_append::@3
ultoa_append::@3: scope:[ultoa_append]  from ultoa_append::@1
  [317] *ultoa_append::buffer#0 = DIGITS[ultoa_append::digit#2]
  to:ultoa_append::@return
ultoa_append::@return: scope:[ultoa_append]  from ultoa_append::@3
  [318] return 
  to:@return
ultoa_append::@2: scope:[ultoa_append]  from ultoa_append::@1
  [319] ultoa_append::digit#1 = ++ ultoa_append::digit#2
  [320] ultoa_append::value#1 = ultoa_append::value#2 - ultoa_append::sub#0
  to:ultoa_append::@1

byte uctoa_append(byte* uctoa_append::buffer , byte uctoa_append::value , byte uctoa_append::sub)
uctoa_append: scope:[uctoa_append]  from uctoa::@5
  [321] phi()
  to:uctoa_append::@1
uctoa_append::@1: scope:[uctoa_append]  from uctoa_append uctoa_append::@2
  [322] uctoa_append::digit#2 = phi( uctoa_append/0, uctoa_append::@2/uctoa_append::digit#1 )
  [322] uctoa_append::value#2 = phi( uctoa_append/uctoa_append::value#0, uctoa_append::@2/uctoa_append::value#1 )
  [323] if(uctoa_append::value#2>=uctoa_append::sub#0) goto uctoa_append::@2
  to:uctoa_append::@3
uctoa_append::@3: scope:[uctoa_append]  from uctoa_append::@1
  [324] *uctoa_append::buffer#0 = DIGITS[uctoa_append::digit#2]
  to:uctoa_append::@return
uctoa_append::@return: scope:[uctoa_append]  from uctoa_append::@3
  [325] return 
  to:@return
uctoa_append::@2: scope:[uctoa_append]  from uctoa_append::@1
  [326] uctoa_append::digit#1 = ++ uctoa_append::digit#2
  [327] uctoa_append::value#1 = uctoa_append::value#2 - uctoa_append::sub#0
  to:uctoa_append::@1

void cscroll()
cscroll: scope:[cscroll]  from cputln
  [328] if(conio_cursor_y!=$19) goto cscroll::@return
  to:cscroll::@1
cscroll::@1: scope:[cscroll]  from cscroll
  [329] phi()
  [330] call memcpy 
  to:cscroll::@2
cscroll::@2: scope:[cscroll]  from cscroll::@1
  [331] phi()
  [332] call memcpy 
  to:cscroll::@3
cscroll::@3: scope:[cscroll]  from cscroll::@2
  [333] phi()
  [334] call memset 
  to:cscroll::@4
cscroll::@4: scope:[cscroll]  from cscroll::@3
  [335] phi()
  [336] call memset 
  to:cscroll::@5
cscroll::@5: scope:[cscroll]  from cscroll::@4
  [337] conio_line_text = conio_line_text - $28
  [338] conio_line_color = conio_line_color - $28
  [339] conio_cursor_y = -- conio_cursor_y
  to:cscroll::@return
cscroll::@return: scope:[cscroll]  from cscroll cscroll::@5
  [340] return 
  to:@return

byte toupper(byte toupper::ch)
toupper: scope:[toupper]  from strupr::@2
  [341] if(toupper::ch#0<'a') goto toupper::@return
  to:toupper::@2
toupper::@2: scope:[toupper]  from toupper
  [342] if(toupper::ch#0<='z') goto toupper::@1
  to:toupper::@return
toupper::@1: scope:[toupper]  from toupper::@2
  [343] toupper::return#0 = toupper::ch#0 + 'A'-'a'
  to:toupper::@return
toupper::@return: scope:[toupper]  from toupper toupper::@1 toupper::@2
  [344] toupper::return#2 = phi( toupper::@1/toupper::return#0, toupper/toupper::ch#0, toupper::@2/toupper::ch#0 )
  [345] return 
  to:@return

void* memcpy(void* memcpy::destination , void* memcpy::source , word memcpy::num)
memcpy: scope:[memcpy]  from cscroll::@1 cscroll::@2
  [346] memcpy::destination#2 = phi( cscroll::@1/(void*)DEFAULT_SCREEN, cscroll::@2/(void*)COLORRAM )
  [346] memcpy::source#2 = phi( cscroll::@1/(void*)DEFAULT_SCREEN+$28, cscroll::@2/(void*)COLORRAM+$28 )
  [347] memcpy::src_end#0 = (byte*)memcpy::source#2 + (word)$19*$28-$28
  [348] memcpy::src#4 = (byte*)memcpy::source#2
  [349] memcpy::dst#4 = (byte*)memcpy::destination#2
  to:memcpy::@1
memcpy::@1: scope:[memcpy]  from memcpy memcpy::@2
  [350] memcpy::dst#2 = phi( memcpy/memcpy::dst#4, memcpy::@2/memcpy::dst#1 )
  [350] memcpy::src#2 = phi( memcpy/memcpy::src#4, memcpy::@2/memcpy::src#1 )
  [351] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2
  to:memcpy::@return
memcpy::@return: scope:[memcpy]  from memcpy::@1
  [352] return 
  to:@return
memcpy::@2: scope:[memcpy]  from memcpy::@1
  [353] *memcpy::dst#2 = *memcpy::src#2
  [354] memcpy::dst#1 = ++ memcpy::dst#2
  [355] memcpy::src#1 = ++ memcpy::src#2
  to:memcpy::@1

void* memset(void* memset::str , byte memset::c , word memset::num)
memset: scope:[memset]  from cscroll::@3 cscroll::@4
  [356] memset::c#4 = phi( cscroll::@3/' ', cscroll::@4/LIGHT_BLUE )
  [356] memset::str#3 = phi( cscroll::@3/(void*)DEFAULT_SCREEN+(word)$19*$28-$28, cscroll::@4/(void*)COLORRAM+(word)$19*$28-$28 )
  to:memset::@1
memset::@1: scope:[memset]  from memset
  [357] memset::end#0 = (byte*)memset::str#3 + $28
  [358] memset::dst#4 = (byte*)memset::str#3
  to:memset::@2
memset::@2: scope:[memset]  from memset::@1 memset::@3
  [359] memset::dst#2 = phi( memset::@1/memset::dst#4, memset::@3/memset::dst#1 )
  [360] if(memset::dst#2!=memset::end#0) goto memset::@3
  to:memset::@return
memset::@return: scope:[memset]  from memset::@2
  [361] return 
  to:@return
memset::@3: scope:[memset]  from memset::@2
  [362] *memset::dst#2 = memset::c#4
  [363] memset::dst#1 = ++ memset::dst#2
  to:memset::@2

null depth in calling loop Loop head: queen::@1 tails: queen::@3 blocks: queen::@3 queen::@4 queen::@6 queen::@7 queen::@5 queen::@2 queen::@1  in scope queen
null depth in calling loop Loop head: printf_padding::@1 tails: printf_padding::@3 blocks: printf_padding::@3 printf_padding::@2 printf_padding::@1  in scope cputc
null depth in calling loop Loop head: printf_padding::@1 tails: printf_padding::@3 blocks: printf_padding::@3 printf_padding::@2 printf_padding::@1  in scope cputc
null depth in calling loop Loop head: printf_padding::@1 tails: printf_padding::@3 blocks: printf_padding::@3 printf_padding::@2 printf_padding::@1  in scope cputc

VARIABLE REGISTER WEIGHTS
void __start()
void clrscr()
byte clrscr::c
byte clrscr::c#1 20002.0
byte clrscr::c#2 12501.25
byte clrscr::l
byte clrscr::l#1 2002.0
byte clrscr::l#2 333.6666666666667
byte* clrscr::line_cols
byte* clrscr::line_cols#1 1001.0
byte* clrscr::line_cols#5 1500.375
byte* clrscr::line_text
byte* clrscr::line_text#1 667.3333333333334
byte* clrscr::line_text#5 1714.7142857142858
void conio_c64_init()
byte conio_c64_init::line
byte conio_c64_init::line#0 11.0
byte conio_c64_init::line#2 22.0
byte conio_cursor_x loadstore 9.146341463414634E27
byte conio_cursor_y loadstore 1.787709497206704E29
byte* conio_line_color loadstore 1.3076923076923077E29
byte* conio_line_text loadstore 1.2848837209302325E29
dword count loadstore 3.0303030303424248E10
void cputc(byte cputc::c)
byte cputc::c
byte cputc::c#0 2.0E28
byte cputc::c#1 2.0E27
byte cputc::c#2 2.00000000000002E14
byte cputc::c#3 1.0550000000000004E29
void cputln()
void cputs(const byte* cputs::s)
byte cputs::c
byte cputs::c#1 1.0E28
const byte* cputs::s
const byte* cputs::s#0 5.0E27
const byte* cputs::s#11 1.5000000000000497E28
const byte* cputs::s#12 1.000000000000001E15
void cscroll()
byte diff(byte diff::a , byte diff::b)
byte diff::a
byte diff::a#0 1.000000000001E12
byte diff::a#1 1.000000000001E12
byte diff::a#2 1.60000000000025E13
byte diff::b
byte diff::b#0 2.000000000002E12
byte diff::b#1 2.000000000002E12
byte diff::b#2 1.60000000000025E13
byte diff::return
byte diff::return#0 2.000000000002E12
byte diff::return#1 2.000000000002E12
byte diff::return#2 2.0000000000002E13
byte diff::return#3 2.0000000000002E13
byte diff::return#4 5.500000000001E12
void gotoxy(byte gotoxy::x , byte gotoxy::y)
byte*~ gotoxy::$5 202.0
byte*~ gotoxy::$6 202.0
word~ gotoxy::$7 151.5
word~ gotoxy::$8 202.0
word~ gotoxy::$9 202.0
word gotoxy::line_offset
word gotoxy::line_offset#0 101.0
byte gotoxy::x
byte gotoxy::y
byte gotoxy::y#2 22.0
byte gotoxy::y#4 71.0
byte gotoxy::y#5 67.33333333333333
byte legal(byte legal::row , byte legal::column)
byte~ legal::$0 2.000000000002E12
byte~ legal::$3 3.333333333336667E11
byte~ legal::$4 2.000000000002E12
byte legal::column
byte legal::column#0 1.6666666666683334E11
byte legal::i
byte legal::i#1 2.000000000002E12
byte legal::i#2 4.0000000000039996E11
byte legal::return
byte legal::return#0 2.000000000002E12
byte legal::return#4 3.333333333336667E11
byte legal::row
byte legal::row#0 1.5789473684226315E11
void main()
void* memcpy(void* memcpy::destination , void* memcpy::source , word memcpy::num)
void* memcpy::destination
void* memcpy::destination#2
byte* memcpy::dst
byte* memcpy::dst#1 1.0E46
byte* memcpy::dst#2 1.0000000000000033E46
byte* memcpy::dst#4 2.0E32
word memcpy::num
void* memcpy::return
void* memcpy::source
void* memcpy::source#2
byte* memcpy::src
byte* memcpy::src#1 2.0E46
byte* memcpy::src#2 1.0000000000000025E46
byte* memcpy::src#4 1.0E32
byte* memcpy::src_end
byte* memcpy::src_end#0 1.2500000000000125E45
void* memset(void* memset::str , byte memset::c , word memset::num)
byte memset::c
byte memset::c#4 1.4285714285714287E45
byte* memset::dst
byte* memset::dst#1 2.0E46
byte* memset::dst#2 1.3333333333333366E46
byte* memset::dst#4 2.0E32
byte* memset::end
byte* memset::end#0 1.6666666666666835E45
word memset::num
void* memset::return
void* memset::str
void* memset::str#3
void print()
byte print::i
byte print::i#1 2.000000000002E12
byte print::i#2 1.000000000001E12
byte print::i1
byte print::i1#1 2.000000000002E12
byte print::i1#2 1.0000000000003572E12
byte print::j
byte print::j#1 2.0000000000002E13
byte print::j#2 5.714285714286286E12
struct printf_buffer_number printf_buffer loadstore = {}
void printf_number_buffer(byte printf_number_buffer::buffer_sign , byte* printf_number_buffer::buffer_digits , byte printf_number_buffer::format_min_length , byte printf_number_buffer::format_justify_left , byte printf_number_buffer::format_sign_always , byte printf_number_buffer::format_zero_padding , byte printf_number_buffer::format_upper_case , byte printf_number_buffer::format_radix)
word~ printf_number_buffer::$19 1.00000000000001E14
struct printf_buffer_number printf_number_buffer::buffer
byte* printf_number_buffer::buffer_digits
byte printf_number_buffer::buffer_sign
byte printf_number_buffer::buffer_sign#0 202.0
byte printf_number_buffer::buffer_sign#1 202.0
byte printf_number_buffer::buffer_sign#10 1.55000000000103E13
byte printf_number_buffer::buffer_sign#2 2.0000000000002E13
struct printf_format_number printf_number_buffer::format
byte printf_number_buffer::format_justify_left
byte printf_number_buffer::format_justify_left#10 6.451612903225871E12
byte printf_number_buffer::format_min_length
byte printf_number_buffer::format_min_length#3 1.00000000000001E13
byte printf_number_buffer::format_radix
byte printf_number_buffer::format_sign_always
byte printf_number_buffer::format_upper_case
byte printf_number_buffer::format_upper_case#10 3.846153846153885E12
byte printf_number_buffer::format_zero_padding
byte printf_number_buffer::format_zero_padding#10 9.375000000000094E12
signed byte printf_number_buffer::len
signed byte printf_number_buffer::len#0 1.500000000000015E14
signed byte printf_number_buffer::len#1 2.00000000000002E14
signed byte printf_number_buffer::len#2 3.00000000000003E14
signed byte printf_number_buffer::padding
signed byte printf_number_buffer::padding#1 1.00000000000001E14
signed byte printf_number_buffer::padding#10 1.904761904761924E13
void printf_padding(byte printf_padding::pad , byte printf_padding::length)
byte printf_padding::i
byte printf_padding::i#1 2.0E27
byte printf_padding::i#2 7.500000000000001E26
byte printf_padding::length
byte printf_padding::length#0 2.00000000000002E14
byte printf_padding::length#1 2.00000000000002E14
byte printf_padding::length#2 2.00000000000002E14
byte printf_padding::length#4 1.6666666666671665E26
byte printf_padding::pad
byte printf_padding::pad#5 1.6666666666666666E26
void printf_uchar(byte printf_uchar::uvalue , byte printf_uchar::format_min_length , byte printf_uchar::format_justify_left , byte printf_uchar::format_sign_always , byte printf_uchar::format_zero_padding , byte printf_uchar::format_upper_case , byte printf_uchar::format_radix)
struct printf_format_number printf_uchar::format
byte printf_uchar::format_justify_left
byte printf_uchar::format_min_length
byte printf_uchar::format_radix
byte printf_uchar::format_sign_always
byte printf_uchar::format_upper_case
byte printf_uchar::format_zero_padding
byte printf_uchar::uvalue
byte printf_uchar::uvalue#0 2.000000000002E12
byte printf_uchar::uvalue#1 2.000000000002E12
byte printf_uchar::uvalue#2 6.0000000000015E12
void printf_uint(word printf_uint::uvalue , byte printf_uint::format_min_length , byte printf_uint::format_justify_left , byte printf_uint::format_sign_always , byte printf_uint::format_zero_padding , byte printf_uint::format_upper_case , byte printf_uint::format_radix)
struct printf_format_number printf_uint::format
byte printf_uint::format_justify_left
byte printf_uint::format_min_length
byte printf_uint::format_radix
byte printf_uint::format_sign_always
byte printf_uint::format_upper_case
byte printf_uint::format_zero_padding
word printf_uint::uvalue
void printf_ulong(dword printf_ulong::uvalue , byte printf_ulong::format_min_length , byte printf_ulong::format_justify_left , byte printf_ulong::format_sign_always , byte printf_ulong::format_zero_padding , byte printf_ulong::format_upper_case , byte printf_ulong::format_radix)
struct printf_format_number printf_ulong::format
byte printf_ulong::format_justify_left
byte printf_ulong::format_min_length
byte printf_ulong::format_radix
byte printf_ulong::format_sign_always
byte printf_ulong::format_upper_case
byte printf_ulong::format_zero_padding
dword printf_ulong::uvalue
dword printf_ulong::uvalue#0 22.0
dword printf_ulong::uvalue#1 22.0
dword printf_ulong::uvalue#2 61.5
__stackcall void queen(byte queen::row)
byte~ queen::$1 2.000000000002E12
byte~ queen::$4 2.000000000002E12
volatile byte queen::column loadstore 2.9411764706505884E11
volatile byte queen::r loadstore 2.10526315795E11
byte queen::row
byte queen::row#0 202.0
word strlen(byte* strlen::str)
word strlen::len
word strlen::len#1 1.0E27
word strlen::len#2 5.00000000000025E26
word strlen::return
word strlen::return#2 2.00000000000002E14
byte* strlen::str
byte* strlen::str#0 2.0E27
byte* strlen::str#2 1.0E27
byte* strupr(byte* strupr::str)
byte~ strupr::$0 2.0E27
byte* strupr::return
byte* strupr::src
byte* strupr::src#1 2.0E27
byte* strupr::src#2 7.142857142857143E26
byte* strupr::str
byte toupper(byte toupper::ch)
byte toupper::ch
byte toupper::ch#0 1.6999999999999998E28
byte toupper::return
byte toupper::return#0 2.0E28
byte toupper::return#2 1.0333333333333333E28
byte toupper::return#3 2.0E27
void uctoa(byte uctoa::value , byte* uctoa::buffer , byte uctoa::radix)
byte* uctoa::buffer
byte* uctoa::buffer#11 3.3333333333350004E25
byte* uctoa::buffer#14 1.5000000000000002E26
byte* uctoa::buffer#3 2.00000000000002E14
byte* uctoa::buffer#4 2.0E26
byte uctoa::digit
byte uctoa::digit#1 2.0E26
byte uctoa::digit#2 3.076923076923077E25
byte uctoa::digit_value
byte uctoa::digit_value#0 6.000000000000001E25
byte* uctoa::digit_values
byte uctoa::max_digits
byte uctoa::radix
byte uctoa::started
byte uctoa::started#2 6.000000000000001E25
byte uctoa::started#4 1.0E26
byte uctoa::value
byte uctoa::value#0 1.0E26
byte uctoa::value#1 5.5000000000001E13
byte uctoa::value#2 6.666666666670001E25
byte uctoa::value#6 1.5000000000000002E26
byte uctoa_append(byte* uctoa_append::buffer , byte uctoa_append::value , byte uctoa_append::sub)
byte* uctoa_append::buffer
byte* uctoa_append::buffer#0 1.3750000000000001E26
byte uctoa_append::digit
byte uctoa_append::digit#1 1.0E40
byte uctoa_append::digit#2 1.00000000000005E40
byte uctoa_append::return
byte uctoa_append::return#0 2.0E26
byte uctoa_append::sub
byte uctoa_append::sub#0 3.33333333333335E39
byte uctoa_append::value
byte uctoa_append::value#0 3.666666666666667E26
byte uctoa_append::value#1 2.0E40
byte uctoa_append::value#2 5.0000000000001833E39
void ultoa(dword ultoa::value , byte* ultoa::buffer , byte ultoa::radix)
byte~ ultoa::$10 2.00000000000002E14
byte~ ultoa::$11 2002.0
byte* ultoa::buffer
byte* ultoa::buffer#11 2.8571428571571855E13
byte* ultoa::buffer#14 1.500000000000015E14
byte* ultoa::buffer#3 2002.0
byte* ultoa::buffer#4 2.00000000000002E14
byte ultoa::digit
byte ultoa::digit#1 2.00000000000002E14
byte ultoa::digit#2 2.8571428571428855E13
dword ultoa::digit_value
dword ultoa::digit_value#0 6.000000000000059E13
dword* ultoa::digit_values
byte ultoa::max_digits
byte ultoa::radix
byte ultoa::started
byte ultoa::started#2 5.00000000000005E13
byte ultoa::started#4 1.00000000000001E14
dword ultoa::value
dword ultoa::value#0 1.00000000000001E14
dword ultoa::value#1 551.0
dword ultoa::value#2 5.714285714300071E13
dword ultoa::value#6 1.500000000000015E14
dword ultoa_append(byte* ultoa_append::buffer , dword ultoa_append::value , dword ultoa_append::sub)
byte* ultoa_append::buffer
byte* ultoa_append::buffer#0 1.3750000000000025E14
byte ultoa_append::digit
byte ultoa_append::digit#1 1.0E27
byte ultoa_append::digit#2 1.0000000000005E27
dword ultoa_append::return
dword ultoa_append::return#0 2.00000000000002E14
dword ultoa_append::sub
dword ultoa_append::sub#0 3.3333333333335E26
dword ultoa_append::value
dword ultoa_append::value#0 3.666666666666674E14
dword ultoa_append::value#1 2.0E27
dword ultoa_append::value#2 5.0000000000018335E26
void utoa(word utoa::value , byte* utoa::buffer , byte utoa::radix)
byte~ utoa::$10 20002.0
byte~ utoa::$11 2002.0
byte* utoa::buffer
byte* utoa::buffer#11 3000.4285714285716
byte* utoa::buffer#14 15001.5
byte* utoa::buffer#3 2002.0
byte* utoa::buffer#4 20002.0
byte utoa::digit
byte utoa::digit#1 20002.0
byte utoa::digit#2 2857.4285714285716
word utoa::digit_value
word utoa::digit_value#0 6000.6
word* utoa::digit_values
byte utoa::max_digits
byte utoa::radix
byte utoa::started
byte utoa::started#2 5000.5
byte utoa::started#4 10001.0
word utoa::value
word utoa::value#0 10001.0
word utoa::value#2 5714.857142857143
word utoa::value#6 15001.5
word utoa_append(byte* utoa_append::buffer , word utoa_append::value , word utoa_append::sub)
byte* utoa_append::buffer
byte* utoa_append::buffer#0 13750.25
byte utoa_append::digit
byte utoa_append::digit#1 1.0000001E7
byte utoa_append::digit#2 1.00500015E7
word utoa_append::return
word utoa_append::return#0 20002.0
word utoa_append::sub
word utoa_append::sub#0 3335000.5
word utoa_append::value
word utoa_append::value#0 36667.33333333333
word utoa_append::value#1 2.0000002E7
word utoa_append::value#2 5018334.166666666

Initial phi equivalence classes
[ conio_c64_init::line#2 conio_c64_init::line#0 ]
[ legal::i#2 legal::i#1 ]
[ legal::return#4 ]
[ print::i#2 print::i#1 ]
[ print::i1#2 print::i1#1 ]
[ print::j#2 print::j#1 ]
[ gotoxy::y#5 gotoxy::y#4 gotoxy::y#2 ]
[ clrscr::l#2 clrscr::l#1 ]
[ clrscr::line_text#5 clrscr::line_text#1 ]
[ clrscr::line_cols#5 clrscr::line_cols#1 ]
[ clrscr::c#2 clrscr::c#1 ]
[ cputs::s#11 cputs::s#12 cputs::s#0 ]
[ printf_ulong::uvalue#2 printf_ulong::uvalue#0 printf_ulong::uvalue#1 ]
[ diff::a#2 diff::a#0 diff::a#1 ]
[ diff::b#2 diff::b#0 diff::b#1 ]
[ diff::return#4 diff::return#2 diff::return#3 ]
[ printf_uchar::uvalue#2 printf_uchar::uvalue#1 printf_uchar::uvalue#0 ]
[ cputc::c#3 cputc::c#0 cputc::c#2 cputc::c#1 ]
[ utoa::digit#2 utoa::digit#1 ]
[ utoa::value#2 utoa::value#6 utoa::value#0 ]
[ utoa::started#2 utoa::started#4 ]
[ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ]
[ printf_number_buffer::format_min_length#3 ]
[ printf_number_buffer::format_justify_left#10 ]
[ printf_number_buffer::format_zero_padding#10 ]
[ printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ]
[ printf_number_buffer::format_upper_case#10 ]
[ printf_number_buffer::len#2 printf_number_buffer::len#0 printf_number_buffer::len#1 ]
[ printf_number_buffer::padding#10 printf_number_buffer::padding#1 ]
[ ultoa::digit#2 ultoa::digit#1 ]
[ ultoa::value#2 ultoa::value#6 ultoa::value#1 ultoa::value#0 ]
[ ultoa::started#2 ultoa::started#4 ]
[ ultoa::buffer#11 ultoa::buffer#14 ultoa::buffer#4 ]
[ uctoa::digit#2 uctoa::digit#1 ]
[ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 ]
[ uctoa::started#2 uctoa::started#4 ]
[ uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 ]
[ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ]
[ utoa_append::digit#2 utoa_append::digit#1 ]
[ strlen::str#2 strlen::str#0 ]
[ strlen::len#2 strlen::len#1 ]
[ printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ]
[ printf_padding::pad#5 ]
[ printf_padding::i#2 printf_padding::i#1 ]
[ strupr::src#2 strupr::src#1 ]
[ ultoa_append::value#2 ultoa_append::value#0 ultoa_append::value#1 ]
[ ultoa_append::digit#2 ultoa_append::digit#1 ]
[ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ]
[ uctoa_append::digit#2 uctoa_append::digit#1 ]
[ toupper::return#2 toupper::return#0 toupper::ch#0 ]
[ memcpy::source#2 ]
[ memcpy::destination#2 ]
[ memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
[ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
[ memset::str#3 ]
[ memset::c#4 ]
[ memset::dst#2 memset::dst#4 memset::dst#1 ]
Added variable conio_cursor_x to live range equivalence class [ conio_cursor_x ]
Added variable conio_cursor_y to live range equivalence class [ conio_cursor_y ]
Added variable conio_line_text to live range equivalence class [ conio_line_text ]
Added variable conio_line_color to live range equivalence class [ conio_line_color ]
Added variable count to live range equivalence class [ count ]
Added variable queen::row#0 to live range equivalence class [ queen::row#0 ]
Added variable queen::r to live range equivalence class [ queen::r ]
Added variable queen::column to live range equivalence class [ queen::column ]
Added variable legal::row#0 to live range equivalence class [ legal::row#0 ]
Added variable legal::column#0 to live range equivalence class [ legal::column#0 ]
Added variable legal::return#0 to live range equivalence class [ legal::return#0 ]
Added variable queen::$1 to live range equivalence class [ queen::$1 ]
Added variable queen::$4 to live range equivalence class [ queen::$4 ]
Added variable legal::$0 to live range equivalence class [ legal::$0 ]
Added variable diff::return#0 to live range equivalence class [ diff::return#0 ]
Added variable legal::$3 to live range equivalence class [ legal::$3 ]
Added variable diff::return#1 to live range equivalence class [ diff::return#1 ]
Added variable legal::$4 to live range equivalence class [ legal::$4 ]
Added variable gotoxy::$7 to live range equivalence class [ gotoxy::$7 ]
Added variable gotoxy::$8 to live range equivalence class [ gotoxy::$8 ]
Added variable gotoxy::$9 to live range equivalence class [ gotoxy::$9 ]
Added variable gotoxy::line_offset#0 to live range equivalence class [ gotoxy::line_offset#0 ]
Added variable gotoxy::$5 to live range equivalence class [ gotoxy::$5 ]
Added variable gotoxy::$6 to live range equivalence class [ gotoxy::$6 ]
Added variable cputs::c#1 to live range equivalence class [ cputs::c#1 ]
Added variable utoa::$11 to live range equivalence class [ utoa::$11 ]
Added variable utoa::buffer#3 to live range equivalence class [ utoa::buffer#3 ]
Added variable utoa::$10 to live range equivalence class [ utoa::$10 ]
Added variable utoa::digit_value#0 to live range equivalence class [ utoa::digit_value#0 ]
Added variable utoa_append::buffer#0 to live range equivalence class [ utoa_append::buffer#0 ]
Added variable utoa_append::sub#0 to live range equivalence class [ utoa_append::sub#0 ]
Added variable utoa_append::return#0 to live range equivalence class [ utoa_append::return#0 ]
Added variable strlen::return#2 to live range equivalence class [ strlen::return#2 ]
Added variable printf_number_buffer::$19 to live range equivalence class [ printf_number_buffer::$19 ]
Added variable ultoa::$11 to live range equivalence class [ ultoa::$11 ]
Added variable ultoa::buffer#3 to live range equivalence class [ ultoa::buffer#3 ]
Added variable ultoa::$10 to live range equivalence class [ ultoa::$10 ]
Added variable ultoa::digit_value#0 to live range equivalence class [ ultoa::digit_value#0 ]
Added variable ultoa_append::buffer#0 to live range equivalence class [ ultoa_append::buffer#0 ]
Added variable ultoa_append::sub#0 to live range equivalence class [ ultoa_append::sub#0 ]
Added variable ultoa_append::return#0 to live range equivalence class [ ultoa_append::return#0 ]
Added variable uctoa::buffer#3 to live range equivalence class [ uctoa::buffer#3 ]
Added variable uctoa::digit_value#0 to live range equivalence class [ uctoa::digit_value#0 ]
Added variable uctoa_append::buffer#0 to live range equivalence class [ uctoa_append::buffer#0 ]
Added variable uctoa_append::sub#0 to live range equivalence class [ uctoa_append::sub#0 ]
Added variable uctoa_append::return#0 to live range equivalence class [ uctoa_append::return#0 ]
Added variable toupper::return#3 to live range equivalence class [ toupper::return#3 ]
Added variable strupr::$0 to live range equivalence class [ strupr::$0 ]
Added variable memcpy::src_end#0 to live range equivalence class [ memcpy::src_end#0 ]
Added variable memset::end#0 to live range equivalence class [ memset::end#0 ]
Added variable printf_buffer to live range equivalence class [ printf_buffer ]
Complete equivalence classes
[ conio_c64_init::line#2 conio_c64_init::line#0 ]
[ legal::i#2 legal::i#1 ]
[ legal::return#4 ]
[ print::i#2 print::i#1 ]
[ print::i1#2 print::i1#1 ]
[ print::j#2 print::j#1 ]
[ gotoxy::y#5 gotoxy::y#4 gotoxy::y#2 ]
[ clrscr::l#2 clrscr::l#1 ]
[ clrscr::line_text#5 clrscr::line_text#1 ]
[ clrscr::line_cols#5 clrscr::line_cols#1 ]
[ clrscr::c#2 clrscr::c#1 ]
[ cputs::s#11 cputs::s#12 cputs::s#0 ]
[ printf_ulong::uvalue#2 printf_ulong::uvalue#0 printf_ulong::uvalue#1 ]
[ diff::a#2 diff::a#0 diff::a#1 ]
[ diff::b#2 diff::b#0 diff::b#1 ]
[ diff::return#4 diff::return#2 diff::return#3 ]
[ printf_uchar::uvalue#2 printf_uchar::uvalue#1 printf_uchar::uvalue#0 ]
[ cputc::c#3 cputc::c#0 cputc::c#2 cputc::c#1 ]
[ utoa::digit#2 utoa::digit#1 ]
[ utoa::value#2 utoa::value#6 utoa::value#0 ]
[ utoa::started#2 utoa::started#4 ]
[ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ]
[ printf_number_buffer::format_min_length#3 ]
[ printf_number_buffer::format_justify_left#10 ]
[ printf_number_buffer::format_zero_padding#10 ]
[ printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ]
[ printf_number_buffer::format_upper_case#10 ]
[ printf_number_buffer::len#2 printf_number_buffer::len#0 printf_number_buffer::len#1 ]
[ printf_number_buffer::padding#10 printf_number_buffer::padding#1 ]
[ ultoa::digit#2 ultoa::digit#1 ]
[ ultoa::value#2 ultoa::value#6 ultoa::value#1 ultoa::value#0 ]
[ ultoa::started#2 ultoa::started#4 ]
[ ultoa::buffer#11 ultoa::buffer#14 ultoa::buffer#4 ]
[ uctoa::digit#2 uctoa::digit#1 ]
[ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 ]
[ uctoa::started#2 uctoa::started#4 ]
[ uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 ]
[ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ]
[ utoa_append::digit#2 utoa_append::digit#1 ]
[ strlen::str#2 strlen::str#0 ]
[ strlen::len#2 strlen::len#1 ]
[ printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ]
[ printf_padding::pad#5 ]
[ printf_padding::i#2 printf_padding::i#1 ]
[ strupr::src#2 strupr::src#1 ]
[ ultoa_append::value#2 ultoa_append::value#0 ultoa_append::value#1 ]
[ ultoa_append::digit#2 ultoa_append::digit#1 ]
[ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ]
[ uctoa_append::digit#2 uctoa_append::digit#1 ]
[ toupper::return#2 toupper::return#0 toupper::ch#0 ]
[ memcpy::source#2 ]
[ memcpy::destination#2 ]
[ memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
[ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
[ memset::str#3 ]
[ memset::c#4 ]
[ memset::dst#2 memset::dst#4 memset::dst#1 ]
[ conio_cursor_x ]
[ conio_cursor_y ]
[ conio_line_text ]
[ conio_line_color ]
[ count ]
[ queen::row#0 ]
[ queen::r ]
[ queen::column ]
[ legal::row#0 ]
[ legal::column#0 ]
[ legal::return#0 ]
[ queen::$1 ]
[ queen::$4 ]
[ legal::$0 ]
[ diff::return#0 ]
[ legal::$3 ]
[ diff::return#1 ]
[ legal::$4 ]
[ gotoxy::$7 ]
[ gotoxy::$8 ]
[ gotoxy::$9 ]
[ gotoxy::line_offset#0 ]
[ gotoxy::$5 ]
[ gotoxy::$6 ]
[ cputs::c#1 ]
[ utoa::$11 ]
[ utoa::buffer#3 ]
[ utoa::$10 ]
[ utoa::digit_value#0 ]
[ utoa_append::buffer#0 ]
[ utoa_append::sub#0 ]
[ utoa_append::return#0 ]
[ strlen::return#2 ]
[ printf_number_buffer::$19 ]
[ ultoa::$11 ]
[ ultoa::buffer#3 ]
[ ultoa::$10 ]
[ ultoa::digit_value#0 ]
[ ultoa_append::buffer#0 ]
[ ultoa_append::sub#0 ]
[ ultoa_append::return#0 ]
[ uctoa::buffer#3 ]
[ uctoa::digit_value#0 ]
[ uctoa_append::buffer#0 ]
[ uctoa_append::sub#0 ]
[ uctoa_append::return#0 ]
[ toupper::return#3 ]
[ strupr::$0 ]
[ memcpy::src_end#0 ]
[ memset::end#0 ]
[ printf_buffer ]
Allocated zp[1]:2 [ conio_c64_init::line#2 conio_c64_init::line#0 ]
Allocated zp[1]:3 [ legal::i#2 legal::i#1 ]
Allocated zp[1]:4 [ legal::return#4 ]
Allocated zp[1]:5 [ print::i#2 print::i#1 ]
Allocated zp[1]:6 [ print::i1#2 print::i1#1 ]
Allocated zp[1]:7 [ print::j#2 print::j#1 ]
Allocated zp[1]:8 [ gotoxy::y#5 gotoxy::y#4 gotoxy::y#2 ]
Allocated zp[1]:9 [ clrscr::l#2 clrscr::l#1 ]
Allocated zp[2]:10 [ clrscr::line_text#5 clrscr::line_text#1 ]
Allocated zp[2]:12 [ clrscr::line_cols#5 clrscr::line_cols#1 ]
Allocated zp[1]:14 [ clrscr::c#2 clrscr::c#1 ]
Allocated zp[2]:15 [ cputs::s#11 cputs::s#12 cputs::s#0 ]
Allocated zp[4]:17 [ printf_ulong::uvalue#2 printf_ulong::uvalue#0 printf_ulong::uvalue#1 ]
Allocated zp[1]:21 [ diff::a#2 diff::a#0 diff::a#1 ]
Allocated zp[1]:22 [ diff::b#2 diff::b#0 diff::b#1 ]
Allocated zp[1]:23 [ diff::return#4 diff::return#2 diff::return#3 ]
Allocated zp[1]:24 [ printf_uchar::uvalue#2 printf_uchar::uvalue#1 printf_uchar::uvalue#0 ]
Allocated zp[1]:25 [ cputc::c#3 cputc::c#0 cputc::c#2 cputc::c#1 ]
Allocated zp[1]:26 [ utoa::digit#2 utoa::digit#1 ]
Allocated zp[2]:27 [ utoa::value#2 utoa::value#6 utoa::value#0 ]
Allocated zp[1]:29 [ utoa::started#2 utoa::started#4 ]
Allocated zp[2]:30 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ]
Allocated zp[1]:32 [ printf_number_buffer::format_min_length#3 ]
Allocated zp[1]:33 [ printf_number_buffer::format_justify_left#10 ]
Allocated zp[1]:34 [ printf_number_buffer::format_zero_padding#10 ]
Allocated zp[1]:35 [ printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ]
Allocated zp[1]:36 [ printf_number_buffer::format_upper_case#10 ]
Allocated zp[1]:37 [ printf_number_buffer::len#2 printf_number_buffer::len#0 printf_number_buffer::len#1 ]
Allocated zp[1]:38 [ printf_number_buffer::padding#10 printf_number_buffer::padding#1 ]
Allocated zp[1]:39 [ ultoa::digit#2 ultoa::digit#1 ]
Allocated zp[4]:40 [ ultoa::value#2 ultoa::value#6 ultoa::value#1 ultoa::value#0 ]
Allocated zp[1]:44 [ ultoa::started#2 ultoa::started#4 ]
Allocated zp[2]:45 [ ultoa::buffer#11 ultoa::buffer#14 ultoa::buffer#4 ]
Allocated zp[1]:47 [ uctoa::digit#2 uctoa::digit#1 ]
Allocated zp[1]:48 [ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 ]
Allocated zp[1]:49 [ uctoa::started#2 uctoa::started#4 ]
Allocated zp[2]:50 [ uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 ]
Allocated zp[2]:52 [ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ]
Allocated zp[1]:54 [ utoa_append::digit#2 utoa_append::digit#1 ]
Allocated zp[2]:55 [ strlen::str#2 strlen::str#0 ]
Allocated zp[2]:57 [ strlen::len#2 strlen::len#1 ]
Allocated zp[1]:59 [ printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ]
Allocated zp[1]:60 [ printf_padding::pad#5 ]
Allocated zp[1]:61 [ printf_padding::i#2 printf_padding::i#1 ]
Allocated zp[2]:62 [ strupr::src#2 strupr::src#1 ]
Allocated zp[4]:64 [ ultoa_append::value#2 ultoa_append::value#0 ultoa_append::value#1 ]
Allocated zp[1]:68 [ ultoa_append::digit#2 ultoa_append::digit#1 ]
Allocated zp[1]:69 [ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ]
Allocated zp[1]:70 [ uctoa_append::digit#2 uctoa_append::digit#1 ]
Allocated zp[1]:71 [ toupper::return#2 toupper::return#0 toupper::ch#0 ]
Allocated zp[2]:72 [ memcpy::source#2 ]
Allocated zp[2]:74 [ memcpy::destination#2 ]
Allocated zp[2]:76 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
Allocated zp[2]:78 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
Allocated zp[2]:80 [ memset::str#3 ]
Allocated zp[1]:82 [ memset::c#4 ]
Allocated zp[2]:83 [ memset::dst#2 memset::dst#4 memset::dst#1 ]
Allocated zp[1]:85 [ conio_cursor_x ]
Allocated zp[1]:86 [ conio_cursor_y ]
Allocated zp[2]:87 [ conio_line_text ]
Allocated zp[2]:89 [ conio_line_color ]
Allocated zp[4]:91 [ count ]
Allocated zp[1]:95 [ queen::row#0 ]
Allocated zp[1]:96 [ queen::r ]
Allocated zp[1]:97 [ queen::column ]
Allocated zp[1]:98 [ legal::row#0 ]
Allocated zp[1]:99 [ legal::column#0 ]
Allocated zp[1]:100 [ legal::return#0 ]
Allocated zp[1]:101 [ queen::$1 ]
Allocated zp[1]:102 [ queen::$4 ]
Allocated zp[1]:103 [ legal::$0 ]
Allocated zp[1]:104 [ diff::return#0 ]
Allocated zp[1]:105 [ legal::$3 ]
Allocated zp[1]:106 [ diff::return#1 ]
Allocated zp[1]:107 [ legal::$4 ]
Allocated zp[2]:108 [ gotoxy::$7 ]
Allocated zp[2]:110 [ gotoxy::$8 ]
Allocated zp[2]:112 [ gotoxy::$9 ]
Allocated zp[2]:114 [ gotoxy::line_offset#0 ]
Allocated zp[2]:116 [ gotoxy::$5 ]
Allocated zp[2]:118 [ gotoxy::$6 ]
Allocated zp[1]:120 [ cputs::c#1 ]
Allocated zp[1]:121 [ utoa::$11 ]
Allocated zp[2]:122 [ utoa::buffer#3 ]
Allocated zp[1]:124 [ utoa::$10 ]
Allocated zp[2]:125 [ utoa::digit_value#0 ]
Allocated zp[2]:127 [ utoa_append::buffer#0 ]
Allocated zp[2]:129 [ utoa_append::sub#0 ]
Allocated zp[2]:131 [ utoa_append::return#0 ]
Allocated zp[2]:133 [ strlen::return#2 ]
Allocated zp[2]:135 [ printf_number_buffer::$19 ]
Allocated zp[1]:137 [ ultoa::$11 ]
Allocated zp[2]:138 [ ultoa::buffer#3 ]
Allocated zp[1]:140 [ ultoa::$10 ]
Allocated zp[4]:141 [ ultoa::digit_value#0 ]
Allocated zp[2]:145 [ ultoa_append::buffer#0 ]
Allocated zp[4]:147 [ ultoa_append::sub#0 ]
Allocated zp[4]:151 [ ultoa_append::return#0 ]
Allocated zp[2]:155 [ uctoa::buffer#3 ]
Allocated zp[1]:157 [ uctoa::digit_value#0 ]
Allocated zp[2]:158 [ uctoa_append::buffer#0 ]
Allocated zp[1]:160 [ uctoa_append::sub#0 ]
Allocated zp[1]:161 [ uctoa_append::return#0 ]
Allocated zp[1]:162 [ toupper::return#3 ]
Allocated zp[1]:163 [ strupr::$0 ]
Allocated zp[2]:164 [ memcpy::src_end#0 ]
Allocated zp[2]:166 [ memset::end#0 ]
Allocated mem[12] [ printf_buffer ]
REGISTER UPLIFT POTENTIAL REGISTERS
Statement [1] conio_cursor_x = 0 [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [2] conio_cursor_y = 0 [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [3] conio_line_text = DEFAULT_SCREEN [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [4] conio_line_color = COLORRAM [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [5] count = 0 [ count printf_buffer ] (  [ count printf_buffer ] { }  ) always clobbers reg byte a 
Statement [10] queen::row#0 = stackidx(byte,queen::OFFSET_STACK_ROW) [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::row#0 printf_buffer ] ( main:8::queen:48 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::row#0 printf_buffer ] { }  ) always clobbers reg byte a reg byte x 
Statement [12] queen::column = 1 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer ] ( main:8::queen:48 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer ] { }  ) always clobbers reg byte a 
Statement [13] if(queen::column<8+1) goto queen::@2 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer ] ( main:8::queen:48 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer ] { }  ) always clobbers reg byte a 
Statement [21] board[queen::r] = queen::column [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer ] ( main:8::queen:48 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [22] if(queen::r==8) goto queen::@4 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer ] ( main:8::queen:48 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer ] { }  ) always clobbers reg byte a 
Statement asm { ldacolumn pha ldar pha  } always clobbers reg byte a 
Statement sideeffect stackpullbytes(1) always clobbers reg byte a 
Statement asm { pla star pla stacolumn  } always clobbers reg byte a 
Statement [47] stackpush(byte) = 1 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count printf_buffer ] ( main:8 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count printf_buffer ] { }  ) always clobbers reg byte a 
Statement sideeffect stackpullbytes(1) always clobbers reg byte a 
Statement [51] printf_ulong::uvalue#0 = count [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_ulong::uvalue#0 printf_buffer ] ( main:8 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_ulong::uvalue#0 printf_buffer ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } }  ) always clobbers reg byte a 
Statement [62] if(board[legal::i#2]==legal::column#0) goto legal::@return [ legal::row#0 legal::column#0 legal::i#2 ] ( main:8::queen:48::legal:17 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer legal::row#0 legal::column#0 legal::i#2 ] { { legal::row#0 = queen::r } { legal::column#0 = queen::column } { legal::return#0 = legal::return#4 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:98 [ legal::row#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:99 [ legal::column#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:3 [ legal::i#2 legal::i#1 ]
Statement [79] printf_ulong::uvalue#1 = count [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count printf_ulong::uvalue#1 printf_buffer ] ( main:8::queen:48::print:31 [ queen::r queen::column conio_cursor_x conio_cursor_y conio_line_text conio_line_color count printf_ulong::uvalue#1 printf_buffer ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } }  ) always clobbers reg byte a 
Statement [95] if(board[print::i1#2]==print::j#2) goto print::@8 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count print::i1#2 print::j#2 printf_buffer ] ( main:8::queen:48::print:31 [ queen::r queen::column conio_cursor_x conio_cursor_y conio_line_text conio_line_color count print::i1#2 print::j#2 printf_buffer ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:6 [ print::i1#2 print::i1#1 ]
Removing always clobbered register reg byte a as potential for zp[1]:7 [ print::j#2 print::j#1 ]
Statement [108] conio_cursor_x = 0 [ conio_cursor_x gotoxy::y#5 ] ( gotoxy:37 [ conio_cursor_x gotoxy::y#5 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  conio_c64_init:6::gotoxy:37 [ count printf_buffer conio_cursor_x gotoxy::y#5 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  main:8::queen:48::print:31::gotoxy:76 [ queen::r queen::column count printf_buffer conio_cursor_x gotoxy::y#5 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:8 [ gotoxy::y#5 gotoxy::y#4 gotoxy::y#2 ]
Statement [110] gotoxy::$7 = (word)gotoxy::y#5 [ conio_cursor_x conio_cursor_y gotoxy::$7 ] ( gotoxy:37 [ conio_cursor_x conio_cursor_y gotoxy::$7 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  conio_c64_init:6::gotoxy:37 [ count printf_buffer conio_cursor_x conio_cursor_y gotoxy::$7 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  main:8::queen:48::print:31::gotoxy:76 [ queen::r queen::column count printf_buffer conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  ) always clobbers reg byte a 
Statement [111] gotoxy::$8 = gotoxy::$7 << 2 [ conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] ( gotoxy:37 [ conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  conio_c64_init:6::gotoxy:37 [ count printf_buffer conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  main:8::queen:48::print:31::gotoxy:76 [ queen::r queen::column count printf_buffer conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  ) always clobbers reg byte a 
Statement [112] gotoxy::$9 = gotoxy::$8 + gotoxy::$7 [ conio_cursor_x conio_cursor_y gotoxy::$9 ] ( gotoxy:37 [ conio_cursor_x conio_cursor_y gotoxy::$9 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  conio_c64_init:6::gotoxy:37 [ count printf_buffer conio_cursor_x conio_cursor_y gotoxy::$9 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  main:8::queen:48::print:31::gotoxy:76 [ queen::r queen::column count printf_buffer conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  ) always clobbers reg byte a 
Statement [113] gotoxy::line_offset#0 = gotoxy::$9 << 3 [ conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] ( gotoxy:37 [ conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  conio_c64_init:6::gotoxy:37 [ count printf_buffer conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  main:8::queen:48::print:31::gotoxy:76 [ queen::r queen::column count printf_buffer conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  ) always clobbers reg byte a 
Statement [114] gotoxy::$5 = DEFAULT_SCREEN + gotoxy::line_offset#0 [ conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] ( gotoxy:37 [ conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  conio_c64_init:6::gotoxy:37 [ count printf_buffer conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  main:8::queen:48::print:31::gotoxy:76 [ queen::r queen::column count printf_buffer conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  ) always clobbers reg byte a 
Statement [115] conio_line_text = gotoxy::$5 [ conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] ( gotoxy:37 [ conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  conio_c64_init:6::gotoxy:37 [ count printf_buffer conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  main:8::queen:48::print:31::gotoxy:76 [ queen::r queen::column count printf_buffer conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  ) always clobbers reg byte a 
Statement [116] gotoxy::$6 = COLORRAM + gotoxy::line_offset#0 [ conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] ( gotoxy:37 [ conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  conio_c64_init:6::gotoxy:37 [ count printf_buffer conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  main:8::queen:48::print:31::gotoxy:76 [ queen::r queen::column count printf_buffer conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  ) always clobbers reg byte a 
Statement [117] conio_line_color = gotoxy::$6 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( gotoxy:37 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  conio_c64_init:6::gotoxy:37 [ count printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  main:8::queen:48::print:31::gotoxy:76 [ queen::r queen::column count printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte a 
Statement [122] conio_cursor_x = 0 [ conio_cursor_x ] ( main:8::clrscr:40 [ count printf_buffer conio_cursor_x ] { }  ) always clobbers reg byte a 
Statement [123] conio_cursor_y = 0 [ conio_cursor_x conio_cursor_y ] ( main:8::clrscr:40 [ count printf_buffer conio_cursor_x conio_cursor_y ] { }  ) always clobbers reg byte a 
Statement [124] conio_line_text = DEFAULT_SCREEN [ conio_cursor_x conio_cursor_y conio_line_text ] ( main:8::clrscr:40 [ count printf_buffer conio_cursor_x conio_cursor_y conio_line_text ] { }  ) always clobbers reg byte a 
Statement [125] conio_line_color = COLORRAM [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:8::clrscr:40 [ count printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte a 
Statement [129] clrscr::line_text#1 = clrscr::line_text#5 + $28 [ clrscr::l#2 clrscr::line_cols#5 clrscr::line_text#1 ] ( main:8::clrscr:40 [ count printf_buffer clrscr::l#2 clrscr::line_cols#5 clrscr::line_text#1 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:9 [ clrscr::l#2 clrscr::l#1 ]
Statement [130] clrscr::line_cols#1 = clrscr::line_cols#5 + $28 [ clrscr::l#2 clrscr::line_text#1 clrscr::line_cols#1 ] ( main:8::clrscr:40 [ count printf_buffer clrscr::l#2 clrscr::line_text#1 clrscr::line_cols#1 ] { }  ) always clobbers reg byte a 
Statement [132] clrscr::line_text#5[clrscr::c#2] = ' ' [ clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] ( main:8::clrscr:40 [ count printf_buffer clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:14 [ clrscr::c#2 clrscr::c#1 ]
Statement [133] clrscr::line_cols#5[clrscr::c#2] = LIGHT_BLUE [ clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] ( main:8::clrscr:40 [ count printf_buffer clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] { }  ) always clobbers reg byte a 
Statement [137] cputs::c#1 = *cputs::s#11 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] ( main:8::cputs:42 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { }  main:8::cputs:44 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { }  main:8::cputs:50 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { }  main:8::cputs:54 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { }  main:8::queen:48::print:31::cputs:78 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { }  main:8::queen:48::print:31::cputs:82 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { }  main:8::queen:48::print:31::cputs:89 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { }  main:8::queen:48::print:31::cputs:97 [ queen::r queen::column count print::i1#2 print::j#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { }  main:8::queen:48::print:31::cputs:100 [ queen::r queen::column count print::i1#2 print::j#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:6 [ print::i1#2 print::i1#1 ]
Removing always clobbered register reg byte y as potential for zp[1]:7 [ print::j#2 print::j#1 ]
Removing always clobbered register reg byte a as potential for zp[1]:33 [ printf_number_buffer::format_justify_left#10 ]
Removing always clobbered register reg byte y as potential for zp[1]:33 [ printf_number_buffer::format_justify_left#10 ]
Removing always clobbered register reg byte a as potential for zp[1]:34 [ printf_number_buffer::format_zero_padding#10 ]
Removing always clobbered register reg byte y as potential for zp[1]:34 [ printf_number_buffer::format_zero_padding#10 ]
Removing always clobbered register reg byte a as potential for zp[1]:38 [ printf_number_buffer::padding#10 printf_number_buffer::padding#1 ]
Removing always clobbered register reg byte y as potential for zp[1]:38 [ printf_number_buffer::padding#10 printf_number_buffer::padding#1 ]
Removing always clobbered register reg byte a as potential for zp[1]:5 [ print::i#2 print::i#1 ]
Removing always clobbered register reg byte y as potential for zp[1]:5 [ print::i#2 print::i#1 ]
Statement [144] *((byte*)&printf_buffer) = 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] ( main:8::printf_uint:46 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { }  ) always clobbers reg byte a 
Statement [150] *((byte*)&printf_buffer) = 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_ulong::uvalue#2 ] ( main:8::printf_ulong:52 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_ulong::uvalue#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } }  main:8::queen:48::print:31::printf_ulong:80 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_ulong::uvalue#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } }  ) always clobbers reg byte a 
Statement [151] ultoa::value#1 = printf_ulong::uvalue#2 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::value#1 ] ( main:8::printf_ulong:52 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::value#1 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } }  main:8::queen:48::print:31::printf_ulong:80 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::value#1 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } }  ) always clobbers reg byte a 
Statement [158] diff::return#3 = diff::a#2 - diff::b#2 [ diff::return#3 ] ( main:8::queen:48::legal:17::diff:65 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer legal::row#0 legal::column#0 legal::i#2 diff::return#3 ] { { legal::row#0 = queen::r } { legal::return#0 = legal::return#4 } { diff::a#0 = diff::a#2 } { diff::b#0 = diff::b#2 legal::column#0 queen::column } { diff::return#0 = diff::return#4 } }  main:8::queen:48::legal:17::diff:70 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer legal::row#0 legal::column#0 legal::i#2 legal::$3 diff::return#3 ] { { legal::column#0 = queen::column } { legal::return#0 = legal::return#4 } { diff::a#1 = diff::a#2 legal::i#2 } { diff::b#1 = diff::b#2 legal::row#0 queen::r } { diff::return#1 = diff::return#4 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:105 [ legal::$3 ]
Statement [161] diff::return#2 = diff::b#2 - diff::a#2 [ diff::return#2 ] ( main:8::queen:48::legal:17::diff:65 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer legal::row#0 legal::column#0 legal::i#2 diff::return#2 ] { { legal::row#0 = queen::r } { legal::return#0 = legal::return#4 } { diff::a#0 = diff::a#2 } { diff::b#0 = diff::b#2 legal::column#0 queen::column } { diff::return#0 = diff::return#4 } }  main:8::queen:48::legal:17::diff:70 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer legal::row#0 legal::column#0 legal::i#2 legal::$3 diff::return#2 ] { { legal::column#0 = queen::column } { legal::return#0 = legal::return#4 } { diff::a#1 = diff::a#2 legal::i#2 } { diff::b#1 = diff::b#2 legal::row#0 queen::r } { diff::return#1 = diff::return#4 } }  ) always clobbers reg byte a 
Statement [163] *((byte*)&printf_buffer) = 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_uchar::uvalue#2 ] ( main:8::queen:48::print:31::printf_uchar:91 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_uchar::uvalue#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 uctoa::value#1 } }  main:8::queen:48::print:31::printf_uchar:102 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_uchar::uvalue#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 uctoa::value#1 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:24 [ printf_uchar::uvalue#2 printf_uchar::uvalue#1 printf_uchar::uvalue#0 ]
Statement [171] conio_line_text[conio_cursor_x] = cputc::c#3 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:8::cputs:42::cputc:142 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:36 [ printf_number_buffer::format_upper_case#10 ]
Removing always clobbered register reg byte y as potential for zp[1]:35 [ printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ]
Removing always clobbered register reg byte y as potential for zp[1]:59 [ printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ]
Removing always clobbered register reg byte y as potential for zp[1]:60 [ printf_padding::pad#5 ]
Removing always clobbered register reg byte y as potential for zp[1]:61 [ printf_padding::i#2 printf_padding::i#1 ]
Statement [172] conio_line_color[conio_cursor_x] = LIGHT_BLUE [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:8::cputs:42::cputc:142 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte a as potential for zp[1]:36 [ printf_number_buffer::format_upper_case#10 ]
Removing always clobbered register reg byte a as potential for zp[1]:35 [ printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:59 [ printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:60 [ printf_padding::pad#5 ]
Removing always clobbered register reg byte a as potential for zp[1]:61 [ printf_padding::i#2 printf_padding::i#1 ]
Statement [174] if(conio_cursor_x!=$28) goto cputc::@return [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:8::cputs:42::cputc:142 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [184] *utoa::buffer#11 = DIGITS[utoa::$11] [ printf_buffer utoa::buffer#11 ] ( main:8::printf_uint:46::utoa:145 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#11 ] { }  ) always clobbers reg byte a reg byte y 
Statement [185] utoa::buffer#3 = ++ utoa::buffer#11 [ printf_buffer utoa::buffer#3 ] ( main:8::printf_uint:46::utoa:145 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#3 ] { }  ) always clobbers reg byte a 
Statement [186] *utoa::buffer#3 = 0 [ printf_buffer ] ( main:8::printf_uint:46::utoa:145 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [188] utoa::$10 = utoa::digit#2 << 1 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] ( main:8::printf_uint:46::utoa:145 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:26 [ utoa::digit#2 utoa::digit#1 ]
Removing always clobbered register reg byte a as potential for zp[1]:29 [ utoa::started#2 utoa::started#4 ]
Statement [189] utoa::digit_value#0 = RADIX_DECIMAL_VALUES[utoa::$10] [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] ( main:8::printf_uint:46::utoa:145 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { }  ) always clobbers reg byte a 
Statement [191] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@5 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] ( main:8::printf_uint:46::utoa:145 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { }  ) always clobbers reg byte a 
Statement [194] utoa_append::buffer#0 = utoa::buffer#11 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] ( main:8::printf_uint:46::utoa:145 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [195] utoa_append::value#0 = utoa::value#2 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] ( main:8::printf_uint:46::utoa:145 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [196] utoa_append::sub#0 = utoa::digit_value#0 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] ( main:8::printf_uint:46::utoa:145 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [198] utoa_append::return#0 = utoa_append::value#2 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] ( main:8::printf_uint:46::utoa:145 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [199] utoa::value#0 = utoa_append::return#0 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] ( main:8::printf_uint:46::utoa:145 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] { }  ) always clobbers reg byte a 
Statement [205] strlen::return#2 = strlen::len#2 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 strlen::return#2 ] ( main:8::printf_uint:46::printf_number_buffer:147 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 strlen::return#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  main:8::printf_ulong:52::printf_number_buffer:154 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 strlen::return#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 strlen::return#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 strlen::return#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { strlen::return#2 = strlen::len#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 strlen::return#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { strlen::return#2 = strlen::len#2 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:32 [ printf_number_buffer::format_min_length#3 ]
Statement [206] printf_number_buffer::$19 = strlen::return#2 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::$19 ] ( main:8::printf_uint:46::printf_number_buffer:147 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::$19 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:8::printf_ulong:52::printf_number_buffer:154 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::$19 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::$19 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::$19 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::$19 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } }  ) always clobbers reg byte a 
Statement [211] printf_number_buffer::padding#1 = (signed byte)printf_number_buffer::format_min_length#3 - printf_number_buffer::len#2 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#1 ] ( main:8::printf_uint:46::printf_number_buffer:147 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#1 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:8::printf_ulong:52::printf_number_buffer:154 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#1 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#1 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#1 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#1 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } }  ) always clobbers reg byte a 
Statement [241] ultoa::$11 = (byte)ultoa::value#2 [ printf_buffer ultoa::buffer#11 ultoa::$11 ] ( main:8::printf_ulong:52::ultoa:152 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::buffer#11 ultoa::$11 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::buffer#11 ultoa::$11 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } }  ) always clobbers reg byte a 
Statement [242] *ultoa::buffer#11 = DIGITS[ultoa::$11] [ printf_buffer ultoa::buffer#11 ] ( main:8::printf_ulong:52::ultoa:152 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::buffer#11 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::buffer#11 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } }  ) always clobbers reg byte a reg byte y 
Statement [243] ultoa::buffer#3 = ++ ultoa::buffer#11 [ printf_buffer ultoa::buffer#3 ] ( main:8::printf_ulong:52::ultoa:152 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::buffer#3 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::buffer#3 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } }  ) always clobbers reg byte a 
Statement [244] *ultoa::buffer#3 = 0 [ printf_buffer ] ( main:8::printf_ulong:52::ultoa:152 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } }  ) always clobbers reg byte a reg byte y 
Statement [246] ultoa::$10 = ultoa::digit#2 << 2 [ printf_buffer ultoa::digit#2 ultoa::value#2 ultoa::started#2 ultoa::buffer#11 ultoa::$10 ] ( main:8::printf_ulong:52::ultoa:152 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::value#2 ultoa::started#2 ultoa::buffer#11 ultoa::$10 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::value#2 ultoa::started#2 ultoa::buffer#11 ultoa::$10 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:39 [ ultoa::digit#2 ultoa::digit#1 ]
Removing always clobbered register reg byte a as potential for zp[1]:44 [ ultoa::started#2 ultoa::started#4 ]
Statement [247] ultoa::digit_value#0 = RADIX_DECIMAL_VALUES_LONG[ultoa::$10] [ printf_buffer ultoa::digit#2 ultoa::value#2 ultoa::started#2 ultoa::buffer#11 ultoa::digit_value#0 ] ( main:8::printf_ulong:52::ultoa:152 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::value#2 ultoa::started#2 ultoa::buffer#11 ultoa::digit_value#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::value#2 ultoa::started#2 ultoa::buffer#11 ultoa::digit_value#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } }  ) always clobbers reg byte a 
Statement [249] if(ultoa::value#2>=ultoa::digit_value#0) goto ultoa::@5 [ printf_buffer ultoa::digit#2 ultoa::value#2 ultoa::started#2 ultoa::buffer#11 ultoa::digit_value#0 ] ( main:8::printf_ulong:52::ultoa:152 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::value#2 ultoa::started#2 ultoa::buffer#11 ultoa::digit_value#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::value#2 ultoa::started#2 ultoa::buffer#11 ultoa::digit_value#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } }  ) always clobbers reg byte a 
Statement [252] ultoa_append::buffer#0 = ultoa::buffer#11 [ printf_buffer ultoa::digit#2 ultoa::value#2 ultoa::buffer#11 ultoa::digit_value#0 ultoa_append::buffer#0 ] ( main:8::printf_ulong:52::ultoa:152 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::value#2 ultoa::buffer#11 ultoa::digit_value#0 ultoa_append::buffer#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::value#2 ultoa::buffer#11 ultoa::digit_value#0 ultoa_append::buffer#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [253] ultoa_append::value#0 = ultoa::value#2 [ printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa::digit_value#0 ultoa_append::buffer#0 ultoa_append::value#0 ] ( main:8::printf_ulong:52::ultoa:152 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa::digit_value#0 ultoa_append::buffer#0 ultoa_append::value#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa::digit_value#0 ultoa_append::buffer#0 ultoa_append::value#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [254] ultoa_append::sub#0 = ultoa::digit_value#0 [ printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa_append::buffer#0 ultoa_append::value#0 ultoa_append::sub#0 ] ( main:8::printf_ulong:52::ultoa:152 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa_append::buffer#0 ultoa_append::value#0 ultoa_append::sub#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa_append::buffer#0 ultoa_append::value#0 ultoa_append::sub#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [256] ultoa_append::return#0 = ultoa_append::value#2 [ printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa_append::return#0 ] ( main:8::printf_ulong:52::ultoa:152 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa_append::return#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa_append::return#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [257] ultoa::value#0 = ultoa_append::return#0 [ printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa::value#0 ] ( main:8::printf_ulong:52::ultoa:152 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa::value#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa::value#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } }  ) always clobbers reg byte a 
Statement [262] *uctoa::buffer#11 = DIGITS[uctoa::value#2] [ printf_buffer uctoa::buffer#11 ] ( main:8::queen:48::print:31::printf_uchar:91::uctoa:165 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer uctoa::buffer#11 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 uctoa::value#1 } }  main:8::queen:48::print:31::printf_uchar:102::uctoa:165 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer uctoa::buffer#11 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 uctoa::value#1 } }  ) always clobbers reg byte a reg byte y 
Statement [263] uctoa::buffer#3 = ++ uctoa::buffer#11 [ printf_buffer uctoa::buffer#3 ] ( main:8::queen:48::print:31::printf_uchar:91::uctoa:165 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer uctoa::buffer#3 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 uctoa::value#1 } }  main:8::queen:48::print:31::printf_uchar:102::uctoa:165 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer uctoa::buffer#3 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 uctoa::value#1 } }  ) always clobbers reg byte a 
Statement [264] *uctoa::buffer#3 = 0 [ printf_buffer ] ( main:8::queen:48::print:31::printf_uchar:91::uctoa:165 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 uctoa::value#1 } }  main:8::queen:48::print:31::printf_uchar:102::uctoa:165 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 uctoa::value#1 } }  ) always clobbers reg byte a reg byte y 
Statement [271] uctoa_append::buffer#0 = uctoa::buffer#11 [ printf_buffer uctoa::digit#2 uctoa::value#2 uctoa::buffer#11 uctoa::digit_value#0 uctoa_append::buffer#0 ] ( main:8::queen:48::print:31::printf_uchar:91::uctoa:165 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer uctoa::digit#2 uctoa::value#2 uctoa::buffer#11 uctoa::digit_value#0 uctoa_append::buffer#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 uctoa::value#1 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  main:8::queen:48::print:31::printf_uchar:102::uctoa:165 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer uctoa::digit#2 uctoa::value#2 uctoa::buffer#11 uctoa::digit_value#0 uctoa_append::buffer#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 uctoa::value#1 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:47 [ uctoa::digit#2 uctoa::digit#1 ]
Removing always clobbered register reg byte a as potential for zp[1]:48 [ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:157 [ uctoa::digit_value#0 ]
Statement [278] conio_line_text = conio_line_text + $28 [ conio_cursor_y conio_line_text conio_line_color ] ( main:8::cputs:42::cputc:142::cputln:176 [ count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176 [ count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176 [ count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176 [ cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179 [ count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179 [ count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179 [ count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179 [ cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [279] conio_line_color = conio_line_color + $28 [ conio_cursor_y conio_line_text conio_line_color ] ( main:8::cputs:42::cputc:142::cputln:176 [ count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176 [ count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176 [ count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176 [ cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179 [ count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179 [ count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179 [ count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179 [ cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [280] conio_cursor_x = 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:8::cputs:42::cputc:142::cputln:176 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [286] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2 [ utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] ( main:8::printf_uint:46::utoa:145::utoa_append:197 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:54 [ utoa_append::digit#2 utoa_append::digit#1 ]
Statement [287] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2] [ utoa_append::value#2 ] ( main:8::printf_uint:46::utoa:145::utoa_append:197 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::value#2 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:26 [ utoa::digit#2 utoa::digit#1 ]
Statement [290] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0 [ utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] ( main:8::printf_uint:46::utoa:145::utoa_append:197 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [293] if(0!=*strlen::str#2) goto strlen::@2 [ printf_buffer strlen::len#2 strlen::str#2 ] ( main:8::printf_uint:46::printf_number_buffer:147::strlen:204 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_buffer strlen::len#2 strlen::str#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  main:8::printf_ulong:52::printf_number_buffer:154::strlen:204 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_buffer strlen::len#2 strlen::str#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::strlen:204 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_buffer strlen::len#2 strlen::str#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::strlen:204 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_buffer strlen::len#2 strlen::str#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { strlen::return#2 = strlen::len#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::strlen:204 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_buffer strlen::len#2 strlen::str#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { strlen::return#2 = strlen::len#2 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:32 [ printf_number_buffer::format_min_length#3 ]
Statement [306] if(0!=*strupr::src#2) goto strupr::@2 [ strupr::src#2 ] ( main:8::printf_uint:46::printf_number_buffer:147::strupr:229 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:8::printf_ulong:52::printf_number_buffer:154::strupr:229 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::strupr:229 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::strupr:229 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::strupr:229 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } }  ) always clobbers reg byte a reg byte y 
Statement [308] toupper::ch#0 = *strupr::src#2 [ strupr::src#2 toupper::ch#0 ] ( main:8::printf_uint:46::printf_number_buffer:147::strupr:229 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::ch#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  main:8::printf_ulong:52::printf_number_buffer:154::strupr:229 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::ch#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::strupr:229 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::ch#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::strupr:229 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::ch#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { toupper::return#2 = toupper::return#3 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::strupr:229 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::ch#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { toupper::return#2 = toupper::return#3 } }  ) always clobbers reg byte a reg byte y 
Statement [312] *strupr::src#2 = strupr::$0 [ strupr::src#2 ] ( main:8::printf_uint:46::printf_number_buffer:147::strupr:229 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:8::printf_ulong:52::printf_number_buffer:154::strupr:229 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::strupr:229 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::strupr:229 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::strupr:229 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } }  ) always clobbers reg byte y 
Statement [316] if(ultoa_append::value#2>=ultoa_append::sub#0) goto ultoa_append::@2 [ ultoa_append::buffer#0 ultoa_append::sub#0 ultoa_append::value#2 ultoa_append::digit#2 ] ( main:8::printf_ulong:52::ultoa:152::ultoa_append:255 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa_append::buffer#0 ultoa_append::sub#0 ultoa_append::value#2 ultoa_append::digit#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152::ultoa_append:255 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa_append::buffer#0 ultoa_append::sub#0 ultoa_append::value#2 ultoa_append::digit#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:68 [ ultoa_append::digit#2 ultoa_append::digit#1 ]
Statement [317] *ultoa_append::buffer#0 = DIGITS[ultoa_append::digit#2] [ ultoa_append::value#2 ] ( main:8::printf_ulong:52::ultoa:152::ultoa_append:255 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa_append::value#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152::ultoa_append:255 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa_append::value#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:39 [ ultoa::digit#2 ultoa::digit#1 ]
Statement [320] ultoa_append::value#1 = ultoa_append::value#2 - ultoa_append::sub#0 [ ultoa_append::buffer#0 ultoa_append::sub#0 ultoa_append::value#1 ultoa_append::digit#1 ] ( main:8::printf_ulong:52::ultoa:152::ultoa_append:255 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa_append::buffer#0 ultoa_append::sub#0 ultoa_append::value#1 ultoa_append::digit#1 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152::ultoa_append:255 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa_append::buffer#0 ultoa_append::sub#0 ultoa_append::value#1 ultoa_append::digit#1 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [324] *uctoa_append::buffer#0 = DIGITS[uctoa_append::digit#2] [ uctoa_append::value#2 ] ( main:8::queen:48::print:31::printf_uchar:91::uctoa:165::uctoa_append:274 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer uctoa::digit#2 uctoa::buffer#11 uctoa_append::value#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 uctoa::value#1 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  main:8::queen:48::print:31::printf_uchar:102::uctoa:165::uctoa_append:274 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer uctoa::digit#2 uctoa::buffer#11 uctoa_append::value#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 uctoa::value#1 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:47 [ uctoa::digit#2 uctoa::digit#1 ]
Removing always clobbered register reg byte a as potential for zp[1]:69 [ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ]
Removing always clobbered register reg byte y as potential for zp[1]:69 [ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ]
Statement [327] uctoa_append::value#1 = uctoa_append::value#2 - uctoa_append::sub#0 [ uctoa_append::buffer#0 uctoa_append::sub#0 uctoa_append::value#1 uctoa_append::digit#1 ] ( main:8::queen:48::print:31::printf_uchar:91::uctoa:165::uctoa_append:274 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer uctoa::digit#2 uctoa::buffer#11 uctoa_append::buffer#0 uctoa_append::sub#0 uctoa_append::value#1 uctoa_append::digit#1 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 uctoa::value#1 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  main:8::queen:48::print:31::printf_uchar:102::uctoa:165::uctoa_append:274 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer uctoa::digit#2 uctoa::buffer#11 uctoa_append::buffer#0 uctoa_append::sub#0 uctoa_append::value#1 uctoa_append::digit#1 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 uctoa::value#1 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:160 [ uctoa_append::sub#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:70 [ uctoa_append::digit#2 uctoa_append::digit#1 ]
Statement [328] if(conio_cursor_y!=$19) goto cscroll::@return [ conio_cursor_y conio_line_text conio_line_color ] ( main:8::cputs:42::cputc:142::cputln:176::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [337] conio_line_text = conio_line_text - $28 [ conio_cursor_y conio_line_text conio_line_color ] ( main:8::cputs:42::cputc:142::cputln:176::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [338] conio_line_color = conio_line_color - $28 [ conio_cursor_y conio_line_text conio_line_color ] ( main:8::cputs:42::cputc:142::cputln:176::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [343] toupper::return#0 = toupper::ch#0 + 'A'-'a' [ toupper::return#0 ] ( main:8::printf_uint:46::printf_number_buffer:147::strupr:229::toupper:309 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::return#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  main:8::printf_ulong:52::printf_number_buffer:154::strupr:229::toupper:309 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::return#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::strupr:229::toupper:309 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::return#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::strupr:229::toupper:309 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::return#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { toupper::return#2 = toupper::return#3 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::strupr:229::toupper:309 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::return#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { toupper::return#2 = toupper::return#3 } }  ) always clobbers reg byte a 
Statement [347] memcpy::src_end#0 = (byte*)memcpy::source#2 + (word)$19*$28-$28 [ memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] ( main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memcpy:330 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memcpy:330 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memcpy:332 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memcpy:332 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [348] memcpy::src#4 = (byte*)memcpy::source#2 [ memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] ( main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memcpy:330 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memcpy:330 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memcpy:332 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memcpy:332 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [349] memcpy::dst#4 = (byte*)memcpy::destination#2 [ memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] ( main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memcpy:330 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memcpy:330 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memcpy:332 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memcpy:332 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [351] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2 [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memcpy:330 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memcpy:330 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memcpy:332 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memcpy:332 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [353] *memcpy::dst#2 = *memcpy::src#2 [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memcpy:330 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memcpy:330 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memcpy:332 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memcpy:332 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a reg byte y 
Statement [357] memset::end#0 = (byte*)memset::str#3 + $28 [ memset::str#3 memset::c#4 memset::end#0 ] ( main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memset:334 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memset:334 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memset:336 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memset:336 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:82 [ memset::c#4 ]
Statement [358] memset::dst#4 = (byte*)memset::str#3 [ memset::c#4 memset::end#0 memset::dst#4 ] ( main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memset:334 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memset:334 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memset:336 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memset:336 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [360] if(memset::dst#2!=memset::end#0) goto memset::@3 [ memset::c#4 memset::end#0 memset::dst#2 ] ( main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memset:334 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memset:334 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memset:336 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memset:336 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [362] *memset::dst#2 = memset::c#4 [ memset::c#4 memset::end#0 memset::dst#2 ] ( main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memset:334 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memset:334 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memset:336 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memset:336 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:82 [ memset::c#4 ]
Statement [1] conio_cursor_x = 0 [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [2] conio_cursor_y = 0 [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [3] conio_line_text = DEFAULT_SCREEN [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [4] conio_line_color = COLORRAM [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [5] count = 0 [ count printf_buffer ] (  [ count printf_buffer ] { }  ) always clobbers reg byte a 
Statement [10] queen::row#0 = stackidx(byte,queen::OFFSET_STACK_ROW) [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::row#0 printf_buffer ] ( main:8::queen:48 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::row#0 printf_buffer ] { }  ) always clobbers reg byte a reg byte x 
Statement [12] queen::column = 1 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer ] ( main:8::queen:48 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer ] { }  ) always clobbers reg byte a 
Statement [13] if(queen::column<8+1) goto queen::@2 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer ] ( main:8::queen:48 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer ] { }  ) always clobbers reg byte a 
Statement [21] board[queen::r] = queen::column [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer ] ( main:8::queen:48 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [22] if(queen::r==8) goto queen::@4 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer ] ( main:8::queen:48 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer ] { }  ) always clobbers reg byte a 
Statement asm { ldacolumn pha ldar pha  } always clobbers reg byte a 
Statement sideeffect stackpullbytes(1) always clobbers reg byte a 
Statement asm { pla star pla stacolumn  } always clobbers reg byte a 
Statement [47] stackpush(byte) = 1 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count printf_buffer ] ( main:8 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count printf_buffer ] { }  ) always clobbers reg byte a 
Statement sideeffect stackpullbytes(1) always clobbers reg byte a 
Statement [51] printf_ulong::uvalue#0 = count [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_ulong::uvalue#0 printf_buffer ] ( main:8 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_ulong::uvalue#0 printf_buffer ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } }  ) always clobbers reg byte a 
Statement [62] if(board[legal::i#2]==legal::column#0) goto legal::@return [ legal::row#0 legal::column#0 legal::i#2 ] ( main:8::queen:48::legal:17 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer legal::row#0 legal::column#0 legal::i#2 ] { { legal::row#0 = queen::r } { legal::column#0 = queen::column } { legal::return#0 = legal::return#4 } }  ) always clobbers reg byte a 
Statement [79] printf_ulong::uvalue#1 = count [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count printf_ulong::uvalue#1 printf_buffer ] ( main:8::queen:48::print:31 [ queen::r queen::column conio_cursor_x conio_cursor_y conio_line_text conio_line_color count printf_ulong::uvalue#1 printf_buffer ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } }  ) always clobbers reg byte a 
Statement [95] if(board[print::i1#2]==print::j#2) goto print::@8 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count print::i1#2 print::j#2 printf_buffer ] ( main:8::queen:48::print:31 [ queen::r queen::column conio_cursor_x conio_cursor_y conio_line_text conio_line_color count print::i1#2 print::j#2 printf_buffer ] { }  ) always clobbers reg byte a 
Statement [108] conio_cursor_x = 0 [ conio_cursor_x gotoxy::y#5 ] ( gotoxy:37 [ conio_cursor_x gotoxy::y#5 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  conio_c64_init:6::gotoxy:37 [ count printf_buffer conio_cursor_x gotoxy::y#5 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  main:8::queen:48::print:31::gotoxy:76 [ queen::r queen::column count printf_buffer conio_cursor_x gotoxy::y#5 ] { }  ) always clobbers reg byte a 
Statement [110] gotoxy::$7 = (word)gotoxy::y#5 [ conio_cursor_x conio_cursor_y gotoxy::$7 ] ( gotoxy:37 [ conio_cursor_x conio_cursor_y gotoxy::$7 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  conio_c64_init:6::gotoxy:37 [ count printf_buffer conio_cursor_x conio_cursor_y gotoxy::$7 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  main:8::queen:48::print:31::gotoxy:76 [ queen::r queen::column count printf_buffer conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  ) always clobbers reg byte a 
Statement [111] gotoxy::$8 = gotoxy::$7 << 2 [ conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] ( gotoxy:37 [ conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  conio_c64_init:6::gotoxy:37 [ count printf_buffer conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  main:8::queen:48::print:31::gotoxy:76 [ queen::r queen::column count printf_buffer conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  ) always clobbers reg byte a 
Statement [112] gotoxy::$9 = gotoxy::$8 + gotoxy::$7 [ conio_cursor_x conio_cursor_y gotoxy::$9 ] ( gotoxy:37 [ conio_cursor_x conio_cursor_y gotoxy::$9 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  conio_c64_init:6::gotoxy:37 [ count printf_buffer conio_cursor_x conio_cursor_y gotoxy::$9 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  main:8::queen:48::print:31::gotoxy:76 [ queen::r queen::column count printf_buffer conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  ) always clobbers reg byte a 
Statement [113] gotoxy::line_offset#0 = gotoxy::$9 << 3 [ conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] ( gotoxy:37 [ conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  conio_c64_init:6::gotoxy:37 [ count printf_buffer conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  main:8::queen:48::print:31::gotoxy:76 [ queen::r queen::column count printf_buffer conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  ) always clobbers reg byte a 
Statement [114] gotoxy::$5 = DEFAULT_SCREEN + gotoxy::line_offset#0 [ conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] ( gotoxy:37 [ conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  conio_c64_init:6::gotoxy:37 [ count printf_buffer conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  main:8::queen:48::print:31::gotoxy:76 [ queen::r queen::column count printf_buffer conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  ) always clobbers reg byte a 
Statement [115] conio_line_text = gotoxy::$5 [ conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] ( gotoxy:37 [ conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  conio_c64_init:6::gotoxy:37 [ count printf_buffer conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  main:8::queen:48::print:31::gotoxy:76 [ queen::r queen::column count printf_buffer conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  ) always clobbers reg byte a 
Statement [116] gotoxy::$6 = COLORRAM + gotoxy::line_offset#0 [ conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] ( gotoxy:37 [ conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  conio_c64_init:6::gotoxy:37 [ count printf_buffer conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  main:8::queen:48::print:31::gotoxy:76 [ queen::r queen::column count printf_buffer conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  ) always clobbers reg byte a 
Statement [117] conio_line_color = gotoxy::$6 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( gotoxy:37 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  conio_c64_init:6::gotoxy:37 [ count printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { gotoxy::y#2 = gotoxy::y#4 conio_c64_init::line#2 } }  main:8::queen:48::print:31::gotoxy:76 [ queen::r queen::column count printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte a 
Statement [122] conio_cursor_x = 0 [ conio_cursor_x ] ( main:8::clrscr:40 [ count printf_buffer conio_cursor_x ] { }  ) always clobbers reg byte a 
Statement [123] conio_cursor_y = 0 [ conio_cursor_x conio_cursor_y ] ( main:8::clrscr:40 [ count printf_buffer conio_cursor_x conio_cursor_y ] { }  ) always clobbers reg byte a 
Statement [124] conio_line_text = DEFAULT_SCREEN [ conio_cursor_x conio_cursor_y conio_line_text ] ( main:8::clrscr:40 [ count printf_buffer conio_cursor_x conio_cursor_y conio_line_text ] { }  ) always clobbers reg byte a 
Statement [125] conio_line_color = COLORRAM [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:8::clrscr:40 [ count printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte a 
Statement [129] clrscr::line_text#1 = clrscr::line_text#5 + $28 [ clrscr::l#2 clrscr::line_cols#5 clrscr::line_text#1 ] ( main:8::clrscr:40 [ count printf_buffer clrscr::l#2 clrscr::line_cols#5 clrscr::line_text#1 ] { }  ) always clobbers reg byte a 
Statement [130] clrscr::line_cols#1 = clrscr::line_cols#5 + $28 [ clrscr::l#2 clrscr::line_text#1 clrscr::line_cols#1 ] ( main:8::clrscr:40 [ count printf_buffer clrscr::l#2 clrscr::line_text#1 clrscr::line_cols#1 ] { }  ) always clobbers reg byte a 
Statement [132] clrscr::line_text#5[clrscr::c#2] = ' ' [ clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] ( main:8::clrscr:40 [ count printf_buffer clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] { }  ) always clobbers reg byte a 
Statement [133] clrscr::line_cols#5[clrscr::c#2] = LIGHT_BLUE [ clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] ( main:8::clrscr:40 [ count printf_buffer clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] { }  ) always clobbers reg byte a 
Statement [137] cputs::c#1 = *cputs::s#11 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] ( main:8::cputs:42 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { }  main:8::cputs:44 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { }  main:8::cputs:50 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { }  main:8::cputs:54 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { }  main:8::queen:48::print:31::cputs:78 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { }  main:8::queen:48::print:31::cputs:82 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { }  main:8::queen:48::print:31::cputs:89 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { }  main:8::queen:48::print:31::cputs:97 [ queen::r queen::column count print::i1#2 print::j#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { }  main:8::queen:48::print:31::cputs:100 [ queen::r queen::column count print::i1#2 print::j#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputs::s#11 cputs::c#1 printf_buffer ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } }  ) always clobbers reg byte a reg byte y 
Statement [144] *((byte*)&printf_buffer) = 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] ( main:8::printf_uint:46 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { }  ) always clobbers reg byte a 
Statement [150] *((byte*)&printf_buffer) = 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_ulong::uvalue#2 ] ( main:8::printf_ulong:52 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_ulong::uvalue#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } }  main:8::queen:48::print:31::printf_ulong:80 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_ulong::uvalue#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } }  ) always clobbers reg byte a 
Statement [151] ultoa::value#1 = printf_ulong::uvalue#2 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::value#1 ] ( main:8::printf_ulong:52 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::value#1 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } }  main:8::queen:48::print:31::printf_ulong:80 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::value#1 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } }  ) always clobbers reg byte a 
Statement [158] diff::return#3 = diff::a#2 - diff::b#2 [ diff::return#3 ] ( main:8::queen:48::legal:17::diff:65 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer legal::row#0 legal::column#0 legal::i#2 diff::return#3 ] { { legal::row#0 = queen::r } { legal::return#0 = legal::return#4 } { diff::a#0 = diff::a#2 } { diff::b#0 = diff::b#2 legal::column#0 queen::column } { diff::return#0 = diff::return#4 } }  main:8::queen:48::legal:17::diff:70 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer legal::row#0 legal::column#0 legal::i#2 legal::$3 diff::return#3 ] { { legal::column#0 = queen::column } { legal::return#0 = legal::return#4 } { diff::a#1 = diff::a#2 legal::i#2 } { diff::b#1 = diff::b#2 legal::row#0 queen::r } { diff::return#1 = diff::return#4 } }  ) always clobbers reg byte a 
Statement [161] diff::return#2 = diff::b#2 - diff::a#2 [ diff::return#2 ] ( main:8::queen:48::legal:17::diff:65 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer legal::row#0 legal::column#0 legal::i#2 diff::return#2 ] { { legal::row#0 = queen::r } { legal::return#0 = legal::return#4 } { diff::a#0 = diff::a#2 } { diff::b#0 = diff::b#2 legal::column#0 queen::column } { diff::return#0 = diff::return#4 } }  main:8::queen:48::legal:17::diff:70 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color count queen::r queen::column printf_buffer legal::row#0 legal::column#0 legal::i#2 legal::$3 diff::return#2 ] { { legal::column#0 = queen::column } { legal::return#0 = legal::return#4 } { diff::a#1 = diff::a#2 legal::i#2 } { diff::b#1 = diff::b#2 legal::row#0 queen::r } { diff::return#1 = diff::return#4 } }  ) always clobbers reg byte a 
Statement [163] *((byte*)&printf_buffer) = 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_uchar::uvalue#2 ] ( main:8::queen:48::print:31::printf_uchar:91 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_uchar::uvalue#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 uctoa::value#1 } }  main:8::queen:48::print:31::printf_uchar:102 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_uchar::uvalue#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 uctoa::value#1 } }  ) always clobbers reg byte a 
Statement [171] conio_line_text[conio_cursor_x] = cputc::c#3 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:8::cputs:42::cputc:142 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte y 
Statement [172] conio_line_color[conio_cursor_x] = LIGHT_BLUE [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:8::cputs:42::cputc:142 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a reg byte y 
Statement [174] if(conio_cursor_x!=$28) goto cputc::@return [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:8::cputs:42::cputc:142 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [184] *utoa::buffer#11 = DIGITS[utoa::$11] [ printf_buffer utoa::buffer#11 ] ( main:8::printf_uint:46::utoa:145 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#11 ] { }  ) always clobbers reg byte a reg byte y 
Statement [185] utoa::buffer#3 = ++ utoa::buffer#11 [ printf_buffer utoa::buffer#3 ] ( main:8::printf_uint:46::utoa:145 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#3 ] { }  ) always clobbers reg byte a 
Statement [186] *utoa::buffer#3 = 0 [ printf_buffer ] ( main:8::printf_uint:46::utoa:145 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [188] utoa::$10 = utoa::digit#2 << 1 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] ( main:8::printf_uint:46::utoa:145 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] { }  ) always clobbers reg byte a 
Statement [189] utoa::digit_value#0 = RADIX_DECIMAL_VALUES[utoa::$10] [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] ( main:8::printf_uint:46::utoa:145 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { }  ) always clobbers reg byte a 
Statement [191] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@5 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] ( main:8::printf_uint:46::utoa:145 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { }  ) always clobbers reg byte a 
Statement [194] utoa_append::buffer#0 = utoa::buffer#11 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] ( main:8::printf_uint:46::utoa:145 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [195] utoa_append::value#0 = utoa::value#2 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] ( main:8::printf_uint:46::utoa:145 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [196] utoa_append::sub#0 = utoa::digit_value#0 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] ( main:8::printf_uint:46::utoa:145 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [198] utoa_append::return#0 = utoa_append::value#2 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] ( main:8::printf_uint:46::utoa:145 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [199] utoa::value#0 = utoa_append::return#0 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] ( main:8::printf_uint:46::utoa:145 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] { }  ) always clobbers reg byte a 
Statement [205] strlen::return#2 = strlen::len#2 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 strlen::return#2 ] ( main:8::printf_uint:46::printf_number_buffer:147 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 strlen::return#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  main:8::printf_ulong:52::printf_number_buffer:154 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 strlen::return#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 strlen::return#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 strlen::return#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { strlen::return#2 = strlen::len#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 strlen::return#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { strlen::return#2 = strlen::len#2 } }  ) always clobbers reg byte a 
Statement [206] printf_number_buffer::$19 = strlen::return#2 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::$19 ] ( main:8::printf_uint:46::printf_number_buffer:147 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::$19 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:8::printf_ulong:52::printf_number_buffer:154 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::$19 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::$19 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::$19 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::$19 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } }  ) always clobbers reg byte a 
Statement [211] printf_number_buffer::padding#1 = (signed byte)printf_number_buffer::format_min_length#3 - printf_number_buffer::len#2 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#1 ] ( main:8::printf_uint:46::printf_number_buffer:147 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#1 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:8::printf_ulong:52::printf_number_buffer:154 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#1 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#1 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#1 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#1 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } }  ) always clobbers reg byte a 
Statement [241] ultoa::$11 = (byte)ultoa::value#2 [ printf_buffer ultoa::buffer#11 ultoa::$11 ] ( main:8::printf_ulong:52::ultoa:152 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::buffer#11 ultoa::$11 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::buffer#11 ultoa::$11 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } }  ) always clobbers reg byte a 
Statement [242] *ultoa::buffer#11 = DIGITS[ultoa::$11] [ printf_buffer ultoa::buffer#11 ] ( main:8::printf_ulong:52::ultoa:152 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::buffer#11 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::buffer#11 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } }  ) always clobbers reg byte a reg byte y 
Statement [243] ultoa::buffer#3 = ++ ultoa::buffer#11 [ printf_buffer ultoa::buffer#3 ] ( main:8::printf_ulong:52::ultoa:152 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::buffer#3 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::buffer#3 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } }  ) always clobbers reg byte a 
Statement [244] *ultoa::buffer#3 = 0 [ printf_buffer ] ( main:8::printf_ulong:52::ultoa:152 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } }  ) always clobbers reg byte a reg byte y 
Statement [246] ultoa::$10 = ultoa::digit#2 << 2 [ printf_buffer ultoa::digit#2 ultoa::value#2 ultoa::started#2 ultoa::buffer#11 ultoa::$10 ] ( main:8::printf_ulong:52::ultoa:152 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::value#2 ultoa::started#2 ultoa::buffer#11 ultoa::$10 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::value#2 ultoa::started#2 ultoa::buffer#11 ultoa::$10 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } }  ) always clobbers reg byte a 
Statement [247] ultoa::digit_value#0 = RADIX_DECIMAL_VALUES_LONG[ultoa::$10] [ printf_buffer ultoa::digit#2 ultoa::value#2 ultoa::started#2 ultoa::buffer#11 ultoa::digit_value#0 ] ( main:8::printf_ulong:52::ultoa:152 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::value#2 ultoa::started#2 ultoa::buffer#11 ultoa::digit_value#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::value#2 ultoa::started#2 ultoa::buffer#11 ultoa::digit_value#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } }  ) always clobbers reg byte a 
Statement [249] if(ultoa::value#2>=ultoa::digit_value#0) goto ultoa::@5 [ printf_buffer ultoa::digit#2 ultoa::value#2 ultoa::started#2 ultoa::buffer#11 ultoa::digit_value#0 ] ( main:8::printf_ulong:52::ultoa:152 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::value#2 ultoa::started#2 ultoa::buffer#11 ultoa::digit_value#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::value#2 ultoa::started#2 ultoa::buffer#11 ultoa::digit_value#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } }  ) always clobbers reg byte a 
Statement [252] ultoa_append::buffer#0 = ultoa::buffer#11 [ printf_buffer ultoa::digit#2 ultoa::value#2 ultoa::buffer#11 ultoa::digit_value#0 ultoa_append::buffer#0 ] ( main:8::printf_ulong:52::ultoa:152 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::value#2 ultoa::buffer#11 ultoa::digit_value#0 ultoa_append::buffer#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::value#2 ultoa::buffer#11 ultoa::digit_value#0 ultoa_append::buffer#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [253] ultoa_append::value#0 = ultoa::value#2 [ printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa::digit_value#0 ultoa_append::buffer#0 ultoa_append::value#0 ] ( main:8::printf_ulong:52::ultoa:152 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa::digit_value#0 ultoa_append::buffer#0 ultoa_append::value#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa::digit_value#0 ultoa_append::buffer#0 ultoa_append::value#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [254] ultoa_append::sub#0 = ultoa::digit_value#0 [ printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa_append::buffer#0 ultoa_append::value#0 ultoa_append::sub#0 ] ( main:8::printf_ulong:52::ultoa:152 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa_append::buffer#0 ultoa_append::value#0 ultoa_append::sub#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa_append::buffer#0 ultoa_append::value#0 ultoa_append::sub#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [256] ultoa_append::return#0 = ultoa_append::value#2 [ printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa_append::return#0 ] ( main:8::printf_ulong:52::ultoa:152 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa_append::return#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa_append::return#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [257] ultoa::value#0 = ultoa_append::return#0 [ printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa::value#0 ] ( main:8::printf_ulong:52::ultoa:152 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa::value#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa::value#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } }  ) always clobbers reg byte a 
Statement [262] *uctoa::buffer#11 = DIGITS[uctoa::value#2] [ printf_buffer uctoa::buffer#11 ] ( main:8::queen:48::print:31::printf_uchar:91::uctoa:165 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer uctoa::buffer#11 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 uctoa::value#1 } }  main:8::queen:48::print:31::printf_uchar:102::uctoa:165 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer uctoa::buffer#11 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 uctoa::value#1 } }  ) always clobbers reg byte a reg byte y 
Statement [263] uctoa::buffer#3 = ++ uctoa::buffer#11 [ printf_buffer uctoa::buffer#3 ] ( main:8::queen:48::print:31::printf_uchar:91::uctoa:165 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer uctoa::buffer#3 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 uctoa::value#1 } }  main:8::queen:48::print:31::printf_uchar:102::uctoa:165 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer uctoa::buffer#3 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 uctoa::value#1 } }  ) always clobbers reg byte a 
Statement [264] *uctoa::buffer#3 = 0 [ printf_buffer ] ( main:8::queen:48::print:31::printf_uchar:91::uctoa:165 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 uctoa::value#1 } }  main:8::queen:48::print:31::printf_uchar:102::uctoa:165 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 uctoa::value#1 } }  ) always clobbers reg byte a reg byte y 
Statement [271] uctoa_append::buffer#0 = uctoa::buffer#11 [ printf_buffer uctoa::digit#2 uctoa::value#2 uctoa::buffer#11 uctoa::digit_value#0 uctoa_append::buffer#0 ] ( main:8::queen:48::print:31::printf_uchar:91::uctoa:165 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer uctoa::digit#2 uctoa::value#2 uctoa::buffer#11 uctoa::digit_value#0 uctoa_append::buffer#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 uctoa::value#1 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  main:8::queen:48::print:31::printf_uchar:102::uctoa:165 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer uctoa::digit#2 uctoa::value#2 uctoa::buffer#11 uctoa::digit_value#0 uctoa_append::buffer#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 uctoa::value#1 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [278] conio_line_text = conio_line_text + $28 [ conio_cursor_y conio_line_text conio_line_color ] ( main:8::cputs:42::cputc:142::cputln:176 [ count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176 [ count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176 [ count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176 [ cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179 [ count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179 [ count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179 [ count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179 [ cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [279] conio_line_color = conio_line_color + $28 [ conio_cursor_y conio_line_text conio_line_color ] ( main:8::cputs:42::cputc:142::cputln:176 [ count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176 [ count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176 [ count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176 [ cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179 [ count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179 [ count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179 [ count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179 [ cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [280] conio_cursor_x = 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:8::cputs:42::cputc:142::cputln:176 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [286] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2 [ utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] ( main:8::printf_uint:46::utoa:145::utoa_append:197 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [287] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2] [ utoa_append::value#2 ] ( main:8::printf_uint:46::utoa:145::utoa_append:197 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::value#2 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a reg byte y 
Statement [290] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0 [ utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] ( main:8::printf_uint:46::utoa:145::utoa_append:197 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [293] if(0!=*strlen::str#2) goto strlen::@2 [ printf_buffer strlen::len#2 strlen::str#2 ] ( main:8::printf_uint:46::printf_number_buffer:147::strlen:204 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_buffer strlen::len#2 strlen::str#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  main:8::printf_ulong:52::printf_number_buffer:154::strlen:204 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_buffer strlen::len#2 strlen::str#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::strlen:204 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_buffer strlen::len#2 strlen::str#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::strlen:204 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_buffer strlen::len#2 strlen::str#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { strlen::return#2 = strlen::len#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::strlen:204 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_number_buffer::format_min_length#3 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_buffer strlen::len#2 strlen::str#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { strlen::return#2 = strlen::len#2 } }  ) always clobbers reg byte a reg byte y 
Statement [306] if(0!=*strupr::src#2) goto strupr::@2 [ strupr::src#2 ] ( main:8::printf_uint:46::printf_number_buffer:147::strupr:229 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:8::printf_ulong:52::printf_number_buffer:154::strupr:229 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::strupr:229 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::strupr:229 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::strupr:229 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } }  ) always clobbers reg byte a reg byte y 
Statement [308] toupper::ch#0 = *strupr::src#2 [ strupr::src#2 toupper::ch#0 ] ( main:8::printf_uint:46::printf_number_buffer:147::strupr:229 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::ch#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  main:8::printf_ulong:52::printf_number_buffer:154::strupr:229 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::ch#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::strupr:229 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::ch#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::strupr:229 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::ch#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { toupper::return#2 = toupper::return#3 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::strupr:229 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::ch#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { toupper::return#2 = toupper::return#3 } }  ) always clobbers reg byte a reg byte y 
Statement [312] *strupr::src#2 = strupr::$0 [ strupr::src#2 ] ( main:8::printf_uint:46::printf_number_buffer:147::strupr:229 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:8::printf_ulong:52::printf_number_buffer:154::strupr:229 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::strupr:229 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::strupr:229 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::strupr:229 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } }  ) always clobbers reg byte y 
Statement [316] if(ultoa_append::value#2>=ultoa_append::sub#0) goto ultoa_append::@2 [ ultoa_append::buffer#0 ultoa_append::sub#0 ultoa_append::value#2 ultoa_append::digit#2 ] ( main:8::printf_ulong:52::ultoa:152::ultoa_append:255 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa_append::buffer#0 ultoa_append::sub#0 ultoa_append::value#2 ultoa_append::digit#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152::ultoa_append:255 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa_append::buffer#0 ultoa_append::sub#0 ultoa_append::value#2 ultoa_append::digit#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [317] *ultoa_append::buffer#0 = DIGITS[ultoa_append::digit#2] [ ultoa_append::value#2 ] ( main:8::printf_ulong:52::ultoa:152::ultoa_append:255 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa_append::value#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152::ultoa_append:255 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa_append::value#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  ) always clobbers reg byte a reg byte y 
Statement [320] ultoa_append::value#1 = ultoa_append::value#2 - ultoa_append::sub#0 [ ultoa_append::buffer#0 ultoa_append::sub#0 ultoa_append::value#1 ultoa_append::digit#1 ] ( main:8::printf_ulong:52::ultoa:152::ultoa_append:255 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa_append::buffer#0 ultoa_append::sub#0 ultoa_append::value#1 ultoa_append::digit#1 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  main:8::queen:48::print:31::printf_ulong:80::ultoa:152::ultoa_append:255 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ultoa::digit#2 ultoa::buffer#11 ultoa_append::buffer#0 ultoa_append::sub#0 ultoa_append::value#1 ultoa_append::digit#1 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count ultoa::value#1 } { ultoa_append::buffer#0 = ultoa::buffer#11 } { ultoa_append::value#0 = ultoa::value#2 } { ultoa_append::sub#0 = ultoa::digit_value#0 } { ultoa_append::return#0 = ultoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [324] *uctoa_append::buffer#0 = DIGITS[uctoa_append::digit#2] [ uctoa_append::value#2 ] ( main:8::queen:48::print:31::printf_uchar:91::uctoa:165::uctoa_append:274 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer uctoa::digit#2 uctoa::buffer#11 uctoa_append::value#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 uctoa::value#1 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  main:8::queen:48::print:31::printf_uchar:102::uctoa:165::uctoa_append:274 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer uctoa::digit#2 uctoa::buffer#11 uctoa_append::value#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 uctoa::value#1 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  ) always clobbers reg byte a reg byte y 
Statement [327] uctoa_append::value#1 = uctoa_append::value#2 - uctoa_append::sub#0 [ uctoa_append::buffer#0 uctoa_append::sub#0 uctoa_append::value#1 uctoa_append::digit#1 ] ( main:8::queen:48::print:31::printf_uchar:91::uctoa:165::uctoa_append:274 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer uctoa::digit#2 uctoa::buffer#11 uctoa_append::buffer#0 uctoa_append::sub#0 uctoa_append::value#1 uctoa_append::digit#1 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 uctoa::value#1 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  main:8::queen:48::print:31::printf_uchar:102::uctoa:165::uctoa_append:274 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer uctoa::digit#2 uctoa::buffer#11 uctoa_append::buffer#0 uctoa_append::sub#0 uctoa_append::value#1 uctoa_append::digit#1 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 uctoa::value#1 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [328] if(conio_cursor_y!=$19) goto cscroll::@return [ conio_cursor_y conio_line_text conio_line_color ] ( main:8::cputs:42::cputc:142::cputln:176::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [337] conio_line_text = conio_line_text - $28 [ conio_cursor_y conio_line_text conio_line_color ] ( main:8::cputs:42::cputc:142::cputln:176::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [338] conio_line_color = conio_line_color - $28 [ conio_cursor_y conio_line_text conio_line_color ] ( main:8::cputs:42::cputc:142::cputln:176::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [343] toupper::return#0 = toupper::ch#0 + 'A'-'a' [ toupper::return#0 ] ( main:8::printf_uint:46::printf_number_buffer:147::strupr:229::toupper:309 [ count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::return#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  main:8::printf_ulong:52::printf_number_buffer:154::strupr:229::toupper:309 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::return#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::strupr:229::toupper:309 [ queen::r queen::column count conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::return#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::strupr:229::toupper:309 [ queen::r queen::column count print::i1#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::return#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { toupper::return#2 = toupper::return#3 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::strupr:229::toupper:309 [ queen::r queen::column count print::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::return#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { toupper::return#2 = toupper::return#3 } }  ) always clobbers reg byte a 
Statement [347] memcpy::src_end#0 = (byte*)memcpy::source#2 + (word)$19*$28-$28 [ memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] ( main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memcpy:330 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memcpy:330 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memcpy:332 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memcpy:332 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [348] memcpy::src#4 = (byte*)memcpy::source#2 [ memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] ( main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memcpy:330 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memcpy:330 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memcpy:332 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memcpy:332 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [349] memcpy::dst#4 = (byte*)memcpy::destination#2 [ memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] ( main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memcpy:330 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memcpy:330 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memcpy:332 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memcpy:332 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [351] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2 [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memcpy:330 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memcpy:330 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memcpy:332 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memcpy:332 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [353] *memcpy::dst#2 = *memcpy::src#2 [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memcpy:330 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memcpy:330 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:330 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memcpy:332 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memcpy:332 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memcpy:332 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a reg byte y 
Statement [357] memset::end#0 = (byte*)memset::str#3 + $28 [ memset::str#3 memset::c#4 memset::end#0 ] ( main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memset:334 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memset:334 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memset:336 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memset:336 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [358] memset::dst#4 = (byte*)memset::str#3 [ memset::c#4 memset::end#0 memset::dst#4 ] ( main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memset:334 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memset:334 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memset:336 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memset:336 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [360] if(memset::dst#2!=memset::end#0) goto memset::@3 [ memset::c#4 memset::end#0 memset::dst#2 ] ( main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memset:334 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memset:334 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memset:336 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memset:336 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a 
Statement [362] *memset::dst#2 = memset::c#4 [ memset::c#4 memset::end#0 memset::dst#2 ] ( main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memset:334 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memset:334 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memset:334 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:334 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:176::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:176::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:176::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:176::cscroll:282::memset:336 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:176::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::cputs:42::cputc:142::cputln:179::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:44::cputc:142::cputln:179::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:50::cputc:142::cputln:179::cscroll:282::memset:336 [ count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::cputs:54::cputc:142::cputln:179::cscroll:282::memset:336 [ cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:78::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:82::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:89::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:97::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::cputs:100::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 print::j#2 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputs:231::cputc:142::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 cputs::s#0 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:8::printf_uint:46::printf_number_buffer:147::cputc:222::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:8::printf_ulong:52::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::cputc:222::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::cputc:222::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:219::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:226::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_uint:46::printf_number_buffer:147::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::printf_ulong:52::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#0 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_ulong:80::printf_number_buffer:154::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_ulong::uvalue#1 = printf_ulong::uvalue#2 count } { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:91::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i1#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#1 = printf_uchar::uvalue#2 print::i1#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:8::queen:48::print:31::printf_uchar:102::printf_number_buffer:167::printf_padding:236::cputc:302::cputln:179::cscroll:282::memset:336 [ queen::r queen::column count print::i#2 printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uchar::uvalue#0 = printf_uchar::uvalue#2 print::i#2 } { printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  ) always clobbers reg byte a reg byte y 
Potential registers zp[1]:2 [ conio_c64_init::line#2 conio_c64_init::line#0 ] : zp[1]:2 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:3 [ legal::i#2 legal::i#1 ] : zp[1]:3 , reg byte x , reg byte y , 
Potential registers zp[1]:4 [ legal::return#4 ] : zp[1]:4 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:5 [ print::i#2 print::i#1 ] : zp[1]:5 , reg byte x , 
Potential registers zp[1]:6 [ print::i1#2 print::i1#1 ] : zp[1]:6 , reg byte x , 
Potential registers zp[1]:7 [ print::j#2 print::j#1 ] : zp[1]:7 , reg byte x , 
Potential registers zp[1]:8 [ gotoxy::y#5 gotoxy::y#4 gotoxy::y#2 ] : zp[1]:8 , reg byte x , reg byte y , 
Potential registers zp[1]:9 [ clrscr::l#2 clrscr::l#1 ] : zp[1]:9 , reg byte x , reg byte y , 
Potential registers zp[2]:10 [ clrscr::line_text#5 clrscr::line_text#1 ] : zp[2]:10 , 
Potential registers zp[2]:12 [ clrscr::line_cols#5 clrscr::line_cols#1 ] : zp[2]:12 , 
Potential registers zp[1]:14 [ clrscr::c#2 clrscr::c#1 ] : zp[1]:14 , reg byte x , reg byte y , 
Potential registers zp[2]:15 [ cputs::s#11 cputs::s#12 cputs::s#0 ] : zp[2]:15 , 
Potential registers zp[4]:17 [ printf_ulong::uvalue#2 printf_ulong::uvalue#0 printf_ulong::uvalue#1 ] : zp[4]:17 , 
Potential registers zp[1]:21 [ diff::a#2 diff::a#0 diff::a#1 ] : zp[1]:21 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:22 [ diff::b#2 diff::b#0 diff::b#1 ] : zp[1]:22 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:23 [ diff::return#4 diff::return#2 diff::return#3 ] : zp[1]:23 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:24 [ printf_uchar::uvalue#2 printf_uchar::uvalue#1 printf_uchar::uvalue#0 ] : zp[1]:24 , reg byte x , reg byte y , 
Potential registers zp[1]:25 [ cputc::c#3 cputc::c#0 cputc::c#2 cputc::c#1 ] : zp[1]:25 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:26 [ utoa::digit#2 utoa::digit#1 ] : zp[1]:26 , reg byte x , 
Potential registers zp[2]:27 [ utoa::value#2 utoa::value#6 utoa::value#0 ] : zp[2]:27 , 
Potential registers zp[1]:29 [ utoa::started#2 utoa::started#4 ] : zp[1]:29 , reg byte x , reg byte y , 
Potential registers zp[2]:30 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ] : zp[2]:30 , 
Potential registers zp[1]:32 [ printf_number_buffer::format_min_length#3 ] : zp[1]:32 , reg byte x , 
Potential registers zp[1]:33 [ printf_number_buffer::format_justify_left#10 ] : zp[1]:33 , reg byte x , 
Potential registers zp[1]:34 [ printf_number_buffer::format_zero_padding#10 ] : zp[1]:34 , reg byte x , 
Potential registers zp[1]:35 [ printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ] : zp[1]:35 , reg byte x , 
Potential registers zp[1]:36 [ printf_number_buffer::format_upper_case#10 ] : zp[1]:36 , reg byte x , 
Potential registers zp[1]:37 [ printf_number_buffer::len#2 printf_number_buffer::len#0 printf_number_buffer::len#1 ] : zp[1]:37 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:38 [ printf_number_buffer::padding#10 printf_number_buffer::padding#1 ] : zp[1]:38 , reg byte x , 
Potential registers zp[1]:39 [ ultoa::digit#2 ultoa::digit#1 ] : zp[1]:39 , reg byte x , 
Potential registers zp[4]:40 [ ultoa::value#2 ultoa::value#6 ultoa::value#1 ultoa::value#0 ] : zp[4]:40 , 
Potential registers zp[1]:44 [ ultoa::started#2 ultoa::started#4 ] : zp[1]:44 , reg byte x , reg byte y , 
Potential registers zp[2]:45 [ ultoa::buffer#11 ultoa::buffer#14 ultoa::buffer#4 ] : zp[2]:45 , 
Potential registers zp[1]:47 [ uctoa::digit#2 uctoa::digit#1 ] : zp[1]:47 , reg byte x , 
Potential registers zp[1]:48 [ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 ] : zp[1]:48 , reg byte x , reg byte y , 
Potential registers zp[1]:49 [ uctoa::started#2 uctoa::started#4 ] : zp[1]:49 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:50 [ uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 ] : zp[2]:50 , 
Potential registers zp[2]:52 [ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ] : zp[2]:52 , 
Potential registers zp[1]:54 [ utoa_append::digit#2 utoa_append::digit#1 ] : zp[1]:54 , reg byte x , reg byte y , 
Potential registers zp[2]:55 [ strlen::str#2 strlen::str#0 ] : zp[2]:55 , 
Potential registers zp[2]:57 [ strlen::len#2 strlen::len#1 ] : zp[2]:57 , 
Potential registers zp[1]:59 [ printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ] : zp[1]:59 , reg byte x , 
Potential registers zp[1]:60 [ printf_padding::pad#5 ] : zp[1]:60 , reg byte x , 
Potential registers zp[1]:61 [ printf_padding::i#2 printf_padding::i#1 ] : zp[1]:61 , reg byte x , 
Potential registers zp[2]:62 [ strupr::src#2 strupr::src#1 ] : zp[2]:62 , 
Potential registers zp[4]:64 [ ultoa_append::value#2 ultoa_append::value#0 ultoa_append::value#1 ] : zp[4]:64 , 
Potential registers zp[1]:68 [ ultoa_append::digit#2 ultoa_append::digit#1 ] : zp[1]:68 , reg byte x , reg byte y , 
Potential registers zp[1]:69 [ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ] : zp[1]:69 , reg byte x , 
Potential registers zp[1]:70 [ uctoa_append::digit#2 uctoa_append::digit#1 ] : zp[1]:70 , reg byte x , reg byte y , 
Potential registers zp[1]:71 [ toupper::return#2 toupper::return#0 toupper::ch#0 ] : zp[1]:71 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:72 [ memcpy::source#2 ] : zp[2]:72 , 
Potential registers zp[2]:74 [ memcpy::destination#2 ] : zp[2]:74 , 
Potential registers zp[2]:76 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ] : zp[2]:76 , 
Potential registers zp[2]:78 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] : zp[2]:78 , 
Potential registers zp[2]:80 [ memset::str#3 ] : zp[2]:80 , 
Potential registers zp[1]:82 [ memset::c#4 ] : zp[1]:82 , reg byte x , 
Potential registers zp[2]:83 [ memset::dst#2 memset::dst#4 memset::dst#1 ] : zp[2]:83 , 
Potential registers zp[1]:85 [ conio_cursor_x ] : zp[1]:85 , 
Potential registers zp[1]:86 [ conio_cursor_y ] : zp[1]:86 , 
Potential registers zp[2]:87 [ conio_line_text ] : zp[2]:87 , 
Potential registers zp[2]:89 [ conio_line_color ] : zp[2]:89 , 
Potential registers zp[4]:91 [ count ] : zp[4]:91 , 
Potential registers zp[1]:95 [ queen::row#0 ] : zp[1]:95 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:96 [ queen::r ] : zp[1]:96 , 
Potential registers zp[1]:97 [ queen::column ] : zp[1]:97 , 
Potential registers zp[1]:98 [ legal::row#0 ] : zp[1]:98 , reg byte x , reg byte y , 
Potential registers zp[1]:99 [ legal::column#0 ] : zp[1]:99 , reg byte x , reg byte y , 
Potential registers zp[1]:100 [ legal::return#0 ] : zp[1]:100 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:101 [ queen::$1 ] : zp[1]:101 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:102 [ queen::$4 ] : zp[1]:102 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:103 [ legal::$0 ] : zp[1]:103 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:104 [ diff::return#0 ] : zp[1]:104 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:105 [ legal::$3 ] : zp[1]:105 , reg byte x , reg byte y , 
Potential registers zp[1]:106 [ diff::return#1 ] : zp[1]:106 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:107 [ legal::$4 ] : zp[1]:107 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:108 [ gotoxy::$7 ] : zp[2]:108 , 
Potential registers zp[2]:110 [ gotoxy::$8 ] : zp[2]:110 , 
Potential registers zp[2]:112 [ gotoxy::$9 ] : zp[2]:112 , 
Potential registers zp[2]:114 [ gotoxy::line_offset#0 ] : zp[2]:114 , 
Potential registers zp[2]:116 [ gotoxy::$5 ] : zp[2]:116 , 
Potential registers zp[2]:118 [ gotoxy::$6 ] : zp[2]:118 , 
Potential registers zp[1]:120 [ cputs::c#1 ] : zp[1]:120 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:121 [ utoa::$11 ] : zp[1]:121 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:122 [ utoa::buffer#3 ] : zp[2]:122 , 
Potential registers zp[1]:124 [ utoa::$10 ] : zp[1]:124 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:125 [ utoa::digit_value#0 ] : zp[2]:125 , 
Potential registers zp[2]:127 [ utoa_append::buffer#0 ] : zp[2]:127 , 
Potential registers zp[2]:129 [ utoa_append::sub#0 ] : zp[2]:129 , 
Potential registers zp[2]:131 [ utoa_append::return#0 ] : zp[2]:131 , 
Potential registers zp[2]:133 [ strlen::return#2 ] : zp[2]:133 , 
Potential registers zp[2]:135 [ printf_number_buffer::$19 ] : zp[2]:135 , 
Potential registers zp[1]:137 [ ultoa::$11 ] : zp[1]:137 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:138 [ ultoa::buffer#3 ] : zp[2]:138 , 
Potential registers zp[1]:140 [ ultoa::$10 ] : zp[1]:140 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[4]:141 [ ultoa::digit_value#0 ] : zp[4]:141 , 
Potential registers zp[2]:145 [ ultoa_append::buffer#0 ] : zp[2]:145 , 
Potential registers zp[4]:147 [ ultoa_append::sub#0 ] : zp[4]:147 , 
Potential registers zp[4]:151 [ ultoa_append::return#0 ] : zp[4]:151 , 
Potential registers zp[2]:155 [ uctoa::buffer#3 ] : zp[2]:155 , 
Potential registers zp[1]:157 [ uctoa::digit_value#0 ] : zp[1]:157 , reg byte x , reg byte y , 
Potential registers zp[2]:158 [ uctoa_append::buffer#0 ] : zp[2]:158 , 
Potential registers zp[1]:160 [ uctoa_append::sub#0 ] : zp[1]:160 , reg byte x , reg byte y , 
Potential registers zp[1]:161 [ uctoa_append::return#0 ] : zp[1]:161 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:162 [ toupper::return#3 ] : zp[1]:162 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:163 [ strupr::$0 ] : zp[1]:163 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:164 [ memcpy::src_end#0 ] : zp[2]:164 , 
Potential registers zp[2]:166 [ memset::end#0 ] : zp[2]:166 , 
Potential registers mem[12] [ printf_buffer ] : mem[12] , 

REGISTER UPLIFT SCOPES
Uplift Scope [memcpy] 30,000,000,000,000,124,000,000,000,000,000,000,000,000,000,000: zp[2]:76 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ] 20,000,000,000,000,233,000,000,000,000,000,000,000,000,000,000: zp[2]:78 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] 1,250,000,000,000,012,500,000,000,000,000,000,000,000,000,000: zp[2]:164 [ memcpy::src_end#0 ] 0: zp[2]:72 [ memcpy::source#2 ] 0: zp[2]:74 [ memcpy::destination#2 ] 
Uplift Scope [memset] 33,333,333,333,333,566,000,000,000,000,000,000,000,000,000,000: zp[2]:83 [ memset::dst#2 memset::dst#4 memset::dst#1 ] 1,666,666,666,666,683,500,000,000,000,000,000,000,000,000,000: zp[2]:166 [ memset::end#0 ] 1,428,571,428,571,428,700,000,000,000,000,000,000,000,000,000: zp[1]:82 [ memset::c#4 ] 0: zp[2]:80 [ memset::str#3 ] 
Uplift Scope [uctoa_append] 25,000,000,000,000,550,000,000,000,000,000,000,000,000: zp[1]:69 [ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ] 20,000,000,000,000,500,000,000,000,000,000,000,000,000: zp[1]:70 [ uctoa_append::digit#2 uctoa_append::digit#1 ] 3,333,333,333,333,350,000,000,000,000,000,000,000,000: zp[1]:160 [ uctoa_append::sub#0 ] 200,000,000,000,000,000,000,000,000: zp[1]:161 [ uctoa_append::return#0 ] 137,500,000,000,000,010,000,000,000: zp[2]:158 [ uctoa_append::buffer#0 ] 
Uplift Scope [] 178,770,949,720,670,400,000,000,000,000: zp[1]:86 [ conio_cursor_y ] 130,769,230,769,230,770,000,000,000,000: zp[2]:89 [ conio_line_color ] 128,488,372,093,023,250,000,000,000,000: zp[2]:87 [ conio_line_text ] 9,146,341,463,414,634,000,000,000,000: zp[1]:85 [ conio_cursor_x ] 30,303,030,303.42: zp[4]:91 [ count ] 0: mem[12] [ printf_buffer ] 
Uplift Scope [cputc] 127,500,000,000,000,230,000,000,000,000: zp[1]:25 [ cputc::c#3 cputc::c#0 cputc::c#2 cputc::c#1 ] 
Uplift Scope [toupper] 47,333,333,333,333,330,000,000,000,000: zp[1]:71 [ toupper::return#2 toupper::return#0 toupper::ch#0 ] 2,000,000,000,000,000,000,000,000,000: zp[1]:162 [ toupper::return#3 ] 
Uplift Scope [cputs] 20,000,000,000,001,500,000,000,000,000: zp[2]:15 [ cputs::s#11 cputs::s#12 cputs::s#0 ] 10,000,000,000,000,000,000,000,000,000: zp[1]:120 [ cputs::c#1 ] 
Uplift Scope [ultoa_append] 2,500,000,000,000,550,000,000,000,000: zp[4]:64 [ ultoa_append::value#2 ultoa_append::value#0 ultoa_append::value#1 ] 2,000,000,000,000,500,000,000,000,000: zp[1]:68 [ ultoa_append::digit#2 ultoa_append::digit#1 ] 333,333,333,333,350,000,000,000,000: zp[4]:147 [ ultoa_append::sub#0 ] 200,000,000,000,002: zp[4]:151 [ ultoa_append::return#0 ] 137,500,000,000,000.25: zp[2]:145 [ ultoa_append::buffer#0 ] 
Uplift Scope [strupr] 2,714,285,714,285,714,000,000,000,000: zp[2]:62 [ strupr::src#2 strupr::src#1 ] 2,000,000,000,000,000,000,000,000,000: zp[1]:163 [ strupr::$0 ] 
Uplift Scope [strlen] 3,000,000,000,000,000,300,000,000,000: zp[2]:55 [ strlen::str#2 strlen::str#0 ] 1,500,000,000,000,025,000,000,000,000: zp[2]:57 [ strlen::len#2 strlen::len#1 ] 200,000,000,000,002: zp[2]:133 [ strlen::return#2 ] 
Uplift Scope [printf_padding] 2,750,000,000,000,000,400,000,000,000: zp[1]:61 [ printf_padding::i#2 printf_padding::i#1 ] 166,666,666,667,316,670,000,000,000: zp[1]:59 [ printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ] 166,666,666,666,666,660,000,000,000: zp[1]:60 [ printf_padding::pad#5 ] 
Uplift Scope [uctoa] 383,333,333,333,350,040,000,000,000: zp[2]:50 [ uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 ] 316,666,666,666,755,000,000,000,000: zp[1]:48 [ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 ] 230,769,230,769,230,770,000,000,000: zp[1]:47 [ uctoa::digit#2 uctoa::digit#1 ] 160,000,000,000,000,000,000,000,000: zp[1]:49 [ uctoa::started#2 uctoa::started#4 ] 60,000,000,000,000,010,000,000,000: zp[1]:157 [ uctoa::digit_value#0 ] 200,000,000,000,002: zp[2]:155 [ uctoa::buffer#3 ] 
Uplift Scope [ultoa] 378,571,428,571,575.4: zp[2]:45 [ ultoa::buffer#11 ultoa::buffer#14 ultoa::buffer#4 ] 307,142,857,143,554.25: zp[4]:40 [ ultoa::value#2 ultoa::value#6 ultoa::value#1 ultoa::value#0 ] 228,571,428,571,430.84: zp[1]:39 [ ultoa::digit#2 ultoa::digit#1 ] 200,000,000,000,002: zp[1]:140 [ ultoa::$10 ] 150,000,000,000,001.5: zp[1]:44 [ ultoa::started#2 ultoa::started#4 ] 60,000,000,000,000.59: zp[4]:141 [ ultoa::digit_value#0 ] 2,002: zp[1]:137 [ ultoa::$11 ] 2,002: zp[2]:138 [ ultoa::buffer#3 ] 
Uplift Scope [printf_number_buffer] 650,000,000,000,006.5: zp[1]:37 [ printf_number_buffer::len#2 printf_number_buffer::len#0 printf_number_buffer::len#1 ] 119,047,619,047,620.23: zp[1]:38 [ printf_number_buffer::padding#10 printf_number_buffer::padding#1 ] 100,000,000,000,001: zp[2]:135 [ printf_number_buffer::$19 ] 35,500,000,000,416.3: zp[1]:35 [ printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ] 10,000,000,000,000.1: zp[1]:32 [ printf_number_buffer::format_min_length#3 ] 9,375,000,000,000.09: zp[1]:34 [ printf_number_buffer::format_zero_padding#10 ] 6,451,612,903,225.87: zp[1]:33 [ printf_number_buffer::format_justify_left#10 ] 3,846,153,846,153.88: zp[1]:36 [ printf_number_buffer::format_upper_case#10 ] 
Uplift Scope [diff] 45,500,000,000,005: zp[1]:23 [ diff::return#4 diff::return#2 diff::return#3 ] 20,000,000,000,006.5: zp[1]:22 [ diff::b#2 diff::b#0 diff::b#1 ] 18,000,000,000,004.5: zp[1]:21 [ diff::a#2 diff::a#0 diff::a#1 ] 2,000,000,000,002: zp[1]:104 [ diff::return#0 ] 2,000,000,000,002: zp[1]:106 [ diff::return#1 ] 
Uplift Scope [print] 25,714,285,714,288.29: zp[1]:7 [ print::j#2 print::j#1 ] 3,000,000,000,003: zp[1]:5 [ print::i#2 print::i#1 ] 3,000,000,000,002.36: zp[1]:6 [ print::i1#2 print::i1#1 ] 
Uplift Scope [printf_uchar] 10,000,000,000,005.5: zp[1]:24 [ printf_uchar::uvalue#2 printf_uchar::uvalue#1 printf_uchar::uvalue#0 ] 
Uplift Scope [legal] 2,400,000,000,002.4: zp[1]:3 [ legal::i#2 legal::i#1 ] 2,000,000,000,002: zp[1]:100 [ legal::return#0 ] 2,000,000,000,002: zp[1]:103 [ legal::$0 ] 2,000,000,000,002: zp[1]:107 [ legal::$4 ] 333,333,333,333.67: zp[1]:4 [ legal::return#4 ] 333,333,333,333.67: zp[1]:105 [ legal::$3 ] 166,666,666,666.83: zp[1]:99 [ legal::column#0 ] 157,894,736,842.26: zp[1]:98 [ legal::row#0 ] 
Uplift Scope [queen] 2,000,000,000,002: zp[1]:101 [ queen::$1 ] 2,000,000,000,002: zp[1]:102 [ queen::$4 ] 294,117,647,065.06: zp[1]:97 [ queen::column ] 210,526,315,795: zp[1]:96 [ queen::r ] 202: zp[1]:95 [ queen::row#0 ] 
Uplift Scope [utoa_append] 25,055,003.5: zp[2]:52 [ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ] 20,050,002.5: zp[1]:54 [ utoa_append::digit#2 utoa_append::digit#1 ] 3,335,000.5: zp[2]:129 [ utoa_append::sub#0 ] 20,002: zp[2]:131 [ utoa_append::return#0 ] 13,750.25: zp[2]:127 [ utoa_append::buffer#0 ] 
Uplift Scope [utoa] 38,003.93: zp[2]:30 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ] 30,717.36: zp[2]:27 [ utoa::value#2 utoa::value#6 utoa::value#0 ] 22,859.43: zp[1]:26 [ utoa::digit#2 utoa::digit#1 ] 20,002: zp[1]:124 [ utoa::$10 ] 15,001.5: zp[1]:29 [ utoa::started#2 utoa::started#4 ] 6,000.6: zp[2]:125 [ utoa::digit_value#0 ] 2,002: zp[1]:121 [ utoa::$11 ] 2,002: zp[2]:122 [ utoa::buffer#3 ] 
Uplift Scope [clrscr] 32,503.25: zp[1]:14 [ clrscr::c#2 clrscr::c#1 ] 2,501.38: zp[2]:12 [ clrscr::line_cols#5 clrscr::line_cols#1 ] 2,382.05: zp[2]:10 [ clrscr::line_text#5 clrscr::line_text#1 ] 2,335.67: zp[1]:9 [ clrscr::l#2 clrscr::l#1 ] 
Uplift Scope [gotoxy] 202: zp[2]:110 [ gotoxy::$8 ] 202: zp[2]:112 [ gotoxy::$9 ] 202: zp[2]:116 [ gotoxy::$5 ] 202: zp[2]:118 [ gotoxy::$6 ] 160.33: zp[1]:8 [ gotoxy::y#5 gotoxy::y#4 gotoxy::y#2 ] 151.5: zp[2]:108 [ gotoxy::$7 ] 101: zp[2]:114 [ gotoxy::line_offset#0 ] 
Uplift Scope [printf_ulong] 105.5: zp[4]:17 [ printf_ulong::uvalue#2 printf_ulong::uvalue#0 printf_ulong::uvalue#1 ] 
Uplift Scope [conio_c64_init] 33: zp[1]:2 [ conio_c64_init::line#2 conio_c64_init::line#0 ] 
Uplift Scope [RADIX] 
Uplift Scope [cputln] 
Uplift Scope [MOS6526_CIA] 
Uplift Scope [MOS6569_VICII] 
Uplift Scope [MOS6581_SID] 
Uplift Scope [cscroll] 
Uplift Scope [printf_format_number] 
Uplift Scope [printf_buffer_number] 
Uplift Scope [printf_uint] 
Uplift Scope [printf_format_string] 
Uplift Scope [main] 
Uplift Scope [__start] 

Limited combination testing to 100 combinations of 256 possible.
Limited combination testing to 100 combinations of 1024 possible.
Limited combination testing to 100 combinations of 20736 possible.
Attempting to uplift remaining variables inzp[1]:82 [ memset::c#4 ]
Attempting to uplift remaining variables inzp[1]:69 [ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ]
Attempting to uplift remaining variables inzp[1]:70 [ uctoa_append::digit#2 uctoa_append::digit#1 ]
Attempting to uplift remaining variables inzp[1]:160 [ uctoa_append::sub#0 ]
Attempting to uplift remaining variables inzp[1]:86 [ conio_cursor_y ]
Attempting to uplift remaining variables inzp[1]:25 [ cputc::c#3 cputc::c#0 cputc::c#2 cputc::c#1 ]
Attempting to uplift remaining variables inzp[1]:71 [ toupper::return#2 toupper::return#0 toupper::ch#0 ]
Attempting to uplift remaining variables inzp[1]:120 [ cputs::c#1 ]
Attempting to uplift remaining variables inzp[1]:85 [ conio_cursor_x ]
Attempting to uplift remaining variables inzp[1]:61 [ printf_padding::i#2 printf_padding::i#1 ]
Attempting to uplift remaining variables inzp[1]:68 [ ultoa_append::digit#2 ultoa_append::digit#1 ]
Attempting to uplift remaining variables inzp[1]:162 [ toupper::return#3 ]
Attempting to uplift remaining variables inzp[1]:163 [ strupr::$0 ]
Attempting to uplift remaining variables inzp[1]:48 [ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 ]
Attempting to uplift remaining variables inzp[1]:47 [ uctoa::digit#2 uctoa::digit#1 ]
Attempting to uplift remaining variables inzp[1]:161 [ uctoa_append::return#0 ]
Attempting to uplift remaining variables inzp[1]:59 [ printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ]
Attempting to uplift remaining variables inzp[1]:60 [ printf_padding::pad#5 ]
Attempting to uplift remaining variables inzp[1]:49 [ uctoa::started#2 uctoa::started#4 ]
Attempting to uplift remaining variables inzp[1]:157 [ uctoa::digit_value#0 ]
Attempting to uplift remaining variables inzp[1]:37 [ printf_number_buffer::len#2 printf_number_buffer::len#0 printf_number_buffer::len#1 ]
Attempting to uplift remaining variables inzp[1]:39 [ ultoa::digit#2 ultoa::digit#1 ]
Attempting to uplift remaining variables inzp[1]:140 [ ultoa::$10 ]
Attempting to uplift remaining variables inzp[1]:44 [ ultoa::started#2 ultoa::started#4 ]
Attempting to uplift remaining variables inzp[1]:38 [ printf_number_buffer::padding#10 printf_number_buffer::padding#1 ]
Attempting to uplift remaining variables inzp[1]:23 [ diff::return#4 diff::return#2 diff::return#3 ]
Attempting to uplift remaining variables inzp[1]:35 [ printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ]
Attempting to uplift remaining variables inzp[1]:7 [ print::j#2 print::j#1 ]
Attempting to uplift remaining variables inzp[1]:22 [ diff::b#2 diff::b#0 diff::b#1 ]
Attempting to uplift remaining variables inzp[1]:21 [ diff::a#2 diff::a#0 diff::a#1 ]
Attempting to uplift remaining variables inzp[1]:24 [ printf_uchar::uvalue#2 printf_uchar::uvalue#1 printf_uchar::uvalue#0 ]
Attempting to uplift remaining variables inzp[1]:32 [ printf_number_buffer::format_min_length#3 ]
Attempting to uplift remaining variables inzp[1]:34 [ printf_number_buffer::format_zero_padding#10 ]
Attempting to uplift remaining variables inzp[1]:33 [ printf_number_buffer::format_justify_left#10 ]
Attempting to uplift remaining variables inzp[1]:36 [ printf_number_buffer::format_upper_case#10 ]
Attempting to uplift remaining variables inzp[1]:5 [ print::i#2 print::i#1 ]
Attempting to uplift remaining variables inzp[1]:6 [ print::i1#2 print::i1#1 ]
Attempting to uplift remaining variables inzp[1]:3 [ legal::i#2 legal::i#1 ]
Attempting to uplift remaining variables inzp[1]:100 [ legal::return#0 ]
Attempting to uplift remaining variables inzp[1]:101 [ queen::$1 ]
Attempting to uplift remaining variables inzp[1]:102 [ queen::$4 ]
Attempting to uplift remaining variables inzp[1]:103 [ legal::$0 ]
Attempting to uplift remaining variables inzp[1]:104 [ diff::return#0 ]
Attempting to uplift remaining variables inzp[1]:106 [ diff::return#1 ]
Attempting to uplift remaining variables inzp[1]:107 [ legal::$4 ]
Attempting to uplift remaining variables inzp[1]:4 [ legal::return#4 ]
Attempting to uplift remaining variables inzp[1]:105 [ legal::$3 ]
Attempting to uplift remaining variables inzp[1]:97 [ queen::column ]
Attempting to uplift remaining variables inzp[1]:96 [ queen::r ]
Attempting to uplift remaining variables inzp[1]:99 [ legal::column#0 ]
Attempting to uplift remaining variables inzp[1]:98 [ legal::row#0 ]
Attempting to uplift remaining variables inzp[1]:54 [ utoa_append::digit#2 utoa_append::digit#1 ]
Attempting to uplift remaining variables inzp[1]:14 [ clrscr::c#2 clrscr::c#1 ]
Attempting to uplift remaining variables inzp[1]:26 [ utoa::digit#2 utoa::digit#1 ]
Attempting to uplift remaining variables inzp[1]:124 [ utoa::$10 ]
Attempting to uplift remaining variables inzp[1]:29 [ utoa::started#2 utoa::started#4 ]
Attempting to uplift remaining variables inzp[1]:9 [ clrscr::l#2 clrscr::l#1 ]
Attempting to uplift remaining variables inzp[1]:121 [ utoa::$11 ]
Attempting to uplift remaining variables inzp[1]:137 [ ultoa::$11 ]
Attempting to uplift remaining variables inzp[1]:95 [ queen::row#0 ]
Attempting to uplift remaining variables inzp[1]:8 [ gotoxy::y#5 gotoxy::y#4 gotoxy::y#2 ]
Attempting to uplift remaining variables inzp[1]:2 [ conio_c64_init::line#2 conio_c64_init::line#0 ]
Coalescing zero page register [ zp[1]:21 [ diff::a#2 diff::a#0 diff::a#1 ] ] with [ zp[1]:23 [ diff::return#4 diff::return#2 diff::return#3 ] ] - score: 2
Coalescing zero page register [ zp[1]:2 [ conio_c64_init::line#2 conio_c64_init::line#0 ] ] with [ zp[1]:8 [ gotoxy::y#5 gotoxy::y#4 gotoxy::y#2 ] ] - score: 1
Coalescing zero page register [ zp[1]:4 [ legal::return#4 ] ] with [ zp[1]:100 [ legal::return#0 ] ] - score: 1
Coalescing zero page register [ zp[1]:5 [ print::i#2 print::i#1 ] ] with [ zp[1]:24 [ printf_uchar::uvalue#2 printf_uchar::uvalue#1 printf_uchar::uvalue#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:17 [ printf_ulong::uvalue#2 printf_ulong::uvalue#0 printf_ulong::uvalue#1 ] ] with [ zp[4]:40 [ ultoa::value#2 ultoa::value#6 ultoa::value#1 ultoa::value#0 ] ] - score: 1
Coalescing zero page register [ zp[1]:25 [ cputc::c#3 cputc::c#0 cputc::c#2 cputc::c#1 ] ] with [ zp[1]:60 [ printf_padding::pad#5 ] ] - score: 1
Coalescing zero page register [ zp[1]:25 [ cputc::c#3 cputc::c#0 cputc::c#2 cputc::c#1 printf_padding::pad#5 ] ] with [ zp[1]:120 [ cputs::c#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:27 [ utoa::value#2 utoa::value#6 utoa::value#0 ] ] with [ zp[2]:52 [ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:27 [ utoa::value#2 utoa::value#6 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ] ] with [ zp[2]:131 [ utoa_append::return#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:30 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ] ] with [ zp[2]:122 [ utoa::buffer#3 ] ] - score: 1
Coalescing zero page register [ zp[2]:30 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 ] ] with [ zp[2]:127 [ utoa_append::buffer#0 ] ] - score: 1
Coalescing zero page register [ zp[1]:32 [ printf_number_buffer::format_min_length#3 ] ] with [ zp[1]:38 [ printf_number_buffer::padding#10 printf_number_buffer::padding#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:45 [ ultoa::buffer#11 ultoa::buffer#14 ultoa::buffer#4 ] ] with [ zp[2]:138 [ ultoa::buffer#3 ] ] - score: 1
Coalescing zero page register [ zp[2]:45 [ ultoa::buffer#11 ultoa::buffer#14 ultoa::buffer#4 ultoa::buffer#3 ] ] with [ zp[2]:145 [ ultoa_append::buffer#0 ] ] - score: 1
Coalescing zero page register [ zp[1]:48 [ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 ] ] with [ zp[1]:69 [ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ] ] - score: 1
Coalescing zero page register [ zp[1]:48 [ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ] ] with [ zp[1]:161 [ uctoa_append::return#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:50 [ uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 ] ] with [ zp[2]:155 [ uctoa::buffer#3 ] ] - score: 1
Coalescing zero page register [ zp[2]:50 [ uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 uctoa::buffer#3 ] ] with [ zp[2]:158 [ uctoa_append::buffer#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:57 [ strlen::len#2 strlen::len#1 ] ] with [ zp[2]:133 [ strlen::return#2 ] ] - score: 1
Coalescing zero page register [ zp[4]:64 [ ultoa_append::value#2 ultoa_append::value#0 ultoa_append::value#1 ] ] with [ zp[4]:151 [ ultoa_append::return#0 ] ] - score: 1
Coalescing zero page register [ zp[1]:71 [ toupper::return#2 toupper::return#0 toupper::ch#0 ] ] with [ zp[1]:162 [ toupper::return#3 ] ] - score: 1
Coalescing zero page register [ zp[2]:72 [ memcpy::source#2 ] ] with [ zp[2]:76 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:74 [ memcpy::destination#2 ] ] with [ zp[2]:78 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:80 [ memset::str#3 ] ] with [ zp[2]:83 [ memset::dst#2 memset::dst#4 memset::dst#1 ] ] - score: 1
Coalescing zero page register [ zp[1]:104 [ diff::return#0 ] ] with [ zp[1]:105 [ legal::$3 ] ] - score: 1
Coalescing zero page register [ zp[1]:106 [ diff::return#1 ] ] with [ zp[1]:107 [ legal::$4 ] ] - score: 1
Coalescing zero page register [ zp[2]:108 [ gotoxy::$7 ] ] with [ zp[2]:112 [ gotoxy::$9 ] ] - score: 1
Coalescing zero page register [ zp[2]:114 [ gotoxy::line_offset#0 ] ] with [ zp[2]:118 [ gotoxy::$6 ] ] - score: 1
Coalescing zero page register [ zp[2]:125 [ utoa::digit_value#0 ] ] with [ zp[2]:129 [ utoa_append::sub#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:141 [ ultoa::digit_value#0 ] ] with [ zp[4]:147 [ ultoa_append::sub#0 ] ] - score: 1
Coalescing zero page register [ zp[1]:157 [ uctoa::digit_value#0 ] ] with [ zp[1]:160 [ uctoa_append::sub#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:17 [ printf_ulong::uvalue#2 printf_ulong::uvalue#0 printf_ulong::uvalue#1 ultoa::value#2 ultoa::value#6 ultoa::value#1 ultoa::value#0 ] ] with [ zp[4]:64 [ ultoa_append::value#2 ultoa_append::value#0 ultoa_append::value#1 ultoa_append::return#0 ] ] - score: 2
Coalescing zero page register [ zp[1]:4 [ legal::return#4 legal::return#0 ] ] with [ zp[1]:101 [ queen::$1 ] ] - score: 1
Coalescing zero page register [ zp[1]:5 [ print::i#2 print::i#1 printf_uchar::uvalue#2 printf_uchar::uvalue#1 printf_uchar::uvalue#0 ] ] with [ zp[1]:6 [ print::i1#2 print::i1#1 ] ] - score: 1
Coalescing zero page register [ zp[1]:21 [ diff::a#2 diff::a#0 diff::a#1 diff::return#4 diff::return#2 diff::return#3 ] ] with [ zp[1]:106 [ diff::return#1 legal::$4 ] ] - score: 1
Coalescing zero page register [ zp[2]:57 [ strlen::len#2 strlen::len#1 strlen::return#2 ] ] with [ zp[2]:135 [ printf_number_buffer::$19 ] ] - score: 1
Coalescing zero page register [ zp[1]:71 [ toupper::return#2 toupper::return#0 toupper::ch#0 toupper::return#3 ] ] with [ zp[1]:163 [ strupr::$0 ] ] - score: 1
Coalescing zero page register [ zp[2]:108 [ gotoxy::$7 gotoxy::$9 ] ] with [ zp[2]:114 [ gotoxy::line_offset#0 gotoxy::$6 ] ] - score: 1
Coalescing zero page register [ zp[1]:5 [ print::i#2 print::i#1 printf_uchar::uvalue#2 printf_uchar::uvalue#1 printf_uchar::uvalue#0 print::i1#2 print::i1#1 ] ] with [ zp[1]:3 [ legal::i#2 legal::i#1 ] ]
Coalescing zero page register [ zp[1]:9 [ clrscr::l#2 clrscr::l#1 ] ] with [ zp[1]:4 [ legal::return#4 legal::return#0 queen::$1 ] ]
Coalescing zero page register [ zp[1]:14 [ clrscr::c#2 clrscr::c#1 ] ] with [ zp[1]:7 [ print::j#2 print::j#1 ] ]
Coalescing zero page register [ zp[2]:15 [ cputs::s#11 cputs::s#12 cputs::s#0 ] ] with [ zp[2]:10 [ clrscr::line_text#5 clrscr::line_text#1 ] ]
Coalescing zero page register [ zp[1]:25 [ cputc::c#3 cputc::c#0 cputc::c#2 cputc::c#1 printf_padding::pad#5 cputs::c#1 ] ] with [ zp[1]:21 [ diff::a#2 diff::a#0 diff::a#1 diff::return#4 diff::return#2 diff::return#3 diff::return#1 legal::$4 ] ]
Coalescing zero page register [ zp[1]:26 [ utoa::digit#2 utoa::digit#1 ] ] with [ zp[1]:22 [ diff::b#2 diff::b#0 diff::b#1 ] ]
Coalescing zero page register [ zp[2]:27 [ utoa::value#2 utoa::value#6 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 utoa_append::return#0 ] ] with [ zp[2]:12 [ clrscr::line_cols#5 clrscr::line_cols#1 ] ]
Coalescing zero page register [ zp[1]:32 [ printf_number_buffer::format_min_length#3 printf_number_buffer::padding#10 printf_number_buffer::padding#1 ] ] with [ zp[1]:29 [ utoa::started#2 utoa::started#4 ] ]
Coalescing zero page register [ zp[1]:39 [ ultoa::digit#2 ultoa::digit#1 ] ] with [ zp[1]:33 [ printf_number_buffer::format_justify_left#10 ] ]
Coalescing zero page register [ zp[1]:44 [ ultoa::started#2 ultoa::started#4 ] ] with [ zp[1]:34 [ printf_number_buffer::format_zero_padding#10 ] ]
Coalescing zero page register [ zp[2]:45 [ ultoa::buffer#11 ultoa::buffer#14 ultoa::buffer#4 ultoa::buffer#3 ultoa_append::buffer#0 ] ] with [ zp[2]:30 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 ] ]
Coalescing zero page register [ zp[1]:47 [ uctoa::digit#2 uctoa::digit#1 ] ] with [ zp[1]:35 [ printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ] ]
Coalescing zero page register [ zp[1]:48 [ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 uctoa_append::return#0 ] ] with [ zp[1]:36 [ printf_number_buffer::format_upper_case#10 ] ]
Coalescing zero page register [ zp[1]:49 [ uctoa::started#2 uctoa::started#4 ] ] with [ zp[1]:37 [ printf_number_buffer::len#2 printf_number_buffer::len#0 printf_number_buffer::len#1 ] ]
Coalescing zero page register [ zp[2]:55 [ strlen::str#2 strlen::str#0 ] ] with [ zp[2]:50 [ uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 uctoa::buffer#3 uctoa_append::buffer#0 ] ]
Coalescing zero page register [ zp[1]:59 [ printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ] ] with [ zp[1]:54 [ utoa_append::digit#2 utoa_append::digit#1 ] ]
Coalescing zero page register [ zp[1]:68 [ ultoa_append::digit#2 ultoa_append::digit#1 ] ] with [ zp[1]:61 [ printf_padding::i#2 printf_padding::i#1 ] ]
Coalescing zero page register [ zp[1]:71 [ toupper::return#2 toupper::return#0 toupper::ch#0 toupper::return#3 strupr::$0 ] ] with [ zp[1]:70 [ uctoa_append::digit#2 uctoa_append::digit#1 ] ]
Coalescing zero page register [ zp[2]:72 [ memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 ] ] with [ zp[2]:62 [ strupr::src#2 strupr::src#1 ] ]
Coalescing zero page register [ zp[2]:80 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 ] ] with [ zp[2]:74 [ memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] ]
Coalescing zero page register [ zp[1]:95 [ queen::row#0 ] ] with [ zp[1]:82 [ memset::c#4 ] ]
Coalescing zero page register [ zp[1]:102 [ queen::$4 ] ] with [ zp[1]:98 [ legal::row#0 ] ]
Coalescing zero page register [ zp[1]:121 [ utoa::$11 ] ] with [ zp[1]:99 [ legal::column#0 ] ]
Coalescing zero page register [ zp[1]:124 [ utoa::$10 ] ] with [ zp[1]:103 [ legal::$0 ] ]
Coalescing zero page register [ zp[2]:125 [ utoa::digit_value#0 utoa_append::sub#0 ] ] with [ zp[2]:57 [ strlen::len#2 strlen::len#1 strlen::return#2 printf_number_buffer::$19 ] ]
Coalescing zero page register [ zp[1]:137 [ ultoa::$11 ] ] with [ zp[1]:104 [ diff::return#0 legal::$3 ] ]
Coalescing zero page register [ zp[1]:157 [ uctoa::digit_value#0 uctoa_append::sub#0 ] ] with [ zp[1]:140 [ ultoa::$10 ] ]
Coalescing zero page register [ zp[2]:166 [ memset::end#0 ] ] with [ zp[2]:164 [ memcpy::src_end#0 ] ]
Coalescing zero page register [ zp[1]:26 [ utoa::digit#2 utoa::digit#1 diff::b#2 diff::b#0 diff::b#1 ] ] with [ zp[1]:14 [ clrscr::c#2 clrscr::c#1 print::j#2 print::j#1 ] ]
Coalescing zero page register [ zp[2]:45 [ ultoa::buffer#11 ultoa::buffer#14 ultoa::buffer#4 ultoa::buffer#3 ultoa_append::buffer#0 utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 ] ] with [ zp[2]:15 [ cputs::s#11 cputs::s#12 cputs::s#0 clrscr::line_text#5 clrscr::line_text#1 ] ]
Coalescing zero page register [ zp[1]:49 [ uctoa::started#2 uctoa::started#4 printf_number_buffer::len#2 printf_number_buffer::len#0 printf_number_buffer::len#1 ] ] with [ zp[1]:25 [ cputc::c#3 cputc::c#0 cputc::c#2 cputc::c#1 printf_padding::pad#5 cputs::c#1 diff::a#2 diff::a#0 diff::a#1 diff::return#4 diff::return#2 diff::return#3 diff::return#1 legal::$4 ] ]
Coalescing zero page register [ zp[2]:55 [ strlen::str#2 strlen::str#0 uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 uctoa::buffer#3 uctoa_append::buffer#0 ] ] with [ zp[2]:27 [ utoa::value#2 utoa::value#6 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 utoa_append::return#0 clrscr::line_cols#5 clrscr::line_cols#1 ] ]
Coalescing zero page register [ zp[1]:71 [ toupper::return#2 toupper::return#0 toupper::ch#0 toupper::return#3 strupr::$0 uctoa_append::digit#2 uctoa_append::digit#1 ] ] with [ zp[1]:59 [ printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 utoa_append::digit#2 utoa_append::digit#1 ] ]
Coalescing zero page register [ zp[1]:102 [ queen::$4 legal::row#0 ] ] with [ zp[1]:32 [ printf_number_buffer::format_min_length#3 printf_number_buffer::padding#10 printf_number_buffer::padding#1 utoa::started#2 utoa::started#4 ] ]
Coalescing zero page register [ zp[1]:121 [ utoa::$11 legal::column#0 ] ] with [ zp[1]:39 [ ultoa::digit#2 ultoa::digit#1 printf_number_buffer::format_justify_left#10 ] ]
Coalescing zero page register [ zp[1]:124 [ utoa::$10 legal::$0 ] ] with [ zp[1]:44 [ ultoa::started#2 ultoa::started#4 printf_number_buffer::format_zero_padding#10 ] ]
Coalescing zero page register [ zp[2]:125 [ utoa::digit_value#0 utoa_append::sub#0 strlen::len#2 strlen::len#1 strlen::return#2 printf_number_buffer::$19 ] ] with [ zp[2]:72 [ memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 strupr::src#2 strupr::src#1 ] ]
Coalescing zero page register [ zp[1]:137 [ ultoa::$11 diff::return#0 legal::$3 ] ] with [ zp[1]:47 [ uctoa::digit#2 uctoa::digit#1 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ] ]
Coalescing zero page register [ zp[1]:157 [ uctoa::digit_value#0 uctoa_append::sub#0 ultoa::$10 ] ] with [ zp[1]:68 [ ultoa_append::digit#2 ultoa_append::digit#1 printf_padding::i#2 printf_padding::i#1 ] ]
Coalescing zero page register [ zp[2]:80 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] ] with [ zp[2]:55 [ strlen::str#2 strlen::str#0 uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 uctoa::buffer#3 uctoa_append::buffer#0 utoa::value#2 utoa::value#6 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 utoa_append::return#0 clrscr::line_cols#5 clrscr::line_cols#1 ] ]
Allocated (was zp[1]:5) zp[1]:3 [ print::i#2 print::i#1 printf_uchar::uvalue#2 printf_uchar::uvalue#1 printf_uchar::uvalue#0 print::i1#2 print::i1#1 legal::i#2 legal::i#1 ]
Allocated (was zp[1]:9) zp[1]:4 [ clrscr::l#2 clrscr::l#1 legal::return#4 legal::return#0 queen::$1 ]
Allocated (was zp[4]:17) zp[4]:5 [ printf_ulong::uvalue#2 printf_ulong::uvalue#0 printf_ulong::uvalue#1 ultoa::value#2 ultoa::value#6 ultoa::value#1 ultoa::value#0 ultoa_append::value#2 ultoa_append::value#0 ultoa_append::value#1 ultoa_append::return#0 ]
Allocated (was zp[1]:26) zp[1]:9 [ utoa::digit#2 utoa::digit#1 diff::b#2 diff::b#0 diff::b#1 clrscr::c#2 clrscr::c#1 print::j#2 print::j#1 ]
Allocated (was zp[2]:45) zp[2]:10 [ ultoa::buffer#11 ultoa::buffer#14 ultoa::buffer#4 ultoa::buffer#3 ultoa_append::buffer#0 utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 cputs::s#11 cputs::s#12 cputs::s#0 clrscr::line_text#5 clrscr::line_text#1 ]
Allocated (was zp[1]:48) zp[1]:12 [ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 uctoa_append::return#0 printf_number_buffer::format_upper_case#10 ]
Allocated (was zp[1]:49) zp[1]:13 [ uctoa::started#2 uctoa::started#4 printf_number_buffer::len#2 printf_number_buffer::len#0 printf_number_buffer::len#1 cputc::c#3 cputc::c#0 cputc::c#2 cputc::c#1 printf_padding::pad#5 cputs::c#1 diff::a#2 diff::a#0 diff::a#1 diff::return#4 diff::return#2 diff::return#3 diff::return#1 legal::$4 ]
Allocated (was zp[1]:71) zp[1]:14 [ toupper::return#2 toupper::return#0 toupper::ch#0 toupper::return#3 strupr::$0 uctoa_append::digit#2 uctoa_append::digit#1 printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 utoa_append::digit#2 utoa_append::digit#1 ]
Allocated (was zp[2]:80) zp[2]:15 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 strlen::str#2 strlen::str#0 uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 uctoa::buffer#3 uctoa_append::buffer#0 utoa::value#2 utoa::value#6 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 utoa_append::return#0 clrscr::line_cols#5 clrscr::line_cols#1 ]
Allocated (was zp[1]:85) zp[1]:17 [ conio_cursor_x ]
Allocated (was zp[1]:86) zp[1]:18 [ conio_cursor_y ]
Allocated (was zp[2]:87) zp[2]:19 [ conio_line_text ]
Allocated (was zp[2]:89) zp[2]:21 [ conio_line_color ]
Allocated (was zp[4]:91) zp[4]:23 [ count ]
Allocated (was zp[1]:95) zp[1]:27 [ queen::row#0 memset::c#4 ]
Allocated (was zp[1]:96) zp[1]:28 [ queen::r ]
Allocated (was zp[1]:97) zp[1]:29 [ queen::column ]
Allocated (was zp[1]:102) zp[1]:30 [ queen::$4 legal::row#0 printf_number_buffer::format_min_length#3 printf_number_buffer::padding#10 printf_number_buffer::padding#1 utoa::started#2 utoa::started#4 ]
Allocated (was zp[2]:108) zp[2]:31 [ gotoxy::$7 gotoxy::$9 gotoxy::line_offset#0 gotoxy::$6 ]
Allocated (was zp[2]:110) zp[2]:33 [ gotoxy::$8 ]
Allocated (was zp[2]:116) zp[2]:35 [ gotoxy::$5 ]
Allocated (was zp[1]:121) zp[1]:37 [ utoa::$11 legal::column#0 ultoa::digit#2 ultoa::digit#1 printf_number_buffer::format_justify_left#10 ]
Allocated (was zp[1]:124) zp[1]:38 [ utoa::$10 legal::$0 ultoa::started#2 ultoa::started#4 printf_number_buffer::format_zero_padding#10 ]
Allocated (was zp[2]:125) zp[2]:39 [ utoa::digit_value#0 utoa_append::sub#0 strlen::len#2 strlen::len#1 strlen::return#2 printf_number_buffer::$19 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 strupr::src#2 strupr::src#1 ]
Allocated (was zp[1]:137) zp[1]:41 [ ultoa::$11 diff::return#0 legal::$3 uctoa::digit#2 uctoa::digit#1 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ]
Allocated (was zp[4]:141) zp[4]:42 [ ultoa::digit_value#0 ultoa_append::sub#0 ]
Allocated (was zp[1]:157) zp[1]:46 [ uctoa::digit_value#0 uctoa_append::sub#0 ultoa::$10 ultoa_append::digit#2 ultoa_append::digit#1 printf_padding::i#2 printf_padding::i#1 ]
Allocated (was zp[2]:166) zp[2]:47 [ memset::end#0 memcpy::src_end#0 ]

ASSEMBLER BEFORE OPTIMIZATION
  // File Comments
// N Queens Problem in C Using Backtracking
//
// N Queens Problem is a famous puzzle in which n-queens are to be placed on a nxn chess board such that no two queens are in the same row, column or diagonal.  
//
// This is a recursive solution
  // Upstart
  // Commodore 64 PRG executable file
.file [name="eightqueens-recursive.prg", type="prg", segments="Program"]
.segmentdef Program [segments="Basic, Code, Data"]
.segmentdef Basic [start=$0801]
.segmentdef Code [start=$80d]
.segmentdef Data [startAfter="Code"]
.segment Basic
:BasicUpstart(__start)
  // Global Constants & labels
  .const LIGHT_BLUE = $e
  .const OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
  .const STACK_BASE = $103
  .const SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
  // Color Ram
  .label COLORRAM = $d800
  // Default address of screen character matrix
  .label DEFAULT_SCREEN = $400
  // The number of bytes on the screen
  // The current cursor x-position
  .label conio_cursor_x = $11
  // The current cursor y-position
  .label conio_cursor_y = $12
  // The current text cursor line start
  .label conio_line_text = $13
  // The current color cursor line start
  .label conio_line_color = $15
  // The number of found solutions
  .label count = $17
.segment Code
  // __start
__start: {
    jmp __init1
    // __start::__init1
  __init1:
    // [1] conio_cursor_x = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // [2] conio_cursor_y = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_y
    // [3] conio_line_text = DEFAULT_SCREEN -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z conio_line_text
    lda #>DEFAULT_SCREEN
    sta.z conio_line_text+1
    // [4] conio_line_color = COLORRAM -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z conio_line_color
    lda #>COLORRAM
    sta.z conio_line_color+1
    // [5] count = 0 -- vduz1=vduc1 
    lda #<0
    sta.z count
    lda #>0
    sta.z count+1
    lda #<0>>$10
    sta.z count+2
    lda #>0>>$10
    sta.z count+3
    // [6] call conio_c64_init 
    jsr conio_c64_init
    // [7] phi from __start::__init1 to __start::@1 [phi:__start::__init1->__start::@1]
  __b1_from___init1:
    jmp __b1
    // __start::@1
  __b1:
    // [8] call main 
    // [39] phi from __start::@1 to main [phi:__start::@1->main]
  main_from___b1:
    jsr main
    jmp __breturn
    // __start::@return
  __breturn:
    // [9] return 
    rts
}
  // queen
// Generates all valid placements of queens on a NxN board recursively
// Works by generating all legal placements af a queen for a specific row taking into consideration the queens already placed on the rows below 
// and then recursively generating all legal placements on the rows above.  
// queen(byte zp($1b) row)
queen: {
    .const OFFSET_STACK_ROW = 0
    .label r = $1c
    .label column = $1d
    .label __1 = 4
    .label __4 = $1e
    .label row = $1b
    // [10] queen::row#0 = stackidx(byte,queen::OFFSET_STACK_ROW) -- vbuz1=_stackidxbyte_vbuc1 
    tsx
    lda STACK_BASE+OFFSET_STACK_ROW,x
    sta.z row
    // [11] queen::r = queen::row#0 -- vbuz1=vbuz2 
    lda.z row
    sta.z r
    // [12] queen::column = 1 -- vbuz1=vbuc1 
    lda #1
    sta.z column
    jmp __b1
    // queen::@1
  __b1:
    // [13] if(queen::column<8+1) goto queen::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z column
    cmp #8+1
    bcc __b2
    jmp __breturn
    // queen::@return
  __breturn:
    // [14] return 
    rts
    // queen::@2
  __b2:
    // [15] legal::row#0 = queen::r -- vbuz1=vbuz2 
    lda.z r
    sta.z legal.row
    // [16] legal::column#0 = queen::column -- vbuz1=vbuz2 
    lda.z column
    sta.z legal.column
    // [17] call legal 
    // [56] phi from queen::@2 to legal [phi:queen::@2->legal]
  legal_from___b2:
    jsr legal
    // [18] legal::return#0 = legal::return#4
    jmp __b7
    // queen::@7
  __b7:
    // [19] queen::$1 = legal::return#0
    // [20] if(0==queen::$1) goto queen::@3 -- 0_eq_vbuz1_then_la1 
    lda.z __1
    beq __b3
    jmp __b5
    // queen::@5
  __b5:
    // [21] board[queen::r] = queen::column -- pbuc1_derefidx_vbuz1=vbuz2 
    //no conflicts so place queen
    lda.z column
    ldy.z r
    sta board,y
    // [22] if(queen::r==8) goto queen::@4 -- vbuz1_eq_vbuc1_then_la1 
    lda #8
    cmp.z r
    beq __b4
    jmp __b6
    // queen::@6
  __b6:
    // asm { ldacolumn pha ldar pha  }
    // Perform recussive placement on rows above
    // Push the local vars on the stack (waiting for proper recursion support)
    lda column
    pha
    lda r
    pha
    // [24] queen::$4 = queen::r + 1 -- vbuz1=vbuz2_plus_1 
    ldy.z r
    iny
    sty.z __4
    // [25] stackpush(byte) = queen::$4 -- _stackpushbyte_=vbuz1 
    // Do recursion        
    lda.z __4
    pha
    // [26] callexecute queen  -- jsr 
    jsr queen
    // sideeffect stackpullbytes(1) -- _stackpullbyte_1 
    pla
    // asm { pla star pla stacolumn  }
    // Pop the local vars on the stack (waiting for proper recursion support)
    pla
    sta r
    pla
    sta column
    jmp __b3
    // queen::@3
  __b3:
    // [29] queen::column = ++ queen::column -- vbuz1=_inc_vbuz1 
    inc.z column
    jmp __b1
    // queen::@4
  __b4:
    // [30] count = ++ count -- vduz1=_inc_vduz1 
    inc.z count
    bne !+
    inc.z count+1
    bne !+
    inc.z count+2
    bne !+
    inc.z count+3
  !:
    // [31] call print 
    // [75] phi from queen::@4 to print [phi:queen::@4->print]
  print_from___b4:
    jsr print
    jmp __b3
}
  // conio_c64_init
// Set initial cursor position
conio_c64_init: {
    // Position cursor at current line
    .label BASIC_CURSOR_LINE = $d6
    .label line = 2
    // [32] conio_c64_init::line#0 = *conio_c64_init::BASIC_CURSOR_LINE -- vbuz1=_deref_pbuc1 
    lda BASIC_CURSOR_LINE
    sta.z line
    // [33] if(conio_c64_init::line#0<$19) goto conio_c64_init::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z line
    cmp #$19
    bcc __b2_from_conio_c64_init
    // [35] phi from conio_c64_init to conio_c64_init::@1 [phi:conio_c64_init->conio_c64_init::@1]
  __b1_from_conio_c64_init:
    // [35] phi conio_c64_init::line#2 = $19-1 [phi:conio_c64_init->conio_c64_init::@1#0] -- vbuz1=vbuc1 
    lda #$19-1
    sta.z line
    jmp __b1
    // [34] phi from conio_c64_init to conio_c64_init::@2 [phi:conio_c64_init->conio_c64_init::@2]
  __b2_from_conio_c64_init:
    jmp __b2
    // conio_c64_init::@2
  __b2:
    // [35] phi from conio_c64_init::@2 to conio_c64_init::@1 [phi:conio_c64_init::@2->conio_c64_init::@1]
  __b1_from___b2:
    // [35] phi conio_c64_init::line#2 = conio_c64_init::line#0 [phi:conio_c64_init::@2->conio_c64_init::@1#0] -- register_copy 
    jmp __b1
    // conio_c64_init::@1
  __b1:
    // [36] gotoxy::y#2 = conio_c64_init::line#2
    // [37] call gotoxy 
    // [104] phi from conio_c64_init::@1 to gotoxy [phi:conio_c64_init::@1->gotoxy]
  gotoxy_from___b1:
    // [104] phi gotoxy::y#4 = gotoxy::y#2 [phi:conio_c64_init::@1->gotoxy#0] -- register_copy 
    jsr gotoxy
    jmp __breturn
    // conio_c64_init::@return
  __breturn:
    // [38] return 
    rts
}
  // main
main: {
    // [40] call clrscr 
    // [119] phi from main to clrscr [phi:main->clrscr]
  clrscr_from_main:
    jsr clrscr
    // [41] phi from main to main::@1 [phi:main->main::@1]
  __b1_from_main:
    jmp __b1
    // main::@1
  __b1:
    // [42] call cputs 
    // [135] phi from main::@1 to cputs [phi:main::@1->cputs]
  cputs_from___b1:
    // [135] phi cputs::s#12 = main::s [phi:main::@1->cputs#0] -- pbuz1=pbuc1 
    lda #<s
    sta.z cputs.s
    lda #>s
    sta.z cputs.s+1
    jsr cputs
    // [43] phi from main::@1 to main::@2 [phi:main::@1->main::@2]
  __b2_from___b1:
    jmp __b2
    // main::@2
  __b2:
    // [44] call cputs 
    // [135] phi from main::@2 to cputs [phi:main::@2->cputs]
  cputs_from___b2:
    // [135] phi cputs::s#12 = main::s1 [phi:main::@2->cputs#0] -- pbuz1=pbuc1 
    lda #<s1
    sta.z cputs.s
    lda #>s1
    sta.z cputs.s+1
    jsr cputs
    // [45] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  __b3_from___b2:
    jmp __b3
    // main::@3
  __b3:
    // [46] call printf_uint 
    // [143] phi from main::@3 to printf_uint [phi:main::@3->printf_uint]
  printf_uint_from___b3:
    jsr printf_uint
    jmp __b4
    // main::@4
  __b4:
    // [47] stackpush(byte) = 1 -- _stackpushbyte_=vbuc1 
    lda #1
    pha
    // [48] callexecute queen  -- jsr 
    jsr queen
    // sideeffect stackpullbytes(1) -- _stackpullbyte_1 
    pla
    // [50] call cputs 
    // [135] phi from main::@4 to cputs [phi:main::@4->cputs]
  cputs_from___b4:
    // [135] phi cputs::s#12 = main::s2 [phi:main::@4->cputs#0] -- pbuz1=pbuc1 
    lda #<s2
    sta.z cputs.s
    lda #>s2
    sta.z cputs.s+1
    jsr cputs
    jmp __b5
    // main::@5
  __b5:
    // [51] printf_ulong::uvalue#0 = count -- vduz1=vduz2 
    lda.z count
    sta.z printf_ulong.uvalue
    lda.z count+1
    sta.z printf_ulong.uvalue+1
    lda.z count+2
    sta.z printf_ulong.uvalue+2
    lda.z count+3
    sta.z printf_ulong.uvalue+3
    // [52] call printf_ulong 
    // [149] phi from main::@5 to printf_ulong [phi:main::@5->printf_ulong]
  printf_ulong_from___b5:
    // [149] phi printf_ulong::uvalue#2 = printf_ulong::uvalue#0 [phi:main::@5->printf_ulong#0] -- register_copy 
    jsr printf_ulong
    // [53] phi from main::@5 to main::@6 [phi:main::@5->main::@6]
  __b6_from___b5:
    jmp __b6
    // main::@6
  __b6:
    // [54] call cputs 
    // [135] phi from main::@6 to cputs [phi:main::@6->cputs]
  cputs_from___b6:
    // [135] phi cputs::s#12 = main::s3 [phi:main::@6->cputs#0] -- pbuz1=pbuc1 
    lda #<s3
    sta.z cputs.s
    lda #>s3
    sta.z cputs.s+1
    jsr cputs
    jmp __breturn
    // main::@return
  __breturn:
    // [55] return 
    rts
  .segment Data
    s: .text " - n queens problem using backtracking -"
    .byte 0
    s1: .text @"\nnumber of queens:"
    .byte 0
    s2: .text @"\n\nsolutions: "
    .byte 0
    s3: .text @".\n"
    .byte 0
}
.segment Code
  // legal
// Checks is a placement of the queen on the board is legal.
// Checks the passed (row, column) against all queens placed on the board on lower rows.
// If no conflict for desired position returns 1 otherwise returns 0
// legal(byte zp($1e) row, byte zp($25) column)
legal: {
    .label __0 = $26
    .label __3 = $29
    .label __4 = $d
    .label row = $1e
    .label column = $25
    // Placement is legal
    // The same column is a conflict.
    // The same diagonal is a conflict.
    .label return = 4
    .label i = 3
    // [57] phi from legal to legal::@1 [phi:legal->legal::@1]
  __b1_from_legal:
    // [57] phi legal::i#2 = 1 [phi:legal->legal::@1#0] -- vbuz1=vbuc1 
    lda #1
    sta.z i
    jmp __b1
    // legal::@1
  __b1:
    // [58] legal::$0 = legal::row#0 - 1 -- vbuz1=vbuz2_minus_1 
    ldx.z row
    dex
    stx.z __0
    // [59] if(legal::i#2<=legal::$0) goto legal::@2 -- vbuz1_le_vbuz2_then_la1 
    lda.z __0
    cmp.z i
    bcs __b2
    // [60] phi from legal::@1 to legal::@return [phi:legal::@1->legal::@return]
  __breturn_from___b1:
    // [60] phi legal::return#4 = 1 [phi:legal::@1->legal::@return#0] -- vbuz1=vbuc1 
    lda #1
    sta.z return
    jmp __breturn
    // [60] phi from legal::@2 legal::@6 to legal::@return [phi:legal::@2/legal::@6->legal::@return]
  __breturn_from___b2:
  __breturn_from___b6:
    // [60] phi legal::return#4 = 0 [phi:legal::@2/legal::@6->legal::@return#0] -- vbuz1=vbuc1 
    lda #0
    sta.z return
    jmp __breturn
    // legal::@return
  __breturn:
    // [61] return 
    rts
    // legal::@2
  __b2:
    // [62] if(board[legal::i#2]==legal::column#0) goto legal::@return -- pbuc1_derefidx_vbuz1_eq_vbuz2_then_la1 
    ldy.z i
    lda board,y
    cmp.z column
    beq __breturn_from___b2
    jmp __b4
    // legal::@4
  __b4:
    // [63] diff::a#0 = board[legal::i#2] -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy.z i
    lda board,y
    sta.z diff.a
    // [64] diff::b#0 = legal::column#0 -- vbuz1=vbuz2 
    lda.z column
    sta.z diff.b
    // [65] call diff 
    // [156] phi from legal::@4 to diff [phi:legal::@4->diff]
  diff_from___b4:
    // [156] phi diff::b#2 = diff::b#0 [phi:legal::@4->diff#0] -- register_copy 
    // [156] phi diff::a#2 = diff::a#0 [phi:legal::@4->diff#1] -- register_copy 
    jsr diff
    // [66] diff::return#0 = diff::return#4 -- vbuz1=vbuz2 
    lda.z diff.return_1
    sta.z diff.return
    jmp __b5
    // legal::@5
  __b5:
    // [67] legal::$3 = diff::return#0
    // [68] diff::a#1 = legal::i#2 -- vbuz1=vbuz2 
    lda.z i
    sta.z diff.a
    // [69] diff::b#1 = legal::row#0 -- vbuz1=vbuz2 
    lda.z row
    sta.z diff.b
    // [70] call diff 
    // [156] phi from legal::@5 to diff [phi:legal::@5->diff]
  diff_from___b5:
    // [156] phi diff::b#2 = diff::b#1 [phi:legal::@5->diff#0] -- register_copy 
    // [156] phi diff::a#2 = diff::a#1 [phi:legal::@5->diff#1] -- register_copy 
    jsr diff
    // [71] diff::return#1 = diff::return#4
    jmp __b6
    // legal::@6
  __b6:
    // [72] legal::$4 = diff::return#1
    // [73] if(legal::$3!=legal::$4) goto legal::@3 -- vbuz1_neq_vbuz2_then_la1 
    lda.z __3
    cmp.z __4
    bne __b3
    jmp __breturn_from___b6
    // legal::@3
  __b3:
    // [74] legal::i#1 = ++ legal::i#2 -- vbuz1=_inc_vbuz1 
    inc.z i
    // [57] phi from legal::@3 to legal::@1 [phi:legal::@3->legal::@1]
  __b1_from___b3:
    // [57] phi legal::i#2 = legal::i#1 [phi:legal::@3->legal::@1#0] -- register_copy 
    jmp __b1
}
  // print
// Print the board with a legal placement. Also increments the solution count.
print: {
    .label i = 3
    .label i1 = 3
    .label j = 9
    // [76] call gotoxy 
    // [104] phi from print to gotoxy [phi:print->gotoxy]
  gotoxy_from_print:
    // [104] phi gotoxy::y#4 = 5 [phi:print->gotoxy#0] -- vbuz1=vbuc1 
    lda #5
    sta.z gotoxy.y
    jsr gotoxy
    // [77] phi from print to print::@11 [phi:print->print::@11]
  __b11_from_print:
    jmp __b11
    // print::@11
  __b11:
    // [78] call cputs 
    // [135] phi from print::@11 to cputs [phi:print::@11->cputs]
  cputs_from___b11:
    // [135] phi cputs::s#12 = print::s [phi:print::@11->cputs#0] -- pbuz1=pbuc1 
    lda #<s
    sta.z cputs.s
    lda #>s
    sta.z cputs.s+1
    jsr cputs
    jmp __b12
    // print::@12
  __b12:
    // [79] printf_ulong::uvalue#1 = count -- vduz1=vduz2 
    lda.z count
    sta.z printf_ulong.uvalue
    lda.z count+1
    sta.z printf_ulong.uvalue+1
    lda.z count+2
    sta.z printf_ulong.uvalue+2
    lda.z count+3
    sta.z printf_ulong.uvalue+3
    // [80] call printf_ulong 
    // [149] phi from print::@12 to printf_ulong [phi:print::@12->printf_ulong]
  printf_ulong_from___b12:
    // [149] phi printf_ulong::uvalue#2 = printf_ulong::uvalue#1 [phi:print::@12->printf_ulong#0] -- register_copy 
    jsr printf_ulong
    // [81] phi from print::@12 to print::@13 [phi:print::@12->print::@13]
  __b13_from___b12:
    jmp __b13
    // print::@13
  __b13:
    // [82] call cputs 
    // [135] phi from print::@13 to cputs [phi:print::@13->cputs]
  cputs_from___b13:
    // [135] phi cputs::s#12 = print::s1 [phi:print::@13->cputs#0] -- pbuz1=pbuc1 
    lda #<s1
    sta.z cputs.s
    lda #>s1
    sta.z cputs.s+1
    jsr cputs
    // [83] phi from print::@13 to print::@1 [phi:print::@13->print::@1]
  __b1_from___b13:
    // [83] phi print::i#2 = 1 [phi:print::@13->print::@1#0] -- vbuz1=vbuc1 
    lda #1
    sta.z i
    jmp __b1
    // print::@1
  __b1:
    // [84] if(print::i#2<8+1) goto print::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z i
    cmp #8+1
    bcc __b2
    // [85] phi from print::@1 to print::@3 [phi:print::@1->print::@3]
  __b3_from___b1:
    // [85] phi print::i1#2 = 1 [phi:print::@1->print::@3#0] -- vbuz1=vbuc1 
    lda #1
    sta.z i1
    jmp __b3
    // print::@3
  __b3:
    // [86] if(print::i1#2<8+1) goto print::@4 -- vbuz1_lt_vbuc1_then_la1 
    lda.z i1
    cmp #8+1
    bcc __b4_from___b3
    jmp __breturn
    // print::@return
  __breturn:
    // [87] return 
    rts
    // [88] phi from print::@3 to print::@4 [phi:print::@3->print::@4]
  __b4_from___b3:
    jmp __b4
    // print::@4
  __b4:
    // [89] call cputs 
    // [135] phi from print::@4 to cputs [phi:print::@4->cputs]
  cputs_from___b4:
    // [135] phi cputs::s#12 = print::s2 [phi:print::@4->cputs#0] -- pbuz1=pbuc1 
    lda #<s2
    sta.z cputs.s
    lda #>s2
    sta.z cputs.s+1
    jsr cputs
    jmp __b15
    // print::@15
  __b15:
    // [90] printf_uchar::uvalue#1 = print::i1#2
    // [91] call printf_uchar 
    // [162] phi from print::@15 to printf_uchar [phi:print::@15->printf_uchar]
  printf_uchar_from___b15:
    // [162] phi printf_uchar::uvalue#2 = printf_uchar::uvalue#1 [phi:print::@15->printf_uchar#0] -- register_copy 
    jsr printf_uchar
    // [92] phi from print::@15 to print::@5 [phi:print::@15->print::@5]
  __b5_from___b15:
    // [92] phi print::j#2 = 1 [phi:print::@15->print::@5#0] -- vbuz1=vbuc1 
    lda #1
    sta.z j
    jmp __b5
    // print::@5
  __b5:
    // [93] if(print::j#2<8+1) goto print::@6 -- vbuz1_lt_vbuc1_then_la1 
    lda.z j
    cmp #8+1
    bcc __b6
    jmp __b7
    // print::@7
  __b7:
    // [94] print::i1#1 = ++ print::i1#2 -- vbuz1=_inc_vbuz1 
    inc.z i1
    // [85] phi from print::@7 to print::@3 [phi:print::@7->print::@3]
  __b3_from___b7:
    // [85] phi print::i1#2 = print::i1#1 [phi:print::@7->print::@3#0] -- register_copy 
    jmp __b3
    // print::@6
  __b6:
    // [95] if(board[print::i1#2]==print::j#2) goto print::@8 -- pbuc1_derefidx_vbuz1_eq_vbuz2_then_la1 
    ldy.z i1
    lda board,y
    cmp.z j
    beq __b8_from___b6
    // [96] phi from print::@6 to print::@10 [phi:print::@6->print::@10]
  __b10_from___b6:
    jmp __b10
    // print::@10
  __b10:
    // [97] call cputs 
    // [135] phi from print::@10 to cputs [phi:print::@10->cputs]
  cputs_from___b10:
    // [135] phi cputs::s#12 = print::s4 [phi:print::@10->cputs#0] -- pbuz1=pbuc1 
    lda #<s4
    sta.z cputs.s
    lda #>s4
    sta.z cputs.s+1
    jsr cputs
    jmp __b9
    // print::@9
  __b9:
    // [98] print::j#1 = ++ print::j#2 -- vbuz1=_inc_vbuz1 
    inc.z j
    // [92] phi from print::@9 to print::@5 [phi:print::@9->print::@5]
  __b5_from___b9:
    // [92] phi print::j#2 = print::j#1 [phi:print::@9->print::@5#0] -- register_copy 
    jmp __b5
    // [99] phi from print::@6 to print::@8 [phi:print::@6->print::@8]
  __b8_from___b6:
    jmp __b8
    // print::@8
  __b8:
    // [100] call cputs 
    // [135] phi from print::@8 to cputs [phi:print::@8->cputs]
  cputs_from___b8:
    // [135] phi cputs::s#12 = print::s3 [phi:print::@8->cputs#0] -- pbuz1=pbuc1 
    lda #<s3
    sta.z cputs.s
    lda #>s3
    sta.z cputs.s+1
    jsr cputs
    jmp __b9
    // print::@2
  __b2:
    // [101] printf_uchar::uvalue#0 = print::i#2
    // [102] call printf_uchar 
    // [162] phi from print::@2 to printf_uchar [phi:print::@2->printf_uchar]
  printf_uchar_from___b2:
    // [162] phi printf_uchar::uvalue#2 = printf_uchar::uvalue#0 [phi:print::@2->printf_uchar#0] -- register_copy 
    jsr printf_uchar
    jmp __b14
    // print::@14
  __b14:
    // [103] print::i#1 = ++ print::i#2 -- vbuz1=_inc_vbuz1 
    inc.z i
    // [83] phi from print::@14 to print::@1 [phi:print::@14->print::@1]
  __b1_from___b14:
    // [83] phi print::i#2 = print::i#1 [phi:print::@14->print::@1#0] -- register_copy 
    jmp __b1
  .segment Data
    s: .text @"\n#"
    .byte 0
    s1: .text @":\n "
    .byte 0
    s2: .text @"\n"
    .byte 0
    s3: .text "Q"
    .byte 0
    s4: .text "-"
    .byte 0
}
.segment Code
  // gotoxy
// Set the cursor to the specified position
// gotoxy(byte zp(2) y)
gotoxy: {
    .label __5 = $23
    .label __6 = $1f
    .label __7 = $1f
    .label line_offset = $1f
    .label y = 2
    .label __8 = $21
    .label __9 = $1f
    // [105] if(gotoxy::y#4<$19+1) goto gotoxy::@3 -- vbuz1_lt_vbuc1_then_la1 
    lda.z y
    cmp #$19+1
    bcc __b3_from_gotoxy
    // [107] phi from gotoxy to gotoxy::@1 [phi:gotoxy->gotoxy::@1]
  __b1_from_gotoxy:
    // [107] phi gotoxy::y#5 = 0 [phi:gotoxy->gotoxy::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta.z y
    jmp __b1
    // [106] phi from gotoxy to gotoxy::@3 [phi:gotoxy->gotoxy::@3]
  __b3_from_gotoxy:
    jmp __b3
    // gotoxy::@3
  __b3:
    // [107] phi from gotoxy::@3 to gotoxy::@1 [phi:gotoxy::@3->gotoxy::@1]
  __b1_from___b3:
    // [107] phi gotoxy::y#5 = gotoxy::y#4 [phi:gotoxy::@3->gotoxy::@1#0] -- register_copy 
    jmp __b1
    // gotoxy::@1
  __b1:
    jmp __b2
    // gotoxy::@2
  __b2:
    // [108] conio_cursor_x = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // [109] conio_cursor_y = gotoxy::y#5 -- vbuz1=vbuz2 
    lda.z y
    sta.z conio_cursor_y
    // [110] gotoxy::$7 = (word)gotoxy::y#5 -- vwuz1=_word_vbuz2 
    lda.z y
    sta.z __7
    lda #0
    sta.z __7+1
    // [111] gotoxy::$8 = gotoxy::$7 << 2 -- vwuz1=vwuz2_rol_2 
    lda.z __7
    asl
    sta.z __8
    lda.z __7+1
    rol
    sta.z __8+1
    asl.z __8
    rol.z __8+1
    // [112] gotoxy::$9 = gotoxy::$8 + gotoxy::$7 -- vwuz1=vwuz2_plus_vwuz1 
    lda.z __9
    clc
    adc.z __8
    sta.z __9
    lda.z __9+1
    adc.z __8+1
    sta.z __9+1
    // [113] gotoxy::line_offset#0 = gotoxy::$9 << 3 -- vwuz1=vwuz1_rol_3 
    asl.z line_offset
    rol.z line_offset+1
    asl.z line_offset
    rol.z line_offset+1
    asl.z line_offset
    rol.z line_offset+1
    // [114] gotoxy::$5 = DEFAULT_SCREEN + gotoxy::line_offset#0 -- pbuz1=pbuc1_plus_vwuz2 
    clc
    lda.z line_offset
    adc #<DEFAULT_SCREEN
    sta.z __5
    lda.z line_offset+1
    adc #>DEFAULT_SCREEN
    sta.z __5+1
    // [115] conio_line_text = gotoxy::$5 -- pbuz1=pbuz2 
    lda.z __5
    sta.z conio_line_text
    lda.z __5+1
    sta.z conio_line_text+1
    // [116] gotoxy::$6 = COLORRAM + gotoxy::line_offset#0 -- pbuz1=pbuc1_plus_vwuz1 
    clc
    lda.z __6
    adc #<COLORRAM
    sta.z __6
    lda.z __6+1
    adc #>COLORRAM
    sta.z __6+1
    // [117] conio_line_color = gotoxy::$6 -- pbuz1=pbuz2 
    lda.z __6
    sta.z conio_line_color
    lda.z __6+1
    sta.z conio_line_color+1
    jmp __breturn
    // gotoxy::@return
  __breturn:
    // [118] return 
    rts
}
  // clrscr
// clears the screen and moves the cursor to the upper left-hand corner of the screen.
clrscr: {
    .label c = 9
    .label line_text = $a
    .label line_cols = $f
    .label l = 4
    // [120] phi from clrscr to clrscr::@1 [phi:clrscr->clrscr::@1]
  __b1_from_clrscr:
    // [120] phi clrscr::line_cols#5 = COLORRAM [phi:clrscr->clrscr::@1#0] -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z line_cols
    lda #>COLORRAM
    sta.z line_cols+1
    // [120] phi clrscr::line_text#5 = DEFAULT_SCREEN [phi:clrscr->clrscr::@1#1] -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z line_text
    lda #>DEFAULT_SCREEN
    sta.z line_text+1
    // [120] phi clrscr::l#2 = 0 [phi:clrscr->clrscr::@1#2] -- vbuz1=vbuc1 
    lda #0
    sta.z l
    jmp __b1
    // clrscr::@1
  __b1:
    // [121] if(clrscr::l#2<$19) goto clrscr::@3 -- vbuz1_lt_vbuc1_then_la1 
    lda.z l
    cmp #$19
    bcc __b3_from___b1
    jmp __b2
    // clrscr::@2
  __b2:
    // [122] conio_cursor_x = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // [123] conio_cursor_y = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_y
    // [124] conio_line_text = DEFAULT_SCREEN -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z conio_line_text
    lda #>DEFAULT_SCREEN
    sta.z conio_line_text+1
    // [125] conio_line_color = COLORRAM -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z conio_line_color
    lda #>COLORRAM
    sta.z conio_line_color+1
    jmp __breturn
    // clrscr::@return
  __breturn:
    // [126] return 
    rts
    // [127] phi from clrscr::@1 to clrscr::@3 [phi:clrscr::@1->clrscr::@3]
  __b3_from___b1:
    // [127] phi clrscr::c#2 = 0 [phi:clrscr::@1->clrscr::@3#0] -- vbuz1=vbuc1 
    lda #0
    sta.z c
    jmp __b3
    // clrscr::@3
  __b3:
    // [128] if(clrscr::c#2<$28) goto clrscr::@4 -- vbuz1_lt_vbuc1_then_la1 
    lda.z c
    cmp #$28
    bcc __b4
    jmp __b5
    // clrscr::@5
  __b5:
    // [129] clrscr::line_text#1 = clrscr::line_text#5 + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z line_text
    sta.z line_text
    bcc !+
    inc.z line_text+1
  !:
    // [130] clrscr::line_cols#1 = clrscr::line_cols#5 + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z line_cols
    sta.z line_cols
    bcc !+
    inc.z line_cols+1
  !:
    // [131] clrscr::l#1 = ++ clrscr::l#2 -- vbuz1=_inc_vbuz1 
    inc.z l
    // [120] phi from clrscr::@5 to clrscr::@1 [phi:clrscr::@5->clrscr::@1]
  __b1_from___b5:
    // [120] phi clrscr::line_cols#5 = clrscr::line_cols#1 [phi:clrscr::@5->clrscr::@1#0] -- register_copy 
    // [120] phi clrscr::line_text#5 = clrscr::line_text#1 [phi:clrscr::@5->clrscr::@1#1] -- register_copy 
    // [120] phi clrscr::l#2 = clrscr::l#1 [phi:clrscr::@5->clrscr::@1#2] -- register_copy 
    jmp __b1
    // clrscr::@4
  __b4:
    // [132] clrscr::line_text#5[clrscr::c#2] = ' ' -- pbuz1_derefidx_vbuz2=vbuc1 
    lda #' '
    ldy.z c
    sta (line_text),y
    // [133] clrscr::line_cols#5[clrscr::c#2] = LIGHT_BLUE -- pbuz1_derefidx_vbuz2=vbuc1 
    lda #LIGHT_BLUE
    ldy.z c
    sta (line_cols),y
    // [134] clrscr::c#1 = ++ clrscr::c#2 -- vbuz1=_inc_vbuz1 
    inc.z c
    // [127] phi from clrscr::@4 to clrscr::@3 [phi:clrscr::@4->clrscr::@3]
  __b3_from___b4:
    // [127] phi clrscr::c#2 = clrscr::c#1 [phi:clrscr::@4->clrscr::@3#0] -- register_copy 
    jmp __b3
}
  // cputs
// Output a NUL-terminated string at the current cursor position
// cputs(const byte* zp($a) s)
cputs: {
    .label c = $d
    .label s = $a
    // [136] phi from cputs cputs::@2 to cputs::@1 [phi:cputs/cputs::@2->cputs::@1]
  __b1_from_cputs:
  __b1_from___b2:
    // [136] phi cputs::s#11 = cputs::s#12 [phi:cputs/cputs::@2->cputs::@1#0] -- register_copy 
    jmp __b1
    // cputs::@1
  __b1:
    // [137] cputs::c#1 = *cputs::s#11 -- vbuz1=_deref_pbuz2 
    ldy #0
    lda (s),y
    sta.z c
    // [138] cputs::s#0 = ++ cputs::s#11 -- pbuz1=_inc_pbuz1 
    inc.z s
    bne !+
    inc.z s+1
  !:
    // [139] if(0!=cputs::c#1) goto cputs::@2 -- 0_neq_vbuz1_then_la1 
    lda.z c
    bne __b2
    jmp __breturn
    // cputs::@return
  __breturn:
    // [140] return 
    rts
    // cputs::@2
  __b2:
    // [141] cputc::c#0 = cputs::c#1
    // [142] call cputc 
    // [169] phi from cputs::@2 to cputc [phi:cputs::@2->cputc]
  cputc_from___b2:
    // [169] phi cputc::c#3 = cputc::c#0 [phi:cputs::@2->cputc#0] -- register_copy 
    jsr cputc
    jmp __b1_from___b2
}
  // printf_uint
// Print an unsigned int using a specific format
printf_uint: {
    .const format_min_length = 0
    .const format_justify_left = 0
    .const format_zero_padding = 0
    .const format_upper_case = 0
    .label uvalue = 8
    jmp __b1
    // printf_uint::@1
  __b1:
    // [144] *((byte*)&printf_buffer) = 0 -- _deref_pbuc1=vbuc2 
    // Handle any sign
    lda #0
    sta printf_buffer
    // [145] call utoa 
  // Format number into buffer
    // [180] phi from printf_uint::@1 to utoa [phi:printf_uint::@1->utoa]
  utoa_from___b1:
    jsr utoa
    jmp __b2
    // printf_uint::@2
  __b2:
    // [146] printf_number_buffer::buffer_sign#1 = *((byte*)&printf_buffer) -- vbuz1=_deref_pbuc1 
    lda printf_buffer
    sta.z printf_number_buffer.buffer_sign
    // [147] call printf_number_buffer 
  // Print using format
    // [201] phi from printf_uint::@2 to printf_number_buffer [phi:printf_uint::@2->printf_number_buffer]
  printf_number_buffer_from___b2:
    // [201] phi printf_number_buffer::format_upper_case#10 = printf_uint::format_upper_case#0 [phi:printf_uint::@2->printf_number_buffer#0] -- vbuz1=vbuc1 
    lda #format_upper_case
    sta.z printf_number_buffer.format_upper_case
    // [201] phi printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#1 [phi:printf_uint::@2->printf_number_buffer#1] -- register_copy 
    // [201] phi printf_number_buffer::format_zero_padding#10 = printf_uint::format_zero_padding#0 [phi:printf_uint::@2->printf_number_buffer#2] -- vbuz1=vbuc1 
    lda #format_zero_padding
    sta.z printf_number_buffer.format_zero_padding
    // [201] phi printf_number_buffer::format_justify_left#10 = printf_uint::format_justify_left#0 [phi:printf_uint::@2->printf_number_buffer#3] -- vbuz1=vbuc1 
    lda #format_justify_left
    sta.z printf_number_buffer.format_justify_left
    // [201] phi printf_number_buffer::format_min_length#3 = printf_uint::format_min_length#0 [phi:printf_uint::@2->printf_number_buffer#4] -- vbuz1=vbuc1 
    lda #format_min_length
    sta.z printf_number_buffer.format_min_length
    jsr printf_number_buffer
    jmp __breturn
    // printf_uint::@return
  __breturn:
    // [148] return 
    rts
}
  // printf_ulong
// Print an unsigned int using a specific format
// printf_ulong(dword zp(5) uvalue)
printf_ulong: {
    .label uvalue = 5
    jmp __b1
    // printf_ulong::@1
  __b1:
    // [150] *((byte*)&printf_buffer) = 0 -- _deref_pbuc1=vbuc2 
    // Handle any sign
    lda #0
    sta printf_buffer
    // [151] ultoa::value#1 = printf_ulong::uvalue#2
    // [152] call ultoa 
  // Format number into buffer
    // [238] phi from printf_ulong::@1 to ultoa [phi:printf_ulong::@1->ultoa]
  ultoa_from___b1:
    jsr ultoa
    jmp __b2
    // printf_ulong::@2
  __b2:
    // [153] printf_number_buffer::buffer_sign#0 = *((byte*)&printf_buffer) -- vbuz1=_deref_pbuc1 
    lda printf_buffer
    sta.z printf_number_buffer.buffer_sign
    // [154] call printf_number_buffer 
  // Print using format
    // [201] phi from printf_ulong::@2 to printf_number_buffer [phi:printf_ulong::@2->printf_number_buffer]
  printf_number_buffer_from___b2:
    // [201] phi printf_number_buffer::format_upper_case#10 = 0 [phi:printf_ulong::@2->printf_number_buffer#0] -- vbuz1=vbuc1 
    lda #0
    sta.z printf_number_buffer.format_upper_case
    // [201] phi printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#0 [phi:printf_ulong::@2->printf_number_buffer#1] -- register_copy 
    // [201] phi printf_number_buffer::format_zero_padding#10 = 0 [phi:printf_ulong::@2->printf_number_buffer#2] -- vbuz1=vbuc1 
    lda #0
    sta.z printf_number_buffer.format_zero_padding
    // [201] phi printf_number_buffer::format_justify_left#10 = 0 [phi:printf_ulong::@2->printf_number_buffer#3] -- vbuz1=vbuc1 
    lda #0
    sta.z printf_number_buffer.format_justify_left
    // [201] phi printf_number_buffer::format_min_length#3 = 0 [phi:printf_ulong::@2->printf_number_buffer#4] -- vbuz1=vbuc1 
    lda #0
    sta.z printf_number_buffer.format_min_length
    jsr printf_number_buffer
    jmp __breturn
    // printf_ulong::@return
  __breturn:
    // [155] return 
    rts
}
  // diff
// Find the absolute difference between two unsigned chars
// diff(byte zp($d) a, byte zp(9) b)
diff: {
    .label a = $d
    .label b = 9
    .label return = $29
    .label return_1 = $d
    // [157] if(diff::a#2<diff::b#2) goto diff::@1 -- vbuz1_lt_vbuz2_then_la1 
    lda.z a
    cmp.z b
    bcc __b1
    jmp __b2
    // diff::@2
  __b2:
    // [158] diff::return#3 = diff::a#2 - diff::b#2 -- vbuz1=vbuz1_minus_vbuz2 
    lda.z return_1
    sec
    sbc.z b
    sta.z return_1
    // [159] phi from diff::@1 diff::@2 to diff::@return [phi:diff::@1/diff::@2->diff::@return]
  __breturn_from___b1:
  __breturn_from___b2:
    // [159] phi diff::return#4 = diff::return#2 [phi:diff::@1/diff::@2->diff::@return#0] -- register_copy 
    jmp __breturn
    // diff::@return
  __breturn:
    // [160] return 
    rts
    // diff::@1
  __b1:
    // [161] diff::return#2 = diff::b#2 - diff::a#2 -- vbuz1=vbuz2_minus_vbuz1 
    lda.z b
    sec
    sbc.z return_1
    sta.z return_1
    jmp __breturn_from___b1
}
  // printf_uchar
// Print an unsigned char using a specific format
// printf_uchar(byte zp(3) uvalue)
printf_uchar: {
    .label uvalue = 3
    jmp __b1
    // printf_uchar::@1
  __b1:
    // [163] *((byte*)&printf_buffer) = 0 -- _deref_pbuc1=vbuc2 
    // Handle any sign
    lda #0
    sta printf_buffer
    // [164] uctoa::value#1 = printf_uchar::uvalue#2 -- vbuz1=vbuz2 
    lda.z uvalue
    sta.z uctoa.value
    // [165] call uctoa 
  // Format number into buffer
    // [259] phi from printf_uchar::@1 to uctoa [phi:printf_uchar::@1->uctoa]
  uctoa_from___b1:
    jsr uctoa
    jmp __b2
    // printf_uchar::@2
  __b2:
    // [166] printf_number_buffer::buffer_sign#2 = *((byte*)&printf_buffer) -- vbuz1=_deref_pbuc1 
    lda printf_buffer
    sta.z printf_number_buffer.buffer_sign
    // [167] call printf_number_buffer 
  // Print using format
    // [201] phi from printf_uchar::@2 to printf_number_buffer [phi:printf_uchar::@2->printf_number_buffer]
  printf_number_buffer_from___b2:
    // [201] phi printf_number_buffer::format_upper_case#10 = 0 [phi:printf_uchar::@2->printf_number_buffer#0] -- vbuz1=vbuc1 
    lda #0
    sta.z printf_number_buffer.format_upper_case
    // [201] phi printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 [phi:printf_uchar::@2->printf_number_buffer#1] -- register_copy 
    // [201] phi printf_number_buffer::format_zero_padding#10 = 0 [phi:printf_uchar::@2->printf_number_buffer#2] -- vbuz1=vbuc1 
    lda #0
    sta.z printf_number_buffer.format_zero_padding
    // [201] phi printf_number_buffer::format_justify_left#10 = 0 [phi:printf_uchar::@2->printf_number_buffer#3] -- vbuz1=vbuc1 
    lda #0
    sta.z printf_number_buffer.format_justify_left
    // [201] phi printf_number_buffer::format_min_length#3 = 0 [phi:printf_uchar::@2->printf_number_buffer#4] -- vbuz1=vbuc1 
    lda #0
    sta.z printf_number_buffer.format_min_length
    jsr printf_number_buffer
    jmp __breturn
    // printf_uchar::@return
  __breturn:
    // [168] return 
    rts
}
  // cputc
// Output one character at the current cursor position
// Moves the cursor forward. Scrolls the entire screen if needed
// cputc(byte zp($d) c)
cputc: {
    .label c = $d
    // [170] if(cputc::c#3==' ') goto cputc::@1 -- vbuz1_eq_vbuc1_then_la1 
    lda #'\n'
    cmp.z c
    beq __b1_from_cputc
    jmp __b2
    // cputc::@2
  __b2:
    // [171] conio_line_text[conio_cursor_x] = cputc::c#3 -- pbuz1_derefidx_vbuz2=vbuz3 
    lda.z c
    ldy.z conio_cursor_x
    sta (conio_line_text),y
    // [172] conio_line_color[conio_cursor_x] = LIGHT_BLUE -- pbuz1_derefidx_vbuz2=vbuc1 
    lda #LIGHT_BLUE
    ldy.z conio_cursor_x
    sta (conio_line_color),y
    // [173] conio_cursor_x = ++ conio_cursor_x -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_x
    // [174] if(conio_cursor_x!=$28) goto cputc::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #$28
    cmp.z conio_cursor_x
    bne __breturn
    // [175] phi from cputc::@2 to cputc::@3 [phi:cputc::@2->cputc::@3]
  __b3_from___b2:
    jmp __b3
    // cputc::@3
  __b3:
    // [176] call cputln 
    jsr cputln
    jmp __breturn
    // cputc::@return
  __breturn:
    // [177] return 
    rts
    // [178] phi from cputc to cputc::@1 [phi:cputc->cputc::@1]
  __b1_from_cputc:
    jmp __b1
    // cputc::@1
  __b1:
    // [179] call cputln 
    jsr cputln
    jmp __breturn
}
  // utoa
// Converts unsigned number value to a string representing it in RADIX format.
// If the leading digits are zero they are not included in the string.
// - value : The number to be converted to RADIX
// - buffer : receives the string representing the number and zero-termination.
// - radix : The radix to convert the number to (from the enum RADIX)
// utoa(word zp($f) value, byte* zp($a) buffer)
utoa: {
    .const max_digits = 5
    .label __10 = $26
    .label __11 = $25
    .label digit_value = $27
    .label buffer = $a
    .label digit = 9
    .label value = $f
    .label started = $1e
    // [181] phi from utoa to utoa::@1 [phi:utoa->utoa::@1]
  __b1_from_utoa:
    // [181] phi utoa::buffer#11 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:utoa->utoa::@1#0] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer+1
    // [181] phi utoa::started#2 = 0 [phi:utoa->utoa::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta.z started
    // [181] phi utoa::value#2 = printf_uint::uvalue#0 [phi:utoa->utoa::@1#2] -- vwuz1=vwuc1 
    lda #<printf_uint.uvalue
    sta.z value
    lda #>printf_uint.uvalue
    sta.z value+1
    // [181] phi utoa::digit#2 = 0 [phi:utoa->utoa::@1#3] -- vbuz1=vbuc1 
    lda #0
    sta.z digit
    jmp __b1
    // utoa::@1
  __b1:
    // [182] if(utoa::digit#2<utoa::max_digits#1-1) goto utoa::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z digit
    cmp #max_digits-1
    bcc __b2
    jmp __b3
    // utoa::@3
  __b3:
    // [183] utoa::$11 = (byte)utoa::value#2 -- vbuz1=_byte_vwuz2 
    lda.z value
    sta.z __11
    // [184] *utoa::buffer#11 = DIGITS[utoa::$11] -- _deref_pbuz1=pbuc1_derefidx_vbuz2 
    ldy.z __11
    lda DIGITS,y
    ldy #0
    sta (buffer),y
    // [185] utoa::buffer#3 = ++ utoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // [186] *utoa::buffer#3 = 0 -- _deref_pbuz1=vbuc1 
    lda #0
    ldy #0
    sta (buffer),y
    jmp __breturn
    // utoa::@return
  __breturn:
    // [187] return 
    rts
    // utoa::@2
  __b2:
    // [188] utoa::$10 = utoa::digit#2 << 1 -- vbuz1=vbuz2_rol_1 
    lda.z digit
    asl
    sta.z __10
    // [189] utoa::digit_value#0 = RADIX_DECIMAL_VALUES[utoa::$10] -- vwuz1=pwuc1_derefidx_vbuz2 
    ldy.z __10
    lda RADIX_DECIMAL_VALUES,y
    sta.z digit_value
    lda RADIX_DECIMAL_VALUES+1,y
    sta.z digit_value+1
    // [190] if(0!=utoa::started#2) goto utoa::@5 -- 0_neq_vbuz1_then_la1 
    lda.z started
    bne __b5
    jmp __b7
    // utoa::@7
  __b7:
    // [191] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@5 -- vwuz1_ge_vwuz2_then_la1 
    lda.z digit_value+1
    cmp.z value+1
    bne !+
    lda.z digit_value
    cmp.z value
    beq __b5
  !:
    bcc __b5
    // [192] phi from utoa::@7 to utoa::@4 [phi:utoa::@7->utoa::@4]
  __b4_from___b7:
    // [192] phi utoa::buffer#14 = utoa::buffer#11 [phi:utoa::@7->utoa::@4#0] -- register_copy 
    // [192] phi utoa::started#4 = utoa::started#2 [phi:utoa::@7->utoa::@4#1] -- register_copy 
    // [192] phi utoa::value#6 = utoa::value#2 [phi:utoa::@7->utoa::@4#2] -- register_copy 
    jmp __b4
    // utoa::@4
  __b4:
    // [193] utoa::digit#1 = ++ utoa::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // [181] phi from utoa::@4 to utoa::@1 [phi:utoa::@4->utoa::@1]
  __b1_from___b4:
    // [181] phi utoa::buffer#11 = utoa::buffer#14 [phi:utoa::@4->utoa::@1#0] -- register_copy 
    // [181] phi utoa::started#2 = utoa::started#4 [phi:utoa::@4->utoa::@1#1] -- register_copy 
    // [181] phi utoa::value#2 = utoa::value#6 [phi:utoa::@4->utoa::@1#2] -- register_copy 
    // [181] phi utoa::digit#2 = utoa::digit#1 [phi:utoa::@4->utoa::@1#3] -- register_copy 
    jmp __b1
    // utoa::@5
  __b5:
    // [194] utoa_append::buffer#0 = utoa::buffer#11
    // [195] utoa_append::value#0 = utoa::value#2
    // [196] utoa_append::sub#0 = utoa::digit_value#0
    // [197] call utoa_append 
    // [284] phi from utoa::@5 to utoa_append [phi:utoa::@5->utoa_append]
  utoa_append_from___b5:
    jsr utoa_append
    // [198] utoa_append::return#0 = utoa_append::value#2
    jmp __b6
    // utoa::@6
  __b6:
    // [199] utoa::value#0 = utoa_append::return#0
    // [200] utoa::buffer#4 = ++ utoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // [192] phi from utoa::@6 to utoa::@4 [phi:utoa::@6->utoa::@4]
  __b4_from___b6:
    // [192] phi utoa::buffer#14 = utoa::buffer#4 [phi:utoa::@6->utoa::@4#0] -- register_copy 
    // [192] phi utoa::started#4 = 1 [phi:utoa::@6->utoa::@4#1] -- vbuz1=vbuc1 
    lda #1
    sta.z started
    // [192] phi utoa::value#6 = utoa::value#0 [phi:utoa::@6->utoa::@4#2] -- register_copy 
    jmp __b4
}
  // printf_number_buffer
// Print the contents of the number buffer using a specific format.
// This handles minimum length, zero-filling, and left/right justification from the format
// printf_number_buffer(byte zp($29) buffer_sign, byte zp($1e) format_min_length, byte zp($25) format_justify_left, byte zp($26) format_zero_padding, byte zp($c) format_upper_case)
printf_number_buffer: {
    .label __19 = $27
    .label buffer_sign = $29
    .label len = $d
    .label padding = $1e
    .label format_min_length = $1e
    .label format_zero_padding = $26
    .label format_justify_left = $25
    .label format_upper_case = $c
    // [202] if(0==printf_number_buffer::format_min_length#3) goto printf_number_buffer::@1 -- 0_eq_vbuz1_then_la1 
    lda.z format_min_length
    beq __b1_from_printf_number_buffer
    // [203] phi from printf_number_buffer to printf_number_buffer::@6 [phi:printf_number_buffer->printf_number_buffer::@6]
  __b6_from_printf_number_buffer:
    jmp __b6
    // printf_number_buffer::@6
  __b6:
    // [204] call strlen 
    // [291] phi from printf_number_buffer::@6 to strlen [phi:printf_number_buffer::@6->strlen]
  strlen_from___b6:
    jsr strlen
    // [205] strlen::return#2 = strlen::len#2
    jmp __b14
    // printf_number_buffer::@14
  __b14:
    // [206] printf_number_buffer::$19 = strlen::return#2
    // [207] printf_number_buffer::len#0 = (signed byte)printf_number_buffer::$19 -- vbsz1=_sbyte_vwuz2 
    // There is a minimum length - work out the padding
    lda.z __19
    sta.z len
    // [208] if(0==printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@13 -- 0_eq_vbuz1_then_la1 
    lda.z buffer_sign
    beq __b13_from___b14
    jmp __b7
    // printf_number_buffer::@7
  __b7:
    // [209] printf_number_buffer::len#1 = ++ printf_number_buffer::len#0 -- vbsz1=_inc_vbsz1 
    inc.z len
    // [210] phi from printf_number_buffer::@14 printf_number_buffer::@7 to printf_number_buffer::@13 [phi:printf_number_buffer::@14/printf_number_buffer::@7->printf_number_buffer::@13]
  __b13_from___b14:
  __b13_from___b7:
    // [210] phi printf_number_buffer::len#2 = printf_number_buffer::len#0 [phi:printf_number_buffer::@14/printf_number_buffer::@7->printf_number_buffer::@13#0] -- register_copy 
    jmp __b13
    // printf_number_buffer::@13
  __b13:
    // [211] printf_number_buffer::padding#1 = (signed byte)printf_number_buffer::format_min_length#3 - printf_number_buffer::len#2 -- vbsz1=vbsz1_minus_vbsz2 
    lda.z padding
    sec
    sbc.z len
    sta.z padding
    // [212] if(printf_number_buffer::padding#1>=0) goto printf_number_buffer::@21 -- vbsz1_ge_0_then_la1 
    lda.z padding
    cmp #0
    bpl __b21_from___b13
    // [214] phi from printf_number_buffer printf_number_buffer::@13 to printf_number_buffer::@1 [phi:printf_number_buffer/printf_number_buffer::@13->printf_number_buffer::@1]
  __b1_from_printf_number_buffer:
  __b1_from___b13:
    // [214] phi printf_number_buffer::padding#10 = 0 [phi:printf_number_buffer/printf_number_buffer::@13->printf_number_buffer::@1#0] -- vbsz1=vbsc1 
    lda #0
    sta.z padding
    jmp __b1
    // [213] phi from printf_number_buffer::@13 to printf_number_buffer::@21 [phi:printf_number_buffer::@13->printf_number_buffer::@21]
  __b21_from___b13:
    jmp __b21
    // printf_number_buffer::@21
  __b21:
    // [214] phi from printf_number_buffer::@21 to printf_number_buffer::@1 [phi:printf_number_buffer::@21->printf_number_buffer::@1]
  __b1_from___b21:
    // [214] phi printf_number_buffer::padding#10 = printf_number_buffer::padding#1 [phi:printf_number_buffer::@21->printf_number_buffer::@1#0] -- register_copy 
    jmp __b1
    // printf_number_buffer::@1
  __b1:
    // [215] if(0!=printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@2 -- 0_neq_vbuz1_then_la1 
    lda.z format_justify_left
    bne __b2
    jmp __b17
    // printf_number_buffer::@17
  __b17:
    // [216] if(0!=printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@2 -- 0_neq_vbuz1_then_la1 
    lda.z format_zero_padding
    bne __b2
    jmp __b16
    // printf_number_buffer::@16
  __b16:
    // [217] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@8 -- 0_neq_vbsz1_then_la1 
    lda.z padding
    cmp #0
    bne __b8
    jmp __b2
    // printf_number_buffer::@8
  __b8:
    // [218] printf_padding::length#0 = (byte)printf_number_buffer::padding#10 -- vbuz1=vbuz2 
    lda.z padding
    sta.z printf_padding.length
    // [219] call printf_padding 
    // [297] phi from printf_number_buffer::@8 to printf_padding [phi:printf_number_buffer::@8->printf_padding]
  printf_padding_from___b8:
    // [297] phi printf_padding::pad#5 = ' ' [phi:printf_number_buffer::@8->printf_padding#0] -- vbuz1=vbuc1 
    lda #' '
    sta.z printf_padding.pad
    // [297] phi printf_padding::length#4 = printf_padding::length#0 [phi:printf_number_buffer::@8->printf_padding#1] -- register_copy 
    jsr printf_padding
    jmp __b2
    // printf_number_buffer::@2
  __b2:
    // [220] if(0==printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@3 -- 0_eq_vbuz1_then_la1 
    lda.z buffer_sign
    beq __b3
    jmp __b9
    // printf_number_buffer::@9
  __b9:
    // [221] cputc::c#2 = printf_number_buffer::buffer_sign#10 -- vbuz1=vbuz2 
    lda.z buffer_sign
    sta.z cputc.c
    // [222] call cputc 
    // [169] phi from printf_number_buffer::@9 to cputc [phi:printf_number_buffer::@9->cputc]
  cputc_from___b9:
    // [169] phi cputc::c#3 = cputc::c#2 [phi:printf_number_buffer::@9->cputc#0] -- register_copy 
    jsr cputc
    jmp __b3
    // printf_number_buffer::@3
  __b3:
    // [223] if(0==printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@4 -- 0_eq_vbuz1_then_la1 
    lda.z format_zero_padding
    beq __b4
    jmp __b18
    // printf_number_buffer::@18
  __b18:
    // [224] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@10 -- 0_neq_vbsz1_then_la1 
    lda.z padding
    cmp #0
    bne __b10
    jmp __b4
    // printf_number_buffer::@10
  __b10:
    // [225] printf_padding::length#1 = (byte)printf_number_buffer::padding#10 -- vbuz1=vbuz2 
    lda.z padding
    sta.z printf_padding.length
    // [226] call printf_padding 
    // [297] phi from printf_number_buffer::@10 to printf_padding [phi:printf_number_buffer::@10->printf_padding]
  printf_padding_from___b10:
    // [297] phi printf_padding::pad#5 = '0' [phi:printf_number_buffer::@10->printf_padding#0] -- vbuz1=vbuc1 
    lda #'0'
    sta.z printf_padding.pad
    // [297] phi printf_padding::length#4 = printf_padding::length#1 [phi:printf_number_buffer::@10->printf_padding#1] -- register_copy 
    jsr printf_padding
    jmp __b4
    // printf_number_buffer::@4
  __b4:
    // [227] if(0==printf_number_buffer::format_upper_case#10) goto printf_number_buffer::@5 -- 0_eq_vbuz1_then_la1 
    lda.z format_upper_case
    beq __b5_from___b4
    // [228] phi from printf_number_buffer::@4 to printf_number_buffer::@11 [phi:printf_number_buffer::@4->printf_number_buffer::@11]
  __b11_from___b4:
    jmp __b11
    // printf_number_buffer::@11
  __b11:
    // [229] call strupr 
    // [304] phi from printf_number_buffer::@11 to strupr [phi:printf_number_buffer::@11->strupr]
  strupr_from___b11:
    jsr strupr
    // [230] phi from printf_number_buffer::@11 printf_number_buffer::@4 to printf_number_buffer::@5 [phi:printf_number_buffer::@11/printf_number_buffer::@4->printf_number_buffer::@5]
  __b5_from___b11:
  __b5_from___b4:
    jmp __b5
    // printf_number_buffer::@5
  __b5:
    // [231] call cputs 
    // [135] phi from printf_number_buffer::@5 to cputs [phi:printf_number_buffer::@5->cputs]
  cputs_from___b5:
    // [135] phi cputs::s#12 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:printf_number_buffer::@5->cputs#0] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z cputs.s
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z cputs.s+1
    jsr cputs
    jmp __b15
    // printf_number_buffer::@15
  __b15:
    // [232] if(0==printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@return -- 0_eq_vbuz1_then_la1 
    lda.z format_justify_left
    beq __breturn
    jmp __b20
    // printf_number_buffer::@20
  __b20:
    // [233] if(0!=printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@return -- 0_neq_vbuz1_then_la1 
    lda.z format_zero_padding
    bne __breturn
    jmp __b19
    // printf_number_buffer::@19
  __b19:
    // [234] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@12 -- 0_neq_vbsz1_then_la1 
    lda.z padding
    cmp #0
    bne __b12
    jmp __breturn
    // printf_number_buffer::@12
  __b12:
    // [235] printf_padding::length#2 = (byte)printf_number_buffer::padding#10 -- vbuz1=vbuz2 
    lda.z padding
    sta.z printf_padding.length
    // [236] call printf_padding 
    // [297] phi from printf_number_buffer::@12 to printf_padding [phi:printf_number_buffer::@12->printf_padding]
  printf_padding_from___b12:
    // [297] phi printf_padding::pad#5 = ' ' [phi:printf_number_buffer::@12->printf_padding#0] -- vbuz1=vbuc1 
    lda #' '
    sta.z printf_padding.pad
    // [297] phi printf_padding::length#4 = printf_padding::length#2 [phi:printf_number_buffer::@12->printf_padding#1] -- register_copy 
    jsr printf_padding
    jmp __breturn
    // printf_number_buffer::@return
  __breturn:
    // [237] return 
    rts
}
  // ultoa
// Converts unsigned number value to a string representing it in RADIX format.
// If the leading digits are zero they are not included in the string.
// - value : The number to be converted to RADIX
// - buffer : receives the string representing the number and zero-termination.
// - radix : The radix to convert the number to (from the enum RADIX)
// ultoa(dword zp(5) value, byte* zp($a) buffer)
ultoa: {
    .label __10 = $2e
    .label __11 = $29
    .label digit_value = $2a
    .label buffer = $a
    .label digit = $25
    .label value = 5
    .label started = $26
    // [239] phi from ultoa to ultoa::@1 [phi:ultoa->ultoa::@1]
  __b1_from_ultoa:
    // [239] phi ultoa::buffer#11 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:ultoa->ultoa::@1#0] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer+1
    // [239] phi ultoa::started#2 = 0 [phi:ultoa->ultoa::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta.z started
    // [239] phi ultoa::value#2 = ultoa::value#1 [phi:ultoa->ultoa::@1#2] -- register_copy 
    // [239] phi ultoa::digit#2 = 0 [phi:ultoa->ultoa::@1#3] -- vbuz1=vbuc1 
    lda #0
    sta.z digit
    jmp __b1
    // ultoa::@1
  __b1:
    // [240] if(ultoa::digit#2<$a-1) goto ultoa::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z digit
    cmp #$a-1
    bcc __b2
    jmp __b3
    // ultoa::@3
  __b3:
    // [241] ultoa::$11 = (byte)ultoa::value#2 -- vbuz1=_byte_vduz2 
    lda.z value
    sta.z __11
    // [242] *ultoa::buffer#11 = DIGITS[ultoa::$11] -- _deref_pbuz1=pbuc1_derefidx_vbuz2 
    ldy.z __11
    lda DIGITS,y
    ldy #0
    sta (buffer),y
    // [243] ultoa::buffer#3 = ++ ultoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // [244] *ultoa::buffer#3 = 0 -- _deref_pbuz1=vbuc1 
    lda #0
    ldy #0
    sta (buffer),y
    jmp __breturn
    // ultoa::@return
  __breturn:
    // [245] return 
    rts
    // ultoa::@2
  __b2:
    // [246] ultoa::$10 = ultoa::digit#2 << 2 -- vbuz1=vbuz2_rol_2 
    lda.z digit
    asl
    asl
    sta.z __10
    // [247] ultoa::digit_value#0 = RADIX_DECIMAL_VALUES_LONG[ultoa::$10] -- vduz1=pduc1_derefidx_vbuz2 
    ldy.z __10
    lda RADIX_DECIMAL_VALUES_LONG,y
    sta.z digit_value
    lda RADIX_DECIMAL_VALUES_LONG+1,y
    sta.z digit_value+1
    lda RADIX_DECIMAL_VALUES_LONG+2,y
    sta.z digit_value+2
    lda RADIX_DECIMAL_VALUES_LONG+3,y
    sta.z digit_value+3
    // [248] if(0!=ultoa::started#2) goto ultoa::@5 -- 0_neq_vbuz1_then_la1 
    lda.z started
    bne __b5
    jmp __b7
    // ultoa::@7
  __b7:
    // [249] if(ultoa::value#2>=ultoa::digit_value#0) goto ultoa::@5 -- vduz1_ge_vduz2_then_la1 
    lda.z value+3
    cmp.z digit_value+3
    bcc !+
    bne __b5
    lda.z value+2
    cmp.z digit_value+2
    bcc !+
    bne __b5
    lda.z value+1
    cmp.z digit_value+1
    bcc !+
    bne __b5
    lda.z value
    cmp.z digit_value
    bcs __b5
  !:
    // [250] phi from ultoa::@7 to ultoa::@4 [phi:ultoa::@7->ultoa::@4]
  __b4_from___b7:
    // [250] phi ultoa::buffer#14 = ultoa::buffer#11 [phi:ultoa::@7->ultoa::@4#0] -- register_copy 
    // [250] phi ultoa::started#4 = ultoa::started#2 [phi:ultoa::@7->ultoa::@4#1] -- register_copy 
    // [250] phi ultoa::value#6 = ultoa::value#2 [phi:ultoa::@7->ultoa::@4#2] -- register_copy 
    jmp __b4
    // ultoa::@4
  __b4:
    // [251] ultoa::digit#1 = ++ ultoa::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // [239] phi from ultoa::@4 to ultoa::@1 [phi:ultoa::@4->ultoa::@1]
  __b1_from___b4:
    // [239] phi ultoa::buffer#11 = ultoa::buffer#14 [phi:ultoa::@4->ultoa::@1#0] -- register_copy 
    // [239] phi ultoa::started#2 = ultoa::started#4 [phi:ultoa::@4->ultoa::@1#1] -- register_copy 
    // [239] phi ultoa::value#2 = ultoa::value#6 [phi:ultoa::@4->ultoa::@1#2] -- register_copy 
    // [239] phi ultoa::digit#2 = ultoa::digit#1 [phi:ultoa::@4->ultoa::@1#3] -- register_copy 
    jmp __b1
    // ultoa::@5
  __b5:
    // [252] ultoa_append::buffer#0 = ultoa::buffer#11
    // [253] ultoa_append::value#0 = ultoa::value#2
    // [254] ultoa_append::sub#0 = ultoa::digit_value#0
    // [255] call ultoa_append 
    // [314] phi from ultoa::@5 to ultoa_append [phi:ultoa::@5->ultoa_append]
  ultoa_append_from___b5:
    jsr ultoa_append
    // [256] ultoa_append::return#0 = ultoa_append::value#2
    jmp __b6
    // ultoa::@6
  __b6:
    // [257] ultoa::value#0 = ultoa_append::return#0
    // [258] ultoa::buffer#4 = ++ ultoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // [250] phi from ultoa::@6 to ultoa::@4 [phi:ultoa::@6->ultoa::@4]
  __b4_from___b6:
    // [250] phi ultoa::buffer#14 = ultoa::buffer#4 [phi:ultoa::@6->ultoa::@4#0] -- register_copy 
    // [250] phi ultoa::started#4 = 1 [phi:ultoa::@6->ultoa::@4#1] -- vbuz1=vbuc1 
    lda #1
    sta.z started
    // [250] phi ultoa::value#6 = ultoa::value#0 [phi:ultoa::@6->ultoa::@4#2] -- register_copy 
    jmp __b4
}
  // uctoa
// Converts unsigned number value to a string representing it in RADIX format.
// If the leading digits are zero they are not included in the string.
// - value : The number to be converted to RADIX
// - buffer : receives the string representing the number and zero-termination.
// - radix : The radix to convert the number to (from the enum RADIX)
// uctoa(byte zp($c) value, byte* zp($f) buffer)
uctoa: {
    .label digit_value = $2e
    .label buffer = $f
    .label digit = $29
    .label value = $c
    .label started = $d
    // [260] phi from uctoa to uctoa::@1 [phi:uctoa->uctoa::@1]
  __b1_from_uctoa:
    // [260] phi uctoa::buffer#11 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:uctoa->uctoa::@1#0] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer+1
    // [260] phi uctoa::started#2 = 0 [phi:uctoa->uctoa::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta.z started
    // [260] phi uctoa::value#2 = uctoa::value#1 [phi:uctoa->uctoa::@1#2] -- register_copy 
    // [260] phi uctoa::digit#2 = 0 [phi:uctoa->uctoa::@1#3] -- vbuz1=vbuc1 
    lda #0
    sta.z digit
    jmp __b1
    // uctoa::@1
  __b1:
    // [261] if(uctoa::digit#2<2-1) goto uctoa::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z digit
    cmp #2-1
    bcc __b2
    jmp __b3
    // uctoa::@3
  __b3:
    // [262] *uctoa::buffer#11 = DIGITS[uctoa::value#2] -- _deref_pbuz1=pbuc1_derefidx_vbuz2 
    ldy.z value
    lda DIGITS,y
    ldy #0
    sta (buffer),y
    // [263] uctoa::buffer#3 = ++ uctoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // [264] *uctoa::buffer#3 = 0 -- _deref_pbuz1=vbuc1 
    lda #0
    ldy #0
    sta (buffer),y
    jmp __breturn
    // uctoa::@return
  __breturn:
    // [265] return 
    rts
    // uctoa::@2
  __b2:
    // [266] uctoa::digit_value#0 = RADIX_HEXADECIMAL_VALUES_CHAR[uctoa::digit#2] -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy.z digit
    lda RADIX_HEXADECIMAL_VALUES_CHAR,y
    sta.z digit_value
    // [267] if(0!=uctoa::started#2) goto uctoa::@5 -- 0_neq_vbuz1_then_la1 
    lda.z started
    bne __b5
    jmp __b7
    // uctoa::@7
  __b7:
    // [268] if(uctoa::value#2>=uctoa::digit_value#0) goto uctoa::@5 -- vbuz1_ge_vbuz2_then_la1 
    lda.z value
    cmp.z digit_value
    bcs __b5
    // [269] phi from uctoa::@7 to uctoa::@4 [phi:uctoa::@7->uctoa::@4]
  __b4_from___b7:
    // [269] phi uctoa::buffer#14 = uctoa::buffer#11 [phi:uctoa::@7->uctoa::@4#0] -- register_copy 
    // [269] phi uctoa::started#4 = uctoa::started#2 [phi:uctoa::@7->uctoa::@4#1] -- register_copy 
    // [269] phi uctoa::value#6 = uctoa::value#2 [phi:uctoa::@7->uctoa::@4#2] -- register_copy 
    jmp __b4
    // uctoa::@4
  __b4:
    // [270] uctoa::digit#1 = ++ uctoa::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // [260] phi from uctoa::@4 to uctoa::@1 [phi:uctoa::@4->uctoa::@1]
  __b1_from___b4:
    // [260] phi uctoa::buffer#11 = uctoa::buffer#14 [phi:uctoa::@4->uctoa::@1#0] -- register_copy 
    // [260] phi uctoa::started#2 = uctoa::started#4 [phi:uctoa::@4->uctoa::@1#1] -- register_copy 
    // [260] phi uctoa::value#2 = uctoa::value#6 [phi:uctoa::@4->uctoa::@1#2] -- register_copy 
    // [260] phi uctoa::digit#2 = uctoa::digit#1 [phi:uctoa::@4->uctoa::@1#3] -- register_copy 
    jmp __b1
    // uctoa::@5
  __b5:
    // [271] uctoa_append::buffer#0 = uctoa::buffer#11
    // [272] uctoa_append::value#0 = uctoa::value#2
    // [273] uctoa_append::sub#0 = uctoa::digit_value#0
    // [274] call uctoa_append 
    // [321] phi from uctoa::@5 to uctoa_append [phi:uctoa::@5->uctoa_append]
  uctoa_append_from___b5:
    jsr uctoa_append
    // [275] uctoa_append::return#0 = uctoa_append::value#2
    jmp __b6
    // uctoa::@6
  __b6:
    // [276] uctoa::value#0 = uctoa_append::return#0
    // [277] uctoa::buffer#4 = ++ uctoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // [269] phi from uctoa::@6 to uctoa::@4 [phi:uctoa::@6->uctoa::@4]
  __b4_from___b6:
    // [269] phi uctoa::buffer#14 = uctoa::buffer#4 [phi:uctoa::@6->uctoa::@4#0] -- register_copy 
    // [269] phi uctoa::started#4 = 1 [phi:uctoa::@6->uctoa::@4#1] -- vbuz1=vbuc1 
    lda #1
    sta.z started
    // [269] phi uctoa::value#6 = uctoa::value#0 [phi:uctoa::@6->uctoa::@4#2] -- register_copy 
    jmp __b4
}
  // cputln
// Print a newline
cputln: {
    // [278] conio_line_text = conio_line_text + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z conio_line_text
    sta.z conio_line_text
    bcc !+
    inc.z conio_line_text+1
  !:
    // [279] conio_line_color = conio_line_color + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z conio_line_color
    sta.z conio_line_color
    bcc !+
    inc.z conio_line_color+1
  !:
    // [280] conio_cursor_x = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // [281] conio_cursor_y = ++ conio_cursor_y -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_y
    // [282] call cscroll 
    jsr cscroll
    jmp __breturn
    // cputln::@return
  __breturn:
    // [283] return 
    rts
}
  // utoa_append
// Used to convert a single digit of an unsigned number value to a string representation
// Counts a single digit up from '0' as long as the value is larger than sub.
// Each time the digit is increased sub is subtracted from value.
// - buffer : pointer to the char that receives the digit
// - value : The value where the digit will be derived from
// - sub : the value of a '1' in the digit. Subtracted continually while the digit is increased.
//        (For decimal the subs used are 10000, 1000, 100, 10, 1)
// returns : the value reduced by sub * digit so that it is less than sub.
// utoa_append(byte* zp($a) buffer, word zp($f) value, word zp($27) sub)
utoa_append: {
    .label buffer = $a
    .label value = $f
    .label sub = $27
    .label return = $f
    .label digit = $e
    // [285] phi from utoa_append to utoa_append::@1 [phi:utoa_append->utoa_append::@1]
  __b1_from_utoa_append:
    // [285] phi utoa_append::digit#2 = 0 [phi:utoa_append->utoa_append::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta.z digit
    // [285] phi utoa_append::value#2 = utoa_append::value#0 [phi:utoa_append->utoa_append::@1#1] -- register_copy 
    jmp __b1
    // utoa_append::@1
  __b1:
    // [286] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2 -- vwuz1_ge_vwuz2_then_la1 
    lda.z sub+1
    cmp.z value+1
    bne !+
    lda.z sub
    cmp.z value
    beq __b2
  !:
    bcc __b2
    jmp __b3
    // utoa_append::@3
  __b3:
    // [287] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2] -- _deref_pbuz1=pbuc1_derefidx_vbuz2 
    ldy.z digit
    lda DIGITS,y
    ldy #0
    sta (buffer),y
    jmp __breturn
    // utoa_append::@return
  __breturn:
    // [288] return 
    rts
    // utoa_append::@2
  __b2:
    // [289] utoa_append::digit#1 = ++ utoa_append::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // [290] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z value
    sec
    sbc.z sub
    sta.z value
    lda.z value+1
    sbc.z sub+1
    sta.z value+1
    // [285] phi from utoa_append::@2 to utoa_append::@1 [phi:utoa_append::@2->utoa_append::@1]
  __b1_from___b2:
    // [285] phi utoa_append::digit#2 = utoa_append::digit#1 [phi:utoa_append::@2->utoa_append::@1#0] -- register_copy 
    // [285] phi utoa_append::value#2 = utoa_append::value#1 [phi:utoa_append::@2->utoa_append::@1#1] -- register_copy 
    jmp __b1
}
  // strlen
// Computes the length of the string str up to but not including the terminating null character.
// strlen(byte* zp($f) str)
strlen: {
    .label len = $27
    .label str = $f
    .label return = $27
    // [292] phi from strlen to strlen::@1 [phi:strlen->strlen::@1]
  __b1_from_strlen:
    // [292] phi strlen::len#2 = 0 [phi:strlen->strlen::@1#0] -- vwuz1=vwuc1 
    lda #<0
    sta.z len
    lda #>0
    sta.z len+1
    // [292] phi strlen::str#2 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:strlen->strlen::@1#1] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z str
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z str+1
    jmp __b1
    // strlen::@1
  __b1:
    // [293] if(0!=*strlen::str#2) goto strlen::@2 -- 0_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (str),y
    cmp #0
    bne __b2
    jmp __breturn
    // strlen::@return
  __breturn:
    // [294] return 
    rts
    // strlen::@2
  __b2:
    // [295] strlen::len#1 = ++ strlen::len#2 -- vwuz1=_inc_vwuz1 
    inc.z len
    bne !+
    inc.z len+1
  !:
    // [296] strlen::str#0 = ++ strlen::str#2 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    // [292] phi from strlen::@2 to strlen::@1 [phi:strlen::@2->strlen::@1]
  __b1_from___b2:
    // [292] phi strlen::len#2 = strlen::len#1 [phi:strlen::@2->strlen::@1#0] -- register_copy 
    // [292] phi strlen::str#2 = strlen::str#0 [phi:strlen::@2->strlen::@1#1] -- register_copy 
    jmp __b1
}
  // printf_padding
// Print a padding char a number of times
// printf_padding(byte zp($d) pad, byte zp($e) length)
printf_padding: {
    .label i = $2e
    .label length = $e
    .label pad = $d
    // [298] phi from printf_padding to printf_padding::@1 [phi:printf_padding->printf_padding::@1]
  __b1_from_printf_padding:
    // [298] phi printf_padding::i#2 = 0 [phi:printf_padding->printf_padding::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta.z i
    jmp __b1
    // printf_padding::@1
  __b1:
    // [299] if(printf_padding::i#2<printf_padding::length#4) goto printf_padding::@2 -- vbuz1_lt_vbuz2_then_la1 
    lda.z i
    cmp.z length
    bcc __b2
    jmp __breturn
    // printf_padding::@return
  __breturn:
    // [300] return 
    rts
    // printf_padding::@2
  __b2:
    // [301] cputc::c#1 = printf_padding::pad#5
    // [302] call cputc 
    // [169] phi from printf_padding::@2 to cputc [phi:printf_padding::@2->cputc]
  cputc_from___b2:
    // [169] phi cputc::c#3 = cputc::c#1 [phi:printf_padding::@2->cputc#0] -- register_copy 
    jsr cputc
    jmp __b3
    // printf_padding::@3
  __b3:
    // [303] printf_padding::i#1 = ++ printf_padding::i#2 -- vbuz1=_inc_vbuz1 
    inc.z i
    // [298] phi from printf_padding::@3 to printf_padding::@1 [phi:printf_padding::@3->printf_padding::@1]
  __b1_from___b3:
    // [298] phi printf_padding::i#2 = printf_padding::i#1 [phi:printf_padding::@3->printf_padding::@1#0] -- register_copy 
    jmp __b1
}
  // strupr
// Converts a string to uppercase.
strupr: {
    .label str = printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    .label __0 = $e
    .label src = $27
    // [305] phi from strupr to strupr::@1 [phi:strupr->strupr::@1]
  __b1_from_strupr:
    // [305] phi strupr::src#2 = strupr::str#0 [phi:strupr->strupr::@1#0] -- pbuz1=pbuc1 
    lda #<str
    sta.z src
    lda #>str
    sta.z src+1
    jmp __b1
    // strupr::@1
  __b1:
    // [306] if(0!=*strupr::src#2) goto strupr::@2 -- 0_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (src),y
    cmp #0
    bne __b2
    jmp __breturn
    // strupr::@return
  __breturn:
    // [307] return 
    rts
    // strupr::@2
  __b2:
    // [308] toupper::ch#0 = *strupr::src#2 -- vbuz1=_deref_pbuz2 
    ldy #0
    lda (src),y
    sta.z toupper.ch
    // [309] call toupper 
    jsr toupper
    // [310] toupper::return#3 = toupper::return#2
    jmp __b3
    // strupr::@3
  __b3:
    // [311] strupr::$0 = toupper::return#3
    // [312] *strupr::src#2 = strupr::$0 -- _deref_pbuz1=vbuz2 
    lda.z __0
    ldy #0
    sta (src),y
    // [313] strupr::src#1 = ++ strupr::src#2 -- pbuz1=_inc_pbuz1 
    inc.z src
    bne !+
    inc.z src+1
  !:
    // [305] phi from strupr::@3 to strupr::@1 [phi:strupr::@3->strupr::@1]
  __b1_from___b3:
    // [305] phi strupr::src#2 = strupr::src#1 [phi:strupr::@3->strupr::@1#0] -- register_copy 
    jmp __b1
}
  // ultoa_append
// Used to convert a single digit of an unsigned number value to a string representation
// Counts a single digit up from '0' as long as the value is larger than sub.
// Each time the digit is increased sub is subtracted from value.
// - buffer : pointer to the char that receives the digit
// - value : The value where the digit will be derived from
// - sub : the value of a '1' in the digit. Subtracted continually while the digit is increased.
//        (For decimal the subs used are 10000, 1000, 100, 10, 1)
// returns : the value reduced by sub * digit so that it is less than sub.
// ultoa_append(byte* zp($a) buffer, dword zp(5) value, dword zp($2a) sub)
ultoa_append: {
    .label buffer = $a
    .label value = 5
    .label sub = $2a
    .label return = 5
    .label digit = $2e
    // [315] phi from ultoa_append to ultoa_append::@1 [phi:ultoa_append->ultoa_append::@1]
  __b1_from_ultoa_append:
    // [315] phi ultoa_append::digit#2 = 0 [phi:ultoa_append->ultoa_append::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta.z digit
    // [315] phi ultoa_append::value#2 = ultoa_append::value#0 [phi:ultoa_append->ultoa_append::@1#1] -- register_copy 
    jmp __b1
    // ultoa_append::@1
  __b1:
    // [316] if(ultoa_append::value#2>=ultoa_append::sub#0) goto ultoa_append::@2 -- vduz1_ge_vduz2_then_la1 
    lda.z value+3
    cmp.z sub+3
    bcc !+
    bne __b2
    lda.z value+2
    cmp.z sub+2
    bcc !+
    bne __b2
    lda.z value+1
    cmp.z sub+1
    bcc !+
    bne __b2
    lda.z value
    cmp.z sub
    bcs __b2
  !:
    jmp __b3
    // ultoa_append::@3
  __b3:
    // [317] *ultoa_append::buffer#0 = DIGITS[ultoa_append::digit#2] -- _deref_pbuz1=pbuc1_derefidx_vbuz2 
    ldy.z digit
    lda DIGITS,y
    ldy #0
    sta (buffer),y
    jmp __breturn
    // ultoa_append::@return
  __breturn:
    // [318] return 
    rts
    // ultoa_append::@2
  __b2:
    // [319] ultoa_append::digit#1 = ++ ultoa_append::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // [320] ultoa_append::value#1 = ultoa_append::value#2 - ultoa_append::sub#0 -- vduz1=vduz1_minus_vduz2 
    lda.z value
    sec
    sbc.z sub
    sta.z value
    lda.z value+1
    sbc.z sub+1
    sta.z value+1
    lda.z value+2
    sbc.z sub+2
    sta.z value+2
    lda.z value+3
    sbc.z sub+3
    sta.z value+3
    // [315] phi from ultoa_append::@2 to ultoa_append::@1 [phi:ultoa_append::@2->ultoa_append::@1]
  __b1_from___b2:
    // [315] phi ultoa_append::digit#2 = ultoa_append::digit#1 [phi:ultoa_append::@2->ultoa_append::@1#0] -- register_copy 
    // [315] phi ultoa_append::value#2 = ultoa_append::value#1 [phi:ultoa_append::@2->ultoa_append::@1#1] -- register_copy 
    jmp __b1
}
  // uctoa_append
// Used to convert a single digit of an unsigned number value to a string representation
// Counts a single digit up from '0' as long as the value is larger than sub.
// Each time the digit is increased sub is subtracted from value.
// - buffer : pointer to the char that receives the digit
// - value : The value where the digit will be derived from
// - sub : the value of a '1' in the digit. Subtracted continually while the digit is increased.
//        (For decimal the subs used are 10000, 1000, 100, 10, 1)
// returns : the value reduced by sub * digit so that it is less than sub.
// uctoa_append(byte* zp($f) buffer, byte zp($c) value, byte zp($2e) sub)
uctoa_append: {
    .label buffer = $f
    .label value = $c
    .label sub = $2e
    .label return = $c
    .label digit = $e
    // [322] phi from uctoa_append to uctoa_append::@1 [phi:uctoa_append->uctoa_append::@1]
  __b1_from_uctoa_append:
    // [322] phi uctoa_append::digit#2 = 0 [phi:uctoa_append->uctoa_append::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta.z digit
    // [322] phi uctoa_append::value#2 = uctoa_append::value#0 [phi:uctoa_append->uctoa_append::@1#1] -- register_copy 
    jmp __b1
    // uctoa_append::@1
  __b1:
    // [323] if(uctoa_append::value#2>=uctoa_append::sub#0) goto uctoa_append::@2 -- vbuz1_ge_vbuz2_then_la1 
    lda.z value
    cmp.z sub
    bcs __b2
    jmp __b3
    // uctoa_append::@3
  __b3:
    // [324] *uctoa_append::buffer#0 = DIGITS[uctoa_append::digit#2] -- _deref_pbuz1=pbuc1_derefidx_vbuz2 
    ldy.z digit
    lda DIGITS,y
    ldy #0
    sta (buffer),y
    jmp __breturn
    // uctoa_append::@return
  __breturn:
    // [325] return 
    rts
    // uctoa_append::@2
  __b2:
    // [326] uctoa_append::digit#1 = ++ uctoa_append::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // [327] uctoa_append::value#1 = uctoa_append::value#2 - uctoa_append::sub#0 -- vbuz1=vbuz1_minus_vbuz2 
    lda.z value
    sec
    sbc.z sub
    sta.z value
    // [322] phi from uctoa_append::@2 to uctoa_append::@1 [phi:uctoa_append::@2->uctoa_append::@1]
  __b1_from___b2:
    // [322] phi uctoa_append::digit#2 = uctoa_append::digit#1 [phi:uctoa_append::@2->uctoa_append::@1#0] -- register_copy 
    // [322] phi uctoa_append::value#2 = uctoa_append::value#1 [phi:uctoa_append::@2->uctoa_append::@1#1] -- register_copy 
    jmp __b1
}
  // cscroll
// Scroll the entire screen if the cursor is beyond the last line
cscroll: {
    // [328] if(conio_cursor_y!=$19) goto cscroll::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #$19
    cmp.z conio_cursor_y
    bne __breturn
    // [329] phi from cscroll to cscroll::@1 [phi:cscroll->cscroll::@1]
  __b1_from_cscroll:
    jmp __b1
    // cscroll::@1
  __b1:
    // [330] call memcpy 
    // [346] phi from cscroll::@1 to memcpy [phi:cscroll::@1->memcpy]
  memcpy_from___b1:
    // [346] phi memcpy::destination#2 = (void*)DEFAULT_SCREEN [phi:cscroll::@1->memcpy#0] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN
    sta.z memcpy.destination
    lda #>DEFAULT_SCREEN
    sta.z memcpy.destination+1
    // [346] phi memcpy::source#2 = (void*)DEFAULT_SCREEN+$28 [phi:cscroll::@1->memcpy#1] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN+$28
    sta.z memcpy.source
    lda #>DEFAULT_SCREEN+$28
    sta.z memcpy.source+1
    jsr memcpy
    // [331] phi from cscroll::@1 to cscroll::@2 [phi:cscroll::@1->cscroll::@2]
  __b2_from___b1:
    jmp __b2
    // cscroll::@2
  __b2:
    // [332] call memcpy 
    // [346] phi from cscroll::@2 to memcpy [phi:cscroll::@2->memcpy]
  memcpy_from___b2:
    // [346] phi memcpy::destination#2 = (void*)COLORRAM [phi:cscroll::@2->memcpy#0] -- pvoz1=pvoc1 
    lda #<COLORRAM
    sta.z memcpy.destination
    lda #>COLORRAM
    sta.z memcpy.destination+1
    // [346] phi memcpy::source#2 = (void*)COLORRAM+$28 [phi:cscroll::@2->memcpy#1] -- pvoz1=pvoc1 
    lda #<COLORRAM+$28
    sta.z memcpy.source
    lda #>COLORRAM+$28
    sta.z memcpy.source+1
    jsr memcpy
    // [333] phi from cscroll::@2 to cscroll::@3 [phi:cscroll::@2->cscroll::@3]
  __b3_from___b2:
    jmp __b3
    // cscroll::@3
  __b3:
    // [334] call memset 
    // [356] phi from cscroll::@3 to memset [phi:cscroll::@3->memset]
  memset_from___b3:
    // [356] phi memset::c#4 = ' ' [phi:cscroll::@3->memset#0] -- vbuz1=vbuc1 
    lda #' '
    sta.z memset.c
    // [356] phi memset::str#3 = (void*)DEFAULT_SCREEN+(word)$19*$28-$28 [phi:cscroll::@3->memset#1] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN+$19*$28-$28
    sta.z memset.str
    lda #>DEFAULT_SCREEN+$19*$28-$28
    sta.z memset.str+1
    jsr memset
    // [335] phi from cscroll::@3 to cscroll::@4 [phi:cscroll::@3->cscroll::@4]
  __b4_from___b3:
    jmp __b4
    // cscroll::@4
  __b4:
    // [336] call memset 
    // [356] phi from cscroll::@4 to memset [phi:cscroll::@4->memset]
  memset_from___b4:
    // [356] phi memset::c#4 = LIGHT_BLUE [phi:cscroll::@4->memset#0] -- vbuz1=vbuc1 
    lda #LIGHT_BLUE
    sta.z memset.c
    // [356] phi memset::str#3 = (void*)COLORRAM+(word)$19*$28-$28 [phi:cscroll::@4->memset#1] -- pvoz1=pvoc1 
    lda #<COLORRAM+$19*$28-$28
    sta.z memset.str
    lda #>COLORRAM+$19*$28-$28
    sta.z memset.str+1
    jsr memset
    jmp __b5
    // cscroll::@5
  __b5:
    // [337] conio_line_text = conio_line_text - $28 -- pbuz1=pbuz1_minus_vbuc1 
    sec
    lda.z conio_line_text
    sbc #$28
    sta.z conio_line_text
    lda.z conio_line_text+1
    sbc #0
    sta.z conio_line_text+1
    // [338] conio_line_color = conio_line_color - $28 -- pbuz1=pbuz1_minus_vbuc1 
    sec
    lda.z conio_line_color
    sbc #$28
    sta.z conio_line_color
    lda.z conio_line_color+1
    sbc #0
    sta.z conio_line_color+1
    // [339] conio_cursor_y = -- conio_cursor_y -- vbuz1=_dec_vbuz1 
    dec.z conio_cursor_y
    jmp __breturn
    // cscroll::@return
  __breturn:
    // [340] return 
    rts
}
  // toupper
// Convert lowercase alphabet to uppercase
// Returns uppercase equivalent to c, if such value exists, else c remains unchanged
// toupper(byte zp($e) ch)
toupper: {
    .label return = $e
    .label ch = $e
    // [341] if(toupper::ch#0<'a') goto toupper::@return -- vbuz1_lt_vbuc1_then_la1 
    lda.z ch
    cmp #'a'
    bcc __breturn_from_toupper
    jmp __b2
    // toupper::@2
  __b2:
    // [342] if(toupper::ch#0<='z') goto toupper::@1 -- vbuz1_le_vbuc1_then_la1 
    lda #'z'
    cmp.z ch
    bcs __b1
    // [344] phi from toupper toupper::@1 toupper::@2 to toupper::@return [phi:toupper/toupper::@1/toupper::@2->toupper::@return]
  __breturn_from_toupper:
  __breturn_from___b1:
  __breturn_from___b2:
    // [344] phi toupper::return#2 = toupper::ch#0 [phi:toupper/toupper::@1/toupper::@2->toupper::@return#0] -- register_copy 
    jmp __breturn
    // toupper::@1
  __b1:
    // [343] toupper::return#0 = toupper::ch#0 + 'A'-'a' -- vbuz1=vbuz1_plus_vbuc1 
    lax.z return
    axs #-['A'-'a']
    stx.z return
    jmp __breturn_from___b1
    // toupper::@return
  __breturn:
    // [345] return 
    rts
}
  // memcpy
// Copy block of memory (forwards)
// Copies the values of num bytes from the location pointed to by source directly to the memory block pointed to by destination.
// memcpy(void* zp($f) destination, void* zp($27) source)
memcpy: {
    .label src_end = $2f
    .label dst = $f
    .label src = $27
    .label source = $27
    .label destination = $f
    // [347] memcpy::src_end#0 = (byte*)memcpy::source#2 + (word)$19*$28-$28 -- pbuz1=pbuz2_plus_vwuc1 
    clc
    lda.z source
    adc #<$19*$28-$28
    sta.z src_end
    lda.z source+1
    adc #>$19*$28-$28
    sta.z src_end+1
    // [348] memcpy::src#4 = (byte*)memcpy::source#2
    // [349] memcpy::dst#4 = (byte*)memcpy::destination#2
    // [350] phi from memcpy memcpy::@2 to memcpy::@1 [phi:memcpy/memcpy::@2->memcpy::@1]
  __b1_from_memcpy:
  __b1_from___b2:
    // [350] phi memcpy::dst#2 = memcpy::dst#4 [phi:memcpy/memcpy::@2->memcpy::@1#0] -- register_copy 
    // [350] phi memcpy::src#2 = memcpy::src#4 [phi:memcpy/memcpy::@2->memcpy::@1#1] -- register_copy 
    jmp __b1
    // memcpy::@1
  __b1:
    // [351] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2 -- pbuz1_neq_pbuz2_then_la1 
    lda.z src+1
    cmp.z src_end+1
    bne __b2
    lda.z src
    cmp.z src_end
    bne __b2
    jmp __breturn
    // memcpy::@return
  __breturn:
    // [352] return 
    rts
    // memcpy::@2
  __b2:
    // [353] *memcpy::dst#2 = *memcpy::src#2 -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (src),y
    ldy #0
    sta (dst),y
    // [354] memcpy::dst#1 = ++ memcpy::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [355] memcpy::src#1 = ++ memcpy::src#2 -- pbuz1=_inc_pbuz1 
    inc.z src
    bne !+
    inc.z src+1
  !:
    jmp __b1_from___b2
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
// memset(void* zp($f) str, byte zp($1b) c)
memset: {
    .label end = $2f
    .label dst = $f
    .label str = $f
    .label c = $1b
    jmp __b1
    // memset::@1
  __b1:
    // [357] memset::end#0 = (byte*)memset::str#3 + $28 -- pbuz1=pbuz2_plus_vbuc1 
    lda #$28
    clc
    adc.z str
    sta.z end
    lda #0
    adc.z str+1
    sta.z end+1
    // [358] memset::dst#4 = (byte*)memset::str#3
    // [359] phi from memset::@1 memset::@3 to memset::@2 [phi:memset::@1/memset::@3->memset::@2]
  __b2_from___b1:
  __b2_from___b3:
    // [359] phi memset::dst#2 = memset::dst#4 [phi:memset::@1/memset::@3->memset::@2#0] -- register_copy 
    jmp __b2
    // memset::@2
  __b2:
    // [360] if(memset::dst#2!=memset::end#0) goto memset::@3 -- pbuz1_neq_pbuz2_then_la1 
    lda.z dst+1
    cmp.z end+1
    bne __b3
    lda.z dst
    cmp.z end
    bne __b3
    jmp __breturn
    // memset::@return
  __breturn:
    // [361] return 
    rts
    // memset::@3
  __b3:
    // [362] *memset::dst#2 = memset::c#4 -- _deref_pbuz1=vbuz2 
    lda.z c
    ldy #0
    sta (dst),y
    // [363] memset::dst#1 = ++ memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    jmp __b2_from___b3
}
  // File Data
.segment Data
  // The digits used for numbers
  DIGITS: .text "0123456789abcdef"
  // Values of hexadecimal digits
  RADIX_HEXADECIMAL_VALUES_CHAR: .byte $10
  // Values of decimal digits
  RADIX_DECIMAL_VALUES: .word $2710, $3e8, $64, $a
  // Values of decimal digits
  RADIX_DECIMAL_VALUES_LONG: .dword $3b9aca00, $5f5e100, $989680, $f4240, $186a0, $2710, $3e8, $64, $a
  // The board. board[i] holds the column position of the queen on row i. 
  board: .fill $14, 0
  // Buffer used for stringified number being printed
  printf_buffer: .fill SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER, 0

ASSEMBLER OPTIMIZATIONS
Removing instruction jmp __init1
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b7
Removing instruction jmp __b5
Removing instruction jmp __b6
Removing instruction jmp __b3
Removing instruction jmp __b2
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __b6
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __b6
Removing instruction jmp __b11
Removing instruction jmp __b12
Removing instruction jmp __b13
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b4
Removing instruction jmp __b15
Removing instruction jmp __b5
Removing instruction jmp __b7
Removing instruction jmp __b10
Removing instruction jmp __b9
Removing instruction jmp __b8
Removing instruction jmp __b14
Removing instruction jmp __b3
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b5
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b7
Removing instruction jmp __b4
Removing instruction jmp __b6
Removing instruction jmp __b6
Removing instruction jmp __b14
Removing instruction jmp __b7
Removing instruction jmp __b13
Removing instruction jmp __b21
Removing instruction jmp __b1
Removing instruction jmp __b17
Removing instruction jmp __b16
Removing instruction jmp __b2
Removing instruction jmp __b9
Removing instruction jmp __b3
Removing instruction jmp __b18
Removing instruction jmp __b4
Removing instruction jmp __b11
Removing instruction jmp __b5
Removing instruction jmp __b15
Removing instruction jmp __b20
Removing instruction jmp __b19
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b7
Removing instruction jmp __b4
Removing instruction jmp __b6
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b7
Removing instruction jmp __b4
Removing instruction jmp __b6
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __breturn
Removing instruction jmp __b2
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __breturn
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction lda #0
Removing instruction lda #>0
Removing instruction lda.z row
Replacing instruction ldy.z r with TAY
Replacing instruction lda.z __4 with TYA
Removing instruction lda.z line
Replacing instruction lda.z __0 with TXA
Removing instruction lda #0
Removing instruction ldy.z c
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction ldy.z conio_cursor_x
Replacing instruction ldy.z __11 with TAY
Replacing instruction ldy #0 with TAY
Replacing instruction ldy.z __10 with TAY
Removing instruction lda.z padding
Removing instruction lda #0
Replacing instruction ldy.z __11 with TAY
Replacing instruction ldy #0 with TAY
Replacing instruction ldy.z __10 with TAY
Removing instruction lda #0
Replacing instruction ldy #0 with TAY
Removing instruction lda #>0
Removing instruction ldy #0
Succesful ASM optimization Pass5UnnecesaryLoadElimination
Replacing label __b2_from_conio_c64_init with __b1
Replacing label __breturn_from___b2 with __breturn_from___b6
Replacing label __b4_from___b3 with __b4
Replacing label __b8_from___b6 with __b8
Replacing label __b3_from_gotoxy with __b2
Replacing label __b1 with __b2
Replacing label __b1_from___b2 with __b1
Replacing label __breturn_from___b1 with __breturn
Replacing label __b1_from_cputc with __b1
Replacing label __b1_from_printf_number_buffer with __b1_from___b13
Replacing label __b13_from___b14 with __b13
Replacing label __b21_from___b13 with __b1
Replacing label __b5_from___b4 with __b5
Replacing label __breturn_from_toupper with __breturn_from___b2
Replacing label __breturn_from___b1 with __breturn_from___b2
Replacing label __b1_from___b2 with __b1
Replacing label __b2_from___b3 with __b2
Removing instruction __b1_from___init1:
Removing instruction main_from___b1:
Removing instruction __b2_from_conio_c64_init:
Removing instruction __b2:
Removing instruction __b1_from___b2:
Removing instruction gotoxy_from___b1:
Removing instruction __b1_from_main:
Removing instruction cputs_from___b1:
Removing instruction __b2_from___b1:
Removing instruction cputs_from___b2:
Removing instruction __b3_from___b2:
Removing instruction printf_uint_from___b3:
Removing instruction __b6_from___b5:
Removing instruction cputs_from___b6:
Removing instruction __breturn_from___b2:
Removing instruction __b11_from_print:
Removing instruction cputs_from___b11:
Removing instruction __b13_from___b12:
Removing instruction cputs_from___b13:
Removing instruction __b4_from___b3:
Removing instruction cputs_from___b4:
Removing instruction printf_uchar_from___b15:
Removing instruction __b10_from___b6:
Removing instruction cputs_from___b10:
Removing instruction __b8_from___b6:
Removing instruction cputs_from___b8:
Removing instruction printf_uchar_from___b2:
Removing instruction __b3_from_gotoxy:
Removing instruction __b3:
Removing instruction __b1_from___b3:
Removing instruction __b1:
Removing instruction __b1_from_cputs:
Removing instruction __b1_from___b2:
Removing instruction cputc_from___b2:
Removing instruction __breturn_from___b1:
Removing instruction __breturn_from___b2:
Removing instruction __b3_from___b2:
Removing instruction __b1_from_cputc:
Removing instruction __b4_from___b7:
Removing instruction utoa_append_from___b5:
Removing instruction __b6_from_printf_number_buffer:
Removing instruction strlen_from___b6:
Removing instruction __b13_from___b14:
Removing instruction __b13_from___b7:
Removing instruction __b1_from_printf_number_buffer:
Removing instruction __b21_from___b13:
Removing instruction __b21:
Removing instruction __b1_from___b21:
Removing instruction __b11_from___b4:
Removing instruction strupr_from___b11:
Removing instruction __b5_from___b11:
Removing instruction __b5_from___b4:
Removing instruction cputs_from___b5:
Removing instruction __b4_from___b7:
Removing instruction ultoa_append_from___b5:
Removing instruction __b4_from___b7:
Removing instruction uctoa_append_from___b5:
Removing instruction cputc_from___b2:
Removing instruction __b1_from_cscroll:
Removing instruction memcpy_from___b1:
Removing instruction __b2_from___b1:
Removing instruction memcpy_from___b2:
Removing instruction __b3_from___b2:
Removing instruction memset_from___b3:
Removing instruction __b4_from___b3:
Removing instruction memset_from___b4:
Removing instruction __breturn_from_toupper:
Removing instruction __breturn_from___b1:
Removing instruction __b1_from_memcpy:
Removing instruction __b1_from___b2:
Removing instruction __b2_from___b1:
Removing instruction __b2_from___b3:
Succesful ASM optimization Pass5RedundantLabelElimination
Removing instruction __init1:
Removing instruction __b1:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction legal_from___b2:
Removing instruction __b7:
Removing instruction __b5:
Removing instruction __b6:
Removing instruction print_from___b4:
Removing instruction __b1_from_conio_c64_init:
Removing instruction __breturn:
Removing instruction clrscr_from_main:
Removing instruction __b1:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction cputs_from___b4:
Removing instruction __b5:
Removing instruction printf_ulong_from___b5:
Removing instruction __b6:
Removing instruction __breturn:
Removing instruction __b1_from_legal:
Removing instruction __breturn_from___b1:
Removing instruction __b4:
Removing instruction diff_from___b4:
Removing instruction __b5:
Removing instruction diff_from___b5:
Removing instruction __b6:
Removing instruction __b1_from___b3:
Removing instruction gotoxy_from_print:
Removing instruction __b11:
Removing instruction __b12:
Removing instruction printf_ulong_from___b12:
Removing instruction __b13:
Removing instruction __b1_from___b13:
Removing instruction __b3_from___b1:
Removing instruction __breturn:
Removing instruction __b15:
Removing instruction __b5_from___b15:
Removing instruction __b7:
Removing instruction __b3_from___b7:
Removing instruction __b10:
Removing instruction __b5_from___b9:
Removing instruction __b14:
Removing instruction __b1_from___b14:
Removing instruction __b1_from_gotoxy:
Removing instruction __breturn:
Removing instruction __b1_from_clrscr:
Removing instruction __b2:
Removing instruction __breturn:
Removing instruction __b5:
Removing instruction __b1_from___b5:
Removing instruction __b3_from___b4:
Removing instruction __breturn:
Removing instruction __b1:
Removing instruction utoa_from___b1:
Removing instruction __b2:
Removing instruction printf_number_buffer_from___b2:
Removing instruction __breturn:
Removing instruction __b1:
Removing instruction ultoa_from___b1:
Removing instruction __b2:
Removing instruction printf_number_buffer_from___b2:
Removing instruction __breturn:
Removing instruction __b2:
Removing instruction __b1:
Removing instruction uctoa_from___b1:
Removing instruction __b2:
Removing instruction printf_number_buffer_from___b2:
Removing instruction __breturn:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction __b1_from_utoa:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b7:
Removing instruction __b1_from___b4:
Removing instruction __b6:
Removing instruction __b4_from___b6:
Removing instruction __b6:
Removing instruction __b14:
Removing instruction __b7:
Removing instruction __b17:
Removing instruction __b16:
Removing instruction printf_padding_from___b8:
Removing instruction __b9:
Removing instruction cputc_from___b9:
Removing instruction __b18:
Removing instruction printf_padding_from___b10:
Removing instruction __b11:
Removing instruction __b15:
Removing instruction __b20:
Removing instruction __b19:
Removing instruction printf_padding_from___b12:
Removing instruction __b1_from_ultoa:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b7:
Removing instruction __b1_from___b4:
Removing instruction __b6:
Removing instruction __b4_from___b6:
Removing instruction __b1_from_uctoa:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b7:
Removing instruction __b1_from___b4:
Removing instruction __b6:
Removing instruction __b4_from___b6:
Removing instruction __breturn:
Removing instruction __b1_from_utoa_append:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Removing instruction __b1_from_strlen:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Removing instruction __b1_from_printf_padding:
Removing instruction __breturn:
Removing instruction __b3:
Removing instruction __b1_from___b3:
Removing instruction __b1_from_strupr:
Removing instruction __breturn:
Removing instruction __b3:
Removing instruction __b1_from___b3:
Removing instruction __b1_from_ultoa_append:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Removing instruction __b1_from_uctoa_append:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Removing instruction __b1:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction __b5:
Removing instruction __b2:
Removing instruction __breturn:
Removing instruction __b1:
Removing instruction __breturn:
Succesful ASM optimization Pass5UnusedLabelElimination
Replacing jump to rts with rts in jmp __breturn
Replacing jump to rts with rts in jmp __breturn
Replacing jump to rts with rts in jmp __breturn
Replacing jump to rts with rts in jmp __breturn
Skipping double jump to __breturn in bcc __breturn_from___b2
Replacing jump to rts with rts in jmp __breturn
Skipping double jump to __breturn in jmp __breturn_from___b2
Succesful ASM optimization Pass5DoubleJumpElimination
Relabelling long label __breturn_from___b6 to __b4
Relabelling long label __b3_from___b1 to __b2
Relabelling long label __b1_from___b13 to __b6
Relabelling long label __breturn_from___b2 to __b2
Succesful ASM optimization Pass5RelabelLongLabels
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __b1
Removing instruction jmp __breturn
Succesful ASM optimization Pass5NextJumpElimination
Replacing instruction lda r with TYA
Removing instruction ldy.z i
Removing instruction lda.z buffer_sign
Succesful ASM optimization Pass5UnnecesaryLoadElimination
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __b2:
Succesful ASM optimization Pass5UnusedLabelElimination

FINAL SYMBOL TABLE
constant byte* const COLORRAM = (byte*) 55296
constant byte* const DEFAULT_SCREEN = (byte*) 1024
constant byte* DIGITS[]  = "0123456789abcdef"z
constant const byte LIGHT_BLUE = $e
constant byte OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
constant byte RADIX::BINARY = 2
constant byte RADIX::DECIMAL = $a
constant byte RADIX::HEXADECIMAL = $10
constant byte RADIX::OCTAL = 8
constant word* RADIX_DECIMAL_VALUES[]  = { $2710, $3e8, $64, $a }
constant dword* RADIX_DECIMAL_VALUES_LONG[]  = { $3b9aca00, $5f5e100, $989680, $f4240, $186a0, $2710, $3e8, $64, $a }
constant byte* RADIX_HEXADECIMAL_VALUES_CHAR[]  = { $10 }
constant byte SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
constant word STACK_BASE = $103
void __start()
constant byte* board[$14]  = { fill( $14, 0) }
void clrscr()
byte clrscr::c
byte clrscr::c#1 c zp[1]:9 20002.0
byte clrscr::c#2 c zp[1]:9 12501.25
byte clrscr::l
byte clrscr::l#1 l zp[1]:4 2002.0
byte clrscr::l#2 l zp[1]:4 333.6666666666667
byte* clrscr::line_cols
byte* clrscr::line_cols#1 line_cols zp[2]:15 1001.0
byte* clrscr::line_cols#5 line_cols zp[2]:15 1500.375
byte* clrscr::line_text
byte* clrscr::line_text#1 line_text zp[2]:10 667.3333333333334
byte* clrscr::line_text#5 line_text zp[2]:10 1714.7142857142858
void conio_c64_init()
constant byte* const conio_c64_init::BASIC_CURSOR_LINE = (byte*) 214
byte conio_c64_init::line
byte conio_c64_init::line#0 line zp[1]:2 11.0
byte conio_c64_init::line#2 line zp[1]:2 22.0
byte conio_cursor_x loadstore zp[1]:17 9.146341463414634E27
byte conio_cursor_y loadstore zp[1]:18 1.787709497206704E29
byte* conio_line_color loadstore zp[2]:21 1.3076923076923077E29
byte* conio_line_text loadstore zp[2]:19 1.2848837209302325E29
dword count loadstore zp[4]:23 3.0303030303424248E10
void cputc(byte cputc::c)
byte cputc::c
byte cputc::c#0 c zp[1]:13 2.0E28
byte cputc::c#1 c zp[1]:13 2.0E27
byte cputc::c#2 c zp[1]:13 2.00000000000002E14
byte cputc::c#3 c zp[1]:13 1.0550000000000004E29
void cputln()
void cputs(const byte* cputs::s)
byte cputs::c
byte cputs::c#1 c zp[1]:13 1.0E28
const byte* cputs::s
const byte* cputs::s#0 s zp[2]:10 5.0E27
const byte* cputs::s#11 s zp[2]:10 1.5000000000000497E28
const byte* cputs::s#12 s zp[2]:10 1.000000000000001E15
void cscroll()
byte diff(byte diff::a , byte diff::b)
byte diff::a
byte diff::a#0 a zp[1]:13 1.000000000001E12
byte diff::a#1 a zp[1]:13 1.000000000001E12
byte diff::a#2 a zp[1]:13 1.60000000000025E13
byte diff::b
byte diff::b#0 b zp[1]:9 2.000000000002E12
byte diff::b#1 b zp[1]:9 2.000000000002E12
byte diff::b#2 b zp[1]:9 1.60000000000025E13
byte diff::return
byte diff::return#0 return zp[1]:41 2.000000000002E12
byte diff::return#1 return_1 zp[1]:13 2.000000000002E12
byte diff::return#2 return_1 zp[1]:13 2.0000000000002E13
byte diff::return#3 return_1 zp[1]:13 2.0000000000002E13
byte diff::return#4 return_1 zp[1]:13 5.500000000001E12
void gotoxy(byte gotoxy::x , byte gotoxy::y)
byte*~ gotoxy::$5 zp[2]:35 202.0
byte*~ gotoxy::$6 zp[2]:31 202.0
word~ gotoxy::$7 zp[2]:31 151.5
word~ gotoxy::$8 zp[2]:33 202.0
word~ gotoxy::$9 zp[2]:31 202.0
word gotoxy::line_offset
word gotoxy::line_offset#0 line_offset zp[2]:31 101.0
byte gotoxy::x
byte gotoxy::y
byte gotoxy::y#2 y zp[1]:2 22.0
byte gotoxy::y#4 y zp[1]:2 71.0
byte gotoxy::y#5 y zp[1]:2 67.33333333333333
byte legal(byte legal::row , byte legal::column)
byte~ legal::$0 zp[1]:38 2.000000000002E12
byte~ legal::$3 zp[1]:41 3.333333333336667E11
byte~ legal::$4 zp[1]:13 2.000000000002E12
byte legal::column
byte legal::column#0 column zp[1]:37 1.6666666666683334E11
byte legal::i
byte legal::i#1 i zp[1]:3 2.000000000002E12
byte legal::i#2 i zp[1]:3 4.0000000000039996E11
byte legal::return
byte legal::return#0 return zp[1]:4 2.000000000002E12
byte legal::return#4 return zp[1]:4 3.333333333336667E11
byte legal::row
byte legal::row#0 row zp[1]:30 1.5789473684226315E11
void main()
constant byte* main::s[$29]  = " - n queens problem using backtracking -"
constant byte* main::s1[$13]  = "
number of queens:"
constant byte* main::s2[$e]  = "

solutions: "
constant byte* main::s3[3]  = ".
"
void* memcpy(void* memcpy::destination , void* memcpy::source , word memcpy::num)
void* memcpy::destination
void* memcpy::destination#2 destination zp[2]:15
byte* memcpy::dst
byte* memcpy::dst#1 dst zp[2]:15 1.0E46
byte* memcpy::dst#2 dst zp[2]:15 1.0000000000000033E46
byte* memcpy::dst#4 dst zp[2]:15 2.0E32
word memcpy::num
void* memcpy::return
void* memcpy::source
void* memcpy::source#2 source zp[2]:39
byte* memcpy::src
byte* memcpy::src#1 src zp[2]:39 2.0E46
byte* memcpy::src#2 src zp[2]:39 1.0000000000000025E46
byte* memcpy::src#4 src zp[2]:39 1.0E32
byte* memcpy::src_end
byte* memcpy::src_end#0 src_end zp[2]:47 1.2500000000000125E45
void* memset(void* memset::str , byte memset::c , word memset::num)
byte memset::c
byte memset::c#4 c zp[1]:27 1.4285714285714287E45
byte* memset::dst
byte* memset::dst#1 dst zp[2]:15 2.0E46
byte* memset::dst#2 dst zp[2]:15 1.3333333333333366E46
byte* memset::dst#4 dst zp[2]:15 2.0E32
byte* memset::end
byte* memset::end#0 end zp[2]:47 1.6666666666666835E45
word memset::num
void* memset::return
void* memset::str
void* memset::str#3 str zp[2]:15
void print()
byte print::i
byte print::i#1 i zp[1]:3 2.000000000002E12
byte print::i#2 i zp[1]:3 1.000000000001E12
byte print::i1
byte print::i1#1 i1 zp[1]:3 2.000000000002E12
byte print::i1#2 i1 zp[1]:3 1.0000000000003572E12
byte print::j
byte print::j#1 j zp[1]:9 2.0000000000002E13
byte print::j#2 j zp[1]:9 5.714285714286286E12
constant byte* print::s[3]  = "
#"
constant byte* print::s1[4]  = ":
 "
constant byte* print::s2[2]  = "
"
constant byte* print::s3[2]  = "Q"
constant byte* print::s4[2]  = "-"
struct printf_buffer_number printf_buffer loadstore mem[12] = {}
void printf_number_buffer(byte printf_number_buffer::buffer_sign , byte* printf_number_buffer::buffer_digits , byte printf_number_buffer::format_min_length , byte printf_number_buffer::format_justify_left , byte printf_number_buffer::format_sign_always , byte printf_number_buffer::format_zero_padding , byte printf_number_buffer::format_upper_case , byte printf_number_buffer::format_radix)
word~ printf_number_buffer::$19 zp[2]:39 1.00000000000001E14
struct printf_buffer_number printf_number_buffer::buffer
byte* printf_number_buffer::buffer_digits
byte printf_number_buffer::buffer_sign
byte printf_number_buffer::buffer_sign#0 buffer_sign zp[1]:41 202.0
byte printf_number_buffer::buffer_sign#1 buffer_sign zp[1]:41 202.0
byte printf_number_buffer::buffer_sign#10 buffer_sign zp[1]:41 1.55000000000103E13
byte printf_number_buffer::buffer_sign#2 buffer_sign zp[1]:41 2.0000000000002E13
struct printf_format_number printf_number_buffer::format
byte printf_number_buffer::format_justify_left
byte printf_number_buffer::format_justify_left#10 format_justify_left zp[1]:37 6.451612903225871E12
byte printf_number_buffer::format_min_length
byte printf_number_buffer::format_min_length#3 format_min_length zp[1]:30 1.00000000000001E13
byte printf_number_buffer::format_radix
byte printf_number_buffer::format_sign_always
byte printf_number_buffer::format_upper_case
byte printf_number_buffer::format_upper_case#10 format_upper_case zp[1]:12 3.846153846153885E12
byte printf_number_buffer::format_zero_padding
byte printf_number_buffer::format_zero_padding#10 format_zero_padding zp[1]:38 9.375000000000094E12
signed byte printf_number_buffer::len
signed byte printf_number_buffer::len#0 len zp[1]:13 1.500000000000015E14
signed byte printf_number_buffer::len#1 len zp[1]:13 2.00000000000002E14
signed byte printf_number_buffer::len#2 len zp[1]:13 3.00000000000003E14
signed byte printf_number_buffer::padding
signed byte printf_number_buffer::padding#1 padding zp[1]:30 1.00000000000001E14
signed byte printf_number_buffer::padding#10 padding zp[1]:30 1.904761904761924E13
void printf_padding(byte printf_padding::pad , byte printf_padding::length)
byte printf_padding::i
byte printf_padding::i#1 i zp[1]:46 2.0E27
byte printf_padding::i#2 i zp[1]:46 7.500000000000001E26
byte printf_padding::length
byte printf_padding::length#0 length zp[1]:14 2.00000000000002E14
byte printf_padding::length#1 length zp[1]:14 2.00000000000002E14
byte printf_padding::length#2 length zp[1]:14 2.00000000000002E14
byte printf_padding::length#4 length zp[1]:14 1.6666666666671665E26
byte printf_padding::pad
byte printf_padding::pad#5 pad zp[1]:13 1.6666666666666666E26
void printf_uchar(byte printf_uchar::uvalue , byte printf_uchar::format_min_length , byte printf_uchar::format_justify_left , byte printf_uchar::format_sign_always , byte printf_uchar::format_zero_padding , byte printf_uchar::format_upper_case , byte printf_uchar::format_radix)
struct printf_format_number printf_uchar::format
byte printf_uchar::format_justify_left
byte printf_uchar::format_min_length
byte printf_uchar::format_radix
byte printf_uchar::format_sign_always
byte printf_uchar::format_upper_case
byte printf_uchar::format_zero_padding
byte printf_uchar::uvalue
byte printf_uchar::uvalue#0 uvalue zp[1]:3 2.000000000002E12
byte printf_uchar::uvalue#1 uvalue zp[1]:3 2.000000000002E12
byte printf_uchar::uvalue#2 uvalue zp[1]:3 6.0000000000015E12
void printf_uint(word printf_uint::uvalue , byte printf_uint::format_min_length , byte printf_uint::format_justify_left , byte printf_uint::format_sign_always , byte printf_uint::format_zero_padding , byte printf_uint::format_upper_case , byte printf_uint::format_radix)
struct printf_format_number printf_uint::format
byte printf_uint::format_justify_left
constant byte printf_uint::format_justify_left#0 format_justify_left = 0
byte printf_uint::format_min_length
constant byte printf_uint::format_min_length#0 format_min_length = 0
byte printf_uint::format_radix
byte printf_uint::format_sign_always
byte printf_uint::format_upper_case
constant byte printf_uint::format_upper_case#0 format_upper_case = 0
byte printf_uint::format_zero_padding
constant byte printf_uint::format_zero_padding#0 format_zero_padding = 0
word printf_uint::uvalue
constant word printf_uint::uvalue#0 uvalue = 8
void printf_ulong(dword printf_ulong::uvalue , byte printf_ulong::format_min_length , byte printf_ulong::format_justify_left , byte printf_ulong::format_sign_always , byte printf_ulong::format_zero_padding , byte printf_ulong::format_upper_case , byte printf_ulong::format_radix)
struct printf_format_number printf_ulong::format
byte printf_ulong::format_justify_left
byte printf_ulong::format_min_length
byte printf_ulong::format_radix
byte printf_ulong::format_sign_always
byte printf_ulong::format_upper_case
byte printf_ulong::format_zero_padding
dword printf_ulong::uvalue
dword printf_ulong::uvalue#0 uvalue zp[4]:5 22.0
dword printf_ulong::uvalue#1 uvalue zp[4]:5 22.0
dword printf_ulong::uvalue#2 uvalue zp[4]:5 61.5
__stackcall void queen(byte queen::row)
byte~ queen::$1 zp[1]:4 2.000000000002E12
byte~ queen::$4 zp[1]:30 2.000000000002E12
constant byte queen::OFFSET_STACK_ROW = 0
volatile byte queen::column loadstore zp[1]:29 2.9411764706505884E11
volatile byte queen::r loadstore zp[1]:28 2.10526315795E11
byte queen::row
byte queen::row#0 row zp[1]:27 202.0
word strlen(byte* strlen::str)
word strlen::len
word strlen::len#1 len zp[2]:39 1.0E27
word strlen::len#2 len zp[2]:39 5.00000000000025E26
word strlen::return
word strlen::return#2 return zp[2]:39 2.00000000000002E14
byte* strlen::str
byte* strlen::str#0 str zp[2]:15 2.0E27
byte* strlen::str#2 str zp[2]:15 1.0E27
byte* strupr(byte* strupr::str)
byte~ strupr::$0 zp[1]:14 2.0E27
byte* strupr::return
byte* strupr::src
byte* strupr::src#1 src zp[2]:39 2.0E27
byte* strupr::src#2 src zp[2]:39 7.142857142857143E26
byte* strupr::str
constant byte* strupr::str#0 str = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
byte toupper(byte toupper::ch)
byte toupper::ch
byte toupper::ch#0 ch zp[1]:14 1.6999999999999998E28
byte toupper::return
byte toupper::return#0 return zp[1]:14 2.0E28
byte toupper::return#2 return zp[1]:14 1.0333333333333333E28
byte toupper::return#3 return zp[1]:14 2.0E27
void uctoa(byte uctoa::value , byte* uctoa::buffer , byte uctoa::radix)
byte* uctoa::buffer
byte* uctoa::buffer#11 buffer zp[2]:15 3.3333333333350004E25
byte* uctoa::buffer#14 buffer zp[2]:15 1.5000000000000002E26
byte* uctoa::buffer#3 buffer zp[2]:15 2.00000000000002E14
byte* uctoa::buffer#4 buffer zp[2]:15 2.0E26
byte uctoa::digit
byte uctoa::digit#1 digit zp[1]:41 2.0E26
byte uctoa::digit#2 digit zp[1]:41 3.076923076923077E25
byte uctoa::digit_value
byte uctoa::digit_value#0 digit_value zp[1]:46 6.000000000000001E25
byte* uctoa::digit_values
byte uctoa::max_digits
byte uctoa::radix
byte uctoa::started
byte uctoa::started#2 started zp[1]:13 6.000000000000001E25
byte uctoa::started#4 started zp[1]:13 1.0E26
byte uctoa::value
byte uctoa::value#0 value zp[1]:12 1.0E26
byte uctoa::value#1 value zp[1]:12 5.5000000000001E13
byte uctoa::value#2 value zp[1]:12 6.666666666670001E25
byte uctoa::value#6 value zp[1]:12 1.5000000000000002E26
byte uctoa_append(byte* uctoa_append::buffer , byte uctoa_append::value , byte uctoa_append::sub)
byte* uctoa_append::buffer
byte* uctoa_append::buffer#0 buffer zp[2]:15 1.3750000000000001E26
byte uctoa_append::digit
byte uctoa_append::digit#1 digit zp[1]:14 1.0E40
byte uctoa_append::digit#2 digit zp[1]:14 1.00000000000005E40
byte uctoa_append::return
byte uctoa_append::return#0 return zp[1]:12 2.0E26
byte uctoa_append::sub
byte uctoa_append::sub#0 sub zp[1]:46 3.33333333333335E39
byte uctoa_append::value
byte uctoa_append::value#0 value zp[1]:12 3.666666666666667E26
byte uctoa_append::value#1 value zp[1]:12 2.0E40
byte uctoa_append::value#2 value zp[1]:12 5.0000000000001833E39
void ultoa(dword ultoa::value , byte* ultoa::buffer , byte ultoa::radix)
byte~ ultoa::$10 zp[1]:46 2.00000000000002E14
byte~ ultoa::$11 zp[1]:41 2002.0
byte* ultoa::buffer
byte* ultoa::buffer#11 buffer zp[2]:10 2.8571428571571855E13
byte* ultoa::buffer#14 buffer zp[2]:10 1.500000000000015E14
byte* ultoa::buffer#3 buffer zp[2]:10 2002.0
byte* ultoa::buffer#4 buffer zp[2]:10 2.00000000000002E14
byte ultoa::digit
byte ultoa::digit#1 digit zp[1]:37 2.00000000000002E14
byte ultoa::digit#2 digit zp[1]:37 2.8571428571428855E13
dword ultoa::digit_value
dword ultoa::digit_value#0 digit_value zp[4]:42 6.000000000000059E13
dword* ultoa::digit_values
byte ultoa::max_digits
byte ultoa::radix
byte ultoa::started
byte ultoa::started#2 started zp[1]:38 5.00000000000005E13
byte ultoa::started#4 started zp[1]:38 1.00000000000001E14
dword ultoa::value
dword ultoa::value#0 value zp[4]:5 1.00000000000001E14
dword ultoa::value#1 value zp[4]:5 551.0
dword ultoa::value#2 value zp[4]:5 5.714285714300071E13
dword ultoa::value#6 value zp[4]:5 1.500000000000015E14
dword ultoa_append(byte* ultoa_append::buffer , dword ultoa_append::value , dword ultoa_append::sub)
byte* ultoa_append::buffer
byte* ultoa_append::buffer#0 buffer zp[2]:10 1.3750000000000025E14
byte ultoa_append::digit
byte ultoa_append::digit#1 digit zp[1]:46 1.0E27
byte ultoa_append::digit#2 digit zp[1]:46 1.0000000000005E27
dword ultoa_append::return
dword ultoa_append::return#0 return zp[4]:5 2.00000000000002E14
dword ultoa_append::sub
dword ultoa_append::sub#0 sub zp[4]:42 3.3333333333335E26
dword ultoa_append::value
dword ultoa_append::value#0 value zp[4]:5 3.666666666666674E14
dword ultoa_append::value#1 value zp[4]:5 2.0E27
dword ultoa_append::value#2 value zp[4]:5 5.0000000000018335E26
void utoa(word utoa::value , byte* utoa::buffer , byte utoa::radix)
byte~ utoa::$10 zp[1]:38 20002.0
byte~ utoa::$11 zp[1]:37 2002.0
byte* utoa::buffer
byte* utoa::buffer#11 buffer zp[2]:10 3000.4285714285716
byte* utoa::buffer#14 buffer zp[2]:10 15001.5
byte* utoa::buffer#3 buffer zp[2]:10 2002.0
byte* utoa::buffer#4 buffer zp[2]:10 20002.0
byte utoa::digit
byte utoa::digit#1 digit zp[1]:9 20002.0
byte utoa::digit#2 digit zp[1]:9 2857.4285714285716
word utoa::digit_value
word utoa::digit_value#0 digit_value zp[2]:39 6000.6
word* utoa::digit_values
byte utoa::max_digits
constant byte utoa::max_digits#1 max_digits = 5
byte utoa::radix
byte utoa::started
byte utoa::started#2 started zp[1]:30 5000.5
byte utoa::started#4 started zp[1]:30 10001.0
word utoa::value
word utoa::value#0 value zp[2]:15 10001.0
word utoa::value#2 value zp[2]:15 5714.857142857143
word utoa::value#6 value zp[2]:15 15001.5
word utoa_append(byte* utoa_append::buffer , word utoa_append::value , word utoa_append::sub)
byte* utoa_append::buffer
byte* utoa_append::buffer#0 buffer zp[2]:10 13750.25
byte utoa_append::digit
byte utoa_append::digit#1 digit zp[1]:14 1.0000001E7
byte utoa_append::digit#2 digit zp[1]:14 1.00500015E7
word utoa_append::return
word utoa_append::return#0 return zp[2]:15 20002.0
word utoa_append::sub
word utoa_append::sub#0 sub zp[2]:39 3335000.5
word utoa_append::value
word utoa_append::value#0 value zp[2]:15 36667.33333333333
word utoa_append::value#1 value zp[2]:15 2.0000002E7
word utoa_append::value#2 value zp[2]:15 5018334.166666666

zp[1]:2 [ conio_c64_init::line#2 conio_c64_init::line#0 gotoxy::y#5 gotoxy::y#4 gotoxy::y#2 ]
zp[1]:3 [ print::i#2 print::i#1 printf_uchar::uvalue#2 printf_uchar::uvalue#1 printf_uchar::uvalue#0 print::i1#2 print::i1#1 legal::i#2 legal::i#1 ]
zp[1]:4 [ clrscr::l#2 clrscr::l#1 legal::return#4 legal::return#0 queen::$1 ]
zp[4]:5 [ printf_ulong::uvalue#2 printf_ulong::uvalue#0 printf_ulong::uvalue#1 ultoa::value#2 ultoa::value#6 ultoa::value#1 ultoa::value#0 ultoa_append::value#2 ultoa_append::value#0 ultoa_append::value#1 ultoa_append::return#0 ]
zp[1]:9 [ utoa::digit#2 utoa::digit#1 diff::b#2 diff::b#0 diff::b#1 clrscr::c#2 clrscr::c#1 print::j#2 print::j#1 ]
zp[2]:10 [ ultoa::buffer#11 ultoa::buffer#14 ultoa::buffer#4 ultoa::buffer#3 ultoa_append::buffer#0 utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 cputs::s#11 cputs::s#12 cputs::s#0 clrscr::line_text#5 clrscr::line_text#1 ]
zp[1]:12 [ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 uctoa_append::return#0 printf_number_buffer::format_upper_case#10 ]
zp[1]:13 [ uctoa::started#2 uctoa::started#4 printf_number_buffer::len#2 printf_number_buffer::len#0 printf_number_buffer::len#1 cputc::c#3 cputc::c#0 cputc::c#2 cputc::c#1 printf_padding::pad#5 cputs::c#1 diff::a#2 diff::a#0 diff::a#1 diff::return#4 diff::return#2 diff::return#3 diff::return#1 legal::$4 ]
zp[1]:14 [ toupper::return#2 toupper::return#0 toupper::ch#0 toupper::return#3 strupr::$0 uctoa_append::digit#2 uctoa_append::digit#1 printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 utoa_append::digit#2 utoa_append::digit#1 ]
zp[2]:15 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 strlen::str#2 strlen::str#0 uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 uctoa::buffer#3 uctoa_append::buffer#0 utoa::value#2 utoa::value#6 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 utoa_append::return#0 clrscr::line_cols#5 clrscr::line_cols#1 ]
zp[1]:17 [ conio_cursor_x ]
zp[1]:18 [ conio_cursor_y ]
zp[2]:19 [ conio_line_text ]
zp[2]:21 [ conio_line_color ]
zp[4]:23 [ count ]
zp[1]:27 [ queen::row#0 memset::c#4 ]
zp[1]:28 [ queen::r ]
zp[1]:29 [ queen::column ]
zp[1]:30 [ queen::$4 legal::row#0 printf_number_buffer::format_min_length#3 printf_number_buffer::padding#10 printf_number_buffer::padding#1 utoa::started#2 utoa::started#4 ]
zp[2]:31 [ gotoxy::$7 gotoxy::$9 gotoxy::line_offset#0 gotoxy::$6 ]
zp[2]:33 [ gotoxy::$8 ]
zp[2]:35 [ gotoxy::$5 ]
zp[1]:37 [ utoa::$11 legal::column#0 ultoa::digit#2 ultoa::digit#1 printf_number_buffer::format_justify_left#10 ]
zp[1]:38 [ utoa::$10 legal::$0 ultoa::started#2 ultoa::started#4 printf_number_buffer::format_zero_padding#10 ]
zp[2]:39 [ utoa::digit_value#0 utoa_append::sub#0 strlen::len#2 strlen::len#1 strlen::return#2 printf_number_buffer::$19 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 strupr::src#2 strupr::src#1 ]
zp[1]:41 [ ultoa::$11 diff::return#0 legal::$3 uctoa::digit#2 uctoa::digit#1 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ]
zp[4]:42 [ ultoa::digit_value#0 ultoa_append::sub#0 ]
zp[1]:46 [ uctoa::digit_value#0 uctoa_append::sub#0 ultoa::$10 ultoa_append::digit#2 ultoa_append::digit#1 printf_padding::i#2 printf_padding::i#1 ]
zp[2]:47 [ memset::end#0 memcpy::src_end#0 ]
mem[12] [ printf_buffer ]


FINAL ASSEMBLER
Score: 2147483647

  // File Comments
// N Queens Problem in C Using Backtracking
//
// N Queens Problem is a famous puzzle in which n-queens are to be placed on a nxn chess board such that no two queens are in the same row, column or diagonal.  
//
// This is a recursive solution
  // Upstart
  // Commodore 64 PRG executable file
.file [name="eightqueens-recursive.prg", type="prg", segments="Program"]
.segmentdef Program [segments="Basic, Code, Data"]
.segmentdef Basic [start=$0801]
.segmentdef Code [start=$80d]
.segmentdef Data [startAfter="Code"]
.segment Basic
:BasicUpstart(__start)
  // Global Constants & labels
  .const LIGHT_BLUE = $e
  .const OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
  .const STACK_BASE = $103
  .const SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
  // Color Ram
  .label COLORRAM = $d800
  // Default address of screen character matrix
  .label DEFAULT_SCREEN = $400
  // The number of bytes on the screen
  // The current cursor x-position
  .label conio_cursor_x = $11
  // The current cursor y-position
  .label conio_cursor_y = $12
  // The current text cursor line start
  .label conio_line_text = $13
  // The current color cursor line start
  .label conio_line_color = $15
  // The number of found solutions
  .label count = $17
.segment Code
  // __start
__start: {
    // __start::__init1
    // __ma char conio_cursor_x = 0
    // [1] conio_cursor_x = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // __ma char conio_cursor_y = 0
    // [2] conio_cursor_y = 0 -- vbuz1=vbuc1 
    sta.z conio_cursor_y
    // __ma char *conio_line_text = CONIO_SCREEN_TEXT
    // [3] conio_line_text = DEFAULT_SCREEN -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z conio_line_text
    lda #>DEFAULT_SCREEN
    sta.z conio_line_text+1
    // __ma char *conio_line_color = CONIO_SCREEN_COLORS
    // [4] conio_line_color = COLORRAM -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z conio_line_color
    lda #>COLORRAM
    sta.z conio_line_color+1
    // unsigned long count = 0
    // [5] count = 0 -- vduz1=vduc1 
    lda #<0
    sta.z count
    sta.z count+1
    lda #<0>>$10
    sta.z count+2
    lda #>0>>$10
    sta.z count+3
    // #pragma constructor_for(conio_c64_init, cputc, clrscr, cscroll)
    // [6] call conio_c64_init 
    jsr conio_c64_init
    // [7] phi from __start::__init1 to __start::@1 [phi:__start::__init1->__start::@1]
    // __start::@1
    // [8] call main 
    // [39] phi from __start::@1 to main [phi:__start::@1->main]
    jsr main
    // __start::@return
    // [9] return 
    rts
}
  // queen
// Generates all valid placements of queens on a NxN board recursively
// Works by generating all legal placements af a queen for a specific row taking into consideration the queens already placed on the rows below 
// and then recursively generating all legal placements on the rows above.  
// queen(byte zp($1b) row)
queen: {
    .const OFFSET_STACK_ROW = 0
    .label r = $1c
    .label column = $1d
    .label __1 = 4
    .label __4 = $1e
    .label row = $1b
    // [10] queen::row#0 = stackidx(byte,queen::OFFSET_STACK_ROW) -- vbuz1=_stackidxbyte_vbuc1 
    tsx
    lda STACK_BASE+OFFSET_STACK_ROW,x
    sta.z row
    // __ma char r = row
    // [11] queen::r = queen::row#0 -- vbuz1=vbuz2 
    sta.z r
    // __ma char column=1
    // [12] queen::column = 1 -- vbuz1=vbuc1 
    lda #1
    sta.z column
    // queen::@1
  __b1:
    // for(__ma char column=1;column<=QUEENS;++column)
    // [13] if(queen::column<8+1) goto queen::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z column
    cmp #8+1
    bcc __b2
    // queen::@return
    // }
    // [14] return 
    rts
    // queen::@2
  __b2:
    // legal(r,column)
    // [15] legal::row#0 = queen::r -- vbuz1=vbuz2 
    lda.z r
    sta.z legal.row
    // [16] legal::column#0 = queen::column -- vbuz1=vbuz2 
    lda.z column
    sta.z legal.column
    // [17] call legal 
    // [56] phi from queen::@2 to legal [phi:queen::@2->legal]
    jsr legal
    // legal(r,column)
    // [18] legal::return#0 = legal::return#4
    // queen::@7
    // [19] queen::$1 = legal::return#0
    // if(legal(r,column))
    // [20] if(0==queen::$1) goto queen::@3 -- 0_eq_vbuz1_then_la1 
    lda.z __1
    beq __b3
    // queen::@5
    // board[r]=column
    // [21] board[queen::r] = queen::column -- pbuc1_derefidx_vbuz1=vbuz2 
    //no conflicts so place queen
    lda.z column
    ldy.z r
    sta board,y
    // if(r==QUEENS)
    // [22] if(queen::r==8) goto queen::@4 -- vbuz1_eq_vbuc1_then_la1 
    lda #8
    cmp.z r
    beq __b4
    // queen::@6
    // asm
    // asm { ldacolumn pha ldar pha  }
    // Perform recussive placement on rows above
    // Push the local vars on the stack (waiting for proper recursion support)
    lda column
    pha
    tya
    pha
    // r+1
    // [24] queen::$4 = queen::r + 1 -- vbuz1=vbuz2_plus_1 
    tay
    iny
    sty.z __4
    // queen(r+1)
    // [25] stackpush(byte) = queen::$4 -- _stackpushbyte_=vbuz1 
    // Do recursion        
    tya
    pha
    // [26] callexecute queen  -- jsr 
    jsr queen
    // sideeffect stackpullbytes(1) -- _stackpullbyte_1 
    pla
    // asm
    // asm { pla star pla stacolumn  }
    // Pop the local vars on the stack (waiting for proper recursion support)
    pla
    sta r
    pla
    sta column
    // queen::@3
  __b3:
    // for(__ma char column=1;column<=QUEENS;++column)
    // [29] queen::column = ++ queen::column -- vbuz1=_inc_vbuz1 
    inc.z column
    jmp __b1
    // queen::@4
  __b4:
    // count++;
    // [30] count = ++ count -- vduz1=_inc_vduz1 
    inc.z count
    bne !+
    inc.z count+1
    bne !+
    inc.z count+2
    bne !+
    inc.z count+3
  !:
    // print()
    // [31] call print 
    // [75] phi from queen::@4 to print [phi:queen::@4->print]
    jsr print
    jmp __b3
}
  // conio_c64_init
// Set initial cursor position
conio_c64_init: {
    // Position cursor at current line
    .label BASIC_CURSOR_LINE = $d6
    .label line = 2
    // char line = *BASIC_CURSOR_LINE
    // [32] conio_c64_init::line#0 = *conio_c64_init::BASIC_CURSOR_LINE -- vbuz1=_deref_pbuc1 
    lda BASIC_CURSOR_LINE
    sta.z line
    // if(line>=CONIO_HEIGHT)
    // [33] if(conio_c64_init::line#0<$19) goto conio_c64_init::@2 -- vbuz1_lt_vbuc1_then_la1 
    cmp #$19
    bcc __b1
    // [35] phi from conio_c64_init to conio_c64_init::@1 [phi:conio_c64_init->conio_c64_init::@1]
    // [35] phi conio_c64_init::line#2 = $19-1 [phi:conio_c64_init->conio_c64_init::@1#0] -- vbuz1=vbuc1 
    lda #$19-1
    sta.z line
    // [34] phi from conio_c64_init to conio_c64_init::@2 [phi:conio_c64_init->conio_c64_init::@2]
    // conio_c64_init::@2
    // [35] phi from conio_c64_init::@2 to conio_c64_init::@1 [phi:conio_c64_init::@2->conio_c64_init::@1]
    // [35] phi conio_c64_init::line#2 = conio_c64_init::line#0 [phi:conio_c64_init::@2->conio_c64_init::@1#0] -- register_copy 
    // conio_c64_init::@1
  __b1:
    // gotoxy(0, line)
    // [36] gotoxy::y#2 = conio_c64_init::line#2
    // [37] call gotoxy 
    // [104] phi from conio_c64_init::@1 to gotoxy [phi:conio_c64_init::@1->gotoxy]
    // [104] phi gotoxy::y#4 = gotoxy::y#2 [phi:conio_c64_init::@1->gotoxy#0] -- register_copy 
    jsr gotoxy
    // conio_c64_init::@return
    // }
    // [38] return 
    rts
}
  // main
main: {
    // clrscr()
    // [40] call clrscr 
    // [119] phi from main to clrscr [phi:main->clrscr]
    jsr clrscr
    // [41] phi from main to main::@1 [phi:main->main::@1]
    // main::@1
    // printf(" - n queens problem using backtracking -")
    // [42] call cputs 
    // [135] phi from main::@1 to cputs [phi:main::@1->cputs]
    // [135] phi cputs::s#12 = main::s [phi:main::@1->cputs#0] -- pbuz1=pbuc1 
    lda #<s
    sta.z cputs.s
    lda #>s
    sta.z cputs.s+1
    jsr cputs
    // [43] phi from main::@1 to main::@2 [phi:main::@1->main::@2]
    // main::@2
    // printf("\nnumber of queens:%u",QUEENS)
    // [44] call cputs 
    // [135] phi from main::@2 to cputs [phi:main::@2->cputs]
    // [135] phi cputs::s#12 = main::s1 [phi:main::@2->cputs#0] -- pbuz1=pbuc1 
    lda #<s1
    sta.z cputs.s
    lda #>s1
    sta.z cputs.s+1
    jsr cputs
    // [45] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
    // main::@3
    // printf("\nnumber of queens:%u",QUEENS)
    // [46] call printf_uint 
    // [143] phi from main::@3 to printf_uint [phi:main::@3->printf_uint]
    jsr printf_uint
    // main::@4
    // queen(1)
    // [47] stackpush(byte) = 1 -- _stackpushbyte_=vbuc1 
    lda #1
    pha
    // [48] callexecute queen  -- jsr 
    jsr queen
    // sideeffect stackpullbytes(1) -- _stackpullbyte_1 
    pla
    // printf("\n\nsolutions: %lu.\n",count)
    // [50] call cputs 
    // [135] phi from main::@4 to cputs [phi:main::@4->cputs]
    // [135] phi cputs::s#12 = main::s2 [phi:main::@4->cputs#0] -- pbuz1=pbuc1 
    lda #<s2
    sta.z cputs.s
    lda #>s2
    sta.z cputs.s+1
    jsr cputs
    // main::@5
    // printf("\n\nsolutions: %lu.\n",count)
    // [51] printf_ulong::uvalue#0 = count -- vduz1=vduz2 
    lda.z count
    sta.z printf_ulong.uvalue
    lda.z count+1
    sta.z printf_ulong.uvalue+1
    lda.z count+2
    sta.z printf_ulong.uvalue+2
    lda.z count+3
    sta.z printf_ulong.uvalue+3
    // [52] call printf_ulong 
    // [149] phi from main::@5 to printf_ulong [phi:main::@5->printf_ulong]
    // [149] phi printf_ulong::uvalue#2 = printf_ulong::uvalue#0 [phi:main::@5->printf_ulong#0] -- register_copy 
    jsr printf_ulong
    // [53] phi from main::@5 to main::@6 [phi:main::@5->main::@6]
    // main::@6
    // printf("\n\nsolutions: %lu.\n",count)
    // [54] call cputs 
    // [135] phi from main::@6 to cputs [phi:main::@6->cputs]
    // [135] phi cputs::s#12 = main::s3 [phi:main::@6->cputs#0] -- pbuz1=pbuc1 
    lda #<s3
    sta.z cputs.s
    lda #>s3
    sta.z cputs.s+1
    jsr cputs
    // main::@return
    // }
    // [55] return 
    rts
  .segment Data
    s: .text " - n queens problem using backtracking -"
    .byte 0
    s1: .text @"\nnumber of queens:"
    .byte 0
    s2: .text @"\n\nsolutions: "
    .byte 0
    s3: .text @".\n"
    .byte 0
}
.segment Code
  // legal
// Checks is a placement of the queen on the board is legal.
// Checks the passed (row, column) against all queens placed on the board on lower rows.
// If no conflict for desired position returns 1 otherwise returns 0
// legal(byte zp($1e) row, byte zp($25) column)
legal: {
    .label __0 = $26
    .label __3 = $29
    .label __4 = $d
    .label row = $1e
    .label column = $25
    // Placement is legal
    // The same column is a conflict.
    // The same diagonal is a conflict.
    .label return = 4
    .label i = 3
    // [57] phi from legal to legal::@1 [phi:legal->legal::@1]
    // [57] phi legal::i#2 = 1 [phi:legal->legal::@1#0] -- vbuz1=vbuc1 
    lda #1
    sta.z i
    // legal::@1
  __b1:
    // row-1
    // [58] legal::$0 = legal::row#0 - 1 -- vbuz1=vbuz2_minus_1 
    ldx.z row
    dex
    stx.z __0
    // for(char i=1;i<=row-1;++i)
    // [59] if(legal::i#2<=legal::$0) goto legal::@2 -- vbuz1_le_vbuz2_then_la1 
    txa
    cmp.z i
    bcs __b2
    // [60] phi from legal::@1 to legal::@return [phi:legal::@1->legal::@return]
    // [60] phi legal::return#4 = 1 [phi:legal::@1->legal::@return#0] -- vbuz1=vbuc1 
    lda #1
    sta.z return
    rts
    // [60] phi from legal::@2 legal::@6 to legal::@return [phi:legal::@2/legal::@6->legal::@return]
  __b4:
    // [60] phi legal::return#4 = 0 [phi:legal::@2/legal::@6->legal::@return#0] -- vbuz1=vbuc1 
    lda #0
    sta.z return
    // legal::@return
    // }
    // [61] return 
    rts
    // legal::@2
  __b2:
    // if(board[i]==column)
    // [62] if(board[legal::i#2]==legal::column#0) goto legal::@return -- pbuc1_derefidx_vbuz1_eq_vbuz2_then_la1 
    ldy.z i
    lda board,y
    cmp.z column
    beq __b4
    // legal::@4
    // diff(board[i],column)
    // [63] diff::a#0 = board[legal::i#2] -- vbuz1=pbuc1_derefidx_vbuz2 
    lda board,y
    sta.z diff.a
    // [64] diff::b#0 = legal::column#0 -- vbuz1=vbuz2 
    lda.z column
    sta.z diff.b
    // [65] call diff 
    // [156] phi from legal::@4 to diff [phi:legal::@4->diff]
    // [156] phi diff::b#2 = diff::b#0 [phi:legal::@4->diff#0] -- register_copy 
    // [156] phi diff::a#2 = diff::a#0 [phi:legal::@4->diff#1] -- register_copy 
    jsr diff
    // diff(board[i],column)
    // [66] diff::return#0 = diff::return#4 -- vbuz1=vbuz2 
    lda.z diff.return_1
    sta.z diff.return
    // legal::@5
    // [67] legal::$3 = diff::return#0
    // diff(i,row)
    // [68] diff::a#1 = legal::i#2 -- vbuz1=vbuz2 
    lda.z i
    sta.z diff.a
    // [69] diff::b#1 = legal::row#0 -- vbuz1=vbuz2 
    lda.z row
    sta.z diff.b
    // [70] call diff 
    // [156] phi from legal::@5 to diff [phi:legal::@5->diff]
    // [156] phi diff::b#2 = diff::b#1 [phi:legal::@5->diff#0] -- register_copy 
    // [156] phi diff::a#2 = diff::a#1 [phi:legal::@5->diff#1] -- register_copy 
    jsr diff
    // diff(i,row)
    // [71] diff::return#1 = diff::return#4
    // legal::@6
    // [72] legal::$4 = diff::return#1
    // if(diff(board[i],column)==diff(i,row))
    // [73] if(legal::$3!=legal::$4) goto legal::@3 -- vbuz1_neq_vbuz2_then_la1 
    lda.z __3
    cmp.z __4
    bne __b3
    jmp __b4
    // legal::@3
  __b3:
    // for(char i=1;i<=row-1;++i)
    // [74] legal::i#1 = ++ legal::i#2 -- vbuz1=_inc_vbuz1 
    inc.z i
    // [57] phi from legal::@3 to legal::@1 [phi:legal::@3->legal::@1]
    // [57] phi legal::i#2 = legal::i#1 [phi:legal::@3->legal::@1#0] -- register_copy 
    jmp __b1
}
  // print
// Print the board with a legal placement. Also increments the solution count.
print: {
    .label i = 3
    .label i1 = 3
    .label j = 9
    // gotoxy(0,5)
    // [76] call gotoxy 
    // [104] phi from print to gotoxy [phi:print->gotoxy]
    // [104] phi gotoxy::y#4 = 5 [phi:print->gotoxy#0] -- vbuz1=vbuc1 
    lda #5
    sta.z gotoxy.y
    jsr gotoxy
    // [77] phi from print to print::@11 [phi:print->print::@11]
    // print::@11
    // printf("\n#%lu:\n ",count)
    // [78] call cputs 
    // [135] phi from print::@11 to cputs [phi:print::@11->cputs]
    // [135] phi cputs::s#12 = print::s [phi:print::@11->cputs#0] -- pbuz1=pbuc1 
    lda #<s
    sta.z cputs.s
    lda #>s
    sta.z cputs.s+1
    jsr cputs
    // print::@12
    // printf("\n#%lu:\n ",count)
    // [79] printf_ulong::uvalue#1 = count -- vduz1=vduz2 
    lda.z count
    sta.z printf_ulong.uvalue
    lda.z count+1
    sta.z printf_ulong.uvalue+1
    lda.z count+2
    sta.z printf_ulong.uvalue+2
    lda.z count+3
    sta.z printf_ulong.uvalue+3
    // [80] call printf_ulong 
    // [149] phi from print::@12 to printf_ulong [phi:print::@12->printf_ulong]
    // [149] phi printf_ulong::uvalue#2 = printf_ulong::uvalue#1 [phi:print::@12->printf_ulong#0] -- register_copy 
    jsr printf_ulong
    // [81] phi from print::@12 to print::@13 [phi:print::@12->print::@13]
    // print::@13
    // printf("\n#%lu:\n ",count)
    // [82] call cputs 
    // [135] phi from print::@13 to cputs [phi:print::@13->cputs]
    // [135] phi cputs::s#12 = print::s1 [phi:print::@13->cputs#0] -- pbuz1=pbuc1 
    lda #<s1
    sta.z cputs.s
    lda #>s1
    sta.z cputs.s+1
    jsr cputs
    // [83] phi from print::@13 to print::@1 [phi:print::@13->print::@1]
    // [83] phi print::i#2 = 1 [phi:print::@13->print::@1#0] -- vbuz1=vbuc1 
    lda #1
    sta.z i
    // print::@1
  __b1:
    // for(char i=1;i<=QUEENS;++i)
    // [84] if(print::i#2<8+1) goto print::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z i
    cmp #8+1
    bcc __b2
    // [85] phi from print::@1 to print::@3 [phi:print::@1->print::@3]
    // [85] phi print::i1#2 = 1 [phi:print::@1->print::@3#0] -- vbuz1=vbuc1 
    lda #1
    sta.z i1
    // print::@3
  __b3:
    // for(char i=1;i<=QUEENS;++i)
    // [86] if(print::i1#2<8+1) goto print::@4 -- vbuz1_lt_vbuc1_then_la1 
    lda.z i1
    cmp #8+1
    bcc __b4
    // print::@return
    // }
    // [87] return 
    rts
    // [88] phi from print::@3 to print::@4 [phi:print::@3->print::@4]
    // print::@4
  __b4:
    // printf("\n%x",i)
    // [89] call cputs 
    // [135] phi from print::@4 to cputs [phi:print::@4->cputs]
    // [135] phi cputs::s#12 = print::s2 [phi:print::@4->cputs#0] -- pbuz1=pbuc1 
    lda #<s2
    sta.z cputs.s
    lda #>s2
    sta.z cputs.s+1
    jsr cputs
    // print::@15
    // printf("\n%x",i)
    // [90] printf_uchar::uvalue#1 = print::i1#2
    // [91] call printf_uchar 
    // [162] phi from print::@15 to printf_uchar [phi:print::@15->printf_uchar]
    // [162] phi printf_uchar::uvalue#2 = printf_uchar::uvalue#1 [phi:print::@15->printf_uchar#0] -- register_copy 
    jsr printf_uchar
    // [92] phi from print::@15 to print::@5 [phi:print::@15->print::@5]
    // [92] phi print::j#2 = 1 [phi:print::@15->print::@5#0] -- vbuz1=vbuc1 
    lda #1
    sta.z j
    // print::@5
  __b5:
    // for(char j=1;j<=QUEENS;++j)
    // [93] if(print::j#2<8+1) goto print::@6 -- vbuz1_lt_vbuc1_then_la1 
    lda.z j
    cmp #8+1
    bcc __b6
    // print::@7
    // for(char i=1;i<=QUEENS;++i)
    // [94] print::i1#1 = ++ print::i1#2 -- vbuz1=_inc_vbuz1 
    inc.z i1
    // [85] phi from print::@7 to print::@3 [phi:print::@7->print::@3]
    // [85] phi print::i1#2 = print::i1#1 [phi:print::@7->print::@3#0] -- register_copy 
    jmp __b3
    // print::@6
  __b6:
    // if(board[i]==j)
    // [95] if(board[print::i1#2]==print::j#2) goto print::@8 -- pbuc1_derefidx_vbuz1_eq_vbuz2_then_la1 
    ldy.z i1
    lda board,y
    cmp.z j
    beq __b8
    // [96] phi from print::@6 to print::@10 [phi:print::@6->print::@10]
    // print::@10
    // printf("-")
    // [97] call cputs 
    // [135] phi from print::@10 to cputs [phi:print::@10->cputs]
    // [135] phi cputs::s#12 = print::s4 [phi:print::@10->cputs#0] -- pbuz1=pbuc1 
    lda #<s4
    sta.z cputs.s
    lda #>s4
    sta.z cputs.s+1
    jsr cputs
    // print::@9
  __b9:
    // for(char j=1;j<=QUEENS;++j)
    // [98] print::j#1 = ++ print::j#2 -- vbuz1=_inc_vbuz1 
    inc.z j
    // [92] phi from print::@9 to print::@5 [phi:print::@9->print::@5]
    // [92] phi print::j#2 = print::j#1 [phi:print::@9->print::@5#0] -- register_copy 
    jmp __b5
    // [99] phi from print::@6 to print::@8 [phi:print::@6->print::@8]
    // print::@8
  __b8:
    // printf("Q")
    // [100] call cputs 
    // [135] phi from print::@8 to cputs [phi:print::@8->cputs]
    // [135] phi cputs::s#12 = print::s3 [phi:print::@8->cputs#0] -- pbuz1=pbuc1 
    lda #<s3
    sta.z cputs.s
    lda #>s3
    sta.z cputs.s+1
    jsr cputs
    jmp __b9
    // print::@2
  __b2:
    // printf("%x",i)
    // [101] printf_uchar::uvalue#0 = print::i#2
    // [102] call printf_uchar 
    // [162] phi from print::@2 to printf_uchar [phi:print::@2->printf_uchar]
    // [162] phi printf_uchar::uvalue#2 = printf_uchar::uvalue#0 [phi:print::@2->printf_uchar#0] -- register_copy 
    jsr printf_uchar
    // print::@14
    // for(char i=1;i<=QUEENS;++i)
    // [103] print::i#1 = ++ print::i#2 -- vbuz1=_inc_vbuz1 
    inc.z i
    // [83] phi from print::@14 to print::@1 [phi:print::@14->print::@1]
    // [83] phi print::i#2 = print::i#1 [phi:print::@14->print::@1#0] -- register_copy 
    jmp __b1
  .segment Data
    s: .text @"\n#"
    .byte 0
    s1: .text @":\n "
    .byte 0
    s2: .text @"\n"
    .byte 0
    s3: .text "Q"
    .byte 0
    s4: .text "-"
    .byte 0
}
.segment Code
  // gotoxy
// Set the cursor to the specified position
// gotoxy(byte zp(2) y)
gotoxy: {
    .label __5 = $23
    .label __6 = $1f
    .label __7 = $1f
    .label line_offset = $1f
    .label y = 2
    .label __8 = $21
    .label __9 = $1f
    // if(y>CONIO_HEIGHT)
    // [105] if(gotoxy::y#4<$19+1) goto gotoxy::@3 -- vbuz1_lt_vbuc1_then_la1 
    lda.z y
    cmp #$19+1
    bcc __b2
    // [107] phi from gotoxy to gotoxy::@1 [phi:gotoxy->gotoxy::@1]
    // [107] phi gotoxy::y#5 = 0 [phi:gotoxy->gotoxy::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta.z y
    // [106] phi from gotoxy to gotoxy::@3 [phi:gotoxy->gotoxy::@3]
    // gotoxy::@3
    // [107] phi from gotoxy::@3 to gotoxy::@1 [phi:gotoxy::@3->gotoxy::@1]
    // [107] phi gotoxy::y#5 = gotoxy::y#4 [phi:gotoxy::@3->gotoxy::@1#0] -- register_copy 
    // gotoxy::@1
    // gotoxy::@2
  __b2:
    // conio_cursor_x = x
    // [108] conio_cursor_x = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // conio_cursor_y = y
    // [109] conio_cursor_y = gotoxy::y#5 -- vbuz1=vbuz2 
    lda.z y
    sta.z conio_cursor_y
    // (unsigned int)y*CONIO_WIDTH
    // [110] gotoxy::$7 = (word)gotoxy::y#5 -- vwuz1=_word_vbuz2 
    lda.z y
    sta.z __7
    lda #0
    sta.z __7+1
    // unsigned int line_offset = (unsigned int)y*CONIO_WIDTH
    // [111] gotoxy::$8 = gotoxy::$7 << 2 -- vwuz1=vwuz2_rol_2 
    lda.z __7
    asl
    sta.z __8
    lda.z __7+1
    rol
    sta.z __8+1
    asl.z __8
    rol.z __8+1
    // [112] gotoxy::$9 = gotoxy::$8 + gotoxy::$7 -- vwuz1=vwuz2_plus_vwuz1 
    lda.z __9
    clc
    adc.z __8
    sta.z __9
    lda.z __9+1
    adc.z __8+1
    sta.z __9+1
    // [113] gotoxy::line_offset#0 = gotoxy::$9 << 3 -- vwuz1=vwuz1_rol_3 
    asl.z line_offset
    rol.z line_offset+1
    asl.z line_offset
    rol.z line_offset+1
    asl.z line_offset
    rol.z line_offset+1
    // CONIO_SCREEN_TEXT + line_offset
    // [114] gotoxy::$5 = DEFAULT_SCREEN + gotoxy::line_offset#0 -- pbuz1=pbuc1_plus_vwuz2 
    clc
    lda.z line_offset
    adc #<DEFAULT_SCREEN
    sta.z __5
    lda.z line_offset+1
    adc #>DEFAULT_SCREEN
    sta.z __5+1
    // conio_line_text = CONIO_SCREEN_TEXT + line_offset
    // [115] conio_line_text = gotoxy::$5 -- pbuz1=pbuz2 
    lda.z __5
    sta.z conio_line_text
    lda.z __5+1
    sta.z conio_line_text+1
    // CONIO_SCREEN_COLORS + line_offset
    // [116] gotoxy::$6 = COLORRAM + gotoxy::line_offset#0 -- pbuz1=pbuc1_plus_vwuz1 
    clc
    lda.z __6
    adc #<COLORRAM
    sta.z __6
    lda.z __6+1
    adc #>COLORRAM
    sta.z __6+1
    // conio_line_color = CONIO_SCREEN_COLORS + line_offset
    // [117] conio_line_color = gotoxy::$6 -- pbuz1=pbuz2 
    lda.z __6
    sta.z conio_line_color
    lda.z __6+1
    sta.z conio_line_color+1
    // gotoxy::@return
    // }
    // [118] return 
    rts
}
  // clrscr
// clears the screen and moves the cursor to the upper left-hand corner of the screen.
clrscr: {
    .label c = 9
    .label line_text = $a
    .label line_cols = $f
    .label l = 4
    // [120] phi from clrscr to clrscr::@1 [phi:clrscr->clrscr::@1]
    // [120] phi clrscr::line_cols#5 = COLORRAM [phi:clrscr->clrscr::@1#0] -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z line_cols
    lda #>COLORRAM
    sta.z line_cols+1
    // [120] phi clrscr::line_text#5 = DEFAULT_SCREEN [phi:clrscr->clrscr::@1#1] -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z line_text
    lda #>DEFAULT_SCREEN
    sta.z line_text+1
    // [120] phi clrscr::l#2 = 0 [phi:clrscr->clrscr::@1#2] -- vbuz1=vbuc1 
    lda #0
    sta.z l
    // clrscr::@1
  __b1:
    // for( char l=0;l<CONIO_HEIGHT; l++ )
    // [121] if(clrscr::l#2<$19) goto clrscr::@3 -- vbuz1_lt_vbuc1_then_la1 
    lda.z l
    cmp #$19
    bcc __b2
    // clrscr::@2
    // conio_cursor_x = 0
    // [122] conio_cursor_x = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // conio_cursor_y = 0
    // [123] conio_cursor_y = 0 -- vbuz1=vbuc1 
    sta.z conio_cursor_y
    // conio_line_text = CONIO_SCREEN_TEXT
    // [124] conio_line_text = DEFAULT_SCREEN -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z conio_line_text
    lda #>DEFAULT_SCREEN
    sta.z conio_line_text+1
    // conio_line_color = CONIO_SCREEN_COLORS
    // [125] conio_line_color = COLORRAM -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z conio_line_color
    lda #>COLORRAM
    sta.z conio_line_color+1
    // clrscr::@return
    // }
    // [126] return 
    rts
    // [127] phi from clrscr::@1 to clrscr::@3 [phi:clrscr::@1->clrscr::@3]
  __b2:
    // [127] phi clrscr::c#2 = 0 [phi:clrscr::@1->clrscr::@3#0] -- vbuz1=vbuc1 
    lda #0
    sta.z c
    // clrscr::@3
  __b3:
    // for( char c=0;c<CONIO_WIDTH; c++ )
    // [128] if(clrscr::c#2<$28) goto clrscr::@4 -- vbuz1_lt_vbuc1_then_la1 
    lda.z c
    cmp #$28
    bcc __b4
    // clrscr::@5
    // line_text += CONIO_WIDTH
    // [129] clrscr::line_text#1 = clrscr::line_text#5 + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z line_text
    sta.z line_text
    bcc !+
    inc.z line_text+1
  !:
    // line_cols += CONIO_WIDTH
    // [130] clrscr::line_cols#1 = clrscr::line_cols#5 + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z line_cols
    sta.z line_cols
    bcc !+
    inc.z line_cols+1
  !:
    // for( char l=0;l<CONIO_HEIGHT; l++ )
    // [131] clrscr::l#1 = ++ clrscr::l#2 -- vbuz1=_inc_vbuz1 
    inc.z l
    // [120] phi from clrscr::@5 to clrscr::@1 [phi:clrscr::@5->clrscr::@1]
    // [120] phi clrscr::line_cols#5 = clrscr::line_cols#1 [phi:clrscr::@5->clrscr::@1#0] -- register_copy 
    // [120] phi clrscr::line_text#5 = clrscr::line_text#1 [phi:clrscr::@5->clrscr::@1#1] -- register_copy 
    // [120] phi clrscr::l#2 = clrscr::l#1 [phi:clrscr::@5->clrscr::@1#2] -- register_copy 
    jmp __b1
    // clrscr::@4
  __b4:
    // line_text[c] = ' '
    // [132] clrscr::line_text#5[clrscr::c#2] = ' ' -- pbuz1_derefidx_vbuz2=vbuc1 
    lda #' '
    ldy.z c
    sta (line_text),y
    // line_cols[c] = conio_textcolor
    // [133] clrscr::line_cols#5[clrscr::c#2] = LIGHT_BLUE -- pbuz1_derefidx_vbuz2=vbuc1 
    lda #LIGHT_BLUE
    sta (line_cols),y
    // for( char c=0;c<CONIO_WIDTH; c++ )
    // [134] clrscr::c#1 = ++ clrscr::c#2 -- vbuz1=_inc_vbuz1 
    inc.z c
    // [127] phi from clrscr::@4 to clrscr::@3 [phi:clrscr::@4->clrscr::@3]
    // [127] phi clrscr::c#2 = clrscr::c#1 [phi:clrscr::@4->clrscr::@3#0] -- register_copy 
    jmp __b3
}
  // cputs
// Output a NUL-terminated string at the current cursor position
// cputs(const byte* zp($a) s)
cputs: {
    .label c = $d
    .label s = $a
    // [136] phi from cputs cputs::@2 to cputs::@1 [phi:cputs/cputs::@2->cputs::@1]
    // [136] phi cputs::s#11 = cputs::s#12 [phi:cputs/cputs::@2->cputs::@1#0] -- register_copy 
    // cputs::@1
  __b1:
    // while(c=*s++)
    // [137] cputs::c#1 = *cputs::s#11 -- vbuz1=_deref_pbuz2 
    ldy #0
    lda (s),y
    sta.z c
    // [138] cputs::s#0 = ++ cputs::s#11 -- pbuz1=_inc_pbuz1 
    inc.z s
    bne !+
    inc.z s+1
  !:
    // [139] if(0!=cputs::c#1) goto cputs::@2 -- 0_neq_vbuz1_then_la1 
    lda.z c
    bne __b2
    // cputs::@return
    // }
    // [140] return 
    rts
    // cputs::@2
  __b2:
    // cputc(c)
    // [141] cputc::c#0 = cputs::c#1
    // [142] call cputc 
    // [169] phi from cputs::@2 to cputc [phi:cputs::@2->cputc]
    // [169] phi cputc::c#3 = cputc::c#0 [phi:cputs::@2->cputc#0] -- register_copy 
    jsr cputc
    jmp __b1
}
  // printf_uint
// Print an unsigned int using a specific format
printf_uint: {
    .const format_min_length = 0
    .const format_justify_left = 0
    .const format_zero_padding = 0
    .const format_upper_case = 0
    .label uvalue = 8
    // printf_uint::@1
    // printf_buffer.sign = format.sign_always?'+':0
    // [144] *((byte*)&printf_buffer) = 0 -- _deref_pbuc1=vbuc2 
    // Handle any sign
    lda #0
    sta printf_buffer
    // utoa(uvalue, printf_buffer.digits, format.radix)
    // [145] call utoa 
  // Format number into buffer
    // [180] phi from printf_uint::@1 to utoa [phi:printf_uint::@1->utoa]
    jsr utoa
    // printf_uint::@2
    // printf_number_buffer(printf_buffer, format)
    // [146] printf_number_buffer::buffer_sign#1 = *((byte*)&printf_buffer) -- vbuz1=_deref_pbuc1 
    lda printf_buffer
    sta.z printf_number_buffer.buffer_sign
    // [147] call printf_number_buffer 
  // Print using format
    // [201] phi from printf_uint::@2 to printf_number_buffer [phi:printf_uint::@2->printf_number_buffer]
    // [201] phi printf_number_buffer::format_upper_case#10 = printf_uint::format_upper_case#0 [phi:printf_uint::@2->printf_number_buffer#0] -- vbuz1=vbuc1 
    lda #format_upper_case
    sta.z printf_number_buffer.format_upper_case
    // [201] phi printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#1 [phi:printf_uint::@2->printf_number_buffer#1] -- register_copy 
    // [201] phi printf_number_buffer::format_zero_padding#10 = printf_uint::format_zero_padding#0 [phi:printf_uint::@2->printf_number_buffer#2] -- vbuz1=vbuc1 
    lda #format_zero_padding
    sta.z printf_number_buffer.format_zero_padding
    // [201] phi printf_number_buffer::format_justify_left#10 = printf_uint::format_justify_left#0 [phi:printf_uint::@2->printf_number_buffer#3] -- vbuz1=vbuc1 
    lda #format_justify_left
    sta.z printf_number_buffer.format_justify_left
    // [201] phi printf_number_buffer::format_min_length#3 = printf_uint::format_min_length#0 [phi:printf_uint::@2->printf_number_buffer#4] -- vbuz1=vbuc1 
    lda #format_min_length
    sta.z printf_number_buffer.format_min_length
    jsr printf_number_buffer
    // printf_uint::@return
    // }
    // [148] return 
    rts
}
  // printf_ulong
// Print an unsigned int using a specific format
// printf_ulong(dword zp(5) uvalue)
printf_ulong: {
    .label uvalue = 5
    // printf_ulong::@1
    // printf_buffer.sign = format.sign_always?'+':0
    // [150] *((byte*)&printf_buffer) = 0 -- _deref_pbuc1=vbuc2 
    // Handle any sign
    lda #0
    sta printf_buffer
    // ultoa(uvalue, printf_buffer.digits, format.radix)
    // [151] ultoa::value#1 = printf_ulong::uvalue#2
    // [152] call ultoa 
  // Format number into buffer
    // [238] phi from printf_ulong::@1 to ultoa [phi:printf_ulong::@1->ultoa]
    jsr ultoa
    // printf_ulong::@2
    // printf_number_buffer(printf_buffer, format)
    // [153] printf_number_buffer::buffer_sign#0 = *((byte*)&printf_buffer) -- vbuz1=_deref_pbuc1 
    lda printf_buffer
    sta.z printf_number_buffer.buffer_sign
    // [154] call printf_number_buffer 
  // Print using format
    // [201] phi from printf_ulong::@2 to printf_number_buffer [phi:printf_ulong::@2->printf_number_buffer]
    // [201] phi printf_number_buffer::format_upper_case#10 = 0 [phi:printf_ulong::@2->printf_number_buffer#0] -- vbuz1=vbuc1 
    lda #0
    sta.z printf_number_buffer.format_upper_case
    // [201] phi printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#0 [phi:printf_ulong::@2->printf_number_buffer#1] -- register_copy 
    // [201] phi printf_number_buffer::format_zero_padding#10 = 0 [phi:printf_ulong::@2->printf_number_buffer#2] -- vbuz1=vbuc1 
    sta.z printf_number_buffer.format_zero_padding
    // [201] phi printf_number_buffer::format_justify_left#10 = 0 [phi:printf_ulong::@2->printf_number_buffer#3] -- vbuz1=vbuc1 
    sta.z printf_number_buffer.format_justify_left
    // [201] phi printf_number_buffer::format_min_length#3 = 0 [phi:printf_ulong::@2->printf_number_buffer#4] -- vbuz1=vbuc1 
    sta.z printf_number_buffer.format_min_length
    jsr printf_number_buffer
    // printf_ulong::@return
    // }
    // [155] return 
    rts
}
  // diff
// Find the absolute difference between two unsigned chars
// diff(byte zp($d) a, byte zp(9) b)
diff: {
    .label a = $d
    .label b = 9
    .label return = $29
    .label return_1 = $d
    // if(a<b)
    // [157] if(diff::a#2<diff::b#2) goto diff::@1 -- vbuz1_lt_vbuz2_then_la1 
    lda.z a
    cmp.z b
    bcc __b1
    // diff::@2
    // return a-b;
    // [158] diff::return#3 = diff::a#2 - diff::b#2 -- vbuz1=vbuz1_minus_vbuz2 
    lda.z return_1
    sec
    sbc.z b
    sta.z return_1
    // [159] phi from diff::@1 diff::@2 to diff::@return [phi:diff::@1/diff::@2->diff::@return]
    // [159] phi diff::return#4 = diff::return#2 [phi:diff::@1/diff::@2->diff::@return#0] -- register_copy 
    // diff::@return
    // }
    // [160] return 
    rts
    // diff::@1
  __b1:
    // return b-a;
    // [161] diff::return#2 = diff::b#2 - diff::a#2 -- vbuz1=vbuz2_minus_vbuz1 
    lda.z b
    sec
    sbc.z return_1
    sta.z return_1
    rts
}
  // printf_uchar
// Print an unsigned char using a specific format
// printf_uchar(byte zp(3) uvalue)
printf_uchar: {
    .label uvalue = 3
    // printf_uchar::@1
    // printf_buffer.sign = format.sign_always?'+':0
    // [163] *((byte*)&printf_buffer) = 0 -- _deref_pbuc1=vbuc2 
    // Handle any sign
    lda #0
    sta printf_buffer
    // uctoa(uvalue, printf_buffer.digits, format.radix)
    // [164] uctoa::value#1 = printf_uchar::uvalue#2 -- vbuz1=vbuz2 
    lda.z uvalue
    sta.z uctoa.value
    // [165] call uctoa 
  // Format number into buffer
    // [259] phi from printf_uchar::@1 to uctoa [phi:printf_uchar::@1->uctoa]
    jsr uctoa
    // printf_uchar::@2
    // printf_number_buffer(printf_buffer, format)
    // [166] printf_number_buffer::buffer_sign#2 = *((byte*)&printf_buffer) -- vbuz1=_deref_pbuc1 
    lda printf_buffer
    sta.z printf_number_buffer.buffer_sign
    // [167] call printf_number_buffer 
  // Print using format
    // [201] phi from printf_uchar::@2 to printf_number_buffer [phi:printf_uchar::@2->printf_number_buffer]
    // [201] phi printf_number_buffer::format_upper_case#10 = 0 [phi:printf_uchar::@2->printf_number_buffer#0] -- vbuz1=vbuc1 
    lda #0
    sta.z printf_number_buffer.format_upper_case
    // [201] phi printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 [phi:printf_uchar::@2->printf_number_buffer#1] -- register_copy 
    // [201] phi printf_number_buffer::format_zero_padding#10 = 0 [phi:printf_uchar::@2->printf_number_buffer#2] -- vbuz1=vbuc1 
    sta.z printf_number_buffer.format_zero_padding
    // [201] phi printf_number_buffer::format_justify_left#10 = 0 [phi:printf_uchar::@2->printf_number_buffer#3] -- vbuz1=vbuc1 
    sta.z printf_number_buffer.format_justify_left
    // [201] phi printf_number_buffer::format_min_length#3 = 0 [phi:printf_uchar::@2->printf_number_buffer#4] -- vbuz1=vbuc1 
    sta.z printf_number_buffer.format_min_length
    jsr printf_number_buffer
    // printf_uchar::@return
    // }
    // [168] return 
    rts
}
  // cputc
// Output one character at the current cursor position
// Moves the cursor forward. Scrolls the entire screen if needed
// cputc(byte zp($d) c)
cputc: {
    .label c = $d
    // if(c=='\n')
    // [170] if(cputc::c#3==' ') goto cputc::@1 -- vbuz1_eq_vbuc1_then_la1 
    lda #'\n'
    cmp.z c
    beq __b1
    // cputc::@2
    // conio_line_text[conio_cursor_x] = c
    // [171] conio_line_text[conio_cursor_x] = cputc::c#3 -- pbuz1_derefidx_vbuz2=vbuz3 
    lda.z c
    ldy.z conio_cursor_x
    sta (conio_line_text),y
    // conio_line_color[conio_cursor_x] = conio_textcolor
    // [172] conio_line_color[conio_cursor_x] = LIGHT_BLUE -- pbuz1_derefidx_vbuz2=vbuc1 
    lda #LIGHT_BLUE
    sta (conio_line_color),y
    // if(++conio_cursor_x==CONIO_WIDTH)
    // [173] conio_cursor_x = ++ conio_cursor_x -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_x
    // [174] if(conio_cursor_x!=$28) goto cputc::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #$28
    cmp.z conio_cursor_x
    bne __breturn
    // [175] phi from cputc::@2 to cputc::@3 [phi:cputc::@2->cputc::@3]
    // cputc::@3
    // cputln()
    // [176] call cputln 
    jsr cputln
    // cputc::@return
  __breturn:
    // }
    // [177] return 
    rts
    // [178] phi from cputc to cputc::@1 [phi:cputc->cputc::@1]
    // cputc::@1
  __b1:
    // cputln()
    // [179] call cputln 
    jsr cputln
    rts
}
  // utoa
// Converts unsigned number value to a string representing it in RADIX format.
// If the leading digits are zero they are not included in the string.
// - value : The number to be converted to RADIX
// - buffer : receives the string representing the number and zero-termination.
// - radix : The radix to convert the number to (from the enum RADIX)
// utoa(word zp($f) value, byte* zp($a) buffer)
utoa: {
    .const max_digits = 5
    .label __10 = $26
    .label __11 = $25
    .label digit_value = $27
    .label buffer = $a
    .label digit = 9
    .label value = $f
    .label started = $1e
    // [181] phi from utoa to utoa::@1 [phi:utoa->utoa::@1]
    // [181] phi utoa::buffer#11 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:utoa->utoa::@1#0] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer+1
    // [181] phi utoa::started#2 = 0 [phi:utoa->utoa::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta.z started
    // [181] phi utoa::value#2 = printf_uint::uvalue#0 [phi:utoa->utoa::@1#2] -- vwuz1=vwuc1 
    lda #<printf_uint.uvalue
    sta.z value
    lda #>printf_uint.uvalue
    sta.z value+1
    // [181] phi utoa::digit#2 = 0 [phi:utoa->utoa::@1#3] -- vbuz1=vbuc1 
    lda #0
    sta.z digit
    // utoa::@1
  __b1:
    // for( char digit=0; digit<max_digits-1; digit++ )
    // [182] if(utoa::digit#2<utoa::max_digits#1-1) goto utoa::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z digit
    cmp #max_digits-1
    bcc __b2
    // utoa::@3
    // *buffer++ = DIGITS[(char)value]
    // [183] utoa::$11 = (byte)utoa::value#2 -- vbuz1=_byte_vwuz2 
    lda.z value
    sta.z __11
    // [184] *utoa::buffer#11 = DIGITS[utoa::$11] -- _deref_pbuz1=pbuc1_derefidx_vbuz2 
    tay
    lda DIGITS,y
    ldy #0
    sta (buffer),y
    // *buffer++ = DIGITS[(char)value];
    // [185] utoa::buffer#3 = ++ utoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // *buffer = 0
    // [186] *utoa::buffer#3 = 0 -- _deref_pbuz1=vbuc1 
    lda #0
    tay
    sta (buffer),y
    // utoa::@return
    // }
    // [187] return 
    rts
    // utoa::@2
  __b2:
    // unsigned int digit_value = digit_values[digit]
    // [188] utoa::$10 = utoa::digit#2 << 1 -- vbuz1=vbuz2_rol_1 
    lda.z digit
    asl
    sta.z __10
    // [189] utoa::digit_value#0 = RADIX_DECIMAL_VALUES[utoa::$10] -- vwuz1=pwuc1_derefidx_vbuz2 
    tay
    lda RADIX_DECIMAL_VALUES,y
    sta.z digit_value
    lda RADIX_DECIMAL_VALUES+1,y
    sta.z digit_value+1
    // if (started || value >= digit_value)
    // [190] if(0!=utoa::started#2) goto utoa::@5 -- 0_neq_vbuz1_then_la1 
    lda.z started
    bne __b5
    // utoa::@7
    // [191] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@5 -- vwuz1_ge_vwuz2_then_la1 
    lda.z digit_value+1
    cmp.z value+1
    bne !+
    lda.z digit_value
    cmp.z value
    beq __b5
  !:
    bcc __b5
    // [192] phi from utoa::@7 to utoa::@4 [phi:utoa::@7->utoa::@4]
    // [192] phi utoa::buffer#14 = utoa::buffer#11 [phi:utoa::@7->utoa::@4#0] -- register_copy 
    // [192] phi utoa::started#4 = utoa::started#2 [phi:utoa::@7->utoa::@4#1] -- register_copy 
    // [192] phi utoa::value#6 = utoa::value#2 [phi:utoa::@7->utoa::@4#2] -- register_copy 
    // utoa::@4
  __b4:
    // for( char digit=0; digit<max_digits-1; digit++ )
    // [193] utoa::digit#1 = ++ utoa::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // [181] phi from utoa::@4 to utoa::@1 [phi:utoa::@4->utoa::@1]
    // [181] phi utoa::buffer#11 = utoa::buffer#14 [phi:utoa::@4->utoa::@1#0] -- register_copy 
    // [181] phi utoa::started#2 = utoa::started#4 [phi:utoa::@4->utoa::@1#1] -- register_copy 
    // [181] phi utoa::value#2 = utoa::value#6 [phi:utoa::@4->utoa::@1#2] -- register_copy 
    // [181] phi utoa::digit#2 = utoa::digit#1 [phi:utoa::@4->utoa::@1#3] -- register_copy 
    jmp __b1
    // utoa::@5
  __b5:
    // utoa_append(buffer++, value, digit_value)
    // [194] utoa_append::buffer#0 = utoa::buffer#11
    // [195] utoa_append::value#0 = utoa::value#2
    // [196] utoa_append::sub#0 = utoa::digit_value#0
    // [197] call utoa_append 
    // [284] phi from utoa::@5 to utoa_append [phi:utoa::@5->utoa_append]
    jsr utoa_append
    // utoa_append(buffer++, value, digit_value)
    // [198] utoa_append::return#0 = utoa_append::value#2
    // utoa::@6
    // value = utoa_append(buffer++, value, digit_value)
    // [199] utoa::value#0 = utoa_append::return#0
    // value = utoa_append(buffer++, value, digit_value);
    // [200] utoa::buffer#4 = ++ utoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // [192] phi from utoa::@6 to utoa::@4 [phi:utoa::@6->utoa::@4]
    // [192] phi utoa::buffer#14 = utoa::buffer#4 [phi:utoa::@6->utoa::@4#0] -- register_copy 
    // [192] phi utoa::started#4 = 1 [phi:utoa::@6->utoa::@4#1] -- vbuz1=vbuc1 
    lda #1
    sta.z started
    // [192] phi utoa::value#6 = utoa::value#0 [phi:utoa::@6->utoa::@4#2] -- register_copy 
    jmp __b4
}
  // printf_number_buffer
// Print the contents of the number buffer using a specific format.
// This handles minimum length, zero-filling, and left/right justification from the format
// printf_number_buffer(byte zp($29) buffer_sign, byte zp($1e) format_min_length, byte zp($25) format_justify_left, byte zp($26) format_zero_padding, byte zp($c) format_upper_case)
printf_number_buffer: {
    .label __19 = $27
    .label buffer_sign = $29
    .label len = $d
    .label padding = $1e
    .label format_min_length = $1e
    .label format_zero_padding = $26
    .label format_justify_left = $25
    .label format_upper_case = $c
    // if(format.min_length)
    // [202] if(0==printf_number_buffer::format_min_length#3) goto printf_number_buffer::@1 -- 0_eq_vbuz1_then_la1 
    lda.z format_min_length
    beq __b6
    // [203] phi from printf_number_buffer to printf_number_buffer::@6 [phi:printf_number_buffer->printf_number_buffer::@6]
    // printf_number_buffer::@6
    // strlen(buffer.digits)
    // [204] call strlen 
    // [291] phi from printf_number_buffer::@6 to strlen [phi:printf_number_buffer::@6->strlen]
    jsr strlen
    // strlen(buffer.digits)
    // [205] strlen::return#2 = strlen::len#2
    // printf_number_buffer::@14
    // [206] printf_number_buffer::$19 = strlen::return#2
    // signed char len = (signed char)strlen(buffer.digits)
    // [207] printf_number_buffer::len#0 = (signed byte)printf_number_buffer::$19 -- vbsz1=_sbyte_vwuz2 
    // There is a minimum length - work out the padding
    lda.z __19
    sta.z len
    // if(buffer.sign)
    // [208] if(0==printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@13 -- 0_eq_vbuz1_then_la1 
    lda.z buffer_sign
    beq __b13
    // printf_number_buffer::@7
    // len++;
    // [209] printf_number_buffer::len#1 = ++ printf_number_buffer::len#0 -- vbsz1=_inc_vbsz1 
    inc.z len
    // [210] phi from printf_number_buffer::@14 printf_number_buffer::@7 to printf_number_buffer::@13 [phi:printf_number_buffer::@14/printf_number_buffer::@7->printf_number_buffer::@13]
    // [210] phi printf_number_buffer::len#2 = printf_number_buffer::len#0 [phi:printf_number_buffer::@14/printf_number_buffer::@7->printf_number_buffer::@13#0] -- register_copy 
    // printf_number_buffer::@13
  __b13:
    // padding = (signed char)format.min_length - len
    // [211] printf_number_buffer::padding#1 = (signed byte)printf_number_buffer::format_min_length#3 - printf_number_buffer::len#2 -- vbsz1=vbsz1_minus_vbsz2 
    lda.z padding
    sec
    sbc.z len
    sta.z padding
    // if(padding<0)
    // [212] if(printf_number_buffer::padding#1>=0) goto printf_number_buffer::@21 -- vbsz1_ge_0_then_la1 
    cmp #0
    bpl __b1
    // [214] phi from printf_number_buffer printf_number_buffer::@13 to printf_number_buffer::@1 [phi:printf_number_buffer/printf_number_buffer::@13->printf_number_buffer::@1]
  __b6:
    // [214] phi printf_number_buffer::padding#10 = 0 [phi:printf_number_buffer/printf_number_buffer::@13->printf_number_buffer::@1#0] -- vbsz1=vbsc1 
    lda #0
    sta.z padding
    // [213] phi from printf_number_buffer::@13 to printf_number_buffer::@21 [phi:printf_number_buffer::@13->printf_number_buffer::@21]
    // printf_number_buffer::@21
    // [214] phi from printf_number_buffer::@21 to printf_number_buffer::@1 [phi:printf_number_buffer::@21->printf_number_buffer::@1]
    // [214] phi printf_number_buffer::padding#10 = printf_number_buffer::padding#1 [phi:printf_number_buffer::@21->printf_number_buffer::@1#0] -- register_copy 
    // printf_number_buffer::@1
  __b1:
    // if(!format.justify_left && !format.zero_padding && padding)
    // [215] if(0!=printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@2 -- 0_neq_vbuz1_then_la1 
    lda.z format_justify_left
    bne __b2
    // printf_number_buffer::@17
    // [216] if(0!=printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@2 -- 0_neq_vbuz1_then_la1 
    lda.z format_zero_padding
    bne __b2
    // printf_number_buffer::@16
    // [217] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@8 -- 0_neq_vbsz1_then_la1 
    lda.z padding
    cmp #0
    bne __b8
    jmp __b2
    // printf_number_buffer::@8
  __b8:
    // printf_padding(' ',(char)padding)
    // [218] printf_padding::length#0 = (byte)printf_number_buffer::padding#10 -- vbuz1=vbuz2 
    lda.z padding
    sta.z printf_padding.length
    // [219] call printf_padding 
    // [297] phi from printf_number_buffer::@8 to printf_padding [phi:printf_number_buffer::@8->printf_padding]
    // [297] phi printf_padding::pad#5 = ' ' [phi:printf_number_buffer::@8->printf_padding#0] -- vbuz1=vbuc1 
    lda #' '
    sta.z printf_padding.pad
    // [297] phi printf_padding::length#4 = printf_padding::length#0 [phi:printf_number_buffer::@8->printf_padding#1] -- register_copy 
    jsr printf_padding
    // printf_number_buffer::@2
  __b2:
    // if(buffer.sign)
    // [220] if(0==printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@3 -- 0_eq_vbuz1_then_la1 
    lda.z buffer_sign
    beq __b3
    // printf_number_buffer::@9
    // cputc(buffer.sign)
    // [221] cputc::c#2 = printf_number_buffer::buffer_sign#10 -- vbuz1=vbuz2 
    sta.z cputc.c
    // [222] call cputc 
    // [169] phi from printf_number_buffer::@9 to cputc [phi:printf_number_buffer::@9->cputc]
    // [169] phi cputc::c#3 = cputc::c#2 [phi:printf_number_buffer::@9->cputc#0] -- register_copy 
    jsr cputc
    // printf_number_buffer::@3
  __b3:
    // if(format.zero_padding && padding)
    // [223] if(0==printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@4 -- 0_eq_vbuz1_then_la1 
    lda.z format_zero_padding
    beq __b4
    // printf_number_buffer::@18
    // [224] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@10 -- 0_neq_vbsz1_then_la1 
    lda.z padding
    cmp #0
    bne __b10
    jmp __b4
    // printf_number_buffer::@10
  __b10:
    // printf_padding('0',(char)padding)
    // [225] printf_padding::length#1 = (byte)printf_number_buffer::padding#10 -- vbuz1=vbuz2 
    lda.z padding
    sta.z printf_padding.length
    // [226] call printf_padding 
    // [297] phi from printf_number_buffer::@10 to printf_padding [phi:printf_number_buffer::@10->printf_padding]
    // [297] phi printf_padding::pad#5 = '0' [phi:printf_number_buffer::@10->printf_padding#0] -- vbuz1=vbuc1 
    lda #'0'
    sta.z printf_padding.pad
    // [297] phi printf_padding::length#4 = printf_padding::length#1 [phi:printf_number_buffer::@10->printf_padding#1] -- register_copy 
    jsr printf_padding
    // printf_number_buffer::@4
  __b4:
    // if(format.upper_case)
    // [227] if(0==printf_number_buffer::format_upper_case#10) goto printf_number_buffer::@5 -- 0_eq_vbuz1_then_la1 
    lda.z format_upper_case
    beq __b5
    // [228] phi from printf_number_buffer::@4 to printf_number_buffer::@11 [phi:printf_number_buffer::@4->printf_number_buffer::@11]
    // printf_number_buffer::@11
    // strupr(buffer.digits)
    // [229] call strupr 
    // [304] phi from printf_number_buffer::@11 to strupr [phi:printf_number_buffer::@11->strupr]
    jsr strupr
    // [230] phi from printf_number_buffer::@11 printf_number_buffer::@4 to printf_number_buffer::@5 [phi:printf_number_buffer::@11/printf_number_buffer::@4->printf_number_buffer::@5]
    // printf_number_buffer::@5
  __b5:
    // cputs(buffer.digits)
    // [231] call cputs 
    // [135] phi from printf_number_buffer::@5 to cputs [phi:printf_number_buffer::@5->cputs]
    // [135] phi cputs::s#12 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:printf_number_buffer::@5->cputs#0] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z cputs.s
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z cputs.s+1
    jsr cputs
    // printf_number_buffer::@15
    // if(format.justify_left && !format.zero_padding && padding)
    // [232] if(0==printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@return -- 0_eq_vbuz1_then_la1 
    lda.z format_justify_left
    beq __breturn
    // printf_number_buffer::@20
    // [233] if(0!=printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@return -- 0_neq_vbuz1_then_la1 
    lda.z format_zero_padding
    bne __breturn
    // printf_number_buffer::@19
    // [234] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@12 -- 0_neq_vbsz1_then_la1 
    lda.z padding
    cmp #0
    bne __b12
    rts
    // printf_number_buffer::@12
  __b12:
    // printf_padding(' ',(char)padding)
    // [235] printf_padding::length#2 = (byte)printf_number_buffer::padding#10 -- vbuz1=vbuz2 
    lda.z padding
    sta.z printf_padding.length
    // [236] call printf_padding 
    // [297] phi from printf_number_buffer::@12 to printf_padding [phi:printf_number_buffer::@12->printf_padding]
    // [297] phi printf_padding::pad#5 = ' ' [phi:printf_number_buffer::@12->printf_padding#0] -- vbuz1=vbuc1 
    lda #' '
    sta.z printf_padding.pad
    // [297] phi printf_padding::length#4 = printf_padding::length#2 [phi:printf_number_buffer::@12->printf_padding#1] -- register_copy 
    jsr printf_padding
    // printf_number_buffer::@return
  __breturn:
    // }
    // [237] return 
    rts
}
  // ultoa
// Converts unsigned number value to a string representing it in RADIX format.
// If the leading digits are zero they are not included in the string.
// - value : The number to be converted to RADIX
// - buffer : receives the string representing the number and zero-termination.
// - radix : The radix to convert the number to (from the enum RADIX)
// ultoa(dword zp(5) value, byte* zp($a) buffer)
ultoa: {
    .label __10 = $2e
    .label __11 = $29
    .label digit_value = $2a
    .label buffer = $a
    .label digit = $25
    .label value = 5
    .label started = $26
    // [239] phi from ultoa to ultoa::@1 [phi:ultoa->ultoa::@1]
    // [239] phi ultoa::buffer#11 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:ultoa->ultoa::@1#0] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer+1
    // [239] phi ultoa::started#2 = 0 [phi:ultoa->ultoa::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta.z started
    // [239] phi ultoa::value#2 = ultoa::value#1 [phi:ultoa->ultoa::@1#2] -- register_copy 
    // [239] phi ultoa::digit#2 = 0 [phi:ultoa->ultoa::@1#3] -- vbuz1=vbuc1 
    sta.z digit
    // ultoa::@1
  __b1:
    // for( char digit=0; digit<max_digits-1; digit++ )
    // [240] if(ultoa::digit#2<$a-1) goto ultoa::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z digit
    cmp #$a-1
    bcc __b2
    // ultoa::@3
    // *buffer++ = DIGITS[(char)value]
    // [241] ultoa::$11 = (byte)ultoa::value#2 -- vbuz1=_byte_vduz2 
    lda.z value
    sta.z __11
    // [242] *ultoa::buffer#11 = DIGITS[ultoa::$11] -- _deref_pbuz1=pbuc1_derefidx_vbuz2 
    tay
    lda DIGITS,y
    ldy #0
    sta (buffer),y
    // *buffer++ = DIGITS[(char)value];
    // [243] ultoa::buffer#3 = ++ ultoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // *buffer = 0
    // [244] *ultoa::buffer#3 = 0 -- _deref_pbuz1=vbuc1 
    lda #0
    tay
    sta (buffer),y
    // ultoa::@return
    // }
    // [245] return 
    rts
    // ultoa::@2
  __b2:
    // unsigned long digit_value = digit_values[digit]
    // [246] ultoa::$10 = ultoa::digit#2 << 2 -- vbuz1=vbuz2_rol_2 
    lda.z digit
    asl
    asl
    sta.z __10
    // [247] ultoa::digit_value#0 = RADIX_DECIMAL_VALUES_LONG[ultoa::$10] -- vduz1=pduc1_derefidx_vbuz2 
    tay
    lda RADIX_DECIMAL_VALUES_LONG,y
    sta.z digit_value
    lda RADIX_DECIMAL_VALUES_LONG+1,y
    sta.z digit_value+1
    lda RADIX_DECIMAL_VALUES_LONG+2,y
    sta.z digit_value+2
    lda RADIX_DECIMAL_VALUES_LONG+3,y
    sta.z digit_value+3
    // if (started || value >= digit_value)
    // [248] if(0!=ultoa::started#2) goto ultoa::@5 -- 0_neq_vbuz1_then_la1 
    lda.z started
    bne __b5
    // ultoa::@7
    // [249] if(ultoa::value#2>=ultoa::digit_value#0) goto ultoa::@5 -- vduz1_ge_vduz2_then_la1 
    lda.z value+3
    cmp.z digit_value+3
    bcc !+
    bne __b5
    lda.z value+2
    cmp.z digit_value+2
    bcc !+
    bne __b5
    lda.z value+1
    cmp.z digit_value+1
    bcc !+
    bne __b5
    lda.z value
    cmp.z digit_value
    bcs __b5
  !:
    // [250] phi from ultoa::@7 to ultoa::@4 [phi:ultoa::@7->ultoa::@4]
    // [250] phi ultoa::buffer#14 = ultoa::buffer#11 [phi:ultoa::@7->ultoa::@4#0] -- register_copy 
    // [250] phi ultoa::started#4 = ultoa::started#2 [phi:ultoa::@7->ultoa::@4#1] -- register_copy 
    // [250] phi ultoa::value#6 = ultoa::value#2 [phi:ultoa::@7->ultoa::@4#2] -- register_copy 
    // ultoa::@4
  __b4:
    // for( char digit=0; digit<max_digits-1; digit++ )
    // [251] ultoa::digit#1 = ++ ultoa::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // [239] phi from ultoa::@4 to ultoa::@1 [phi:ultoa::@4->ultoa::@1]
    // [239] phi ultoa::buffer#11 = ultoa::buffer#14 [phi:ultoa::@4->ultoa::@1#0] -- register_copy 
    // [239] phi ultoa::started#2 = ultoa::started#4 [phi:ultoa::@4->ultoa::@1#1] -- register_copy 
    // [239] phi ultoa::value#2 = ultoa::value#6 [phi:ultoa::@4->ultoa::@1#2] -- register_copy 
    // [239] phi ultoa::digit#2 = ultoa::digit#1 [phi:ultoa::@4->ultoa::@1#3] -- register_copy 
    jmp __b1
    // ultoa::@5
  __b5:
    // ultoa_append(buffer++, value, digit_value)
    // [252] ultoa_append::buffer#0 = ultoa::buffer#11
    // [253] ultoa_append::value#0 = ultoa::value#2
    // [254] ultoa_append::sub#0 = ultoa::digit_value#0
    // [255] call ultoa_append 
    // [314] phi from ultoa::@5 to ultoa_append [phi:ultoa::@5->ultoa_append]
    jsr ultoa_append
    // ultoa_append(buffer++, value, digit_value)
    // [256] ultoa_append::return#0 = ultoa_append::value#2
    // ultoa::@6
    // value = ultoa_append(buffer++, value, digit_value)
    // [257] ultoa::value#0 = ultoa_append::return#0
    // value = ultoa_append(buffer++, value, digit_value);
    // [258] ultoa::buffer#4 = ++ ultoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // [250] phi from ultoa::@6 to ultoa::@4 [phi:ultoa::@6->ultoa::@4]
    // [250] phi ultoa::buffer#14 = ultoa::buffer#4 [phi:ultoa::@6->ultoa::@4#0] -- register_copy 
    // [250] phi ultoa::started#4 = 1 [phi:ultoa::@6->ultoa::@4#1] -- vbuz1=vbuc1 
    lda #1
    sta.z started
    // [250] phi ultoa::value#6 = ultoa::value#0 [phi:ultoa::@6->ultoa::@4#2] -- register_copy 
    jmp __b4
}
  // uctoa
// Converts unsigned number value to a string representing it in RADIX format.
// If the leading digits are zero they are not included in the string.
// - value : The number to be converted to RADIX
// - buffer : receives the string representing the number and zero-termination.
// - radix : The radix to convert the number to (from the enum RADIX)
// uctoa(byte zp($c) value, byte* zp($f) buffer)
uctoa: {
    .label digit_value = $2e
    .label buffer = $f
    .label digit = $29
    .label value = $c
    .label started = $d
    // [260] phi from uctoa to uctoa::@1 [phi:uctoa->uctoa::@1]
    // [260] phi uctoa::buffer#11 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:uctoa->uctoa::@1#0] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer+1
    // [260] phi uctoa::started#2 = 0 [phi:uctoa->uctoa::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta.z started
    // [260] phi uctoa::value#2 = uctoa::value#1 [phi:uctoa->uctoa::@1#2] -- register_copy 
    // [260] phi uctoa::digit#2 = 0 [phi:uctoa->uctoa::@1#3] -- vbuz1=vbuc1 
    sta.z digit
    // uctoa::@1
  __b1:
    // for( char digit=0; digit<max_digits-1; digit++ )
    // [261] if(uctoa::digit#2<2-1) goto uctoa::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z digit
    cmp #2-1
    bcc __b2
    // uctoa::@3
    // *buffer++ = DIGITS[(char)value]
    // [262] *uctoa::buffer#11 = DIGITS[uctoa::value#2] -- _deref_pbuz1=pbuc1_derefidx_vbuz2 
    ldy.z value
    lda DIGITS,y
    ldy #0
    sta (buffer),y
    // *buffer++ = DIGITS[(char)value];
    // [263] uctoa::buffer#3 = ++ uctoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // *buffer = 0
    // [264] *uctoa::buffer#3 = 0 -- _deref_pbuz1=vbuc1 
    lda #0
    tay
    sta (buffer),y
    // uctoa::@return
    // }
    // [265] return 
    rts
    // uctoa::@2
  __b2:
    // unsigned char digit_value = digit_values[digit]
    // [266] uctoa::digit_value#0 = RADIX_HEXADECIMAL_VALUES_CHAR[uctoa::digit#2] -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy.z digit
    lda RADIX_HEXADECIMAL_VALUES_CHAR,y
    sta.z digit_value
    // if (started || value >= digit_value)
    // [267] if(0!=uctoa::started#2) goto uctoa::@5 -- 0_neq_vbuz1_then_la1 
    lda.z started
    bne __b5
    // uctoa::@7
    // [268] if(uctoa::value#2>=uctoa::digit_value#0) goto uctoa::@5 -- vbuz1_ge_vbuz2_then_la1 
    lda.z value
    cmp.z digit_value
    bcs __b5
    // [269] phi from uctoa::@7 to uctoa::@4 [phi:uctoa::@7->uctoa::@4]
    // [269] phi uctoa::buffer#14 = uctoa::buffer#11 [phi:uctoa::@7->uctoa::@4#0] -- register_copy 
    // [269] phi uctoa::started#4 = uctoa::started#2 [phi:uctoa::@7->uctoa::@4#1] -- register_copy 
    // [269] phi uctoa::value#6 = uctoa::value#2 [phi:uctoa::@7->uctoa::@4#2] -- register_copy 
    // uctoa::@4
  __b4:
    // for( char digit=0; digit<max_digits-1; digit++ )
    // [270] uctoa::digit#1 = ++ uctoa::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // [260] phi from uctoa::@4 to uctoa::@1 [phi:uctoa::@4->uctoa::@1]
    // [260] phi uctoa::buffer#11 = uctoa::buffer#14 [phi:uctoa::@4->uctoa::@1#0] -- register_copy 
    // [260] phi uctoa::started#2 = uctoa::started#4 [phi:uctoa::@4->uctoa::@1#1] -- register_copy 
    // [260] phi uctoa::value#2 = uctoa::value#6 [phi:uctoa::@4->uctoa::@1#2] -- register_copy 
    // [260] phi uctoa::digit#2 = uctoa::digit#1 [phi:uctoa::@4->uctoa::@1#3] -- register_copy 
    jmp __b1
    // uctoa::@5
  __b5:
    // uctoa_append(buffer++, value, digit_value)
    // [271] uctoa_append::buffer#0 = uctoa::buffer#11
    // [272] uctoa_append::value#0 = uctoa::value#2
    // [273] uctoa_append::sub#0 = uctoa::digit_value#0
    // [274] call uctoa_append 
    // [321] phi from uctoa::@5 to uctoa_append [phi:uctoa::@5->uctoa_append]
    jsr uctoa_append
    // uctoa_append(buffer++, value, digit_value)
    // [275] uctoa_append::return#0 = uctoa_append::value#2
    // uctoa::@6
    // value = uctoa_append(buffer++, value, digit_value)
    // [276] uctoa::value#0 = uctoa_append::return#0
    // value = uctoa_append(buffer++, value, digit_value);
    // [277] uctoa::buffer#4 = ++ uctoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // [269] phi from uctoa::@6 to uctoa::@4 [phi:uctoa::@6->uctoa::@4]
    // [269] phi uctoa::buffer#14 = uctoa::buffer#4 [phi:uctoa::@6->uctoa::@4#0] -- register_copy 
    // [269] phi uctoa::started#4 = 1 [phi:uctoa::@6->uctoa::@4#1] -- vbuz1=vbuc1 
    lda #1
    sta.z started
    // [269] phi uctoa::value#6 = uctoa::value#0 [phi:uctoa::@6->uctoa::@4#2] -- register_copy 
    jmp __b4
}
  // cputln
// Print a newline
cputln: {
    // conio_line_text +=  CONIO_WIDTH
    // [278] conio_line_text = conio_line_text + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z conio_line_text
    sta.z conio_line_text
    bcc !+
    inc.z conio_line_text+1
  !:
    // conio_line_color += CONIO_WIDTH
    // [279] conio_line_color = conio_line_color + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z conio_line_color
    sta.z conio_line_color
    bcc !+
    inc.z conio_line_color+1
  !:
    // conio_cursor_x = 0
    // [280] conio_cursor_x = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // conio_cursor_y++;
    // [281] conio_cursor_y = ++ conio_cursor_y -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_y
    // cscroll()
    // [282] call cscroll 
    jsr cscroll
    // cputln::@return
    // }
    // [283] return 
    rts
}
  // utoa_append
// Used to convert a single digit of an unsigned number value to a string representation
// Counts a single digit up from '0' as long as the value is larger than sub.
// Each time the digit is increased sub is subtracted from value.
// - buffer : pointer to the char that receives the digit
// - value : The value where the digit will be derived from
// - sub : the value of a '1' in the digit. Subtracted continually while the digit is increased.
//        (For decimal the subs used are 10000, 1000, 100, 10, 1)
// returns : the value reduced by sub * digit so that it is less than sub.
// utoa_append(byte* zp($a) buffer, word zp($f) value, word zp($27) sub)
utoa_append: {
    .label buffer = $a
    .label value = $f
    .label sub = $27
    .label return = $f
    .label digit = $e
    // [285] phi from utoa_append to utoa_append::@1 [phi:utoa_append->utoa_append::@1]
    // [285] phi utoa_append::digit#2 = 0 [phi:utoa_append->utoa_append::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta.z digit
    // [285] phi utoa_append::value#2 = utoa_append::value#0 [phi:utoa_append->utoa_append::@1#1] -- register_copy 
    // utoa_append::@1
  __b1:
    // while (value >= sub)
    // [286] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2 -- vwuz1_ge_vwuz2_then_la1 
    lda.z sub+1
    cmp.z value+1
    bne !+
    lda.z sub
    cmp.z value
    beq __b2
  !:
    bcc __b2
    // utoa_append::@3
    // *buffer = DIGITS[digit]
    // [287] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2] -- _deref_pbuz1=pbuc1_derefidx_vbuz2 
    ldy.z digit
    lda DIGITS,y
    ldy #0
    sta (buffer),y
    // utoa_append::@return
    // }
    // [288] return 
    rts
    // utoa_append::@2
  __b2:
    // digit++;
    // [289] utoa_append::digit#1 = ++ utoa_append::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // value -= sub
    // [290] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z value
    sec
    sbc.z sub
    sta.z value
    lda.z value+1
    sbc.z sub+1
    sta.z value+1
    // [285] phi from utoa_append::@2 to utoa_append::@1 [phi:utoa_append::@2->utoa_append::@1]
    // [285] phi utoa_append::digit#2 = utoa_append::digit#1 [phi:utoa_append::@2->utoa_append::@1#0] -- register_copy 
    // [285] phi utoa_append::value#2 = utoa_append::value#1 [phi:utoa_append::@2->utoa_append::@1#1] -- register_copy 
    jmp __b1
}
  // strlen
// Computes the length of the string str up to but not including the terminating null character.
// strlen(byte* zp($f) str)
strlen: {
    .label len = $27
    .label str = $f
    .label return = $27
    // [292] phi from strlen to strlen::@1 [phi:strlen->strlen::@1]
    // [292] phi strlen::len#2 = 0 [phi:strlen->strlen::@1#0] -- vwuz1=vwuc1 
    lda #<0
    sta.z len
    sta.z len+1
    // [292] phi strlen::str#2 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:strlen->strlen::@1#1] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z str
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z str+1
    // strlen::@1
  __b1:
    // while(*str)
    // [293] if(0!=*strlen::str#2) goto strlen::@2 -- 0_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (str),y
    cmp #0
    bne __b2
    // strlen::@return
    // }
    // [294] return 
    rts
    // strlen::@2
  __b2:
    // len++;
    // [295] strlen::len#1 = ++ strlen::len#2 -- vwuz1=_inc_vwuz1 
    inc.z len
    bne !+
    inc.z len+1
  !:
    // str++;
    // [296] strlen::str#0 = ++ strlen::str#2 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    // [292] phi from strlen::@2 to strlen::@1 [phi:strlen::@2->strlen::@1]
    // [292] phi strlen::len#2 = strlen::len#1 [phi:strlen::@2->strlen::@1#0] -- register_copy 
    // [292] phi strlen::str#2 = strlen::str#0 [phi:strlen::@2->strlen::@1#1] -- register_copy 
    jmp __b1
}
  // printf_padding
// Print a padding char a number of times
// printf_padding(byte zp($d) pad, byte zp($e) length)
printf_padding: {
    .label i = $2e
    .label length = $e
    .label pad = $d
    // [298] phi from printf_padding to printf_padding::@1 [phi:printf_padding->printf_padding::@1]
    // [298] phi printf_padding::i#2 = 0 [phi:printf_padding->printf_padding::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta.z i
    // printf_padding::@1
  __b1:
    // for(char i=0;i<length; i++)
    // [299] if(printf_padding::i#2<printf_padding::length#4) goto printf_padding::@2 -- vbuz1_lt_vbuz2_then_la1 
    lda.z i
    cmp.z length
    bcc __b2
    // printf_padding::@return
    // }
    // [300] return 
    rts
    // printf_padding::@2
  __b2:
    // cputc(pad)
    // [301] cputc::c#1 = printf_padding::pad#5
    // [302] call cputc 
    // [169] phi from printf_padding::@2 to cputc [phi:printf_padding::@2->cputc]
    // [169] phi cputc::c#3 = cputc::c#1 [phi:printf_padding::@2->cputc#0] -- register_copy 
    jsr cputc
    // printf_padding::@3
    // for(char i=0;i<length; i++)
    // [303] printf_padding::i#1 = ++ printf_padding::i#2 -- vbuz1=_inc_vbuz1 
    inc.z i
    // [298] phi from printf_padding::@3 to printf_padding::@1 [phi:printf_padding::@3->printf_padding::@1]
    // [298] phi printf_padding::i#2 = printf_padding::i#1 [phi:printf_padding::@3->printf_padding::@1#0] -- register_copy 
    jmp __b1
}
  // strupr
// Converts a string to uppercase.
strupr: {
    .label str = printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    .label __0 = $e
    .label src = $27
    // [305] phi from strupr to strupr::@1 [phi:strupr->strupr::@1]
    // [305] phi strupr::src#2 = strupr::str#0 [phi:strupr->strupr::@1#0] -- pbuz1=pbuc1 
    lda #<str
    sta.z src
    lda #>str
    sta.z src+1
    // strupr::@1
  __b1:
    // while(*src)
    // [306] if(0!=*strupr::src#2) goto strupr::@2 -- 0_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (src),y
    cmp #0
    bne __b2
    // strupr::@return
    // }
    // [307] return 
    rts
    // strupr::@2
  __b2:
    // toupper(*src)
    // [308] toupper::ch#0 = *strupr::src#2 -- vbuz1=_deref_pbuz2 
    ldy #0
    lda (src),y
    sta.z toupper.ch
    // [309] call toupper 
    jsr toupper
    // [310] toupper::return#3 = toupper::return#2
    // strupr::@3
    // [311] strupr::$0 = toupper::return#3
    // *src = toupper(*src)
    // [312] *strupr::src#2 = strupr::$0 -- _deref_pbuz1=vbuz2 
    lda.z __0
    ldy #0
    sta (src),y
    // src++;
    // [313] strupr::src#1 = ++ strupr::src#2 -- pbuz1=_inc_pbuz1 
    inc.z src
    bne !+
    inc.z src+1
  !:
    // [305] phi from strupr::@3 to strupr::@1 [phi:strupr::@3->strupr::@1]
    // [305] phi strupr::src#2 = strupr::src#1 [phi:strupr::@3->strupr::@1#0] -- register_copy 
    jmp __b1
}
  // ultoa_append
// Used to convert a single digit of an unsigned number value to a string representation
// Counts a single digit up from '0' as long as the value is larger than sub.
// Each time the digit is increased sub is subtracted from value.
// - buffer : pointer to the char that receives the digit
// - value : The value where the digit will be derived from
// - sub : the value of a '1' in the digit. Subtracted continually while the digit is increased.
//        (For decimal the subs used are 10000, 1000, 100, 10, 1)
// returns : the value reduced by sub * digit so that it is less than sub.
// ultoa_append(byte* zp($a) buffer, dword zp(5) value, dword zp($2a) sub)
ultoa_append: {
    .label buffer = $a
    .label value = 5
    .label sub = $2a
    .label return = 5
    .label digit = $2e
    // [315] phi from ultoa_append to ultoa_append::@1 [phi:ultoa_append->ultoa_append::@1]
    // [315] phi ultoa_append::digit#2 = 0 [phi:ultoa_append->ultoa_append::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta.z digit
    // [315] phi ultoa_append::value#2 = ultoa_append::value#0 [phi:ultoa_append->ultoa_append::@1#1] -- register_copy 
    // ultoa_append::@1
  __b1:
    // while (value >= sub)
    // [316] if(ultoa_append::value#2>=ultoa_append::sub#0) goto ultoa_append::@2 -- vduz1_ge_vduz2_then_la1 
    lda.z value+3
    cmp.z sub+3
    bcc !+
    bne __b2
    lda.z value+2
    cmp.z sub+2
    bcc !+
    bne __b2
    lda.z value+1
    cmp.z sub+1
    bcc !+
    bne __b2
    lda.z value
    cmp.z sub
    bcs __b2
  !:
    // ultoa_append::@3
    // *buffer = DIGITS[digit]
    // [317] *ultoa_append::buffer#0 = DIGITS[ultoa_append::digit#2] -- _deref_pbuz1=pbuc1_derefidx_vbuz2 
    ldy.z digit
    lda DIGITS,y
    ldy #0
    sta (buffer),y
    // ultoa_append::@return
    // }
    // [318] return 
    rts
    // ultoa_append::@2
  __b2:
    // digit++;
    // [319] ultoa_append::digit#1 = ++ ultoa_append::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // value -= sub
    // [320] ultoa_append::value#1 = ultoa_append::value#2 - ultoa_append::sub#0 -- vduz1=vduz1_minus_vduz2 
    lda.z value
    sec
    sbc.z sub
    sta.z value
    lda.z value+1
    sbc.z sub+1
    sta.z value+1
    lda.z value+2
    sbc.z sub+2
    sta.z value+2
    lda.z value+3
    sbc.z sub+3
    sta.z value+3
    // [315] phi from ultoa_append::@2 to ultoa_append::@1 [phi:ultoa_append::@2->ultoa_append::@1]
    // [315] phi ultoa_append::digit#2 = ultoa_append::digit#1 [phi:ultoa_append::@2->ultoa_append::@1#0] -- register_copy 
    // [315] phi ultoa_append::value#2 = ultoa_append::value#1 [phi:ultoa_append::@2->ultoa_append::@1#1] -- register_copy 
    jmp __b1
}
  // uctoa_append
// Used to convert a single digit of an unsigned number value to a string representation
// Counts a single digit up from '0' as long as the value is larger than sub.
// Each time the digit is increased sub is subtracted from value.
// - buffer : pointer to the char that receives the digit
// - value : The value where the digit will be derived from
// - sub : the value of a '1' in the digit. Subtracted continually while the digit is increased.
//        (For decimal the subs used are 10000, 1000, 100, 10, 1)
// returns : the value reduced by sub * digit so that it is less than sub.
// uctoa_append(byte* zp($f) buffer, byte zp($c) value, byte zp($2e) sub)
uctoa_append: {
    .label buffer = $f
    .label value = $c
    .label sub = $2e
    .label return = $c
    .label digit = $e
    // [322] phi from uctoa_append to uctoa_append::@1 [phi:uctoa_append->uctoa_append::@1]
    // [322] phi uctoa_append::digit#2 = 0 [phi:uctoa_append->uctoa_append::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta.z digit
    // [322] phi uctoa_append::value#2 = uctoa_append::value#0 [phi:uctoa_append->uctoa_append::@1#1] -- register_copy 
    // uctoa_append::@1
  __b1:
    // while (value >= sub)
    // [323] if(uctoa_append::value#2>=uctoa_append::sub#0) goto uctoa_append::@2 -- vbuz1_ge_vbuz2_then_la1 
    lda.z value
    cmp.z sub
    bcs __b2
    // uctoa_append::@3
    // *buffer = DIGITS[digit]
    // [324] *uctoa_append::buffer#0 = DIGITS[uctoa_append::digit#2] -- _deref_pbuz1=pbuc1_derefidx_vbuz2 
    ldy.z digit
    lda DIGITS,y
    ldy #0
    sta (buffer),y
    // uctoa_append::@return
    // }
    // [325] return 
    rts
    // uctoa_append::@2
  __b2:
    // digit++;
    // [326] uctoa_append::digit#1 = ++ uctoa_append::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // value -= sub
    // [327] uctoa_append::value#1 = uctoa_append::value#2 - uctoa_append::sub#0 -- vbuz1=vbuz1_minus_vbuz2 
    lda.z value
    sec
    sbc.z sub
    sta.z value
    // [322] phi from uctoa_append::@2 to uctoa_append::@1 [phi:uctoa_append::@2->uctoa_append::@1]
    // [322] phi uctoa_append::digit#2 = uctoa_append::digit#1 [phi:uctoa_append::@2->uctoa_append::@1#0] -- register_copy 
    // [322] phi uctoa_append::value#2 = uctoa_append::value#1 [phi:uctoa_append::@2->uctoa_append::@1#1] -- register_copy 
    jmp __b1
}
  // cscroll
// Scroll the entire screen if the cursor is beyond the last line
cscroll: {
    // if(conio_cursor_y==CONIO_HEIGHT)
    // [328] if(conio_cursor_y!=$19) goto cscroll::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #$19
    cmp.z conio_cursor_y
    bne __breturn
    // [329] phi from cscroll to cscroll::@1 [phi:cscroll->cscroll::@1]
    // cscroll::@1
    // memcpy(CONIO_SCREEN_TEXT, CONIO_SCREEN_TEXT+CONIO_WIDTH, CONIO_BYTES-CONIO_WIDTH)
    // [330] call memcpy 
    // [346] phi from cscroll::@1 to memcpy [phi:cscroll::@1->memcpy]
    // [346] phi memcpy::destination#2 = (void*)DEFAULT_SCREEN [phi:cscroll::@1->memcpy#0] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN
    sta.z memcpy.destination
    lda #>DEFAULT_SCREEN
    sta.z memcpy.destination+1
    // [346] phi memcpy::source#2 = (void*)DEFAULT_SCREEN+$28 [phi:cscroll::@1->memcpy#1] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN+$28
    sta.z memcpy.source
    lda #>DEFAULT_SCREEN+$28
    sta.z memcpy.source+1
    jsr memcpy
    // [331] phi from cscroll::@1 to cscroll::@2 [phi:cscroll::@1->cscroll::@2]
    // cscroll::@2
    // memcpy(CONIO_SCREEN_COLORS, CONIO_SCREEN_COLORS+CONIO_WIDTH, CONIO_BYTES-CONIO_WIDTH)
    // [332] call memcpy 
    // [346] phi from cscroll::@2 to memcpy [phi:cscroll::@2->memcpy]
    // [346] phi memcpy::destination#2 = (void*)COLORRAM [phi:cscroll::@2->memcpy#0] -- pvoz1=pvoc1 
    lda #<COLORRAM
    sta.z memcpy.destination
    lda #>COLORRAM
    sta.z memcpy.destination+1
    // [346] phi memcpy::source#2 = (void*)COLORRAM+$28 [phi:cscroll::@2->memcpy#1] -- pvoz1=pvoc1 
    lda #<COLORRAM+$28
    sta.z memcpy.source
    lda #>COLORRAM+$28
    sta.z memcpy.source+1
    jsr memcpy
    // [333] phi from cscroll::@2 to cscroll::@3 [phi:cscroll::@2->cscroll::@3]
    // cscroll::@3
    // memset(CONIO_SCREEN_TEXT+CONIO_BYTES-CONIO_WIDTH, ' ', CONIO_WIDTH)
    // [334] call memset 
    // [356] phi from cscroll::@3 to memset [phi:cscroll::@3->memset]
    // [356] phi memset::c#4 = ' ' [phi:cscroll::@3->memset#0] -- vbuz1=vbuc1 
    lda #' '
    sta.z memset.c
    // [356] phi memset::str#3 = (void*)DEFAULT_SCREEN+(word)$19*$28-$28 [phi:cscroll::@3->memset#1] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN+$19*$28-$28
    sta.z memset.str
    lda #>DEFAULT_SCREEN+$19*$28-$28
    sta.z memset.str+1
    jsr memset
    // [335] phi from cscroll::@3 to cscroll::@4 [phi:cscroll::@3->cscroll::@4]
    // cscroll::@4
    // memset(CONIO_SCREEN_COLORS+CONIO_BYTES-CONIO_WIDTH, conio_textcolor, CONIO_WIDTH)
    // [336] call memset 
    // [356] phi from cscroll::@4 to memset [phi:cscroll::@4->memset]
    // [356] phi memset::c#4 = LIGHT_BLUE [phi:cscroll::@4->memset#0] -- vbuz1=vbuc1 
    lda #LIGHT_BLUE
    sta.z memset.c
    // [356] phi memset::str#3 = (void*)COLORRAM+(word)$19*$28-$28 [phi:cscroll::@4->memset#1] -- pvoz1=pvoc1 
    lda #<COLORRAM+$19*$28-$28
    sta.z memset.str
    lda #>COLORRAM+$19*$28-$28
    sta.z memset.str+1
    jsr memset
    // cscroll::@5
    // conio_line_text -= CONIO_WIDTH
    // [337] conio_line_text = conio_line_text - $28 -- pbuz1=pbuz1_minus_vbuc1 
    sec
    lda.z conio_line_text
    sbc #$28
    sta.z conio_line_text
    lda.z conio_line_text+1
    sbc #0
    sta.z conio_line_text+1
    // conio_line_color -= CONIO_WIDTH
    // [338] conio_line_color = conio_line_color - $28 -- pbuz1=pbuz1_minus_vbuc1 
    sec
    lda.z conio_line_color
    sbc #$28
    sta.z conio_line_color
    lda.z conio_line_color+1
    sbc #0
    sta.z conio_line_color+1
    // conio_cursor_y--;
    // [339] conio_cursor_y = -- conio_cursor_y -- vbuz1=_dec_vbuz1 
    dec.z conio_cursor_y
    // cscroll::@return
  __breturn:
    // }
    // [340] return 
    rts
}
  // toupper
// Convert lowercase alphabet to uppercase
// Returns uppercase equivalent to c, if such value exists, else c remains unchanged
// toupper(byte zp($e) ch)
toupper: {
    .label return = $e
    .label ch = $e
    // if(ch>='a' && ch<='z')
    // [341] if(toupper::ch#0<'a') goto toupper::@return -- vbuz1_lt_vbuc1_then_la1 
    lda.z ch
    cmp #'a'
    bcc __breturn
    // toupper::@2
    // [342] if(toupper::ch#0<='z') goto toupper::@1 -- vbuz1_le_vbuc1_then_la1 
    lda #'z'
    cmp.z ch
    bcs __b1
    // [344] phi from toupper toupper::@1 toupper::@2 to toupper::@return [phi:toupper/toupper::@1/toupper::@2->toupper::@return]
    // [344] phi toupper::return#2 = toupper::ch#0 [phi:toupper/toupper::@1/toupper::@2->toupper::@return#0] -- register_copy 
    rts
    // toupper::@1
  __b1:
    // return ch + ('A'-'a');
    // [343] toupper::return#0 = toupper::ch#0 + 'A'-'a' -- vbuz1=vbuz1_plus_vbuc1 
    lax.z return
    axs #-['A'-'a']
    stx.z return
    // toupper::@return
  __breturn:
    // }
    // [345] return 
    rts
}
  // memcpy
// Copy block of memory (forwards)
// Copies the values of num bytes from the location pointed to by source directly to the memory block pointed to by destination.
// memcpy(void* zp($f) destination, void* zp($27) source)
memcpy: {
    .label src_end = $2f
    .label dst = $f
    .label src = $27
    .label source = $27
    .label destination = $f
    // char* src_end = (char*)source+num
    // [347] memcpy::src_end#0 = (byte*)memcpy::source#2 + (word)$19*$28-$28 -- pbuz1=pbuz2_plus_vwuc1 
    clc
    lda.z source
    adc #<$19*$28-$28
    sta.z src_end
    lda.z source+1
    adc #>$19*$28-$28
    sta.z src_end+1
    // [348] memcpy::src#4 = (byte*)memcpy::source#2
    // [349] memcpy::dst#4 = (byte*)memcpy::destination#2
    // [350] phi from memcpy memcpy::@2 to memcpy::@1 [phi:memcpy/memcpy::@2->memcpy::@1]
    // [350] phi memcpy::dst#2 = memcpy::dst#4 [phi:memcpy/memcpy::@2->memcpy::@1#0] -- register_copy 
    // [350] phi memcpy::src#2 = memcpy::src#4 [phi:memcpy/memcpy::@2->memcpy::@1#1] -- register_copy 
    // memcpy::@1
  __b1:
    // while(src!=src_end)
    // [351] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2 -- pbuz1_neq_pbuz2_then_la1 
    lda.z src+1
    cmp.z src_end+1
    bne __b2
    lda.z src
    cmp.z src_end
    bne __b2
    // memcpy::@return
    // }
    // [352] return 
    rts
    // memcpy::@2
  __b2:
    // *dst++ = *src++
    // [353] *memcpy::dst#2 = *memcpy::src#2 -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (src),y
    sta (dst),y
    // *dst++ = *src++;
    // [354] memcpy::dst#1 = ++ memcpy::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [355] memcpy::src#1 = ++ memcpy::src#2 -- pbuz1=_inc_pbuz1 
    inc.z src
    bne !+
    inc.z src+1
  !:
    jmp __b1
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
// memset(void* zp($f) str, byte zp($1b) c)
memset: {
    .label end = $2f
    .label dst = $f
    .label str = $f
    .label c = $1b
    // memset::@1
    // char* end = (char*)str + num
    // [357] memset::end#0 = (byte*)memset::str#3 + $28 -- pbuz1=pbuz2_plus_vbuc1 
    lda #$28
    clc
    adc.z str
    sta.z end
    lda #0
    adc.z str+1
    sta.z end+1
    // [358] memset::dst#4 = (byte*)memset::str#3
    // [359] phi from memset::@1 memset::@3 to memset::@2 [phi:memset::@1/memset::@3->memset::@2]
    // [359] phi memset::dst#2 = memset::dst#4 [phi:memset::@1/memset::@3->memset::@2#0] -- register_copy 
    // memset::@2
  __b2:
    // for(char* dst = str; dst!=end; dst++)
    // [360] if(memset::dst#2!=memset::end#0) goto memset::@3 -- pbuz1_neq_pbuz2_then_la1 
    lda.z dst+1
    cmp.z end+1
    bne __b3
    lda.z dst
    cmp.z end
    bne __b3
    // memset::@return
    // }
    // [361] return 
    rts
    // memset::@3
  __b3:
    // *dst = c
    // [362] *memset::dst#2 = memset::c#4 -- _deref_pbuz1=vbuz2 
    lda.z c
    ldy #0
    sta (dst),y
    // for(char* dst = str; dst!=end; dst++)
    // [363] memset::dst#1 = ++ memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    jmp __b2
}
  // File Data
.segment Data
  // The digits used for numbers
  DIGITS: .text "0123456789abcdef"
  // Values of hexadecimal digits
  RADIX_HEXADECIMAL_VALUES_CHAR: .byte $10
  // Values of decimal digits
  RADIX_DECIMAL_VALUES: .word $2710, $3e8, $64, $a
  // Values of decimal digits
  RADIX_DECIMAL_VALUES_LONG: .dword $3b9aca00, $5f5e100, $989680, $f4240, $186a0, $2710, $3e8, $64, $a
  // The board. board[i] holds the column position of the queen on row i. 
  board: .fill $14, 0
  // Buffer used for stringified number being printed
  printf_buffer: .fill SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER, 0

