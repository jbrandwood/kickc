const nomodify byte* BORDER_COLOR = (byte*) 53280
const byte* DIGITS[]  = "0123456789abcdef"
const word* UTOA10_SUB[]  = { $7530, $2710, $bb8, $3e8, $12c, $64, $1e, $a }
const byte* UTOA10_VAL[]  = { 3, 1, 3, 1, 3, 1, 3, 1 }
void cls()
byte* cls::sc
byte* cls::sc#1 sc zp[2]:2 151.5
byte* cls::sc#2 sc zp[2]:2 151.5
const byte* cls::screen = (byte*) 1024
const nomodify byte* control = (byte*) 53265
void main()
byte~ main::$1 zp[1]:6 101.0
byte~ main::$2 reg byte a 202.0
byte main::i
byte main::i#1 reg byte x 202.0
byte main::i#2 reg byte x 168.33333333333331
const byte* main::msg[]  = "raster lines"
byte main::rst
byte main::rst#0 reg byte a 202.0
byte* main::screen
byte main::time
byte main::time#0 reg byte a 11.0
byte main::time_end
byte main::time_end#0 reg byte x 11.0
byte main::time_start
byte main::time_start#0 time_start zp[1]:7 1.2941176470588236
const nomodify byte* raster = (byte*) 53266
void utoa10w(word utoa10w::value , byte* utoa10w::dst)
byte~ utoa10w::$1 reg byte a 20002.0
byte~ utoa10w::$8 reg byte y 10001.0
byte~ utoa10w::$9 reg byte a 202.0
byte utoa10w::bStarted
byte utoa10w::bStarted#2 bStarted zp[1]:7 2500.25
byte utoa10w::digit
byte utoa10w::digit#1 digit zp[1]:6 10001.0
byte utoa10w::digit#3 digit zp[1]:6 8334.166666666666
byte utoa10w::digit#7 digit zp[1]:6 6667.333333333333
byte* utoa10w::dst
byte* utoa10w::dst#1 dst zp[2]:4 20002.0
byte* utoa10w::dst#11 dst zp[2]:4 7778.555555555557
byte* utoa10w::dst#2 dst zp[2]:4 202.0
byte* utoa10w::dst#4 dst zp[2]:4 6041.0
byte* utoa10w::dst#8 dst zp[2]:4 30003.0
byte utoa10w::i
byte utoa10w::i#1 reg byte x 15001.5
byte utoa10w::i#2 reg byte x 5833.916666666667
word utoa10w::value
word utoa10w::value#0 value zp[2]:2 56.0
word utoa10w::value#1 value zp[2]:2 20002.0
word utoa10w::value#10 value zp[2]:2 3854.3076923076924
byte utoa16n(byte utoa16n::nybble , word** utoa16n::dst , byte utoa16n::started)
word** utoa16n::dst
byte utoa16n::nybble
byte utoa16n::nybble#0 reg byte a 202.0
byte utoa16n::nybble#1 reg byte a 101.0
byte utoa16n::nybble#2 reg byte a 101.0
byte utoa16n::nybble#3 reg byte a 202.0
byte utoa16n::nybble#4 reg byte a 481.2
byte utoa16n::return
byte utoa16n::return#0 reg byte x 202.0
byte utoa16n::return#1 reg byte x 202.0
byte utoa16n::return#4 reg byte x 314.8571428571429
byte utoa16n::started
byte utoa16n::started#1 reg byte x 202.0
byte utoa16n::started#2 reg byte x 202.0
byte utoa16n::started#7 reg byte x 401.0
void utoa16w(word utoa16w::value , volatile byte* utoa16w::dst)
byte~ utoa16w::$0 reg byte a 202.0
byte~ utoa16w::$3 reg byte a 202.0
byte~ utoa16w::$6 reg byte a 202.0
byte~ utoa16w::$9 reg byte a 202.0
volatile byte* utoa16w::dst loadstore zp[2]:8 4.875
byte utoa16w::started
byte utoa16w::started#1 reg byte x 67.33333333333333
byte utoa16w::started#2 reg byte x 67.33333333333333
word utoa16w::value
word utoa16w::value#5 value zp[2]:2 25.25

reg byte x [ main::i#2 main::i#1 ]
reg byte x [ utoa10w::i#2 utoa10w::i#1 ]
zp[2]:2 [ utoa10w::value#10 utoa10w::value#0 utoa10w::value#1 utoa16w::value#5 cls::sc#2 cls::sc#1 ]
zp[2]:4 [ utoa10w::dst#8 utoa10w::dst#11 utoa10w::dst#4 utoa10w::dst#1 utoa10w::dst#2 ]
reg byte a [ utoa16n::nybble#4 utoa16n::nybble#0 utoa16n::nybble#1 utoa16n::nybble#2 utoa16n::nybble#3 ]
reg byte x [ utoa16n::return#4 utoa16n::started#7 utoa16n::started#1 utoa16n::started#2 ]
zp[1]:6 [ main::$1 utoa10w::digit#3 utoa10w::digit#1 utoa10w::digit#7 ]
reg byte a [ main::$2 ]
reg byte a [ main::rst#0 ]
zp[1]:7 [ main::time_start#0 utoa10w::bStarted#2 ]
zp[2]:8 [ utoa16w::dst ]
reg byte x [ main::time_end#0 ]
reg byte a [ main::time#0 ]
reg byte a [ utoa16w::$0 ]
reg byte x [ utoa16n::return#0 ]
reg byte x [ utoa16w::started#1 ]
reg byte a [ utoa16w::$3 ]
reg byte x [ utoa16n::return#1 ]
reg byte x [ utoa16w::started#2 ]
reg byte a [ utoa16w::$6 ]
reg byte a [ utoa16w::$9 ]
reg byte y [ utoa10w::$8 ]
reg byte a [ utoa10w::$1 ]
reg byte a [ utoa10w::$9 ]
