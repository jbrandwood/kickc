@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] phi()
  [5] call strip 
  to:main::@1
main::@1: scope:[main]  from main
  [6] phi()
  [7] call print 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [8] phi()
  [9] call strip 
  to:main::@3
main::@3: scope:[main]  from main::@2
  [10] phi()
  [11] call print 
  to:main::@return
main::@return: scope:[main]  from main::@3
  [12] return 
  to:@return

(void()) print((byte*) print::msg)
print: scope:[print]  from main::@1 main::@3
  [13] (byte*) screen#15 ← phi( main::@1/(byte*) 1024 main::@3/(byte*) screen#11 )
  [13] (byte*) print::msg#4 ← phi( main::@1/(const byte[]) msg1#0 main::@3/(const byte[]) msg2#0 )
  to:print::@1
print::@1: scope:[print]  from print print::@1
  [14] (byte*) screen#10 ← phi( print/(byte*) screen#15 print::@1/(byte*) screen#11 )
  [14] (byte*) print::msg#3 ← phi( print/(byte*) print::msg#4 print::@1/(byte*) print::msg#2 )
  [15] *((byte*) screen#10) ← *((byte*) print::msg#3)
  [16] (byte*) screen#11 ← ++ (byte*) screen#10
  [17] (byte*) print::msg#2 ← ++ (byte*) print::msg#3
  [18] if(*((byte*) print::msg#2)!=(byte) 0) goto print::@1
  to:print::@return
print::@return: scope:[print]  from print::@1
  [19] return 
  to:@return

(void()) strip((byte*) strip::p , (byte) strip::c)
strip: scope:[strip]  from main main::@2
  [20] (byte) strip::c#3 ← phi( main/(byte) ' ' main::@2/(byte) 'y' )
  [20] (byte*) strip::dest#0 ← phi( main/(const byte[]) msg1#0 main::@2/(const byte[]) msg2#0 )
  [21] (byte*~) strip::p#7 ← (byte*) strip::dest#0
  to:strip::@1
strip::@1: scope:[strip]  from strip strip::@4
  [22] (byte*) strip::dest#2 ← phi( strip/(byte*) strip::dest#0 strip::@4/(byte*) strip::dest#4 )
  [22] (byte*) strip::p#4 ← phi( strip/(byte*~) strip::p#7 strip::@4/(byte*~) strip::p#8 )
  [23] if(*((byte*) strip::p#4)==(byte) strip::c#3) goto strip::@2
  to:strip::@3
strip::@3: scope:[strip]  from strip::@1
  [24] *((byte*) strip::dest#2) ← *((byte*) strip::p#4)
  [25] (byte*) strip::dest#1 ← ++ (byte*) strip::dest#2
  to:strip::@2
strip::@2: scope:[strip]  from strip::@1 strip::@3
  [26] (byte*) strip::dest#4 ← phi( strip::@1/(byte*) strip::dest#2 strip::@3/(byte*) strip::dest#1 )
  [27] (byte*) strip::p#2 ← ++ (byte*) strip::p#4
  [28] if(*((byte*) strip::p#4)!=(byte) 0) goto strip::@4
  to:strip::@return
strip::@return: scope:[strip]  from strip::@2
  [29] return 
  to:@return
strip::@4: scope:[strip]  from strip::@2
  [30] (byte*~) strip::p#8 ← (byte*) strip::p#2
  to:strip::@1
