
(void()) main()
main: scope:[main]  from
  [0] phi()
  [1] call get 
  [2] (byte) get::return_x#0 ← (byte) get::return_x#2
  to:main::@2
main::@2: scope:[main]  from main
  [3] (byte~) main::$0_x ← (byte) get::return_x#0
  [4] *((byte*)(const nomodify struct Point*) SCREEN) ← (byte~) main::$0_x
  [5] *((byte*)(const nomodify struct Point*) SCREEN+(const byte) OFFSET_STRUCT_POINT_Y) ← (const byte) get::p_y
  to:main::@1
main::@1: scope:[main]  from main::@2 main::@3
  [6] (byte) main::i#2 ← phi( main::@2/(byte) 1 main::@3/(byte) main::i#1 )
  [7] (byte) get::i#1 ← (byte) main::i#2
  [8] call get 
  [9] (byte) get::return_x#1 ← (byte) get::return_x#2
  to:main::@3
main::@3: scope:[main]  from main::@1
  [10] (byte~) main::$1_x ← (byte) get::return_x#1
  [11] (byte~) main::$3 ← (byte) main::i#2 << (byte) 1
  [12] *((byte*)(const nomodify struct Point*) SCREEN + (byte~) main::$3) ← (byte~) main::$1_x
  [13] *((byte*)(const nomodify struct Point*) SCREEN+(const byte) OFFSET_STRUCT_POINT_Y + (byte~) main::$3) ← (const byte) get::p_y
  [14] (byte) main::i#1 ← ++ (byte) main::i#2
  [15] if((byte) main::i#1!=(byte) 3) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@3
  [16] return 
  to:@return

(struct Point()) get((byte) get::i)
get: scope:[get]  from main main::@1
  [17] (byte) get::return_x#2 ← phi( main/(byte) 0 main::@1/(byte) get::i#1 )
  to:get::@return
get::@return: scope:[get]  from get
  [18] return 
  to:@return
