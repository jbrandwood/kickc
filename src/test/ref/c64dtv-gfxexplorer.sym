constant byte* const CHARGEN = (byte*) 53248
constant struct MOS6526_CIA* const CIA1 = (struct MOS6526_CIA*) 56320
constant struct MOS6526_CIA* const CIA2 = (struct MOS6526_CIA*) 56576
constant byte* const COLS = (byte*) 55296
constant const byte DTV_BORDER_OFF = 2
constant const byte DTV_CHUNKY = $40
constant const byte DTV_COLORRAM_OFF = $10
constant const dword DTV_COLOR_BANK_DEFAULT = $1d800
constant byte* const DTV_COLOR_BANK_HI = (byte*) 53303
constant byte* const DTV_COLOR_BANK_LO = (byte*) 53302
constant byte* const DTV_CONTROL = (byte*) 53308
constant byte* const DTV_FEATURE = (byte*) 53311
constant const byte DTV_FEATURE_ENABLE = 1
constant byte* const DTV_GRAPHICS_VIC_BANK = (byte*) 53309
constant const byte DTV_HIGHCOLOR = 4
constant const byte DTV_LINEAR = 1
constant const byte DTV_OVERSCAN = 8
constant byte* const DTV_PALETTE = (byte*) 53760
constant byte* DTV_PALETTE_DEFAULT[$10]  = { 0, $f, $36, $be, $58, $db, $86, $ff, $29, $26, $3b, 5, 7, $df, $9a, $a }
constant byte* const DTV_PLANEA_MODULO_HI = (byte*) 53305
constant byte* const DTV_PLANEA_MODULO_LO = (byte*) 53304
constant byte* const DTV_PLANEA_START_HI = (byte*) 53317
constant byte* const DTV_PLANEA_START_LO = (byte*) 53306
constant byte* const DTV_PLANEA_START_MI = (byte*) 53307
constant byte* const DTV_PLANEA_STEP = (byte*) 53318
constant byte* const DTV_PLANEB_MODULO_HI = (byte*) 53320
constant byte* const DTV_PLANEB_MODULO_LO = (byte*) 53319
constant byte* const DTV_PLANEB_START_HI = (byte*) 53323
constant byte* const DTV_PLANEB_START_LO = (byte*) 53321
constant byte* const DTV_PLANEB_START_MI = (byte*) 53322
constant byte* const DTV_PLANEB_STEP = (byte*) 53324
constant byte* const FORM_CHARSET = (byte*) 6144
constant byte* FORM_COLS[]  = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@                                        @aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@                                        @ nnnnnnnnnnnn   mmmmmmmmmm   ooooooooo  @ nnnnnnnnnnnn   mmmmmmmmmm   ooooooooo  @ nnnnnnnnnnnn   mmmmmmmmmm   ooooooooo  @ nnnnnnnnnnnn   mmmmmmmmmm   ooooooooo  @ nnnnnnnnnnnn   mmmmmmmmmm              @ nnnnnnnnnnnn                jjjjjjjjj  @ nnnnnnnnnnnn   mmmmmmmmmm   jjjjjjjjj  @ nnnnnnnnnnnn   mmmmmmmmmm   jjjjjjjjj  @ nnnnnnnnnnnn   mmmmmmmmmm   jjjjjjjjj  @ nnnnnnnnnnnn   mmmmmmmmmm   jjjjjjjjj  @ nnnnnnnnnnnn   mmmmmmmmmm   jjjjjjjjj  @ nnnnnnnnnnnn   mmmmmmmmmm   jjjjjjjjj  @"
constant const signed byte FORM_CURSOR_BLINK = $28
constant byte* const FORM_SCREEN = (byte*) 1024
constant byte* FORM_TEXT[]  = " C64 DTV Graphics Mode Explorer         @                                        @ PRESET 0 Standard Charset              @                                        @ CONTROL        PLANE  A     VIC II     @ bmm        0   pattern p0   screen s0  @ mcm        0   start   00   gfx    g0  @ ecm        0   step    00   colors c0  @ hicolor    0   modulo  00              @ linear     0                COLORS     @ color off  0   PLANE  B     palet   0  @ chunky     0   pattern p0   bgcol0 00  @ border off 0   start   00   bgcol1 00  @ overscan   0   step    00   bgcol2 00  @                modulo  00   bgcol3 00  @"
constant const byte KEY_COMMODORE = $3d
constant const byte KEY_CRSR_DOWN = 7
constant const byte KEY_CRSR_RIGHT = 2
constant const byte KEY_CTRL = $3a
constant const byte KEY_LSHIFT = $f
constant const byte KEY_MODIFIER_COMMODORE = 8
constant const byte KEY_MODIFIER_CTRL = 4
constant const byte KEY_MODIFIER_LSHIFT = 1
constant const byte KEY_MODIFIER_RSHIFT = 2
constant const byte KEY_MODIFIER_SHIFT = KEY_MODIFIER_LSHIFT|KEY_MODIFIER_RSHIFT
constant const byte KEY_RSHIFT = $34
constant const byte KEY_SPACE = $3c
constant byte OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR = 2
constant byte OFFSET_STRUCT_MOS6526_CIA_PORT_B = 1
constant byte OFFSET_STRUCT_MOS6526_CIA_PORT_B_DDR = 3
constant byte OFFSET_STRUCT_MOS6569_VICII_BG_COLOR = $21
constant byte OFFSET_STRUCT_MOS6569_VICII_BG_COLOR1 = $22
constant byte OFFSET_STRUCT_MOS6569_VICII_BG_COLOR2 = $23
constant byte OFFSET_STRUCT_MOS6569_VICII_BG_COLOR3 = $24
constant byte OFFSET_STRUCT_MOS6569_VICII_BORDER_COLOR = $20
constant byte OFFSET_STRUCT_MOS6569_VICII_CONTROL1 = $11
constant byte OFFSET_STRUCT_MOS6569_VICII_CONTROL2 = $16
constant byte OFFSET_STRUCT_MOS6569_VICII_MEMORY = $18
constant byte OFFSET_STRUCT_MOS6569_VICII_RASTER = $12
constant const dword PLANE_8BPP_CHUNKY = $20000
constant const dword PLANE_BLANK = $38000
constant const dword PLANE_CHARSET8 = $3c000
constant const dword PLANE_FULL = $3a000
constant const dword PLANE_HORISONTAL = $30000
constant const dword PLANE_HORISONTAL2 = $34000
constant const dword PLANE_VERTICAL = $32000
constant const dword PLANE_VERTICAL2 = $36000
constant byte* const PROCPORT = (byte*) 1
constant byte* const PROCPORT_DDR = (byte*) 0
constant const byte PROCPORT_DDR_MEMORY_MASK = 7
constant const byte PROCPORT_RAM_CHARROM = 1
constant const byte PROCPORT_RAM_IO = 5
constant byte RADIX::BINARY = 2
constant byte RADIX::DECIMAL = $a
constant byte RADIX::HEXADECIMAL = $10
constant byte RADIX::OCTAL = 8
constant struct MOS6569_VICII* const VICII = (struct MOS6569_VICII*) 53248
constant byte* const VICII_BITMAP = (byte*) 24576
constant const byte VICII_BMM = $20
constant byte* const VICII_CHARSET_ROM = (byte*) 22528
constant byte* const VICII_CONTROL1 = (byte*) 53265
constant byte* const VICII_CONTROL2 = (byte*) 53270
constant const byte VICII_CSEL = 8
constant const byte VICII_DEN = $10
constant const byte VICII_ECM = $40
constant const byte VICII_MCM = $10
constant byte* const VICII_MEMORY = (byte*) 53272
constant const byte VICII_RSEL = 8
constant byte* const VICII_SCREEN0 = (byte*) 16384
constant byte* const VICII_SCREEN1 = (byte*) 17408
constant byte* const VICII_SCREEN2 = (byte*) 18432
constant byte* const VICII_SCREEN3 = (byte*) 19456
constant byte* const VICII_SCREEN4 = (byte*) 20480
constant const byte WHITE = 1
word abs_u16(word abs_u16::w)
byte~ abs_u16::$0 reg byte a 200002.0
byte~ abs_u16::$1 reg byte a 200002.0
word abs_u16::return
word abs_u16::return#0 return zp[2]:17 20002.0
word abs_u16::return#1 return zp[2]:17 20002.0
word abs_u16::return#2 return zp[2]:17 200002.0
word abs_u16::return#4 return zp[2]:17 55001.0
word abs_u16::w
word abs_u16::w#0 w zp[2]:17 20002.0
word abs_u16::w#1 w zp[2]:17 20002.0
word abs_u16::w#2 w zp[2]:17 80001.25
void apply_preset(byte apply_preset::idx)
byte apply_preset::i
byte apply_preset::i#1 reg byte y 2.00000002E8
byte apply_preset::i#2 reg byte y 1.6666666833333334E8
byte apply_preset::idx
byte apply_preset::idx#0 reg byte a 100910.18181818182
byte* apply_preset::preset
byte* apply_preset::preset#15 preset zp[2]:13 2.00000002E7
void bitmap_clear(byte bitmap_clear::bgcol , byte bitmap_clear::fgcol)
byte bitmap_clear::bgcol
byte bitmap_clear::col
constant byte bitmap_clear::col#0 col = WHITE*$10
byte bitmap_clear::fgcol
byte* bitmap_gfx
void bitmap_init(byte* bitmap_init::gfx , byte* bitmap_init::screen)
byte~ bitmap_init::$4 reg byte a 20002.0
byte~ bitmap_init::$5 reg byte a 20002.0
byte~ bitmap_init::$6 reg byte a 20002.0
byte~ bitmap_init::$7 zp[1]:37 5000.5
byte bitmap_init::bits
byte bitmap_init::bits#1 reg byte a 10001.0
byte bitmap_init::bits#3 reg byte a 15001.5
byte bitmap_init::bits#4 reg byte a 6667.333333333333
byte* bitmap_init::gfx
byte* bitmap_init::screen
byte bitmap_init::x
byte bitmap_init::x#1 reg byte x 15001.5
byte bitmap_init::x#2 reg byte x 5000.5
byte bitmap_init::y
byte bitmap_init::y#1 reg byte x 15001.5
byte bitmap_init::y#2 reg byte x 5000.5
byte* bitmap_init::yoffs
byte* bitmap_init::yoffs#1 yoffs zp[2]:15 20002.0
byte* bitmap_init::yoffs#2 yoffs zp[2]:15 6250.625
byte* bitmap_init::yoffs#4 yoffs zp[2]:15 10001.0
void bitmap_line(word bitmap_line::x1 , word bitmap_line::y1 , word bitmap_line::x2 , word bitmap_line::y2)
word bitmap_line::dx
word bitmap_line::dx#0 dx zp[2]:29 76000.175
word bitmap_line::dy
word bitmap_line::dy#0 dy zp[2]:17 84444.63888888889
word bitmap_line::e
word bitmap_line::e#0 e zp[2]:11 20002.0
word bitmap_line::e#1 e zp[2]:11 1333334.6666666667
word bitmap_line::e#2 e zp[2]:11 2000002.0
word bitmap_line::e#3 e zp[2]:11 402000.60000000003
word bitmap_line::e#6 e zp[2]:11 1500001.5
word bitmap_line::e1
word bitmap_line::e1#0 e1 zp[2]:15 20002.0
word bitmap_line::e1#1 e1 zp[2]:15 1333334.6666666667
word bitmap_line::e1#2 e1 zp[2]:15 2000002.0
word bitmap_line::e1#3 e1 zp[2]:15 402000.60000000003
word bitmap_line::e1#6 e1 zp[2]:15 1500001.5
word bitmap_line::sx
word bitmap_line::sx#0 sx zp[2]:35 67000.1
word bitmap_line::sy
word bitmap_line::sy#0 sy zp[2]:19 77307.80769230769
word bitmap_line::x
word bitmap_line::x#1 x zp[2]:13 1000001.0
word bitmap_line::x#12 x zp[2]:13 2000002.0
word bitmap_line::x#13 x zp[2]:13 572857.857142857
word bitmap_line::x#15 x zp[2]:13 571429.1428571428
word bitmap_line::x#6 x zp[2]:13 2010003.0
word bitmap_line::x#7 x zp[2]:13 752501.0
word bitmap_line::x1
word bitmap_line::x1#0 x1 zp[2]:13 2040.24
word bitmap_line::x2
word bitmap_line::x2#0 x2 zp[2]:23 30939.515151515152
word bitmap_line::y
word bitmap_line::y#1 y zp[2]:27 571429.1428571428
word bitmap_line::y#13 y zp[2]:27 2000002.0
word bitmap_line::y#15 y zp[2]:27 430000.57142857136
word bitmap_line::y#2 y zp[2]:27 1000001.0
word bitmap_line::y#4 y zp[2]:27 502500.75
word bitmap_line::y#7 y zp[2]:27 1000001.0
word bitmap_line::y1
word bitmap_line::y1#0 y1 zp[2]:27 1640.2
word bitmap_line::y2
word bitmap_line::y2#0 y2 zp[2]:25 31906.375
void bitmap_plot(word bitmap_plot::x , byte bitmap_plot::y)
word~ bitmap_plot::$0 zp[2]:41 2.0000002E7
byte~ bitmap_plot::$1 reg byte x 2.0000002E7
byte* bitmap_plot::plotter
word bitmap_plot::plotter#0 plotter zp[2]:39 5000000.5
byte* bitmap_plot::plotter#1 plotter zp[2]:39 1.50000015E7
word bitmap_plot::x
word bitmap_plot::x#0 x zp[2]:13 10001.0
word bitmap_plot::x#1 x zp[2]:13 1000001.0
word bitmap_plot::x#2 x zp[2]:13 10001.0
word bitmap_plot::x#3 x zp[2]:13 1000001.0
word bitmap_plot::x#4 x zp[2]:13 5505001.5
byte bitmap_plot::y
byte bitmap_plot::y#0 reg byte a 20002.0
byte bitmap_plot::y#1 reg byte a 2000002.0
byte bitmap_plot::y#2 reg byte a 20002.0
byte bitmap_plot::y#3 reg byte a 2000002.0
byte bitmap_plot::y#4 reg byte a 2.2020006E7
constant const byte* bitmap_plot_bit[$100]  = { fill( $100, 0) }
constant const byte* bitmap_plot_yhi[$100]  = { fill( $100, 0) }
constant const byte* bitmap_plot_ylo[$100]  = { fill( $100, 0) }
byte* bitmap_screen
void dtvSetCpuBankSegment1(byte dtvSetCpuBankSegment1::cpuBankIdx)
constant byte* dtvSetCpuBankSegment1::cpuBank = (byte*) 255
byte dtvSetCpuBankSegment1::cpuBankIdx
byte dtvSetCpuBankSegment1::cpuBankIdx#1 reg byte a 20002.0
byte dtvSetCpuBankSegment1::cpuBankIdx#11 reg byte a 2002.0
byte dtvSetCpuBankSegment1::cpuBankIdx#13 reg byte a 111003.0
constant byte* const form_VICII_bg0_hi = form_fields_val+$1c
constant byte* const form_VICII_bg0_lo = form_fields_val+$1d
constant byte* const form_VICII_bg1_hi = form_fields_val+$1e
constant byte* const form_VICII_bg1_lo = form_fields_val+$1f
constant byte* const form_VICII_bg2_hi = form_fields_val+$20
constant byte* const form_VICII_bg2_lo = form_fields_val+$21
constant byte* const form_VICII_bg3_hi = form_fields_val+$22
constant byte* const form_VICII_bg3_lo = form_fields_val+$23
constant byte* const form_VICII_cols = form_fields_val+$1a
constant byte* const form_VICII_gfx = form_fields_val+$19
constant byte* const form_VICII_screen = form_fields_val+$18
constant byte* const form_a_mod_hi = form_fields_val+$f
constant byte* const form_a_mod_lo = form_fields_val+$10
constant byte* const form_a_pattern = form_fields_val+$a
constant byte* const form_a_start_hi = form_fields_val+$b
constant byte* const form_a_start_lo = form_fields_val+$c
constant byte* const form_a_step_hi = form_fields_val+$d
constant byte* const form_a_step_lo = form_fields_val+$e
constant byte* const form_b_mod_hi = form_fields_val+$16
constant byte* const form_b_mod_lo = form_fields_val+$17
constant byte* const form_b_pattern = form_fields_val+$11
constant byte* const form_b_start_hi = form_fields_val+$12
constant byte* const form_b_start_lo = form_fields_val+$13
constant byte* const form_b_step_hi = form_fields_val+$14
constant byte* const form_b_step_lo = form_fields_val+$15
byte form_control()
byte~ form_control::$12 reg byte a 2000002.0
byte~ form_control::$13 reg byte a 2000002.0
byte~ form_control::$14 reg byte a 2000002.0
byte~ form_control::$15 reg byte a 2000002.0
byte~ form_control::$22 reg byte a 2000002.0
byte* form_control::field
byte* form_control::field#0 field zp[2]:29 296296.5925925926
byte form_control::key_event
byte form_control::key_event#0 reg byte a 1333334.6666666667
byte form_control::return
byte form_control::return#0 reg byte a 200002.0
byte form_control::return#2 reg byte x 33333.666666666664
constant byte* const form_ctrl_bmm = form_fields_val+1
constant byte* const form_ctrl_borof = form_fields_val+8
constant byte* const form_ctrl_chunk = form_fields_val+7
constant byte* const form_ctrl_colof = form_fields_val+6
constant byte* const form_ctrl_ecm = form_fields_val+3
constant byte* const form_ctrl_hicol = form_fields_val+4
constant byte* const form_ctrl_line = form_fields_val+5
constant byte* const form_ctrl_mcm = form_fields_val+2
constant byte* const form_ctrl_overs = form_fields_val+9
signed byte form_cursor_count
signed byte form_cursor_count#1 form_cursor_count zp[1]:3 2.871794871794872
signed byte form_cursor_count#16 form_cursor_count zp[1]:3 200000.2
signed byte form_cursor_count#17 form_cursor_count zp[1]:3 182942.11764705883
signed byte form_cursor_count#23 form_cursor_count zp[1]:3 158586.2857142857
signed byte form_cursor_count#4 form_cursor_count zp[1]:3 1000001.0
constant byte* const form_dtv_palet = form_fields_val+$1b
byte form_field_idx
byte form_field_idx#1 form_field_idx zp[1]:4 2.871794871794872
byte form_field_idx#19 form_field_idx zp[1]:4 241765.70588235295
byte form_field_idx#30 form_field_idx zp[1]:4 438721.0256410255
byte form_field_idx#33 form_field_idx zp[1]:4 3000003.0
byte form_field_idx#4 form_field_idx zp[1]:4 1000001.0
byte form_field_idx#5 form_field_idx zp[1]:4 1000001.0
byte* form_field_ptr(byte form_field_ptr::field_idx)
byte* form_field_ptr::field
byte form_field_ptr::field_idx
byte form_field_ptr::field_idx#0 reg byte x 2.00000002E8
byte form_field_ptr::field_idx#1 reg byte x 2000002.0
byte form_field_ptr::field_idx#2 reg byte x 7.003333346666667E8
byte* form_field_ptr::line
word form_field_ptr::line#0 line zp[2]:39 2.000000002E8
byte* form_field_ptr::return
byte* form_field_ptr::return#0 return zp[2]:29 3.336666673333334E8
byte* form_field_ptr::return#3 return zp[2]:29 2000002.0
byte form_field_ptr::x
byte form_field_ptr::x#0 x zp[1]:37 5.2500000075E8
byte form_field_ptr::y
byte form_field_ptr::y#0 reg byte y 3.000000003E9
constant byte form_fields_cnt = $24
constant byte* form_fields_max[]  = { $a, 1, 1, 1, 1, 1, 1, 1, 1, 1, $d, $f, $f, $f, $f, $f, $f, $d, $f, $f, $f, $f, $f, $f, 3, 1, 4, 1, $f, $f, $f, $f, $f, $f, $f, $f }
constant byte* form_fields_val[]  = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
constant byte* form_fields_x[]  = { 8, $c, $c, $c, $c, $c, $c, $c, $c, $c, $19, $18, $19, $18, $19, $18, $19, $19, $18, $19, $18, $19, $18, $19, $25, $25, $25, $25, $24, $25, $24, $25, $24, $25, $24, $25 }
constant byte* form_fields_y[]  = { 2, 5, 6, 7, 8, 9, $a, $b, $c, $d, 5, 6, 6, 7, 7, 8, 8, $b, $c, $c, $d, $d, $e, $e, 5, 6, 7, $a, $b, $b, $c, $c, $d, $d, $e, $e }
constant byte* form_line_hi[$19]  = { fill( $19, 0) }
constant byte* form_line_lo[$19]  = { fill( $19, 0) }
void form_mode()
byte~ form_mode::$11 reg byte a 200002.0
byte form_mode::i
byte form_mode::i#1 reg byte x 15001.5
byte form_mode::i#2 reg byte x 20002.0
byte form_mode::preset_current
byte form_mode::preset_current#0 preset_current zp[1]:2 202.0
byte form_mode::preset_current#1 preset_current zp[1]:2 5000.5
byte form_mode::preset_current#6 preset_current zp[1]:2 38763.125
void form_render_values()
byte* form_render_values::field
byte form_render_values::idx
byte form_render_values::idx#1 reg byte x 2.00000002E8
byte form_render_values::idx#2 reg byte x 1.00000001E8
void form_set_screen(byte* form_set_screen::screen)
byte~ form_set_screen::$0 reg byte a 200002.0
byte~ form_set_screen::$1 reg byte a 200002.0
byte* form_set_screen::line
byte* form_set_screen::line#1 line zp[2]:15 66667.33333333333
byte* form_set_screen::line#2 line zp[2]:15 80000.8
byte* form_set_screen::screen
byte form_set_screen::y
byte form_set_screen::y#1 reg byte x 150001.5
byte form_set_screen::y#2 reg byte x 66667.33333333333
byte* get_VICII_charset(byte get_VICII_charset::idx)
byte get_VICII_charset::idx
byte get_VICII_charset::idx#0 reg byte a 1051.5
byte* get_VICII_charset::return
byte* get_VICII_charset::return#2 return zp[2]:15 33.666666666666664
byte* get_VICII_charset::return#4 return zp[2]:15 202.0
byte* get_VICII_screen(byte get_VICII_screen::idx)
byte get_VICII_screen::idx
byte get_VICII_screen::idx#0 reg byte a 202.0
byte get_VICII_screen::idx#1 reg byte a 202.0
byte get_VICII_screen::idx#2 reg byte a 1041.4
byte* get_VICII_screen::return
byte* get_VICII_screen::return#10 return zp[2]:11 202.0
byte* get_VICII_screen::return#11 return zp[2]:11 202.0
byte* get_VICII_screen::return#5 return zp[2]:11 50.5
dword get_plane(byte get_plane::idx)
byte get_plane::idx
byte get_plane::idx#0 reg byte a 202.0
byte get_plane::idx#1 reg byte a 202.0
byte get_plane::idx#10 reg byte a 1015.4285714285714
dword get_plane::return
dword get_plane::return#14 return zp[4]:5 50.5
dword get_plane::return#16 return zp[4]:5 202.0
dword get_plane::return#17 return zp[4]:5 202.0
void gfx_init()
void gfx_init_VICII_bitmap()
byte gfx_init_VICII_bitmap::l
byte gfx_init_VICII_bitmap::l#1 l zp[1]:4 2002.0
byte gfx_init_VICII_bitmap::l#2 l zp[1]:4 1001.0
constant byte gfx_init_VICII_bitmap::lines_cnt = 9
constant byte* gfx_init_VICII_bitmap::lines_x[]  = { 0, $ff, $ff, 0, 0, $80, $ff, $80, 0, $80 }
constant byte* gfx_init_VICII_bitmap::lines_y[]  = { 0, 0, $c7, $c7, 0, 0, $64, $c7, $64, 0 }
void gfx_init_charset()
byte gfx_init_charset::c
byte gfx_init_charset::c#1 c zp[1]:3 1501.5
byte gfx_init_charset::c#4 c zp[1]:3 286.0
byte* gfx_init_charset::chargen
byte* gfx_init_charset::chargen#1 chargen zp[2]:13 4200.6
byte* gfx_init_charset::chargen#2 chargen zp[2]:13 10334.666666666666
byte* gfx_init_charset::chargen#3 chargen zp[2]:13 2002.0
byte* gfx_init_charset::charset
byte* gfx_init_charset::charset#1 charset zp[2]:11 3500.5
byte* gfx_init_charset::charset#2 charset zp[2]:11 15502.0
byte* gfx_init_charset::charset#3 charset zp[2]:11 2002.0
byte gfx_init_charset::l
byte gfx_init_charset::l#1 reg byte x 15001.5
byte gfx_init_charset::l#2 reg byte x 5000.5
void gfx_init_plane_8bppchunky()
word~ gfx_init_plane_8bppchunky::$5 zp[2]:27 10001.0
byte gfx_init_plane_8bppchunky::c
byte gfx_init_plane_8bppchunky::c#0 reg byte a 20002.0
byte* gfx_init_plane_8bppchunky::gfxb
byte* gfx_init_plane_8bppchunky::gfxb#1 gfxb zp[2]:13 4200.6
byte* gfx_init_plane_8bppchunky::gfxb#3 gfxb zp[2]:13 15502.0
byte* gfx_init_plane_8bppchunky::gfxb#4 gfxb zp[2]:13 7500.75
byte* gfx_init_plane_8bppchunky::gfxb#5 gfxb zp[2]:13 2002.0
byte gfx_init_plane_8bppchunky::gfxbCpuBank
byte gfx_init_plane_8bppchunky::gfxbCpuBank#2 reg byte x 20002.0
byte gfx_init_plane_8bppchunky::gfxbCpuBank#4 reg byte x 10251.25
byte gfx_init_plane_8bppchunky::gfxbCpuBank#7 reg byte x 2002.0
byte gfx_init_plane_8bppchunky::gfxbCpuBank#8 reg byte x 3444.8888888888887
word gfx_init_plane_8bppchunky::x
word gfx_init_plane_8bppchunky::x#1 x zp[2]:11 15001.5
word gfx_init_plane_8bppchunky::x#2 x zp[2]:11 3000.3
byte gfx_init_plane_8bppchunky::y
byte gfx_init_plane_8bppchunky::y#1 y zp[1]:4 1501.5
byte gfx_init_plane_8bppchunky::y#6 y zp[1]:4 923.3076923076923
void gfx_init_plane_blank()
void gfx_init_plane_charset8()
byte~ gfx_init_plane_charset8::$2 reg byte a 200002.0
byte gfx_init_plane_charset8::bits
byte gfx_init_plane_charset8::bits#0 bits zp[1]:21 10001.0
byte gfx_init_plane_charset8::bits#1 bits zp[1]:21 50000.5
byte gfx_init_plane_charset8::bits#2 bits zp[1]:21 44286.28571428572
byte gfx_init_plane_charset8::c
byte gfx_init_plane_charset8::c#2 reg byte a 200002.0
byte gfx_init_plane_charset8::c#3 reg byte a 200002.0
byte gfx_init_plane_charset8::ch
byte gfx_init_plane_charset8::ch#1 ch zp[1]:9 1501.5
byte gfx_init_plane_charset8::ch#8 ch zp[1]:9 117.76470588235294
byte* gfx_init_plane_charset8::chargen
byte* gfx_init_plane_charset8::chargen#1 chargen zp[2]:13 1312.6875
byte* gfx_init_plane_charset8::chargen#2 chargen zp[2]:13 15502.0
byte* gfx_init_plane_charset8::chargen#3 chargen zp[2]:13 2002.0
byte gfx_init_plane_charset8::col
byte gfx_init_plane_charset8::col#1 col zp[1]:22 30143.428571428572
byte gfx_init_plane_charset8::col#2 col zp[1]:22 38750.5
byte gfx_init_plane_charset8::col#5 col zp[1]:22 7001.0
byte gfx_init_plane_charset8::col#6 col zp[1]:22 2002.0
byte gfx_init_plane_charset8::cp
byte gfx_init_plane_charset8::cp#1 reg byte x 150001.5
byte gfx_init_plane_charset8::cp#2 reg byte x 22222.444444444445
byte gfx_init_plane_charset8::cr
byte gfx_init_plane_charset8::cr#1 cr zp[1]:10 15001.5
byte gfx_init_plane_charset8::cr#6 cr zp[1]:10 1428.7142857142858
byte* gfx_init_plane_charset8::gfxa
byte* gfx_init_plane_charset8::gfxa#1 gfxa zp[2]:11 23444.88888888889
byte* gfx_init_plane_charset8::gfxa#2 gfxa zp[2]:11 51667.33333333333
byte* gfx_init_plane_charset8::gfxa#5 gfxa zp[2]:11 7001.0
byte* gfx_init_plane_charset8::gfxa#6 gfxa zp[2]:11 2002.0
byte gfx_init_plane_charset8::gfxbCpuBank
constant byte gfx_init_plane_charset8::gfxbCpuBank#0 gfxbCpuBank = (byte)PLANE_CHARSET8/$4000
void gfx_init_plane_fill(dword gfx_init_plane_fill::plane_addr , byte gfx_init_plane_fill::fill)
dword~ gfx_init_plane_fill::$0 zp[4]:31 2002.0
word~ gfx_init_plane_fill::$1 zp[2]:35 2002.0
word~ gfx_init_plane_fill::$4 zp[2]:11 2002.0
word~ gfx_init_plane_fill::$5 zp[2]:11 2002.0
byte gfx_init_plane_fill::bx
byte gfx_init_plane_fill::bx#1 reg byte x 150001.5
byte gfx_init_plane_fill::bx#2 reg byte x 66667.33333333333
byte gfx_init_plane_fill::by
byte gfx_init_plane_fill::by#1 by zp[1]:10 15001.5
byte gfx_init_plane_fill::by#4 by zp[1]:10 3333.6666666666665
byte gfx_init_plane_fill::fill
byte gfx_init_plane_fill::fill#6 fill zp[1]:9 5882.411764705882
byte* gfx_init_plane_fill::gfxb
byte* gfx_init_plane_fill::gfxb#0 gfxb zp[2]:11 2002.0
byte* gfx_init_plane_fill::gfxb#1 gfxb zp[2]:11 42000.600000000006
byte* gfx_init_plane_fill::gfxb#2 gfxb zp[2]:11 155002.0
byte* gfx_init_plane_fill::gfxb#3 gfxb zp[2]:11 21003.0
byte gfx_init_plane_fill::gfxbCpuBank
byte gfx_init_plane_fill::gfxbCpuBank#0 reg byte a 2002.0
dword gfx_init_plane_fill::plane_addr
dword gfx_init_plane_fill::plane_addr#3 plane_addr zp[4]:5 333.6666666666667
void gfx_init_plane_full()
void gfx_init_plane_horisontal()
byte~ gfx_init_plane_horisontal::$2 reg byte a 20002.0
byte gfx_init_plane_horisontal::ax
byte gfx_init_plane_horisontal::ax#1 reg byte x 15001.5
byte gfx_init_plane_horisontal::ax#2 reg byte x 2500.25
byte gfx_init_plane_horisontal::ay
byte gfx_init_plane_horisontal::ay#1 ay zp[1]:9 1501.5
byte gfx_init_plane_horisontal::ay#4 ay zp[1]:9 1091.181818181818
byte* gfx_init_plane_horisontal::gfxa
byte* gfx_init_plane_horisontal::gfxa#1 gfxa zp[2]:11 20002.0
byte* gfx_init_plane_horisontal::gfxa#2 gfxa zp[2]:11 20002.0
byte* gfx_init_plane_horisontal::gfxa#3 gfxa zp[2]:11 10201.2
byte* gfx_init_plane_horisontal::gfxa#6 gfxa zp[2]:11 2002.0
byte* gfx_init_plane_horisontal::gfxa#7 gfxa zp[2]:11 6200.8
byte gfx_init_plane_horisontal::gfxbCpuBank
constant byte gfx_init_plane_horisontal::gfxbCpuBank#0 gfxbCpuBank = (byte)PLANE_HORISONTAL/$4000
void gfx_init_plane_horisontal2()
byte~ gfx_init_plane_horisontal2::$2 reg byte a 20002.0
byte gfx_init_plane_horisontal2::ax
byte gfx_init_plane_horisontal2::ax#1 reg byte x 15001.5
byte gfx_init_plane_horisontal2::ax#2 reg byte x 4000.4
byte gfx_init_plane_horisontal2::ay
byte gfx_init_plane_horisontal2::ay#1 ay zp[1]:21 1501.5
byte gfx_init_plane_horisontal2::ay#4 ay zp[1]:21 1500.375
byte* gfx_init_plane_horisontal2::gfxa
byte* gfx_init_plane_horisontal2::gfxa#1 gfxa zp[2]:13 4200.6
byte* gfx_init_plane_horisontal2::gfxa#2 gfxa zp[2]:13 7751.0
byte* gfx_init_plane_horisontal2::gfxa#3 gfxa zp[2]:13 2002.0
byte gfx_init_plane_horisontal2::gfxbCpuBank
constant byte gfx_init_plane_horisontal2::gfxbCpuBank#0 gfxbCpuBank = (byte)PLANE_HORISONTAL2/$4000
byte gfx_init_plane_horisontal2::row
byte gfx_init_plane_horisontal2::row#0 reg byte a 20002.0
constant byte* gfx_init_plane_horisontal2::row_bitmask[]  = { 0, $55, $aa, $ff }
void gfx_init_plane_vertical()
byte gfx_init_plane_vertical::bx
byte gfx_init_plane_vertical::bx#1 reg byte x 15001.5
byte gfx_init_plane_vertical::bx#2 reg byte x 6667.333333333333
byte gfx_init_plane_vertical::by
byte gfx_init_plane_vertical::by#1 by zp[1]:10 1501.5
byte gfx_init_plane_vertical::by#4 by zp[1]:10 333.6666666666667
byte* gfx_init_plane_vertical::gfxb
byte* gfx_init_plane_vertical::gfxb#1 gfxb zp[2]:13 4200.6
byte* gfx_init_plane_vertical::gfxb#2 gfxb zp[2]:13 15502.0
byte* gfx_init_plane_vertical::gfxb#3 gfxb zp[2]:13 2002.0
byte gfx_init_plane_vertical::gfxbCpuBank
constant byte gfx_init_plane_vertical::gfxbCpuBank#0 gfxbCpuBank = (byte)PLANE_VERTICAL/$4000
void gfx_init_plane_vertical2()
void gfx_init_screen0()
byte~ gfx_init_screen0::$0 reg byte a 20002.0
byte~ gfx_init_screen0::$1 zp[1]:22 10001.0
byte~ gfx_init_screen0::$2 reg byte a 20002.0
byte~ gfx_init_screen0::$3 reg byte a 20002.0
byte* gfx_init_screen0::ch
byte* gfx_init_screen0::ch#1 ch zp[2]:11 4200.6
byte* gfx_init_screen0::ch#2 ch zp[2]:11 5167.333333333333
byte* gfx_init_screen0::ch#3 ch zp[2]:11 2002.0
byte gfx_init_screen0::cx
byte gfx_init_screen0::cx#1 reg byte x 15001.5
byte gfx_init_screen0::cx#2 reg byte x 4286.142857142857
byte gfx_init_screen0::cy
byte gfx_init_screen0::cy#1 cy zp[1]:3 1501.5
byte gfx_init_screen0::cy#4 cy zp[1]:3 1200.3
void gfx_init_screen1()
byte~ gfx_init_screen1::$0 reg byte a 20002.0
byte~ gfx_init_screen1::$1 reg byte a 20002.0
byte* gfx_init_screen1::ch
byte* gfx_init_screen1::ch#1 ch zp[2]:13 4200.6
byte* gfx_init_screen1::ch#2 ch zp[2]:13 7751.0
byte* gfx_init_screen1::ch#3 ch zp[2]:13 2002.0
byte gfx_init_screen1::cx
byte gfx_init_screen1::cx#1 reg byte x 15001.5
byte gfx_init_screen1::cx#2 reg byte x 6000.6
byte gfx_init_screen1::cy
byte gfx_init_screen1::cy#1 cy zp[1]:4 1501.5
byte gfx_init_screen1::cy#4 cy zp[1]:4 1500.375
void gfx_init_screen2()
byte~ gfx_init_screen2::$0 reg byte a 20002.0
byte~ gfx_init_screen2::$3 reg byte a 20002.0
byte~ gfx_init_screen2::$4 reg byte a 20002.0
byte* gfx_init_screen2::ch
byte* gfx_init_screen2::ch#1 ch zp[2]:11 4200.6
byte* gfx_init_screen2::ch#2 ch zp[2]:11 4429.142857142857
byte* gfx_init_screen2::ch#3 ch zp[2]:11 2002.0
byte gfx_init_screen2::col
byte gfx_init_screen2::col#0 reg byte y 15001.5
byte gfx_init_screen2::col2
byte gfx_init_screen2::col2#0 col2 zp[1]:22 10001.0
byte gfx_init_screen2::cx
byte gfx_init_screen2::cx#1 reg byte x 15001.5
byte gfx_init_screen2::cx#2 reg byte x 3750.375
byte gfx_init_screen2::cy
byte gfx_init_screen2::cy#1 cy zp[1]:2 1501.5
byte gfx_init_screen2::cy#4 cy zp[1]:2 1091.181818181818
void gfx_init_screen3()
byte~ gfx_init_screen3::$0 reg byte a 20002.0
byte~ gfx_init_screen3::$1 zp[1]:37 10001.0
byte~ gfx_init_screen3::$2 reg byte a 20002.0
byte~ gfx_init_screen3::$3 reg byte a 20002.0
byte* gfx_init_screen3::ch
byte* gfx_init_screen3::ch#1 ch zp[2]:11 4200.6
byte* gfx_init_screen3::ch#2 ch zp[2]:11 5167.333333333333
byte* gfx_init_screen3::ch#3 ch zp[2]:11 2002.0
byte gfx_init_screen3::cx
byte gfx_init_screen3::cx#1 reg byte x 15001.5
byte gfx_init_screen3::cx#2 reg byte x 4286.142857142857
byte gfx_init_screen3::cy
byte gfx_init_screen3::cy#1 cy zp[1]:2 1501.5
byte gfx_init_screen3::cy#4 cy zp[1]:2 1200.3
void gfx_init_screen4()
byte* gfx_init_screen4::ch
byte* gfx_init_screen4::ch#1 ch zp[2]:13 4200.6
byte* gfx_init_screen4::ch#2 ch zp[2]:13 15502.0
byte* gfx_init_screen4::ch#3 ch zp[2]:13 2002.0
byte gfx_init_screen4::cx
byte gfx_init_screen4::cx#1 reg byte x 15001.5
byte gfx_init_screen4::cx#2 reg byte x 6667.333333333333
byte gfx_init_screen4::cy
byte gfx_init_screen4::cy#1 cy zp[1]:3 1501.5
byte gfx_init_screen4::cy#4 cy zp[1]:3 333.6666666666667
void gfx_mode()
byte~ gfx_mode::$18 reg byte a 202.0
dword~ gfx_mode::$20 zp[4]:5 202.0
word~ gfx_mode::$22 zp[2]:17 202.0
byte~ gfx_mode::$23 reg byte a 202.0
word~ gfx_mode::$24 zp[2]:39 202.0
byte~ gfx_mode::$25 reg byte a 202.0
word~ gfx_mode::$26 zp[2]:19 202.0
byte~ gfx_mode::$27 reg byte a 202.0
byte~ gfx_mode::$28 reg byte a 202.0
byte~ gfx_mode::$29 reg byte a 202.0
byte~ gfx_mode::$30 reg byte a 202.0
byte~ gfx_mode::$31 reg byte a 202.0
byte~ gfx_mode::$32 reg byte a 202.0
dword~ gfx_mode::$34 zp[4]:5 202.0
word~ gfx_mode::$36 zp[2]:23 202.0
byte~ gfx_mode::$37 reg byte a 202.0
word~ gfx_mode::$38 zp[2]:25 202.0
byte~ gfx_mode::$39 reg byte a 202.0
word~ gfx_mode::$40 zp[2]:27 202.0
byte~ gfx_mode::$41 reg byte a 202.0
byte~ gfx_mode::$42 reg byte a 202.0
byte~ gfx_mode::$43 reg byte a 202.0
byte~ gfx_mode::$44 reg byte a 202.0
byte~ gfx_mode::$45 reg byte a 202.0
word~ gfx_mode::$47 zp[2]:11 202.0
word~ gfx_mode::$48 zp[2]:11 12.625
word~ gfx_mode::$50 zp[2]:15 202.0
byte~ gfx_mode::$51 reg byte a 202.0
byte~ gfx_mode::$52 zp[1]:21 101.0
byte~ gfx_mode::$53 reg byte a 202.0
byte~ gfx_mode::$55 reg byte a 202.0
byte~ gfx_mode::$56 reg byte a 202.0
byte~ gfx_mode::$57 reg byte a 202.0
byte~ gfx_mode::$58 reg byte a 202.0
byte~ gfx_mode::$59 reg byte a 202.0
byte~ gfx_mode::$60 reg byte a 202.0
byte~ gfx_mode::$61 reg byte a 202.0
byte~ gfx_mode::$62 reg byte a 202.0
byte*~ gfx_mode::$82 zp[2]:11 101.0
byte*~ gfx_mode::$83 zp[2]:15 101.0
byte~ gfx_mode::$84 reg byte a 202.0
byte* gfx_mode::VICII_colors
byte* gfx_mode::VICII_colors#0 VICII_colors zp[2]:11 202.0
byte* gfx_mode::VICII_colors#1 VICII_colors zp[2]:11 42000.600000000006
byte* gfx_mode::VICII_colors#2 VICII_colors zp[2]:11 103334.66666666666
byte* gfx_mode::VICII_colors#3 VICII_colors zp[2]:11 20103.0
byte gfx_mode::VICII_control
byte gfx_mode::VICII_control#2 reg byte x 202.0
byte gfx_mode::VICII_control#4 reg byte x 303.0
byte gfx_mode::VICII_control#5 reg byte x 101.0
byte gfx_mode::VICII_control2
byte gfx_mode::VICII_control2#2 reg byte a 101.0
byte* gfx_mode::col
byte* gfx_mode::col#1 col zp[2]:13 35000.5
byte* gfx_mode::col#2 col zp[2]:13 155002.0
byte* gfx_mode::col#3 col zp[2]:13 20002.0
byte gfx_mode::cx
byte gfx_mode::cx#1 reg byte x 150001.5
byte gfx_mode::cx#2 reg byte x 50000.5
byte gfx_mode::cy
byte gfx_mode::cy#1 cy zp[1]:2 15001.5
byte gfx_mode::cy#4 cy zp[1]:2 2857.4285714285716
byte gfx_mode::dtv_control
byte gfx_mode::dtv_control#10 reg byte x 202.0
byte gfx_mode::dtv_control#11 reg byte x 202.0
byte gfx_mode::dtv_control#12 reg byte x 303.0
byte gfx_mode::dtv_control#13 reg byte x 202.0
byte gfx_mode::dtv_control#14 reg byte x 101.0
byte gfx_mode::dtv_control#15 reg byte x 202.0
byte gfx_mode::dtv_control#2 reg byte x 202.0
byte gfx_mode::dtv_control#3 reg byte x 202.0
byte gfx_mode::dtv_control#4 reg byte x 202.0
byte gfx_mode::dtv_control#5 reg byte x 202.0
byte gfx_mode::dtv_control#6 reg byte x 202.0
byte gfx_mode::i
byte gfx_mode::i#1 reg byte x 15001.5
byte gfx_mode::i#2 reg byte x 20002.0
byte gfx_mode::j
byte gfx_mode::j#1 reg byte x 15001.5
byte gfx_mode::j#2 reg byte x 20002.0
byte gfx_mode::keyboard_event
byte gfx_mode::keyboard_event#0 reg byte a 20002.0
dword gfx_mode::plane_a
dword gfx_mode::plane_a#0 plane_a zp[4]:5 57.714285714285715
byte gfx_mode::plane_a_offs
byte gfx_mode::plane_a_offs#0 reg byte x 40.4
dword gfx_mode::plane_b
dword gfx_mode::plane_b#0 plane_b zp[4]:5 57.714285714285715
byte gfx_mode::plane_b_offs
byte gfx_mode::plane_b_offs#0 reg byte x 40.4
byte keyboard_event_get()
byte keyboard_event_get::return
byte keyboard_event_get::return#1 reg byte a 2.0000002E7
byte keyboard_event_get::return#2 reg byte a 2752500.75
byte keyboard_event_get::return#3 reg byte a 20002.0
byte keyboard_event_get::return#4 reg byte a 2000002.0
byte keyboard_event_pressed(byte keyboard_event_pressed::keycode)
byte~ keyboard_event_pressed::$0 reg byte a 2.00000002E8
byte~ keyboard_event_pressed::$1 reg byte a 2.00000002E8
byte keyboard_event_pressed::keycode
byte keyboard_event_pressed::keycode#4 keycode zp[1]:21 6.6666667333333336E7
byte keyboard_event_pressed::return
byte keyboard_event_pressed::return#0 reg byte a 2.0000002E7
byte keyboard_event_pressed::return#1 reg byte a 2.0000002E7
byte keyboard_event_pressed::return#10 reg byte a 2.3333334166666668E7
byte keyboard_event_pressed::return#2 reg byte a 2.0000002E7
byte keyboard_event_pressed::return#3 reg byte a 2.0000002E7
byte keyboard_event_pressed::row_bits
byte keyboard_event_pressed::row_bits#0 row_bits zp[1]:38 1.00000001E8
void keyboard_event_scan()
byte~ keyboard_event_scan::$0 reg byte a 2.0000002E7
byte~ keyboard_event_scan::$15 reg byte a 2.000000000002E12
byte~ keyboard_event_scan::$16 reg byte a 2.000000000002E12
byte~ keyboard_event_scan::$23 reg byte a 2.000000000002E12
byte~ keyboard_event_scan::$3 reg byte a 2.0000002E7
byte~ keyboard_event_scan::$6 reg byte a 2.0000002E7
byte~ keyboard_event_scan::$9 reg byte a 2.0000002E7
byte keyboard_event_scan::col
byte keyboard_event_scan::col#1 reg byte x 1.5000000000015E12
byte keyboard_event_scan::col#2 reg byte x 2.857142857145714E11
byte keyboard_event_scan::event_type
byte keyboard_event_scan::event_type#0 reg byte a 2.000000000002E12
byte keyboard_event_scan::keycode
byte keyboard_event_scan::keycode#1 keycode zp[1]:9 2.00000000002E11
byte keyboard_event_scan::keycode#10 keycode zp[1]:9 3.15384615385E11
byte keyboard_event_scan::keycode#11 keycode zp[1]:9 5.00000000005E10
byte keyboard_event_scan::keycode#13 keycode zp[1]:9 1.00000000001E11
byte keyboard_event_scan::keycode#14 keycode zp[1]:9 5.2500000000075E11
byte keyboard_event_scan::row
byte keyboard_event_scan::row#1 row zp[1]:22 1.500000000015E11
byte keyboard_event_scan::row#2 row zp[1]:22 6.000000000024E10
byte keyboard_event_scan::row_scan
byte keyboard_event_scan::row_scan#0 row_scan zp[1]:37 1.2777777777805557E11
constant byte* keyboard_events[8]  = { fill( 8, 0) }
byte keyboard_events_size
byte keyboard_events_size#0 keyboard_events_size zp[1]:10 2.000000000002E12
byte keyboard_events_size#1 keyboard_events_size zp[1]:10 2.000000000002E12
byte keyboard_events_size#100 keyboard_events_size zp[1]:10 8.82441176488235E9
byte keyboard_events_size#106 keyboard_events_size zp[1]:10 1.0200000000012E12
byte keyboard_events_size#107 keyboard_events_size zp[1]:10 4.285857142914285E10
byte keyboard_events_size#19 keyboard_events_size zp[1]:10 8.100000000008999E11
byte keyboard_events_size#25 keyboard_events_size zp[1]:10 110549.53846153847
byte keyboard_events_size#28 keyboard_events_size zp[1]:10 2.871794871794872
byte keyboard_events_size#3 keyboard_events_size zp[1]:10 1.50000015E7
byte keyboard_events_size#49 keyboard_events_size zp[1]:10 65300.23529411765
byte keyboard_events_size#98 keyboard_events_size zp[1]:10 1.1010003E7
void keyboard_init()
constant byte* keyboard_matrix_col_bitmask[8]  = { 1, 2, 4, 8, $10, $20, $40, $80 }
byte keyboard_matrix_read(byte keyboard_matrix_read::rowid)
byte keyboard_matrix_read::return
byte keyboard_matrix_read::return#0 reg byte a 3.666666666673334E11
byte keyboard_matrix_read::return#2 reg byte a 2.00000000002E11
byte keyboard_matrix_read::row_pressed_bits
byte keyboard_matrix_read::rowid
byte keyboard_matrix_read::rowid#0 reg byte x 1.100000000002E12
constant byte* keyboard_matrix_row_bitmask[8]  = { $fe, $fd, $fb, $f7, $ef, $df, $bf, $7f }
byte keyboard_modifiers
byte keyboard_modifiers#19 reg byte x 4000000.4
byte keyboard_modifiers#2 reg byte x 2.0000002E7
byte keyboard_modifiers#20 reg byte x 8000000.8
byte keyboard_modifiers#21 reg byte x 8000000.8
byte keyboard_modifiers#22 reg byte x 2000000.3636363638
byte keyboard_modifiers#3 reg byte x 2.0000002E7
byte keyboard_modifiers#4 reg byte x 2.0000002E7
constant byte* keyboard_scan_values[8]  = { fill( 8, 0) }
void main()
void* memset(void* memset::str , byte memset::c , word memset::num)
byte memset::c
byte memset::c#5 reg byte x 125000.125
byte* memset::dst
byte* memset::dst#1 dst zp[2]:27 2000002.0
byte* memset::dst#2 dst zp[2]:27 1336668.3333333335
byte* memset::dst#4 dst zp[2]:27 20002.0
byte* memset::end
byte* memset::end#0 end zp[2]:13 168333.6666666667
word memset::num
word memset::num#3 num zp[2]:13 10001.0
void* memset::return
void* memset::str
void* memset::str#0 str zp[2]:27 2002.0
void* memset::str#4 str zp[2]:27 333.6666666666667
constant byte* preset_8bpppixelcell[]  = { $a, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, $b, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 }
constant byte* preset_chunky[]  = { 7, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 8, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 }
constant byte* preset_ecmchar[]  = { 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 5, 0, 6 }
constant byte* preset_hi_ecmchar[]  = { 5, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 4, 6, 8, 9, $c, $c }
constant byte* preset_hi_stdchar[]  = { 4, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 }
constant byte* preset_mcbm[]  = { 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0 }
constant byte* preset_sixsfred[]  = { 8, 1, 1, 1, 1, 1, 0, 0, 0, 0, 9, 0, 0, 0, 1, 0, 0, $a, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 }
constant byte* preset_sixsfred2[]  = { 9, 1, 1, 1, 0, 1, 0, 0, 0, 0, 9, 0, 0, 0, 1, 0, 0, $a, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 }
constant byte* preset_stdbm[]  = { 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
constant byte* preset_stdchar[]  = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
constant byte* preset_twoplane[]  = { 6, 1, 0, 1, 1, 1, 0, 0, 0, 0, 7, 0, 0, 0, 1, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 7, 0, $d, 4, 0, 0, 0, 0 }
void print_char(byte print_char::ch)
byte print_char::ch
byte print_char::ch#0 reg byte a 1.1000002E7
byte* print_char_cursor
byte* print_char_cursor#2 print_char_cursor zp[2]:13 100501.5
byte* print_char_cursor#29 print_char_cursor zp[2]:13 3666667.333333333
byte* print_char_cursor#43 print_char_cursor zp[2]:13 3683334.1666666665
byte* print_char_cursor#44 print_char_cursor zp[2]:13 1.4328571485714287E8
byte* print_char_cursor#72 print_char_cursor zp[2]:13 2002.0
byte* print_char_cursor#73 print_char_cursor zp[2]:13 200002.0
void print_cls()
constant const byte* print_hextab[]  = "0123456789abcdef"z
byte* print_line_cursor
byte* print_line_cursor#1 print_line_cursor zp[2]:15 91750.25
byte* print_line_cursor#2 print_line_cursor zp[2]:15 6.00040001E8
byte* print_line_cursor#22 print_line_cursor zp[2]:15 2.001000003E9
void print_ln()
byte* print_screen
byte* print_screen#0 print_screen zp[2]:15 200.2
void print_set_screen(byte* print_set_screen::screen)
byte* print_set_screen::screen
byte* print_set_screen::screen#2 screen zp[2]:15 1001.0
void print_str_at(byte* print_str_at::str , byte* print_str_at::at)
byte* print_str_at::at
byte* print_str_at::at#0 at zp[2]:15 1.000000001E9
byte* print_str_at::at#2 at zp[2]:15 1.000000001E9
byte* print_str_at::str
byte* print_str_at::str#0 str zp[2]:11 2.000000002E9
byte* print_str_at::str#1 str zp[2]:11 550001.0
byte* print_str_at::str#2 str zp[2]:11 1.00025000125E9
void print_str_lines(byte* print_str_lines::str)
byte print_str_lines::ch
byte print_str_lines::ch#0 reg byte a 666667.3333333334
byte* print_str_lines::str
byte* print_str_lines::str#0 str zp[2]:11 233333.66666666666
byte* print_str_lines::str#3 str zp[2]:11 150502.0
byte* print_str_lines::str#4 str zp[2]:11 1550002.0
byte* print_str_lines::str#5 str zp[2]:11 500.5
void render_preset_name(byte render_preset_name::idx)
byte render_preset_name::idx
byte render_preset_name::idx#0 reg byte a 202.0
byte render_preset_name::idx#1 reg byte a 20002.0
byte render_preset_name::idx#10 reg byte a 100919.36363636363
byte* render_preset_name::name
constant byte* render_preset_name::name#1 name_1 = "Standard Charset              "
constant byte* render_preset_name::name#10 name_10 = "Sixs Fred 2                   "
constant byte* render_preset_name::name#11 name_11 = "8bpp Pixel Cell               "
byte* render_preset_name::name#13 name zp[2]:11 100001.0
constant byte* render_preset_name::name#2 name_2 = "Extended Color Charset        "
constant byte* render_preset_name::name#3 name_3 = "Standard Bitmap               "
constant byte* render_preset_name::name#4 name_4 = "Multicolor Bitmap             "
constant byte* render_preset_name::name#5 name_5 = "Hicolor Charset               "
constant byte* render_preset_name::name#6 name_6 = "Hicolor Extended Color Charset"
constant byte* render_preset_name::name#7 name_7 = "Twoplane Bitmap               "
constant byte* render_preset_name::name#8 name_8 = "Chunky 8bpp                   "
constant byte* render_preset_name::name#9 name_9 = "Sixs Fred                     "
word sgn_u16(word sgn_u16::w)
byte~ sgn_u16::$0 reg byte a 200002.0
byte~ sgn_u16::$1 reg byte a 200002.0
word sgn_u16::return
word sgn_u16::return#0 return zp[2]:19 20002.0
word sgn_u16::return#1 return zp[2]:19 20002.0
word sgn_u16::return#4 return zp[2]:19 5000.5
word sgn_u16::w
word sgn_u16::w#0 w zp[2]:39 20002.0
word sgn_u16::w#1 w zp[2]:39 20002.0
word sgn_u16::w#2 w zp[2]:39 120003.0

reg byte x [ form_mode::i#2 form_mode::i#1 ]
reg byte x [ gfx_mode::dtv_control#12 gfx_mode::dtv_control#6 gfx_mode::dtv_control#13 gfx_mode::dtv_control#5 gfx_mode::dtv_control#11 gfx_mode::dtv_control#4 gfx_mode::dtv_control#10 gfx_mode::dtv_control#3 gfx_mode::dtv_control#15 gfx_mode::dtv_control#14 gfx_mode::dtv_control#2 ]
reg byte x [ gfx_mode::VICII_control#4 gfx_mode::VICII_control#2 gfx_mode::VICII_control#5 ]
reg byte a [ gfx_mode::VICII_control2#2 ]
reg byte x [ gfx_mode::cx#2 gfx_mode::cx#1 ]
reg byte x [ gfx_mode::j#2 gfx_mode::j#1 ]
reg byte x [ gfx_mode::i#2 gfx_mode::i#1 ]
reg byte x [ gfx_init_screen0::cx#2 gfx_init_screen0::cx#1 ]
reg byte x [ gfx_init_screen1::cx#2 gfx_init_screen1::cx#1 ]
reg byte x [ gfx_init_screen2::cx#2 gfx_init_screen2::cx#1 ]
zp[1]:2 [ gfx_init_screen3::cy#4 gfx_init_screen3::cy#1 gfx_init_screen2::cy#4 gfx_init_screen2::cy#1 gfx_mode::cy#4 gfx_mode::cy#1 form_mode::preset_current#6 form_mode::preset_current#0 form_mode::preset_current#1 ]
reg byte x [ gfx_init_screen3::cx#2 gfx_init_screen3::cx#1 ]
reg byte x [ gfx_init_screen4::cx#2 gfx_init_screen4::cx#1 ]
zp[1]:3 [ gfx_init_charset::c#4 gfx_init_charset::c#1 gfx_init_screen4::cy#4 gfx_init_screen4::cy#1 gfx_init_screen0::cy#4 gfx_init_screen0::cy#1 form_cursor_count#23 form_cursor_count#1 form_cursor_count#17 form_cursor_count#16 form_cursor_count#4 ]
reg byte x [ gfx_init_charset::l#2 gfx_init_charset::l#1 ]
zp[1]:4 [ gfx_init_plane_8bppchunky::y#6 gfx_init_plane_8bppchunky::y#1 gfx_init_VICII_bitmap::l#2 gfx_init_VICII_bitmap::l#1 gfx_init_screen1::cy#4 gfx_init_screen1::cy#1 form_field_idx#30 form_field_idx#1 form_field_idx#19 form_field_idx#33 form_field_idx#5 form_field_idx#4 ]
reg byte x [ gfx_init_plane_8bppchunky::gfxbCpuBank#4 gfx_init_plane_8bppchunky::gfxbCpuBank#7 gfx_init_plane_8bppchunky::gfxbCpuBank#8 gfx_init_plane_8bppchunky::gfxbCpuBank#2 ]
reg byte x [ gfx_init_plane_charset8::cp#2 gfx_init_plane_charset8::cp#1 ]
reg byte a [ gfx_init_plane_charset8::c#2 gfx_init_plane_charset8::c#3 ]
reg byte x [ gfx_init_plane_horisontal::ax#2 gfx_init_plane_horisontal::ax#1 ]
reg byte x [ gfx_init_plane_vertical::bx#2 gfx_init_plane_vertical::bx#1 ]
reg byte x [ gfx_init_plane_horisontal2::ax#2 gfx_init_plane_horisontal2::ax#1 ]
reg byte x [ form_set_screen::y#2 form_set_screen::y#1 ]
reg byte x [ form_render_values::idx#2 form_render_values::idx#1 ]
reg byte a [ render_preset_name::idx#10 render_preset_name::idx#0 render_preset_name::idx#1 ]
reg byte x [ form_control::return#2 ]
reg byte y [ apply_preset::i#2 apply_preset::i#1 ]
reg byte a [ get_plane::idx#10 get_plane::idx#1 get_plane::idx#0 ]
reg byte a [ get_VICII_screen::idx#2 get_VICII_screen::idx#0 get_VICII_screen::idx#1 ]
reg byte x [ keyboard_modifiers#22 keyboard_modifiers#21 keyboard_modifiers#20 keyboard_modifiers#19 keyboard_modifiers#2 keyboard_modifiers#3 keyboard_modifiers#4 ]
reg byte x [ keyboard_event_scan::col#2 keyboard_event_scan::col#1 ]
reg byte a [ keyboard_event_get::return#2 keyboard_event_get::return#1 ]
reg byte a [ bitmap_init::bits#3 bitmap_init::bits#4 bitmap_init::bits#1 ]
reg byte x [ bitmap_init::x#2 bitmap_init::x#1 ]
reg byte x [ bitmap_init::y#2 bitmap_init::y#1 ]
reg byte a [ dtvSetCpuBankSegment1::cpuBankIdx#13 dtvSetCpuBankSegment1::cpuBankIdx#1 dtvSetCpuBankSegment1::cpuBankIdx#11 ]
zp[4]:5 [ gfx_init_plane_fill::plane_addr#3 get_plane::return#14 get_plane::return#16 get_plane::return#17 gfx_mode::$20 gfx_mode::plane_a#0 gfx_mode::$34 gfx_mode::plane_b#0 ]
zp[1]:9 [ gfx_init_plane_fill::fill#6 keyboard_event_scan::keycode#10 keyboard_event_scan::keycode#11 keyboard_event_scan::keycode#13 keyboard_event_scan::keycode#14 keyboard_event_scan::keycode#1 gfx_init_plane_horisontal::ay#4 gfx_init_plane_horisontal::ay#1 gfx_init_plane_charset8::ch#8 gfx_init_plane_charset8::ch#1 ]
zp[1]:10 [ gfx_init_plane_fill::by#4 gfx_init_plane_fill::by#1 keyboard_events_size#19 keyboard_events_size#107 keyboard_events_size#98 keyboard_events_size#49 keyboard_events_size#28 keyboard_events_size#25 keyboard_events_size#100 keyboard_events_size#106 keyboard_events_size#0 keyboard_events_size#1 keyboard_events_size#3 gfx_init_plane_vertical::by#4 gfx_init_plane_vertical::by#1 gfx_init_plane_charset8::cr#6 gfx_init_plane_charset8::cr#1 ]
zp[2]:11 [ gfx_init_plane_fill::gfxb#2 gfx_init_plane_fill::gfxb#3 gfx_init_plane_fill::gfxb#1 gfx_init_plane_fill::gfxb#0 gfx_init_plane_fill::$5 gfx_init_plane_fill::$4 bitmap_line::e#3 bitmap_line::e#0 bitmap_line::e#6 bitmap_line::e#1 bitmap_line::e#2 render_preset_name::name#13 print_str_at::str#2 print_str_at::str#1 print_str_at::str#0 print_str_lines::str#4 print_str_lines::str#3 print_str_lines::str#5 print_str_lines::str#0 gfx_init_plane_horisontal::gfxa#3 gfx_init_plane_horisontal::gfxa#6 gfx_init_plane_horisontal::gfxa#7 gfx_init_plane_horisontal::gfxa#1 gfx_init_plane_horisontal::gfxa#2 gfx_init_plane_charset8::gfxa#2 gfx_init_plane_charset8::gfxa#5 gfx_init_plane_charset8::gfxa#6 gfx_init_plane_charset8::gfxa#1 gfx_init_plane_8bppchunky::x#2 gfx_init_plane_8bppchunky::x#1 gfx_init_charset::charset#2 gfx_init_charset::charset#3 gfx_init_charset::charset#1 gfx_init_screen3::ch#2 gfx_init_screen3::ch#3 gfx_init_screen3::ch#1 gfx_init_screen2::ch#2 gfx_init_screen2::ch#3 gfx_init_screen2::ch#1 gfx_init_screen0::ch#2 gfx_init_screen0::ch#3 gfx_init_screen0::ch#1 gfx_mode::VICII_colors#2 gfx_mode::VICII_colors#3 gfx_mode::VICII_colors#1 gfx_mode::VICII_colors#0 get_VICII_screen::return#11 get_VICII_screen::return#5 get_VICII_screen::return#10 gfx_mode::$82 gfx_mode::$47 gfx_mode::$48 ]
reg byte x [ gfx_init_plane_fill::bx#2 gfx_init_plane_fill::bx#1 ]
zp[2]:13 [ memset::num#3 memset::end#0 bitmap_line::x#7 bitmap_line::x#6 bitmap_line::x#15 bitmap_line::x#13 bitmap_line::x1#0 bitmap_line::x#12 bitmap_line::x#1 bitmap_plot::x#4 bitmap_plot::x#2 bitmap_plot::x#0 bitmap_plot::x#1 bitmap_plot::x#3 apply_preset::preset#15 print_char_cursor#43 print_char_cursor#2 print_char_cursor#72 print_char_cursor#73 print_char_cursor#44 print_char_cursor#29 gfx_init_plane_horisontal2::gfxa#2 gfx_init_plane_horisontal2::gfxa#3 gfx_init_plane_horisontal2::gfxa#1 gfx_init_plane_vertical::gfxb#2 gfx_init_plane_vertical::gfxb#3 gfx_init_plane_vertical::gfxb#1 gfx_init_plane_charset8::chargen#2 gfx_init_plane_charset8::chargen#3 gfx_init_plane_charset8::chargen#1 gfx_init_plane_8bppchunky::gfxb#4 gfx_init_plane_8bppchunky::gfxb#3 gfx_init_plane_8bppchunky::gfxb#5 gfx_init_plane_8bppchunky::gfxb#1 gfx_init_charset::chargen#2 gfx_init_charset::chargen#3 gfx_init_charset::chargen#1 gfx_init_screen4::ch#2 gfx_init_screen4::ch#3 gfx_init_screen4::ch#1 gfx_init_screen1::ch#2 gfx_init_screen1::ch#3 gfx_init_screen1::ch#1 gfx_mode::col#2 gfx_mode::col#3 gfx_mode::col#1 ]
reg byte x [ memset::c#5 ]
reg byte x [ form_field_ptr::field_idx#2 form_field_ptr::field_idx#1 form_field_ptr::field_idx#0 ]
zp[2]:15 [ print_str_at::at#2 print_str_at::at#0 bitmap_line::e1#3 bitmap_line::e1#6 bitmap_line::e1#0 bitmap_line::e1#2 bitmap_line::e1#1 bitmap_init::yoffs#2 bitmap_init::yoffs#4 bitmap_init::yoffs#1 get_VICII_charset::return#2 get_VICII_charset::return#4 gfx_mode::$83 gfx_mode::$50 form_set_screen::line#2 form_set_screen::line#1 print_set_screen::screen#2 print_line_cursor#22 print_line_cursor#1 print_screen#0 print_line_cursor#2 ]
reg byte a [ bitmap_plot::y#4 bitmap_plot::y#2 bitmap_plot::y#0 bitmap_plot::y#1 bitmap_plot::y#3 ]
reg byte a [ form_control::return#0 ]
reg byte a [ form_mode::$11 ]
reg byte a [ apply_preset::idx#0 ]
reg byte a [ gfx_mode::$18 ]
reg byte x [ gfx_mode::plane_a_offs#0 ]
zp[2]:17 [ gfx_mode::$22 abs_u16::return#4 abs_u16::return#2 abs_u16::w#2 abs_u16::w#0 abs_u16::w#1 abs_u16::return#0 abs_u16::return#1 bitmap_line::dy#0 ]
reg byte a [ gfx_mode::$23 ]
reg byte a [ gfx_mode::$25 ]
zp[2]:19 [ gfx_mode::$26 sgn_u16::return#4 sgn_u16::return#0 sgn_u16::return#1 bitmap_line::sy#0 ]
reg byte a [ gfx_mode::$27 ]
reg byte a [ gfx_mode::$28 ]
reg byte a [ gfx_mode::$29 ]
reg byte a [ gfx_mode::$30 ]
reg byte a [ gfx_mode::$31 ]
reg byte a [ gfx_mode::$32 ]
reg byte x [ gfx_mode::plane_b_offs#0 ]
reg byte a [ gfx_mode::$37 ]
reg byte a [ gfx_mode::$39 ]
reg byte a [ gfx_mode::$41 ]
reg byte a [ gfx_mode::$42 ]
reg byte a [ gfx_mode::$43 ]
reg byte a [ gfx_mode::$44 ]
reg byte a [ gfx_mode::$45 ]
reg byte a [ get_VICII_charset::idx#0 ]
reg byte a [ gfx_mode::$51 ]
zp[1]:21 [ gfx_mode::$52 keyboard_event_pressed::keycode#4 gfx_init_plane_horisontal2::ay#4 gfx_init_plane_horisontal2::ay#1 gfx_init_plane_charset8::bits#2 gfx_init_plane_charset8::bits#0 gfx_init_plane_charset8::bits#1 ]
reg byte a [ gfx_mode::$84 ]
reg byte a [ gfx_mode::$53 ]
reg byte a [ gfx_mode::$55 ]
reg byte a [ gfx_mode::$56 ]
reg byte a [ gfx_mode::$57 ]
reg byte a [ gfx_mode::$58 ]
reg byte a [ gfx_mode::$59 ]
reg byte a [ gfx_mode::$60 ]
reg byte a [ gfx_mode::$61 ]
reg byte a [ gfx_mode::$62 ]
reg byte a [ keyboard_event_get::return#3 ]
reg byte a [ gfx_mode::keyboard_event#0 ]
reg byte a [ gfx_init_screen0::$0 ]
reg byte a [ gfx_init_screen0::$2 ]
reg byte a [ gfx_init_screen0::$3 ]
reg byte a [ gfx_init_screen1::$0 ]
reg byte a [ gfx_init_screen1::$1 ]
reg byte a [ gfx_init_screen2::$0 ]
reg byte y [ gfx_init_screen2::col#0 ]
zp[1]:22 [ gfx_init_screen2::col2#0 gfx_init_screen0::$1 keyboard_event_scan::row#2 keyboard_event_scan::row#1 gfx_init_plane_charset8::col#2 gfx_init_plane_charset8::col#5 gfx_init_plane_charset8::col#6 gfx_init_plane_charset8::col#1 ]
reg byte a [ gfx_init_screen2::$3 ]
reg byte a [ gfx_init_screen2::$4 ]
reg byte a [ gfx_init_screen3::$0 ]
reg byte a [ gfx_init_screen3::$2 ]
reg byte a [ gfx_init_screen3::$3 ]
zp[2]:23 [ bitmap_line::x2#0 gfx_mode::$36 ]
zp[2]:25 [ bitmap_line::y2#0 gfx_mode::$38 ]
zp[2]:27 [ gfx_init_plane_8bppchunky::$5 gfx_mode::$40 memset::str#4 memset::str#0 memset::dst#2 memset::dst#4 memset::dst#1 bitmap_line::y#15 bitmap_line::y#7 bitmap_line::y#13 bitmap_line::y#4 bitmap_line::y1#0 bitmap_line::y#1 bitmap_line::y#2 ]
reg byte a [ gfx_init_plane_8bppchunky::c#0 ]
reg byte a [ gfx_init_plane_charset8::$2 ]
reg byte a [ gfx_init_plane_horisontal::$2 ]
reg byte a [ gfx_init_plane_horisontal2::$2 ]
reg byte a [ gfx_init_plane_horisontal2::row#0 ]
reg byte a [ print_str_lines::ch#0 ]
reg byte a [ print_char::ch#0 ]
reg byte a [ form_set_screen::$0 ]
reg byte a [ form_set_screen::$1 ]
reg byte a [ form_control::$12 ]
reg byte a [ keyboard_event_get::return#4 ]
reg byte a [ form_control::key_event#0 ]
reg byte a [ form_control::$14 ]
reg byte a [ form_control::$15 ]
reg byte a [ form_control::$22 ]
reg byte a [ form_control::$13 ]
reg byte x [ keyboard_matrix_read::rowid#0 ]
reg byte a [ keyboard_matrix_read::return#2 ]
reg byte a [ keyboard_event_pressed::return#0 ]
reg byte a [ keyboard_event_scan::$0 ]
reg byte a [ keyboard_event_pressed::return#1 ]
reg byte a [ keyboard_event_scan::$3 ]
reg byte a [ keyboard_event_pressed::return#2 ]
reg byte a [ keyboard_event_scan::$6 ]
reg byte a [ keyboard_event_pressed::return#3 ]
reg byte a [ keyboard_event_scan::$9 ]
reg byte a [ keyboard_event_scan::$15 ]
reg byte a [ keyboard_event_scan::$16 ]
reg byte a [ keyboard_event_scan::event_type#0 ]
reg byte a [ keyboard_event_scan::$23 ]
reg byte a [ bitmap_init::$4 ]
reg byte a [ bitmap_init::$5 ]
reg byte a [ bitmap_init::$6 ]
zp[2]:29 [ bitmap_line::dx#0 form_field_ptr::return#3 form_control::field#0 form_field_ptr::return#0 ]
zp[4]:31 [ gfx_init_plane_fill::$0 ]
zp[2]:35 [ gfx_init_plane_fill::$1 bitmap_line::sx#0 ]
reg byte a [ gfx_init_plane_fill::gfxbCpuBank#0 ]
reg byte y [ form_field_ptr::y#0 ]
zp[1]:37 [ form_field_ptr::x#0 bitmap_init::$7 keyboard_event_scan::row_scan#0 gfx_init_screen3::$1 ]
reg byte a [ keyboard_matrix_read::return#0 ]
reg byte a [ keyboard_event_pressed::$0 ]
zp[1]:38 [ keyboard_event_pressed::row_bits#0 ]
reg byte a [ keyboard_event_pressed::$1 ]
reg byte a [ keyboard_event_pressed::return#10 ]
reg byte a [ abs_u16::$0 ]
reg byte a [ abs_u16::$1 ]
reg byte a [ sgn_u16::$0 ]
reg byte a [ sgn_u16::$1 ]
zp[2]:39 [ bitmap_plot::plotter#0 bitmap_plot::plotter#1 form_field_ptr::line#0 gfx_mode::$24 sgn_u16::w#2 sgn_u16::w#0 sgn_u16::w#1 ]
zp[2]:41 [ bitmap_plot::$0 ]
reg byte x [ bitmap_plot::$1 ]
