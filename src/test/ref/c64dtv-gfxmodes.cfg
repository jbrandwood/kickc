
void main()
main: scope:[main]  from
  asm { sei  }
  [1] *PROCPORT_DDR = PROCPORT_DDR_MEMORY_MASK
  [2] *PROCPORT = PROCPORT_RAM_IO
  [3] *DTV_FEATURE = DTV_FEATURE_ENABLE
  to:main::@1
main::@1: scope:[main]  from main main::@2
  [4] bitmap_screen#14 = phi( main/(byte*) 0, main::@2/bitmap_screen#15 )
  [4] bitmap_gfx#14 = phi( main/(byte*) 0, main::@2/bitmap_gfx#15 )
  to:main::@2
main::@2: scope:[main]  from main::@1
  [5] phi()
  [6] call menu 
  to:main::@1

void menu()
menu: scope:[menu]  from main::@2
  [7] *DTV_GRAPHICS_VIC_BANK = 0
  [8] *DTV_COLOR_BANK_LO = <(word)DTV_COLOR_BANK_DEFAULT/$400
  [9] *DTV_COLOR_BANK_HI = 0
  [10] *DTV_CONTROL = 0
  [11] *((byte*)CIA2+OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR) = 3
  [12] *((byte*)CIA2) = 3^(byte)(word)menu::CHARSET/$4000
  [13] *VICII_CONTROL = VICII_DEN|VICII_RSEL|3
  [14] *VICII_CONTROL2 = VICII_CSEL
  [15] *VICII_MEMORY = (byte)(word)menu::CHARSET&$3fff/$400
  to:menu::@1
menu::@1: scope:[menu]  from menu menu::@1
  [16] menu::i#2 = phi( menu/0, menu::@1/menu::i#1 )
  [17] DTV_PALETTE[menu::i#2] = DTV_PALETTE_DEFAULT[menu::i#2]
  [18] menu::i#1 = ++ menu::i#2
  [19] if(menu::i#1!=$10) goto menu::@1
  to:menu::@2
menu::@2: scope:[menu]  from menu::@1 menu::@3
  [20] menu::c#2 = phi( menu::@1/COLS, menu::@3/menu::c#1 )
  [21] if(menu::c#2!=COLS+$3e8) goto menu::@3
  to:menu::@4
menu::@4: scope:[menu]  from menu::@2
  [22] *BG_COLOR = 0
  [23] *BORDER_COLOR = 0
  to:menu::@29
menu::@29: scope:[menu]  from menu::@4
  [24] phi()
  [25] call print_cls 
  to:menu::@30
menu::@30: scope:[menu]  from menu::@29
  [26] phi()
  [27] call print_str_lines 
  to:menu::@5
menu::@5: scope:[menu]  from menu::@30 menu::@42
  [28] phi()
  [29] call keyboard_key_pressed 
  [30] keyboard_key_pressed::return#2 = keyboard_key_pressed::return#0
  to:menu::@31
menu::@31: scope:[menu]  from menu::@5
  [31] menu::$5 = keyboard_key_pressed::return#2
  [32] if(menu::$5==0) goto menu::@6
  to:menu::@17
menu::@17: scope:[menu]  from menu::@31
  [33] phi()
  [34] call mode_stdchar 
  to:menu::@return
menu::@return: scope:[menu]  from menu::@17 menu::@18 menu::@19 menu::@20 menu::@21 menu::@22 menu::@23 menu::@24 menu::@25 menu::@26 menu::@27 menu::@28
  [35] bitmap_screen#15 = phi( menu::@17/bitmap_screen#14, menu::@18/bitmap_screen#14, menu::@19/bitmap_screen#14, menu::@20/mode_stdbitmap::SCREEN, menu::@21/bitmap_screen#14, menu::@22/bitmap_screen#14, menu::@23/bitmap_screen#14, menu::@24/bitmap_screen#14, menu::@25/bitmap_screen#14, menu::@26/bitmap_screen#14, menu::@27/bitmap_screen#14, menu::@28/bitmap_screen#14 )
  [35] bitmap_gfx#15 = phi( menu::@17/bitmap_gfx#14, menu::@18/bitmap_gfx#14, menu::@19/bitmap_gfx#14, menu::@20/mode_stdbitmap::BITMAP, menu::@21/bitmap_gfx#14, menu::@22/bitmap_gfx#14, menu::@23/bitmap_gfx#14, menu::@24/bitmap_gfx#14, menu::@25/bitmap_gfx#14, menu::@26/bitmap_gfx#14, menu::@27/bitmap_gfx#14, menu::@28/bitmap_gfx#14 )
  [36] return 
  to:@return
menu::@6: scope:[menu]  from menu::@31
  [37] phi()
  [38] call keyboard_key_pressed 
  [39] keyboard_key_pressed::return#24 = keyboard_key_pressed::return#0
  to:menu::@32
menu::@32: scope:[menu]  from menu::@6
  [40] menu::$9 = keyboard_key_pressed::return#24
  [41] if(menu::$9==0) goto menu::@7
  to:menu::@18
menu::@18: scope:[menu]  from menu::@32
  [42] phi()
  [43] call mode_ecmchar 
  to:menu::@return
menu::@7: scope:[menu]  from menu::@32
  [44] phi()
  [45] call keyboard_key_pressed 
  [46] keyboard_key_pressed::return#25 = keyboard_key_pressed::return#0
  to:menu::@33
menu::@33: scope:[menu]  from menu::@7
  [47] menu::$13 = keyboard_key_pressed::return#25
  [48] if(menu::$13==0) goto menu::@8
  to:menu::@19
menu::@19: scope:[menu]  from menu::@33
  [49] phi()
  [50] call mode_mcchar 
  to:menu::@return
menu::@8: scope:[menu]  from menu::@33
  [51] phi()
  [52] call keyboard_key_pressed 
  [53] keyboard_key_pressed::return#26 = keyboard_key_pressed::return#0
  to:menu::@34
menu::@34: scope:[menu]  from menu::@8
  [54] menu::$17 = keyboard_key_pressed::return#26
  [55] if(menu::$17==0) goto menu::@9
  to:menu::@20
menu::@20: scope:[menu]  from menu::@34
  [56] phi()
  [57] call mode_stdbitmap 
  to:menu::@return
menu::@9: scope:[menu]  from menu::@34
  [58] phi()
  [59] call keyboard_key_pressed 
  [60] keyboard_key_pressed::return#27 = keyboard_key_pressed::return#0
  to:menu::@35
menu::@35: scope:[menu]  from menu::@9
  [61] menu::$21 = keyboard_key_pressed::return#27
  [62] if(menu::$21==0) goto menu::@10
  to:menu::@21
menu::@21: scope:[menu]  from menu::@35
  [63] phi()
  [64] call mode_hicolstdchar 
  to:menu::@return
menu::@10: scope:[menu]  from menu::@35
  [65] phi()
  [66] call keyboard_key_pressed 
  [67] keyboard_key_pressed::return#28 = keyboard_key_pressed::return#0
  to:menu::@36
menu::@36: scope:[menu]  from menu::@10
  [68] menu::$25 = keyboard_key_pressed::return#28
  [69] if(menu::$25==0) goto menu::@11
  to:menu::@22
menu::@22: scope:[menu]  from menu::@36
  [70] phi()
  [71] call mode_hicolecmchar 
  to:menu::@return
menu::@11: scope:[menu]  from menu::@36
  [72] phi()
  [73] call keyboard_key_pressed 
  [74] keyboard_key_pressed::return#29 = keyboard_key_pressed::return#0
  to:menu::@37
menu::@37: scope:[menu]  from menu::@11
  [75] menu::$29 = keyboard_key_pressed::return#29
  [76] if(menu::$29==0) goto menu::@12
  to:menu::@23
menu::@23: scope:[menu]  from menu::@37
  [77] phi()
  [78] call mode_hicolmcchar 
  to:menu::@return
menu::@12: scope:[menu]  from menu::@37
  [79] phi()
  [80] call keyboard_key_pressed 
  [81] keyboard_key_pressed::return#30 = keyboard_key_pressed::return#0
  to:menu::@38
menu::@38: scope:[menu]  from menu::@12
  [82] menu::$33 = keyboard_key_pressed::return#30
  [83] if(menu::$33==0) goto menu::@13
  to:menu::@24
menu::@24: scope:[menu]  from menu::@38
  [84] phi()
  [85] call mode_sixsfred2 
  to:menu::@return
menu::@13: scope:[menu]  from menu::@38
  [86] phi()
  [87] call keyboard_key_pressed 
  [88] keyboard_key_pressed::return#10 = keyboard_key_pressed::return#0
  to:menu::@39
menu::@39: scope:[menu]  from menu::@13
  [89] menu::$37 = keyboard_key_pressed::return#10
  [90] if(menu::$37==0) goto menu::@14
  to:menu::@25
menu::@25: scope:[menu]  from menu::@39
  [91] phi()
  [92] call mode_twoplanebitmap 
  to:menu::@return
menu::@14: scope:[menu]  from menu::@39
  [93] phi()
  [94] call keyboard_key_pressed 
  [95] keyboard_key_pressed::return#11 = keyboard_key_pressed::return#0
  to:menu::@40
menu::@40: scope:[menu]  from menu::@14
  [96] menu::$41 = keyboard_key_pressed::return#11
  [97] if(menu::$41==0) goto menu::@15
  to:menu::@26
menu::@26: scope:[menu]  from menu::@40
  [98] phi()
  [99] call mode_sixsfred 
  to:menu::@return
menu::@15: scope:[menu]  from menu::@40
  [100] phi()
  [101] call keyboard_key_pressed 
  [102] keyboard_key_pressed::return#12 = keyboard_key_pressed::return#0
  to:menu::@41
menu::@41: scope:[menu]  from menu::@15
  [103] menu::$45 = keyboard_key_pressed::return#12
  [104] if(menu::$45==0) goto menu::@16
  to:menu::@27
menu::@27: scope:[menu]  from menu::@41
  [105] phi()
  [106] call mode_8bpppixelcell 
  to:menu::@return
menu::@16: scope:[menu]  from menu::@41
  [107] phi()
  [108] call keyboard_key_pressed 
  [109] keyboard_key_pressed::return#13 = keyboard_key_pressed::return#0
  to:menu::@42
menu::@42: scope:[menu]  from menu::@16
  [110] menu::$49 = keyboard_key_pressed::return#13
  [111] if(menu::$49==0) goto menu::@5
  to:menu::@28
menu::@28: scope:[menu]  from menu::@42
  [112] phi()
  [113] call mode_8bppchunkybmm 
  to:menu::@return
menu::@3: scope:[menu]  from menu::@2
  [114] *menu::c#2 = LIGHT_GREEN
  [115] menu::c#1 = ++ menu::c#2
  to:menu::@2

void print_cls()
print_cls: scope:[print_cls]  from menu::@29
  [116] phi()
  [117] call memset 
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls
  [118] return 
  to:@return

void print_str_lines(byte* print_str_lines::str)
print_str_lines: scope:[print_str_lines]  from menu::@30
  [119] phi()
  to:print_str_lines::@1
print_str_lines::@1: scope:[print_str_lines]  from print_str_lines print_str_lines::@6
  [120] print_line_cursor#1 = phi( print_str_lines/menu::SCREEN, print_str_lines::@6/print_line_cursor#2 )
  [120] print_char_cursor#2 = phi( print_str_lines/menu::SCREEN, print_str_lines::@6/print_char_cursor#103 )
  [120] print_str_lines::str#2 = phi( print_str_lines/MENU_TEXT, print_str_lines::@6/print_str_lines::str#0 )
  [121] if(0!=*print_str_lines::str#2) goto print_str_lines::@2
  to:print_str_lines::@return
print_str_lines::@return: scope:[print_str_lines]  from print_str_lines::@1
  [122] return 
  to:@return
print_str_lines::@2: scope:[print_str_lines]  from print_str_lines::@1 print_str_lines::@3
  [123] print_char_cursor#37 = phi( print_str_lines::@1/print_char_cursor#2, print_str_lines::@3/print_char_cursor#38 )
  [123] print_str_lines::str#3 = phi( print_str_lines::@1/print_str_lines::str#2, print_str_lines::@3/print_str_lines::str#0 )
  [124] print_str_lines::ch#0 = *print_str_lines::str#3
  [125] print_str_lines::str#0 = ++ print_str_lines::str#3
  [126] if(0==print_str_lines::ch#0) goto print_str_lines::@3
  to:print_str_lines::@4
print_str_lines::@4: scope:[print_str_lines]  from print_str_lines::@2
  [127] print_char::ch#0 = print_str_lines::ch#0
  [128] call print_char 
  to:print_str_lines::@3
print_str_lines::@3: scope:[print_str_lines]  from print_str_lines::@2 print_str_lines::@4
  [129] print_char_cursor#38 = phi( print_str_lines::@2/print_char_cursor#37, print_str_lines::@4/print_char_cursor#26 )
  [130] if(0!=print_str_lines::ch#0) goto print_str_lines::@2
  to:print_str_lines::@5
print_str_lines::@5: scope:[print_str_lines]  from print_str_lines::@3
  [131] phi()
  [132] call print_ln 
  to:print_str_lines::@6
print_str_lines::@6: scope:[print_str_lines]  from print_str_lines::@5
  [133] print_char_cursor#103 = print_line_cursor#2
  to:print_str_lines::@1

byte keyboard_key_pressed(byte keyboard_key_pressed::key)
keyboard_key_pressed: scope:[keyboard_key_pressed]  from menu::@10 menu::@11 menu::@12 menu::@13 menu::@14 menu::@15 menu::@16 menu::@5 menu::@6 menu::@7 menu::@8 menu::@9 mode_ctrl::@10 mode_ctrl::@3 mode_ctrl::@4 mode_ctrl::@5 mode_ctrl::@6 mode_ctrl::@7 mode_ctrl::@8 mode_ctrl::@9
  [134] keyboard_key_pressed::key#20 = phi( menu::@8/KEY_4, menu::@9/KEY_6, menu::@10/KEY_7, menu::@11/KEY_8, menu::@12/KEY_A, menu::@13/KEY_B, menu::@14/KEY_C, menu::@15/KEY_D, menu::@16/KEY_E, menu::@5/KEY_1, menu::@6/KEY_2, menu::@7/KEY_3, mode_ctrl::@10/KEY_0, mode_ctrl::@3/KEY_SPACE, mode_ctrl::@4/KEY_L, mode_ctrl::@5/KEY_H, mode_ctrl::@6/KEY_O, mode_ctrl::@7/KEY_B, mode_ctrl::@8/KEY_U, mode_ctrl::@9/KEY_C )
  [135] keyboard_key_pressed::colidx#0 = keyboard_key_pressed::key#20 & 7
  [136] keyboard_key_pressed::rowidx#0 = keyboard_key_pressed::key#20 >> 3
  [137] keyboard_matrix_read::rowid#0 = keyboard_key_pressed::rowidx#0
  [138] call keyboard_matrix_read 
  [139] keyboard_matrix_read::return#2 = keyboard_matrix_read::return#0
  to:keyboard_key_pressed::@1
keyboard_key_pressed::@1: scope:[keyboard_key_pressed]  from keyboard_key_pressed
  [140] keyboard_key_pressed::$2 = keyboard_matrix_read::return#2
  [141] keyboard_key_pressed::return#0 = keyboard_key_pressed::$2 & keyboard_matrix_col_bitmask[keyboard_key_pressed::colidx#0]
  to:keyboard_key_pressed::@return
keyboard_key_pressed::@return: scope:[keyboard_key_pressed]  from keyboard_key_pressed::@1
  [142] return 
  to:@return

void mode_stdchar()
mode_stdchar: scope:[mode_stdchar]  from menu::@17
  [143] *DTV_GRAPHICS_VIC_BANK = 0
  [144] *DTV_COLOR_BANK_LO = <(word)DTV_COLOR_BANK_DEFAULT/$400
  [145] *DTV_COLOR_BANK_HI = 0
  [146] *DTV_CONTROL = 0
  [147] *((byte*)CIA2+OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR) = 3
  [148] *((byte*)CIA2) = 3^(byte)(word)mode_stdchar::CHARSET/$4000
  [149] *VICII_CONTROL = VICII_DEN|VICII_RSEL|3
  [150] *VICII_CONTROL2 = VICII_CSEL
  [151] *VICII_MEMORY = (byte)(word)mode_stdchar::CHARSET&$3fff/$400
  to:mode_stdchar::@1
mode_stdchar::@1: scope:[mode_stdchar]  from mode_stdchar mode_stdchar::@1
  [152] mode_stdchar::i#2 = phi( mode_stdchar/0, mode_stdchar::@1/mode_stdchar::i#1 )
  [153] DTV_PALETTE[mode_stdchar::i#2] = DTV_PALETTE_DEFAULT[mode_stdchar::i#2]
  [154] mode_stdchar::i#1 = ++ mode_stdchar::i#2
  [155] if(mode_stdchar::i#1!=$10) goto mode_stdchar::@1
  to:mode_stdchar::@2
mode_stdchar::@2: scope:[mode_stdchar]  from mode_stdchar::@1
  [156] *BG_COLOR = 0
  [157] *BORDER_COLOR = 0
  to:mode_stdchar::@3
mode_stdchar::@3: scope:[mode_stdchar]  from mode_stdchar::@2 mode_stdchar::@5
  [158] mode_stdchar::ch#3 = phi( mode_stdchar::@2/mode_stdchar::SCREEN, mode_stdchar::@5/mode_stdchar::ch#1 )
  [158] mode_stdchar::col#3 = phi( mode_stdchar::@2/mode_stdchar::COLORS, mode_stdchar::@5/mode_stdchar::col#1 )
  [158] mode_stdchar::cy#4 = phi( mode_stdchar::@2/0, mode_stdchar::@5/mode_stdchar::cy#1 )
  to:mode_stdchar::@4
mode_stdchar::@4: scope:[mode_stdchar]  from mode_stdchar::@3 mode_stdchar::@4
  [159] mode_stdchar::ch#2 = phi( mode_stdchar::@3/mode_stdchar::ch#3, mode_stdchar::@4/mode_stdchar::ch#1 )
  [159] mode_stdchar::col#2 = phi( mode_stdchar::@3/mode_stdchar::col#3, mode_stdchar::@4/mode_stdchar::col#1 )
  [159] mode_stdchar::cx#2 = phi( mode_stdchar::@3/0, mode_stdchar::@4/mode_stdchar::cx#1 )
  [160] mode_stdchar::$2 = mode_stdchar::cx#2 + mode_stdchar::cy#4
  [161] mode_stdchar::$3 = mode_stdchar::$2 & $f
  [162] *mode_stdchar::col#2 = mode_stdchar::$3
  [163] mode_stdchar::col#1 = ++ mode_stdchar::col#2
  [164] mode_stdchar::$4 = mode_stdchar::cy#4 & $f
  [165] mode_stdchar::$5 = mode_stdchar::$4 << 4
  [166] mode_stdchar::$6 = mode_stdchar::cx#2 & $f
  [167] mode_stdchar::$7 = mode_stdchar::$5 | mode_stdchar::$6
  [168] *mode_stdchar::ch#2 = mode_stdchar::$7
  [169] mode_stdchar::ch#1 = ++ mode_stdchar::ch#2
  [170] mode_stdchar::cx#1 = ++ mode_stdchar::cx#2
  [171] if(mode_stdchar::cx#1!=$28) goto mode_stdchar::@4
  to:mode_stdchar::@5
mode_stdchar::@5: scope:[mode_stdchar]  from mode_stdchar::@4
  [172] mode_stdchar::cy#1 = ++ mode_stdchar::cy#4
  [173] if(mode_stdchar::cy#1!=$19) goto mode_stdchar::@3
  to:mode_stdchar::@6
mode_stdchar::@6: scope:[mode_stdchar]  from mode_stdchar::@5
  [174] phi()
  [175] call mode_ctrl 
  to:mode_stdchar::@return
mode_stdchar::@return: scope:[mode_stdchar]  from mode_stdchar::@6
  [176] return 
  to:@return

void mode_ecmchar()
mode_ecmchar: scope:[mode_ecmchar]  from menu::@18
  [177] *DTV_GRAPHICS_VIC_BANK = 0
  [178] *DTV_COLOR_BANK_LO = <(word)DTV_COLOR_BANK_DEFAULT/$400
  [179] *DTV_COLOR_BANK_HI = 0
  [180] *DTV_CONTROL = 0
  [181] *((byte*)CIA2+OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR) = 3
  [182] *((byte*)CIA2) = 3^(byte)(word)mode_ecmchar::CHARSET/$4000
  [183] *VICII_CONTROL = VICII_DEN|VICII_RSEL|VICII_ECM|3
  [184] *VICII_CONTROL2 = VICII_CSEL
  [185] *VICII_MEMORY = (byte)(word)mode_ecmchar::CHARSET&$3fff/$400
  to:mode_ecmchar::@1
mode_ecmchar::@1: scope:[mode_ecmchar]  from mode_ecmchar mode_ecmchar::@1
  [186] mode_ecmchar::i#2 = phi( mode_ecmchar/0, mode_ecmchar::@1/mode_ecmchar::i#1 )
  [187] DTV_PALETTE[mode_ecmchar::i#2] = DTV_PALETTE_DEFAULT[mode_ecmchar::i#2]
  [188] mode_ecmchar::i#1 = ++ mode_ecmchar::i#2
  [189] if(mode_ecmchar::i#1!=$10) goto mode_ecmchar::@1
  to:mode_ecmchar::@2
mode_ecmchar::@2: scope:[mode_ecmchar]  from mode_ecmchar::@1
  [190] *BORDER_COLOR = 0
  [191] *BG_COLOR = 0
  [192] *BG_COLOR1 = 2
  [193] *BG_COLOR2 = 5
  [194] *BG_COLOR3 = 6
  to:mode_ecmchar::@3
mode_ecmchar::@3: scope:[mode_ecmchar]  from mode_ecmchar::@2 mode_ecmchar::@5
  [195] mode_ecmchar::ch#3 = phi( mode_ecmchar::@2/mode_ecmchar::SCREEN, mode_ecmchar::@5/mode_ecmchar::ch#1 )
  [195] mode_ecmchar::col#3 = phi( mode_ecmchar::@2/mode_ecmchar::COLORS, mode_ecmchar::@5/mode_ecmchar::col#1 )
  [195] mode_ecmchar::cy#4 = phi( mode_ecmchar::@2/0, mode_ecmchar::@5/mode_ecmchar::cy#1 )
  to:mode_ecmchar::@4
mode_ecmchar::@4: scope:[mode_ecmchar]  from mode_ecmchar::@3 mode_ecmchar::@4
  [196] mode_ecmchar::ch#2 = phi( mode_ecmchar::@3/mode_ecmchar::ch#3, mode_ecmchar::@4/mode_ecmchar::ch#1 )
  [196] mode_ecmchar::col#2 = phi( mode_ecmchar::@3/mode_ecmchar::col#3, mode_ecmchar::@4/mode_ecmchar::col#1 )
  [196] mode_ecmchar::cx#2 = phi( mode_ecmchar::@3/0, mode_ecmchar::@4/mode_ecmchar::cx#1 )
  [197] mode_ecmchar::$2 = mode_ecmchar::cx#2 + mode_ecmchar::cy#4
  [198] mode_ecmchar::$3 = mode_ecmchar::$2 & $f
  [199] *mode_ecmchar::col#2 = mode_ecmchar::$3
  [200] mode_ecmchar::col#1 = ++ mode_ecmchar::col#2
  [201] mode_ecmchar::$4 = mode_ecmchar::cy#4 & $f
  [202] mode_ecmchar::$5 = mode_ecmchar::$4 << 4
  [203] mode_ecmchar::$6 = mode_ecmchar::cx#2 & $f
  [204] mode_ecmchar::$7 = mode_ecmchar::$5 | mode_ecmchar::$6
  [205] *mode_ecmchar::ch#2 = mode_ecmchar::$7
  [206] mode_ecmchar::ch#1 = ++ mode_ecmchar::ch#2
  [207] mode_ecmchar::cx#1 = ++ mode_ecmchar::cx#2
  [208] if(mode_ecmchar::cx#1!=$28) goto mode_ecmchar::@4
  to:mode_ecmchar::@5
mode_ecmchar::@5: scope:[mode_ecmchar]  from mode_ecmchar::@4
  [209] mode_ecmchar::cy#1 = ++ mode_ecmchar::cy#4
  [210] if(mode_ecmchar::cy#1!=$19) goto mode_ecmchar::@3
  to:mode_ecmchar::@6
mode_ecmchar::@6: scope:[mode_ecmchar]  from mode_ecmchar::@5
  [211] phi()
  [212] call mode_ctrl 
  to:mode_ecmchar::@return
mode_ecmchar::@return: scope:[mode_ecmchar]  from mode_ecmchar::@6
  [213] return 
  to:@return

void mode_mcchar()
mode_mcchar: scope:[mode_mcchar]  from menu::@19
  [214] *DTV_GRAPHICS_VIC_BANK = 0
  [215] *DTV_COLOR_BANK_LO = <(word)DTV_COLOR_BANK_DEFAULT/$400
  [216] *DTV_COLOR_BANK_HI = 0
  [217] *DTV_CONTROL = 0
  [218] *((byte*)CIA2+OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR) = 3
  [219] *((byte*)CIA2) = 3^(byte)(word)mode_mcchar::CHARSET/$4000
  [220] *VICII_CONTROL = VICII_DEN|VICII_RSEL|3
  [221] *VICII_CONTROL2 = VICII_CSEL|VICII_MCM
  [222] *VICII_MEMORY = (byte)(word)mode_mcchar::CHARSET&$3fff/$400
  to:mode_mcchar::@1
mode_mcchar::@1: scope:[mode_mcchar]  from mode_mcchar mode_mcchar::@1
  [223] mode_mcchar::i#2 = phi( mode_mcchar/0, mode_mcchar::@1/mode_mcchar::i#1 )
  [224] DTV_PALETTE[mode_mcchar::i#2] = DTV_PALETTE_DEFAULT[mode_mcchar::i#2]
  [225] mode_mcchar::i#1 = ++ mode_mcchar::i#2
  [226] if(mode_mcchar::i#1!=$10) goto mode_mcchar::@1
  to:mode_mcchar::@2
mode_mcchar::@2: scope:[mode_mcchar]  from mode_mcchar::@1
  [227] *BORDER_COLOR = 0
  [228] *BG_COLOR = BLACK
  [229] *BG_COLOR1 = GREEN
  [230] *BG_COLOR2 = BLUE
  to:mode_mcchar::@3
mode_mcchar::@3: scope:[mode_mcchar]  from mode_mcchar::@2 mode_mcchar::@5
  [231] mode_mcchar::ch#3 = phi( mode_mcchar::@2/mode_mcchar::SCREEN, mode_mcchar::@5/mode_mcchar::ch#1 )
  [231] mode_mcchar::col#3 = phi( mode_mcchar::@2/mode_mcchar::COLORS, mode_mcchar::@5/mode_mcchar::col#1 )
  [231] mode_mcchar::cy#4 = phi( mode_mcchar::@2/0, mode_mcchar::@5/mode_mcchar::cy#1 )
  to:mode_mcchar::@4
mode_mcchar::@4: scope:[mode_mcchar]  from mode_mcchar::@3 mode_mcchar::@4
  [232] mode_mcchar::ch#2 = phi( mode_mcchar::@3/mode_mcchar::ch#3, mode_mcchar::@4/mode_mcchar::ch#1 )
  [232] mode_mcchar::col#2 = phi( mode_mcchar::@3/mode_mcchar::col#3, mode_mcchar::@4/mode_mcchar::col#1 )
  [232] mode_mcchar::cx#2 = phi( mode_mcchar::@3/0, mode_mcchar::@4/mode_mcchar::cx#1 )
  [233] mode_mcchar::$2 = mode_mcchar::cx#2 + mode_mcchar::cy#4
  [234] mode_mcchar::$3 = mode_mcchar::$2 & $f
  [235] *mode_mcchar::col#2 = mode_mcchar::$3
  [236] mode_mcchar::col#1 = ++ mode_mcchar::col#2
  [237] mode_mcchar::$4 = mode_mcchar::cy#4 & $f
  [238] mode_mcchar::$5 = mode_mcchar::$4 << 4
  [239] mode_mcchar::$6 = mode_mcchar::cx#2 & $f
  [240] mode_mcchar::$7 = mode_mcchar::$5 | mode_mcchar::$6
  [241] *mode_mcchar::ch#2 = mode_mcchar::$7
  [242] mode_mcchar::ch#1 = ++ mode_mcchar::ch#2
  [243] mode_mcchar::cx#1 = ++ mode_mcchar::cx#2
  [244] if(mode_mcchar::cx#1!=$28) goto mode_mcchar::@4
  to:mode_mcchar::@5
mode_mcchar::@5: scope:[mode_mcchar]  from mode_mcchar::@4
  [245] mode_mcchar::cy#1 = ++ mode_mcchar::cy#4
  [246] if(mode_mcchar::cy#1!=$19) goto mode_mcchar::@3
  to:mode_mcchar::@6
mode_mcchar::@6: scope:[mode_mcchar]  from mode_mcchar::@5
  [247] phi()
  [248] call mode_ctrl 
  to:mode_mcchar::@return
mode_mcchar::@return: scope:[mode_mcchar]  from mode_mcchar::@6
  [249] return 
  to:@return

void mode_stdbitmap()
mode_stdbitmap: scope:[mode_stdbitmap]  from menu::@20
  [250] *DTV_GRAPHICS_VIC_BANK = 0
  [251] *DTV_CONTROL = 0
  [252] *((byte*)CIA2+OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR) = 3
  [253] *((byte*)CIA2) = 3^(byte)(word)mode_stdbitmap::BITMAP/$4000
  [254] *VICII_CONTROL = VICII_BMM|VICII_DEN|VICII_RSEL|3
  [255] *VICII_CONTROL2 = VICII_CSEL
  [256] *VICII_MEMORY = (byte)(word)mode_stdbitmap::BITMAP&$3fff/$400
  to:mode_stdbitmap::@1
mode_stdbitmap::@1: scope:[mode_stdbitmap]  from mode_stdbitmap mode_stdbitmap::@1
  [257] mode_stdbitmap::i#2 = phi( mode_stdbitmap/0, mode_stdbitmap::@1/mode_stdbitmap::i#1 )
  [258] DTV_PALETTE[mode_stdbitmap::i#2] = DTV_PALETTE_DEFAULT[mode_stdbitmap::i#2]
  [259] mode_stdbitmap::i#1 = ++ mode_stdbitmap::i#2
  [260] if(mode_stdbitmap::i#1!=$10) goto mode_stdbitmap::@1
  to:mode_stdbitmap::@2
mode_stdbitmap::@2: scope:[mode_stdbitmap]  from mode_stdbitmap::@1
  [261] *BG_COLOR = BLACK
  [262] *BORDER_COLOR = BLACK
  [263] call bitmap_init 
  to:mode_stdbitmap::@9
mode_stdbitmap::@9: scope:[mode_stdbitmap]  from mode_stdbitmap::@2
  [264] phi()
  [265] call bitmap_clear 
  to:mode_stdbitmap::@3
mode_stdbitmap::@3: scope:[mode_stdbitmap]  from mode_stdbitmap::@5 mode_stdbitmap::@9
  [266] mode_stdbitmap::ch#3 = phi( mode_stdbitmap::@9/mode_stdbitmap::SCREEN, mode_stdbitmap::@5/mode_stdbitmap::ch#1 )
  [266] mode_stdbitmap::cy#4 = phi( mode_stdbitmap::@9/0, mode_stdbitmap::@5/mode_stdbitmap::cy#1 )
  to:mode_stdbitmap::@4
mode_stdbitmap::@4: scope:[mode_stdbitmap]  from mode_stdbitmap::@3 mode_stdbitmap::@4
  [267] mode_stdbitmap::ch#2 = phi( mode_stdbitmap::@3/mode_stdbitmap::ch#3, mode_stdbitmap::@4/mode_stdbitmap::ch#1 )
  [267] mode_stdbitmap::cx#2 = phi( mode_stdbitmap::@3/0, mode_stdbitmap::@4/mode_stdbitmap::cx#1 )
  [268] mode_stdbitmap::$4 = mode_stdbitmap::cx#2 + mode_stdbitmap::cy#4
  [269] mode_stdbitmap::col#0 = mode_stdbitmap::$4 & $f
  [270] mode_stdbitmap::col2#0 = $f - mode_stdbitmap::col#0
  [271] mode_stdbitmap::$7 = mode_stdbitmap::col#0 << 4
  [272] mode_stdbitmap::$8 = mode_stdbitmap::$7 | mode_stdbitmap::col2#0
  [273] *mode_stdbitmap::ch#2 = mode_stdbitmap::$8
  [274] mode_stdbitmap::ch#1 = ++ mode_stdbitmap::ch#2
  [275] mode_stdbitmap::cx#1 = ++ mode_stdbitmap::cx#2
  [276] if(mode_stdbitmap::cx#1!=$28) goto mode_stdbitmap::@4
  to:mode_stdbitmap::@5
mode_stdbitmap::@5: scope:[mode_stdbitmap]  from mode_stdbitmap::@4
  [277] mode_stdbitmap::cy#1 = ++ mode_stdbitmap::cy#4
  [278] if(mode_stdbitmap::cy#1!=$19) goto mode_stdbitmap::@3
  to:mode_stdbitmap::@6
mode_stdbitmap::@6: scope:[mode_stdbitmap]  from mode_stdbitmap::@10 mode_stdbitmap::@5
  [279] mode_stdbitmap::l#2 = phi( mode_stdbitmap::@10/mode_stdbitmap::l#1, mode_stdbitmap::@5/0 )
  [280] if(mode_stdbitmap::l#2<mode_stdbitmap::lines_cnt) goto mode_stdbitmap::@7
  to:mode_stdbitmap::@8
mode_stdbitmap::@8: scope:[mode_stdbitmap]  from mode_stdbitmap::@6
  [281] phi()
  [282] call mode_ctrl 
  to:mode_stdbitmap::@return
mode_stdbitmap::@return: scope:[mode_stdbitmap]  from mode_stdbitmap::@8
  [283] return 
  to:@return
mode_stdbitmap::@7: scope:[mode_stdbitmap]  from mode_stdbitmap::@6
  [284] bitmap_line::x1#0 = mode_stdbitmap::lines_x[mode_stdbitmap::l#2]
  [285] bitmap_line::y1#0 = mode_stdbitmap::lines_y[mode_stdbitmap::l#2]
  [286] bitmap_line::x2#0 = (mode_stdbitmap::lines_x+1)[mode_stdbitmap::l#2]
  [287] bitmap_line::y2#0 = (mode_stdbitmap::lines_y+1)[mode_stdbitmap::l#2]
  [288] call bitmap_line 
  to:mode_stdbitmap::@10
mode_stdbitmap::@10: scope:[mode_stdbitmap]  from mode_stdbitmap::@7
  [289] mode_stdbitmap::l#1 = ++ mode_stdbitmap::l#2
  to:mode_stdbitmap::@6

void mode_hicolstdchar()
mode_hicolstdchar: scope:[mode_hicolstdchar]  from menu::@21
  [290] *DTV_GRAPHICS_VIC_BANK = 0
  [291] *DTV_COLOR_BANK_LO = <(word)mode_hicolstdchar::COLORS/$400
  [292] *DTV_COLOR_BANK_HI = 0
  [293] *DTV_CONTROL = DTV_HIGHCOLOR
  [294] *((byte*)CIA2+OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR) = 3
  [295] *((byte*)CIA2) = 3^(byte)(word)mode_hicolstdchar::CHARSET/$4000
  [296] *VICII_CONTROL = VICII_DEN|VICII_RSEL|3
  [297] *VICII_CONTROL2 = VICII_CSEL
  [298] *VICII_MEMORY = (byte)(word)mode_hicolstdchar::CHARSET&$3fff/$400
  to:mode_hicolstdchar::@1
mode_hicolstdchar::@1: scope:[mode_hicolstdchar]  from mode_hicolstdchar mode_hicolstdchar::@1
  [299] mode_hicolstdchar::i#2 = phi( mode_hicolstdchar/0, mode_hicolstdchar::@1/mode_hicolstdchar::i#1 )
  [300] DTV_PALETTE[mode_hicolstdchar::i#2] = mode_hicolstdchar::i#2
  [301] mode_hicolstdchar::i#1 = ++ mode_hicolstdchar::i#2
  [302] if(mode_hicolstdchar::i#1!=$10) goto mode_hicolstdchar::@1
  to:mode_hicolstdchar::@2
mode_hicolstdchar::@2: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@1
  [303] *BG_COLOR = 0
  [304] *BORDER_COLOR = 0
  to:mode_hicolstdchar::@3
mode_hicolstdchar::@3: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@2 mode_hicolstdchar::@5
  [305] mode_hicolstdchar::ch#3 = phi( mode_hicolstdchar::@2/mode_hicolstdchar::SCREEN, mode_hicolstdchar::@5/mode_hicolstdchar::ch#1 )
  [305] mode_hicolstdchar::col#3 = phi( mode_hicolstdchar::@2/mode_hicolstdchar::COLORS, mode_hicolstdchar::@5/mode_hicolstdchar::col#1 )
  [305] mode_hicolstdchar::cy#4 = phi( mode_hicolstdchar::@2/0, mode_hicolstdchar::@5/mode_hicolstdchar::cy#1 )
  to:mode_hicolstdchar::@4
mode_hicolstdchar::@4: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@3 mode_hicolstdchar::@4
  [306] mode_hicolstdchar::ch#2 = phi( mode_hicolstdchar::@3/mode_hicolstdchar::ch#3, mode_hicolstdchar::@4/mode_hicolstdchar::ch#1 )
  [306] mode_hicolstdchar::col#2 = phi( mode_hicolstdchar::@3/mode_hicolstdchar::col#3, mode_hicolstdchar::@4/mode_hicolstdchar::col#1 )
  [306] mode_hicolstdchar::cx#2 = phi( mode_hicolstdchar::@3/0, mode_hicolstdchar::@4/mode_hicolstdchar::cx#1 )
  [307] mode_hicolstdchar::$2 = mode_hicolstdchar::cy#4 & $f
  [308] mode_hicolstdchar::$3 = mode_hicolstdchar::$2 << 4
  [309] mode_hicolstdchar::$4 = mode_hicolstdchar::cx#2 & $f
  [310] mode_hicolstdchar::v#0 = mode_hicolstdchar::$3 | mode_hicolstdchar::$4
  [311] *mode_hicolstdchar::col#2 = mode_hicolstdchar::v#0
  [312] mode_hicolstdchar::col#1 = ++ mode_hicolstdchar::col#2
  [313] *mode_hicolstdchar::ch#2 = mode_hicolstdchar::v#0
  [314] mode_hicolstdchar::ch#1 = ++ mode_hicolstdchar::ch#2
  [315] mode_hicolstdchar::cx#1 = ++ mode_hicolstdchar::cx#2
  [316] if(mode_hicolstdchar::cx#1!=$28) goto mode_hicolstdchar::@4
  to:mode_hicolstdchar::@5
mode_hicolstdchar::@5: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@4
  [317] mode_hicolstdchar::cy#1 = ++ mode_hicolstdchar::cy#4
  [318] if(mode_hicolstdchar::cy#1!=$19) goto mode_hicolstdchar::@3
  to:mode_hicolstdchar::@6
mode_hicolstdchar::@6: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@5
  [319] phi()
  [320] call mode_ctrl 
  to:mode_hicolstdchar::@return
mode_hicolstdchar::@return: scope:[mode_hicolstdchar]  from mode_hicolstdchar::@6
  [321] return 
  to:@return

void mode_hicolecmchar()
mode_hicolecmchar: scope:[mode_hicolecmchar]  from menu::@22
  [322] *DTV_GRAPHICS_VIC_BANK = 0
  [323] *DTV_COLOR_BANK_LO = <(word)mode_hicolecmchar::COLORS/$400
  [324] *DTV_COLOR_BANK_HI = 0
  [325] *DTV_CONTROL = DTV_HIGHCOLOR
  [326] *((byte*)CIA2+OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR) = 3
  [327] *((byte*)CIA2) = 3^(byte)(word)mode_hicolecmchar::CHARSET/$4000
  [328] *VICII_CONTROL = VICII_DEN|VICII_RSEL|VICII_ECM|3
  [329] *VICII_CONTROL2 = VICII_CSEL
  [330] *VICII_MEMORY = (byte)(word)mode_hicolecmchar::CHARSET&$3fff/$400
  to:mode_hicolecmchar::@1
mode_hicolecmchar::@1: scope:[mode_hicolecmchar]  from mode_hicolecmchar mode_hicolecmchar::@1
  [331] mode_hicolecmchar::i#2 = phi( mode_hicolecmchar/0, mode_hicolecmchar::@1/mode_hicolecmchar::i#1 )
  [332] DTV_PALETTE[mode_hicolecmchar::i#2] = mode_hicolecmchar::i#2
  [333] mode_hicolecmchar::i#1 = ++ mode_hicolecmchar::i#2
  [334] if(mode_hicolecmchar::i#1!=$10) goto mode_hicolecmchar::@1
  to:mode_hicolecmchar::@2
mode_hicolecmchar::@2: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@1
  [335] *BORDER_COLOR = 0
  [336] *BG_COLOR = $50
  [337] *BG_COLOR1 = $54
  [338] *BG_COLOR2 = $58
  [339] *BG_COLOR3 = $5c
  to:mode_hicolecmchar::@3
mode_hicolecmchar::@3: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@2 mode_hicolecmchar::@5
  [340] mode_hicolecmchar::ch#3 = phi( mode_hicolecmchar::@2/mode_hicolecmchar::SCREEN, mode_hicolecmchar::@5/mode_hicolecmchar::ch#1 )
  [340] mode_hicolecmchar::col#3 = phi( mode_hicolecmchar::@2/mode_hicolecmchar::COLORS, mode_hicolecmchar::@5/mode_hicolecmchar::col#1 )
  [340] mode_hicolecmchar::cy#4 = phi( mode_hicolecmchar::@2/0, mode_hicolecmchar::@5/mode_hicolecmchar::cy#1 )
  to:mode_hicolecmchar::@4
mode_hicolecmchar::@4: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@3 mode_hicolecmchar::@4
  [341] mode_hicolecmchar::ch#2 = phi( mode_hicolecmchar::@3/mode_hicolecmchar::ch#3, mode_hicolecmchar::@4/mode_hicolecmchar::ch#1 )
  [341] mode_hicolecmchar::col#2 = phi( mode_hicolecmchar::@3/mode_hicolecmchar::col#3, mode_hicolecmchar::@4/mode_hicolecmchar::col#1 )
  [341] mode_hicolecmchar::cx#2 = phi( mode_hicolecmchar::@3/0, mode_hicolecmchar::@4/mode_hicolecmchar::cx#1 )
  [342] mode_hicolecmchar::$2 = mode_hicolecmchar::cy#4 & $f
  [343] mode_hicolecmchar::$3 = mode_hicolecmchar::$2 << 4
  [344] mode_hicolecmchar::$4 = mode_hicolecmchar::cx#2 & $f
  [345] mode_hicolecmchar::v#0 = mode_hicolecmchar::$3 | mode_hicolecmchar::$4
  [346] *mode_hicolecmchar::col#2 = mode_hicolecmchar::v#0
  [347] mode_hicolecmchar::col#1 = ++ mode_hicolecmchar::col#2
  [348] *mode_hicolecmchar::ch#2 = mode_hicolecmchar::v#0
  [349] mode_hicolecmchar::ch#1 = ++ mode_hicolecmchar::ch#2
  [350] mode_hicolecmchar::cx#1 = ++ mode_hicolecmchar::cx#2
  [351] if(mode_hicolecmchar::cx#1!=$28) goto mode_hicolecmchar::@4
  to:mode_hicolecmchar::@5
mode_hicolecmchar::@5: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@4
  [352] mode_hicolecmchar::cy#1 = ++ mode_hicolecmchar::cy#4
  [353] if(mode_hicolecmchar::cy#1!=$19) goto mode_hicolecmchar::@3
  to:mode_hicolecmchar::@6
mode_hicolecmchar::@6: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@5
  [354] phi()
  [355] call mode_ctrl 
  to:mode_hicolecmchar::@return
mode_hicolecmchar::@return: scope:[mode_hicolecmchar]  from mode_hicolecmchar::@6
  [356] return 
  to:@return

void mode_hicolmcchar()
mode_hicolmcchar: scope:[mode_hicolmcchar]  from menu::@23
  [357] *DTV_GRAPHICS_VIC_BANK = 0
  [358] *DTV_COLOR_BANK_LO = <(word)mode_hicolmcchar::COLORS/$400
  [359] *DTV_COLOR_BANK_HI = 0
  [360] *DTV_CONTROL = DTV_HIGHCOLOR
  [361] *((byte*)CIA2+OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR) = 3
  [362] *((byte*)CIA2) = 3^(byte)(word)mode_hicolmcchar::CHARSET/$4000
  [363] *VICII_CONTROL = VICII_DEN|VICII_RSEL|3
  [364] *VICII_CONTROL2 = VICII_CSEL|VICII_MCM
  [365] *VICII_MEMORY = (byte)(word)mode_hicolmcchar::CHARSET&$3fff/$400
  to:mode_hicolmcchar::@1
mode_hicolmcchar::@1: scope:[mode_hicolmcchar]  from mode_hicolmcchar mode_hicolmcchar::@1
  [366] mode_hicolmcchar::i#2 = phi( mode_hicolmcchar/0, mode_hicolmcchar::@1/mode_hicolmcchar::i#1 )
  [367] DTV_PALETTE[mode_hicolmcchar::i#2] = mode_hicolmcchar::i#2
  [368] mode_hicolmcchar::i#1 = ++ mode_hicolmcchar::i#2
  [369] if(mode_hicolmcchar::i#1!=$10) goto mode_hicolmcchar::@1
  to:mode_hicolmcchar::@2
mode_hicolmcchar::@2: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@1
  [370] *BORDER_COLOR = 0
  [371] *BG_COLOR = $50
  [372] *BG_COLOR1 = $54
  [373] *BG_COLOR2 = $58
  to:mode_hicolmcchar::@3
mode_hicolmcchar::@3: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@2 mode_hicolmcchar::@5
  [374] mode_hicolmcchar::ch#3 = phi( mode_hicolmcchar::@2/mode_hicolmcchar::SCREEN, mode_hicolmcchar::@5/mode_hicolmcchar::ch#1 )
  [374] mode_hicolmcchar::col#3 = phi( mode_hicolmcchar::@2/mode_hicolmcchar::COLORS, mode_hicolmcchar::@5/mode_hicolmcchar::col#1 )
  [374] mode_hicolmcchar::cy#4 = phi( mode_hicolmcchar::@2/0, mode_hicolmcchar::@5/mode_hicolmcchar::cy#1 )
  to:mode_hicolmcchar::@4
mode_hicolmcchar::@4: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@3 mode_hicolmcchar::@4
  [375] mode_hicolmcchar::ch#2 = phi( mode_hicolmcchar::@3/mode_hicolmcchar::ch#3, mode_hicolmcchar::@4/mode_hicolmcchar::ch#1 )
  [375] mode_hicolmcchar::col#2 = phi( mode_hicolmcchar::@3/mode_hicolmcchar::col#3, mode_hicolmcchar::@4/mode_hicolmcchar::col#1 )
  [375] mode_hicolmcchar::cx#2 = phi( mode_hicolmcchar::@3/0, mode_hicolmcchar::@4/mode_hicolmcchar::cx#1 )
  [376] mode_hicolmcchar::$2 = mode_hicolmcchar::cy#4 & $f
  [377] mode_hicolmcchar::$3 = mode_hicolmcchar::$2 << 4
  [378] mode_hicolmcchar::$4 = mode_hicolmcchar::cx#2 & $f
  [379] mode_hicolmcchar::v#0 = mode_hicolmcchar::$3 | mode_hicolmcchar::$4
  [380] *mode_hicolmcchar::col#2 = mode_hicolmcchar::v#0
  [381] mode_hicolmcchar::col#1 = ++ mode_hicolmcchar::col#2
  [382] *mode_hicolmcchar::ch#2 = mode_hicolmcchar::v#0
  [383] mode_hicolmcchar::ch#1 = ++ mode_hicolmcchar::ch#2
  [384] mode_hicolmcchar::cx#1 = ++ mode_hicolmcchar::cx#2
  [385] if(mode_hicolmcchar::cx#1!=$28) goto mode_hicolmcchar::@4
  to:mode_hicolmcchar::@5
mode_hicolmcchar::@5: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@4
  [386] mode_hicolmcchar::cy#1 = ++ mode_hicolmcchar::cy#4
  [387] if(mode_hicolmcchar::cy#1!=$19) goto mode_hicolmcchar::@3
  to:mode_hicolmcchar::@6
mode_hicolmcchar::@6: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@5
  [388] phi()
  [389] call mode_ctrl 
  to:mode_hicolmcchar::@return
mode_hicolmcchar::@return: scope:[mode_hicolmcchar]  from mode_hicolmcchar::@6
  [390] return 
  to:@return

void mode_sixsfred2()
mode_sixsfred2: scope:[mode_sixsfred2]  from menu::@24
  [391] *DTV_CONTROL = DTV_LINEAR
  [392] *VICII_CONTROL = VICII_ECM|VICII_BMM|VICII_DEN|VICII_RSEL|3
  [393] *VICII_CONTROL2 = VICII_MCM|VICII_CSEL
  [394] *DTV_PLANEA_START_LO = 0
  [395] *DTV_PLANEA_START_MI = >mode_sixsfred2::PLANEA
  [396] *DTV_PLANEA_START_HI = 0
  [397] *DTV_PLANEA_STEP = 1
  [398] *DTV_PLANEA_MODULO_LO = 0
  [399] *DTV_PLANEA_MODULO_HI = 0
  [400] *DTV_PLANEB_START_LO = 0
  [401] *DTV_PLANEB_START_MI = >mode_sixsfred2::PLANEB
  [402] *DTV_PLANEB_START_HI = 0
  [403] *DTV_PLANEB_STEP = 1
  [404] *DTV_PLANEB_MODULO_LO = 0
  [405] *DTV_PLANEB_MODULO_HI = 0
  [406] *DTV_COLOR_BANK_LO = <mode_sixsfred2::COLORS/$400
  [407] *DTV_COLOR_BANK_HI = 0
  to:mode_sixsfred2::@1
mode_sixsfred2::@1: scope:[mode_sixsfred2]  from mode_sixsfred2 mode_sixsfred2::@1
  [408] mode_sixsfred2::i#2 = phi( mode_sixsfred2/0, mode_sixsfred2::@1/mode_sixsfred2::i#1 )
  [409] DTV_PALETTE[mode_sixsfred2::i#2] = mode_sixsfred2::i#2
  [410] mode_sixsfred2::i#1 = ++ mode_sixsfred2::i#2
  [411] if(mode_sixsfred2::i#1!=$10) goto mode_sixsfred2::@1
  to:mode_sixsfred2::@2
mode_sixsfred2::@2: scope:[mode_sixsfred2]  from mode_sixsfred2::@1
  [412] *BORDER_COLOR = 0
  to:mode_sixsfred2::@3
mode_sixsfred2::@3: scope:[mode_sixsfred2]  from mode_sixsfred2::@2 mode_sixsfred2::@5
  [413] mode_sixsfred2::col#3 = phi( mode_sixsfred2::@2/mode_sixsfred2::COLORS, mode_sixsfred2::@5/mode_sixsfred2::col#1 )
  [413] mode_sixsfred2::cy#4 = phi( mode_sixsfred2::@2/0, mode_sixsfred2::@5/mode_sixsfred2::cy#1 )
  to:mode_sixsfred2::@4
mode_sixsfred2::@4: scope:[mode_sixsfred2]  from mode_sixsfred2::@3 mode_sixsfred2::@4
  [414] mode_sixsfred2::col#2 = phi( mode_sixsfred2::@3/mode_sixsfred2::col#3, mode_sixsfred2::@4/mode_sixsfred2::col#1 )
  [414] mode_sixsfred2::cx#2 = phi( mode_sixsfred2::@3/0, mode_sixsfred2::@4/mode_sixsfred2::cx#1 )
  [415] mode_sixsfred2::$2 = mode_sixsfred2::cx#2 & 3
  [416] mode_sixsfred2::$3 = mode_sixsfred2::$2 << 4
  [417] mode_sixsfred2::$4 = mode_sixsfred2::cy#4 & 3
  [418] mode_sixsfred2::$5 = mode_sixsfred2::$3 | mode_sixsfred2::$4
  [419] *mode_sixsfred2::col#2 = mode_sixsfred2::$5
  [420] mode_sixsfred2::col#1 = ++ mode_sixsfred2::col#2
  [421] mode_sixsfred2::cx#1 = ++ mode_sixsfred2::cx#2
  [422] if(mode_sixsfred2::cx#1!=$28) goto mode_sixsfred2::@4
  to:mode_sixsfred2::@5
mode_sixsfred2::@5: scope:[mode_sixsfred2]  from mode_sixsfred2::@4
  [423] mode_sixsfred2::cy#1 = ++ mode_sixsfred2::cy#4
  [424] if(mode_sixsfred2::cy#1!=$19) goto mode_sixsfred2::@3
  to:mode_sixsfred2::@6
mode_sixsfred2::@6: scope:[mode_sixsfred2]  from mode_sixsfred2::@5 mode_sixsfred2::@8
  [425] mode_sixsfred2::gfxa#3 = phi( mode_sixsfred2::@5/mode_sixsfred2::PLANEA, mode_sixsfred2::@8/mode_sixsfred2::gfxa#1 )
  [425] mode_sixsfred2::ay#4 = phi( mode_sixsfred2::@5/0, mode_sixsfred2::@8/mode_sixsfred2::ay#1 )
  to:mode_sixsfred2::@7
mode_sixsfred2::@7: scope:[mode_sixsfred2]  from mode_sixsfred2::@6 mode_sixsfred2::@7
  [426] mode_sixsfred2::ax#2 = phi( mode_sixsfred2::@6/0, mode_sixsfred2::@7/mode_sixsfred2::ax#1 )
  [426] mode_sixsfred2::gfxa#2 = phi( mode_sixsfred2::@6/mode_sixsfred2::gfxa#3, mode_sixsfred2::@7/mode_sixsfred2::gfxa#1 )
  [427] mode_sixsfred2::$8 = mode_sixsfred2::ay#4 >> 1
  [428] mode_sixsfred2::row#0 = mode_sixsfred2::$8 & 3
  [429] *mode_sixsfred2::gfxa#2 = mode_sixsfred2::row_bitmask[mode_sixsfred2::row#0]
  [430] mode_sixsfred2::gfxa#1 = ++ mode_sixsfred2::gfxa#2
  [431] mode_sixsfred2::ax#1 = ++ mode_sixsfred2::ax#2
  [432] if(mode_sixsfred2::ax#1!=$28) goto mode_sixsfred2::@7
  to:mode_sixsfred2::@8
mode_sixsfred2::@8: scope:[mode_sixsfred2]  from mode_sixsfred2::@7
  [433] mode_sixsfred2::ay#1 = ++ mode_sixsfred2::ay#4
  [434] if(mode_sixsfred2::ay#1!=$c8) goto mode_sixsfred2::@6
  to:mode_sixsfred2::@9
mode_sixsfred2::@9: scope:[mode_sixsfred2]  from mode_sixsfred2::@11 mode_sixsfred2::@8
  [435] mode_sixsfred2::by#4 = phi( mode_sixsfred2::@8/0, mode_sixsfred2::@11/mode_sixsfred2::by#1 )
  [435] mode_sixsfred2::gfxb#3 = phi( mode_sixsfred2::@8/mode_sixsfred2::PLANEB, mode_sixsfred2::@11/mode_sixsfred2::gfxb#1 )
  to:mode_sixsfred2::@10
mode_sixsfred2::@10: scope:[mode_sixsfred2]  from mode_sixsfred2::@10 mode_sixsfred2::@9
  [436] mode_sixsfred2::bx#2 = phi( mode_sixsfred2::@9/0, mode_sixsfred2::@10/mode_sixsfred2::bx#1 )
  [436] mode_sixsfred2::gfxb#2 = phi( mode_sixsfred2::@9/mode_sixsfred2::gfxb#3, mode_sixsfred2::@10/mode_sixsfred2::gfxb#1 )
  [437] *mode_sixsfred2::gfxb#2 = $1b
  [438] mode_sixsfred2::gfxb#1 = ++ mode_sixsfred2::gfxb#2
  [439] mode_sixsfred2::bx#1 = ++ mode_sixsfred2::bx#2
  [440] if(mode_sixsfred2::bx#1!=$28) goto mode_sixsfred2::@10
  to:mode_sixsfred2::@11
mode_sixsfred2::@11: scope:[mode_sixsfred2]  from mode_sixsfred2::@10
  [441] mode_sixsfred2::by#1 = ++ mode_sixsfred2::by#4
  [442] if(mode_sixsfred2::by#1!=$c8) goto mode_sixsfred2::@9
  to:mode_sixsfred2::@12
mode_sixsfred2::@12: scope:[mode_sixsfred2]  from mode_sixsfred2::@11
  [443] phi()
  [444] call mode_ctrl 
  to:mode_sixsfred2::@return
mode_sixsfred2::@return: scope:[mode_sixsfred2]  from mode_sixsfred2::@12
  [445] return 
  to:@return

void mode_twoplanebitmap()
mode_twoplanebitmap: scope:[mode_twoplanebitmap]  from menu::@25
  [446] *DTV_CONTROL = DTV_HIGHCOLOR|DTV_LINEAR
  [447] *VICII_CONTROL = VICII_ECM|VICII_BMM|VICII_DEN|VICII_RSEL|3
  [448] *VICII_CONTROL2 = VICII_CSEL
  [449] *DTV_PLANEA_START_LO = 0
  [450] *DTV_PLANEA_START_MI = >mode_twoplanebitmap::PLANEA
  [451] *DTV_PLANEA_START_HI = 0
  [452] *DTV_PLANEA_STEP = 1
  [453] *DTV_PLANEA_MODULO_LO = 0
  [454] *DTV_PLANEA_MODULO_HI = 0
  [455] *DTV_PLANEB_START_LO = 0
  [456] *DTV_PLANEB_START_MI = >mode_twoplanebitmap::PLANEB
  [457] *DTV_PLANEB_START_HI = 0
  [458] *DTV_PLANEB_STEP = 1
  [459] *DTV_PLANEB_MODULO_LO = 0
  [460] *DTV_PLANEB_MODULO_HI = 0
  [461] *DTV_COLOR_BANK_LO = <mode_twoplanebitmap::COLORS/$400
  [462] *DTV_COLOR_BANK_HI = 0
  to:mode_twoplanebitmap::@1
mode_twoplanebitmap::@1: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap mode_twoplanebitmap::@1
  [463] mode_twoplanebitmap::i#2 = phi( mode_twoplanebitmap/0, mode_twoplanebitmap::@1/mode_twoplanebitmap::i#1 )
  [464] DTV_PALETTE[mode_twoplanebitmap::i#2] = mode_twoplanebitmap::i#2
  [465] mode_twoplanebitmap::i#1 = ++ mode_twoplanebitmap::i#2
  [466] if(mode_twoplanebitmap::i#1!=$10) goto mode_twoplanebitmap::@1
  to:mode_twoplanebitmap::@2
mode_twoplanebitmap::@2: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@1
  [467] *BORDER_COLOR = 0
  [468] *BG_COLOR = $70
  [469] *BG_COLOR1 = $d4
  to:mode_twoplanebitmap::@3
mode_twoplanebitmap::@3: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@2 mode_twoplanebitmap::@5
  [470] mode_twoplanebitmap::col#3 = phi( mode_twoplanebitmap::@2/mode_twoplanebitmap::COLORS, mode_twoplanebitmap::@5/mode_twoplanebitmap::col#1 )
  [470] mode_twoplanebitmap::cy#4 = phi( mode_twoplanebitmap::@2/0, mode_twoplanebitmap::@5/mode_twoplanebitmap::cy#1 )
  to:mode_twoplanebitmap::@4
mode_twoplanebitmap::@4: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@3 mode_twoplanebitmap::@4
  [471] mode_twoplanebitmap::col#2 = phi( mode_twoplanebitmap::@3/mode_twoplanebitmap::col#3, mode_twoplanebitmap::@4/mode_twoplanebitmap::col#1 )
  [471] mode_twoplanebitmap::cx#2 = phi( mode_twoplanebitmap::@3/0, mode_twoplanebitmap::@4/mode_twoplanebitmap::cx#1 )
  [472] mode_twoplanebitmap::$2 = mode_twoplanebitmap::cy#4 & $f
  [473] mode_twoplanebitmap::$3 = mode_twoplanebitmap::$2 << 4
  [474] mode_twoplanebitmap::$4 = mode_twoplanebitmap::cx#2 & $f
  [475] mode_twoplanebitmap::$5 = mode_twoplanebitmap::$3 | mode_twoplanebitmap::$4
  [476] *mode_twoplanebitmap::col#2 = mode_twoplanebitmap::$5
  [477] mode_twoplanebitmap::col#1 = ++ mode_twoplanebitmap::col#2
  [478] mode_twoplanebitmap::cx#1 = ++ mode_twoplanebitmap::cx#2
  [479] if(mode_twoplanebitmap::cx#1!=$28) goto mode_twoplanebitmap::@4
  to:mode_twoplanebitmap::@5
mode_twoplanebitmap::@5: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@4
  [480] mode_twoplanebitmap::cy#1 = ++ mode_twoplanebitmap::cy#4
  [481] if(mode_twoplanebitmap::cy#1!=$19) goto mode_twoplanebitmap::@3
  to:mode_twoplanebitmap::@6
mode_twoplanebitmap::@6: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@11 mode_twoplanebitmap::@5
  [482] mode_twoplanebitmap::gfxa#7 = phi( mode_twoplanebitmap::@11/mode_twoplanebitmap::gfxa#6, mode_twoplanebitmap::@5/mode_twoplanebitmap::PLANEA )
  [482] mode_twoplanebitmap::ay#5 = phi( mode_twoplanebitmap::@11/mode_twoplanebitmap::ay#1, mode_twoplanebitmap::@5/0 )
  to:mode_twoplanebitmap::@7
mode_twoplanebitmap::@7: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@6 mode_twoplanebitmap::@9
  [483] mode_twoplanebitmap::ax#2 = phi( mode_twoplanebitmap::@9/mode_twoplanebitmap::ax#1, mode_twoplanebitmap::@6/0 )
  [483] mode_twoplanebitmap::gfxa#3 = phi( mode_twoplanebitmap::@9/mode_twoplanebitmap::gfxa#6, mode_twoplanebitmap::@6/mode_twoplanebitmap::gfxa#7 )
  [484] mode_twoplanebitmap::$8 = mode_twoplanebitmap::ay#5 & 4
  [485] if(mode_twoplanebitmap::$8==0) goto mode_twoplanebitmap::@8
  to:mode_twoplanebitmap::@10
mode_twoplanebitmap::@10: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@7
  [486] *mode_twoplanebitmap::gfxa#3 = $ff
  [487] mode_twoplanebitmap::gfxa#2 = ++ mode_twoplanebitmap::gfxa#3
  to:mode_twoplanebitmap::@9
mode_twoplanebitmap::@9: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@10 mode_twoplanebitmap::@8
  [488] mode_twoplanebitmap::gfxa#6 = phi( mode_twoplanebitmap::@10/mode_twoplanebitmap::gfxa#2, mode_twoplanebitmap::@8/mode_twoplanebitmap::gfxa#1 )
  [489] mode_twoplanebitmap::ax#1 = ++ mode_twoplanebitmap::ax#2
  [490] if(mode_twoplanebitmap::ax#1!=$28) goto mode_twoplanebitmap::@7
  to:mode_twoplanebitmap::@11
mode_twoplanebitmap::@11: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@9
  [491] mode_twoplanebitmap::ay#1 = ++ mode_twoplanebitmap::ay#5
  [492] if(mode_twoplanebitmap::ay#1!=$c8) goto mode_twoplanebitmap::@6
  to:mode_twoplanebitmap::@12
mode_twoplanebitmap::@12: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@11 mode_twoplanebitmap::@14
  [493] mode_twoplanebitmap::by#4 = phi( mode_twoplanebitmap::@11/0, mode_twoplanebitmap::@14/mode_twoplanebitmap::by#1 )
  [493] mode_twoplanebitmap::gfxb#3 = phi( mode_twoplanebitmap::@11/mode_twoplanebitmap::PLANEB, mode_twoplanebitmap::@14/mode_twoplanebitmap::gfxb#1 )
  to:mode_twoplanebitmap::@13
mode_twoplanebitmap::@13: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@12 mode_twoplanebitmap::@13
  [494] mode_twoplanebitmap::bx#2 = phi( mode_twoplanebitmap::@12/0, mode_twoplanebitmap::@13/mode_twoplanebitmap::bx#1 )
  [494] mode_twoplanebitmap::gfxb#2 = phi( mode_twoplanebitmap::@12/mode_twoplanebitmap::gfxb#3, mode_twoplanebitmap::@13/mode_twoplanebitmap::gfxb#1 )
  [495] *mode_twoplanebitmap::gfxb#2 = $f
  [496] mode_twoplanebitmap::gfxb#1 = ++ mode_twoplanebitmap::gfxb#2
  [497] mode_twoplanebitmap::bx#1 = ++ mode_twoplanebitmap::bx#2
  [498] if(mode_twoplanebitmap::bx#1!=$28) goto mode_twoplanebitmap::@13
  to:mode_twoplanebitmap::@14
mode_twoplanebitmap::@14: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@13
  [499] mode_twoplanebitmap::by#1 = ++ mode_twoplanebitmap::by#4
  [500] if(mode_twoplanebitmap::by#1!=$c8) goto mode_twoplanebitmap::@12
  to:mode_twoplanebitmap::@15
mode_twoplanebitmap::@15: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@14
  [501] phi()
  [502] call mode_ctrl 
  to:mode_twoplanebitmap::@return
mode_twoplanebitmap::@return: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@15
  [503] return 
  to:@return
mode_twoplanebitmap::@8: scope:[mode_twoplanebitmap]  from mode_twoplanebitmap::@7
  [504] *mode_twoplanebitmap::gfxa#3 = 0
  [505] mode_twoplanebitmap::gfxa#1 = ++ mode_twoplanebitmap::gfxa#3
  to:mode_twoplanebitmap::@9

void mode_sixsfred()
mode_sixsfred: scope:[mode_sixsfred]  from menu::@26
  [506] *DTV_CONTROL = DTV_HIGHCOLOR|DTV_LINEAR
  [507] *VICII_CONTROL = VICII_ECM|VICII_BMM|VICII_DEN|VICII_RSEL|3
  [508] *VICII_CONTROL2 = VICII_MCM|VICII_CSEL
  [509] *DTV_PLANEA_START_LO = 0
  [510] *DTV_PLANEA_START_MI = >mode_sixsfred::PLANEA
  [511] *DTV_PLANEA_START_HI = 0
  [512] *DTV_PLANEA_STEP = 1
  [513] *DTV_PLANEA_MODULO_LO = 0
  [514] *DTV_PLANEA_MODULO_HI = 0
  [515] *DTV_PLANEB_START_LO = 0
  [516] *DTV_PLANEB_START_MI = >mode_sixsfred::PLANEB
  [517] *DTV_PLANEB_START_HI = 0
  [518] *DTV_PLANEB_STEP = 1
  [519] *DTV_PLANEB_MODULO_LO = 0
  [520] *DTV_PLANEB_MODULO_HI = 0
  [521] *DTV_COLOR_BANK_LO = <mode_sixsfred::COLORS/$400
  [522] *DTV_COLOR_BANK_HI = 0
  to:mode_sixsfred::@1
mode_sixsfred::@1: scope:[mode_sixsfred]  from mode_sixsfred mode_sixsfred::@1
  [523] mode_sixsfred::i#2 = phi( mode_sixsfred/0, mode_sixsfred::@1/mode_sixsfred::i#1 )
  [524] DTV_PALETTE[mode_sixsfred::i#2] = mode_sixsfred::i#2
  [525] mode_sixsfred::i#1 = ++ mode_sixsfred::i#2
  [526] if(mode_sixsfred::i#1!=$10) goto mode_sixsfred::@1
  to:mode_sixsfred::@2
mode_sixsfred::@2: scope:[mode_sixsfred]  from mode_sixsfred::@1
  [527] *BORDER_COLOR = 0
  to:mode_sixsfred::@3
mode_sixsfred::@3: scope:[mode_sixsfred]  from mode_sixsfred::@2 mode_sixsfred::@5
  [528] mode_sixsfred::col#3 = phi( mode_sixsfred::@2/mode_sixsfred::COLORS, mode_sixsfred::@5/mode_sixsfred::col#1 )
  [528] mode_sixsfred::cy#4 = phi( mode_sixsfred::@2/0, mode_sixsfred::@5/mode_sixsfred::cy#1 )
  to:mode_sixsfred::@4
mode_sixsfred::@4: scope:[mode_sixsfred]  from mode_sixsfred::@3 mode_sixsfred::@4
  [529] mode_sixsfred::col#2 = phi( mode_sixsfred::@3/mode_sixsfred::col#3, mode_sixsfred::@4/mode_sixsfred::col#1 )
  [529] mode_sixsfred::cx#2 = phi( mode_sixsfred::@3/0, mode_sixsfred::@4/mode_sixsfred::cx#1 )
  [530] mode_sixsfred::$2 = mode_sixsfred::cx#2 + mode_sixsfred::cy#4
  [531] mode_sixsfred::$3 = mode_sixsfred::$2 & $f
  [532] *mode_sixsfred::col#2 = mode_sixsfred::$3
  [533] mode_sixsfred::col#1 = ++ mode_sixsfred::col#2
  [534] mode_sixsfred::cx#1 = ++ mode_sixsfred::cx#2
  [535] if(mode_sixsfred::cx#1!=$28) goto mode_sixsfred::@4
  to:mode_sixsfred::@5
mode_sixsfred::@5: scope:[mode_sixsfred]  from mode_sixsfred::@4
  [536] mode_sixsfred::cy#1 = ++ mode_sixsfred::cy#4
  [537] if(mode_sixsfred::cy#1!=$19) goto mode_sixsfred::@3
  to:mode_sixsfred::@6
mode_sixsfred::@6: scope:[mode_sixsfred]  from mode_sixsfred::@5 mode_sixsfred::@8
  [538] mode_sixsfred::gfxa#3 = phi( mode_sixsfred::@5/mode_sixsfred::PLANEA, mode_sixsfred::@8/mode_sixsfred::gfxa#1 )
  [538] mode_sixsfred::ay#4 = phi( mode_sixsfred::@5/0, mode_sixsfred::@8/mode_sixsfred::ay#1 )
  to:mode_sixsfred::@7
mode_sixsfred::@7: scope:[mode_sixsfred]  from mode_sixsfred::@6 mode_sixsfred::@7
  [539] mode_sixsfred::ax#2 = phi( mode_sixsfred::@6/0, mode_sixsfred::@7/mode_sixsfred::ax#1 )
  [539] mode_sixsfred::gfxa#2 = phi( mode_sixsfred::@6/mode_sixsfred::gfxa#3, mode_sixsfred::@7/mode_sixsfred::gfxa#1 )
  [540] mode_sixsfred::$6 = mode_sixsfred::ay#4 >> 1
  [541] mode_sixsfred::row#0 = mode_sixsfred::$6 & 3
  [542] *mode_sixsfred::gfxa#2 = mode_sixsfred::row_bitmask[mode_sixsfred::row#0]
  [543] mode_sixsfred::gfxa#1 = ++ mode_sixsfred::gfxa#2
  [544] mode_sixsfred::ax#1 = ++ mode_sixsfred::ax#2
  [545] if(mode_sixsfred::ax#1!=$28) goto mode_sixsfred::@7
  to:mode_sixsfred::@8
mode_sixsfred::@8: scope:[mode_sixsfred]  from mode_sixsfred::@7
  [546] mode_sixsfred::ay#1 = ++ mode_sixsfred::ay#4
  [547] if(mode_sixsfred::ay#1!=$c8) goto mode_sixsfred::@6
  to:mode_sixsfred::@9
mode_sixsfred::@9: scope:[mode_sixsfred]  from mode_sixsfred::@11 mode_sixsfred::@8
  [548] mode_sixsfred::by#4 = phi( mode_sixsfred::@8/0, mode_sixsfred::@11/mode_sixsfred::by#1 )
  [548] mode_sixsfred::gfxb#3 = phi( mode_sixsfred::@8/mode_sixsfred::PLANEB, mode_sixsfred::@11/mode_sixsfred::gfxb#1 )
  to:mode_sixsfred::@10
mode_sixsfred::@10: scope:[mode_sixsfred]  from mode_sixsfred::@10 mode_sixsfred::@9
  [549] mode_sixsfred::bx#2 = phi( mode_sixsfred::@9/0, mode_sixsfred::@10/mode_sixsfred::bx#1 )
  [549] mode_sixsfred::gfxb#2 = phi( mode_sixsfred::@9/mode_sixsfred::gfxb#3, mode_sixsfred::@10/mode_sixsfred::gfxb#1 )
  [550] *mode_sixsfred::gfxb#2 = $1b
  [551] mode_sixsfred::gfxb#1 = ++ mode_sixsfred::gfxb#2
  [552] mode_sixsfred::bx#1 = ++ mode_sixsfred::bx#2
  [553] if(mode_sixsfred::bx#1!=$28) goto mode_sixsfred::@10
  to:mode_sixsfred::@11
mode_sixsfred::@11: scope:[mode_sixsfred]  from mode_sixsfred::@10
  [554] mode_sixsfred::by#1 = ++ mode_sixsfred::by#4
  [555] if(mode_sixsfred::by#1!=$c8) goto mode_sixsfred::@9
  to:mode_sixsfred::@12
mode_sixsfred::@12: scope:[mode_sixsfred]  from mode_sixsfred::@11
  [556] phi()
  [557] call mode_ctrl 
  to:mode_sixsfred::@return
mode_sixsfred::@return: scope:[mode_sixsfred]  from mode_sixsfred::@12
  [558] return 
  to:@return

void mode_8bpppixelcell()
mode_8bpppixelcell: scope:[mode_8bpppixelcell]  from menu::@27
  [559] *DTV_CONTROL = DTV_HIGHCOLOR|DTV_LINEAR|DTV_CHUNKY
  [560] *VICII_CONTROL = VICII_ECM|VICII_DEN|VICII_RSEL|3
  [561] *VICII_CONTROL2 = VICII_MCM|VICII_CSEL
  [562] *DTV_PLANEA_START_LO = 0
  [563] *DTV_PLANEA_START_MI = >mode_8bpppixelcell::PLANEA
  [564] *DTV_PLANEA_START_HI = 0
  [565] *DTV_PLANEA_STEP = 1
  [566] *DTV_PLANEA_MODULO_LO = 0
  [567] *DTV_PLANEA_MODULO_HI = 0
  [568] *DTV_PLANEB_START_LO = 0
  [569] *DTV_PLANEB_START_MI = >mode_8bpppixelcell::PLANEB
  [570] *DTV_PLANEB_START_HI = 0
  [571] *DTV_PLANEB_STEP = 0
  [572] *DTV_PLANEB_MODULO_LO = 0
  [573] *DTV_PLANEB_MODULO_HI = 0
  [574] *BORDER_COLOR = 0
  to:mode_8bpppixelcell::@1
mode_8bpppixelcell::@1: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell mode_8bpppixelcell::@1
  [575] mode_8bpppixelcell::i#2 = phi( mode_8bpppixelcell/0, mode_8bpppixelcell::@1/mode_8bpppixelcell::i#1 )
  [576] DTV_PALETTE[mode_8bpppixelcell::i#2] = mode_8bpppixelcell::i#2
  [577] mode_8bpppixelcell::i#1 = ++ mode_8bpppixelcell::i#2
  [578] if(mode_8bpppixelcell::i#1!=$10) goto mode_8bpppixelcell::@1
  to:mode_8bpppixelcell::@2
mode_8bpppixelcell::@2: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@1 mode_8bpppixelcell::@4
  [579] mode_8bpppixelcell::gfxa#3 = phi( mode_8bpppixelcell::@1/mode_8bpppixelcell::PLANEA, mode_8bpppixelcell::@4/mode_8bpppixelcell::gfxa#1 )
  [579] mode_8bpppixelcell::ay#4 = phi( mode_8bpppixelcell::@1/0, mode_8bpppixelcell::@4/mode_8bpppixelcell::ay#1 )
  to:mode_8bpppixelcell::@3
mode_8bpppixelcell::@3: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@2 mode_8bpppixelcell::@3
  [580] mode_8bpppixelcell::gfxa#2 = phi( mode_8bpppixelcell::@2/mode_8bpppixelcell::gfxa#3, mode_8bpppixelcell::@3/mode_8bpppixelcell::gfxa#1 )
  [580] mode_8bpppixelcell::ax#2 = phi( mode_8bpppixelcell::@2/0, mode_8bpppixelcell::@3/mode_8bpppixelcell::ax#1 )
  [581] mode_8bpppixelcell::$2 = mode_8bpppixelcell::ay#4 & $f
  [582] mode_8bpppixelcell::$3 = mode_8bpppixelcell::$2 << 4
  [583] mode_8bpppixelcell::$4 = mode_8bpppixelcell::ax#2 & $f
  [584] mode_8bpppixelcell::$5 = mode_8bpppixelcell::$3 | mode_8bpppixelcell::$4
  [585] *mode_8bpppixelcell::gfxa#2 = mode_8bpppixelcell::$5
  [586] mode_8bpppixelcell::gfxa#1 = ++ mode_8bpppixelcell::gfxa#2
  [587] mode_8bpppixelcell::ax#1 = ++ mode_8bpppixelcell::ax#2
  [588] if(mode_8bpppixelcell::ax#1!=$28) goto mode_8bpppixelcell::@3
  to:mode_8bpppixelcell::@4
mode_8bpppixelcell::@4: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@3
  [589] mode_8bpppixelcell::ay#1 = ++ mode_8bpppixelcell::ay#4
  [590] if(mode_8bpppixelcell::ay#1!=$19) goto mode_8bpppixelcell::@2
  to:mode_8bpppixelcell::@5
mode_8bpppixelcell::@5: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@4
  [591] *PROCPORT = PROCPORT_RAM_CHARROM
  to:mode_8bpppixelcell::@6
mode_8bpppixelcell::@6: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@12 mode_8bpppixelcell::@5
  [592] mode_8bpppixelcell::ch#8 = phi( mode_8bpppixelcell::@12/mode_8bpppixelcell::ch#1, mode_8bpppixelcell::@5/0 )
  [592] mode_8bpppixelcell::col#7 = phi( mode_8bpppixelcell::@12/mode_8bpppixelcell::col#1, mode_8bpppixelcell::@5/0 )
  [592] mode_8bpppixelcell::gfxb#7 = phi( mode_8bpppixelcell::@12/mode_8bpppixelcell::gfxb#1, mode_8bpppixelcell::@5/mode_8bpppixelcell::PLANEB )
  [592] mode_8bpppixelcell::chargen#4 = phi( mode_8bpppixelcell::@12/mode_8bpppixelcell::chargen#1, mode_8bpppixelcell::@5/mode_8bpppixelcell::CHARGEN )
  to:mode_8bpppixelcell::@7
mode_8bpppixelcell::@7: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@11 mode_8bpppixelcell::@6
  [593] mode_8bpppixelcell::cr#6 = phi( mode_8bpppixelcell::@11/mode_8bpppixelcell::cr#1, mode_8bpppixelcell::@6/0 )
  [593] mode_8bpppixelcell::col#5 = phi( mode_8bpppixelcell::@11/mode_8bpppixelcell::col#1, mode_8bpppixelcell::@6/mode_8bpppixelcell::col#7 )
  [593] mode_8bpppixelcell::gfxb#5 = phi( mode_8bpppixelcell::@11/mode_8bpppixelcell::gfxb#1, mode_8bpppixelcell::@6/mode_8bpppixelcell::gfxb#7 )
  [593] mode_8bpppixelcell::chargen#2 = phi( mode_8bpppixelcell::@11/mode_8bpppixelcell::chargen#1, mode_8bpppixelcell::@6/mode_8bpppixelcell::chargen#4 )
  [594] mode_8bpppixelcell::bits#0 = *mode_8bpppixelcell::chargen#2
  [595] mode_8bpppixelcell::chargen#1 = ++ mode_8bpppixelcell::chargen#2
  to:mode_8bpppixelcell::@8
mode_8bpppixelcell::@8: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@7 mode_8bpppixelcell::@9
  [596] mode_8bpppixelcell::cp#2 = phi( mode_8bpppixelcell::@9/mode_8bpppixelcell::cp#1, mode_8bpppixelcell::@7/0 )
  [596] mode_8bpppixelcell::col#2 = phi( mode_8bpppixelcell::@9/mode_8bpppixelcell::col#1, mode_8bpppixelcell::@7/mode_8bpppixelcell::col#5 )
  [596] mode_8bpppixelcell::gfxb#2 = phi( mode_8bpppixelcell::@9/mode_8bpppixelcell::gfxb#1, mode_8bpppixelcell::@7/mode_8bpppixelcell::gfxb#5 )
  [596] mode_8bpppixelcell::bits#2 = phi( mode_8bpppixelcell::@9/mode_8bpppixelcell::bits#1, mode_8bpppixelcell::@7/mode_8bpppixelcell::bits#0 )
  [597] mode_8bpppixelcell::$8 = mode_8bpppixelcell::bits#2 & $80
  [598] if(mode_8bpppixelcell::$8==0) goto mode_8bpppixelcell::@9
  to:mode_8bpppixelcell::@10
mode_8bpppixelcell::@10: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@8
  [599] mode_8bpppixelcell::c#3 = mode_8bpppixelcell::col#2
  to:mode_8bpppixelcell::@9
mode_8bpppixelcell::@9: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@10 mode_8bpppixelcell::@8
  [600] mode_8bpppixelcell::c#2 = phi( mode_8bpppixelcell::@10/mode_8bpppixelcell::c#3, mode_8bpppixelcell::@8/0 )
  [601] *mode_8bpppixelcell::gfxb#2 = mode_8bpppixelcell::c#2
  [602] mode_8bpppixelcell::gfxb#1 = ++ mode_8bpppixelcell::gfxb#2
  [603] mode_8bpppixelcell::bits#1 = mode_8bpppixelcell::bits#2 << 1
  [604] mode_8bpppixelcell::col#1 = ++ mode_8bpppixelcell::col#2
  [605] mode_8bpppixelcell::cp#1 = ++ mode_8bpppixelcell::cp#2
  [606] if(mode_8bpppixelcell::cp#1!=8) goto mode_8bpppixelcell::@8
  to:mode_8bpppixelcell::@11
mode_8bpppixelcell::@11: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@9
  [607] mode_8bpppixelcell::cr#1 = ++ mode_8bpppixelcell::cr#6
  [608] if(mode_8bpppixelcell::cr#1!=8) goto mode_8bpppixelcell::@7
  to:mode_8bpppixelcell::@12
mode_8bpppixelcell::@12: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@11
  [609] mode_8bpppixelcell::ch#1 = ++ mode_8bpppixelcell::ch#8
  [610] if(mode_8bpppixelcell::ch#1!=0) goto mode_8bpppixelcell::@6
  to:mode_8bpppixelcell::@13
mode_8bpppixelcell::@13: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@12
  [611] *PROCPORT = PROCPORT_RAM_IO
  [612] call mode_ctrl 
  to:mode_8bpppixelcell::@return
mode_8bpppixelcell::@return: scope:[mode_8bpppixelcell]  from mode_8bpppixelcell::@13
  [613] return 
  to:@return

void mode_8bppchunkybmm()
mode_8bppchunkybmm: scope:[mode_8bppchunkybmm]  from menu::@28
  [614] *DTV_CONTROL = DTV_HIGHCOLOR|DTV_LINEAR|DTV_CHUNKY|DTV_COLORRAM_OFF
  [615] *VICII_CONTROL = VICII_ECM|VICII_DEN|VICII_RSEL|3
  [616] *VICII_CONTROL2 = VICII_MCM|VICII_CSEL
  [617] *DTV_PLANEB_START_LO = 0
  [618] *DTV_PLANEB_START_MI = 0
  [619] *DTV_PLANEB_START_HI = <>mode_8bppchunkybmm::PLANEB
  [620] *DTV_PLANEB_STEP = 8
  [621] *DTV_PLANEB_MODULO_LO = 0
  [622] *DTV_PLANEB_MODULO_HI = 0
  [623] *BORDER_COLOR = 0
  to:mode_8bppchunkybmm::@1
mode_8bppchunkybmm::@1: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm mode_8bppchunkybmm::@1
  [624] mode_8bppchunkybmm::i#2 = phi( mode_8bppchunkybmm/0, mode_8bppchunkybmm::@1/mode_8bppchunkybmm::i#1 )
  [625] DTV_PALETTE[mode_8bppchunkybmm::i#2] = mode_8bppchunkybmm::i#2
  [626] mode_8bppchunkybmm::i#1 = ++ mode_8bppchunkybmm::i#2
  [627] if(mode_8bppchunkybmm::i#1!=$10) goto mode_8bppchunkybmm::@1
  to:mode_8bppchunkybmm::@2
mode_8bppchunkybmm::@2: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@1
  [628] phi()
  [629] call dtvSetCpuBankSegment1 
  to:mode_8bppchunkybmm::@3
mode_8bppchunkybmm::@3: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@2 mode_8bppchunkybmm::@7
  [630] mode_8bppchunkybmm::gfxbCpuBank#7 = phi( mode_8bppchunkybmm::@7/mode_8bppchunkybmm::gfxbCpuBank#8, mode_8bppchunkybmm::@2/++(byte)mode_8bppchunkybmm::PLANEB/$4000 )
  [630] mode_8bppchunkybmm::y#6 = phi( mode_8bppchunkybmm::@7/mode_8bppchunkybmm::y#1, mode_8bppchunkybmm::@2/0 )
  [630] mode_8bppchunkybmm::gfxb#5 = phi( mode_8bppchunkybmm::@7/mode_8bppchunkybmm::gfxb#1, mode_8bppchunkybmm::@2/(byte*) 16384 )
  to:mode_8bppchunkybmm::@4
mode_8bppchunkybmm::@4: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@3 mode_8bppchunkybmm::@5
  [631] mode_8bppchunkybmm::gfxbCpuBank#4 = phi( mode_8bppchunkybmm::@3/mode_8bppchunkybmm::gfxbCpuBank#7, mode_8bppchunkybmm::@5/mode_8bppchunkybmm::gfxbCpuBank#8 )
  [631] mode_8bppchunkybmm::x#2 = phi( mode_8bppchunkybmm::@3/0, mode_8bppchunkybmm::@5/mode_8bppchunkybmm::x#1 )
  [631] mode_8bppchunkybmm::gfxb#3 = phi( mode_8bppchunkybmm::@3/mode_8bppchunkybmm::gfxb#5, mode_8bppchunkybmm::@5/mode_8bppchunkybmm::gfxb#1 )
  [632] if(mode_8bppchunkybmm::gfxb#3!=$8000) goto mode_8bppchunkybmm::@5
  to:mode_8bppchunkybmm::@6
mode_8bppchunkybmm::@6: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@4
  [633] dtvSetCpuBankSegment1::cpuBankIdx#1 = mode_8bppchunkybmm::gfxbCpuBank#4
  [634] call dtvSetCpuBankSegment1 
  to:mode_8bppchunkybmm::@9
mode_8bppchunkybmm::@9: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@6
  [635] mode_8bppchunkybmm::gfxbCpuBank#2 = ++ mode_8bppchunkybmm::gfxbCpuBank#4
  to:mode_8bppchunkybmm::@5
mode_8bppchunkybmm::@5: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@4 mode_8bppchunkybmm::@9
  [636] mode_8bppchunkybmm::gfxbCpuBank#8 = phi( mode_8bppchunkybmm::@9/mode_8bppchunkybmm::gfxbCpuBank#2, mode_8bppchunkybmm::@4/mode_8bppchunkybmm::gfxbCpuBank#4 )
  [636] mode_8bppchunkybmm::gfxb#4 = phi( mode_8bppchunkybmm::@9/(byte*) 16384, mode_8bppchunkybmm::@4/mode_8bppchunkybmm::gfxb#3 )
  [637] mode_8bppchunkybmm::$7 = mode_8bppchunkybmm::x#2 + mode_8bppchunkybmm::y#6
  [638] mode_8bppchunkybmm::c#0 = (byte)mode_8bppchunkybmm::$7
  [639] *mode_8bppchunkybmm::gfxb#4 = mode_8bppchunkybmm::c#0
  [640] mode_8bppchunkybmm::gfxb#1 = ++ mode_8bppchunkybmm::gfxb#4
  [641] mode_8bppchunkybmm::x#1 = ++ mode_8bppchunkybmm::x#2
  [642] if(mode_8bppchunkybmm::x#1!=$140) goto mode_8bppchunkybmm::@4
  to:mode_8bppchunkybmm::@7
mode_8bppchunkybmm::@7: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@5
  [643] mode_8bppchunkybmm::y#1 = ++ mode_8bppchunkybmm::y#6
  [644] if(mode_8bppchunkybmm::y#1!=$c8) goto mode_8bppchunkybmm::@3
  to:mode_8bppchunkybmm::@8
mode_8bppchunkybmm::@8: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@7
  [645] phi()
  [646] call dtvSetCpuBankSegment1 
  to:mode_8bppchunkybmm::@10
mode_8bppchunkybmm::@10: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@8
  [647] phi()
  [648] call mode_ctrl 
  to:mode_8bppchunkybmm::@return
mode_8bppchunkybmm::@return: scope:[mode_8bppchunkybmm]  from mode_8bppchunkybmm::@10
  [649] return 
  to:@return

void* memset(void* memset::str , byte memset::c , word memset::num)
memset: scope:[memset]  from bitmap_clear bitmap_clear::@1 print_cls
  [650] memset::c#5 = phi( bitmap_clear/bitmap_clear::col#0, bitmap_clear::@1/0, print_cls/' ' )
  [650] memset::str#4 = phi( bitmap_clear/(void*)mode_stdbitmap::SCREEN, bitmap_clear::@1/(void*)mode_stdbitmap::BITMAP, print_cls/(void*)menu::SCREEN )
  [650] memset::num#3 = phi( bitmap_clear/$3e8, bitmap_clear::@1/$1f40, print_cls/$3e8 )
  [651] if(memset::num#3<=0) goto memset::@return
  to:memset::@1
memset::@1: scope:[memset]  from memset
  [652] memset::end#0 = (byte*)memset::str#4 + memset::num#3
  [653] memset::dst#4 = (byte*)memset::str#4
  to:memset::@2
memset::@2: scope:[memset]  from memset::@1 memset::@3
  [654] memset::dst#2 = phi( memset::@1/memset::dst#4, memset::@3/memset::dst#1 )
  [655] if(memset::dst#2!=memset::end#0) goto memset::@3
  to:memset::@return
memset::@return: scope:[memset]  from memset memset::@2
  [656] return 
  to:@return
memset::@3: scope:[memset]  from memset::@2
  [657] *memset::dst#2 = memset::c#5
  [658] memset::dst#1 = ++ memset::dst#2
  to:memset::@2

void print_char(byte print_char::ch)
print_char: scope:[print_char]  from print_str_lines::@4
  [659] *print_char_cursor#37 = print_char::ch#0
  [660] print_char_cursor#26 = ++ print_char_cursor#37
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  [661] return 
  to:@return

void print_ln()
print_ln: scope:[print_ln]  from print_str_lines::@5
  [662] phi()
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  [663] print_line_cursor#19 = phi( print_ln/print_line_cursor#1, print_ln::@1/print_line_cursor#2 )
  [664] print_line_cursor#2 = print_line_cursor#19 + $28
  [665] if(print_line_cursor#2<print_char_cursor#38) goto print_ln::@1
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@1
  [666] return 
  to:@return

byte keyboard_matrix_read(byte keyboard_matrix_read::rowid)
keyboard_matrix_read: scope:[keyboard_matrix_read]  from keyboard_key_pressed
  [667] *((byte*)CIA1) = keyboard_matrix_row_bitmask[keyboard_matrix_read::rowid#0]
  [668] keyboard_matrix_read::return#0 = ~ *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_B)
  to:keyboard_matrix_read::@return
keyboard_matrix_read::@return: scope:[keyboard_matrix_read]  from keyboard_matrix_read
  [669] return 
  to:@return

void mode_ctrl()
mode_ctrl: scope:[mode_ctrl]  from mode_8bppchunkybmm::@10 mode_8bpppixelcell::@13 mode_ecmchar::@6 mode_hicolecmchar::@6 mode_hicolmcchar::@6 mode_hicolstdchar::@6 mode_mcchar::@6 mode_sixsfred2::@12 mode_sixsfred::@12 mode_stdbitmap::@8 mode_stdchar::@6 mode_twoplanebitmap::@15
  [670] dtv_control#146 = phi( mode_8bppchunkybmm::@10/DTV_HIGHCOLOR|DTV_LINEAR|DTV_CHUNKY|DTV_COLORRAM_OFF, mode_8bpppixelcell::@13/DTV_HIGHCOLOR|DTV_LINEAR|DTV_CHUNKY, mode_ecmchar::@6/0, mode_hicolecmchar::@6/DTV_HIGHCOLOR, mode_hicolmcchar::@6/DTV_HIGHCOLOR, mode_hicolstdchar::@6/DTV_HIGHCOLOR, mode_mcchar::@6/0, mode_sixsfred2::@12/DTV_LINEAR, mode_sixsfred::@12/DTV_HIGHCOLOR|DTV_LINEAR, mode_stdbitmap::@8/0, mode_stdchar::@6/0, mode_twoplanebitmap::@15/DTV_HIGHCOLOR|DTV_LINEAR )
  to:mode_ctrl::@1
mode_ctrl::@1: scope:[mode_ctrl]  from mode_ctrl mode_ctrl::@11 mode_ctrl::@18
  [671] dtv_control#116 = phi( mode_ctrl/dtv_control#146, mode_ctrl::@11/dtv_control#116, mode_ctrl::@18/dtv_control#16 )
  to:mode_ctrl::@2
mode_ctrl::@2: scope:[mode_ctrl]  from mode_ctrl::@1 mode_ctrl::@2
  [672] if(*RASTER!=$ff) goto mode_ctrl::@2
  to:mode_ctrl::@3
mode_ctrl::@3: scope:[mode_ctrl]  from mode_ctrl::@2
  [673] phi()
  [674] call keyboard_key_pressed 
  [675] keyboard_key_pressed::return#14 = keyboard_key_pressed::return#0
  to:mode_ctrl::@19
mode_ctrl::@19: scope:[mode_ctrl]  from mode_ctrl::@3
  [676] mode_ctrl::$1 = keyboard_key_pressed::return#14
  [677] if(mode_ctrl::$1==0) goto mode_ctrl::@4
  to:mode_ctrl::@return
mode_ctrl::@return: scope:[mode_ctrl]  from mode_ctrl::@19
  [678] return 
  to:@return
mode_ctrl::@4: scope:[mode_ctrl]  from mode_ctrl::@19
  [679] mode_ctrl::ctrl#0 = dtv_control#116
  [680] call keyboard_key_pressed 
  [681] keyboard_key_pressed::return#15 = keyboard_key_pressed::return#0
  to:mode_ctrl::@20
mode_ctrl::@20: scope:[mode_ctrl]  from mode_ctrl::@4
  [682] mode_ctrl::$4 = keyboard_key_pressed::return#15
  [683] if(mode_ctrl::$4==0) goto mode_ctrl::@5
  to:mode_ctrl::@12
mode_ctrl::@12: scope:[mode_ctrl]  from mode_ctrl::@20
  [684] mode_ctrl::ctrl#1 = mode_ctrl::ctrl#0 | DTV_LINEAR
  to:mode_ctrl::@5
mode_ctrl::@5: scope:[mode_ctrl]  from mode_ctrl::@12 mode_ctrl::@20
  [685] mode_ctrl::ctrl#17 = phi( mode_ctrl::@12/mode_ctrl::ctrl#1, mode_ctrl::@20/mode_ctrl::ctrl#0 )
  [686] call keyboard_key_pressed 
  [687] keyboard_key_pressed::return#16 = keyboard_key_pressed::return#0
  to:mode_ctrl::@21
mode_ctrl::@21: scope:[mode_ctrl]  from mode_ctrl::@5
  [688] mode_ctrl::$8 = keyboard_key_pressed::return#16
  [689] if(mode_ctrl::$8==0) goto mode_ctrl::@6
  to:mode_ctrl::@13
mode_ctrl::@13: scope:[mode_ctrl]  from mode_ctrl::@21
  [690] mode_ctrl::ctrl#2 = mode_ctrl::ctrl#17 | DTV_HIGHCOLOR
  to:mode_ctrl::@6
mode_ctrl::@6: scope:[mode_ctrl]  from mode_ctrl::@13 mode_ctrl::@21
  [691] mode_ctrl::ctrl#10 = phi( mode_ctrl::@13/mode_ctrl::ctrl#2, mode_ctrl::@21/mode_ctrl::ctrl#17 )
  [692] call keyboard_key_pressed 
  [693] keyboard_key_pressed::return#17 = keyboard_key_pressed::return#0
  to:mode_ctrl::@22
mode_ctrl::@22: scope:[mode_ctrl]  from mode_ctrl::@6
  [694] mode_ctrl::$12 = keyboard_key_pressed::return#17
  [695] if(mode_ctrl::$12==0) goto mode_ctrl::@7
  to:mode_ctrl::@14
mode_ctrl::@14: scope:[mode_ctrl]  from mode_ctrl::@22
  [696] mode_ctrl::ctrl#3 = mode_ctrl::ctrl#10 | DTV_OVERSCAN
  to:mode_ctrl::@7
mode_ctrl::@7: scope:[mode_ctrl]  from mode_ctrl::@14 mode_ctrl::@22
  [697] mode_ctrl::ctrl#11 = phi( mode_ctrl::@14/mode_ctrl::ctrl#3, mode_ctrl::@22/mode_ctrl::ctrl#10 )
  [698] call keyboard_key_pressed 
  [699] keyboard_key_pressed::return#18 = keyboard_key_pressed::return#0
  to:mode_ctrl::@23
mode_ctrl::@23: scope:[mode_ctrl]  from mode_ctrl::@7
  [700] mode_ctrl::$16 = keyboard_key_pressed::return#18
  [701] if(mode_ctrl::$16==0) goto mode_ctrl::@8
  to:mode_ctrl::@15
mode_ctrl::@15: scope:[mode_ctrl]  from mode_ctrl::@23
  [702] mode_ctrl::ctrl#4 = mode_ctrl::ctrl#11 | DTV_BORDER_OFF
  to:mode_ctrl::@8
mode_ctrl::@8: scope:[mode_ctrl]  from mode_ctrl::@15 mode_ctrl::@23
  [703] mode_ctrl::ctrl#12 = phi( mode_ctrl::@15/mode_ctrl::ctrl#4, mode_ctrl::@23/mode_ctrl::ctrl#11 )
  [704] call keyboard_key_pressed 
  [705] keyboard_key_pressed::return#19 = keyboard_key_pressed::return#0
  to:mode_ctrl::@24
mode_ctrl::@24: scope:[mode_ctrl]  from mode_ctrl::@8
  [706] mode_ctrl::$20 = keyboard_key_pressed::return#19
  [707] if(mode_ctrl::$20==0) goto mode_ctrl::@9
  to:mode_ctrl::@16
mode_ctrl::@16: scope:[mode_ctrl]  from mode_ctrl::@24
  [708] mode_ctrl::ctrl#5 = mode_ctrl::ctrl#12 | DTV_CHUNKY
  to:mode_ctrl::@9
mode_ctrl::@9: scope:[mode_ctrl]  from mode_ctrl::@16 mode_ctrl::@24
  [709] mode_ctrl::ctrl#13 = phi( mode_ctrl::@16/mode_ctrl::ctrl#5, mode_ctrl::@24/mode_ctrl::ctrl#12 )
  [710] call keyboard_key_pressed 
  [711] keyboard_key_pressed::return#20 = keyboard_key_pressed::return#0
  to:mode_ctrl::@25
mode_ctrl::@25: scope:[mode_ctrl]  from mode_ctrl::@9
  [712] mode_ctrl::$24 = keyboard_key_pressed::return#20
  [713] if(mode_ctrl::$24==0) goto mode_ctrl::@10
  to:mode_ctrl::@17
mode_ctrl::@17: scope:[mode_ctrl]  from mode_ctrl::@25
  [714] mode_ctrl::ctrl#6 = mode_ctrl::ctrl#13 | DTV_COLORRAM_OFF
  to:mode_ctrl::@10
mode_ctrl::@10: scope:[mode_ctrl]  from mode_ctrl::@17 mode_ctrl::@25
  [715] mode_ctrl::ctrl#22 = phi( mode_ctrl::@17/mode_ctrl::ctrl#6, mode_ctrl::@25/mode_ctrl::ctrl#13 )
  [716] call keyboard_key_pressed 
  [717] keyboard_key_pressed::return#21 = keyboard_key_pressed::return#0
  to:mode_ctrl::@26
mode_ctrl::@26: scope:[mode_ctrl]  from mode_ctrl::@10
  [718] mode_ctrl::$28 = keyboard_key_pressed::return#21
  [719] if(mode_ctrl::$28==0) goto mode_ctrl::@27
  to:mode_ctrl::@11
mode_ctrl::@27: scope:[mode_ctrl]  from mode_ctrl::@26
  [720] phi()
  to:mode_ctrl::@11
mode_ctrl::@11: scope:[mode_ctrl]  from mode_ctrl::@26 mode_ctrl::@27
  [721] mode_ctrl::ctrl#14 = phi( mode_ctrl::@26/0, mode_ctrl::@27/mode_ctrl::ctrl#22 )
  [722] if(mode_ctrl::ctrl#14==dtv_control#116) goto mode_ctrl::@1
  to:mode_ctrl::@18
mode_ctrl::@18: scope:[mode_ctrl]  from mode_ctrl::@11
  [723] dtv_control#16 = mode_ctrl::ctrl#14
  [724] *DTV_CONTROL = mode_ctrl::ctrl#14
  [725] *BORDER_COLOR = mode_ctrl::ctrl#14
  to:mode_ctrl::@1

void bitmap_init(byte* bitmap_init::gfx , byte* bitmap_init::screen)
bitmap_init: scope:[bitmap_init]  from mode_stdbitmap::@2
  [726] phi()
  to:bitmap_init::@1
bitmap_init::@1: scope:[bitmap_init]  from bitmap_init bitmap_init::@2
  [727] bitmap_init::x#2 = phi( bitmap_init/0, bitmap_init::@2/bitmap_init::x#1 )
  [727] bitmap_init::bits#3 = phi( bitmap_init/$80, bitmap_init::@2/bitmap_init::bits#4 )
  [728] bitmap_plot_bit[bitmap_init::x#2] = bitmap_init::bits#3
  [729] bitmap_init::bits#1 = bitmap_init::bits#3 >> 1
  [730] if(bitmap_init::bits#1!=0) goto bitmap_init::@6
  to:bitmap_init::@2
bitmap_init::@6: scope:[bitmap_init]  from bitmap_init::@1
  [731] phi()
  to:bitmap_init::@2
bitmap_init::@2: scope:[bitmap_init]  from bitmap_init::@1 bitmap_init::@6
  [732] bitmap_init::bits#4 = phi( bitmap_init::@6/bitmap_init::bits#1, bitmap_init::@1/$80 )
  [733] bitmap_init::x#1 = ++ bitmap_init::x#2
  [734] if(bitmap_init::x#1!=0) goto bitmap_init::@1
  to:bitmap_init::@3
bitmap_init::@3: scope:[bitmap_init]  from bitmap_init::@2 bitmap_init::@4
  [735] bitmap_init::yoffs#2 = phi( bitmap_init::@2/mode_stdbitmap::BITMAP, bitmap_init::@4/bitmap_init::yoffs#4 )
  [735] bitmap_init::y#2 = phi( bitmap_init::@2/0, bitmap_init::@4/bitmap_init::y#1 )
  [736] bitmap_init::$7 = bitmap_init::y#2 & 7
  [737] bitmap_init::$4 = < bitmap_init::yoffs#2
  [738] bitmap_init::$5 = bitmap_init::$7 | bitmap_init::$4
  [739] bitmap_plot_ylo[bitmap_init::y#2] = bitmap_init::$5
  [740] bitmap_init::$6 = > bitmap_init::yoffs#2
  [741] bitmap_plot_yhi[bitmap_init::y#2] = bitmap_init::$6
  [742] if(bitmap_init::$7!=7) goto bitmap_init::@4
  to:bitmap_init::@5
bitmap_init::@5: scope:[bitmap_init]  from bitmap_init::@3
  [743] bitmap_init::yoffs#1 = bitmap_init::yoffs#2 + (word)$28*8
  to:bitmap_init::@4
bitmap_init::@4: scope:[bitmap_init]  from bitmap_init::@3 bitmap_init::@5
  [744] bitmap_init::yoffs#4 = phi( bitmap_init::@3/bitmap_init::yoffs#2, bitmap_init::@5/bitmap_init::yoffs#1 )
  [745] bitmap_init::y#1 = ++ bitmap_init::y#2
  [746] if(bitmap_init::y#1!=0) goto bitmap_init::@3
  to:bitmap_init::@return
bitmap_init::@return: scope:[bitmap_init]  from bitmap_init::@4
  [747] return 
  to:@return

void bitmap_clear(byte bitmap_clear::bgcol , byte bitmap_clear::fgcol)
bitmap_clear: scope:[bitmap_clear]  from mode_stdbitmap::@9
  [748] phi()
  [749] call memset 
  to:bitmap_clear::@1
bitmap_clear::@1: scope:[bitmap_clear]  from bitmap_clear
  [750] phi()
  [751] call memset 
  to:bitmap_clear::@return
bitmap_clear::@return: scope:[bitmap_clear]  from bitmap_clear::@1
  [752] return 
  to:@return

void bitmap_line(word bitmap_line::x1 , word bitmap_line::y1 , word bitmap_line::x2 , word bitmap_line::y2)
bitmap_line: scope:[bitmap_line]  from mode_stdbitmap::@7
  [753] abs_u16::w#0 = bitmap_line::x2#0 - bitmap_line::x1#0
  [754] call abs_u16 
  [755] abs_u16::return#0 = abs_u16::return#4
  to:bitmap_line::@12
bitmap_line::@12: scope:[bitmap_line]  from bitmap_line
  [756] bitmap_line::dx#0 = abs_u16::return#0
  [757] abs_u16::w#1 = bitmap_line::y2#0 - bitmap_line::y1#0
  [758] call abs_u16 
  [759] abs_u16::return#1 = abs_u16::return#4
  to:bitmap_line::@13
bitmap_line::@13: scope:[bitmap_line]  from bitmap_line::@12
  [760] bitmap_line::dy#0 = abs_u16::return#1
  [761] if(bitmap_line::dx#0!=0) goto bitmap_line::@1
  to:bitmap_line::@18
bitmap_line::@18: scope:[bitmap_line]  from bitmap_line::@13
  [762] if(bitmap_line::dy#0==0) goto bitmap_line::@4
  to:bitmap_line::@1
bitmap_line::@1: scope:[bitmap_line]  from bitmap_line::@13 bitmap_line::@18
  [763] sgn_u16::w#0 = bitmap_line::x2#0 - bitmap_line::x1#0
  [764] call sgn_u16 
  [765] sgn_u16::return#0 = sgn_u16::return#4
  to:bitmap_line::@14
bitmap_line::@14: scope:[bitmap_line]  from bitmap_line::@1
  [766] bitmap_line::sx#0 = sgn_u16::return#0
  [767] sgn_u16::w#1 = bitmap_line::y2#0 - bitmap_line::y1#0
  [768] call sgn_u16 
  [769] sgn_u16::return#1 = sgn_u16::return#4
  to:bitmap_line::@15
bitmap_line::@15: scope:[bitmap_line]  from bitmap_line::@14
  [770] bitmap_line::sy#0 = sgn_u16::return#1
  [771] if(bitmap_line::dx#0>bitmap_line::dy#0) goto bitmap_line::@2
  to:bitmap_line::@5
bitmap_line::@5: scope:[bitmap_line]  from bitmap_line::@15
  [772] bitmap_line::e#0 = bitmap_line::dx#0 >> 1
  to:bitmap_line::@6
bitmap_line::@6: scope:[bitmap_line]  from bitmap_line::@5 bitmap_line::@7
  [773] bitmap_line::e#3 = phi( bitmap_line::@5/bitmap_line::e#0, bitmap_line::@7/bitmap_line::e#6 )
  [773] bitmap_line::y#4 = phi( bitmap_line::@5/bitmap_line::y1#0, bitmap_line::@7/bitmap_line::y#1 )
  [773] bitmap_line::x#13 = phi( bitmap_line::@5/bitmap_line::x1#0, bitmap_line::@7/bitmap_line::x#12 )
  [774] bitmap_plot::x#1 = bitmap_line::x#13
  [775] bitmap_plot::y#1 = (byte)bitmap_line::y#4
  [776] call bitmap_plot 
  to:bitmap_line::@16
bitmap_line::@16: scope:[bitmap_line]  from bitmap_line::@6
  [777] bitmap_line::y#1 = bitmap_line::y#4 + bitmap_line::sy#0
  [778] bitmap_line::e#1 = bitmap_line::e#3 + bitmap_line::dx#0
  [779] if(bitmap_line::dy#0>=bitmap_line::e#1) goto bitmap_line::@7
  to:bitmap_line::@8
bitmap_line::@8: scope:[bitmap_line]  from bitmap_line::@16
  [780] bitmap_line::x#1 = bitmap_line::x#13 + bitmap_line::sx#0
  [781] bitmap_line::e#2 = bitmap_line::e#1 - bitmap_line::dy#0
  to:bitmap_line::@7
bitmap_line::@7: scope:[bitmap_line]  from bitmap_line::@16 bitmap_line::@8
  [782] bitmap_line::e#6 = phi( bitmap_line::@16/bitmap_line::e#1, bitmap_line::@8/bitmap_line::e#2 )
  [782] bitmap_line::x#12 = phi( bitmap_line::@16/bitmap_line::x#13, bitmap_line::@8/bitmap_line::x#1 )
  [783] if(bitmap_line::y#1!=bitmap_line::y2#0) goto bitmap_line::@6
  to:bitmap_line::@3
bitmap_line::@3: scope:[bitmap_line]  from bitmap_line::@10 bitmap_line::@7
  [784] bitmap_line::y#7 = phi( bitmap_line::@10/bitmap_line::y#13, bitmap_line::@7/bitmap_line::y#1 )
  [784] bitmap_line::x#6 = phi( bitmap_line::@10/bitmap_line::x#15, bitmap_line::@7/bitmap_line::x#12 )
  [785] bitmap_plot::x#2 = bitmap_line::x#6
  [786] bitmap_plot::y#2 = (byte)bitmap_line::y#7
  [787] call bitmap_plot 
  to:bitmap_line::@return
bitmap_line::@return: scope:[bitmap_line]  from bitmap_line::@3 bitmap_line::@4
  [788] return 
  to:@return
bitmap_line::@2: scope:[bitmap_line]  from bitmap_line::@15
  [789] bitmap_line::e1#0 = bitmap_line::dy#0 >> 1
  to:bitmap_line::@9
bitmap_line::@9: scope:[bitmap_line]  from bitmap_line::@10 bitmap_line::@2
  [790] bitmap_line::e1#3 = phi( bitmap_line::@10/bitmap_line::e1#6, bitmap_line::@2/bitmap_line::e1#0 )
  [790] bitmap_line::y#15 = phi( bitmap_line::@10/bitmap_line::y#13, bitmap_line::@2/bitmap_line::y1#0 )
  [790] bitmap_line::x#7 = phi( bitmap_line::@10/bitmap_line::x#15, bitmap_line::@2/bitmap_line::x1#0 )
  [791] bitmap_plot::x#3 = bitmap_line::x#7
  [792] bitmap_plot::y#3 = (byte)bitmap_line::y#15
  [793] call bitmap_plot 
  to:bitmap_line::@17
bitmap_line::@17: scope:[bitmap_line]  from bitmap_line::@9
  [794] bitmap_line::x#15 = bitmap_line::x#7 + bitmap_line::sx#0
  [795] bitmap_line::e1#1 = bitmap_line::e1#3 + bitmap_line::dy#0
  [796] if(bitmap_line::dx#0>=bitmap_line::e1#1) goto bitmap_line::@10
  to:bitmap_line::@11
bitmap_line::@11: scope:[bitmap_line]  from bitmap_line::@17
  [797] bitmap_line::y#2 = bitmap_line::y#15 + bitmap_line::sy#0
  [798] bitmap_line::e1#2 = bitmap_line::e1#1 - bitmap_line::dx#0
  to:bitmap_line::@10
bitmap_line::@10: scope:[bitmap_line]  from bitmap_line::@11 bitmap_line::@17
  [799] bitmap_line::e1#6 = phi( bitmap_line::@11/bitmap_line::e1#2, bitmap_line::@17/bitmap_line::e1#1 )
  [799] bitmap_line::y#13 = phi( bitmap_line::@11/bitmap_line::y#2, bitmap_line::@17/bitmap_line::y#15 )
  [800] if(bitmap_line::x#15!=bitmap_line::x2#0) goto bitmap_line::@9
  to:bitmap_line::@3
bitmap_line::@4: scope:[bitmap_line]  from bitmap_line::@18
  [801] bitmap_plot::x#0 = bitmap_line::x1#0
  [802] bitmap_plot::y#0 = (byte)bitmap_line::y1#0
  [803] call bitmap_plot 
  to:bitmap_line::@return

void dtvSetCpuBankSegment1(byte dtvSetCpuBankSegment1::cpuBankIdx)
dtvSetCpuBankSegment1: scope:[dtvSetCpuBankSegment1]  from mode_8bppchunkybmm::@2 mode_8bppchunkybmm::@6 mode_8bppchunkybmm::@8
  [804] dtvSetCpuBankSegment1::cpuBankIdx#3 = phi( mode_8bppchunkybmm::@2/(byte)mode_8bppchunkybmm::PLANEB/$4000, mode_8bppchunkybmm::@6/dtvSetCpuBankSegment1::cpuBankIdx#1, mode_8bppchunkybmm::@8/(byte)$4000/$4000 )
  [805] *dtvSetCpuBankSegment1::cpuBank = dtvSetCpuBankSegment1::cpuBankIdx#3
  asm { .byte$32,$dd lda$ff .byte$32,$00  }
  to:dtvSetCpuBankSegment1::@return
dtvSetCpuBankSegment1::@return: scope:[dtvSetCpuBankSegment1]  from dtvSetCpuBankSegment1
  [807] return 
  to:@return

word abs_u16(word abs_u16::w)
abs_u16: scope:[abs_u16]  from bitmap_line bitmap_line::@12
  [808] abs_u16::w#2 = phi( bitmap_line/abs_u16::w#0, bitmap_line::@12/abs_u16::w#1 )
  [809] abs_u16::$0 = > abs_u16::w#2
  [810] abs_u16::$1 = abs_u16::$0 & $80
  [811] if(0!=abs_u16::$1) goto abs_u16::@1
  to:abs_u16::@return
abs_u16::@1: scope:[abs_u16]  from abs_u16
  [812] abs_u16::return#2 = - abs_u16::w#2
  to:abs_u16::@return
abs_u16::@return: scope:[abs_u16]  from abs_u16 abs_u16::@1
  [813] abs_u16::return#4 = phi( abs_u16::@1/abs_u16::return#2, abs_u16/abs_u16::w#2 )
  [814] return 
  to:@return

word sgn_u16(word sgn_u16::w)
sgn_u16: scope:[sgn_u16]  from bitmap_line::@1 bitmap_line::@14
  [815] sgn_u16::w#2 = phi( bitmap_line::@1/sgn_u16::w#0, bitmap_line::@14/sgn_u16::w#1 )
  [816] sgn_u16::$0 = > sgn_u16::w#2
  [817] sgn_u16::$1 = sgn_u16::$0 & $80
  [818] if(0!=sgn_u16::$1) goto sgn_u16::@1
  to:sgn_u16::@return
sgn_u16::@1: scope:[sgn_u16]  from sgn_u16
  [819] phi()
  to:sgn_u16::@return
sgn_u16::@return: scope:[sgn_u16]  from sgn_u16 sgn_u16::@1
  [820] sgn_u16::return#4 = phi( sgn_u16::@1/-1, sgn_u16/1 )
  [821] return 
  to:@return

void bitmap_plot(word bitmap_plot::x , byte bitmap_plot::y)
bitmap_plot: scope:[bitmap_plot]  from bitmap_line::@3 bitmap_line::@4 bitmap_line::@6 bitmap_line::@9
  [822] bitmap_plot::x#4 = phi( bitmap_line::@3/bitmap_plot::x#2, bitmap_line::@4/bitmap_plot::x#0, bitmap_line::@6/bitmap_plot::x#1, bitmap_line::@9/bitmap_plot::x#3 )
  [822] bitmap_plot::y#4 = phi( bitmap_line::@3/bitmap_plot::y#2, bitmap_line::@4/bitmap_plot::y#0, bitmap_line::@6/bitmap_plot::y#1, bitmap_line::@9/bitmap_plot::y#3 )
  [823] bitmap_plot::plotter#0 = bitmap_plot_yhi[bitmap_plot::y#4] w= bitmap_plot_ylo[bitmap_plot::y#4]
  [824] bitmap_plot::$0 = bitmap_plot::x#4 & $fff8
  [825] bitmap_plot::plotter#1 = (byte*)bitmap_plot::plotter#0 + bitmap_plot::$0
  [826] bitmap_plot::$1 = < bitmap_plot::x#4
  [827] *bitmap_plot::plotter#1 = *bitmap_plot::plotter#1 | bitmap_plot_bit[bitmap_plot::$1]
  to:bitmap_plot::@return
bitmap_plot::@return: scope:[bitmap_plot]  from bitmap_plot
  [828] return 
  to:@return
