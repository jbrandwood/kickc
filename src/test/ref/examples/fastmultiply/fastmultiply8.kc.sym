(label) @20
(label) @begin
(label) @end
(signed byte*) ap
(const signed byte*) ap#0 ap = ((signed byte*))(byte/word/signed word/dword/signed dword) 253
(signed byte*) bp
(const signed byte*) bp#0 bp = ((signed byte*))(byte/word/signed word/dword/signed dword) 254
(signed byte*) cp
(const signed byte*) cp#0 cp = ((signed byte*))(byte/word/signed word/dword/signed dword) 255
(signed byte()) fmul8((signed byte) fmul8::a , (signed byte) fmul8::b)
(label) fmul8::@return
(signed byte) fmul8::a
(signed byte) fmul8::a#0 reg byte a 51.5
(signed byte) fmul8::b
(signed byte) fmul8::b#0 reg byte y 51.5
(signed byte) fmul8::return
(signed byte) fmul8::return#0 reg byte a 202.0
(signed byte) fmul8::return#1 reg byte a 34.33333333333333
(void()) init_screen()
(label) init_screen::@1
(label) init_screen::@2
(label) init_screen::@return
(byte*) init_screen::COLS
(byte*) init_screen::COLS#1 COLS zp ZP_WORD:2 7.333333333333333
(byte*) init_screen::COLS#3 COLS zp ZP_WORD:2 13.2
(byte) init_screen::WHITE
(const byte) init_screen::WHITE#0 WHITE = (byte/signed byte/word/signed word/dword/signed dword) 1
(byte) init_screen::l
(byte) init_screen::l#1 reg byte x 16.5
(byte) init_screen::l#2 reg byte x 16.5
(byte) init_screen::m
(byte) init_screen::m#1 reg byte x 16.5
(byte) init_screen::m#2 reg byte x 3.6666666666666665
(void()) main()
(label) main::@1
(label) main::@10
(label) main::@11
(label) main::@2
(label) main::@3
(label) main::@5
(label) main::@8
(label) main::@return
(byte*) main::at
(byte*) main::at#1 at zp ZP_WORD:2 7.333333333333333
(byte*~) main::at#12 at#12 zp ZP_WORD:5 22.0
(byte*) main::at#2 at zp ZP_WORD:2 2.3157894736842106
(byte*) main::at#3 at#3 zp ZP_WORD:5 27.545454545454547
(byte*) main::at#4 at zp ZP_WORD:2 8.25
(byte*) main::at#6 at#6 zp ZP_WORD:5 213.0
(byte*) main::at_line
(byte*) main::at_line#2 at_line zp ZP_WORD:2 22.0
(byte) main::i
(byte) main::i#1 i zp ZP_BYTE:4 16.5
(byte) main::i#2 i zp ZP_BYTE:4 7.444444444444445
(byte) main::j
(byte) main::j#1 j zp ZP_BYTE:7 151.5
(byte) main::j#2 j zp ZP_BYTE:7 30.299999999999997
(byte) main::k
(byte) main::k#1 reg byte x 16.5
(byte) main::k#2 reg byte x 6.6000000000000005
(signed byte) main::r
(signed byte) main::r#0 reg byte a 202.0
(byte*) mulf_sqr1
(const byte*) mulf_sqr1#0 mulf_sqr1 = ((byte*))(word/signed word/dword/signed dword) 8192
(byte*) mulf_sqr2
(const byte*) mulf_sqr2#0 mulf_sqr2 = ((byte*))(word/signed word/dword/signed dword) 8704
(void()) print_byte_at((byte) print_byte_at::b , (byte*) print_byte_at::at)
(byte~) print_byte_at::$0 reg byte a 4.0
(byte~) print_byte_at::$2 reg byte y 2.0
(label) print_byte_at::@1
(label) print_byte_at::@return
(byte*) print_byte_at::at
(byte*) print_byte_at::at#0 at zp ZP_WORD:8 1.0
(byte) print_byte_at::b
(void()) print_char_at((byte) print_char_at::ch , (byte*) print_char_at::at)
(label) print_char_at::@return
(byte*) print_char_at::at
(byte*) print_char_at::at#0 at zp ZP_WORD:8 4.0
(byte*) print_char_at::at#1 at zp ZP_WORD:8 4.0
(byte*) print_char_at::at#2 at zp ZP_WORD:8 4.0
(byte*) print_char_at::at#3 at zp ZP_WORD:8 2.0
(byte*) print_char_at::at#4 at zp ZP_WORD:8 10.0
(byte) print_char_at::ch
(byte) print_char_at::ch#2 ch zp ZP_BYTE:11 2.0
(byte) print_char_at::ch#3 ch zp ZP_BYTE:11 4.0
(byte) print_char_at::ch#4 ch zp ZP_BYTE:11 6.0
(void()) print_cls()
(label) print_cls::@1
(label) print_cls::@return
(byte*) print_cls::sc
(byte*) print_cls::sc#1 sc zp ZP_WORD:2 16.5
(byte*) print_cls::sc#2 sc zp ZP_WORD:2 16.5
(byte[]) print_hextab
(const byte[]) print_hextab#0 print_hextab = (string) "0123456789abcdef"
(void()) print_sbyte_at((signed byte) print_sbyte_at::b , (byte*) print_sbyte_at::at)
(label) print_sbyte_at::@1
(label) print_sbyte_at::@2
(label) print_sbyte_at::@3
(label) print_sbyte_at::@5
(label) print_sbyte_at::@return
(byte*) print_sbyte_at::at
(byte*) print_sbyte_at::at#0 at zp ZP_WORD:8 22.0
(byte*) print_sbyte_at::at#1 at zp ZP_WORD:8 22.0
(byte*) print_sbyte_at::at#2 at zp ZP_WORD:8 202.0
(byte*) print_sbyte_at::at#3 at zp ZP_WORD:8 16.125
(signed byte) print_sbyte_at::b
(signed byte) print_sbyte_at::b#0 b zp ZP_BYTE:10 4.0
(signed byte) print_sbyte_at::b#1 b zp ZP_BYTE:10 11.0
(signed byte) print_sbyte_at::b#2 b zp ZP_BYTE:10 11.0
(signed byte) print_sbyte_at::b#3 b zp ZP_BYTE:10 101.0
(signed byte) print_sbyte_at::b#4 b zp ZP_BYTE:10 21.499999999999993
(signed byte) print_sbyte_at::b#6 b zp ZP_BYTE:10 0.6666666666666666
(byte*) print_screen
(const byte*) print_screen#0 print_screen = ((byte*))(word/signed word/dword/signed dword) 1024
(signed byte[]) vals
(const signed byte[]) vals#0 vals = { -(byte/signed byte/word/signed word/dword/signed dword) 95, -(byte/signed byte/word/signed word/dword/signed dword) 64, -(byte/signed byte/word/signed word/dword/signed dword) 32, -(byte/signed byte/word/signed word/dword/signed dword) 16, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 16, (byte/signed byte/word/signed word/dword/signed dword) 32, (byte/signed byte/word/signed word/dword/signed dword) 64, (byte/signed byte/word/signed word/dword/signed dword) 95 }

reg byte x [ main::k#2 main::k#1 ]
zp ZP_WORD:2 [ main::at#4 main::at#1 main::at_line#2 main::at#2 init_screen::COLS#3 init_screen::COLS#1 print_cls::sc#2 print_cls::sc#1 ]
zp ZP_BYTE:4 [ main::i#2 main::i#1 ]
zp ZP_WORD:5 [ main::at#6 main::at#3 main::at#12 ]
zp ZP_BYTE:7 [ main::j#2 main::j#1 ]
zp ZP_WORD:8 [ print_sbyte_at::at#3 print_sbyte_at::at#0 print_sbyte_at::at#2 print_sbyte_at::at#1 print_char_at::at#4 print_char_at::at#2 print_char_at::at#3 print_char_at::at#0 print_char_at::at#1 print_byte_at::at#0 ]
zp ZP_BYTE:10 [ print_sbyte_at::b#6 print_sbyte_at::b#0 print_sbyte_at::b#4 print_sbyte_at::b#1 print_sbyte_at::b#3 print_sbyte_at::b#2 ]
zp ZP_BYTE:11 [ print_char_at::ch#4 print_char_at::ch#2 print_char_at::ch#3 ]
reg byte x [ init_screen::l#2 init_screen::l#1 ]
reg byte x [ init_screen::m#2 init_screen::m#1 ]
reg byte a [ fmul8::a#0 ]
reg byte y [ fmul8::b#0 ]
reg byte a [ fmul8::return#0 ]
reg byte a [ main::r#0 ]
reg byte a [ print_byte_at::$0 ]
reg byte y [ print_byte_at::$2 ]
reg byte a [ fmul8::return#1 ]
