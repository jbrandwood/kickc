
void __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] conio_cursor_x = 0
  [2] conio_cursor_y = 0
  [3] conio_line_text = DEFAULT_SCREEN
  [4] conio_line_color = COLORRAM
  [5] call conio_c64_init
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  [6] phi()
  [7] call main
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [8] return 
  to:@return

void conio_c64_init()
conio_c64_init: scope:[conio_c64_init]  from __start::__init1
  [9] conio_c64_init::line#0 = *conio_c64_init::BASIC_CURSOR_LINE
  [10] if(conio_c64_init::line#0<$19) goto conio_c64_init::@2
  to:conio_c64_init::@1
conio_c64_init::@2: scope:[conio_c64_init]  from conio_c64_init
  [11] phi()
  to:conio_c64_init::@1
conio_c64_init::@1: scope:[conio_c64_init]  from conio_c64_init conio_c64_init::@2
  [12] conio_c64_init::line#2 = phi( conio_c64_init::@2/conio_c64_init::line#0, conio_c64_init/$19-1 )
  [13] gotoxy::y#2 = conio_c64_init::line#2
  [14] call gotoxy
  to:conio_c64_init::@return
conio_c64_init::@return: scope:[conio_c64_init]  from conio_c64_init::@1
  [15] return 
  to:@return

__stackcall void cputc(char c)
cputc: scope:[cputc]  from printf_number_buffer::@7 printf_padding::@2
  [16] cputc::c#0 = stackidx(char,cputc::OFFSET_STACK_C)
  [17] if(cputc::c#0=='
') goto cputc::@1
  to:cputc::@2
cputc::@2: scope:[cputc]  from cputc
  [18] conio_line_text[conio_cursor_x] = cputc::c#0
  [19] conio_line_color[conio_cursor_x] = LIGHT_BLUE
  [20] conio_cursor_x = ++ conio_cursor_x
  [21] if(conio_cursor_x!=$28) goto cputc::@return
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc::@2
  [22] phi()
  [23] call cputln
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@1 cputc::@2 cputc::@3
  [24] return 
  to:@return
cputc::@1: scope:[cputc]  from cputc
  [25] phi()
  [26] call cputln
  to:cputc::@return

int main()
main: scope:[main]  from __start::@1
  [27] phi()
  to:main::toD0181
main::toD0181: scope:[main]  from main
  [28] phi()
  to:main::@3
main::@3: scope:[main]  from main::toD0181
  [29] *((char *)VICII+OFFSET_STRUCT_MOS6569_VICII_MEMORY) = main::toD0181_return#0
  [30] call clrscr
  to:main::@1
main::@1: scope:[main]  from main::@10 main::@3 main::@4 main::@9
  [31] main::current#2 = phi( main::@9/main::current#4, main::@3/0, main::@4/main::current#2 )
  [32] call GETIN
  [33] GETIN::return#0 = GETIN::return#1
  to:main::@4
main::@4: scope:[main]  from main::@1
  [34] main::ch#0 = GETIN::return#0
  [35] if(0==main::ch#0) goto main::@1
  to:main::@10
main::@10: scope:[main]  from main::@4
  [36] if(main::ch#0!=main::current#2) goto main::@2
  to:main::@1
main::@2: scope:[main]  from main::@10
  [37] petscii_to_screencode::petscii#0 = main::ch#0
  [38] call petscii_to_screencode
  [39] petscii_to_screencode::return#0 = petscii_to_screencode::return#10
  to:main::@5
main::@5: scope:[main]  from main::@2
  [40] main::$6 = petscii_to_screencode::return#0
  [41] call printf_str
  to:main::@6
main::@6: scope:[main]  from main::@5
  [42] stackpush(char) = main::$6
  [43] callexecute cputc 
  sideeffect stackpullpadding(1)
  [45] call printf_str
  to:main::@7
main::@7: scope:[main]  from main::@6
  [46] printf_uchar::uvalue#0 = main::ch#0
  [47] call printf_uchar
  to:main::@8
main::@8: scope:[main]  from main::@7
  [48] phi()
  [49] call printf_str
  to:main::@9
main::@9: scope:[main]  from main::@8
  [50] main::current#4 = main::ch#0
  to:main::@1

void gotoxy(char x , char y)
gotoxy: scope:[gotoxy]  from conio_c64_init::@1
  [51] if(gotoxy::y#2<$19+1) goto gotoxy::@3
  to:gotoxy::@1
gotoxy::@3: scope:[gotoxy]  from gotoxy
  [52] phi()
  to:gotoxy::@1
gotoxy::@1: scope:[gotoxy]  from gotoxy gotoxy::@3
  [53] gotoxy::y#4 = phi( gotoxy::@3/gotoxy::y#2, gotoxy/0 )
  to:gotoxy::@2
gotoxy::@2: scope:[gotoxy]  from gotoxy::@1
  [54] conio_cursor_x = gotoxy::x#2
  [55] conio_cursor_y = gotoxy::y#4
  [56] gotoxy::$7 = (unsigned int)gotoxy::y#4
  [57] gotoxy::$8 = gotoxy::$7 << 2
  [58] gotoxy::$9 = gotoxy::$8 + gotoxy::$7
  [59] gotoxy::line_offset#0 = gotoxy::$9 << 3
  [60] gotoxy::$5 = DEFAULT_SCREEN + gotoxy::line_offset#0
  [61] conio_line_text = gotoxy::$5
  [62] gotoxy::$6 = COLORRAM + gotoxy::line_offset#0
  [63] conio_line_color = gotoxy::$6
  to:gotoxy::@return
gotoxy::@return: scope:[gotoxy]  from gotoxy::@2
  [64] return 
  to:@return

void cputln()
cputln: scope:[cputln]  from cputc::@1 cputc::@3
  [65] conio_line_text = conio_line_text + $28
  [66] conio_line_color = conio_line_color + $28
  [67] conio_cursor_x = 0
  [68] conio_cursor_y = ++ conio_cursor_y
  [69] call cscroll
  to:cputln::@return
cputln::@return: scope:[cputln]  from cputln
  [70] return 
  to:@return

void clrscr()
clrscr: scope:[clrscr]  from main::@3
  [71] phi()
  to:clrscr::@1
clrscr::@1: scope:[clrscr]  from clrscr clrscr::@5
  [72] clrscr::line_cols#5 = phi( clrscr/COLORRAM, clrscr::@5/clrscr::line_cols#1 )
  [72] clrscr::line_text#5 = phi( clrscr/DEFAULT_SCREEN, clrscr::@5/clrscr::line_text#1 )
  [72] clrscr::l#2 = phi( clrscr/0, clrscr::@5/clrscr::l#1 )
  [73] if(clrscr::l#2<$19) goto clrscr::@3
  to:clrscr::@2
clrscr::@2: scope:[clrscr]  from clrscr::@1
  [74] conio_cursor_x = 0
  [75] conio_cursor_y = 0
  [76] conio_line_text = DEFAULT_SCREEN
  [77] conio_line_color = COLORRAM
  to:clrscr::@return
clrscr::@return: scope:[clrscr]  from clrscr::@2
  [78] return 
  to:@return
clrscr::@3: scope:[clrscr]  from clrscr::@1 clrscr::@4
  [79] clrscr::c#2 = phi( clrscr::@1/0, clrscr::@4/clrscr::c#1 )
  [80] if(clrscr::c#2<$28) goto clrscr::@4
  to:clrscr::@5
clrscr::@5: scope:[clrscr]  from clrscr::@3
  [81] clrscr::line_text#1 = clrscr::line_text#5 + $28
  [82] clrscr::line_cols#1 = clrscr::line_cols#5 + $28
  [83] clrscr::l#1 = ++ clrscr::l#2
  to:clrscr::@1
clrscr::@4: scope:[clrscr]  from clrscr::@3
  [84] clrscr::line_text#5[clrscr::c#2] = ' '
  [85] clrscr::line_cols#5[clrscr::c#2] = LIGHT_BLUE
  [86] clrscr::c#1 = ++ clrscr::c#2
  to:clrscr::@3

char GETIN()
GETIN: scope:[GETIN]  from main::@1
  asm { jsr$ffe4 stach  }
  [88] GETIN::return#1 = *GETIN::ch
  to:GETIN::@return
GETIN::@return: scope:[GETIN]  from GETIN
  [89] return 
  to:@return

char petscii_to_screencode(char petscii)
petscii_to_screencode: scope:[petscii_to_screencode]  from main::@2
  [90] if(petscii_to_screencode::petscii#0<$20) goto petscii_to_screencode::@1
  to:petscii_to_screencode::@6
petscii_to_screencode::@6: scope:[petscii_to_screencode]  from petscii_to_screencode
  [91] if(petscii_to_screencode::petscii#0<$40) goto petscii_to_screencode::@return
  to:petscii_to_screencode::@7
petscii_to_screencode::@7: scope:[petscii_to_screencode]  from petscii_to_screencode::@6
  [92] if(petscii_to_screencode::petscii#0<$60) goto petscii_to_screencode::@2
  to:petscii_to_screencode::@8
petscii_to_screencode::@8: scope:[petscii_to_screencode]  from petscii_to_screencode::@7
  [93] if(petscii_to_screencode::petscii#0<$80) goto petscii_to_screencode::@3
  to:petscii_to_screencode::@9
petscii_to_screencode::@9: scope:[petscii_to_screencode]  from petscii_to_screencode::@8
  [94] if(petscii_to_screencode::petscii#0<$a0) goto petscii_to_screencode::@4
  to:petscii_to_screencode::@10
petscii_to_screencode::@10: scope:[petscii_to_screencode]  from petscii_to_screencode::@9
  [95] if(petscii_to_screencode::petscii#0<$ff) goto petscii_to_screencode::@5
  to:petscii_to_screencode::@return
petscii_to_screencode::@5: scope:[petscii_to_screencode]  from petscii_to_screencode::@10
  [96] petscii_to_screencode::return#6 = petscii_to_screencode::petscii#0 - $80
  to:petscii_to_screencode::@return
petscii_to_screencode::@return: scope:[petscii_to_screencode]  from petscii_to_screencode::@1 petscii_to_screencode::@10 petscii_to_screencode::@2 petscii_to_screencode::@3 petscii_to_screencode::@4 petscii_to_screencode::@5 petscii_to_screencode::@6
  [97] petscii_to_screencode::return#10 = phi( petscii_to_screencode::@1/petscii_to_screencode::return#1, petscii_to_screencode::@10/$5e, petscii_to_screencode::@6/petscii_to_screencode::petscii#0, petscii_to_screencode::@2/petscii_to_screencode::return#3, petscii_to_screencode::@3/petscii_to_screencode::return#4, petscii_to_screencode::@4/petscii_to_screencode::return#5, petscii_to_screencode::@5/petscii_to_screencode::return#6 )
  [98] return 
  to:@return
petscii_to_screencode::@4: scope:[petscii_to_screencode]  from petscii_to_screencode::@9
  [99] petscii_to_screencode::return#5 = petscii_to_screencode::petscii#0 + $40
  to:petscii_to_screencode::@return
petscii_to_screencode::@3: scope:[petscii_to_screencode]  from petscii_to_screencode::@8
  [100] petscii_to_screencode::return#4 = petscii_to_screencode::petscii#0 - $20
  to:petscii_to_screencode::@return
petscii_to_screencode::@2: scope:[petscii_to_screencode]  from petscii_to_screencode::@7
  [101] petscii_to_screencode::return#3 = petscii_to_screencode::petscii#0 - $40
  to:petscii_to_screencode::@return
petscii_to_screencode::@1: scope:[petscii_to_screencode]  from petscii_to_screencode
  [102] petscii_to_screencode::return#1 = petscii_to_screencode::petscii#0 + $80
  to:petscii_to_screencode::@return

void printf_str(void (*putc)(char) , const char *s)
printf_str: scope:[printf_str]  from main::@5 main::@6 main::@8 printf_number_buffer::@3
  [103] printf_str::putc#6 = phi( main::@5/&cputc, main::@6/&cputc, main::@8/&cputc, printf_number_buffer::@3/printf_uchar::putc#0 )
  [103] printf_str::s#6 = phi( main::@5/main::s, main::@6/main::s1, main::@8/main::s2, printf_number_buffer::@3/printf_number_buffer::buffer_digits#0 )
  to:printf_str::@1
printf_str::@1: scope:[printf_str]  from printf_str printf_str::@2
  [104] printf_str::s#5 = phi( printf_str/printf_str::s#6, printf_str::@2/printf_str::s#0 )
  [105] printf_str::c#1 = *printf_str::s#5
  [106] printf_str::s#0 = ++ printf_str::s#5
  [107] if(0!=printf_str::c#1) goto printf_str::@2
  to:printf_str::@return
printf_str::@return: scope:[printf_str]  from printf_str::@1
  [108] return 
  to:@return
printf_str::@2: scope:[printf_str]  from printf_str::@1
  [109] stackpush(char) = printf_str::c#1
  [110] callexecute *printf_str::putc#6 
  sideeffect stackpullpadding(1)
  to:printf_str::@1

void printf_uchar(void (*putc)(char) , char uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
printf_uchar: scope:[printf_uchar]  from main::@7
  [112] phi()
  to:printf_uchar::@1
printf_uchar::@1: scope:[printf_uchar]  from printf_uchar
  [113] *((char *)&printf_buffer) = 0
  [114] uctoa::value#1 = printf_uchar::uvalue#0
  [115] call uctoa
  to:printf_uchar::@2
printf_uchar::@2: scope:[printf_uchar]  from printf_uchar::@1
  [116] printf_number_buffer::buffer_sign#0 = *((char *)&printf_buffer)
  [117] call printf_number_buffer
  to:printf_uchar::@return
printf_uchar::@return: scope:[printf_uchar]  from printf_uchar::@2
  [118] return 
  to:@return

void cscroll()
cscroll: scope:[cscroll]  from cputln
  [119] if(conio_cursor_y!=$19) goto cscroll::@return
  to:cscroll::@1
cscroll::@1: scope:[cscroll]  from cscroll
  [120] phi()
  [121] call memcpy
  to:cscroll::@2
cscroll::@2: scope:[cscroll]  from cscroll::@1
  [122] phi()
  [123] call memcpy
  to:cscroll::@3
cscroll::@3: scope:[cscroll]  from cscroll::@2
  [124] phi()
  [125] call memset
  to:cscroll::@4
cscroll::@4: scope:[cscroll]  from cscroll::@3
  [126] phi()
  [127] call memset
  to:cscroll::@5
cscroll::@5: scope:[cscroll]  from cscroll::@4
  [128] conio_line_text = conio_line_text - $28
  [129] conio_line_color = conio_line_color - $28
  [130] conio_cursor_y = -- conio_cursor_y
  to:cscroll::@return
cscroll::@return: scope:[cscroll]  from cscroll cscroll::@5
  [131] return 
  to:@return

void uctoa(char value , char *buffer , char radix)
uctoa: scope:[uctoa]  from printf_uchar::@1
  [132] phi()
  to:uctoa::@1
uctoa::@1: scope:[uctoa]  from uctoa uctoa::@4
  [133] uctoa::buffer#11 = phi( uctoa::@4/uctoa::buffer#14, uctoa/(char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  [133] uctoa::started#2 = phi( uctoa::@4/uctoa::started#4, uctoa/0 )
  [133] uctoa::value#2 = phi( uctoa::@4/uctoa::value#6, uctoa/uctoa::value#1 )
  [133] uctoa::digit#2 = phi( uctoa::@4/uctoa::digit#1, uctoa/0 )
  [134] if(uctoa::digit#2<uctoa::max_digits#2-1) goto uctoa::@2
  to:uctoa::@3
uctoa::@3: scope:[uctoa]  from uctoa::@1
  [135] *uctoa::buffer#11 = DIGITS[uctoa::value#2]
  [136] uctoa::buffer#3 = ++ uctoa::buffer#11
  [137] *uctoa::buffer#3 = 0
  to:uctoa::@return
uctoa::@return: scope:[uctoa]  from uctoa::@3
  [138] return 
  to:@return
uctoa::@2: scope:[uctoa]  from uctoa::@1
  [139] uctoa::digit_value#0 = RADIX_HEXADECIMAL_VALUES_CHAR[uctoa::digit#2]
  [140] if(0!=uctoa::started#2) goto uctoa::@5
  to:uctoa::@7
uctoa::@7: scope:[uctoa]  from uctoa::@2
  [141] if(uctoa::value#2>=uctoa::digit_value#0) goto uctoa::@5
  to:uctoa::@4
uctoa::@4: scope:[uctoa]  from uctoa::@6 uctoa::@7
  [142] uctoa::buffer#14 = phi( uctoa::@7/uctoa::buffer#11, uctoa::@6/uctoa::buffer#4 )
  [142] uctoa::started#4 = phi( uctoa::@7/uctoa::started#2, uctoa::@6/1 )
  [142] uctoa::value#6 = phi( uctoa::@7/uctoa::value#2, uctoa::@6/uctoa::value#0 )
  [143] uctoa::digit#1 = ++ uctoa::digit#2
  to:uctoa::@1
uctoa::@5: scope:[uctoa]  from uctoa::@2 uctoa::@7
  [144] uctoa_append::buffer#0 = uctoa::buffer#11
  [145] uctoa_append::value#0 = uctoa::value#2
  [146] uctoa_append::sub#0 = uctoa::digit_value#0
  [147] call uctoa_append
  [148] uctoa_append::return#0 = uctoa_append::value#2
  to:uctoa::@6
uctoa::@6: scope:[uctoa]  from uctoa::@5
  [149] uctoa::value#0 = uctoa_append::return#0
  [150] uctoa::buffer#4 = ++ uctoa::buffer#11
  to:uctoa::@4

void printf_number_buffer(void (*putc)(char) , char buffer_sign , char *buffer_digits , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
printf_number_buffer: scope:[printf_number_buffer]  from printf_uchar::@2
  [151] phi()
  to:printf_number_buffer::@4
printf_number_buffer::@4: scope:[printf_number_buffer]  from printf_number_buffer
  [152] phi()
  [153] call strlen
  [154] strlen::return#2 = strlen::len#2
  to:printf_number_buffer::@9
printf_number_buffer::@9: scope:[printf_number_buffer]  from printf_number_buffer::@4
  [155] printf_number_buffer::$19 = strlen::return#2
  [156] printf_number_buffer::len#0 = (signed char)printf_number_buffer::$19
  [157] if(0==printf_number_buffer::buffer_sign#0) goto printf_number_buffer::@8
  to:printf_number_buffer::@5
printf_number_buffer::@5: scope:[printf_number_buffer]  from printf_number_buffer::@9
  [158] printf_number_buffer::len#1 = ++ printf_number_buffer::len#0
  to:printf_number_buffer::@8
printf_number_buffer::@8: scope:[printf_number_buffer]  from printf_number_buffer::@5 printf_number_buffer::@9
  [159] printf_number_buffer::len#2 = phi( printf_number_buffer::@9/printf_number_buffer::len#0, printf_number_buffer::@5/printf_number_buffer::len#1 )
  [160] printf_number_buffer::padding#1 = (signed char)printf_uchar::format_min_length#0 - printf_number_buffer::len#2
  [161] if(printf_number_buffer::padding#1>=0) goto printf_number_buffer::@11
  to:printf_number_buffer::@1
printf_number_buffer::@11: scope:[printf_number_buffer]  from printf_number_buffer::@8
  [162] phi()
  to:printf_number_buffer::@1
printf_number_buffer::@1: scope:[printf_number_buffer]  from printf_number_buffer::@11 printf_number_buffer::@8
  [163] printf_number_buffer::padding#10 = phi( printf_number_buffer::@11/printf_number_buffer::padding#1, printf_number_buffer::@8/0 )
  to:printf_number_buffer::@10
printf_number_buffer::@10: scope:[printf_number_buffer]  from printf_number_buffer::@1
  [164] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@6
  to:printf_number_buffer::@2
printf_number_buffer::@6: scope:[printf_number_buffer]  from printf_number_buffer::@10
  [165] printf_padding::length#0 = (char)printf_number_buffer::padding#10
  [166] call printf_padding
  to:printf_number_buffer::@2
printf_number_buffer::@2: scope:[printf_number_buffer]  from printf_number_buffer::@10 printf_number_buffer::@6
  [167] if(0==printf_number_buffer::buffer_sign#0) goto printf_number_buffer::@3
  to:printf_number_buffer::@7
printf_number_buffer::@7: scope:[printf_number_buffer]  from printf_number_buffer::@2
  [168] stackpush(char) = printf_number_buffer::buffer_sign#0
  [169] callexecute cputc 
  sideeffect stackpullpadding(1)
  to:printf_number_buffer::@3
printf_number_buffer::@3: scope:[printf_number_buffer]  from printf_number_buffer::@2 printf_number_buffer::@7
  [171] phi()
  [172] call printf_str
  to:printf_number_buffer::@return
printf_number_buffer::@return: scope:[printf_number_buffer]  from printf_number_buffer::@3
  [173] return 
  to:@return

void * memcpy(void *destination , void *source , unsigned int num)
memcpy: scope:[memcpy]  from cscroll::@1 cscroll::@2
  [174] memcpy::destination#2 = phi( cscroll::@1/(void *)DEFAULT_SCREEN, cscroll::@2/(void *)COLORRAM )
  [174] memcpy::source#2 = phi( cscroll::@1/(void *)DEFAULT_SCREEN+$28, cscroll::@2/(void *)COLORRAM+$28 )
  [175] memcpy::src_end#0 = (char *)memcpy::source#2 + (unsigned int)$19*$28-$28
  [176] memcpy::src#4 = (char *)memcpy::source#2
  [177] memcpy::dst#4 = (char *)memcpy::destination#2
  to:memcpy::@1
memcpy::@1: scope:[memcpy]  from memcpy memcpy::@2
  [178] memcpy::dst#2 = phi( memcpy/memcpy::dst#4, memcpy::@2/memcpy::dst#1 )
  [178] memcpy::src#2 = phi( memcpy/memcpy::src#4, memcpy::@2/memcpy::src#1 )
  [179] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2
  to:memcpy::@return
memcpy::@return: scope:[memcpy]  from memcpy::@1
  [180] return 
  to:@return
memcpy::@2: scope:[memcpy]  from memcpy::@1
  [181] *memcpy::dst#2 = *memcpy::src#2
  [182] memcpy::dst#1 = ++ memcpy::dst#2
  [183] memcpy::src#1 = ++ memcpy::src#2
  to:memcpy::@1

void * memset(void *str , char c , unsigned int num)
memset: scope:[memset]  from cscroll::@3 cscroll::@4
  [184] memset::c#4 = phi( cscroll::@3/' ', cscroll::@4/LIGHT_BLUE )
  [184] memset::str#3 = phi( cscroll::@3/(void *)DEFAULT_SCREEN+(unsigned int)$19*$28-$28, cscroll::@4/(void *)COLORRAM+(unsigned int)$19*$28-$28 )
  to:memset::@1
memset::@1: scope:[memset]  from memset
  [185] memset::end#0 = (char *)memset::str#3 + $28
  [186] memset::dst#4 = (char *)memset::str#3
  to:memset::@2
memset::@2: scope:[memset]  from memset::@1 memset::@3
  [187] memset::dst#2 = phi( memset::@1/memset::dst#4, memset::@3/memset::dst#1 )
  [188] if(memset::dst#2!=memset::end#0) goto memset::@3
  to:memset::@return
memset::@return: scope:[memset]  from memset::@2
  [189] return 
  to:@return
memset::@3: scope:[memset]  from memset::@2
  [190] *memset::dst#2 = memset::c#4
  [191] memset::dst#1 = ++ memset::dst#2
  to:memset::@2

char uctoa_append(char *buffer , char value , char sub)
uctoa_append: scope:[uctoa_append]  from uctoa::@5
  [192] phi()
  to:uctoa_append::@1
uctoa_append::@1: scope:[uctoa_append]  from uctoa_append uctoa_append::@2
  [193] uctoa_append::digit#2 = phi( uctoa_append/0, uctoa_append::@2/uctoa_append::digit#1 )
  [193] uctoa_append::value#2 = phi( uctoa_append/uctoa_append::value#0, uctoa_append::@2/uctoa_append::value#1 )
  [194] if(uctoa_append::value#2>=uctoa_append::sub#0) goto uctoa_append::@2
  to:uctoa_append::@3
uctoa_append::@3: scope:[uctoa_append]  from uctoa_append::@1
  [195] *uctoa_append::buffer#0 = DIGITS[uctoa_append::digit#2]
  to:uctoa_append::@return
uctoa_append::@return: scope:[uctoa_append]  from uctoa_append::@3
  [196] return 
  to:@return
uctoa_append::@2: scope:[uctoa_append]  from uctoa_append::@1
  [197] uctoa_append::digit#1 = ++ uctoa_append::digit#2
  [198] uctoa_append::value#1 = uctoa_append::value#2 - uctoa_append::sub#0
  to:uctoa_append::@1

unsigned int strlen(char *str)
strlen: scope:[strlen]  from printf_number_buffer::@4
  [199] phi()
  to:strlen::@1
strlen::@1: scope:[strlen]  from strlen strlen::@2
  [200] strlen::len#2 = phi( strlen/0, strlen::@2/strlen::len#1 )
  [200] strlen::str#2 = phi( strlen/printf_number_buffer::buffer_digits#0, strlen::@2/strlen::str#0 )
  [201] if(0!=*strlen::str#2) goto strlen::@2
  to:strlen::@return
strlen::@return: scope:[strlen]  from strlen::@1
  [202] return 
  to:@return
strlen::@2: scope:[strlen]  from strlen::@1
  [203] strlen::len#1 = ++ strlen::len#2
  [204] strlen::str#0 = ++ strlen::str#2
  to:strlen::@1

void printf_padding(void (*putc)(char) , char pad , char length)
printf_padding: scope:[printf_padding]  from printf_number_buffer::@6
  [205] phi()
  to:printf_padding::@1
printf_padding::@1: scope:[printf_padding]  from printf_padding printf_padding::@3
  [206] printf_padding::i#2 = phi( printf_padding/0, printf_padding::@3/printf_padding::i#1 )
  [207] if(printf_padding::i#2<printf_padding::length#0) goto printf_padding::@2
  to:printf_padding::@return
printf_padding::@return: scope:[printf_padding]  from printf_padding::@1
  [208] return 
  to:@return
printf_padding::@2: scope:[printf_padding]  from printf_padding::@1
  [209] stackpush(char) = printf_padding::pad#0
  [210] callexecute cputc 
  sideeffect stackpullpadding(1)
  to:printf_padding::@3
printf_padding::@3: scope:[printf_padding]  from printf_padding::@2
  [212] printf_padding::i#1 = ++ printf_padding::i#2
  to:printf_padding::@1
