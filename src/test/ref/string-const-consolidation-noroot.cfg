
(void()) main()
main: scope:[main]  from
  [0] phi()
  [1] call print 
  to:main::@1
main::@1: scope:[main]  from main
  [2] phi()
  [3] call print 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [4] phi()
  [5] call print 
  to:main::@return
main::@return: scope:[main]  from main::@2
  [6] return 
  to:@return

(void()) print((byte*) print::string)
print: scope:[print]  from main main::@1 main::@2
  [7] (byte*) screen#20 ← phi( main/(byte*) 1024 main::@1/(byte*) screen#13 main::@2/(byte*) screen#13 )
  to:print::@1
print::@1: scope:[print]  from print print::@2
  [8] (byte*) screen#13 ← phi( print/(byte*) screen#20 print::@2/(byte*) screen#4 )
  [8] (byte*) print::string#4 ← phi( print/(const byte*) main::rex1 print::@2/(byte*) print::string#3 )
  [9] if((byte) 0!=*((byte*) print::string#4)) goto print::@2
  to:print::@return
print::@return: scope:[print]  from print::@1
  [10] return 
  to:@return
print::@2: scope:[print]  from print::@1
  [11] *((byte*) screen#13) ← *((byte*) print::string#4)
  [12] (byte*) screen#4 ← ++ (byte*) screen#13
  [13] (byte*) print::string#3 ← ++ (byte*) print::string#4
  to:print::@1
