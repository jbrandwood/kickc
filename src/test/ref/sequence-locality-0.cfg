@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()
main: scope:[main]  from @1
  [4] phi()
  to:main::@4
main::@4: scope:[main]  from main main::@1
  [5] (byte) main::idx#8 ← phi( main::@1/(byte) main::idx#3 main/(byte) 0 )
  [5] (byte) main::i#7 ← phi( main::@1/(byte) main::i#1 main/(byte) 0 )
  [6] (byte~) main::$1 ← (byte) main::i#7 - (byte) 5
  [7] *((const byte*) main::screen#0 + (byte) main::idx#8) ← (byte~) main::$1
  [8] (byte) main::idx#2 ← ++ (byte) main::idx#8
  to:main::@3
main::@3: scope:[main]  from main::@2 main::@4
  [9] (byte) main::i#8 ← phi( main::@2/(byte) main::i#1 main::@4/(byte) main::i#7 )
  [9] (byte) main::idx#3 ← phi( main::@2/(byte) main::idx#1 main::@4/(byte) main::idx#2 )
  [10] (byte) main::i#1 ← ++ (byte) main::i#8
  [11] if((byte) main::i#1!=(byte) $b) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@3
  [12] return 
  to:@return
main::@1: scope:[main]  from main::@3
  [13] if((byte) main::i#1>=(byte) 5+(byte) 1) goto main::@2
  to:main::@4
main::@2: scope:[main]  from main::@1
  [14] *((const byte*) main::screen#0 + (byte) main::idx#3) ← (byte) main::i#1
  [15] (byte) main::idx#1 ← ++ (byte) main::idx#3
  to:main::@3
