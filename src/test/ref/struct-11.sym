(label) @1
(label) @begin
(label) @end
(const byte*) DIGIT[]  = (byte*) "0123456789"
(const byte) OFFSET_STRUCT_PERSON_NAME = (byte) 1
(byte) Person::id
(const byte*) Person::name[(number) $40]  = { fill( $40, 0) }
(const byte*) SCREEN = (byte*) 1024
(struct Person) henriette loadstore mem[65] = { id: (byte) 7, name: (byte*) "henriette" }
(byte) idx
(byte) idx#13 reg byte y 3.0
(byte) idx#14 reg byte x 9.75
(byte) idx#16 reg byte y 1.0
(byte) idx#4 reg byte x 3.0
(byte) idx#5 reg byte x 4.0
(byte) idx#6 reg byte x 11.0
(struct Person) jesper loadstore mem[65] = { id: (byte) 4, name: (byte*) "jesper" }
(void()) main()
(label) main::@1
(label) main::@return
(void()) print_person((byte) print_person::person_id , (byte*) print_person::person_name)
(label) print_person::@1
(label) print_person::@2
(label) print_person::@3
(label) print_person::@return
(byte) print_person::i
(byte) print_person::i#1 reg byte y 22.0
(byte) print_person::i#2 reg byte y 11.0
(struct Person) print_person::person
(byte) print_person::person_id
(byte) print_person::person_id#0 reg byte x 4.0
(byte) print_person::person_id#1 reg byte x 4.0
(byte) print_person::person_id#2 reg byte x 6.0
(byte*) print_person::person_name
(byte*) print_person::person_name#4 person_name zp[2]:2 2.2

reg byte x [ print_person::person_id#2 print_person::person_id#0 print_person::person_id#1 ]
reg byte y [ idx#13 idx#16 ]
zp[2]:2 [ print_person::person_name#4 ]
reg byte y [ print_person::i#2 print_person::i#1 ]
reg byte x [ idx#14 idx#5 idx#6 ]
reg byte x [ idx#4 ]
mem[65] [ jesper ]
mem[65] [ henriette ]
