Inlined call vicSelectGfxBank::$0 = call toDd00 vicSelectGfxBank::gfx 
Inlined call main::$1 = call fileEntry 1 
Inlined call main::$2 = call fileEntry 2 
Inlined call initEntry::$0 = call entryBufDisk initEntry::entry 
Inlined call initEntry::$2 = call entryBufEdit initEntry::entry 
Inlined call initEntry::$4 = call entryTsLen initEntry::entry 
Inlined call initEntry::$6 = call entryTsOrder initEntry::entry 
Inlined call initEntry::$8 = call entryTLastLink initEntry::entry 
Inlined call initEntry::$10 = call entrySLastLink initEntry::entry 
Inlined call initEntry::$12 = call entryBFlag initEntry::entry 
Inlined call initEntry::$14 = call entryBError initEntry::entry 
Inlined call initEntry::$16 = call entryUCross initEntry::entry 
Inlined call initEntry::$18 = call entryBAddrLo initEntry::entry 
Inlined call initEntry::$20 = call entryBAddrHi initEntry::entry 
Inlined call initEntry::$22 = call entryTHi initEntry::entry 
Inlined call initEntry::$24 = call entryTLo initEntry::entry 
Inlined call printEntry::$1 = call entryBufDisk printEntry::entry 
Inlined call printEntry::$5 = call entryBufEdit printEntry::entry 
Inlined call printEntry::$9 = call entryTsLen printEntry::entry 
Inlined call printEntry::$13 = call entryTsOrder printEntry::entry 
Inlined call printEntry::$17 = call entryTLastLink printEntry::entry 
Inlined call printEntry::$21 = call entrySLastLink printEntry::entry 
Inlined call printEntry::$25 = call entryBFlag printEntry::entry 
Inlined call printEntry::$29 = call entryBError printEntry::entry 
Inlined call printEntry::$33 = call entryUCross printEntry::entry 
Inlined call printEntry::$37 = call entryBAddrLo printEntry::entry 
Inlined call printEntry::$41 = call entryBAddrHi printEntry::entry 
Inlined call printEntry::$45 = call entryTHi printEntry::entry 
Inlined call printEntry::$49 = call entryTLo printEntry::entry 
Inlined call call __init 

CONTROL FLOW GRAPH SSA

word mul8u(byte mul8u::a , byte mul8u::b)
mul8u: scope:[mul8u]  from main::fileEntry1 main::fileEntry2
  mul8u::a#6 = phi( main::fileEntry1/mul8u::a#1, main::fileEntry2/mul8u::a#2 )
  mul8u::b#2 = phi( main::fileEntry1/mul8u::b#0, main::fileEntry2/mul8u::b#1 )
  mul8u::res#0 = 0
  mul8u::mb#0 = (word)mul8u::b#2
  to:mul8u::@1
mul8u::@1: scope:[mul8u]  from mul8u mul8u::@4
  mul8u::mb#5 = phi( mul8u/mul8u::mb#0, mul8u::@4/mul8u::mb#1 )
  mul8u::res#4 = phi( mul8u/mul8u::res#0, mul8u::@4/mul8u::res#6 )
  mul8u::a#3 = phi( mul8u/mul8u::a#6, mul8u::@4/mul8u::a#0 )
  mul8u::$0 = mul8u::a#3 != 0
  if(mul8u::$0) goto mul8u::@2
  to:mul8u::@3
mul8u::@2: scope:[mul8u]  from mul8u::@1
  mul8u::res#5 = phi( mul8u::@1/mul8u::res#4 )
  mul8u::mb#4 = phi( mul8u::@1/mul8u::mb#5 )
  mul8u::a#4 = phi( mul8u::@1/mul8u::a#3 )
  mul8u::$1 = mul8u::a#4 & 1
  mul8u::$2 = mul8u::$1 != 0
  mul8u::$3 = ! mul8u::$2
  if(mul8u::$3) goto mul8u::@4
  to:mul8u::@5
mul8u::@3: scope:[mul8u]  from mul8u::@1
  mul8u::res#2 = phi( mul8u::@1/mul8u::res#4 )
  mul8u::return#0 = mul8u::res#2
  to:mul8u::@return
mul8u::@4: scope:[mul8u]  from mul8u::@2 mul8u::@5
  mul8u::res#6 = phi( mul8u::@2/mul8u::res#5, mul8u::@5/mul8u::res#1 )
  mul8u::mb#2 = phi( mul8u::@2/mul8u::mb#4, mul8u::@5/mul8u::mb#3 )
  mul8u::a#5 = phi( mul8u::@2/mul8u::a#4, mul8u::@5/mul8u::a#7 )
  mul8u::$5 = mul8u::a#5 >> 1
  mul8u::a#0 = mul8u::$5
  mul8u::$6 = mul8u::mb#2 << 1
  mul8u::mb#1 = mul8u::$6
  to:mul8u::@1
mul8u::@5: scope:[mul8u]  from mul8u::@2
  mul8u::a#7 = phi( mul8u::@2/mul8u::a#4 )
  mul8u::mb#3 = phi( mul8u::@2/mul8u::mb#4 )
  mul8u::res#3 = phi( mul8u::@2/mul8u::res#5 )
  mul8u::$4 = mul8u::res#3 + mul8u::mb#3
  mul8u::res#1 = mul8u::$4
  to:mul8u::@4
mul8u::@return: scope:[mul8u]  from mul8u::@3
  mul8u::return#4 = phi( mul8u::@3/mul8u::return#0 )
  mul8u::return#1 = mul8u::return#4
  return 
  to:@return

void* memset(void* memset::str , byte memset::c , word memset::num)
memset: scope:[memset]  from print_cls
  memset::c#4 = phi( print_cls/memset::c#0 )
  memset::str#3 = phi( print_cls/memset::str#0 )
  memset::num#1 = phi( print_cls/memset::num#0 )
  memset::$0 = memset::num#1 > 0
  memset::$1 = ! memset::$0
  if(memset::$1) goto memset::@1
  to:memset::@2
memset::@1: scope:[memset]  from memset memset::@3
  memset::str#1 = phi( memset/memset::str#3, memset::@3/memset::str#4 )
  memset::return#0 = memset::str#1
  to:memset::@return
memset::@2: scope:[memset]  from memset
  memset::c#3 = phi( memset/memset::c#4 )
  memset::num#2 = phi( memset/memset::num#1 )
  memset::str#2 = phi( memset/memset::str#3 )
  memset::$4 = (byte*)memset::str#2
  memset::$2 = memset::$4 + memset::num#2
  memset::end#0 = memset::$2
  memset::dst#0 = ((byte*)) memset::str#2
  to:memset::@3
memset::@3: scope:[memset]  from memset::@2 memset::@4
  memset::c#2 = phi( memset::@2/memset::c#3, memset::@4/memset::c#1 )
  memset::str#4 = phi( memset::@2/memset::str#2, memset::@4/memset::str#5 )
  memset::end#1 = phi( memset::@2/memset::end#0, memset::@4/memset::end#2 )
  memset::dst#2 = phi( memset::@2/memset::dst#0, memset::@4/memset::dst#1 )
  memset::$3 = memset::dst#2 != memset::end#1
  if(memset::$3) goto memset::@4
  to:memset::@1
memset::@4: scope:[memset]  from memset::@3
  memset::str#5 = phi( memset::@3/memset::str#4 )
  memset::end#2 = phi( memset::@3/memset::end#1 )
  memset::dst#3 = phi( memset::@3/memset::dst#2 )
  memset::c#1 = phi( memset::@3/memset::c#2 )
  *memset::dst#3 = memset::c#1
  memset::dst#1 = ++ memset::dst#3
  to:memset::@3
memset::@return: scope:[memset]  from memset::@1
  memset::return#3 = phi( memset::@1/memset::return#0 )
  memset::return#1 = memset::return#3
  return 
  to:@return

void print_str(byte* print_str::str)
print_str: scope:[print_str]  from main::@12 main::@17 main::@20 main::@25 printEntry printEntry::@16 printEntry::@19 printEntry::@22 printEntry::@25 printEntry::@28 printEntry::@31 printEntry::@34 printEntry::@37 printEntry::@40 printEntry::@43 printEntry::@46 printEntry::@49
  print_char_cursor#167 = phi( main::@12/print_char_cursor#14, main::@17/print_char_cursor#19, main::@20/print_char_cursor#21, main::@25/print_char_cursor#26, printEntry/print_char_cursor#152, printEntry::@16/print_char_cursor#32, printEntry::@19/print_char_cursor#35, printEntry::@22/print_char_cursor#38, printEntry::@25/print_char_cursor#41, printEntry::@28/print_char_cursor#44, printEntry::@31/print_char_cursor#47, printEntry::@34/print_char_cursor#50, printEntry::@37/print_char_cursor#53, printEntry::@40/print_char_cursor#56, printEntry::@43/print_char_cursor#59, printEntry::@46/print_char_cursor#62, printEntry::@49/print_char_cursor#65 )
  print_str::str#21 = phi( main::@12/print_str::str#1, main::@17/print_str::str#2, main::@20/print_str::str#3, main::@25/print_str::str#4, printEntry/print_str::str#5, printEntry::@16/print_str::str#6, printEntry::@19/print_str::str#7, printEntry::@22/print_str::str#8, printEntry::@25/print_str::str#9, printEntry::@28/print_str::str#10, printEntry::@31/print_str::str#11, printEntry::@34/print_str::str#12, printEntry::@37/print_str::str#13, printEntry::@40/print_str::str#14, printEntry::@43/print_str::str#15, printEntry::@46/print_str::str#16, printEntry::@49/print_str::str#17 )
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@3
  print_char_cursor#145 = phi( print_str/print_char_cursor#167, print_str::@3/print_char_cursor#0 )
  print_str::str#18 = phi( print_str/print_str::str#21, print_str::@3/print_str::str#0 )
  print_str::$1 = 0 != *print_str::str#18
  if(print_str::$1) goto print_str::@2
  to:print_str::@return
print_str::@2: scope:[print_str]  from print_str::@1
  print_char_cursor#144 = phi( print_str::@1/print_char_cursor#145 )
  print_str::str#19 = phi( print_str::@1/print_str::str#18 )
  print_char::ch#0 = *print_str::str#19
  call print_char 
  to:print_str::@3
print_str::@3: scope:[print_str]  from print_str::@2
  print_str::str#20 = phi( print_str::@2/print_str::str#19 )
  print_char_cursor#73 = phi( print_str::@2/print_char_cursor#11 )
  print_char_cursor#0 = print_char_cursor#73
  print_str::str#0 = ++ print_str::str#20
  to:print_str::@1
print_str::@return: scope:[print_str]  from print_str::@1
  print_char_cursor#74 = phi( print_str::@1/print_char_cursor#145 )
  print_char_cursor#1 = print_char_cursor#74
  return 
  to:@return

void print_ln()
print_ln: scope:[print_ln]  from main::@13 main::@14 main::@16 main::@21 main::@22 main::@24 printEntry::@15 printEntry::@18 printEntry::@21 printEntry::@24 printEntry::@27 printEntry::@30 printEntry::@33 printEntry::@36 printEntry::@39 printEntry::@42 printEntry::@45 printEntry::@48 printEntry::@51
  print_char_cursor#146 = phi( main::@13/print_char_cursor#15, main::@14/print_char_cursor#16, main::@16/print_char_cursor#18, main::@21/print_char_cursor#22, main::@22/print_char_cursor#23, main::@24/print_char_cursor#25, printEntry::@15/print_char_cursor#31, printEntry::@18/print_char_cursor#34, printEntry::@21/print_char_cursor#37, printEntry::@24/print_char_cursor#40, printEntry::@27/print_char_cursor#43, printEntry::@30/print_char_cursor#46, printEntry::@33/print_char_cursor#49, printEntry::@36/print_char_cursor#52, printEntry::@39/print_char_cursor#55, printEntry::@42/print_char_cursor#58, printEntry::@45/print_char_cursor#61, printEntry::@48/print_char_cursor#64, printEntry::@51/print_char_cursor#67 )
  print_line_cursor#65 = phi( main::@13/print_line_cursor#67, main::@14/print_line_cursor#5, main::@16/print_line_cursor#7, main::@21/print_line_cursor#69, main::@22/print_line_cursor#10, main::@24/print_line_cursor#12, printEntry::@15/print_line_cursor#71, printEntry::@18/print_line_cursor#72, printEntry::@21/print_line_cursor#73, printEntry::@24/print_line_cursor#74, printEntry::@27/print_line_cursor#75, printEntry::@30/print_line_cursor#76, printEntry::@33/print_line_cursor#77, printEntry::@36/print_line_cursor#78, printEntry::@39/print_line_cursor#79, printEntry::@42/print_line_cursor#80, printEntry::@45/print_line_cursor#81, printEntry::@48/print_line_cursor#82, printEntry::@51/print_line_cursor#83 )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  print_char_cursor#75 = phi( print_ln/print_char_cursor#146, print_ln::@1/print_char_cursor#75 )
  print_line_cursor#33 = phi( print_ln/print_line_cursor#65, print_ln::@1/print_line_cursor#0 )
  print_ln::$0 = print_line_cursor#33 + $28
  print_line_cursor#0 = print_ln::$0
  print_ln::$1 = print_line_cursor#0 < print_char_cursor#75
  if(print_ln::$1) goto print_ln::@1
  to:print_ln::@2
print_ln::@2: scope:[print_ln]  from print_ln::@1
  print_line_cursor#34 = phi( print_ln::@1/print_line_cursor#0 )
  print_char_cursor#2 = print_line_cursor#34
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@2
  print_char_cursor#76 = phi( print_ln::@2/print_char_cursor#2 )
  print_line_cursor#35 = phi( print_ln::@2/print_line_cursor#34 )
  print_line_cursor#1 = print_line_cursor#35
  print_char_cursor#3 = print_char_cursor#76
  return 
  to:@return

void print_uint(word print_uint::w)
print_uint: scope:[print_uint]  from printEntry::@1 printEntry::@2 printEntry::@3 printEntry::@4 printEntry::@9
  print_char_cursor#147 = phi( printEntry::@1/print_char_cursor#153, printEntry::@2/print_char_cursor#154, printEntry::@3/print_char_cursor#155, printEntry::@4/print_char_cursor#156, printEntry::@9/print_char_cursor#161 )
  print_uint::w#5 = phi( printEntry::@1/print_uint::w#0, printEntry::@2/print_uint::w#1, printEntry::@3/print_uint::w#2, printEntry::@4/print_uint::w#3, printEntry::@9/print_uint::w#4 )
  print_uint::$0 = > print_uint::w#5
  print_uchar::b#0 = print_uint::$0
  call print_uchar 
  to:print_uint::@1
print_uint::@1: scope:[print_uint]  from print_uint
  print_uint::w#6 = phi( print_uint/print_uint::w#5 )
  print_char_cursor#77 = phi( print_uint/print_char_cursor#9 )
  print_char_cursor#4 = print_char_cursor#77
  print_uint::$2 = < print_uint::w#6
  print_uchar::b#1 = print_uint::$2
  call print_uchar 
  to:print_uint::@2
print_uint::@2: scope:[print_uint]  from print_uint::@1
  print_char_cursor#78 = phi( print_uint::@1/print_char_cursor#9 )
  print_char_cursor#5 = print_char_cursor#78
  to:print_uint::@return
print_uint::@return: scope:[print_uint]  from print_uint::@2
  print_char_cursor#79 = phi( print_uint::@2/print_char_cursor#5 )
  print_char_cursor#6 = print_char_cursor#79
  return 
  to:@return

void print_uchar(byte print_uchar::b)
print_uchar: scope:[print_uchar]  from printEntry::@10 printEntry::@11 printEntry::@12 printEntry::@13 printEntry::@5 printEntry::@6 printEntry::@7 printEntry::@8 print_uint print_uint::@1
  print_char_cursor#148 = phi( printEntry::@10/print_char_cursor#162, printEntry::@11/print_char_cursor#163, printEntry::@12/print_char_cursor#164, printEntry::@13/print_char_cursor#165, printEntry::@5/print_char_cursor#157, printEntry::@6/print_char_cursor#158, printEntry::@7/print_char_cursor#159, printEntry::@8/print_char_cursor#160, print_uint/print_char_cursor#147, print_uint::@1/print_char_cursor#4 )
  print_uchar::b#10 = phi( printEntry::@10/print_uchar::b#6, printEntry::@11/print_uchar::b#7, printEntry::@12/print_uchar::b#8, printEntry::@13/print_uchar::b#9, printEntry::@5/print_uchar::b#2, printEntry::@6/print_uchar::b#3, printEntry::@7/print_uchar::b#4, printEntry::@8/print_uchar::b#5, print_uint/print_uchar::b#0, print_uint::@1/print_uchar::b#1 )
  print_uchar::$0 = print_uchar::b#10 >> 4
  print_char::ch#1 = print_hextab[print_uchar::$0]
  call print_char 
  to:print_uchar::@1
print_uchar::@1: scope:[print_uchar]  from print_uchar
  print_uchar::b#11 = phi( print_uchar/print_uchar::b#10 )
  print_char_cursor#80 = phi( print_uchar/print_char_cursor#11 )
  print_char_cursor#7 = print_char_cursor#80
  print_uchar::$2 = print_uchar::b#11 & $f
  print_char::ch#2 = print_hextab[print_uchar::$2]
  call print_char 
  to:print_uchar::@2
print_uchar::@2: scope:[print_uchar]  from print_uchar::@1
  print_char_cursor#81 = phi( print_uchar::@1/print_char_cursor#11 )
  print_char_cursor#8 = print_char_cursor#81
  to:print_uchar::@return
print_uchar::@return: scope:[print_uchar]  from print_uchar::@2
  print_char_cursor#82 = phi( print_uchar::@2/print_char_cursor#8 )
  print_char_cursor#9 = print_char_cursor#82
  return 
  to:@return

void print_char(byte print_char::ch)
print_char: scope:[print_char]  from print_str::@2 print_uchar print_uchar::@1
  print_char_cursor#83 = phi( print_str::@2/print_char_cursor#144, print_uchar/print_char_cursor#148, print_uchar::@1/print_char_cursor#7 )
  print_char::ch#3 = phi( print_str::@2/print_char::ch#0, print_uchar/print_char::ch#1, print_uchar::@1/print_char::ch#2 )
  *print_char_cursor#83 = print_char::ch#3
  print_char_cursor#10 = ++ print_char_cursor#83
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  print_char_cursor#84 = phi( print_char/print_char_cursor#10 )
  print_char_cursor#11 = print_char_cursor#84
  return 
  to:@return

void print_cls()
print_cls: scope:[print_cls]  from main::@11 main::@2 main::@4
  print_screen#2 = phi( main::@11/print_screen#5, main::@2/print_screen#6, main::@4/print_screen#7 )
  memset::str#0 = (void*)print_screen#2
  memset::c#0 = ' '
  memset::num#0 = $3e8
  call memset 
  memset::return#2 = memset::return#1
  to:print_cls::@1
print_cls::@1: scope:[print_cls]  from print_cls
  print_screen#3 = phi( print_cls/print_screen#2 )
  print_line_cursor#2 = print_screen#3
  print_char_cursor#12 = print_line_cursor#2
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls::@1
  print_char_cursor#85 = phi( print_cls::@1/print_char_cursor#12 )
  print_line_cursor#36 = phi( print_cls::@1/print_line_cursor#2 )
  print_line_cursor#3 = print_line_cursor#36
  print_char_cursor#13 = print_char_cursor#85
  return 
  to:@return

void keyboard_init()
keyboard_init: scope:[keyboard_init]  from main
  *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR) = $ff
  *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_B_DDR) = 0
  to:keyboard_init::@return
keyboard_init::@return: scope:[keyboard_init]  from keyboard_init
  return 
  to:@return

byte keyboard_matrix_read(byte keyboard_matrix_read::rowid)
keyboard_matrix_read: scope:[keyboard_matrix_read]  from keyboard_key_pressed
  keyboard_matrix_read::rowid#1 = phi( keyboard_key_pressed/keyboard_matrix_read::rowid#0 )
  *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_A) = keyboard_matrix_row_bitmask[keyboard_matrix_read::rowid#1]
  keyboard_matrix_read::$0 = ~ *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_B)
  keyboard_matrix_read::row_pressed_bits#0 = keyboard_matrix_read::$0
  keyboard_matrix_read::return#0 = keyboard_matrix_read::row_pressed_bits#0
  to:keyboard_matrix_read::@return
keyboard_matrix_read::@return: scope:[keyboard_matrix_read]  from keyboard_matrix_read
  keyboard_matrix_read::return#3 = phi( keyboard_matrix_read/keyboard_matrix_read::return#0 )
  keyboard_matrix_read::return#1 = keyboard_matrix_read::return#3
  return 
  to:@return

byte keyboard_key_pressed(byte keyboard_key_pressed::key)
keyboard_key_pressed: scope:[keyboard_key_pressed]  from main::@1 main::@3
  keyboard_key_pressed::key#2 = phi( main::@1/keyboard_key_pressed::key#0, main::@3/keyboard_key_pressed::key#1 )
  keyboard_key_pressed::$0 = keyboard_key_pressed::key#2 & 7
  keyboard_key_pressed::colidx#0 = keyboard_key_pressed::$0
  keyboard_key_pressed::$1 = keyboard_key_pressed::key#2 >> 3
  keyboard_key_pressed::rowidx#0 = keyboard_key_pressed::$1
  keyboard_matrix_read::rowid#0 = keyboard_key_pressed::rowidx#0
  call keyboard_matrix_read 
  keyboard_matrix_read::return#2 = keyboard_matrix_read::return#1
  to:keyboard_key_pressed::@1
keyboard_key_pressed::@1: scope:[keyboard_key_pressed]  from keyboard_key_pressed
  keyboard_key_pressed::colidx#1 = phi( keyboard_key_pressed/keyboard_key_pressed::colidx#0 )
  keyboard_matrix_read::return#4 = phi( keyboard_key_pressed/keyboard_matrix_read::return#2 )
  keyboard_key_pressed::$2 = keyboard_matrix_read::return#4
  keyboard_key_pressed::$3 = keyboard_key_pressed::$2 & keyboard_matrix_col_bitmask[keyboard_key_pressed::colidx#1]
  keyboard_key_pressed::return#0 = keyboard_key_pressed::$3
  to:keyboard_key_pressed::@return
keyboard_key_pressed::@return: scope:[keyboard_key_pressed]  from keyboard_key_pressed::@1
  keyboard_key_pressed::return#4 = phi( keyboard_key_pressed::@1/keyboard_key_pressed::return#0 )
  keyboard_key_pressed::return#1 = keyboard_key_pressed::return#4
  return 
  to:@return

void main()
main: scope:[main]  from __start::@1
  print_char_cursor#208 = phi( __start::@1/print_char_cursor#166 )
  print_line_cursor#154 = phi( __start::@1/print_line_cursor#84 )
  print_screen#38 = phi( __start::@1/print_screen#12 )
  call keyboard_init 
  to:main::@7
main::@7: scope:[main]  from main
  print_char_cursor#207 = phi( main/print_char_cursor#208 )
  print_line_cursor#153 = phi( main/print_line_cursor#154 )
  print_screen#37 = phi( main/print_screen#38 )
  main::fileEntry1_idx#0 = 1
  to:main::fileEntry1
main::fileEntry1: scope:[main]  from main::@7
  print_char_cursor#206 = phi( main::@7/print_char_cursor#207 )
  print_line_cursor#152 = phi( main::@7/print_line_cursor#153 )
  print_screen#34 = phi( main::@7/print_screen#37 )
  main::fileEntry1_idx#1 = phi( main::@7/main::fileEntry1_idx#0 )
  mul8u::a#1 = main::fileEntry1_idx#1
  mul8u::b#0 = SIZEOF_ENTRY
  call mul8u 
  mul8u::return#2 = mul8u::return#1
  to:main::@8
main::@8: scope:[main]  from main::fileEntry1
  print_char_cursor#205 = phi( main::fileEntry1/print_char_cursor#206 )
  print_line_cursor#151 = phi( main::fileEntry1/print_line_cursor#152 )
  print_screen#31 = phi( main::fileEntry1/print_screen#34 )
  mul8u::return#5 = phi( main::fileEntry1/mul8u::return#2 )
  main::fileEntry1_$0 = mul8u::return#5
  main::fileEntry1_$1 = files + main::fileEntry1_$0
  main::fileEntry1_return#0 = main::fileEntry1_$1
  to:main::fileEntry1_@return
main::fileEntry1_@return: scope:[main]  from main::@8
  print_char_cursor#204 = phi( main::@8/print_char_cursor#205 )
  print_line_cursor#150 = phi( main::@8/print_line_cursor#151 )
  print_screen#28 = phi( main::@8/print_screen#31 )
  main::fileEntry1_return#2 = phi( main::@8/main::fileEntry1_return#0 )
  main::fileEntry1_return#1 = main::fileEntry1_return#2
  to:main::@5
main::@5: scope:[main]  from main::fileEntry1_@return
  print_char_cursor#203 = phi( main::fileEntry1_@return/print_char_cursor#204 )
  print_line_cursor#149 = phi( main::fileEntry1_@return/print_line_cursor#150 )
  print_screen#25 = phi( main::fileEntry1_@return/print_screen#28 )
  main::fileEntry1_return#3 = phi( main::fileEntry1_@return/main::fileEntry1_return#1 )
  main::$1 = main::fileEntry1_return#3
  main::entry1#0 = main::$1
  main::fileEntry2_idx#0 = 2
  to:main::fileEntry2
main::fileEntry2: scope:[main]  from main::@5
  print_char_cursor#202 = phi( main::@5/print_char_cursor#203 )
  print_line_cursor#147 = phi( main::@5/print_line_cursor#149 )
  print_screen#22 = phi( main::@5/print_screen#25 )
  main::entry1#7 = phi( main::@5/main::entry1#0 )
  main::fileEntry2_idx#1 = phi( main::@5/main::fileEntry2_idx#0 )
  mul8u::a#2 = main::fileEntry2_idx#1
  mul8u::b#1 = SIZEOF_ENTRY
  call mul8u 
  mul8u::return#3 = mul8u::return#1
  to:main::@9
main::@9: scope:[main]  from main::fileEntry2
  print_char_cursor#201 = phi( main::fileEntry2/print_char_cursor#202 )
  print_line_cursor#133 = phi( main::fileEntry2/print_line_cursor#147 )
  print_screen#19 = phi( main::fileEntry2/print_screen#22 )
  main::entry1#5 = phi( main::fileEntry2/main::entry1#7 )
  mul8u::return#6 = phi( main::fileEntry2/mul8u::return#3 )
  main::fileEntry2_$0 = mul8u::return#6
  main::fileEntry2_$1 = files + main::fileEntry2_$0
  main::fileEntry2_return#0 = main::fileEntry2_$1
  to:main::fileEntry2_@return
main::fileEntry2_@return: scope:[main]  from main::@9
  print_char_cursor#200 = phi( main::@9/print_char_cursor#201 )
  print_line_cursor#117 = phi( main::@9/print_line_cursor#133 )
  print_screen#16 = phi( main::@9/print_screen#19 )
  main::entry1#3 = phi( main::@9/main::entry1#5 )
  main::fileEntry2_return#2 = phi( main::@9/main::fileEntry2_return#0 )
  main::fileEntry2_return#1 = main::fileEntry2_return#2
  to:main::@6
main::@6: scope:[main]  from main::fileEntry2_@return
  print_char_cursor#184 = phi( main::fileEntry2_@return/print_char_cursor#200 )
  print_line_cursor#101 = phi( main::fileEntry2_@return/print_line_cursor#117 )
  print_screen#13 = phi( main::fileEntry2_@return/print_screen#16 )
  main::entry1#1 = phi( main::fileEntry2_@return/main::entry1#3 )
  main::fileEntry2_return#3 = phi( main::fileEntry2_@return/main::fileEntry2_return#1 )
  main::$2 = main::fileEntry2_return#3
  main::entry2#0 = main::$2
  initEntry::entry#0 = main::entry1#1
  initEntry::n#0 = 0
  call initEntry 
  to:main::@10
main::@10: scope:[main]  from main::@6
  main::entry1#10 = phi( main::@6/main::entry1#1 )
  print_char_cursor#168 = phi( main::@6/print_char_cursor#184 )
  print_line_cursor#85 = phi( main::@6/print_line_cursor#101 )
  print_screen#9 = phi( main::@6/print_screen#13 )
  main::entry2#1 = phi( main::@6/main::entry2#0 )
  initEntry::entry#1 = main::entry2#1
  initEntry::n#1 = $11
  call initEntry 
  to:main::@11
main::@11: scope:[main]  from main::@10
  main::entry2#16 = phi( main::@10/main::entry2#1 )
  main::entry1#9 = phi( main::@10/main::entry1#10 )
  print_char_cursor#149 = phi( main::@10/print_char_cursor#168 )
  print_line_cursor#66 = phi( main::@10/print_line_cursor#85 )
  print_screen#5 = phi( main::@10/print_screen#9 )
  call print_cls 
  to:main::@12
main::@12: scope:[main]  from main::@11
  main::entry2#15 = phi( main::@11/main::entry2#16 )
  print_screen#35 = phi( main::@11/print_screen#5 )
  main::entry1#8 = phi( main::@11/main::entry1#9 )
  print_char_cursor#86 = phi( main::@11/print_char_cursor#13 )
  print_line_cursor#37 = phi( main::@11/print_line_cursor#3 )
  print_line_cursor#4 = print_line_cursor#37
  print_char_cursor#14 = print_char_cursor#86
  print_str::str#1 = main::str
  call print_str 
  to:main::@13
main::@13: scope:[main]  from main::@12
  main::entry2#14 = phi( main::@12/main::entry2#15 )
  print_screen#32 = phi( main::@12/print_screen#35 )
  main::entry1#6 = phi( main::@12/main::entry1#8 )
  print_line_cursor#67 = phi( main::@12/print_line_cursor#4 )
  print_char_cursor#87 = phi( main::@12/print_char_cursor#1 )
  print_char_cursor#15 = print_char_cursor#87
  call print_ln 
  to:main::@14
main::@14: scope:[main]  from main::@13
  main::entry2#13 = phi( main::@13/main::entry2#14 )
  print_screen#29 = phi( main::@13/print_screen#32 )
  main::entry1#4 = phi( main::@13/main::entry1#6 )
  print_char_cursor#88 = phi( main::@13/print_char_cursor#3 )
  print_line_cursor#38 = phi( main::@13/print_line_cursor#1 )
  print_line_cursor#5 = print_line_cursor#38
  print_char_cursor#16 = print_char_cursor#88
  call print_ln 
  to:main::@15
main::@15: scope:[main]  from main::@14
  main::entry2#12 = phi( main::@14/main::entry2#13 )
  print_screen#26 = phi( main::@14/print_screen#29 )
  main::entry1#2 = phi( main::@14/main::entry1#4 )
  print_char_cursor#89 = phi( main::@14/print_char_cursor#3 )
  print_line_cursor#39 = phi( main::@14/print_line_cursor#1 )
  print_line_cursor#6 = print_line_cursor#39
  print_char_cursor#17 = print_char_cursor#89
  printEntry::entry#0 = main::entry1#2
  call printEntry 
  to:main::@16
main::@16: scope:[main]  from main::@15
  main::entry2#11 = phi( main::@15/main::entry2#12 )
  print_screen#23 = phi( main::@15/print_screen#26 )
  print_line_cursor#40 = phi( main::@15/print_line_cursor#29 )
  print_char_cursor#90 = phi( main::@15/print_char_cursor#69 )
  print_char_cursor#18 = print_char_cursor#90
  print_line_cursor#7 = print_line_cursor#40
  call print_ln 
  to:main::@17
main::@17: scope:[main]  from main::@16
  main::entry2#10 = phi( main::@16/main::entry2#11 )
  print_screen#20 = phi( main::@16/print_screen#23 )
  print_char_cursor#91 = phi( main::@16/print_char_cursor#3 )
  print_line_cursor#41 = phi( main::@16/print_line_cursor#1 )
  print_line_cursor#8 = print_line_cursor#41
  print_char_cursor#19 = print_char_cursor#91
  print_str::str#2 = main::str1
  call print_str 
  to:main::@18
main::@18: scope:[main]  from main::@17
  main::entry2#9 = phi( main::@17/main::entry2#10 )
  print_line_cursor#118 = phi( main::@17/print_line_cursor#8 )
  print_screen#17 = phi( main::@17/print_screen#20 )
  print_char_cursor#92 = phi( main::@17/print_char_cursor#1 )
  print_char_cursor#20 = print_char_cursor#92
  to:main::@1
main::@1: scope:[main]  from main::@18 main::@19
  main::entry2#8 = phi( main::@18/main::entry2#9, main::@19/main::entry2#7 )
  print_char_cursor#185 = phi( main::@18/print_char_cursor#20, main::@19/print_char_cursor#169 )
  print_line_cursor#102 = phi( main::@18/print_line_cursor#118, main::@19/print_line_cursor#86 )
  print_screen#14 = phi( main::@18/print_screen#17, main::@19/print_screen#10 )
  keyboard_key_pressed::key#0 = KEY_SPACE
  call keyboard_key_pressed 
  keyboard_key_pressed::return#2 = keyboard_key_pressed::return#1
  to:main::@19
main::@19: scope:[main]  from main::@1
  main::entry2#7 = phi( main::@1/main::entry2#8 )
  print_char_cursor#169 = phi( main::@1/print_char_cursor#185 )
  print_line_cursor#86 = phi( main::@1/print_line_cursor#102 )
  print_screen#10 = phi( main::@1/print_screen#14 )
  keyboard_key_pressed::return#5 = phi( main::@1/keyboard_key_pressed::return#2 )
  main::$20 = keyboard_key_pressed::return#5
  main::$21 = main::$20 == 0
  if(main::$21) goto main::@1
  to:main::@2
main::@2: scope:[main]  from main::@19
  main::entry2#6 = phi( main::@19/main::entry2#7 )
  print_char_cursor#150 = phi( main::@19/print_char_cursor#169 )
  print_line_cursor#68 = phi( main::@19/print_line_cursor#86 )
  print_screen#6 = phi( main::@19/print_screen#10 )
  call print_cls 
  to:main::@20
main::@20: scope:[main]  from main::@2
  print_screen#36 = phi( main::@2/print_screen#6 )
  main::entry2#5 = phi( main::@2/main::entry2#6 )
  print_char_cursor#93 = phi( main::@2/print_char_cursor#13 )
  print_line_cursor#42 = phi( main::@2/print_line_cursor#3 )
  print_line_cursor#9 = print_line_cursor#42
  print_char_cursor#21 = print_char_cursor#93
  print_str::str#3 = main::str2
  call print_str 
  to:main::@21
main::@21: scope:[main]  from main::@20
  print_screen#33 = phi( main::@20/print_screen#36 )
  main::entry2#4 = phi( main::@20/main::entry2#5 )
  print_line_cursor#69 = phi( main::@20/print_line_cursor#9 )
  print_char_cursor#94 = phi( main::@20/print_char_cursor#1 )
  print_char_cursor#22 = print_char_cursor#94
  call print_ln 
  to:main::@22
main::@22: scope:[main]  from main::@21
  print_screen#30 = phi( main::@21/print_screen#33 )
  main::entry2#3 = phi( main::@21/main::entry2#4 )
  print_char_cursor#95 = phi( main::@21/print_char_cursor#3 )
  print_line_cursor#43 = phi( main::@21/print_line_cursor#1 )
  print_line_cursor#10 = print_line_cursor#43
  print_char_cursor#23 = print_char_cursor#95
  call print_ln 
  to:main::@23
main::@23: scope:[main]  from main::@22
  print_screen#27 = phi( main::@22/print_screen#30 )
  main::entry2#2 = phi( main::@22/main::entry2#3 )
  print_char_cursor#96 = phi( main::@22/print_char_cursor#3 )
  print_line_cursor#44 = phi( main::@22/print_line_cursor#1 )
  print_line_cursor#11 = print_line_cursor#44
  print_char_cursor#24 = print_char_cursor#96
  printEntry::entry#1 = main::entry2#2
  call printEntry 
  to:main::@24
main::@24: scope:[main]  from main::@23
  print_screen#24 = phi( main::@23/print_screen#27 )
  print_line_cursor#45 = phi( main::@23/print_line_cursor#29 )
  print_char_cursor#97 = phi( main::@23/print_char_cursor#69 )
  print_char_cursor#25 = print_char_cursor#97
  print_line_cursor#12 = print_line_cursor#45
  call print_ln 
  to:main::@25
main::@25: scope:[main]  from main::@24
  print_screen#21 = phi( main::@24/print_screen#24 )
  print_char_cursor#98 = phi( main::@24/print_char_cursor#3 )
  print_line_cursor#46 = phi( main::@24/print_line_cursor#1 )
  print_line_cursor#13 = print_line_cursor#46
  print_char_cursor#26 = print_char_cursor#98
  print_str::str#4 = main::str3
  call print_str 
  to:main::@26
main::@26: scope:[main]  from main::@25
  print_line_cursor#119 = phi( main::@25/print_line_cursor#13 )
  print_screen#18 = phi( main::@25/print_screen#21 )
  print_char_cursor#99 = phi( main::@25/print_char_cursor#1 )
  print_char_cursor#27 = print_char_cursor#99
  to:main::@3
main::@3: scope:[main]  from main::@26 main::@27
  print_char_cursor#186 = phi( main::@26/print_char_cursor#27, main::@27/print_char_cursor#170 )
  print_line_cursor#103 = phi( main::@26/print_line_cursor#119, main::@27/print_line_cursor#87 )
  print_screen#15 = phi( main::@26/print_screen#18, main::@27/print_screen#11 )
  keyboard_key_pressed::key#1 = KEY_SPACE
  call keyboard_key_pressed 
  keyboard_key_pressed::return#3 = keyboard_key_pressed::return#1
  to:main::@27
main::@27: scope:[main]  from main::@3
  print_char_cursor#170 = phi( main::@3/print_char_cursor#186 )
  print_line_cursor#87 = phi( main::@3/print_line_cursor#103 )
  print_screen#11 = phi( main::@3/print_screen#15 )
  keyboard_key_pressed::return#6 = phi( main::@3/keyboard_key_pressed::return#3 )
  main::$22 = keyboard_key_pressed::return#6
  main::$23 = main::$22 == 0
  if(main::$23) goto main::@3
  to:main::@4
main::@4: scope:[main]  from main::@27
  print_char_cursor#151 = phi( main::@27/print_char_cursor#170 )
  print_line_cursor#70 = phi( main::@27/print_line_cursor#87 )
  print_screen#7 = phi( main::@27/print_screen#11 )
  call print_cls 
  to:main::@28
main::@28: scope:[main]  from main::@4
  print_char_cursor#100 = phi( main::@4/print_char_cursor#13 )
  print_line_cursor#47 = phi( main::@4/print_line_cursor#3 )
  print_line_cursor#14 = print_line_cursor#47
  print_char_cursor#28 = print_char_cursor#100
  to:main::@return
main::@return: scope:[main]  from main::@28
  print_char_cursor#101 = phi( main::@28/print_char_cursor#28 )
  print_line_cursor#48 = phi( main::@28/print_line_cursor#14 )
  print_line_cursor#15 = print_line_cursor#48
  print_char_cursor#29 = print_char_cursor#101
  return 
  to:@return

void initEntry(byte* initEntry::entry , byte initEntry::n)
initEntry: scope:[initEntry]  from main::@10 main::@6
  initEntry::n#41 = phi( main::@10/initEntry::n#1, main::@6/initEntry::n#0 )
  initEntry::entry#2 = phi( main::@10/initEntry::entry#1, main::@6/initEntry::entry#0 )
  initEntry::entryBufDisk1_entry#0 = initEntry::entry#2
  to:initEntry::entryBufDisk1
initEntry::entryBufDisk1: scope:[initEntry]  from initEntry
  initEntry::entry#27 = phi( initEntry/initEntry::entry#2 )
  initEntry::n#28 = phi( initEntry/initEntry::n#41 )
  initEntry::entryBufDisk1_entry#1 = phi( initEntry/initEntry::entryBufDisk1_entry#0 )
  initEntry::entryBufDisk1_$0 = initEntry::entryBufDisk1_entry#1 + 0
  initEntry::entryBufDisk1_return#0 = (byte**)initEntry::entryBufDisk1_$0
  to:initEntry::entryBufDisk1_@return
initEntry::entryBufDisk1_@return: scope:[initEntry]  from initEntry::entryBufDisk1
  initEntry::entry#15 = phi( initEntry::entryBufDisk1/initEntry::entry#27 )
  initEntry::n#15 = phi( initEntry::entryBufDisk1/initEntry::n#28 )
  initEntry::entryBufDisk1_return#2 = phi( initEntry::entryBufDisk1/initEntry::entryBufDisk1_return#0 )
  initEntry::entryBufDisk1_return#1 = initEntry::entryBufDisk1_return#2
  to:initEntry::@1
initEntry::@1: scope:[initEntry]  from initEntry::entryBufDisk1_@return
  initEntry::entry#3 = phi( initEntry::entryBufDisk1_@return/initEntry::entry#15 )
  initEntry::n#2 = phi( initEntry::entryBufDisk1_@return/initEntry::n#15 )
  initEntry::entryBufDisk1_return#3 = phi( initEntry::entryBufDisk1_@return/initEntry::entryBufDisk1_return#1 )
  initEntry::$0 = initEntry::entryBufDisk1_return#3
  initEntry::$1 = $1111 + initEntry::n#2
  *initEntry::$0 = ((byte*)) initEntry::$1
  initEntry::entryBufEdit1_entry#0 = initEntry::entry#3
  to:initEntry::entryBufEdit1
initEntry::entryBufEdit1: scope:[initEntry]  from initEntry::@1
  initEntry::entry#28 = phi( initEntry::@1/initEntry::entry#3 )
  initEntry::n#29 = phi( initEntry::@1/initEntry::n#2 )
  initEntry::entryBufEdit1_entry#1 = phi( initEntry::@1/initEntry::entryBufEdit1_entry#0 )
  initEntry::entryBufEdit1_$0 = initEntry::entryBufEdit1_entry#1 + 2
  initEntry::entryBufEdit1_return#0 = (byte**)initEntry::entryBufEdit1_$0
  to:initEntry::entryBufEdit1_@return
initEntry::entryBufEdit1_@return: scope:[initEntry]  from initEntry::entryBufEdit1
  initEntry::entry#16 = phi( initEntry::entryBufEdit1/initEntry::entry#28 )
  initEntry::n#16 = phi( initEntry::entryBufEdit1/initEntry::n#29 )
  initEntry::entryBufEdit1_return#2 = phi( initEntry::entryBufEdit1/initEntry::entryBufEdit1_return#0 )
  initEntry::entryBufEdit1_return#1 = initEntry::entryBufEdit1_return#2
  to:initEntry::@2
initEntry::@2: scope:[initEntry]  from initEntry::entryBufEdit1_@return
  initEntry::entry#4 = phi( initEntry::entryBufEdit1_@return/initEntry::entry#16 )
  initEntry::n#3 = phi( initEntry::entryBufEdit1_@return/initEntry::n#16 )
  initEntry::entryBufEdit1_return#3 = phi( initEntry::entryBufEdit1_@return/initEntry::entryBufEdit1_return#1 )
  initEntry::$2 = initEntry::entryBufEdit1_return#3
  initEntry::$3 = $2222 + initEntry::n#3
  *initEntry::$2 = ((byte*)) initEntry::$3
  initEntry::entryTsLen1_entry#0 = initEntry::entry#4
  to:initEntry::entryTsLen1
initEntry::entryTsLen1: scope:[initEntry]  from initEntry::@2
  initEntry::entry#29 = phi( initEntry::@2/initEntry::entry#4 )
  initEntry::n#30 = phi( initEntry::@2/initEntry::n#3 )
  initEntry::entryTsLen1_entry#1 = phi( initEntry::@2/initEntry::entryTsLen1_entry#0 )
  initEntry::entryTsLen1_$0 = initEntry::entryTsLen1_entry#1 + 4
  initEntry::entryTsLen1_return#0 = (word*)initEntry::entryTsLen1_$0
  to:initEntry::entryTsLen1_@return
initEntry::entryTsLen1_@return: scope:[initEntry]  from initEntry::entryTsLen1
  initEntry::entry#17 = phi( initEntry::entryTsLen1/initEntry::entry#29 )
  initEntry::n#17 = phi( initEntry::entryTsLen1/initEntry::n#30 )
  initEntry::entryTsLen1_return#2 = phi( initEntry::entryTsLen1/initEntry::entryTsLen1_return#0 )
  initEntry::entryTsLen1_return#1 = initEntry::entryTsLen1_return#2
  to:initEntry::@3
initEntry::@3: scope:[initEntry]  from initEntry::entryTsLen1_@return
  initEntry::entry#5 = phi( initEntry::entryTsLen1_@return/initEntry::entry#17 )
  initEntry::n#4 = phi( initEntry::entryTsLen1_@return/initEntry::n#17 )
  initEntry::entryTsLen1_return#3 = phi( initEntry::entryTsLen1_@return/initEntry::entryTsLen1_return#1 )
  initEntry::$4 = initEntry::entryTsLen1_return#3
  initEntry::$5 = $3333 + initEntry::n#4
  *initEntry::$4 = initEntry::$5
  initEntry::entryTsOrder1_entry#0 = initEntry::entry#5
  to:initEntry::entryTsOrder1
initEntry::entryTsOrder1: scope:[initEntry]  from initEntry::@3
  initEntry::entry#30 = phi( initEntry::@3/initEntry::entry#5 )
  initEntry::n#31 = phi( initEntry::@3/initEntry::n#4 )
  initEntry::entryTsOrder1_entry#1 = phi( initEntry::@3/initEntry::entryTsOrder1_entry#0 )
  initEntry::entryTsOrder1_$0 = initEntry::entryTsOrder1_entry#1 + 6
  initEntry::entryTsOrder1_return#0 = (word**)initEntry::entryTsOrder1_$0
  to:initEntry::entryTsOrder1_@return
initEntry::entryTsOrder1_@return: scope:[initEntry]  from initEntry::entryTsOrder1
  initEntry::entry#18 = phi( initEntry::entryTsOrder1/initEntry::entry#30 )
  initEntry::n#18 = phi( initEntry::entryTsOrder1/initEntry::n#31 )
  initEntry::entryTsOrder1_return#2 = phi( initEntry::entryTsOrder1/initEntry::entryTsOrder1_return#0 )
  initEntry::entryTsOrder1_return#1 = initEntry::entryTsOrder1_return#2
  to:initEntry::@4
initEntry::@4: scope:[initEntry]  from initEntry::entryTsOrder1_@return
  initEntry::entry#6 = phi( initEntry::entryTsOrder1_@return/initEntry::entry#18 )
  initEntry::n#5 = phi( initEntry::entryTsOrder1_@return/initEntry::n#18 )
  initEntry::entryTsOrder1_return#3 = phi( initEntry::entryTsOrder1_@return/initEntry::entryTsOrder1_return#1 )
  initEntry::$6 = initEntry::entryTsOrder1_return#3
  initEntry::$7 = $4444 + initEntry::n#5
  *initEntry::$6 = ((word*)) initEntry::$7
  initEntry::entryTLastLink1_entry#0 = initEntry::entry#6
  to:initEntry::entryTLastLink1
initEntry::entryTLastLink1: scope:[initEntry]  from initEntry::@4
  initEntry::entry#31 = phi( initEntry::@4/initEntry::entry#6 )
  initEntry::n#32 = phi( initEntry::@4/initEntry::n#5 )
  initEntry::entryTLastLink1_entry#1 = phi( initEntry::@4/initEntry::entryTLastLink1_entry#0 )
  initEntry::entryTLastLink1_$0 = initEntry::entryTLastLink1_entry#1 + 8
  initEntry::entryTLastLink1_return#0 = (byte*)initEntry::entryTLastLink1_$0
  to:initEntry::entryTLastLink1_@return
initEntry::entryTLastLink1_@return: scope:[initEntry]  from initEntry::entryTLastLink1
  initEntry::entry#19 = phi( initEntry::entryTLastLink1/initEntry::entry#31 )
  initEntry::n#19 = phi( initEntry::entryTLastLink1/initEntry::n#32 )
  initEntry::entryTLastLink1_return#2 = phi( initEntry::entryTLastLink1/initEntry::entryTLastLink1_return#0 )
  initEntry::entryTLastLink1_return#1 = initEntry::entryTLastLink1_return#2
  to:initEntry::@5
initEntry::@5: scope:[initEntry]  from initEntry::entryTLastLink1_@return
  initEntry::entry#7 = phi( initEntry::entryTLastLink1_@return/initEntry::entry#19 )
  initEntry::n#6 = phi( initEntry::entryTLastLink1_@return/initEntry::n#19 )
  initEntry::entryTLastLink1_return#3 = phi( initEntry::entryTLastLink1_@return/initEntry::entryTLastLink1_return#1 )
  initEntry::$8 = initEntry::entryTLastLink1_return#3
  initEntry::$9 = $55 + initEntry::n#6
  *initEntry::$8 = initEntry::$9
  initEntry::entrySLastLink1_entry#0 = initEntry::entry#7
  to:initEntry::entrySLastLink1
initEntry::entrySLastLink1: scope:[initEntry]  from initEntry::@5
  initEntry::entry#32 = phi( initEntry::@5/initEntry::entry#7 )
  initEntry::n#33 = phi( initEntry::@5/initEntry::n#6 )
  initEntry::entrySLastLink1_entry#1 = phi( initEntry::@5/initEntry::entrySLastLink1_entry#0 )
  initEntry::entrySLastLink1_$0 = initEntry::entrySLastLink1_entry#1 + 9
  initEntry::entrySLastLink1_return#0 = (byte*)initEntry::entrySLastLink1_$0
  to:initEntry::entrySLastLink1_@return
initEntry::entrySLastLink1_@return: scope:[initEntry]  from initEntry::entrySLastLink1
  initEntry::entry#20 = phi( initEntry::entrySLastLink1/initEntry::entry#32 )
  initEntry::n#20 = phi( initEntry::entrySLastLink1/initEntry::n#33 )
  initEntry::entrySLastLink1_return#2 = phi( initEntry::entrySLastLink1/initEntry::entrySLastLink1_return#0 )
  initEntry::entrySLastLink1_return#1 = initEntry::entrySLastLink1_return#2
  to:initEntry::@6
initEntry::@6: scope:[initEntry]  from initEntry::entrySLastLink1_@return
  initEntry::entry#8 = phi( initEntry::entrySLastLink1_@return/initEntry::entry#20 )
  initEntry::n#7 = phi( initEntry::entrySLastLink1_@return/initEntry::n#20 )
  initEntry::entrySLastLink1_return#3 = phi( initEntry::entrySLastLink1_@return/initEntry::entrySLastLink1_return#1 )
  initEntry::$10 = initEntry::entrySLastLink1_return#3
  initEntry::$11 = $66 + initEntry::n#7
  *initEntry::$10 = initEntry::$11
  initEntry::entryBFlag1_entry#0 = initEntry::entry#8
  to:initEntry::entryBFlag1
initEntry::entryBFlag1: scope:[initEntry]  from initEntry::@6
  initEntry::entry#33 = phi( initEntry::@6/initEntry::entry#8 )
  initEntry::n#34 = phi( initEntry::@6/initEntry::n#7 )
  initEntry::entryBFlag1_entry#1 = phi( initEntry::@6/initEntry::entryBFlag1_entry#0 )
  initEntry::entryBFlag1_$0 = initEntry::entryBFlag1_entry#1 + $a
  initEntry::entryBFlag1_return#0 = (byte*)initEntry::entryBFlag1_$0
  to:initEntry::entryBFlag1_@return
initEntry::entryBFlag1_@return: scope:[initEntry]  from initEntry::entryBFlag1
  initEntry::entry#21 = phi( initEntry::entryBFlag1/initEntry::entry#33 )
  initEntry::n#21 = phi( initEntry::entryBFlag1/initEntry::n#34 )
  initEntry::entryBFlag1_return#2 = phi( initEntry::entryBFlag1/initEntry::entryBFlag1_return#0 )
  initEntry::entryBFlag1_return#1 = initEntry::entryBFlag1_return#2
  to:initEntry::@7
initEntry::@7: scope:[initEntry]  from initEntry::entryBFlag1_@return
  initEntry::entry#9 = phi( initEntry::entryBFlag1_@return/initEntry::entry#21 )
  initEntry::n#8 = phi( initEntry::entryBFlag1_@return/initEntry::n#21 )
  initEntry::entryBFlag1_return#3 = phi( initEntry::entryBFlag1_@return/initEntry::entryBFlag1_return#1 )
  initEntry::$12 = initEntry::entryBFlag1_return#3
  initEntry::$13 = $77 + initEntry::n#8
  *initEntry::$12 = initEntry::$13
  initEntry::entryBError1_entry#0 = initEntry::entry#9
  to:initEntry::entryBError1
initEntry::entryBError1: scope:[initEntry]  from initEntry::@7
  initEntry::entry#34 = phi( initEntry::@7/initEntry::entry#9 )
  initEntry::n#35 = phi( initEntry::@7/initEntry::n#8 )
  initEntry::entryBError1_entry#1 = phi( initEntry::@7/initEntry::entryBError1_entry#0 )
  initEntry::entryBError1_$0 = initEntry::entryBError1_entry#1 + $b
  initEntry::entryBError1_return#0 = initEntry::entryBError1_$0
  to:initEntry::entryBError1_@return
initEntry::entryBError1_@return: scope:[initEntry]  from initEntry::entryBError1
  initEntry::entry#22 = phi( initEntry::entryBError1/initEntry::entry#34 )
  initEntry::n#22 = phi( initEntry::entryBError1/initEntry::n#35 )
  initEntry::entryBError1_return#2 = phi( initEntry::entryBError1/initEntry::entryBError1_return#0 )
  initEntry::entryBError1_return#1 = initEntry::entryBError1_return#2
  to:initEntry::@8
initEntry::@8: scope:[initEntry]  from initEntry::entryBError1_@return
  initEntry::entry#10 = phi( initEntry::entryBError1_@return/initEntry::entry#22 )
  initEntry::n#9 = phi( initEntry::entryBError1_@return/initEntry::n#22 )
  initEntry::entryBError1_return#3 = phi( initEntry::entryBError1_@return/initEntry::entryBError1_return#1 )
  initEntry::$14 = initEntry::entryBError1_return#3
  initEntry::$15 = $88 + initEntry::n#9
  *initEntry::$14 = initEntry::$15
  initEntry::entryUCross1_entry#0 = initEntry::entry#10
  to:initEntry::entryUCross1
initEntry::entryUCross1: scope:[initEntry]  from initEntry::@8
  initEntry::entry#35 = phi( initEntry::@8/initEntry::entry#10 )
  initEntry::n#36 = phi( initEntry::@8/initEntry::n#9 )
  initEntry::entryUCross1_entry#1 = phi( initEntry::@8/initEntry::entryUCross1_entry#0 )
  initEntry::entryUCross1_$0 = initEntry::entryUCross1_entry#1 + $c
  initEntry::entryUCross1_return#0 = (word*)initEntry::entryUCross1_$0
  to:initEntry::entryUCross1_@return
initEntry::entryUCross1_@return: scope:[initEntry]  from initEntry::entryUCross1
  initEntry::entry#23 = phi( initEntry::entryUCross1/initEntry::entry#35 )
  initEntry::n#23 = phi( initEntry::entryUCross1/initEntry::n#36 )
  initEntry::entryUCross1_return#2 = phi( initEntry::entryUCross1/initEntry::entryUCross1_return#0 )
  initEntry::entryUCross1_return#1 = initEntry::entryUCross1_return#2
  to:initEntry::@9
initEntry::@9: scope:[initEntry]  from initEntry::entryUCross1_@return
  initEntry::entry#11 = phi( initEntry::entryUCross1_@return/initEntry::entry#23 )
  initEntry::n#10 = phi( initEntry::entryUCross1_@return/initEntry::n#23 )
  initEntry::entryUCross1_return#3 = phi( initEntry::entryUCross1_@return/initEntry::entryUCross1_return#1 )
  initEntry::$16 = initEntry::entryUCross1_return#3
  initEntry::$17 = $9999 + initEntry::n#10
  *initEntry::$16 = initEntry::$17
  initEntry::entryBAddrLo1_entry#0 = initEntry::entry#11
  to:initEntry::entryBAddrLo1
initEntry::entryBAddrLo1: scope:[initEntry]  from initEntry::@9
  initEntry::entry#36 = phi( initEntry::@9/initEntry::entry#11 )
  initEntry::n#37 = phi( initEntry::@9/initEntry::n#10 )
  initEntry::entryBAddrLo1_entry#1 = phi( initEntry::@9/initEntry::entryBAddrLo1_entry#0 )
  initEntry::entryBAddrLo1_$0 = initEntry::entryBAddrLo1_entry#1 + $e
  initEntry::entryBAddrLo1_return#0 = (byte*)initEntry::entryBAddrLo1_$0
  to:initEntry::entryBAddrLo1_@return
initEntry::entryBAddrLo1_@return: scope:[initEntry]  from initEntry::entryBAddrLo1
  initEntry::entry#24 = phi( initEntry::entryBAddrLo1/initEntry::entry#36 )
  initEntry::n#24 = phi( initEntry::entryBAddrLo1/initEntry::n#37 )
  initEntry::entryBAddrLo1_return#2 = phi( initEntry::entryBAddrLo1/initEntry::entryBAddrLo1_return#0 )
  initEntry::entryBAddrLo1_return#1 = initEntry::entryBAddrLo1_return#2
  to:initEntry::@10
initEntry::@10: scope:[initEntry]  from initEntry::entryBAddrLo1_@return
  initEntry::entry#12 = phi( initEntry::entryBAddrLo1_@return/initEntry::entry#24 )
  initEntry::n#11 = phi( initEntry::entryBAddrLo1_@return/initEntry::n#24 )
  initEntry::entryBAddrLo1_return#3 = phi( initEntry::entryBAddrLo1_@return/initEntry::entryBAddrLo1_return#1 )
  initEntry::$18 = initEntry::entryBAddrLo1_return#3
  initEntry::$19 = $aa + initEntry::n#11
  *initEntry::$18 = initEntry::$19
  initEntry::entryBAddrHi1_entry#0 = initEntry::entry#12
  to:initEntry::entryBAddrHi1
initEntry::entryBAddrHi1: scope:[initEntry]  from initEntry::@10
  initEntry::entry#37 = phi( initEntry::@10/initEntry::entry#12 )
  initEntry::n#38 = phi( initEntry::@10/initEntry::n#11 )
  initEntry::entryBAddrHi1_entry#1 = phi( initEntry::@10/initEntry::entryBAddrHi1_entry#0 )
  initEntry::entryBAddrHi1_$0 = initEntry::entryBAddrHi1_entry#1 + $f
  initEntry::entryBAddrHi1_return#0 = (byte*)initEntry::entryBAddrHi1_$0
  to:initEntry::entryBAddrHi1_@return
initEntry::entryBAddrHi1_@return: scope:[initEntry]  from initEntry::entryBAddrHi1
  initEntry::entry#25 = phi( initEntry::entryBAddrHi1/initEntry::entry#37 )
  initEntry::n#25 = phi( initEntry::entryBAddrHi1/initEntry::n#38 )
  initEntry::entryBAddrHi1_return#2 = phi( initEntry::entryBAddrHi1/initEntry::entryBAddrHi1_return#0 )
  initEntry::entryBAddrHi1_return#1 = initEntry::entryBAddrHi1_return#2
  to:initEntry::@11
initEntry::@11: scope:[initEntry]  from initEntry::entryBAddrHi1_@return
  initEntry::entry#13 = phi( initEntry::entryBAddrHi1_@return/initEntry::entry#25 )
  initEntry::n#12 = phi( initEntry::entryBAddrHi1_@return/initEntry::n#25 )
  initEntry::entryBAddrHi1_return#3 = phi( initEntry::entryBAddrHi1_@return/initEntry::entryBAddrHi1_return#1 )
  initEntry::$20 = initEntry::entryBAddrHi1_return#3
  initEntry::$21 = $bb + initEntry::n#12
  *initEntry::$20 = initEntry::$21
  initEntry::entryTHi1_entry#0 = initEntry::entry#13
  to:initEntry::entryTHi1
initEntry::entryTHi1: scope:[initEntry]  from initEntry::@11
  initEntry::entry#38 = phi( initEntry::@11/initEntry::entry#13 )
  initEntry::n#39 = phi( initEntry::@11/initEntry::n#12 )
  initEntry::entryTHi1_entry#1 = phi( initEntry::@11/initEntry::entryTHi1_entry#0 )
  initEntry::entryTHi1_$0 = initEntry::entryTHi1_entry#1 + $10
  initEntry::entryTHi1_return#0 = (byte*)initEntry::entryTHi1_$0
  to:initEntry::entryTHi1_@return
initEntry::entryTHi1_@return: scope:[initEntry]  from initEntry::entryTHi1
  initEntry::entry#26 = phi( initEntry::entryTHi1/initEntry::entry#38 )
  initEntry::n#26 = phi( initEntry::entryTHi1/initEntry::n#39 )
  initEntry::entryTHi1_return#2 = phi( initEntry::entryTHi1/initEntry::entryTHi1_return#0 )
  initEntry::entryTHi1_return#1 = initEntry::entryTHi1_return#2
  to:initEntry::@12
initEntry::@12: scope:[initEntry]  from initEntry::entryTHi1_@return
  initEntry::entry#14 = phi( initEntry::entryTHi1_@return/initEntry::entry#26 )
  initEntry::n#13 = phi( initEntry::entryTHi1_@return/initEntry::n#26 )
  initEntry::entryTHi1_return#3 = phi( initEntry::entryTHi1_@return/initEntry::entryTHi1_return#1 )
  initEntry::$22 = initEntry::entryTHi1_return#3
  initEntry::$23 = $cc + initEntry::n#13
  *initEntry::$22 = initEntry::$23
  initEntry::entryTLo1_entry#0 = initEntry::entry#14
  to:initEntry::entryTLo1
initEntry::entryTLo1: scope:[initEntry]  from initEntry::@12
  initEntry::n#40 = phi( initEntry::@12/initEntry::n#13 )
  initEntry::entryTLo1_entry#1 = phi( initEntry::@12/initEntry::entryTLo1_entry#0 )
  initEntry::entryTLo1_$0 = initEntry::entryTLo1_entry#1 + $11
  initEntry::entryTLo1_return#0 = (byte*)initEntry::entryTLo1_$0
  to:initEntry::entryTLo1_@return
initEntry::entryTLo1_@return: scope:[initEntry]  from initEntry::entryTLo1
  initEntry::n#27 = phi( initEntry::entryTLo1/initEntry::n#40 )
  initEntry::entryTLo1_return#2 = phi( initEntry::entryTLo1/initEntry::entryTLo1_return#0 )
  initEntry::entryTLo1_return#1 = initEntry::entryTLo1_return#2
  to:initEntry::@13
initEntry::@13: scope:[initEntry]  from initEntry::entryTLo1_@return
  initEntry::n#14 = phi( initEntry::entryTLo1_@return/initEntry::n#27 )
  initEntry::entryTLo1_return#3 = phi( initEntry::entryTLo1_@return/initEntry::entryTLo1_return#1 )
  initEntry::$24 = initEntry::entryTLo1_return#3
  initEntry::$25 = $dd + initEntry::n#14
  *initEntry::$24 = initEntry::$25
  to:initEntry::@return
initEntry::@return: scope:[initEntry]  from initEntry::@13
  return 
  to:@return

void printEntry(byte* printEntry::entry)
printEntry: scope:[printEntry]  from main::@15 main::@23
  print_line_cursor#148 = phi( main::@15/print_line_cursor#6, main::@23/print_line_cursor#11 )
  printEntry::entry#15 = phi( main::@15/printEntry::entry#0, main::@23/printEntry::entry#1 )
  print_char_cursor#152 = phi( main::@15/print_char_cursor#17, main::@23/print_char_cursor#24 )
  print_str::str#5 = printEntry::str
  call print_str 
  to:printEntry::@14
printEntry::@14: scope:[printEntry]  from printEntry
  print_line_cursor#134 = phi( printEntry/print_line_cursor#148 )
  printEntry::entry#2 = phi( printEntry/printEntry::entry#15 )
  print_char_cursor#102 = phi( printEntry/print_char_cursor#1 )
  print_char_cursor#30 = print_char_cursor#102
  printEntry::entryBufDisk1_entry#0 = printEntry::entry#2
  to:printEntry::entryBufDisk1
printEntry::entryBufDisk1: scope:[printEntry]  from printEntry::@14
  printEntry::entry#64 = phi( printEntry::@14/printEntry::entry#2 )
  print_line_cursor#120 = phi( printEntry::@14/print_line_cursor#134 )
  print_char_cursor#187 = phi( printEntry::@14/print_char_cursor#30 )
  printEntry::entryBufDisk1_entry#1 = phi( printEntry::@14/printEntry::entryBufDisk1_entry#0 )
  printEntry::entryBufDisk1_$0 = printEntry::entryBufDisk1_entry#1 + 0
  printEntry::entryBufDisk1_return#0 = (byte**)printEntry::entryBufDisk1_$0
  to:printEntry::entryBufDisk1_@return
printEntry::entryBufDisk1_@return: scope:[printEntry]  from printEntry::entryBufDisk1
  printEntry::entry#52 = phi( printEntry::entryBufDisk1/printEntry::entry#64 )
  print_line_cursor#104 = phi( printEntry::entryBufDisk1/print_line_cursor#120 )
  print_char_cursor#171 = phi( printEntry::entryBufDisk1/print_char_cursor#187 )
  printEntry::entryBufDisk1_return#2 = phi( printEntry::entryBufDisk1/printEntry::entryBufDisk1_return#0 )
  printEntry::entryBufDisk1_return#1 = printEntry::entryBufDisk1_return#2
  to:printEntry::@1
printEntry::@1: scope:[printEntry]  from printEntry::entryBufDisk1_@return
  printEntry::entry#40 = phi( printEntry::entryBufDisk1_@return/printEntry::entry#52 )
  print_line_cursor#88 = phi( printEntry::entryBufDisk1_@return/print_line_cursor#104 )
  print_char_cursor#153 = phi( printEntry::entryBufDisk1_@return/print_char_cursor#171 )
  printEntry::entryBufDisk1_return#3 = phi( printEntry::entryBufDisk1_@return/printEntry::entryBufDisk1_return#1 )
  printEntry::$1 = printEntry::entryBufDisk1_return#3
  print_uint::w#0 = (word)*printEntry::$1
  call print_uint 
  to:printEntry::@15
printEntry::@15: scope:[printEntry]  from printEntry::@1
  printEntry::entry#28 = phi( printEntry::@1/printEntry::entry#40 )
  print_line_cursor#71 = phi( printEntry::@1/print_line_cursor#88 )
  print_char_cursor#103 = phi( printEntry::@1/print_char_cursor#6 )
  print_char_cursor#31 = print_char_cursor#103
  call print_ln 
  to:printEntry::@16
printEntry::@16: scope:[printEntry]  from printEntry::@15
  printEntry::entry#16 = phi( printEntry::@15/printEntry::entry#28 )
  print_char_cursor#104 = phi( printEntry::@15/print_char_cursor#3 )
  print_line_cursor#49 = phi( printEntry::@15/print_line_cursor#1 )
  print_line_cursor#16 = print_line_cursor#49
  print_char_cursor#32 = print_char_cursor#104
  print_str::str#6 = printEntry::str1
  call print_str 
  to:printEntry::@17
printEntry::@17: scope:[printEntry]  from printEntry::@16
  print_line_cursor#135 = phi( printEntry::@16/print_line_cursor#16 )
  printEntry::entry#3 = phi( printEntry::@16/printEntry::entry#16 )
  print_char_cursor#105 = phi( printEntry::@16/print_char_cursor#1 )
  print_char_cursor#33 = print_char_cursor#105
  printEntry::entryBufEdit1_entry#0 = printEntry::entry#3
  to:printEntry::entryBufEdit1
printEntry::entryBufEdit1: scope:[printEntry]  from printEntry::@17
  printEntry::entry#65 = phi( printEntry::@17/printEntry::entry#3 )
  print_line_cursor#121 = phi( printEntry::@17/print_line_cursor#135 )
  print_char_cursor#188 = phi( printEntry::@17/print_char_cursor#33 )
  printEntry::entryBufEdit1_entry#1 = phi( printEntry::@17/printEntry::entryBufEdit1_entry#0 )
  printEntry::entryBufEdit1_$0 = printEntry::entryBufEdit1_entry#1 + 2
  printEntry::entryBufEdit1_return#0 = (byte**)printEntry::entryBufEdit1_$0
  to:printEntry::entryBufEdit1_@return
printEntry::entryBufEdit1_@return: scope:[printEntry]  from printEntry::entryBufEdit1
  printEntry::entry#53 = phi( printEntry::entryBufEdit1/printEntry::entry#65 )
  print_line_cursor#105 = phi( printEntry::entryBufEdit1/print_line_cursor#121 )
  print_char_cursor#172 = phi( printEntry::entryBufEdit1/print_char_cursor#188 )
  printEntry::entryBufEdit1_return#2 = phi( printEntry::entryBufEdit1/printEntry::entryBufEdit1_return#0 )
  printEntry::entryBufEdit1_return#1 = printEntry::entryBufEdit1_return#2
  to:printEntry::@2
printEntry::@2: scope:[printEntry]  from printEntry::entryBufEdit1_@return
  printEntry::entry#41 = phi( printEntry::entryBufEdit1_@return/printEntry::entry#53 )
  print_line_cursor#89 = phi( printEntry::entryBufEdit1_@return/print_line_cursor#105 )
  print_char_cursor#154 = phi( printEntry::entryBufEdit1_@return/print_char_cursor#172 )
  printEntry::entryBufEdit1_return#3 = phi( printEntry::entryBufEdit1_@return/printEntry::entryBufEdit1_return#1 )
  printEntry::$5 = printEntry::entryBufEdit1_return#3
  print_uint::w#1 = (word)*printEntry::$5
  call print_uint 
  to:printEntry::@18
printEntry::@18: scope:[printEntry]  from printEntry::@2
  printEntry::entry#29 = phi( printEntry::@2/printEntry::entry#41 )
  print_line_cursor#72 = phi( printEntry::@2/print_line_cursor#89 )
  print_char_cursor#106 = phi( printEntry::@2/print_char_cursor#6 )
  print_char_cursor#34 = print_char_cursor#106
  call print_ln 
  to:printEntry::@19
printEntry::@19: scope:[printEntry]  from printEntry::@18
  printEntry::entry#17 = phi( printEntry::@18/printEntry::entry#29 )
  print_char_cursor#107 = phi( printEntry::@18/print_char_cursor#3 )
  print_line_cursor#50 = phi( printEntry::@18/print_line_cursor#1 )
  print_line_cursor#17 = print_line_cursor#50
  print_char_cursor#35 = print_char_cursor#107
  print_str::str#7 = printEntry::str2
  call print_str 
  to:printEntry::@20
printEntry::@20: scope:[printEntry]  from printEntry::@19
  print_line_cursor#136 = phi( printEntry::@19/print_line_cursor#17 )
  printEntry::entry#4 = phi( printEntry::@19/printEntry::entry#17 )
  print_char_cursor#108 = phi( printEntry::@19/print_char_cursor#1 )
  print_char_cursor#36 = print_char_cursor#108
  printEntry::entryTsLen1_entry#0 = printEntry::entry#4
  to:printEntry::entryTsLen1
printEntry::entryTsLen1: scope:[printEntry]  from printEntry::@20
  printEntry::entry#66 = phi( printEntry::@20/printEntry::entry#4 )
  print_line_cursor#122 = phi( printEntry::@20/print_line_cursor#136 )
  print_char_cursor#189 = phi( printEntry::@20/print_char_cursor#36 )
  printEntry::entryTsLen1_entry#1 = phi( printEntry::@20/printEntry::entryTsLen1_entry#0 )
  printEntry::entryTsLen1_$0 = printEntry::entryTsLen1_entry#1 + 4
  printEntry::entryTsLen1_return#0 = (word*)printEntry::entryTsLen1_$0
  to:printEntry::entryTsLen1_@return
printEntry::entryTsLen1_@return: scope:[printEntry]  from printEntry::entryTsLen1
  printEntry::entry#54 = phi( printEntry::entryTsLen1/printEntry::entry#66 )
  print_line_cursor#106 = phi( printEntry::entryTsLen1/print_line_cursor#122 )
  print_char_cursor#173 = phi( printEntry::entryTsLen1/print_char_cursor#189 )
  printEntry::entryTsLen1_return#2 = phi( printEntry::entryTsLen1/printEntry::entryTsLen1_return#0 )
  printEntry::entryTsLen1_return#1 = printEntry::entryTsLen1_return#2
  to:printEntry::@3
printEntry::@3: scope:[printEntry]  from printEntry::entryTsLen1_@return
  printEntry::entry#42 = phi( printEntry::entryTsLen1_@return/printEntry::entry#54 )
  print_line_cursor#90 = phi( printEntry::entryTsLen1_@return/print_line_cursor#106 )
  print_char_cursor#155 = phi( printEntry::entryTsLen1_@return/print_char_cursor#173 )
  printEntry::entryTsLen1_return#3 = phi( printEntry::entryTsLen1_@return/printEntry::entryTsLen1_return#1 )
  printEntry::$9 = printEntry::entryTsLen1_return#3
  print_uint::w#2 = *printEntry::$9
  call print_uint 
  to:printEntry::@21
printEntry::@21: scope:[printEntry]  from printEntry::@3
  printEntry::entry#30 = phi( printEntry::@3/printEntry::entry#42 )
  print_line_cursor#73 = phi( printEntry::@3/print_line_cursor#90 )
  print_char_cursor#109 = phi( printEntry::@3/print_char_cursor#6 )
  print_char_cursor#37 = print_char_cursor#109
  call print_ln 
  to:printEntry::@22
printEntry::@22: scope:[printEntry]  from printEntry::@21
  printEntry::entry#18 = phi( printEntry::@21/printEntry::entry#30 )
  print_char_cursor#110 = phi( printEntry::@21/print_char_cursor#3 )
  print_line_cursor#51 = phi( printEntry::@21/print_line_cursor#1 )
  print_line_cursor#18 = print_line_cursor#51
  print_char_cursor#38 = print_char_cursor#110
  print_str::str#8 = printEntry::str3
  call print_str 
  to:printEntry::@23
printEntry::@23: scope:[printEntry]  from printEntry::@22
  print_line_cursor#137 = phi( printEntry::@22/print_line_cursor#18 )
  printEntry::entry#5 = phi( printEntry::@22/printEntry::entry#18 )
  print_char_cursor#111 = phi( printEntry::@22/print_char_cursor#1 )
  print_char_cursor#39 = print_char_cursor#111
  printEntry::entryTsOrder1_entry#0 = printEntry::entry#5
  to:printEntry::entryTsOrder1
printEntry::entryTsOrder1: scope:[printEntry]  from printEntry::@23
  printEntry::entry#67 = phi( printEntry::@23/printEntry::entry#5 )
  print_line_cursor#123 = phi( printEntry::@23/print_line_cursor#137 )
  print_char_cursor#190 = phi( printEntry::@23/print_char_cursor#39 )
  printEntry::entryTsOrder1_entry#1 = phi( printEntry::@23/printEntry::entryTsOrder1_entry#0 )
  printEntry::entryTsOrder1_$0 = printEntry::entryTsOrder1_entry#1 + 6
  printEntry::entryTsOrder1_return#0 = (word**)printEntry::entryTsOrder1_$0
  to:printEntry::entryTsOrder1_@return
printEntry::entryTsOrder1_@return: scope:[printEntry]  from printEntry::entryTsOrder1
  printEntry::entry#55 = phi( printEntry::entryTsOrder1/printEntry::entry#67 )
  print_line_cursor#107 = phi( printEntry::entryTsOrder1/print_line_cursor#123 )
  print_char_cursor#174 = phi( printEntry::entryTsOrder1/print_char_cursor#190 )
  printEntry::entryTsOrder1_return#2 = phi( printEntry::entryTsOrder1/printEntry::entryTsOrder1_return#0 )
  printEntry::entryTsOrder1_return#1 = printEntry::entryTsOrder1_return#2
  to:printEntry::@4
printEntry::@4: scope:[printEntry]  from printEntry::entryTsOrder1_@return
  printEntry::entry#43 = phi( printEntry::entryTsOrder1_@return/printEntry::entry#55 )
  print_line_cursor#91 = phi( printEntry::entryTsOrder1_@return/print_line_cursor#107 )
  print_char_cursor#156 = phi( printEntry::entryTsOrder1_@return/print_char_cursor#174 )
  printEntry::entryTsOrder1_return#3 = phi( printEntry::entryTsOrder1_@return/printEntry::entryTsOrder1_return#1 )
  printEntry::$13 = printEntry::entryTsOrder1_return#3
  print_uint::w#3 = (word)*printEntry::$13
  call print_uint 
  to:printEntry::@24
printEntry::@24: scope:[printEntry]  from printEntry::@4
  printEntry::entry#31 = phi( printEntry::@4/printEntry::entry#43 )
  print_line_cursor#74 = phi( printEntry::@4/print_line_cursor#91 )
  print_char_cursor#112 = phi( printEntry::@4/print_char_cursor#6 )
  print_char_cursor#40 = print_char_cursor#112
  call print_ln 
  to:printEntry::@25
printEntry::@25: scope:[printEntry]  from printEntry::@24
  printEntry::entry#19 = phi( printEntry::@24/printEntry::entry#31 )
  print_char_cursor#113 = phi( printEntry::@24/print_char_cursor#3 )
  print_line_cursor#52 = phi( printEntry::@24/print_line_cursor#1 )
  print_line_cursor#19 = print_line_cursor#52
  print_char_cursor#41 = print_char_cursor#113
  print_str::str#9 = printEntry::str4
  call print_str 
  to:printEntry::@26
printEntry::@26: scope:[printEntry]  from printEntry::@25
  print_line_cursor#138 = phi( printEntry::@25/print_line_cursor#19 )
  printEntry::entry#6 = phi( printEntry::@25/printEntry::entry#19 )
  print_char_cursor#114 = phi( printEntry::@25/print_char_cursor#1 )
  print_char_cursor#42 = print_char_cursor#114
  printEntry::entryTLastLink1_entry#0 = printEntry::entry#6
  to:printEntry::entryTLastLink1
printEntry::entryTLastLink1: scope:[printEntry]  from printEntry::@26
  printEntry::entry#68 = phi( printEntry::@26/printEntry::entry#6 )
  print_line_cursor#124 = phi( printEntry::@26/print_line_cursor#138 )
  print_char_cursor#191 = phi( printEntry::@26/print_char_cursor#42 )
  printEntry::entryTLastLink1_entry#1 = phi( printEntry::@26/printEntry::entryTLastLink1_entry#0 )
  printEntry::entryTLastLink1_$0 = printEntry::entryTLastLink1_entry#1 + 8
  printEntry::entryTLastLink1_return#0 = (byte*)printEntry::entryTLastLink1_$0
  to:printEntry::entryTLastLink1_@return
printEntry::entryTLastLink1_@return: scope:[printEntry]  from printEntry::entryTLastLink1
  printEntry::entry#56 = phi( printEntry::entryTLastLink1/printEntry::entry#68 )
  print_line_cursor#108 = phi( printEntry::entryTLastLink1/print_line_cursor#124 )
  print_char_cursor#175 = phi( printEntry::entryTLastLink1/print_char_cursor#191 )
  printEntry::entryTLastLink1_return#2 = phi( printEntry::entryTLastLink1/printEntry::entryTLastLink1_return#0 )
  printEntry::entryTLastLink1_return#1 = printEntry::entryTLastLink1_return#2
  to:printEntry::@5
printEntry::@5: scope:[printEntry]  from printEntry::entryTLastLink1_@return
  printEntry::entry#44 = phi( printEntry::entryTLastLink1_@return/printEntry::entry#56 )
  print_line_cursor#92 = phi( printEntry::entryTLastLink1_@return/print_line_cursor#108 )
  print_char_cursor#157 = phi( printEntry::entryTLastLink1_@return/print_char_cursor#175 )
  printEntry::entryTLastLink1_return#3 = phi( printEntry::entryTLastLink1_@return/printEntry::entryTLastLink1_return#1 )
  printEntry::$17 = printEntry::entryTLastLink1_return#3
  print_uchar::b#2 = *printEntry::$17
  call print_uchar 
  to:printEntry::@27
printEntry::@27: scope:[printEntry]  from printEntry::@5
  printEntry::entry#32 = phi( printEntry::@5/printEntry::entry#44 )
  print_line_cursor#75 = phi( printEntry::@5/print_line_cursor#92 )
  print_char_cursor#115 = phi( printEntry::@5/print_char_cursor#9 )
  print_char_cursor#43 = print_char_cursor#115
  call print_ln 
  to:printEntry::@28
printEntry::@28: scope:[printEntry]  from printEntry::@27
  printEntry::entry#20 = phi( printEntry::@27/printEntry::entry#32 )
  print_char_cursor#116 = phi( printEntry::@27/print_char_cursor#3 )
  print_line_cursor#53 = phi( printEntry::@27/print_line_cursor#1 )
  print_line_cursor#20 = print_line_cursor#53
  print_char_cursor#44 = print_char_cursor#116
  print_str::str#10 = printEntry::str5
  call print_str 
  to:printEntry::@29
printEntry::@29: scope:[printEntry]  from printEntry::@28
  print_line_cursor#139 = phi( printEntry::@28/print_line_cursor#20 )
  printEntry::entry#7 = phi( printEntry::@28/printEntry::entry#20 )
  print_char_cursor#117 = phi( printEntry::@28/print_char_cursor#1 )
  print_char_cursor#45 = print_char_cursor#117
  printEntry::entrySLastLink1_entry#0 = printEntry::entry#7
  to:printEntry::entrySLastLink1
printEntry::entrySLastLink1: scope:[printEntry]  from printEntry::@29
  printEntry::entry#69 = phi( printEntry::@29/printEntry::entry#7 )
  print_line_cursor#125 = phi( printEntry::@29/print_line_cursor#139 )
  print_char_cursor#192 = phi( printEntry::@29/print_char_cursor#45 )
  printEntry::entrySLastLink1_entry#1 = phi( printEntry::@29/printEntry::entrySLastLink1_entry#0 )
  printEntry::entrySLastLink1_$0 = printEntry::entrySLastLink1_entry#1 + 9
  printEntry::entrySLastLink1_return#0 = (byte*)printEntry::entrySLastLink1_$0
  to:printEntry::entrySLastLink1_@return
printEntry::entrySLastLink1_@return: scope:[printEntry]  from printEntry::entrySLastLink1
  printEntry::entry#57 = phi( printEntry::entrySLastLink1/printEntry::entry#69 )
  print_line_cursor#109 = phi( printEntry::entrySLastLink1/print_line_cursor#125 )
  print_char_cursor#176 = phi( printEntry::entrySLastLink1/print_char_cursor#192 )
  printEntry::entrySLastLink1_return#2 = phi( printEntry::entrySLastLink1/printEntry::entrySLastLink1_return#0 )
  printEntry::entrySLastLink1_return#1 = printEntry::entrySLastLink1_return#2
  to:printEntry::@6
printEntry::@6: scope:[printEntry]  from printEntry::entrySLastLink1_@return
  printEntry::entry#45 = phi( printEntry::entrySLastLink1_@return/printEntry::entry#57 )
  print_line_cursor#93 = phi( printEntry::entrySLastLink1_@return/print_line_cursor#109 )
  print_char_cursor#158 = phi( printEntry::entrySLastLink1_@return/print_char_cursor#176 )
  printEntry::entrySLastLink1_return#3 = phi( printEntry::entrySLastLink1_@return/printEntry::entrySLastLink1_return#1 )
  printEntry::$21 = printEntry::entrySLastLink1_return#3
  print_uchar::b#3 = *printEntry::$21
  call print_uchar 
  to:printEntry::@30
printEntry::@30: scope:[printEntry]  from printEntry::@6
  printEntry::entry#33 = phi( printEntry::@6/printEntry::entry#45 )
  print_line_cursor#76 = phi( printEntry::@6/print_line_cursor#93 )
  print_char_cursor#118 = phi( printEntry::@6/print_char_cursor#9 )
  print_char_cursor#46 = print_char_cursor#118
  call print_ln 
  to:printEntry::@31
printEntry::@31: scope:[printEntry]  from printEntry::@30
  printEntry::entry#21 = phi( printEntry::@30/printEntry::entry#33 )
  print_char_cursor#119 = phi( printEntry::@30/print_char_cursor#3 )
  print_line_cursor#54 = phi( printEntry::@30/print_line_cursor#1 )
  print_line_cursor#21 = print_line_cursor#54
  print_char_cursor#47 = print_char_cursor#119
  print_str::str#11 = printEntry::str6
  call print_str 
  to:printEntry::@32
printEntry::@32: scope:[printEntry]  from printEntry::@31
  print_line_cursor#140 = phi( printEntry::@31/print_line_cursor#21 )
  printEntry::entry#8 = phi( printEntry::@31/printEntry::entry#21 )
  print_char_cursor#120 = phi( printEntry::@31/print_char_cursor#1 )
  print_char_cursor#48 = print_char_cursor#120
  printEntry::entryBFlag1_entry#0 = printEntry::entry#8
  to:printEntry::entryBFlag1
printEntry::entryBFlag1: scope:[printEntry]  from printEntry::@32
  printEntry::entry#70 = phi( printEntry::@32/printEntry::entry#8 )
  print_line_cursor#126 = phi( printEntry::@32/print_line_cursor#140 )
  print_char_cursor#193 = phi( printEntry::@32/print_char_cursor#48 )
  printEntry::entryBFlag1_entry#1 = phi( printEntry::@32/printEntry::entryBFlag1_entry#0 )
  printEntry::entryBFlag1_$0 = printEntry::entryBFlag1_entry#1 + $a
  printEntry::entryBFlag1_return#0 = (byte*)printEntry::entryBFlag1_$0
  to:printEntry::entryBFlag1_@return
printEntry::entryBFlag1_@return: scope:[printEntry]  from printEntry::entryBFlag1
  printEntry::entry#58 = phi( printEntry::entryBFlag1/printEntry::entry#70 )
  print_line_cursor#110 = phi( printEntry::entryBFlag1/print_line_cursor#126 )
  print_char_cursor#177 = phi( printEntry::entryBFlag1/print_char_cursor#193 )
  printEntry::entryBFlag1_return#2 = phi( printEntry::entryBFlag1/printEntry::entryBFlag1_return#0 )
  printEntry::entryBFlag1_return#1 = printEntry::entryBFlag1_return#2
  to:printEntry::@7
printEntry::@7: scope:[printEntry]  from printEntry::entryBFlag1_@return
  printEntry::entry#46 = phi( printEntry::entryBFlag1_@return/printEntry::entry#58 )
  print_line_cursor#94 = phi( printEntry::entryBFlag1_@return/print_line_cursor#110 )
  print_char_cursor#159 = phi( printEntry::entryBFlag1_@return/print_char_cursor#177 )
  printEntry::entryBFlag1_return#3 = phi( printEntry::entryBFlag1_@return/printEntry::entryBFlag1_return#1 )
  printEntry::$25 = printEntry::entryBFlag1_return#3
  print_uchar::b#4 = *printEntry::$25
  call print_uchar 
  to:printEntry::@33
printEntry::@33: scope:[printEntry]  from printEntry::@7
  printEntry::entry#34 = phi( printEntry::@7/printEntry::entry#46 )
  print_line_cursor#77 = phi( printEntry::@7/print_line_cursor#94 )
  print_char_cursor#121 = phi( printEntry::@7/print_char_cursor#9 )
  print_char_cursor#49 = print_char_cursor#121
  call print_ln 
  to:printEntry::@34
printEntry::@34: scope:[printEntry]  from printEntry::@33
  printEntry::entry#22 = phi( printEntry::@33/printEntry::entry#34 )
  print_char_cursor#122 = phi( printEntry::@33/print_char_cursor#3 )
  print_line_cursor#55 = phi( printEntry::@33/print_line_cursor#1 )
  print_line_cursor#22 = print_line_cursor#55
  print_char_cursor#50 = print_char_cursor#122
  print_str::str#12 = printEntry::str7
  call print_str 
  to:printEntry::@35
printEntry::@35: scope:[printEntry]  from printEntry::@34
  print_line_cursor#141 = phi( printEntry::@34/print_line_cursor#22 )
  printEntry::entry#9 = phi( printEntry::@34/printEntry::entry#22 )
  print_char_cursor#123 = phi( printEntry::@34/print_char_cursor#1 )
  print_char_cursor#51 = print_char_cursor#123
  printEntry::entryBError1_entry#0 = printEntry::entry#9
  to:printEntry::entryBError1
printEntry::entryBError1: scope:[printEntry]  from printEntry::@35
  printEntry::entry#71 = phi( printEntry::@35/printEntry::entry#9 )
  print_line_cursor#127 = phi( printEntry::@35/print_line_cursor#141 )
  print_char_cursor#194 = phi( printEntry::@35/print_char_cursor#51 )
  printEntry::entryBError1_entry#1 = phi( printEntry::@35/printEntry::entryBError1_entry#0 )
  printEntry::entryBError1_$0 = printEntry::entryBError1_entry#1 + $b
  printEntry::entryBError1_return#0 = printEntry::entryBError1_$0
  to:printEntry::entryBError1_@return
printEntry::entryBError1_@return: scope:[printEntry]  from printEntry::entryBError1
  printEntry::entry#59 = phi( printEntry::entryBError1/printEntry::entry#71 )
  print_line_cursor#111 = phi( printEntry::entryBError1/print_line_cursor#127 )
  print_char_cursor#178 = phi( printEntry::entryBError1/print_char_cursor#194 )
  printEntry::entryBError1_return#2 = phi( printEntry::entryBError1/printEntry::entryBError1_return#0 )
  printEntry::entryBError1_return#1 = printEntry::entryBError1_return#2
  to:printEntry::@8
printEntry::@8: scope:[printEntry]  from printEntry::entryBError1_@return
  printEntry::entry#47 = phi( printEntry::entryBError1_@return/printEntry::entry#59 )
  print_line_cursor#95 = phi( printEntry::entryBError1_@return/print_line_cursor#111 )
  print_char_cursor#160 = phi( printEntry::entryBError1_@return/print_char_cursor#178 )
  printEntry::entryBError1_return#3 = phi( printEntry::entryBError1_@return/printEntry::entryBError1_return#1 )
  printEntry::$29 = printEntry::entryBError1_return#3
  print_uchar::b#5 = *printEntry::$29
  call print_uchar 
  to:printEntry::@36
printEntry::@36: scope:[printEntry]  from printEntry::@8
  printEntry::entry#35 = phi( printEntry::@8/printEntry::entry#47 )
  print_line_cursor#78 = phi( printEntry::@8/print_line_cursor#95 )
  print_char_cursor#124 = phi( printEntry::@8/print_char_cursor#9 )
  print_char_cursor#52 = print_char_cursor#124
  call print_ln 
  to:printEntry::@37
printEntry::@37: scope:[printEntry]  from printEntry::@36
  printEntry::entry#23 = phi( printEntry::@36/printEntry::entry#35 )
  print_char_cursor#125 = phi( printEntry::@36/print_char_cursor#3 )
  print_line_cursor#56 = phi( printEntry::@36/print_line_cursor#1 )
  print_line_cursor#23 = print_line_cursor#56
  print_char_cursor#53 = print_char_cursor#125
  print_str::str#13 = printEntry::str8
  call print_str 
  to:printEntry::@38
printEntry::@38: scope:[printEntry]  from printEntry::@37
  print_line_cursor#142 = phi( printEntry::@37/print_line_cursor#23 )
  printEntry::entry#10 = phi( printEntry::@37/printEntry::entry#23 )
  print_char_cursor#126 = phi( printEntry::@37/print_char_cursor#1 )
  print_char_cursor#54 = print_char_cursor#126
  printEntry::entryUCross1_entry#0 = printEntry::entry#10
  to:printEntry::entryUCross1
printEntry::entryUCross1: scope:[printEntry]  from printEntry::@38
  printEntry::entry#72 = phi( printEntry::@38/printEntry::entry#10 )
  print_line_cursor#128 = phi( printEntry::@38/print_line_cursor#142 )
  print_char_cursor#195 = phi( printEntry::@38/print_char_cursor#54 )
  printEntry::entryUCross1_entry#1 = phi( printEntry::@38/printEntry::entryUCross1_entry#0 )
  printEntry::entryUCross1_$0 = printEntry::entryUCross1_entry#1 + $c
  printEntry::entryUCross1_return#0 = (word*)printEntry::entryUCross1_$0
  to:printEntry::entryUCross1_@return
printEntry::entryUCross1_@return: scope:[printEntry]  from printEntry::entryUCross1
  printEntry::entry#60 = phi( printEntry::entryUCross1/printEntry::entry#72 )
  print_line_cursor#112 = phi( printEntry::entryUCross1/print_line_cursor#128 )
  print_char_cursor#179 = phi( printEntry::entryUCross1/print_char_cursor#195 )
  printEntry::entryUCross1_return#2 = phi( printEntry::entryUCross1/printEntry::entryUCross1_return#0 )
  printEntry::entryUCross1_return#1 = printEntry::entryUCross1_return#2
  to:printEntry::@9
printEntry::@9: scope:[printEntry]  from printEntry::entryUCross1_@return
  printEntry::entry#48 = phi( printEntry::entryUCross1_@return/printEntry::entry#60 )
  print_line_cursor#96 = phi( printEntry::entryUCross1_@return/print_line_cursor#112 )
  print_char_cursor#161 = phi( printEntry::entryUCross1_@return/print_char_cursor#179 )
  printEntry::entryUCross1_return#3 = phi( printEntry::entryUCross1_@return/printEntry::entryUCross1_return#1 )
  printEntry::$33 = printEntry::entryUCross1_return#3
  print_uint::w#4 = *printEntry::$33
  call print_uint 
  to:printEntry::@39
printEntry::@39: scope:[printEntry]  from printEntry::@9
  printEntry::entry#36 = phi( printEntry::@9/printEntry::entry#48 )
  print_line_cursor#79 = phi( printEntry::@9/print_line_cursor#96 )
  print_char_cursor#127 = phi( printEntry::@9/print_char_cursor#6 )
  print_char_cursor#55 = print_char_cursor#127
  call print_ln 
  to:printEntry::@40
printEntry::@40: scope:[printEntry]  from printEntry::@39
  printEntry::entry#24 = phi( printEntry::@39/printEntry::entry#36 )
  print_char_cursor#128 = phi( printEntry::@39/print_char_cursor#3 )
  print_line_cursor#57 = phi( printEntry::@39/print_line_cursor#1 )
  print_line_cursor#24 = print_line_cursor#57
  print_char_cursor#56 = print_char_cursor#128
  print_str::str#14 = printEntry::str9
  call print_str 
  to:printEntry::@41
printEntry::@41: scope:[printEntry]  from printEntry::@40
  print_line_cursor#143 = phi( printEntry::@40/print_line_cursor#24 )
  printEntry::entry#11 = phi( printEntry::@40/printEntry::entry#24 )
  print_char_cursor#129 = phi( printEntry::@40/print_char_cursor#1 )
  print_char_cursor#57 = print_char_cursor#129
  printEntry::entryBAddrLo1_entry#0 = printEntry::entry#11
  to:printEntry::entryBAddrLo1
printEntry::entryBAddrLo1: scope:[printEntry]  from printEntry::@41
  printEntry::entry#73 = phi( printEntry::@41/printEntry::entry#11 )
  print_line_cursor#129 = phi( printEntry::@41/print_line_cursor#143 )
  print_char_cursor#196 = phi( printEntry::@41/print_char_cursor#57 )
  printEntry::entryBAddrLo1_entry#1 = phi( printEntry::@41/printEntry::entryBAddrLo1_entry#0 )
  printEntry::entryBAddrLo1_$0 = printEntry::entryBAddrLo1_entry#1 + $e
  printEntry::entryBAddrLo1_return#0 = (byte*)printEntry::entryBAddrLo1_$0
  to:printEntry::entryBAddrLo1_@return
printEntry::entryBAddrLo1_@return: scope:[printEntry]  from printEntry::entryBAddrLo1
  printEntry::entry#61 = phi( printEntry::entryBAddrLo1/printEntry::entry#73 )
  print_line_cursor#113 = phi( printEntry::entryBAddrLo1/print_line_cursor#129 )
  print_char_cursor#180 = phi( printEntry::entryBAddrLo1/print_char_cursor#196 )
  printEntry::entryBAddrLo1_return#2 = phi( printEntry::entryBAddrLo1/printEntry::entryBAddrLo1_return#0 )
  printEntry::entryBAddrLo1_return#1 = printEntry::entryBAddrLo1_return#2
  to:printEntry::@10
printEntry::@10: scope:[printEntry]  from printEntry::entryBAddrLo1_@return
  printEntry::entry#49 = phi( printEntry::entryBAddrLo1_@return/printEntry::entry#61 )
  print_line_cursor#97 = phi( printEntry::entryBAddrLo1_@return/print_line_cursor#113 )
  print_char_cursor#162 = phi( printEntry::entryBAddrLo1_@return/print_char_cursor#180 )
  printEntry::entryBAddrLo1_return#3 = phi( printEntry::entryBAddrLo1_@return/printEntry::entryBAddrLo1_return#1 )
  printEntry::$37 = printEntry::entryBAddrLo1_return#3
  print_uchar::b#6 = *printEntry::$37
  call print_uchar 
  to:printEntry::@42
printEntry::@42: scope:[printEntry]  from printEntry::@10
  printEntry::entry#37 = phi( printEntry::@10/printEntry::entry#49 )
  print_line_cursor#80 = phi( printEntry::@10/print_line_cursor#97 )
  print_char_cursor#130 = phi( printEntry::@10/print_char_cursor#9 )
  print_char_cursor#58 = print_char_cursor#130
  call print_ln 
  to:printEntry::@43
printEntry::@43: scope:[printEntry]  from printEntry::@42
  printEntry::entry#25 = phi( printEntry::@42/printEntry::entry#37 )
  print_char_cursor#131 = phi( printEntry::@42/print_char_cursor#3 )
  print_line_cursor#58 = phi( printEntry::@42/print_line_cursor#1 )
  print_line_cursor#25 = print_line_cursor#58
  print_char_cursor#59 = print_char_cursor#131
  print_str::str#15 = printEntry::str10
  call print_str 
  to:printEntry::@44
printEntry::@44: scope:[printEntry]  from printEntry::@43
  print_line_cursor#144 = phi( printEntry::@43/print_line_cursor#25 )
  printEntry::entry#12 = phi( printEntry::@43/printEntry::entry#25 )
  print_char_cursor#132 = phi( printEntry::@43/print_char_cursor#1 )
  print_char_cursor#60 = print_char_cursor#132
  printEntry::entryBAddrHi1_entry#0 = printEntry::entry#12
  to:printEntry::entryBAddrHi1
printEntry::entryBAddrHi1: scope:[printEntry]  from printEntry::@44
  printEntry::entry#74 = phi( printEntry::@44/printEntry::entry#12 )
  print_line_cursor#130 = phi( printEntry::@44/print_line_cursor#144 )
  print_char_cursor#197 = phi( printEntry::@44/print_char_cursor#60 )
  printEntry::entryBAddrHi1_entry#1 = phi( printEntry::@44/printEntry::entryBAddrHi1_entry#0 )
  printEntry::entryBAddrHi1_$0 = printEntry::entryBAddrHi1_entry#1 + $f
  printEntry::entryBAddrHi1_return#0 = (byte*)printEntry::entryBAddrHi1_$0
  to:printEntry::entryBAddrHi1_@return
printEntry::entryBAddrHi1_@return: scope:[printEntry]  from printEntry::entryBAddrHi1
  printEntry::entry#62 = phi( printEntry::entryBAddrHi1/printEntry::entry#74 )
  print_line_cursor#114 = phi( printEntry::entryBAddrHi1/print_line_cursor#130 )
  print_char_cursor#181 = phi( printEntry::entryBAddrHi1/print_char_cursor#197 )
  printEntry::entryBAddrHi1_return#2 = phi( printEntry::entryBAddrHi1/printEntry::entryBAddrHi1_return#0 )
  printEntry::entryBAddrHi1_return#1 = printEntry::entryBAddrHi1_return#2
  to:printEntry::@11
printEntry::@11: scope:[printEntry]  from printEntry::entryBAddrHi1_@return
  printEntry::entry#50 = phi( printEntry::entryBAddrHi1_@return/printEntry::entry#62 )
  print_line_cursor#98 = phi( printEntry::entryBAddrHi1_@return/print_line_cursor#114 )
  print_char_cursor#163 = phi( printEntry::entryBAddrHi1_@return/print_char_cursor#181 )
  printEntry::entryBAddrHi1_return#3 = phi( printEntry::entryBAddrHi1_@return/printEntry::entryBAddrHi1_return#1 )
  printEntry::$41 = printEntry::entryBAddrHi1_return#3
  print_uchar::b#7 = *printEntry::$41
  call print_uchar 
  to:printEntry::@45
printEntry::@45: scope:[printEntry]  from printEntry::@11
  printEntry::entry#38 = phi( printEntry::@11/printEntry::entry#50 )
  print_line_cursor#81 = phi( printEntry::@11/print_line_cursor#98 )
  print_char_cursor#133 = phi( printEntry::@11/print_char_cursor#9 )
  print_char_cursor#61 = print_char_cursor#133
  call print_ln 
  to:printEntry::@46
printEntry::@46: scope:[printEntry]  from printEntry::@45
  printEntry::entry#26 = phi( printEntry::@45/printEntry::entry#38 )
  print_char_cursor#134 = phi( printEntry::@45/print_char_cursor#3 )
  print_line_cursor#59 = phi( printEntry::@45/print_line_cursor#1 )
  print_line_cursor#26 = print_line_cursor#59
  print_char_cursor#62 = print_char_cursor#134
  print_str::str#16 = printEntry::str11
  call print_str 
  to:printEntry::@47
printEntry::@47: scope:[printEntry]  from printEntry::@46
  print_line_cursor#145 = phi( printEntry::@46/print_line_cursor#26 )
  printEntry::entry#13 = phi( printEntry::@46/printEntry::entry#26 )
  print_char_cursor#135 = phi( printEntry::@46/print_char_cursor#1 )
  print_char_cursor#63 = print_char_cursor#135
  printEntry::entryTHi1_entry#0 = printEntry::entry#13
  to:printEntry::entryTHi1
printEntry::entryTHi1: scope:[printEntry]  from printEntry::@47
  printEntry::entry#75 = phi( printEntry::@47/printEntry::entry#13 )
  print_line_cursor#131 = phi( printEntry::@47/print_line_cursor#145 )
  print_char_cursor#198 = phi( printEntry::@47/print_char_cursor#63 )
  printEntry::entryTHi1_entry#1 = phi( printEntry::@47/printEntry::entryTHi1_entry#0 )
  printEntry::entryTHi1_$0 = printEntry::entryTHi1_entry#1 + $10
  printEntry::entryTHi1_return#0 = (byte*)printEntry::entryTHi1_$0
  to:printEntry::entryTHi1_@return
printEntry::entryTHi1_@return: scope:[printEntry]  from printEntry::entryTHi1
  printEntry::entry#63 = phi( printEntry::entryTHi1/printEntry::entry#75 )
  print_line_cursor#115 = phi( printEntry::entryTHi1/print_line_cursor#131 )
  print_char_cursor#182 = phi( printEntry::entryTHi1/print_char_cursor#198 )
  printEntry::entryTHi1_return#2 = phi( printEntry::entryTHi1/printEntry::entryTHi1_return#0 )
  printEntry::entryTHi1_return#1 = printEntry::entryTHi1_return#2
  to:printEntry::@12
printEntry::@12: scope:[printEntry]  from printEntry::entryTHi1_@return
  printEntry::entry#51 = phi( printEntry::entryTHi1_@return/printEntry::entry#63 )
  print_line_cursor#99 = phi( printEntry::entryTHi1_@return/print_line_cursor#115 )
  print_char_cursor#164 = phi( printEntry::entryTHi1_@return/print_char_cursor#182 )
  printEntry::entryTHi1_return#3 = phi( printEntry::entryTHi1_@return/printEntry::entryTHi1_return#1 )
  printEntry::$45 = printEntry::entryTHi1_return#3
  print_uchar::b#8 = *printEntry::$45
  call print_uchar 
  to:printEntry::@48
printEntry::@48: scope:[printEntry]  from printEntry::@12
  printEntry::entry#39 = phi( printEntry::@12/printEntry::entry#51 )
  print_line_cursor#82 = phi( printEntry::@12/print_line_cursor#99 )
  print_char_cursor#136 = phi( printEntry::@12/print_char_cursor#9 )
  print_char_cursor#64 = print_char_cursor#136
  call print_ln 
  to:printEntry::@49
printEntry::@49: scope:[printEntry]  from printEntry::@48
  printEntry::entry#27 = phi( printEntry::@48/printEntry::entry#39 )
  print_char_cursor#137 = phi( printEntry::@48/print_char_cursor#3 )
  print_line_cursor#60 = phi( printEntry::@48/print_line_cursor#1 )
  print_line_cursor#27 = print_line_cursor#60
  print_char_cursor#65 = print_char_cursor#137
  print_str::str#17 = printEntry::str12
  call print_str 
  to:printEntry::@50
printEntry::@50: scope:[printEntry]  from printEntry::@49
  print_line_cursor#146 = phi( printEntry::@49/print_line_cursor#27 )
  printEntry::entry#14 = phi( printEntry::@49/printEntry::entry#27 )
  print_char_cursor#138 = phi( printEntry::@49/print_char_cursor#1 )
  print_char_cursor#66 = print_char_cursor#138
  printEntry::entryTLo1_entry#0 = printEntry::entry#14
  to:printEntry::entryTLo1
printEntry::entryTLo1: scope:[printEntry]  from printEntry::@50
  print_line_cursor#132 = phi( printEntry::@50/print_line_cursor#146 )
  print_char_cursor#199 = phi( printEntry::@50/print_char_cursor#66 )
  printEntry::entryTLo1_entry#1 = phi( printEntry::@50/printEntry::entryTLo1_entry#0 )
  printEntry::entryTLo1_$0 = printEntry::entryTLo1_entry#1 + $11
  printEntry::entryTLo1_return#0 = (byte*)printEntry::entryTLo1_$0
  to:printEntry::entryTLo1_@return
printEntry::entryTLo1_@return: scope:[printEntry]  from printEntry::entryTLo1
  print_line_cursor#116 = phi( printEntry::entryTLo1/print_line_cursor#132 )
  print_char_cursor#183 = phi( printEntry::entryTLo1/print_char_cursor#199 )
  printEntry::entryTLo1_return#2 = phi( printEntry::entryTLo1/printEntry::entryTLo1_return#0 )
  printEntry::entryTLo1_return#1 = printEntry::entryTLo1_return#2
  to:printEntry::@13
printEntry::@13: scope:[printEntry]  from printEntry::entryTLo1_@return
  print_line_cursor#100 = phi( printEntry::entryTLo1_@return/print_line_cursor#116 )
  print_char_cursor#165 = phi( printEntry::entryTLo1_@return/print_char_cursor#183 )
  printEntry::entryTLo1_return#3 = phi( printEntry::entryTLo1_@return/printEntry::entryTLo1_return#1 )
  printEntry::$49 = printEntry::entryTLo1_return#3
  print_uchar::b#9 = *printEntry::$49
  call print_uchar 
  to:printEntry::@51
printEntry::@51: scope:[printEntry]  from printEntry::@13
  print_line_cursor#83 = phi( printEntry::@13/print_line_cursor#100 )
  print_char_cursor#139 = phi( printEntry::@13/print_char_cursor#9 )
  print_char_cursor#67 = print_char_cursor#139
  call print_ln 
  to:printEntry::@52
printEntry::@52: scope:[printEntry]  from printEntry::@51
  print_char_cursor#140 = phi( printEntry::@51/print_char_cursor#3 )
  print_line_cursor#61 = phi( printEntry::@51/print_line_cursor#1 )
  print_line_cursor#28 = print_line_cursor#61
  print_char_cursor#68 = print_char_cursor#140
  to:printEntry::@return
printEntry::@return: scope:[printEntry]  from printEntry::@52
  print_line_cursor#62 = phi( printEntry::@52/print_line_cursor#28 )
  print_char_cursor#141 = phi( printEntry::@52/print_char_cursor#68 )
  print_char_cursor#69 = print_char_cursor#141
  print_line_cursor#29 = print_line_cursor#62
  return 
  to:@return

void __start()
__start: scope:[__start]  from
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  print_screen#0 = (byte*)$400
  print_line_cursor#30 = print_screen#0
  print_char_cursor#70 = print_line_cursor#30
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  print_screen#12 = phi( __start::__init1/print_screen#0 )
  print_char_cursor#166 = phi( __start::__init1/print_char_cursor#70 )
  print_line_cursor#84 = phi( __start::__init1/print_line_cursor#30 )
  call main 
  to:__start::@2
__start::@2: scope:[__start]  from __start::@1
  print_screen#8 = phi( __start::@1/print_screen#12 )
  print_char_cursor#142 = phi( __start::@1/print_char_cursor#29 )
  print_line_cursor#63 = phi( __start::@1/print_line_cursor#15 )
  print_line_cursor#31 = print_line_cursor#63
  print_char_cursor#71 = print_char_cursor#142
  to:__start::@return
__start::@return: scope:[__start]  from __start::@2
  print_char_cursor#143 = phi( __start::@2/print_char_cursor#71 )
  print_line_cursor#64 = phi( __start::@2/print_line_cursor#31 )
  print_screen#4 = phi( __start::@2/print_screen#8 )
  print_screen#1 = print_screen#4
  print_line_cursor#32 = print_line_cursor#64
  print_char_cursor#72 = print_char_cursor#143
  return 
  to:@return

SYMBOL TABLE SSA
const nomodify struct MOS6526_CIA* CIA1 = (struct MOS6526_CIA*)$dc00
const nomodify byte KEY_SPACE = $3c
const nomodify byte MAX_FILES = $90
const byte OFFSET_STRUCT_MOS6526_CIA_PORT_A = 0
const byte OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR = 2
const byte OFFSET_STRUCT_MOS6526_CIA_PORT_B = 1
const byte OFFSET_STRUCT_MOS6526_CIA_PORT_B_DDR = 3
const byte RADIX::BINARY = 2
const byte RADIX::DECIMAL = $a
const byte RADIX::HEXADECIMAL = $10
const byte RADIX::OCTAL = 8
const nomodify byte SIZEOF_ENTRY = $12
void __start()
const byte* files[(word)MAX_FILES*SIZEOF_ENTRY]  = { fill( (word)MAX_FILES*SIZEOF_ENTRY, 0) }
void initEntry(byte* initEntry::entry , byte initEntry::n)
byte**~ initEntry::$0
number~ initEntry::$1
byte*~ initEntry::$10
number~ initEntry::$11
byte*~ initEntry::$12
number~ initEntry::$13
byte*~ initEntry::$14
number~ initEntry::$15
word*~ initEntry::$16
number~ initEntry::$17
byte*~ initEntry::$18
number~ initEntry::$19
byte**~ initEntry::$2
byte*~ initEntry::$20
number~ initEntry::$21
byte*~ initEntry::$22
number~ initEntry::$23
byte*~ initEntry::$24
number~ initEntry::$25
number~ initEntry::$3
word*~ initEntry::$4
number~ initEntry::$5
word**~ initEntry::$6
number~ initEntry::$7
byte*~ initEntry::$8
number~ initEntry::$9
byte* initEntry::entry
byte* initEntry::entry#0
byte* initEntry::entry#1
byte* initEntry::entry#10
byte* initEntry::entry#11
byte* initEntry::entry#12
byte* initEntry::entry#13
byte* initEntry::entry#14
byte* initEntry::entry#15
byte* initEntry::entry#16
byte* initEntry::entry#17
byte* initEntry::entry#18
byte* initEntry::entry#19
byte* initEntry::entry#2
byte* initEntry::entry#20
byte* initEntry::entry#21
byte* initEntry::entry#22
byte* initEntry::entry#23
byte* initEntry::entry#24
byte* initEntry::entry#25
byte* initEntry::entry#26
byte* initEntry::entry#27
byte* initEntry::entry#28
byte* initEntry::entry#29
byte* initEntry::entry#3
byte* initEntry::entry#30
byte* initEntry::entry#31
byte* initEntry::entry#32
byte* initEntry::entry#33
byte* initEntry::entry#34
byte* initEntry::entry#35
byte* initEntry::entry#36
byte* initEntry::entry#37
byte* initEntry::entry#38
byte* initEntry::entry#4
byte* initEntry::entry#5
byte* initEntry::entry#6
byte* initEntry::entry#7
byte* initEntry::entry#8
byte* initEntry::entry#9
byte*~ initEntry::entryBAddrHi1_$0
byte* initEntry::entryBAddrHi1_entry
byte* initEntry::entryBAddrHi1_entry#0
byte* initEntry::entryBAddrHi1_entry#1
byte* initEntry::entryBAddrHi1_return
byte* initEntry::entryBAddrHi1_return#0
byte* initEntry::entryBAddrHi1_return#1
byte* initEntry::entryBAddrHi1_return#2
byte* initEntry::entryBAddrHi1_return#3
byte*~ initEntry::entryBAddrLo1_$0
byte* initEntry::entryBAddrLo1_entry
byte* initEntry::entryBAddrLo1_entry#0
byte* initEntry::entryBAddrLo1_entry#1
byte* initEntry::entryBAddrLo1_return
byte* initEntry::entryBAddrLo1_return#0
byte* initEntry::entryBAddrLo1_return#1
byte* initEntry::entryBAddrLo1_return#2
byte* initEntry::entryBAddrLo1_return#3
byte*~ initEntry::entryBError1_$0
byte* initEntry::entryBError1_entry
byte* initEntry::entryBError1_entry#0
byte* initEntry::entryBError1_entry#1
byte* initEntry::entryBError1_return
byte* initEntry::entryBError1_return#0
byte* initEntry::entryBError1_return#1
byte* initEntry::entryBError1_return#2
byte* initEntry::entryBError1_return#3
byte*~ initEntry::entryBFlag1_$0
byte* initEntry::entryBFlag1_entry
byte* initEntry::entryBFlag1_entry#0
byte* initEntry::entryBFlag1_entry#1
byte* initEntry::entryBFlag1_return
byte* initEntry::entryBFlag1_return#0
byte* initEntry::entryBFlag1_return#1
byte* initEntry::entryBFlag1_return#2
byte* initEntry::entryBFlag1_return#3
byte*~ initEntry::entryBufDisk1_$0
byte* initEntry::entryBufDisk1_entry
byte* initEntry::entryBufDisk1_entry#0
byte* initEntry::entryBufDisk1_entry#1
byte** initEntry::entryBufDisk1_return
byte** initEntry::entryBufDisk1_return#0
byte** initEntry::entryBufDisk1_return#1
byte** initEntry::entryBufDisk1_return#2
byte** initEntry::entryBufDisk1_return#3
byte*~ initEntry::entryBufEdit1_$0
byte* initEntry::entryBufEdit1_entry
byte* initEntry::entryBufEdit1_entry#0
byte* initEntry::entryBufEdit1_entry#1
byte** initEntry::entryBufEdit1_return
byte** initEntry::entryBufEdit1_return#0
byte** initEntry::entryBufEdit1_return#1
byte** initEntry::entryBufEdit1_return#2
byte** initEntry::entryBufEdit1_return#3
byte*~ initEntry::entrySLastLink1_$0
byte* initEntry::entrySLastLink1_entry
byte* initEntry::entrySLastLink1_entry#0
byte* initEntry::entrySLastLink1_entry#1
byte* initEntry::entrySLastLink1_return
byte* initEntry::entrySLastLink1_return#0
byte* initEntry::entrySLastLink1_return#1
byte* initEntry::entrySLastLink1_return#2
byte* initEntry::entrySLastLink1_return#3
byte*~ initEntry::entryTHi1_$0
byte* initEntry::entryTHi1_entry
byte* initEntry::entryTHi1_entry#0
byte* initEntry::entryTHi1_entry#1
byte* initEntry::entryTHi1_return
byte* initEntry::entryTHi1_return#0
byte* initEntry::entryTHi1_return#1
byte* initEntry::entryTHi1_return#2
byte* initEntry::entryTHi1_return#3
byte*~ initEntry::entryTLastLink1_$0
byte* initEntry::entryTLastLink1_entry
byte* initEntry::entryTLastLink1_entry#0
byte* initEntry::entryTLastLink1_entry#1
byte* initEntry::entryTLastLink1_return
byte* initEntry::entryTLastLink1_return#0
byte* initEntry::entryTLastLink1_return#1
byte* initEntry::entryTLastLink1_return#2
byte* initEntry::entryTLastLink1_return#3
byte*~ initEntry::entryTLo1_$0
byte* initEntry::entryTLo1_entry
byte* initEntry::entryTLo1_entry#0
byte* initEntry::entryTLo1_entry#1
byte* initEntry::entryTLo1_return
byte* initEntry::entryTLo1_return#0
byte* initEntry::entryTLo1_return#1
byte* initEntry::entryTLo1_return#2
byte* initEntry::entryTLo1_return#3
byte*~ initEntry::entryTsLen1_$0
byte* initEntry::entryTsLen1_entry
byte* initEntry::entryTsLen1_entry#0
byte* initEntry::entryTsLen1_entry#1
word* initEntry::entryTsLen1_return
word* initEntry::entryTsLen1_return#0
word* initEntry::entryTsLen1_return#1
word* initEntry::entryTsLen1_return#2
word* initEntry::entryTsLen1_return#3
byte*~ initEntry::entryTsOrder1_$0
byte* initEntry::entryTsOrder1_entry
byte* initEntry::entryTsOrder1_entry#0
byte* initEntry::entryTsOrder1_entry#1
word** initEntry::entryTsOrder1_return
word** initEntry::entryTsOrder1_return#0
word** initEntry::entryTsOrder1_return#1
word** initEntry::entryTsOrder1_return#2
word** initEntry::entryTsOrder1_return#3
byte*~ initEntry::entryUCross1_$0
byte* initEntry::entryUCross1_entry
byte* initEntry::entryUCross1_entry#0
byte* initEntry::entryUCross1_entry#1
word* initEntry::entryUCross1_return
word* initEntry::entryUCross1_return#0
word* initEntry::entryUCross1_return#1
word* initEntry::entryUCross1_return#2
word* initEntry::entryUCross1_return#3
byte initEntry::n
byte initEntry::n#0
byte initEntry::n#1
byte initEntry::n#10
byte initEntry::n#11
byte initEntry::n#12
byte initEntry::n#13
byte initEntry::n#14
byte initEntry::n#15
byte initEntry::n#16
byte initEntry::n#17
byte initEntry::n#18
byte initEntry::n#19
byte initEntry::n#2
byte initEntry::n#20
byte initEntry::n#21
byte initEntry::n#22
byte initEntry::n#23
byte initEntry::n#24
byte initEntry::n#25
byte initEntry::n#26
byte initEntry::n#27
byte initEntry::n#28
byte initEntry::n#29
byte initEntry::n#3
byte initEntry::n#30
byte initEntry::n#31
byte initEntry::n#32
byte initEntry::n#33
byte initEntry::n#34
byte initEntry::n#35
byte initEntry::n#36
byte initEntry::n#37
byte initEntry::n#38
byte initEntry::n#39
byte initEntry::n#4
byte initEntry::n#40
byte initEntry::n#41
byte initEntry::n#5
byte initEntry::n#6
byte initEntry::n#7
byte initEntry::n#8
byte initEntry::n#9
void keyboard_init()
byte keyboard_key_pressed(byte keyboard_key_pressed::key)
number~ keyboard_key_pressed::$0
byte~ keyboard_key_pressed::$1
byte~ keyboard_key_pressed::$2
byte~ keyboard_key_pressed::$3
byte keyboard_key_pressed::colidx
byte keyboard_key_pressed::colidx#0
byte keyboard_key_pressed::colidx#1
byte keyboard_key_pressed::key
byte keyboard_key_pressed::key#0
byte keyboard_key_pressed::key#1
byte keyboard_key_pressed::key#2
byte keyboard_key_pressed::return
byte keyboard_key_pressed::return#0
byte keyboard_key_pressed::return#1
byte keyboard_key_pressed::return#2
byte keyboard_key_pressed::return#3
byte keyboard_key_pressed::return#4
byte keyboard_key_pressed::return#5
byte keyboard_key_pressed::return#6
byte keyboard_key_pressed::rowidx
byte keyboard_key_pressed::rowidx#0
const byte* keyboard_matrix_col_bitmask[8]  = { 1, 2, 4, 8, $10, $20, $40, $80 }
byte keyboard_matrix_read(byte keyboard_matrix_read::rowid)
byte~ keyboard_matrix_read::$0
byte keyboard_matrix_read::return
byte keyboard_matrix_read::return#0
byte keyboard_matrix_read::return#1
byte keyboard_matrix_read::return#2
byte keyboard_matrix_read::return#3
byte keyboard_matrix_read::return#4
byte keyboard_matrix_read::row_pressed_bits
byte keyboard_matrix_read::row_pressed_bits#0
byte keyboard_matrix_read::rowid
byte keyboard_matrix_read::rowid#0
byte keyboard_matrix_read::rowid#1
const byte* keyboard_matrix_row_bitmask[8]  = { $fe, $fd, $fb, $f7, $ef, $df, $bf, $7f }
void main()
byte*~ main::$1
byte*~ main::$2
byte~ main::$20
bool~ main::$21
byte~ main::$22
bool~ main::$23
byte* main::entry1
byte* main::entry1#0
byte* main::entry1#1
byte* main::entry1#10
byte* main::entry1#2
byte* main::entry1#3
byte* main::entry1#4
byte* main::entry1#5
byte* main::entry1#6
byte* main::entry1#7
byte* main::entry1#8
byte* main::entry1#9
byte* main::entry2
byte* main::entry2#0
byte* main::entry2#1
byte* main::entry2#10
byte* main::entry2#11
byte* main::entry2#12
byte* main::entry2#13
byte* main::entry2#14
byte* main::entry2#15
byte* main::entry2#16
byte* main::entry2#2
byte* main::entry2#3
byte* main::entry2#4
byte* main::entry2#5
byte* main::entry2#6
byte* main::entry2#7
byte* main::entry2#8
byte* main::entry2#9
word~ main::fileEntry1_$0
byte*~ main::fileEntry1_$1
byte main::fileEntry1_idx
byte main::fileEntry1_idx#0
byte main::fileEntry1_idx#1
byte* main::fileEntry1_return
byte* main::fileEntry1_return#0
byte* main::fileEntry1_return#1
byte* main::fileEntry1_return#2
byte* main::fileEntry1_return#3
word~ main::fileEntry2_$0
byte*~ main::fileEntry2_$1
byte main::fileEntry2_idx
byte main::fileEntry2_idx#0
byte main::fileEntry2_idx#1
byte* main::fileEntry2_return
byte* main::fileEntry2_return#0
byte* main::fileEntry2_return#1
byte* main::fileEntry2_return#2
byte* main::fileEntry2_return#3
const byte* main::str[$e]  = "** entry 1 **"
const byte* main::str1[$10]  = "- press space -"
const byte* main::str2[$e]  = "** entry 2 **"
const byte* main::str3[$10]  = "- press space -"
void* memset(void* memset::str , byte memset::c , word memset::num)
bool~ memset::$0
bool~ memset::$1
byte*~ memset::$2
bool~ memset::$3
byte*~ memset::$4
byte memset::c
byte memset::c#0
byte memset::c#1
byte memset::c#2
byte memset::c#3
byte memset::c#4
byte* memset::dst
byte* memset::dst#0
byte* memset::dst#1
byte* memset::dst#2
byte* memset::dst#3
byte* memset::end
byte* memset::end#0
byte* memset::end#1
byte* memset::end#2
word memset::num
word memset::num#0
word memset::num#1
word memset::num#2
void* memset::return
void* memset::return#0
void* memset::return#1
void* memset::return#2
void* memset::return#3
void* memset::str
void* memset::str#0
void* memset::str#1
void* memset::str#2
void* memset::str#3
void* memset::str#4
void* memset::str#5
word mul8u(byte mul8u::a , byte mul8u::b)
bool~ mul8u::$0
number~ mul8u::$1
bool~ mul8u::$2
bool~ mul8u::$3
word~ mul8u::$4
byte~ mul8u::$5
word~ mul8u::$6
byte mul8u::a
byte mul8u::a#0
byte mul8u::a#1
byte mul8u::a#2
byte mul8u::a#3
byte mul8u::a#4
byte mul8u::a#5
byte mul8u::a#6
byte mul8u::a#7
byte mul8u::b
byte mul8u::b#0
byte mul8u::b#1
byte mul8u::b#2
word mul8u::mb
word mul8u::mb#0
word mul8u::mb#1
word mul8u::mb#2
word mul8u::mb#3
word mul8u::mb#4
word mul8u::mb#5
word mul8u::res
word mul8u::res#0
word mul8u::res#1
word mul8u::res#2
word mul8u::res#3
word mul8u::res#4
word mul8u::res#5
word mul8u::res#6
word mul8u::return
word mul8u::return#0
word mul8u::return#1
word mul8u::return#2
word mul8u::return#3
word mul8u::return#4
word mul8u::return#5
word mul8u::return#6
void printEntry(byte* printEntry::entry)
byte**~ printEntry::$1
word**~ printEntry::$13
byte*~ printEntry::$17
byte*~ printEntry::$21
byte*~ printEntry::$25
byte*~ printEntry::$29
word*~ printEntry::$33
byte*~ printEntry::$37
byte*~ printEntry::$41
byte*~ printEntry::$45
byte*~ printEntry::$49
byte**~ printEntry::$5
word*~ printEntry::$9
byte* printEntry::entry
byte* printEntry::entry#0
byte* printEntry::entry#1
byte* printEntry::entry#10
byte* printEntry::entry#11
byte* printEntry::entry#12
byte* printEntry::entry#13
byte* printEntry::entry#14
byte* printEntry::entry#15
byte* printEntry::entry#16
byte* printEntry::entry#17
byte* printEntry::entry#18
byte* printEntry::entry#19
byte* printEntry::entry#2
byte* printEntry::entry#20
byte* printEntry::entry#21
byte* printEntry::entry#22
byte* printEntry::entry#23
byte* printEntry::entry#24
byte* printEntry::entry#25
byte* printEntry::entry#26
byte* printEntry::entry#27
byte* printEntry::entry#28
byte* printEntry::entry#29
byte* printEntry::entry#3
byte* printEntry::entry#30
byte* printEntry::entry#31
byte* printEntry::entry#32
byte* printEntry::entry#33
byte* printEntry::entry#34
byte* printEntry::entry#35
byte* printEntry::entry#36
byte* printEntry::entry#37
byte* printEntry::entry#38
byte* printEntry::entry#39
byte* printEntry::entry#4
byte* printEntry::entry#40
byte* printEntry::entry#41
byte* printEntry::entry#42
byte* printEntry::entry#43
byte* printEntry::entry#44
byte* printEntry::entry#45
byte* printEntry::entry#46
byte* printEntry::entry#47
byte* printEntry::entry#48
byte* printEntry::entry#49
byte* printEntry::entry#5
byte* printEntry::entry#50
byte* printEntry::entry#51
byte* printEntry::entry#52
byte* printEntry::entry#53
byte* printEntry::entry#54
byte* printEntry::entry#55
byte* printEntry::entry#56
byte* printEntry::entry#57
byte* printEntry::entry#58
byte* printEntry::entry#59
byte* printEntry::entry#6
byte* printEntry::entry#60
byte* printEntry::entry#61
byte* printEntry::entry#62
byte* printEntry::entry#63
byte* printEntry::entry#64
byte* printEntry::entry#65
byte* printEntry::entry#66
byte* printEntry::entry#67
byte* printEntry::entry#68
byte* printEntry::entry#69
byte* printEntry::entry#7
byte* printEntry::entry#70
byte* printEntry::entry#71
byte* printEntry::entry#72
byte* printEntry::entry#73
byte* printEntry::entry#74
byte* printEntry::entry#75
byte* printEntry::entry#8
byte* printEntry::entry#9
byte*~ printEntry::entryBAddrHi1_$0
byte* printEntry::entryBAddrHi1_entry
byte* printEntry::entryBAddrHi1_entry#0
byte* printEntry::entryBAddrHi1_entry#1
byte* printEntry::entryBAddrHi1_return
byte* printEntry::entryBAddrHi1_return#0
byte* printEntry::entryBAddrHi1_return#1
byte* printEntry::entryBAddrHi1_return#2
byte* printEntry::entryBAddrHi1_return#3
byte*~ printEntry::entryBAddrLo1_$0
byte* printEntry::entryBAddrLo1_entry
byte* printEntry::entryBAddrLo1_entry#0
byte* printEntry::entryBAddrLo1_entry#1
byte* printEntry::entryBAddrLo1_return
byte* printEntry::entryBAddrLo1_return#0
byte* printEntry::entryBAddrLo1_return#1
byte* printEntry::entryBAddrLo1_return#2
byte* printEntry::entryBAddrLo1_return#3
byte*~ printEntry::entryBError1_$0
byte* printEntry::entryBError1_entry
byte* printEntry::entryBError1_entry#0
byte* printEntry::entryBError1_entry#1
byte* printEntry::entryBError1_return
byte* printEntry::entryBError1_return#0
byte* printEntry::entryBError1_return#1
byte* printEntry::entryBError1_return#2
byte* printEntry::entryBError1_return#3
byte*~ printEntry::entryBFlag1_$0
byte* printEntry::entryBFlag1_entry
byte* printEntry::entryBFlag1_entry#0
byte* printEntry::entryBFlag1_entry#1
byte* printEntry::entryBFlag1_return
byte* printEntry::entryBFlag1_return#0
byte* printEntry::entryBFlag1_return#1
byte* printEntry::entryBFlag1_return#2
byte* printEntry::entryBFlag1_return#3
byte*~ printEntry::entryBufDisk1_$0
byte* printEntry::entryBufDisk1_entry
byte* printEntry::entryBufDisk1_entry#0
byte* printEntry::entryBufDisk1_entry#1
byte** printEntry::entryBufDisk1_return
byte** printEntry::entryBufDisk1_return#0
byte** printEntry::entryBufDisk1_return#1
byte** printEntry::entryBufDisk1_return#2
byte** printEntry::entryBufDisk1_return#3
byte*~ printEntry::entryBufEdit1_$0
byte* printEntry::entryBufEdit1_entry
byte* printEntry::entryBufEdit1_entry#0
byte* printEntry::entryBufEdit1_entry#1
byte** printEntry::entryBufEdit1_return
byte** printEntry::entryBufEdit1_return#0
byte** printEntry::entryBufEdit1_return#1
byte** printEntry::entryBufEdit1_return#2
byte** printEntry::entryBufEdit1_return#3
byte*~ printEntry::entrySLastLink1_$0
byte* printEntry::entrySLastLink1_entry
byte* printEntry::entrySLastLink1_entry#0
byte* printEntry::entrySLastLink1_entry#1
byte* printEntry::entrySLastLink1_return
byte* printEntry::entrySLastLink1_return#0
byte* printEntry::entrySLastLink1_return#1
byte* printEntry::entrySLastLink1_return#2
byte* printEntry::entrySLastLink1_return#3
byte*~ printEntry::entryTHi1_$0
byte* printEntry::entryTHi1_entry
byte* printEntry::entryTHi1_entry#0
byte* printEntry::entryTHi1_entry#1
byte* printEntry::entryTHi1_return
byte* printEntry::entryTHi1_return#0
byte* printEntry::entryTHi1_return#1
byte* printEntry::entryTHi1_return#2
byte* printEntry::entryTHi1_return#3
byte*~ printEntry::entryTLastLink1_$0
byte* printEntry::entryTLastLink1_entry
byte* printEntry::entryTLastLink1_entry#0
byte* printEntry::entryTLastLink1_entry#1
byte* printEntry::entryTLastLink1_return
byte* printEntry::entryTLastLink1_return#0
byte* printEntry::entryTLastLink1_return#1
byte* printEntry::entryTLastLink1_return#2
byte* printEntry::entryTLastLink1_return#3
byte*~ printEntry::entryTLo1_$0
byte* printEntry::entryTLo1_entry
byte* printEntry::entryTLo1_entry#0
byte* printEntry::entryTLo1_entry#1
byte* printEntry::entryTLo1_return
byte* printEntry::entryTLo1_return#0
byte* printEntry::entryTLo1_return#1
byte* printEntry::entryTLo1_return#2
byte* printEntry::entryTLo1_return#3
byte*~ printEntry::entryTsLen1_$0
byte* printEntry::entryTsLen1_entry
byte* printEntry::entryTsLen1_entry#0
byte* printEntry::entryTsLen1_entry#1
word* printEntry::entryTsLen1_return
word* printEntry::entryTsLen1_return#0
word* printEntry::entryTsLen1_return#1
word* printEntry::entryTsLen1_return#2
word* printEntry::entryTsLen1_return#3
byte*~ printEntry::entryTsOrder1_$0
byte* printEntry::entryTsOrder1_entry
byte* printEntry::entryTsOrder1_entry#0
byte* printEntry::entryTsOrder1_entry#1
word** printEntry::entryTsOrder1_return
word** printEntry::entryTsOrder1_return#0
word** printEntry::entryTsOrder1_return#1
word** printEntry::entryTsOrder1_return#2
word** printEntry::entryTsOrder1_return#3
byte*~ printEntry::entryUCross1_$0
byte* printEntry::entryUCross1_entry
byte* printEntry::entryUCross1_entry#0
byte* printEntry::entryUCross1_entry#1
word* printEntry::entryUCross1_return
word* printEntry::entryUCross1_return#0
word* printEntry::entryUCross1_return#1
word* printEntry::entryUCross1_return#2
word* printEntry::entryUCross1_return#3
const byte* printEntry::str[$b]  = "bufdisk   "
const byte* printEntry::str1[$b]  = "bufedit   "
const byte* printEntry::str10[$d]  = "baddrhi     "
const byte* printEntry::str11[$d]  = "thi         "
const byte* printEntry::str12[$d]  = "tlo         "
const byte* printEntry::str2[$b]  = "tslen     "
const byte* printEntry::str3[$b]  = "tsorder   "
const byte* printEntry::str4[$d]  = "tlastlink   "
const byte* printEntry::str5[$d]  = "slastlink   "
const byte* printEntry::str6[$d]  = "bflag       "
const byte* printEntry::str7[$d]  = "berror      "
const byte* printEntry::str8[$b]  = "ucross    "
const byte* printEntry::str9[$d]  = "baddrlo     "
void print_char(byte print_char::ch)
byte print_char::ch
byte print_char::ch#0
byte print_char::ch#1
byte print_char::ch#2
byte print_char::ch#3
byte* print_char_cursor
byte* print_char_cursor#0
byte* print_char_cursor#1
byte* print_char_cursor#10
byte* print_char_cursor#100
byte* print_char_cursor#101
byte* print_char_cursor#102
byte* print_char_cursor#103
byte* print_char_cursor#104
byte* print_char_cursor#105
byte* print_char_cursor#106
byte* print_char_cursor#107
byte* print_char_cursor#108
byte* print_char_cursor#109
byte* print_char_cursor#11
byte* print_char_cursor#110
byte* print_char_cursor#111
byte* print_char_cursor#112
byte* print_char_cursor#113
byte* print_char_cursor#114
byte* print_char_cursor#115
byte* print_char_cursor#116
byte* print_char_cursor#117
byte* print_char_cursor#118
byte* print_char_cursor#119
byte* print_char_cursor#12
byte* print_char_cursor#120
byte* print_char_cursor#121
byte* print_char_cursor#122
byte* print_char_cursor#123
byte* print_char_cursor#124
byte* print_char_cursor#125
byte* print_char_cursor#126
byte* print_char_cursor#127
byte* print_char_cursor#128
byte* print_char_cursor#129
byte* print_char_cursor#13
byte* print_char_cursor#130
byte* print_char_cursor#131
byte* print_char_cursor#132
byte* print_char_cursor#133
byte* print_char_cursor#134
byte* print_char_cursor#135
byte* print_char_cursor#136
byte* print_char_cursor#137
byte* print_char_cursor#138
byte* print_char_cursor#139
byte* print_char_cursor#14
byte* print_char_cursor#140
byte* print_char_cursor#141
byte* print_char_cursor#142
byte* print_char_cursor#143
byte* print_char_cursor#144
byte* print_char_cursor#145
byte* print_char_cursor#146
byte* print_char_cursor#147
byte* print_char_cursor#148
byte* print_char_cursor#149
byte* print_char_cursor#15
byte* print_char_cursor#150
byte* print_char_cursor#151
byte* print_char_cursor#152
byte* print_char_cursor#153
byte* print_char_cursor#154
byte* print_char_cursor#155
byte* print_char_cursor#156
byte* print_char_cursor#157
byte* print_char_cursor#158
byte* print_char_cursor#159
byte* print_char_cursor#16
byte* print_char_cursor#160
byte* print_char_cursor#161
byte* print_char_cursor#162
byte* print_char_cursor#163
byte* print_char_cursor#164
byte* print_char_cursor#165
byte* print_char_cursor#166
byte* print_char_cursor#167
byte* print_char_cursor#168
byte* print_char_cursor#169
byte* print_char_cursor#17
byte* print_char_cursor#170
byte* print_char_cursor#171
byte* print_char_cursor#172
byte* print_char_cursor#173
byte* print_char_cursor#174
byte* print_char_cursor#175
byte* print_char_cursor#176
byte* print_char_cursor#177
byte* print_char_cursor#178
byte* print_char_cursor#179
byte* print_char_cursor#18
byte* print_char_cursor#180
byte* print_char_cursor#181
byte* print_char_cursor#182
byte* print_char_cursor#183
byte* print_char_cursor#184
byte* print_char_cursor#185
byte* print_char_cursor#186
byte* print_char_cursor#187
byte* print_char_cursor#188
byte* print_char_cursor#189
byte* print_char_cursor#19
byte* print_char_cursor#190
byte* print_char_cursor#191
byte* print_char_cursor#192
byte* print_char_cursor#193
byte* print_char_cursor#194
byte* print_char_cursor#195
byte* print_char_cursor#196
byte* print_char_cursor#197
byte* print_char_cursor#198
byte* print_char_cursor#199
byte* print_char_cursor#2
byte* print_char_cursor#20
byte* print_char_cursor#200
byte* print_char_cursor#201
byte* print_char_cursor#202
byte* print_char_cursor#203
byte* print_char_cursor#204
byte* print_char_cursor#205
byte* print_char_cursor#206
byte* print_char_cursor#207
byte* print_char_cursor#208
byte* print_char_cursor#21
byte* print_char_cursor#22
byte* print_char_cursor#23
byte* print_char_cursor#24
byte* print_char_cursor#25
byte* print_char_cursor#26
byte* print_char_cursor#27
byte* print_char_cursor#28
byte* print_char_cursor#29
byte* print_char_cursor#3
byte* print_char_cursor#30
byte* print_char_cursor#31
byte* print_char_cursor#32
byte* print_char_cursor#33
byte* print_char_cursor#34
byte* print_char_cursor#35
byte* print_char_cursor#36
byte* print_char_cursor#37
byte* print_char_cursor#38
byte* print_char_cursor#39
byte* print_char_cursor#4
byte* print_char_cursor#40
byte* print_char_cursor#41
byte* print_char_cursor#42
byte* print_char_cursor#43
byte* print_char_cursor#44
byte* print_char_cursor#45
byte* print_char_cursor#46
byte* print_char_cursor#47
byte* print_char_cursor#48
byte* print_char_cursor#49
byte* print_char_cursor#5
byte* print_char_cursor#50
byte* print_char_cursor#51
byte* print_char_cursor#52
byte* print_char_cursor#53
byte* print_char_cursor#54
byte* print_char_cursor#55
byte* print_char_cursor#56
byte* print_char_cursor#57
byte* print_char_cursor#58
byte* print_char_cursor#59
byte* print_char_cursor#6
byte* print_char_cursor#60
byte* print_char_cursor#61
byte* print_char_cursor#62
byte* print_char_cursor#63
byte* print_char_cursor#64
byte* print_char_cursor#65
byte* print_char_cursor#66
byte* print_char_cursor#67
byte* print_char_cursor#68
byte* print_char_cursor#69
byte* print_char_cursor#7
byte* print_char_cursor#70
byte* print_char_cursor#71
byte* print_char_cursor#72
byte* print_char_cursor#73
byte* print_char_cursor#74
byte* print_char_cursor#75
byte* print_char_cursor#76
byte* print_char_cursor#77
byte* print_char_cursor#78
byte* print_char_cursor#79
byte* print_char_cursor#8
byte* print_char_cursor#80
byte* print_char_cursor#81
byte* print_char_cursor#82
byte* print_char_cursor#83
byte* print_char_cursor#84
byte* print_char_cursor#85
byte* print_char_cursor#86
byte* print_char_cursor#87
byte* print_char_cursor#88
byte* print_char_cursor#89
byte* print_char_cursor#9
byte* print_char_cursor#90
byte* print_char_cursor#91
byte* print_char_cursor#92
byte* print_char_cursor#93
byte* print_char_cursor#94
byte* print_char_cursor#95
byte* print_char_cursor#96
byte* print_char_cursor#97
byte* print_char_cursor#98
byte* print_char_cursor#99
void print_cls()
const to_nomodify byte* print_hextab[]  = "0123456789abcdef"z
byte* print_line_cursor
byte* print_line_cursor#0
byte* print_line_cursor#1
byte* print_line_cursor#10
byte* print_line_cursor#100
byte* print_line_cursor#101
byte* print_line_cursor#102
byte* print_line_cursor#103
byte* print_line_cursor#104
byte* print_line_cursor#105
byte* print_line_cursor#106
byte* print_line_cursor#107
byte* print_line_cursor#108
byte* print_line_cursor#109
byte* print_line_cursor#11
byte* print_line_cursor#110
byte* print_line_cursor#111
byte* print_line_cursor#112
byte* print_line_cursor#113
byte* print_line_cursor#114
byte* print_line_cursor#115
byte* print_line_cursor#116
byte* print_line_cursor#117
byte* print_line_cursor#118
byte* print_line_cursor#119
byte* print_line_cursor#12
byte* print_line_cursor#120
byte* print_line_cursor#121
byte* print_line_cursor#122
byte* print_line_cursor#123
byte* print_line_cursor#124
byte* print_line_cursor#125
byte* print_line_cursor#126
byte* print_line_cursor#127
byte* print_line_cursor#128
byte* print_line_cursor#129
byte* print_line_cursor#13
byte* print_line_cursor#130
byte* print_line_cursor#131
byte* print_line_cursor#132
byte* print_line_cursor#133
byte* print_line_cursor#134
byte* print_line_cursor#135
byte* print_line_cursor#136
byte* print_line_cursor#137
byte* print_line_cursor#138
byte* print_line_cursor#139
byte* print_line_cursor#14
byte* print_line_cursor#140
byte* print_line_cursor#141
byte* print_line_cursor#142
byte* print_line_cursor#143
byte* print_line_cursor#144
byte* print_line_cursor#145
byte* print_line_cursor#146
byte* print_line_cursor#147
byte* print_line_cursor#148
byte* print_line_cursor#149
byte* print_line_cursor#15
byte* print_line_cursor#150
byte* print_line_cursor#151
byte* print_line_cursor#152
byte* print_line_cursor#153
byte* print_line_cursor#154
byte* print_line_cursor#16
byte* print_line_cursor#17
byte* print_line_cursor#18
byte* print_line_cursor#19
byte* print_line_cursor#2
byte* print_line_cursor#20
byte* print_line_cursor#21
byte* print_line_cursor#22
byte* print_line_cursor#23
byte* print_line_cursor#24
byte* print_line_cursor#25
byte* print_line_cursor#26
byte* print_line_cursor#27
byte* print_line_cursor#28
byte* print_line_cursor#29
byte* print_line_cursor#3
byte* print_line_cursor#30
byte* print_line_cursor#31
byte* print_line_cursor#32
byte* print_line_cursor#33
byte* print_line_cursor#34
byte* print_line_cursor#35
byte* print_line_cursor#36
byte* print_line_cursor#37
byte* print_line_cursor#38
byte* print_line_cursor#39
byte* print_line_cursor#4
byte* print_line_cursor#40
byte* print_line_cursor#41
byte* print_line_cursor#42
byte* print_line_cursor#43
byte* print_line_cursor#44
byte* print_line_cursor#45
byte* print_line_cursor#46
byte* print_line_cursor#47
byte* print_line_cursor#48
byte* print_line_cursor#49
byte* print_line_cursor#5
byte* print_line_cursor#50
byte* print_line_cursor#51
byte* print_line_cursor#52
byte* print_line_cursor#53
byte* print_line_cursor#54
byte* print_line_cursor#55
byte* print_line_cursor#56
byte* print_line_cursor#57
byte* print_line_cursor#58
byte* print_line_cursor#59
byte* print_line_cursor#6
byte* print_line_cursor#60
byte* print_line_cursor#61
byte* print_line_cursor#62
byte* print_line_cursor#63
byte* print_line_cursor#64
byte* print_line_cursor#65
byte* print_line_cursor#66
byte* print_line_cursor#67
byte* print_line_cursor#68
byte* print_line_cursor#69
byte* print_line_cursor#7
byte* print_line_cursor#70
byte* print_line_cursor#71
byte* print_line_cursor#72
byte* print_line_cursor#73
byte* print_line_cursor#74
byte* print_line_cursor#75
byte* print_line_cursor#76
byte* print_line_cursor#77
byte* print_line_cursor#78
byte* print_line_cursor#79
byte* print_line_cursor#8
byte* print_line_cursor#80
byte* print_line_cursor#81
byte* print_line_cursor#82
byte* print_line_cursor#83
byte* print_line_cursor#84
byte* print_line_cursor#85
byte* print_line_cursor#86
byte* print_line_cursor#87
byte* print_line_cursor#88
byte* print_line_cursor#89
byte* print_line_cursor#9
byte* print_line_cursor#90
byte* print_line_cursor#91
byte* print_line_cursor#92
byte* print_line_cursor#93
byte* print_line_cursor#94
byte* print_line_cursor#95
byte* print_line_cursor#96
byte* print_line_cursor#97
byte* print_line_cursor#98
byte* print_line_cursor#99
void print_ln()
byte*~ print_ln::$0
bool~ print_ln::$1
byte* print_screen
byte* print_screen#0
byte* print_screen#1
byte* print_screen#10
byte* print_screen#11
byte* print_screen#12
byte* print_screen#13
byte* print_screen#14
byte* print_screen#15
byte* print_screen#16
byte* print_screen#17
byte* print_screen#18
byte* print_screen#19
byte* print_screen#2
byte* print_screen#20
byte* print_screen#21
byte* print_screen#22
byte* print_screen#23
byte* print_screen#24
byte* print_screen#25
byte* print_screen#26
byte* print_screen#27
byte* print_screen#28
byte* print_screen#29
byte* print_screen#3
byte* print_screen#30
byte* print_screen#31
byte* print_screen#32
byte* print_screen#33
byte* print_screen#34
byte* print_screen#35
byte* print_screen#36
byte* print_screen#37
byte* print_screen#38
byte* print_screen#4
byte* print_screen#5
byte* print_screen#6
byte* print_screen#7
byte* print_screen#8
byte* print_screen#9
void print_str(byte* print_str::str)
bool~ print_str::$1
byte* print_str::str
byte* print_str::str#0
byte* print_str::str#1
byte* print_str::str#10
byte* print_str::str#11
byte* print_str::str#12
byte* print_str::str#13
byte* print_str::str#14
byte* print_str::str#15
byte* print_str::str#16
byte* print_str::str#17
byte* print_str::str#18
byte* print_str::str#19
byte* print_str::str#2
byte* print_str::str#20
byte* print_str::str#21
byte* print_str::str#3
byte* print_str::str#4
byte* print_str::str#5
byte* print_str::str#6
byte* print_str::str#7
byte* print_str::str#8
byte* print_str::str#9
void print_uchar(byte print_uchar::b)
byte~ print_uchar::$0
number~ print_uchar::$2
byte print_uchar::b
byte print_uchar::b#0
byte print_uchar::b#1
byte print_uchar::b#10
byte print_uchar::b#11
byte print_uchar::b#2
byte print_uchar::b#3
byte print_uchar::b#4
byte print_uchar::b#5
byte print_uchar::b#6
byte print_uchar::b#7
byte print_uchar::b#8
byte print_uchar::b#9
void print_uint(word print_uint::w)
byte~ print_uint::$0
byte~ print_uint::$2
word print_uint::w
word print_uint::w#0
word print_uint::w#1
word print_uint::w#2
word print_uint::w#3
word print_uint::w#4
word print_uint::w#5
word print_uint::w#6

Adding number conversion cast (unumber) 0 in mul8u::$0 = mul8u::a#3 != 0
Adding number conversion cast (unumber) 1 in mul8u::$1 = mul8u::a#4 & 1
Adding number conversion cast (unumber) mul8u::$1 in mul8u::$1 = mul8u::a#4 & (unumber)1
Adding number conversion cast (unumber) 0 in mul8u::$2 = mul8u::$1 != 0
Adding number conversion cast (unumber) 1 in mul8u::$5 = mul8u::a#5 >> 1
Adding number conversion cast (unumber) 1 in mul8u::$6 = mul8u::mb#2 << 1
Adding number conversion cast (unumber) 0 in memset::$0 = memset::num#1 > 0
Adding number conversion cast (unumber) 0 in print_str::$1 = 0 != *print_str::str#18
Adding number conversion cast (unumber) $28 in print_ln::$0 = print_line_cursor#33 + $28
Adding number conversion cast (unumber) 4 in print_uchar::$0 = print_uchar::b#10 >> 4
Adding number conversion cast (unumber) $f in print_uchar::$2 = print_uchar::b#11 & $f
Adding number conversion cast (unumber) print_uchar::$2 in print_uchar::$2 = print_uchar::b#11 & (unumber)$f
Adding number conversion cast (unumber) $3e8 in memset::num#0 = $3e8
Adding number conversion cast (unumber) $ff in *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR) = $ff
Adding number conversion cast (unumber) 0 in *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_B_DDR) = 0
Adding number conversion cast (unumber) 7 in keyboard_key_pressed::$0 = keyboard_key_pressed::key#2 & 7
Adding number conversion cast (unumber) keyboard_key_pressed::$0 in keyboard_key_pressed::$0 = keyboard_key_pressed::key#2 & (unumber)7
Adding number conversion cast (unumber) 3 in keyboard_key_pressed::$1 = keyboard_key_pressed::key#2 >> 3
Adding number conversion cast (unumber) 1 in main::fileEntry1_idx#0 = 1
Adding number conversion cast (unumber) 2 in main::fileEntry2_idx#0 = 2
Adding number conversion cast (unumber) 0 in initEntry::n#0 = 0
Adding number conversion cast (unumber) $11 in initEntry::n#1 = $11
Adding number conversion cast (unumber) 0 in main::$21 = main::$20 == 0
Adding number conversion cast (unumber) 0 in main::$23 = main::$22 == 0
Adding number conversion cast (unumber) 0 in initEntry::entryBufDisk1_$0 = initEntry::entryBufDisk1_entry#1 + 0
Adding number conversion cast (unumber) $1111 in initEntry::$1 = $1111 + initEntry::n#2
Adding number conversion cast (unumber) initEntry::$1 in initEntry::$1 = (unumber)$1111 + initEntry::n#2
Adding number conversion cast (unumber) 2 in initEntry::entryBufEdit1_$0 = initEntry::entryBufEdit1_entry#1 + 2
Adding number conversion cast (unumber) $2222 in initEntry::$3 = $2222 + initEntry::n#3
Adding number conversion cast (unumber) initEntry::$3 in initEntry::$3 = (unumber)$2222 + initEntry::n#3
Adding number conversion cast (unumber) 4 in initEntry::entryTsLen1_$0 = initEntry::entryTsLen1_entry#1 + 4
Adding number conversion cast (unumber) $3333 in initEntry::$5 = $3333 + initEntry::n#4
Adding number conversion cast (unumber) initEntry::$5 in initEntry::$5 = (unumber)$3333 + initEntry::n#4
Adding number conversion cast (unumber) 6 in initEntry::entryTsOrder1_$0 = initEntry::entryTsOrder1_entry#1 + 6
Adding number conversion cast (unumber) $4444 in initEntry::$7 = $4444 + initEntry::n#5
Adding number conversion cast (unumber) initEntry::$7 in initEntry::$7 = (unumber)$4444 + initEntry::n#5
Adding number conversion cast (unumber) 8 in initEntry::entryTLastLink1_$0 = initEntry::entryTLastLink1_entry#1 + 8
Adding number conversion cast (unumber) $55 in initEntry::$9 = $55 + initEntry::n#6
Adding number conversion cast (unumber) initEntry::$9 in initEntry::$9 = (unumber)$55 + initEntry::n#6
Adding number conversion cast (unumber) 9 in initEntry::entrySLastLink1_$0 = initEntry::entrySLastLink1_entry#1 + 9
Adding number conversion cast (unumber) $66 in initEntry::$11 = $66 + initEntry::n#7
Adding number conversion cast (unumber) initEntry::$11 in initEntry::$11 = (unumber)$66 + initEntry::n#7
Adding number conversion cast (unumber) $a in initEntry::entryBFlag1_$0 = initEntry::entryBFlag1_entry#1 + $a
Adding number conversion cast (unumber) $77 in initEntry::$13 = $77 + initEntry::n#8
Adding number conversion cast (unumber) initEntry::$13 in initEntry::$13 = (unumber)$77 + initEntry::n#8
Adding number conversion cast (unumber) $b in initEntry::entryBError1_$0 = initEntry::entryBError1_entry#1 + $b
Adding number conversion cast (unumber) $88 in initEntry::$15 = $88 + initEntry::n#9
Adding number conversion cast (unumber) initEntry::$15 in initEntry::$15 = (unumber)$88 + initEntry::n#9
Adding number conversion cast (unumber) $c in initEntry::entryUCross1_$0 = initEntry::entryUCross1_entry#1 + $c
Adding number conversion cast (unumber) $9999 in initEntry::$17 = $9999 + initEntry::n#10
Adding number conversion cast (unumber) initEntry::$17 in initEntry::$17 = (unumber)$9999 + initEntry::n#10
Adding number conversion cast (unumber) $e in initEntry::entryBAddrLo1_$0 = initEntry::entryBAddrLo1_entry#1 + $e
Adding number conversion cast (unumber) $aa in initEntry::$19 = $aa + initEntry::n#11
Adding number conversion cast (unumber) initEntry::$19 in initEntry::$19 = (unumber)$aa + initEntry::n#11
Adding number conversion cast (unumber) $f in initEntry::entryBAddrHi1_$0 = initEntry::entryBAddrHi1_entry#1 + $f
Adding number conversion cast (unumber) $bb in initEntry::$21 = $bb + initEntry::n#12
Adding number conversion cast (unumber) initEntry::$21 in initEntry::$21 = (unumber)$bb + initEntry::n#12
Adding number conversion cast (unumber) $10 in initEntry::entryTHi1_$0 = initEntry::entryTHi1_entry#1 + $10
Adding number conversion cast (unumber) $cc in initEntry::$23 = $cc + initEntry::n#13
Adding number conversion cast (unumber) initEntry::$23 in initEntry::$23 = (unumber)$cc + initEntry::n#13
Adding number conversion cast (unumber) $11 in initEntry::entryTLo1_$0 = initEntry::entryTLo1_entry#1 + $11
Adding number conversion cast (unumber) $dd in initEntry::$25 = $dd + initEntry::n#14
Adding number conversion cast (unumber) initEntry::$25 in initEntry::$25 = (unumber)$dd + initEntry::n#14
Adding number conversion cast (unumber) 0 in printEntry::entryBufDisk1_$0 = printEntry::entryBufDisk1_entry#1 + 0
Adding number conversion cast (unumber) 2 in printEntry::entryBufEdit1_$0 = printEntry::entryBufEdit1_entry#1 + 2
Adding number conversion cast (unumber) 4 in printEntry::entryTsLen1_$0 = printEntry::entryTsLen1_entry#1 + 4
Adding number conversion cast (unumber) 6 in printEntry::entryTsOrder1_$0 = printEntry::entryTsOrder1_entry#1 + 6
Adding number conversion cast (unumber) 8 in printEntry::entryTLastLink1_$0 = printEntry::entryTLastLink1_entry#1 + 8
Adding number conversion cast (unumber) 9 in printEntry::entrySLastLink1_$0 = printEntry::entrySLastLink1_entry#1 + 9
Adding number conversion cast (unumber) $a in printEntry::entryBFlag1_$0 = printEntry::entryBFlag1_entry#1 + $a
Adding number conversion cast (unumber) $b in printEntry::entryBError1_$0 = printEntry::entryBError1_entry#1 + $b
Adding number conversion cast (unumber) $c in printEntry::entryUCross1_$0 = printEntry::entryUCross1_entry#1 + $c
Adding number conversion cast (unumber) $e in printEntry::entryBAddrLo1_$0 = printEntry::entryBAddrLo1_entry#1 + $e
Adding number conversion cast (unumber) $f in printEntry::entryBAddrHi1_$0 = printEntry::entryBAddrHi1_entry#1 + $f
Adding number conversion cast (unumber) $10 in printEntry::entryTHi1_$0 = printEntry::entryTHi1_entry#1 + $10
Adding number conversion cast (unumber) $11 in printEntry::entryTLo1_$0 = printEntry::entryTLo1_entry#1 + $11
Successful SSA optimization PassNAddNumberTypeConversions
Inlining cast memset::dst#0 = (byte*)memset::str#2
Inlining cast memset::num#0 = (unumber)$3e8
Inlining cast *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR) = (unumber)$ff
Inlining cast *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_B_DDR) = (unumber)0
Inlining cast main::fileEntry1_idx#0 = (unumber)1
Inlining cast main::fileEntry2_idx#0 = (unumber)2
Inlining cast initEntry::n#0 = (unumber)0
Inlining cast initEntry::n#1 = (unumber)$11
Inlining cast *initEntry::$0 = (byte*)initEntry::$1
Inlining cast *initEntry::$2 = (byte*)initEntry::$3
Inlining cast *initEntry::$6 = (word*)initEntry::$7
Successful SSA optimization Pass2InlineCast
Simplifying constant pointer cast (struct MOS6526_CIA*) 56320
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast 4
Simplifying constant integer cast $f
Simplifying constant integer cast $3e8
Simplifying constant integer cast $ff
Simplifying constant integer cast 0
Simplifying constant integer cast 7
Simplifying constant integer cast 3
Simplifying constant integer cast 1
Simplifying constant integer cast 2
Simplifying constant integer cast 0
Simplifying constant integer cast $11
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $1111
Simplifying constant integer cast 2
Simplifying constant integer cast $2222
Simplifying constant integer cast 4
Simplifying constant integer cast $3333
Simplifying constant integer cast 6
Simplifying constant integer cast $4444
Simplifying constant integer cast 8
Simplifying constant integer cast initEntry::entryTLastLink1_$0
Simplifying constant integer cast $55
Simplifying constant integer cast 9
Simplifying constant integer cast initEntry::entrySLastLink1_$0
Simplifying constant integer cast $66
Simplifying constant integer cast $a
Simplifying constant integer cast initEntry::entryBFlag1_$0
Simplifying constant integer cast $77
Simplifying constant integer cast $b
Simplifying constant integer cast $88
Simplifying constant integer cast $c
Simplifying constant integer cast $9999
Simplifying constant integer cast $e
Simplifying constant integer cast initEntry::entryBAddrLo1_$0
Simplifying constant integer cast $aa
Simplifying constant integer cast $f
Simplifying constant integer cast initEntry::entryBAddrHi1_$0
Simplifying constant integer cast $bb
Simplifying constant integer cast $10
Simplifying constant integer cast initEntry::entryTHi1_$0
Simplifying constant integer cast $cc
Simplifying constant integer cast $11
Simplifying constant integer cast initEntry::entryTLo1_$0
Simplifying constant integer cast $dd
Simplifying constant integer cast 0
Simplifying constant integer cast 2
Simplifying constant integer cast 4
Simplifying constant integer cast 6
Simplifying constant integer cast 8
Simplifying constant integer cast printEntry::entryTLastLink1_$0
Simplifying constant integer cast 9
Simplifying constant integer cast printEntry::entrySLastLink1_$0
Simplifying constant integer cast $a
Simplifying constant integer cast printEntry::entryBFlag1_$0
Simplifying constant integer cast $b
Simplifying constant integer cast $c
Simplifying constant integer cast $e
Simplifying constant integer cast printEntry::entryBAddrLo1_$0
Simplifying constant integer cast $f
Simplifying constant integer cast printEntry::entryBAddrHi1_$0
Simplifying constant integer cast $10
Simplifying constant integer cast printEntry::entryTHi1_$0
Simplifying constant integer cast $11
Simplifying constant integer cast printEntry::entryTLo1_$0
Simplifying constant pointer cast (byte*) 1024
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type 0
Finalized unsigned number type 1
Finalized unsigned number type 0
Finalized unsigned number type 1
Finalized unsigned number type 1
Finalized unsigned number type 0
Finalized unsigned number type 0
Finalized unsigned number type $28
Finalized unsigned number type 4
Finalized unsigned number type $f
Finalized unsigned number type $3e8
Finalized unsigned number type $ff
Finalized unsigned number type 0
Finalized unsigned number type 7
Finalized unsigned number type 3
Finalized unsigned number type 1
Finalized unsigned number type 2
Finalized unsigned number type 0
Finalized unsigned number type $11
Finalized unsigned number type 0
Finalized unsigned number type 0
Finalized unsigned number type 0
Finalized unsigned number type $1111
Finalized unsigned number type 2
Finalized unsigned number type $2222
Finalized unsigned number type 4
Finalized unsigned number type $3333
Finalized unsigned number type 6
Finalized unsigned number type $4444
Finalized unsigned number type 8
Finalized unsigned number type $55
Finalized unsigned number type 9
Finalized unsigned number type $66
Finalized unsigned number type $a
Finalized unsigned number type $77
Finalized unsigned number type $b
Finalized unsigned number type $88
Finalized unsigned number type $c
Finalized unsigned number type $9999
Finalized unsigned number type $e
Finalized unsigned number type $aa
Finalized unsigned number type $f
Finalized unsigned number type $bb
Finalized unsigned number type $10
Finalized unsigned number type $cc
Finalized unsigned number type $11
Finalized unsigned number type $dd
Finalized unsigned number type 0
Finalized unsigned number type 2
Finalized unsigned number type 4
Finalized unsigned number type 6
Finalized unsigned number type 8
Finalized unsigned number type 9
Finalized unsigned number type $a
Finalized unsigned number type $b
Finalized unsigned number type $c
Finalized unsigned number type $e
Finalized unsigned number type $f
Finalized unsigned number type $10
Finalized unsigned number type $11
Successful SSA optimization PassNFinalizeNumberTypeConversions
Inferred type updated to byte in mul8u::$1 = mul8u::a#4 & 1
Inferred type updated to byte in print_uchar::$2 = print_uchar::b#11 & $f
Inferred type updated to byte in keyboard_key_pressed::$0 = keyboard_key_pressed::key#2 & 7
Inferred type updated to word in initEntry::$1 = $1111 + initEntry::n#2
Inferred type updated to word in initEntry::$3 = $2222 + initEntry::n#3
Inferred type updated to word in initEntry::$5 = $3333 + initEntry::n#4
Inferred type updated to word in initEntry::$7 = $4444 + initEntry::n#5
Inferred type updated to byte in initEntry::$9 = $55 + initEntry::n#6
Inferred type updated to byte in initEntry::$11 = $66 + initEntry::n#7
Inferred type updated to byte in initEntry::$13 = $77 + initEntry::n#8
Inferred type updated to byte in initEntry::$15 = $88 + initEntry::n#9
Inferred type updated to word in initEntry::$17 = $9999 + initEntry::n#10
Inferred type updated to byte in initEntry::$19 = $aa + initEntry::n#11
Inferred type updated to byte in initEntry::$21 = $bb + initEntry::n#12
Inferred type updated to byte in initEntry::$23 = $cc + initEntry::n#13
Inferred type updated to byte in initEntry::$25 = $dd + initEntry::n#14
Inversing boolean not [9] mul8u::$3 = mul8u::$1 == 0 from [8] mul8u::$2 = mul8u::$1 != 0
Inversing boolean not [26] memset::$1 = memset::num#1 <= 0 from [25] memset::$0 = memset::num#1 > 0
Successful SSA optimization Pass2UnaryNotSimplification
Alias mul8u::a#3 = mul8u::a#4 mul8u::a#7 
Alias mul8u::mb#3 = mul8u::mb#4 mul8u::mb#5 
Alias mul8u::res#2 = mul8u::res#5 mul8u::res#4 mul8u::return#0 mul8u::res#3 mul8u::return#4 mul8u::return#1 
Alias mul8u::a#0 = mul8u::$5 
Alias mul8u::mb#1 = mul8u::$6 
Alias mul8u::res#1 = mul8u::$4 
Alias memset::return#0 = memset::str#1 memset::return#3 memset::return#1 
Alias memset::str#2 = memset::str#3 
Alias memset::num#1 = memset::num#2 
Alias memset::c#3 = memset::c#4 
Alias memset::end#0 = memset::$2 
Alias memset::c#1 = memset::c#2 
Alias memset::dst#2 = memset::dst#3 
Alias memset::end#1 = memset::end#2 
Alias memset::str#4 = memset::str#5 
Alias print_str::str#18 = print_str::str#19 print_str::str#20 
Alias print_char_cursor#1 = print_char_cursor#144 print_char_cursor#145 print_char_cursor#74 
Alias print_char_cursor#0 = print_char_cursor#73 
Alias print_line_cursor#0 = print_ln::$0 print_line_cursor#34 print_char_cursor#2 print_line_cursor#35 print_char_cursor#76 print_line_cursor#1 print_char_cursor#3 
Alias print_uchar::b#0 = print_uint::$0 
Alias print_uint::w#5 = print_uint::w#6 
Alias print_char_cursor#4 = print_char_cursor#77 
Alias print_uchar::b#1 = print_uint::$2 
Alias print_char_cursor#5 = print_char_cursor#78 print_char_cursor#79 print_char_cursor#6 
Alias print_uchar::b#10 = print_uchar::b#11 
Alias print_char_cursor#7 = print_char_cursor#80 
Alias print_char_cursor#8 = print_char_cursor#81 print_char_cursor#82 print_char_cursor#9 
Alias print_char_cursor#10 = print_char_cursor#84 print_char_cursor#11 
Alias print_line_cursor#2 = print_screen#3 print_screen#2 print_char_cursor#12 print_line_cursor#36 print_char_cursor#85 print_line_cursor#3 print_char_cursor#13 
Alias keyboard_matrix_read::return#0 = keyboard_matrix_read::row_pressed_bits#0 keyboard_matrix_read::$0 keyboard_matrix_read::return#3 keyboard_matrix_read::return#1 
Alias keyboard_key_pressed::colidx#0 = keyboard_key_pressed::$0 keyboard_key_pressed::colidx#1 
Alias keyboard_key_pressed::rowidx#0 = keyboard_key_pressed::$1 
Alias keyboard_matrix_read::return#2 = keyboard_matrix_read::return#4 
Alias keyboard_key_pressed::return#0 = keyboard_key_pressed::$3 keyboard_key_pressed::return#4 keyboard_key_pressed::return#1 
Alias print_screen#13 = print_screen#37 print_screen#38 print_screen#34 print_screen#31 print_screen#28 print_screen#25 print_screen#22 print_screen#19 print_screen#16 print_screen#9 print_screen#5 print_screen#35 print_screen#32 print_screen#29 print_screen#26 print_screen#23 print_screen#20 print_screen#17 
Alias print_line_cursor#101 = print_line_cursor#153 print_line_cursor#154 print_line_cursor#152 print_line_cursor#151 print_line_cursor#150 print_line_cursor#149 print_line_cursor#147 print_line_cursor#133 print_line_cursor#117 print_line_cursor#85 print_line_cursor#66 
Alias print_char_cursor#149 = print_char_cursor#207 print_char_cursor#208 print_char_cursor#206 print_char_cursor#205 print_char_cursor#204 print_char_cursor#203 print_char_cursor#202 print_char_cursor#201 print_char_cursor#200 print_char_cursor#184 print_char_cursor#168 
Alias main::fileEntry1_idx#0 = main::fileEntry1_idx#1 
Alias mul8u::return#2 = mul8u::return#5 
Alias main::entry1#0 = main::fileEntry1_return#0 main::fileEntry1_$1 main::fileEntry1_return#2 main::fileEntry1_return#1 main::fileEntry1_return#3 main::$1 main::entry1#7 main::entry1#5 main::entry1#3 main::entry1#1 main::entry1#10 main::entry1#9 main::entry1#8 main::entry1#6 main::entry1#4 main::entry1#2 
Alias main::fileEntry2_idx#0 = main::fileEntry2_idx#1 
Alias mul8u::return#3 = mul8u::return#6 
Alias main::entry2#0 = main::fileEntry2_return#0 main::fileEntry2_$1 main::fileEntry2_return#2 main::fileEntry2_return#1 main::fileEntry2_return#3 main::$2 main::entry2#1 main::entry2#16 main::entry2#15 main::entry2#14 main::entry2#13 main::entry2#12 main::entry2#11 main::entry2#10 main::entry2#9 
Alias print_line_cursor#37 = print_line_cursor#4 print_line_cursor#67 
Alias print_char_cursor#14 = print_char_cursor#86 
Alias print_char_cursor#15 = print_char_cursor#87 
Alias print_line_cursor#38 = print_line_cursor#5 
Alias print_char_cursor#16 = print_char_cursor#88 
Alias print_line_cursor#39 = print_line_cursor#6 
Alias print_char_cursor#17 = print_char_cursor#89 
Alias print_char_cursor#18 = print_char_cursor#90 
Alias print_line_cursor#40 = print_line_cursor#7 
Alias print_line_cursor#118 = print_line_cursor#8 print_line_cursor#41 
Alias print_char_cursor#19 = print_char_cursor#91 
Alias print_char_cursor#20 = print_char_cursor#92 
Alias keyboard_key_pressed::return#2 = keyboard_key_pressed::return#5 
Alias print_screen#10 = print_screen#14 print_screen#6 print_screen#36 print_screen#33 print_screen#30 print_screen#27 print_screen#24 print_screen#21 print_screen#18 
Alias print_line_cursor#102 = print_line_cursor#86 print_line_cursor#68 
Alias print_char_cursor#150 = print_char_cursor#169 print_char_cursor#185 
Alias main::entry2#2 = main::entry2#7 main::entry2#8 main::entry2#6 main::entry2#5 main::entry2#4 main::entry2#3 
Alias print_line_cursor#42 = print_line_cursor#9 print_line_cursor#69 
Alias print_char_cursor#21 = print_char_cursor#93 
Alias print_char_cursor#22 = print_char_cursor#94 
Alias print_line_cursor#10 = print_line_cursor#43 
Alias print_char_cursor#23 = print_char_cursor#95 
Alias print_line_cursor#11 = print_line_cursor#44 
Alias print_char_cursor#24 = print_char_cursor#96 
Alias print_char_cursor#25 = print_char_cursor#97 
Alias print_line_cursor#12 = print_line_cursor#45 
Alias print_line_cursor#119 = print_line_cursor#13 print_line_cursor#46 
Alias print_char_cursor#26 = print_char_cursor#98 
Alias print_char_cursor#27 = print_char_cursor#99 
Alias keyboard_key_pressed::return#3 = keyboard_key_pressed::return#6 
Alias print_screen#11 = print_screen#15 print_screen#7 
Alias print_line_cursor#103 = print_line_cursor#87 print_line_cursor#70 
Alias print_char_cursor#151 = print_char_cursor#170 print_char_cursor#186 
Alias print_line_cursor#14 = print_line_cursor#47 print_line_cursor#48 print_line_cursor#15 
Alias print_char_cursor#100 = print_char_cursor#28 print_char_cursor#101 print_char_cursor#29 
Alias initEntry::entry#10 = initEntry::entryBufDisk1_entry#0 initEntry::entry#2 initEntry::entryBufDisk1_entry#1 initEntry::entry#27 initEntry::entry#15 initEntry::entry#3 initEntry::entryBufEdit1_entry#0 initEntry::entryBufEdit1_entry#1 initEntry::entry#28 initEntry::entry#16 initEntry::entry#4 initEntry::entryTsLen1_entry#0 initEntry::entryTsLen1_entry#1 initEntry::entry#29 initEntry::entry#17 initEntry::entry#5 initEntry::entryTsOrder1_entry#0 initEntry::entryTsOrder1_entry#1 initEntry::entry#30 initEntry::entry#18 initEntry::entry#6 initEntry::entryTLastLink1_entry#0 initEntry::entryTLastLink1_entry#1 initEntry::entry#31 initEntry::entry#19 initEntry::entry#7 initEntry::entrySLastLink1_entry#0 initEntry::entrySLastLink1_entry#1 initEntry::entry#32 initEntry::entry#20 initEntry::entry#8 initEntry::entryBFlag1_entry#0 initEntry::entryBFlag1_entry#1 initEntry::entry#33 initEntry::entry#21 initEntry::entry#9 initEntry::entryBError1_entry#0 initEntry::entryBError1_entry#1 initEntry::entry#34 initEntry::entry#22 initEntry::entryUCross1_entry#0 initEntry::entryUCross1_entry#1 initEntry::entry#35 initEntry::entry#23 initEntry::entry#11 initEntry::entryBAddrLo1_entry#0 initEntry::entryBAddrLo1_entry#1 initEntry::entry#36 initEntry::entry#24 initEntry::entry#12 initEntry::entryBAddrHi1_entry#0 initEntry::entryBAddrHi1_entry#1 initEntry::entry#37 initEntry::entry#25 initEntry::entry#13 initEntry::entryTHi1_entry#0 initEntry::entryTHi1_entry#1 initEntry::entry#38 initEntry::entry#26 initEntry::entry#14 initEntry::entryTLo1_entry#0 initEntry::entryTLo1_entry#1 
Alias initEntry::n#10 = initEntry::n#28 initEntry::n#41 initEntry::n#15 initEntry::n#2 initEntry::n#29 initEntry::n#16 initEntry::n#3 initEntry::n#30 initEntry::n#17 initEntry::n#4 initEntry::n#31 initEntry::n#18 initEntry::n#5 initEntry::n#32 initEntry::n#19 initEntry::n#6 initEntry::n#33 initEntry::n#20 initEntry::n#7 initEntry::n#34 initEntry::n#21 initEntry::n#8 initEntry::n#35 initEntry::n#22 initEntry::n#9 initEntry::n#36 initEntry::n#23 initEntry::n#37 initEntry::n#24 initEntry::n#11 initEntry::n#38 initEntry::n#25 initEntry::n#12 initEntry::n#39 initEntry::n#26 initEntry::n#13 initEntry::n#40 initEntry::n#27 initEntry::n#14 
Alias initEntry::entryBufDisk1_return#0 = initEntry::entryBufDisk1_return#2 initEntry::entryBufDisk1_return#1 initEntry::entryBufDisk1_return#3 initEntry::$0 
Alias initEntry::entryBufEdit1_return#0 = initEntry::entryBufEdit1_return#2 initEntry::entryBufEdit1_return#1 initEntry::entryBufEdit1_return#3 initEntry::$2 
Alias initEntry::entryTsLen1_return#0 = initEntry::entryTsLen1_return#2 initEntry::entryTsLen1_return#1 initEntry::entryTsLen1_return#3 initEntry::$4 
Alias initEntry::entryTsOrder1_return#0 = initEntry::entryTsOrder1_return#2 initEntry::entryTsOrder1_return#1 initEntry::entryTsOrder1_return#3 initEntry::$6 
Alias initEntry::entryTLastLink1_return#0 = initEntry::entryTLastLink1_$0 initEntry::entryTLastLink1_return#2 initEntry::entryTLastLink1_return#1 initEntry::entryTLastLink1_return#3 initEntry::$8 
Alias initEntry::entrySLastLink1_return#0 = initEntry::entrySLastLink1_$0 initEntry::entrySLastLink1_return#2 initEntry::entrySLastLink1_return#1 initEntry::entrySLastLink1_return#3 initEntry::$10 
Alias initEntry::entryBFlag1_return#0 = initEntry::entryBFlag1_$0 initEntry::entryBFlag1_return#2 initEntry::entryBFlag1_return#1 initEntry::entryBFlag1_return#3 initEntry::$12 
Alias initEntry::entryBError1_return#0 = initEntry::entryBError1_$0 initEntry::entryBError1_return#2 initEntry::entryBError1_return#1 initEntry::entryBError1_return#3 initEntry::$14 
Alias initEntry::entryUCross1_return#0 = initEntry::entryUCross1_return#2 initEntry::entryUCross1_return#1 initEntry::entryUCross1_return#3 initEntry::$16 
Alias initEntry::entryBAddrLo1_return#0 = initEntry::entryBAddrLo1_$0 initEntry::entryBAddrLo1_return#2 initEntry::entryBAddrLo1_return#1 initEntry::entryBAddrLo1_return#3 initEntry::$18 
Alias initEntry::entryBAddrHi1_return#0 = initEntry::entryBAddrHi1_$0 initEntry::entryBAddrHi1_return#2 initEntry::entryBAddrHi1_return#1 initEntry::entryBAddrHi1_return#3 initEntry::$20 
Alias initEntry::entryTHi1_return#0 = initEntry::entryTHi1_$0 initEntry::entryTHi1_return#2 initEntry::entryTHi1_return#1 initEntry::entryTHi1_return#3 initEntry::$22 
Alias initEntry::entryTLo1_return#0 = initEntry::entryTLo1_$0 initEntry::entryTLo1_return#2 initEntry::entryTLo1_return#1 initEntry::entryTLo1_return#3 initEntry::$24 
Alias printEntry::entry#10 = printEntry::entry#2 printEntry::entry#15 printEntry::entryBufDisk1_entry#0 printEntry::entryBufDisk1_entry#1 printEntry::entry#64 printEntry::entry#52 printEntry::entry#40 printEntry::entry#28 printEntry::entry#16 printEntry::entry#3 printEntry::entryBufEdit1_entry#0 printEntry::entryBufEdit1_entry#1 printEntry::entry#65 printEntry::entry#53 printEntry::entry#41 printEntry::entry#29 printEntry::entry#17 printEntry::entry#4 printEntry::entryTsLen1_entry#0 printEntry::entryTsLen1_entry#1 printEntry::entry#66 printEntry::entry#54 printEntry::entry#42 printEntry::entry#30 printEntry::entry#18 printEntry::entry#5 printEntry::entryTsOrder1_entry#0 printEntry::entryTsOrder1_entry#1 printEntry::entry#67 printEntry::entry#55 printEntry::entry#43 printEntry::entry#31 printEntry::entry#19 printEntry::entry#6 printEntry::entryTLastLink1_entry#0 printEntry::entryTLastLink1_entry#1 printEntry::entry#68 printEntry::entry#56 printEntry::entry#44 printEntry::entry#32 printEntry::entry#20 printEntry::entry#7 printEntry::entrySLastLink1_entry#0 printEntry::entrySLastLink1_entry#1 printEntry::entry#69 printEntry::entry#57 printEntry::entry#45 printEntry::entry#33 printEntry::entry#21 printEntry::entry#8 printEntry::entryBFlag1_entry#0 printEntry::entryBFlag1_entry#1 printEntry::entry#70 printEntry::entry#58 printEntry::entry#46 printEntry::entry#34 printEntry::entry#22 printEntry::entry#9 printEntry::entryBError1_entry#0 printEntry::entryBError1_entry#1 printEntry::entry#71 printEntry::entry#59 printEntry::entry#47 printEntry::entry#35 printEntry::entry#23 printEntry::entryUCross1_entry#0 printEntry::entryUCross1_entry#1 printEntry::entry#72 printEntry::entry#60 printEntry::entry#48 printEntry::entry#36 printEntry::entry#24 printEntry::entry#11 printEntry::entryBAddrLo1_entry#0 printEntry::entryBAddrLo1_entry#1 printEntry::entry#73 printEntry::entry#61 printEntry::entry#49 printEntry::entry#37 printEntry::entry#25 printEntry::entry#12 printEntry::entryBAddrHi1_entry#0 printEntry::entryBAddrHi1_entry#1 printEntry::entry#74 printEntry::entry#62 printEntry::entry#50 printEntry::entry#38 printEntry::entry#26 printEntry::entry#13 printEntry::entryTHi1_entry#0 printEntry::entryTHi1_entry#1 printEntry::entry#75 printEntry::entry#63 printEntry::entry#51 printEntry::entry#39 printEntry::entry#27 printEntry::entry#14 printEntry::entryTLo1_entry#0 printEntry::entryTLo1_entry#1 
Alias print_line_cursor#104 = print_line_cursor#134 print_line_cursor#148 print_line_cursor#120 print_line_cursor#88 print_line_cursor#71 
Alias print_char_cursor#102 = print_char_cursor#30 print_char_cursor#187 print_char_cursor#171 print_char_cursor#153 
Alias printEntry::entryBufDisk1_return#0 = printEntry::entryBufDisk1_return#2 printEntry::entryBufDisk1_return#1 printEntry::entryBufDisk1_return#3 printEntry::$1 
Alias print_char_cursor#103 = print_char_cursor#31 
Alias print_line_cursor#105 = print_line_cursor#16 print_line_cursor#49 print_line_cursor#135 print_line_cursor#121 print_line_cursor#89 print_line_cursor#72 
Alias print_char_cursor#104 = print_char_cursor#32 
Alias print_char_cursor#105 = print_char_cursor#33 print_char_cursor#188 print_char_cursor#172 print_char_cursor#154 
Alias printEntry::entryBufEdit1_return#0 = printEntry::entryBufEdit1_return#2 printEntry::entryBufEdit1_return#1 printEntry::entryBufEdit1_return#3 printEntry::$5 
Alias print_char_cursor#106 = print_char_cursor#34 
Alias print_line_cursor#106 = print_line_cursor#17 print_line_cursor#50 print_line_cursor#136 print_line_cursor#122 print_line_cursor#90 print_line_cursor#73 
Alias print_char_cursor#107 = print_char_cursor#35 
Alias print_char_cursor#108 = print_char_cursor#36 print_char_cursor#189 print_char_cursor#173 print_char_cursor#155 
Alias printEntry::entryTsLen1_return#0 = printEntry::entryTsLen1_return#2 printEntry::entryTsLen1_return#1 printEntry::entryTsLen1_return#3 printEntry::$9 
Alias print_char_cursor#109 = print_char_cursor#37 
Alias print_line_cursor#107 = print_line_cursor#18 print_line_cursor#51 print_line_cursor#137 print_line_cursor#123 print_line_cursor#91 print_line_cursor#74 
Alias print_char_cursor#110 = print_char_cursor#38 
Alias print_char_cursor#111 = print_char_cursor#39 print_char_cursor#190 print_char_cursor#174 print_char_cursor#156 
Alias printEntry::entryTsOrder1_return#0 = printEntry::entryTsOrder1_return#2 printEntry::entryTsOrder1_return#1 printEntry::entryTsOrder1_return#3 printEntry::$13 
Alias print_char_cursor#112 = print_char_cursor#40 
Alias print_line_cursor#108 = print_line_cursor#19 print_line_cursor#52 print_line_cursor#138 print_line_cursor#124 print_line_cursor#92 print_line_cursor#75 
Alias print_char_cursor#113 = print_char_cursor#41 
Alias print_char_cursor#114 = print_char_cursor#42 print_char_cursor#191 print_char_cursor#175 print_char_cursor#157 
Alias printEntry::entryTLastLink1_return#0 = printEntry::entryTLastLink1_$0 printEntry::entryTLastLink1_return#2 printEntry::entryTLastLink1_return#1 printEntry::entryTLastLink1_return#3 printEntry::$17 
Alias print_char_cursor#115 = print_char_cursor#43 
Alias print_line_cursor#109 = print_line_cursor#20 print_line_cursor#53 print_line_cursor#139 print_line_cursor#125 print_line_cursor#93 print_line_cursor#76 
Alias print_char_cursor#116 = print_char_cursor#44 
Alias print_char_cursor#117 = print_char_cursor#45 print_char_cursor#192 print_char_cursor#176 print_char_cursor#158 
Alias printEntry::entrySLastLink1_return#0 = printEntry::entrySLastLink1_$0 printEntry::entrySLastLink1_return#2 printEntry::entrySLastLink1_return#1 printEntry::entrySLastLink1_return#3 printEntry::$21 
Alias print_char_cursor#118 = print_char_cursor#46 
Alias print_line_cursor#110 = print_line_cursor#21 print_line_cursor#54 print_line_cursor#140 print_line_cursor#126 print_line_cursor#94 print_line_cursor#77 
Alias print_char_cursor#119 = print_char_cursor#47 
Alias print_char_cursor#120 = print_char_cursor#48 print_char_cursor#193 print_char_cursor#177 print_char_cursor#159 
Alias printEntry::entryBFlag1_return#0 = printEntry::entryBFlag1_$0 printEntry::entryBFlag1_return#2 printEntry::entryBFlag1_return#1 printEntry::entryBFlag1_return#3 printEntry::$25 
Alias print_char_cursor#121 = print_char_cursor#49 
Alias print_line_cursor#111 = print_line_cursor#22 print_line_cursor#55 print_line_cursor#141 print_line_cursor#127 print_line_cursor#95 print_line_cursor#78 
Alias print_char_cursor#122 = print_char_cursor#50 
Alias print_char_cursor#123 = print_char_cursor#51 print_char_cursor#194 print_char_cursor#178 print_char_cursor#160 
Alias printEntry::entryBError1_return#0 = printEntry::entryBError1_$0 printEntry::entryBError1_return#2 printEntry::entryBError1_return#1 printEntry::entryBError1_return#3 printEntry::$29 
Alias print_char_cursor#124 = print_char_cursor#52 
Alias print_line_cursor#112 = print_line_cursor#23 print_line_cursor#56 print_line_cursor#142 print_line_cursor#128 print_line_cursor#96 print_line_cursor#79 
Alias print_char_cursor#125 = print_char_cursor#53 
Alias print_char_cursor#126 = print_char_cursor#54 print_char_cursor#195 print_char_cursor#179 print_char_cursor#161 
Alias printEntry::entryUCross1_return#0 = printEntry::entryUCross1_return#2 printEntry::entryUCross1_return#1 printEntry::entryUCross1_return#3 printEntry::$33 
Alias print_char_cursor#127 = print_char_cursor#55 
Alias print_line_cursor#113 = print_line_cursor#24 print_line_cursor#57 print_line_cursor#143 print_line_cursor#129 print_line_cursor#97 print_line_cursor#80 
Alias print_char_cursor#128 = print_char_cursor#56 
Alias print_char_cursor#129 = print_char_cursor#57 print_char_cursor#196 print_char_cursor#180 print_char_cursor#162 
Alias printEntry::entryBAddrLo1_return#0 = printEntry::entryBAddrLo1_$0 printEntry::entryBAddrLo1_return#2 printEntry::entryBAddrLo1_return#1 printEntry::entryBAddrLo1_return#3 printEntry::$37 
Alias print_char_cursor#130 = print_char_cursor#58 
Alias print_line_cursor#114 = print_line_cursor#25 print_line_cursor#58 print_line_cursor#144 print_line_cursor#130 print_line_cursor#98 print_line_cursor#81 
Alias print_char_cursor#131 = print_char_cursor#59 
Alias print_char_cursor#132 = print_char_cursor#60 print_char_cursor#197 print_char_cursor#181 print_char_cursor#163 
Alias printEntry::entryBAddrHi1_return#0 = printEntry::entryBAddrHi1_$0 printEntry::entryBAddrHi1_return#2 printEntry::entryBAddrHi1_return#1 printEntry::entryBAddrHi1_return#3 printEntry::$41 
Alias print_char_cursor#133 = print_char_cursor#61 
Alias print_line_cursor#115 = print_line_cursor#26 print_line_cursor#59 print_line_cursor#145 print_line_cursor#131 print_line_cursor#99 print_line_cursor#82 
Alias print_char_cursor#134 = print_char_cursor#62 
Alias print_char_cursor#135 = print_char_cursor#63 print_char_cursor#198 print_char_cursor#182 print_char_cursor#164 
Alias printEntry::entryTHi1_return#0 = printEntry::entryTHi1_$0 printEntry::entryTHi1_return#2 printEntry::entryTHi1_return#1 printEntry::entryTHi1_return#3 printEntry::$45 
Alias print_char_cursor#136 = print_char_cursor#64 
Alias print_line_cursor#100 = print_line_cursor#27 print_line_cursor#60 print_line_cursor#146 print_line_cursor#132 print_line_cursor#116 print_line_cursor#83 
Alias print_char_cursor#137 = print_char_cursor#65 
Alias print_char_cursor#138 = print_char_cursor#66 print_char_cursor#199 print_char_cursor#183 print_char_cursor#165 
Alias printEntry::entryTLo1_return#0 = printEntry::entryTLo1_$0 printEntry::entryTLo1_return#2 printEntry::entryTLo1_return#1 printEntry::entryTLo1_return#3 printEntry::$49 
Alias print_char_cursor#139 = print_char_cursor#67 
Alias print_line_cursor#28 = print_line_cursor#61 print_line_cursor#62 print_line_cursor#29 
Alias print_char_cursor#140 = print_char_cursor#68 print_char_cursor#141 print_char_cursor#69 
Alias print_screen#0 = print_line_cursor#30 print_char_cursor#70 print_line_cursor#84 print_char_cursor#166 print_screen#12 print_screen#8 print_screen#4 print_screen#1 
Alias print_line_cursor#31 = print_line_cursor#63 print_line_cursor#64 print_line_cursor#32 
Alias print_char_cursor#142 = print_char_cursor#71 print_char_cursor#143 print_char_cursor#72 
Successful SSA optimization Pass2AliasElimination
Alias mul8u::a#3 = mul8u::a#5 
Alias mul8u::mb#2 = mul8u::mb#3 
Successful SSA optimization Pass2AliasElimination
Identical Phi Values memset::num#1 memset::num#0
Identical Phi Values memset::str#2 memset::str#0
Identical Phi Values memset::c#3 memset::c#0
Identical Phi Values memset::end#1 memset::end#0
Identical Phi Values memset::str#4 memset::str#2
Identical Phi Values memset::c#1 memset::c#3
Identical Phi Values print_char_cursor#0 print_char_cursor#10
Identical Phi Values print_char_cursor#75 print_char_cursor#146
Identical Phi Values print_char_cursor#4 print_char_cursor#8
Identical Phi Values print_char_cursor#5 print_char_cursor#8
Identical Phi Values print_char_cursor#7 print_char_cursor#10
Identical Phi Values print_char_cursor#8 print_char_cursor#10
Identical Phi Values keyboard_matrix_read::rowid#1 keyboard_matrix_read::rowid#0
Identical Phi Values print_screen#13 print_screen#0
Identical Phi Values print_line_cursor#101 print_screen#0
Identical Phi Values print_char_cursor#149 print_screen#0
Identical Phi Values print_line_cursor#37 print_line_cursor#2
Identical Phi Values print_char_cursor#14 print_line_cursor#2
Identical Phi Values print_char_cursor#15 print_char_cursor#1
Identical Phi Values print_line_cursor#38 print_line_cursor#0
Identical Phi Values print_char_cursor#16 print_line_cursor#0
Identical Phi Values print_line_cursor#39 print_line_cursor#0
Identical Phi Values print_char_cursor#17 print_line_cursor#0
Identical Phi Values print_char_cursor#18 print_char_cursor#140
Identical Phi Values print_line_cursor#40 print_line_cursor#28
Identical Phi Values print_line_cursor#118 print_line_cursor#0
Identical Phi Values print_char_cursor#19 print_line_cursor#0
Identical Phi Values print_char_cursor#20 print_char_cursor#1
Identical Phi Values print_screen#10 print_screen#13
Identical Phi Values print_line_cursor#102 print_line_cursor#118
Identical Phi Values print_char_cursor#150 print_char_cursor#20
Identical Phi Values main::entry2#2 main::entry2#0
Identical Phi Values print_line_cursor#42 print_line_cursor#2
Identical Phi Values print_char_cursor#21 print_line_cursor#2
Identical Phi Values print_char_cursor#22 print_char_cursor#1
Identical Phi Values print_line_cursor#10 print_line_cursor#0
Identical Phi Values print_char_cursor#23 print_line_cursor#0
Identical Phi Values print_line_cursor#11 print_line_cursor#0
Identical Phi Values print_char_cursor#24 print_line_cursor#0
Identical Phi Values print_char_cursor#25 print_char_cursor#140
Identical Phi Values print_line_cursor#12 print_line_cursor#28
Identical Phi Values print_line_cursor#119 print_line_cursor#0
Identical Phi Values print_char_cursor#26 print_line_cursor#0
Identical Phi Values print_char_cursor#27 print_char_cursor#1
Identical Phi Values print_screen#11 print_screen#10
Identical Phi Values print_line_cursor#103 print_line_cursor#119
Identical Phi Values print_char_cursor#151 print_char_cursor#27
Identical Phi Values print_line_cursor#14 print_line_cursor#2
Identical Phi Values print_char_cursor#100 print_line_cursor#2
Identical Phi Values print_char_cursor#102 print_char_cursor#1
Identical Phi Values print_char_cursor#103 print_char_cursor#5
Identical Phi Values print_line_cursor#105 print_line_cursor#0
Identical Phi Values print_char_cursor#104 print_line_cursor#0
Identical Phi Values print_char_cursor#105 print_char_cursor#1
Identical Phi Values print_char_cursor#106 print_char_cursor#5
Identical Phi Values print_line_cursor#106 print_line_cursor#0
Identical Phi Values print_char_cursor#107 print_line_cursor#0
Identical Phi Values print_char_cursor#108 print_char_cursor#1
Identical Phi Values print_char_cursor#109 print_char_cursor#5
Identical Phi Values print_line_cursor#107 print_line_cursor#0
Identical Phi Values print_char_cursor#110 print_line_cursor#0
Identical Phi Values print_char_cursor#111 print_char_cursor#1
Identical Phi Values print_char_cursor#112 print_char_cursor#5
Identical Phi Values print_line_cursor#108 print_line_cursor#0
Identical Phi Values print_char_cursor#113 print_line_cursor#0
Identical Phi Values print_char_cursor#114 print_char_cursor#1
Identical Phi Values print_char_cursor#115 print_char_cursor#8
Identical Phi Values print_line_cursor#109 print_line_cursor#0
Identical Phi Values print_char_cursor#116 print_line_cursor#0
Identical Phi Values print_char_cursor#117 print_char_cursor#1
Identical Phi Values print_char_cursor#118 print_char_cursor#8
Identical Phi Values print_line_cursor#110 print_line_cursor#0
Identical Phi Values print_char_cursor#119 print_line_cursor#0
Identical Phi Values print_char_cursor#120 print_char_cursor#1
Identical Phi Values print_char_cursor#121 print_char_cursor#8
Identical Phi Values print_line_cursor#111 print_line_cursor#0
Identical Phi Values print_char_cursor#122 print_line_cursor#0
Identical Phi Values print_char_cursor#123 print_char_cursor#1
Identical Phi Values print_char_cursor#124 print_char_cursor#8
Identical Phi Values print_line_cursor#112 print_line_cursor#0
Identical Phi Values print_char_cursor#125 print_line_cursor#0
Identical Phi Values print_char_cursor#126 print_char_cursor#1
Identical Phi Values print_char_cursor#127 print_char_cursor#5
Identical Phi Values print_line_cursor#113 print_line_cursor#0
Identical Phi Values print_char_cursor#128 print_line_cursor#0
Identical Phi Values print_char_cursor#129 print_char_cursor#1
Identical Phi Values print_char_cursor#130 print_char_cursor#8
Identical Phi Values print_line_cursor#114 print_line_cursor#0
Identical Phi Values print_char_cursor#131 print_line_cursor#0
Identical Phi Values print_char_cursor#132 print_char_cursor#1
Identical Phi Values print_char_cursor#133 print_char_cursor#8
Identical Phi Values print_line_cursor#115 print_line_cursor#0
Identical Phi Values print_char_cursor#134 print_line_cursor#0
Identical Phi Values print_char_cursor#135 print_char_cursor#1
Identical Phi Values print_char_cursor#136 print_char_cursor#8
Identical Phi Values print_line_cursor#100 print_line_cursor#0
Identical Phi Values print_char_cursor#137 print_line_cursor#0
Identical Phi Values print_char_cursor#138 print_char_cursor#1
Identical Phi Values print_char_cursor#139 print_char_cursor#8
Identical Phi Values print_line_cursor#28 print_line_cursor#0
Identical Phi Values print_char_cursor#140 print_line_cursor#0
Identical Phi Values print_line_cursor#31 print_line_cursor#14
Identical Phi Values print_char_cursor#142 print_char_cursor#100
Successful SSA optimization Pass2IdenticalPhiElimination
Identical Phi Values memset::return#0 memset::str#0
Identical Phi Values print_char_cursor#147 print_char_cursor#1
Identical Phi Values print_line_cursor#2 print_screen#0
Identical Phi Values print_char_cursor#152 print_line_cursor#0
Identical Phi Values print_line_cursor#104 print_line_cursor#0
Successful SSA optimization Pass2IdenticalPhiElimination
Simple Condition mul8u::$0 [5] if(mul8u::a#3!=0) goto mul8u::@2
Simple Condition mul8u::$3 [8] if(mul8u::$1==0) goto mul8u::@4
Simple Condition memset::$1 [16] if(memset::num#0<=0) goto memset::@1
Simple Condition memset::$3 [23] if(memset::dst#2!=memset::end#0) goto memset::@4
Simple Condition print_str::$1 [30] if(0!=*print_str::str#18) goto print_str::@2
Simple Condition print_ln::$1 [40] if(print_line_cursor#0<print_char_cursor#146) goto print_ln::@1
Simple Condition main::$21 [132] if(main::$20==0) goto main::@1
Simple Condition main::$23 [156] if(main::$22==0) goto main::@3
Successful SSA optimization Pass2ConditionalJumpSimplification
Constant mul8u::res#0 = 0
Constant memset::c#0 = ' '
Constant memset::num#0 = $3e8
Constant main::fileEntry1_idx#0 = 1
Constant mul8u::b#0 = SIZEOF_ENTRY
Constant main::fileEntry2_idx#0 = 2
Constant mul8u::b#1 = SIZEOF_ENTRY
Constant initEntry::n#0 = 0
Constant initEntry::n#1 = $11
Constant print_str::str#1 = main::str
Constant print_str::str#2 = main::str1
Constant keyboard_key_pressed::key#0 = KEY_SPACE
Constant print_str::str#3 = main::str2
Constant print_str::str#4 = main::str3
Constant keyboard_key_pressed::key#1 = KEY_SPACE
Constant print_str::str#5 = printEntry::str
Constant print_str::str#6 = printEntry::str1
Constant print_str::str#7 = printEntry::str2
Constant print_str::str#8 = printEntry::str3
Constant print_str::str#9 = printEntry::str4
Constant print_str::str#10 = printEntry::str5
Constant print_str::str#11 = printEntry::str6
Constant print_str::str#12 = printEntry::str7
Constant print_str::str#13 = printEntry::str8
Constant print_str::str#14 = printEntry::str9
Constant print_str::str#15 = printEntry::str10
Constant print_str::str#16 = printEntry::str11
Constant print_str::str#17 = printEntry::str12
Constant print_screen#0 = (byte*) 1024
Successful SSA optimization Pass2ConstantIdentification
Constant memset::str#0 = (void*)print_screen#0
Constant mul8u::a#1 = main::fileEntry1_idx#0
Constant mul8u::a#2 = main::fileEntry2_idx#0
Successful SSA optimization Pass2ConstantIdentification
Constant memset::$4 = (byte*)memset::str#0
Constant memset::dst#0 = (byte*)memset::str#0
Constant memset::return#2 = memset::str#0
Successful SSA optimization Pass2ConstantIdentification
if() condition always false - eliminating [16] if(memset::num#0<=0) goto memset::@1
Successful SSA optimization Pass2ConstantIfs
Consolidated constant strings into main::str1
Successful SSA optimization Pass2ConstantStringConsolidation
Converting *(pointer+n) to pointer[n] [164] *initEntry::entryBufDisk1_return#0 = (byte*)initEntry::$1  -- ((byte**)initEntry::entry#10)[0]
Converting *(pointer+n) to pointer[n] [168] *initEntry::entryBufEdit1_return#0 = (byte*)initEntry::$3  -- ((byte**)initEntry::entry#10)[2]
Converting *(pointer+n) to pointer[n] [172] *initEntry::entryTsLen1_return#0 = initEntry::$5  -- ((word*)initEntry::entry#10)[4]
Converting *(pointer+n) to pointer[n] [176] *initEntry::entryTsOrder1_return#0 = (word*)initEntry::$7  -- ((word**)initEntry::entry#10)[6]
Converting *(pointer+n) to pointer[n] [179] *initEntry::entryTLastLink1_return#0 = initEntry::$9  -- initEntry::entry#10[8]
Converting *(pointer+n) to pointer[n] [182] *initEntry::entrySLastLink1_return#0 = initEntry::$11  -- initEntry::entry#10[9]
Converting *(pointer+n) to pointer[n] [185] *initEntry::entryBFlag1_return#0 = initEntry::$13  -- initEntry::entry#10[$a]
Converting *(pointer+n) to pointer[n] [188] *initEntry::entryBError1_return#0 = initEntry::$15  -- initEntry::entry#10[$b]
Converting *(pointer+n) to pointer[n] [192] *initEntry::entryUCross1_return#0 = initEntry::$17  -- ((word*)initEntry::entry#10)[$c]
Converting *(pointer+n) to pointer[n] [195] *initEntry::entryBAddrLo1_return#0 = initEntry::$19  -- initEntry::entry#10[$e]
Converting *(pointer+n) to pointer[n] [198] *initEntry::entryBAddrHi1_return#0 = initEntry::$21  -- initEntry::entry#10[$f]
Converting *(pointer+n) to pointer[n] [201] *initEntry::entryTHi1_return#0 = initEntry::$23  -- initEntry::entry#10[$10]
Converting *(pointer+n) to pointer[n] [204] *initEntry::entryTLo1_return#0 = initEntry::$25  -- initEntry::entry#10[$11]
Converting *(pointer+n) to pointer[n] [212] print_uint::w#0 = (word)*printEntry::entryBufDisk1_return#0  -- ((byte**)printEntry::entry#10)[0]
Converting *(pointer+n) to pointer[n] [222] print_uint::w#1 = (word)*printEntry::entryBufEdit1_return#0  -- ((byte**)printEntry::entry#10)[2]
Converting *(pointer+n) to pointer[n] [232] print_uint::w#2 = *printEntry::entryTsLen1_return#0  -- ((word*)printEntry::entry#10)[4]
Converting *(pointer+n) to pointer[n] [242] print_uint::w#3 = (word)*printEntry::entryTsOrder1_return#0  -- ((word**)printEntry::entry#10)[6]
Converting *(pointer+n) to pointer[n] [251] print_uchar::b#2 = *printEntry::entryTLastLink1_return#0  -- printEntry::entry#10[8]
Converting *(pointer+n) to pointer[n] [260] print_uchar::b#3 = *printEntry::entrySLastLink1_return#0  -- printEntry::entry#10[9]
Converting *(pointer+n) to pointer[n] [269] print_uchar::b#4 = *printEntry::entryBFlag1_return#0  -- printEntry::entry#10[$a]
Converting *(pointer+n) to pointer[n] [278] print_uchar::b#5 = *printEntry::entryBError1_return#0  -- printEntry::entry#10[$b]
Converting *(pointer+n) to pointer[n] [288] print_uint::w#4 = *printEntry::entryUCross1_return#0  -- ((word*)printEntry::entry#10)[$c]
Converting *(pointer+n) to pointer[n] [297] print_uchar::b#6 = *printEntry::entryBAddrLo1_return#0  -- printEntry::entry#10[$e]
Converting *(pointer+n) to pointer[n] [306] print_uchar::b#7 = *printEntry::entryBAddrHi1_return#0  -- printEntry::entry#10[$f]
Converting *(pointer+n) to pointer[n] [315] print_uchar::b#8 = *printEntry::entryTHi1_return#0  -- printEntry::entry#10[$10]
Converting *(pointer+n) to pointer[n] [324] print_uchar::b#9 = *printEntry::entryTLo1_return#0  -- printEntry::entry#10[$11]
Successful SSA optimization Pass2InlineDerefIdx
Simplifying expression containing zero (byte*)CIA1 in [75] *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_A) = keyboard_matrix_row_bitmask[keyboard_matrix_read::rowid#0]
Simplifying expression containing zero initEntry::entry#10 in [161] initEntry::entryBufDisk1_$0 = initEntry::entry#10 + 0
Simplifying expression containing zero (byte**)initEntry::entry#10 in [164] ((byte**)initEntry::entry#10)[0] = (byte*)initEntry::$1
Simplifying expression containing zero printEntry::entry#10 in [210] printEntry::entryBufDisk1_$0 = printEntry::entry#10 + 0
Simplifying expression containing zero (byte**)printEntry::entry#10 in [212] print_uint::w#0 = (word)((byte**)printEntry::entry#10)[0]
Successful SSA optimization PassNSimplifyExpressionWithZero
Eliminating unused variable initEntry::entryBufDisk1_return#0 and assignment [105] initEntry::entryBufDisk1_return#0 = (byte**)initEntry::entryBufDisk1_$0
Eliminating unused variable initEntry::entryBufEdit1_return#0 and assignment [109] initEntry::entryBufEdit1_return#0 = (byte**)initEntry::entryBufEdit1_$0
Eliminating unused variable initEntry::entryTsLen1_return#0 and assignment [113] initEntry::entryTsLen1_return#0 = (word*)initEntry::entryTsLen1_$0
Eliminating unused variable initEntry::entryTsOrder1_return#0 and assignment [117] initEntry::entryTsOrder1_return#0 = (word**)initEntry::entryTsOrder1_$0
Eliminating unused variable initEntry::entryTLastLink1_return#0 and assignment [120] initEntry::entryTLastLink1_return#0 = initEntry::entry#10 + 8
Eliminating unused variable initEntry::entrySLastLink1_return#0 and assignment [123] initEntry::entrySLastLink1_return#0 = initEntry::entry#10 + 9
Eliminating unused variable initEntry::entryBFlag1_return#0 and assignment [126] initEntry::entryBFlag1_return#0 = initEntry::entry#10 + $a
Eliminating unused variable initEntry::entryBError1_return#0 and assignment [129] initEntry::entryBError1_return#0 = initEntry::entry#10 + $b
Eliminating unused variable initEntry::entryUCross1_return#0 and assignment [133] initEntry::entryUCross1_return#0 = (word*)initEntry::entryUCross1_$0
Eliminating unused variable initEntry::entryBAddrLo1_return#0 and assignment [136] initEntry::entryBAddrLo1_return#0 = initEntry::entry#10 + $e
Eliminating unused variable initEntry::entryBAddrHi1_return#0 and assignment [139] initEntry::entryBAddrHi1_return#0 = initEntry::entry#10 + $f
Eliminating unused variable initEntry::entryTHi1_return#0 and assignment [142] initEntry::entryTHi1_return#0 = initEntry::entry#10 + $10
Eliminating unused variable initEntry::entryTLo1_return#0 and assignment [145] initEntry::entryTLo1_return#0 = initEntry::entry#10 + $11
Eliminating unused variable printEntry::entryBufDisk1_return#0 and assignment [152] printEntry::entryBufDisk1_return#0 = (byte**)printEntry::entryBufDisk1_$0
Eliminating unused variable printEntry::entryBufEdit1_return#0 and assignment [158] printEntry::entryBufEdit1_return#0 = (byte**)printEntry::entryBufEdit1_$0
Eliminating unused variable printEntry::entryTsLen1_return#0 and assignment [164] printEntry::entryTsLen1_return#0 = (word*)printEntry::entryTsLen1_$0
Eliminating unused variable printEntry::entryTsOrder1_return#0 and assignment [170] printEntry::entryTsOrder1_return#0 = (word**)printEntry::entryTsOrder1_$0
Eliminating unused variable printEntry::entryTLastLink1_return#0 and assignment [175] printEntry::entryTLastLink1_return#0 = printEntry::entry#10 + 8
Eliminating unused variable printEntry::entrySLastLink1_return#0 and assignment [180] printEntry::entrySLastLink1_return#0 = printEntry::entry#10 + 9
Eliminating unused variable printEntry::entryBFlag1_return#0 and assignment [185] printEntry::entryBFlag1_return#0 = printEntry::entry#10 + $a
Eliminating unused variable printEntry::entryBError1_return#0 and assignment [190] printEntry::entryBError1_return#0 = printEntry::entry#10 + $b
Eliminating unused variable printEntry::entryUCross1_return#0 and assignment [196] printEntry::entryUCross1_return#0 = (word*)printEntry::entryUCross1_$0
Eliminating unused variable printEntry::entryBAddrLo1_return#0 and assignment [201] printEntry::entryBAddrLo1_return#0 = printEntry::entry#10 + $e
Eliminating unused variable printEntry::entryBAddrHi1_return#0 and assignment [206] printEntry::entryBAddrHi1_return#0 = printEntry::entry#10 + $f
Eliminating unused variable printEntry::entryTHi1_return#0 and assignment [211] printEntry::entryTHi1_return#0 = printEntry::entry#10 + $10
Eliminating unused variable printEntry::entryTLo1_return#0 and assignment [216] printEntry::entryTLo1_return#0 = printEntry::entry#10 + $11
Eliminating unused constant memset::return#2
Eliminating unused constant OFFSET_STRUCT_MOS6526_CIA_PORT_A
Successful SSA optimization PassNEliminateUnusedVars
Eliminating unused variable initEntry::entryBufDisk1_$0 and assignment [104] initEntry::entryBufDisk1_$0 = initEntry::entry#10
Eliminating unused variable initEntry::entryBufEdit1_$0 and assignment [107] initEntry::entryBufEdit1_$0 = initEntry::entry#10 + 2
Eliminating unused variable initEntry::entryTsLen1_$0 and assignment [110] initEntry::entryTsLen1_$0 = initEntry::entry#10 + 4
Eliminating unused variable initEntry::entryTsOrder1_$0 and assignment [113] initEntry::entryTsOrder1_$0 = initEntry::entry#10 + 6
Eliminating unused variable initEntry::entryUCross1_$0 and assignment [124] initEntry::entryUCross1_$0 = initEntry::entry#10 + $c
Eliminating unused variable printEntry::entryBufDisk1_$0 and assignment [138] printEntry::entryBufDisk1_$0 = printEntry::entry#10
Eliminating unused variable printEntry::entryBufEdit1_$0 and assignment [143] printEntry::entryBufEdit1_$0 = printEntry::entry#10 + 2
Eliminating unused variable printEntry::entryTsLen1_$0 and assignment [148] printEntry::entryTsLen1_$0 = printEntry::entry#10 + 4
Eliminating unused variable printEntry::entryTsOrder1_$0 and assignment [153] printEntry::entryTsOrder1_$0 = printEntry::entry#10 + 6
Eliminating unused variable printEntry::entryUCross1_$0 and assignment [174] printEntry::entryUCross1_$0 = printEntry::entry#10 + $c
Successful SSA optimization PassNEliminateUnusedVars
Removing unused procedure __start
Removing unused procedure block __start
Removing unused procedure block __start::__init1
Removing unused procedure block __start::@1
Removing unused procedure block __start::@2
Removing unused procedure block __start::@return
Successful SSA optimization PassNEliminateEmptyStart
Constant right-side identified [11] memset::end#0 = memset::$4 + memset::num#0
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant memset::end#0 = memset::$4+memset::num#0
Successful SSA optimization Pass2ConstantIdentification
Inlining Noop Cast [132] print_uint::w#0 = (word)*((byte**)printEntry::entry#10) keeping *((byte**)printEntry::entry#10)
Inlining Noop Cast [136] print_uint::w#1 = (word)((byte**)printEntry::entry#10)[2] keeping ((byte**)printEntry::entry#10)[2]
Inlining Noop Cast [144] print_uint::w#3 = (word)((word**)printEntry::entry#10)[6] keeping ((word**)printEntry::entry#10)[6]
Successful SSA optimization Pass2NopCastInlining
Inlining constant with var siblings mul8u::res#0
Inlining constant with var siblings mul8u::b#0
Inlining constant with var siblings mul8u::b#1
Inlining constant with var siblings mul8u::a#1
Inlining constant with var siblings mul8u::a#2
Inlining constant with var siblings memset::dst#0
Inlining constant with var siblings print_str::str#1
Inlining constant with var siblings print_str::str#2
Inlining constant with var siblings print_str::str#3
Inlining constant with var siblings print_str::str#4
Inlining constant with var siblings print_str::str#5
Inlining constant with var siblings print_str::str#6
Inlining constant with var siblings print_str::str#7
Inlining constant with var siblings print_str::str#8
Inlining constant with var siblings print_str::str#9
Inlining constant with var siblings print_str::str#10
Inlining constant with var siblings print_str::str#11
Inlining constant with var siblings print_str::str#12
Inlining constant with var siblings print_str::str#13
Inlining constant with var siblings print_str::str#14
Inlining constant with var siblings print_str::str#15
Inlining constant with var siblings print_str::str#16
Inlining constant with var siblings print_str::str#17
Inlining constant with var siblings keyboard_key_pressed::key#0
Inlining constant with var siblings keyboard_key_pressed::key#1
Inlining constant with var siblings initEntry::n#0
Inlining constant with var siblings initEntry::n#1
Constant inlined main::str3 = main::str1
Constant inlined print_str::str#13 = printEntry::str8
Constant inlined print_str::str#12 = printEntry::str7
Constant inlined print_str::str#11 = printEntry::str6
Constant inlined print_str::str#10 = printEntry::str5
Constant inlined print_str::str#17 = printEntry::str12
Constant inlined print_str::str#16 = printEntry::str11
Constant inlined print_str::str#15 = printEntry::str10
Constant inlined print_str::str#14 = printEntry::str9
Constant inlined initEntry::n#1 = $11
Constant inlined initEntry::n#0 = 0
Constant inlined memset::$4 = (byte*)memset::str#0
Constant inlined keyboard_key_pressed::key#0 = KEY_SPACE
Constant inlined keyboard_key_pressed::key#1 = KEY_SPACE
Constant inlined print_str::str#9 = printEntry::str4
Constant inlined mul8u::res#0 = 0
Constant inlined mul8u::b#1 = SIZEOF_ENTRY
Constant inlined mul8u::a#2 = main::fileEntry2_idx#0
Constant inlined mul8u::b#0 = SIZEOF_ENTRY
Constant inlined mul8u::a#1 = main::fileEntry1_idx#0
Constant inlined print_str::str#4 = main::str1
Constant inlined print_str::str#3 = main::str2
Constant inlined print_str::str#2 = main::str1
Constant inlined memset::dst#0 = (byte*)memset::str#0
Constant inlined print_str::str#1 = main::str
Constant inlined print_str::str#8 = printEntry::str3
Constant inlined print_str::str#7 = printEntry::str2
Constant inlined print_str::str#6 = printEntry::str1
Constant inlined print_str::str#5 = printEntry::str
Successful SSA optimization Pass2ConstantInlining
Identical Phi Values mul8u::b#2 SIZEOF_ENTRY
Identical Phi Values keyboard_key_pressed::key#2 KEY_SPACE
Successful SSA optimization Pass2IdenticalPhiElimination
Constant right-side identified [1] mul8u::mb#0 = (word)SIZEOF_ENTRY
Constant right-side identified [55] keyboard_key_pressed::colidx#0 = KEY_SPACE & 7
Constant right-side identified [56] keyboard_key_pressed::rowidx#0 = KEY_SPACE >> 3
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant mul8u::mb#0 = (word)SIZEOF_ENTRY
Constant keyboard_key_pressed::colidx#0 = KEY_SPACE&7
Constant keyboard_key_pressed::rowidx#0 = KEY_SPACE>>3
Successful SSA optimization Pass2ConstantIdentification
Constant keyboard_matrix_read::rowid#0 = keyboard_key_pressed::rowidx#0
Successful SSA optimization Pass2ConstantIdentification
Inlining constant with var siblings mul8u::mb#0
Constant inlined mul8u::mb#0 = (word)SIZEOF_ENTRY
Constant inlined keyboard_matrix_read::rowid#0 = keyboard_key_pressed::rowidx#0
Successful SSA optimization Pass2ConstantInlining
Consolidated array index constant in *(keyboard_matrix_row_bitmask+keyboard_key_pressed::rowidx#0)
Consolidated array index constant in *(keyboard_matrix_col_bitmask+keyboard_key_pressed::colidx#0)
Successful SSA optimization Pass2ConstantAdditionElimination
Finalized unsigned number type 2
Finalized unsigned number type 8
Finalized unsigned number type $a
Finalized unsigned number type $10
Finalized unsigned number type 8
Finalized unsigned number type 8
Successful SSA optimization Pass2FinalizeAllNumbers
Added new block during phi lifting mul8u::@6(between mul8u::@2 and mul8u::@4)
Added new block during phi lifting print_ln::@3(between print_ln::@1 and print_ln::@1)
Adding NOP phi() at start of main
Adding NOP phi() at start of main::@7
Adding NOP phi() at start of main::fileEntry1
Adding NOP phi() at start of main::fileEntry1_@return
Adding NOP phi() at start of main::@5
Adding NOP phi() at start of main::fileEntry2
Adding NOP phi() at start of main::fileEntry2_@return
Adding NOP phi() at start of main::@11
Adding NOP phi() at start of main::@12
Adding NOP phi() at start of main::@18
Adding NOP phi() at start of main::@1
Adding NOP phi() at start of main::@2
Adding NOP phi() at start of main::@20
Adding NOP phi() at start of main::@26
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@4
Adding NOP phi() at start of main::@28
Adding NOP phi() at start of mul8u::@3
Adding NOP phi() at start of initEntry::entryBufDisk1
Adding NOP phi() at start of initEntry::entryBufDisk1_@return
Adding NOP phi() at start of initEntry::entryBufEdit1
Adding NOP phi() at start of initEntry::entryBufEdit1_@return
Adding NOP phi() at start of initEntry::entryTsLen1
Adding NOP phi() at start of initEntry::entryTsLen1_@return
Adding NOP phi() at start of initEntry::entryTsOrder1
Adding NOP phi() at start of initEntry::entryTsOrder1_@return
Adding NOP phi() at start of initEntry::entryTLastLink1
Adding NOP phi() at start of initEntry::entryTLastLink1_@return
Adding NOP phi() at start of initEntry::entrySLastLink1
Adding NOP phi() at start of initEntry::entrySLastLink1_@return
Adding NOP phi() at start of initEntry::entryBFlag1
Adding NOP phi() at start of initEntry::entryBFlag1_@return
Adding NOP phi() at start of initEntry::entryBError1
Adding NOP phi() at start of initEntry::entryBError1_@return
Adding NOP phi() at start of initEntry::entryUCross1
Adding NOP phi() at start of initEntry::entryUCross1_@return
Adding NOP phi() at start of initEntry::entryBAddrLo1
Adding NOP phi() at start of initEntry::entryBAddrLo1_@return
Adding NOP phi() at start of initEntry::entryBAddrHi1
Adding NOP phi() at start of initEntry::entryBAddrHi1_@return
Adding NOP phi() at start of initEntry::entryTHi1
Adding NOP phi() at start of initEntry::entryTHi1_@return
Adding NOP phi() at start of initEntry::entryTLo1
Adding NOP phi() at start of initEntry::entryTLo1_@return
Adding NOP phi() at start of print_cls
Adding NOP phi() at start of print_cls::@1
Adding NOP phi() at start of print_ln::@2
Adding NOP phi() at start of printEntry::@14
Adding NOP phi() at start of printEntry::entryBufDisk1
Adding NOP phi() at start of printEntry::entryBufDisk1_@return
Adding NOP phi() at start of printEntry::@17
Adding NOP phi() at start of printEntry::entryBufEdit1
Adding NOP phi() at start of printEntry::entryBufEdit1_@return
Adding NOP phi() at start of printEntry::@20
Adding NOP phi() at start of printEntry::entryTsLen1
Adding NOP phi() at start of printEntry::entryTsLen1_@return
Adding NOP phi() at start of printEntry::@23
Adding NOP phi() at start of printEntry::entryTsOrder1
Adding NOP phi() at start of printEntry::entryTsOrder1_@return
Adding NOP phi() at start of printEntry::@26
Adding NOP phi() at start of printEntry::entryTLastLink1
Adding NOP phi() at start of printEntry::entryTLastLink1_@return
Adding NOP phi() at start of printEntry::@29
Adding NOP phi() at start of printEntry::entrySLastLink1
Adding NOP phi() at start of printEntry::entrySLastLink1_@return
Adding NOP phi() at start of printEntry::@32
Adding NOP phi() at start of printEntry::entryBFlag1
Adding NOP phi() at start of printEntry::entryBFlag1_@return
Adding NOP phi() at start of printEntry::@35
Adding NOP phi() at start of printEntry::entryBError1
Adding NOP phi() at start of printEntry::entryBError1_@return
Adding NOP phi() at start of printEntry::@38
Adding NOP phi() at start of printEntry::entryUCross1
Adding NOP phi() at start of printEntry::entryUCross1_@return
Adding NOP phi() at start of printEntry::@41
Adding NOP phi() at start of printEntry::entryBAddrLo1
Adding NOP phi() at start of printEntry::entryBAddrLo1_@return
Adding NOP phi() at start of printEntry::@44
Adding NOP phi() at start of printEntry::entryBAddrHi1
Adding NOP phi() at start of printEntry::entryBAddrHi1_@return
Adding NOP phi() at start of printEntry::@47
Adding NOP phi() at start of printEntry::entryTHi1
Adding NOP phi() at start of printEntry::entryTHi1_@return
Adding NOP phi() at start of printEntry::@50
Adding NOP phi() at start of printEntry::entryTLo1
Adding NOP phi() at start of printEntry::entryTLo1_@return
Adding NOP phi() at start of printEntry::@52
Adding NOP phi() at start of keyboard_key_pressed
Adding NOP phi() at start of memset
Adding NOP phi() at start of memset::@2
Adding NOP phi() at start of memset::@1
Adding NOP phi() at start of print_uint::@2
Adding NOP phi() at start of print_uchar::@2
CALL GRAPH
Calls in [main] to keyboard_init:1 mul8u:4 mul8u:11 initEntry:18 initEntry:21 print_cls:23 print_str:25 print_ln:27 print_ln:30 printEntry:33 print_ln:36 print_str:38 keyboard_key_pressed:41 print_cls:46 print_str:48 print_ln:50 print_ln:53 printEntry:56 print_ln:59 print_str:61 keyboard_key_pressed:64 print_cls:69 
Calls in [print_cls] to memset:147 
Calls in [print_str] to print_char:159 
Calls in [printEntry] to print_str:173 print_uint:178 print_ln:181 print_str:183 print_uint:188 print_ln:191 print_str:193 print_uint:199 print_ln:202 print_str:204 print_uint:209 print_ln:212 print_str:214 print_uchar:221 print_ln:224 print_str:226 print_uchar:233 print_ln:236 print_str:238 print_uchar:245 print_ln:248 print_str:250 print_uchar:257 print_ln:260 print_str:262 print_uint:268 print_ln:271 print_str:273 print_uchar:280 print_ln:283 print_str:285 print_uchar:292 print_ln:295 print_str:297 print_uchar:304 print_ln:307 print_str:309 print_uchar:316 print_ln:319 
Calls in [keyboard_key_pressed] to keyboard_matrix_read:323 
Calls in [print_uint] to print_uchar:345 print_uchar:349 
Calls in [print_uchar] to print_char:357 print_char:362 

Created 21 initial phi equivalence classes
Coalesced [17] initEntry::entry#40 = initEntry::entry#0
Coalesced [20] initEntry::entry#39 = initEntry::entry#1
Coalesced [26] print_char_cursor#226 = print_char_cursor#1
Not coalescing [28] print_line_cursor#155 = print_line_cursor#0
Not coalescing [29] print_char_cursor#227 = print_line_cursor#0
Coalesced [32] printEntry::entry#76 = printEntry::entry#0
Not coalescing [34] print_line_cursor#156 = print_line_cursor#0
Not coalescing [35] print_char_cursor#228 = print_line_cursor#0
Not coalescing [37] print_char_cursor#209 = print_line_cursor#0
Coalesced (already) [49] print_char_cursor#229 = print_char_cursor#1
Not coalescing [51] print_line_cursor#157 = print_line_cursor#0
Not coalescing [52] print_char_cursor#230 = print_line_cursor#0
Coalesced [55] printEntry::entry#77 = printEntry::entry#1
Not coalescing [57] print_line_cursor#158 = print_line_cursor#0
Not coalescing [58] print_char_cursor#231 = print_line_cursor#0
Not coalescing [60] print_char_cursor#210 = print_line_cursor#0
Coalesced [76] mul8u::a#8 = mul8u::a#6
Coalesced [84] mul8u::res#9 = mul8u::res#1
Coalesced [88] mul8u::a#9 = mul8u::a#0
Coalesced [89] mul8u::res#7 = mul8u::res#6
Coalesced [90] mul8u::mb#6 = mul8u::mb#1
Coalesced (already) [91] mul8u::res#8 = mul8u::res#2
Coalesced [151] print_str::str#22 = print_str::str#21
Coalesced [152] print_char_cursor#224 = print_char_cursor#167
Coalesced [157] print_char::ch#4 = print_char::ch#0
Coalesced [158] print_char_cursor#255 = print_char_cursor#1
Coalesced [161] print_str::str#23 = print_str::str#0
Coalesced [162] print_char_cursor#225 = print_char_cursor#10
Coalesced [164] print_line_cursor#172 = print_line_cursor#65
Not coalescing [170] print_line_cursor#173 = print_line_cursor#0
Not coalescing [172] print_char_cursor#211 = print_line_cursor#0
Not coalescing [179] print_line_cursor#159 = print_line_cursor#0
Coalesced (already) [180] print_char_cursor#232 = print_char_cursor#10
Not coalescing [182] print_char_cursor#212 = print_line_cursor#0
Not coalescing [189] print_line_cursor#160 = print_line_cursor#0
Coalesced (already) [190] print_char_cursor#233 = print_char_cursor#10
Not coalescing [192] print_char_cursor#213 = print_line_cursor#0
Coalesced [198] print_uint::w#9 = print_uint::w#2
Not coalescing [200] print_line_cursor#161 = print_line_cursor#0
Coalesced (already) [201] print_char_cursor#234 = print_char_cursor#10
Not coalescing [203] print_char_cursor#214 = print_line_cursor#0
Not coalescing [210] print_line_cursor#162 = print_line_cursor#0
Coalesced (already) [211] print_char_cursor#235 = print_char_cursor#10
Not coalescing [213] print_char_cursor#215 = print_line_cursor#0
Coalesced [219] print_uchar::b#16 = print_uchar::b#2
Coalesced [220] print_char_cursor#249 = print_char_cursor#1
Not coalescing [222] print_line_cursor#163 = print_line_cursor#0
Coalesced (already) [223] print_char_cursor#236 = print_char_cursor#10
Not coalescing [225] print_char_cursor#216 = print_line_cursor#0
Coalesced [231] print_uchar::b#17 = print_uchar::b#3
Coalesced (already) [232] print_char_cursor#250 = print_char_cursor#1
Not coalescing [234] print_line_cursor#164 = print_line_cursor#0
Coalesced (already) [235] print_char_cursor#237 = print_char_cursor#10
Not coalescing [237] print_char_cursor#217 = print_line_cursor#0
Coalesced [243] print_uchar::b#18 = print_uchar::b#4
Coalesced (already) [244] print_char_cursor#251 = print_char_cursor#1
Not coalescing [246] print_line_cursor#165 = print_line_cursor#0
Coalesced (already) [247] print_char_cursor#238 = print_char_cursor#10
Not coalescing [249] print_char_cursor#218 = print_line_cursor#0
Coalesced [255] print_uchar::b#19 = print_uchar::b#5
Coalesced (already) [256] print_char_cursor#252 = print_char_cursor#1
Not coalescing [258] print_line_cursor#166 = print_line_cursor#0
Coalesced (already) [259] print_char_cursor#239 = print_char_cursor#10
Not coalescing [261] print_char_cursor#219 = print_line_cursor#0
Coalesced [267] print_uint::w#11 = print_uint::w#4
Not coalescing [269] print_line_cursor#167 = print_line_cursor#0
Coalesced (already) [270] print_char_cursor#240 = print_char_cursor#10
Not coalescing [272] print_char_cursor#220 = print_line_cursor#0
Coalesced [278] print_uchar::b#12 = print_uchar::b#6
Coalesced (already) [279] print_char_cursor#245 = print_char_cursor#1
Not coalescing [281] print_line_cursor#168 = print_line_cursor#0
Coalesced (already) [282] print_char_cursor#241 = print_char_cursor#10
Not coalescing [284] print_char_cursor#221 = print_line_cursor#0
Coalesced [290] print_uchar::b#13 = print_uchar::b#7
Coalesced (already) [291] print_char_cursor#246 = print_char_cursor#1
Not coalescing [293] print_line_cursor#169 = print_line_cursor#0
Coalesced (already) [294] print_char_cursor#242 = print_char_cursor#10
Not coalescing [296] print_char_cursor#222 = print_line_cursor#0
Coalesced [302] print_uchar::b#14 = print_uchar::b#8
Coalesced (already) [303] print_char_cursor#247 = print_char_cursor#1
Not coalescing [305] print_line_cursor#170 = print_line_cursor#0
Coalesced (already) [306] print_char_cursor#243 = print_char_cursor#10
Not coalescing [308] print_char_cursor#223 = print_line_cursor#0
Coalesced [314] print_uchar::b#15 = print_uchar::b#9
Coalesced (already) [315] print_char_cursor#248 = print_char_cursor#1
Not coalescing [317] print_line_cursor#171 = print_line_cursor#0
Coalesced (already) [318] print_char_cursor#244 = print_char_cursor#10
Coalesced [336] memset::dst#4 = memset::dst#1
Coalesced [343] print_uchar::b#20 = print_uchar::b#0
Coalesced (already) [344] print_char_cursor#253 = print_char_cursor#1
Coalesced [347] print_uchar::b#21 = print_uchar::b#1
Coalesced (already) [348] print_char_cursor#254 = print_char_cursor#10
Coalesced [355] print_char::ch#5 = print_char::ch#1
Coalesced (already) [356] print_char_cursor#256 = print_char_cursor#148
Coalesced [360] print_char::ch#6 = print_char::ch#2
Coalesced (already) [361] print_char_cursor#257 = print_char_cursor#10
Coalesced down to 14 phi equivalence classes
Culled Empty Block label main::@7
Culled Empty Block label main::fileEntry1_@return
Culled Empty Block label main::@5
Culled Empty Block label main::fileEntry2_@return
Culled Empty Block label main::@18
Culled Empty Block label main::@26
Culled Empty Block label main::@28
Culled Empty Block label mul8u::@3
Culled Empty Block label mul8u::@6
Culled Empty Block label initEntry::entryBufDisk1_@return
Culled Empty Block label initEntry::entryBufEdit1_@return
Culled Empty Block label initEntry::entryTsLen1_@return
Culled Empty Block label initEntry::entryTsOrder1_@return
Culled Empty Block label initEntry::entryTLastLink1_@return
Culled Empty Block label initEntry::entrySLastLink1_@return
Culled Empty Block label initEntry::entryBFlag1_@return
Culled Empty Block label initEntry::entryBError1_@return
Culled Empty Block label initEntry::entryUCross1_@return
Culled Empty Block label initEntry::entryBAddrLo1_@return
Culled Empty Block label initEntry::entryBAddrHi1_@return
Culled Empty Block label initEntry::entryTHi1_@return
Culled Empty Block label initEntry::entryTLo1_@return
Culled Empty Block label print_cls::@1
Culled Empty Block label print_ln::@2
Culled Empty Block label printEntry::@14
Culled Empty Block label printEntry::entryBufDisk1_@return
Culled Empty Block label printEntry::@17
Culled Empty Block label printEntry::entryBufEdit1_@return
Culled Empty Block label printEntry::@20
Culled Empty Block label printEntry::entryTsLen1_@return
Culled Empty Block label printEntry::@23
Culled Empty Block label printEntry::entryTsOrder1_@return
Culled Empty Block label printEntry::@26
Culled Empty Block label printEntry::entryTLastLink1_@return
Culled Empty Block label printEntry::@29
Culled Empty Block label printEntry::entrySLastLink1_@return
Culled Empty Block label printEntry::@32
Culled Empty Block label printEntry::entryBFlag1_@return
Culled Empty Block label printEntry::@35
Culled Empty Block label printEntry::entryBError1_@return
Culled Empty Block label printEntry::@38
Culled Empty Block label printEntry::entryUCross1_@return
Culled Empty Block label printEntry::@41
Culled Empty Block label printEntry::entryBAddrLo1_@return
Culled Empty Block label printEntry::@44
Culled Empty Block label printEntry::entryBAddrHi1_@return
Culled Empty Block label printEntry::@47
Culled Empty Block label printEntry::entryTHi1_@return
Culled Empty Block label printEntry::@50
Culled Empty Block label printEntry::entryTLo1_@return
Culled Empty Block label printEntry::@52
Culled Empty Block label memset::@2
Culled Empty Block label memset::@1
Culled Empty Block label print_uint::@2
Culled Empty Block label print_uchar::@2
Renumbering block mul8u::@4 to mul8u::@3
Renumbering block mul8u::@5 to mul8u::@4
Renumbering block memset::@3 to memset::@1
Renumbering block memset::@4 to memset::@2
Renumbering block print_ln::@3 to print_ln::@2
Renumbering block main::@6 to main::@5
Renumbering block main::@8 to main::@6
Renumbering block main::@9 to main::@7
Renumbering block main::@10 to main::@8
Renumbering block main::@11 to main::@9
Renumbering block main::@12 to main::@10
Renumbering block main::@13 to main::@11
Renumbering block main::@14 to main::@12
Renumbering block main::@15 to main::@13
Renumbering block main::@16 to main::@14
Renumbering block main::@17 to main::@15
Renumbering block main::@19 to main::@16
Renumbering block main::@20 to main::@17
Renumbering block main::@21 to main::@18
Renumbering block main::@22 to main::@19
Renumbering block main::@23 to main::@20
Renumbering block main::@24 to main::@21
Renumbering block main::@25 to main::@22
Renumbering block main::@27 to main::@23
Renumbering block printEntry::@15 to printEntry::@14
Renumbering block printEntry::@16 to printEntry::@15
Renumbering block printEntry::@18 to printEntry::@16
Renumbering block printEntry::@19 to printEntry::@17
Renumbering block printEntry::@21 to printEntry::@18
Renumbering block printEntry::@22 to printEntry::@19
Renumbering block printEntry::@24 to printEntry::@20
Renumbering block printEntry::@25 to printEntry::@21
Renumbering block printEntry::@27 to printEntry::@22
Renumbering block printEntry::@28 to printEntry::@23
Renumbering block printEntry::@30 to printEntry::@24
Renumbering block printEntry::@31 to printEntry::@25
Renumbering block printEntry::@33 to printEntry::@26
Renumbering block printEntry::@34 to printEntry::@27
Renumbering block printEntry::@36 to printEntry::@28
Renumbering block printEntry::@37 to printEntry::@29
Renumbering block printEntry::@39 to printEntry::@30
Renumbering block printEntry::@40 to printEntry::@31
Renumbering block printEntry::@42 to printEntry::@32
Renumbering block printEntry::@43 to printEntry::@33
Renumbering block printEntry::@45 to printEntry::@34
Renumbering block printEntry::@46 to printEntry::@35
Renumbering block printEntry::@48 to printEntry::@36
Renumbering block printEntry::@49 to printEntry::@37
Renumbering block printEntry::@51 to printEntry::@38
Adding NOP phi() at start of main
Adding NOP phi() at start of main::fileEntry1
Adding NOP phi() at start of main::fileEntry2
Adding NOP phi() at start of main::@9
Adding NOP phi() at start of main::@10
Adding NOP phi() at start of main::@11
Adding NOP phi() at start of main::@1
Adding NOP phi() at start of main::@2
Adding NOP phi() at start of main::@17
Adding NOP phi() at start of main::@18
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@4
Adding NOP phi() at start of initEntry::entryBufDisk1
Adding NOP phi() at start of initEntry::entryBufEdit1
Adding NOP phi() at start of initEntry::entryTsLen1
Adding NOP phi() at start of initEntry::entryTsOrder1
Adding NOP phi() at start of initEntry::entryTLastLink1
Adding NOP phi() at start of initEntry::entrySLastLink1
Adding NOP phi() at start of initEntry::entryBFlag1
Adding NOP phi() at start of initEntry::entryBError1
Adding NOP phi() at start of initEntry::entryUCross1
Adding NOP phi() at start of initEntry::entryBAddrLo1
Adding NOP phi() at start of initEntry::entryBAddrHi1
Adding NOP phi() at start of initEntry::entryTHi1
Adding NOP phi() at start of initEntry::entryTLo1
Adding NOP phi() at start of print_cls
Adding NOP phi() at start of printEntry::entryBufDisk1
Adding NOP phi() at start of printEntry::entryBufEdit1
Adding NOP phi() at start of printEntry::entryTsLen1
Adding NOP phi() at start of printEntry::entryTsOrder1
Adding NOP phi() at start of printEntry::entryTLastLink1
Adding NOP phi() at start of printEntry::entrySLastLink1
Adding NOP phi() at start of printEntry::entryBFlag1
Adding NOP phi() at start of printEntry::entryBError1
Adding NOP phi() at start of printEntry::entryUCross1
Adding NOP phi() at start of printEntry::entryBAddrLo1
Adding NOP phi() at start of printEntry::entryBAddrHi1
Adding NOP phi() at start of printEntry::entryTHi1
Adding NOP phi() at start of printEntry::entryTLo1
Adding NOP phi() at start of keyboard_key_pressed
Adding NOP phi() at start of memset

FINAL CONTROL FLOW GRAPH

void main()
main: scope:[main]  from
  [0] phi()
  [1] call keyboard_init 
  to:main::fileEntry1
main::fileEntry1: scope:[main]  from main
  [2] phi()
  [3] call mul8u 
  [4] mul8u::return#2 = mul8u::res#2
  to:main::@6
main::@6: scope:[main]  from main::fileEntry1
  [5] main::fileEntry1_$0 = mul8u::return#2
  [6] main::entry1#0 = files + main::fileEntry1_$0
  to:main::fileEntry2
main::fileEntry2: scope:[main]  from main::@6
  [7] phi()
  [8] call mul8u 
  [9] mul8u::return#3 = mul8u::res#2
  to:main::@7
main::@7: scope:[main]  from main::fileEntry2
  [10] main::fileEntry2_$0 = mul8u::return#3
  [11] main::entry2#0 = files + main::fileEntry2_$0
  to:main::@5
main::@5: scope:[main]  from main::@7
  [12] initEntry::entry#0 = main::entry1#0
  [13] call initEntry 
  to:main::@8
main::@8: scope:[main]  from main::@5
  [14] initEntry::entry#1 = main::entry2#0
  [15] call initEntry 
  to:main::@9
main::@9: scope:[main]  from main::@8
  [16] phi()
  [17] call print_cls 
  to:main::@10
main::@10: scope:[main]  from main::@9
  [18] phi()
  [19] call print_str 
  to:main::@11
main::@11: scope:[main]  from main::@10
  [20] phi()
  [21] call print_ln 
  to:main::@12
main::@12: scope:[main]  from main::@11
  [22] print_line_cursor#155 = print_line_cursor#0
  [23] print_char_cursor#227 = print_line_cursor#0
  [24] call print_ln 
  to:main::@13
main::@13: scope:[main]  from main::@12
  [25] printEntry::entry#0 = main::entry1#0
  [26] call printEntry 
  to:main::@14
main::@14: scope:[main]  from main::@13
  [27] print_line_cursor#156 = print_line_cursor#0
  [28] print_char_cursor#228 = print_line_cursor#0
  [29] call print_ln 
  to:main::@15
main::@15: scope:[main]  from main::@14
  [30] print_char_cursor#209 = print_line_cursor#0
  [31] call print_str 
  to:main::@1
main::@1: scope:[main]  from main::@15 main::@16
  [32] phi()
  [33] call keyboard_key_pressed 
  [34] keyboard_key_pressed::return#2 = keyboard_key_pressed::return#0
  to:main::@16
main::@16: scope:[main]  from main::@1
  [35] main::$20 = keyboard_key_pressed::return#2
  [36] if(main::$20==0) goto main::@1
  to:main::@2
main::@2: scope:[main]  from main::@16
  [37] phi()
  [38] call print_cls 
  to:main::@17
main::@17: scope:[main]  from main::@2
  [39] phi()
  [40] call print_str 
  to:main::@18
main::@18: scope:[main]  from main::@17
  [41] phi()
  [42] call print_ln 
  to:main::@19
main::@19: scope:[main]  from main::@18
  [43] print_line_cursor#157 = print_line_cursor#0
  [44] print_char_cursor#230 = print_line_cursor#0
  [45] call print_ln 
  to:main::@20
main::@20: scope:[main]  from main::@19
  [46] printEntry::entry#1 = main::entry2#0
  [47] call printEntry 
  to:main::@21
main::@21: scope:[main]  from main::@20
  [48] print_line_cursor#158 = print_line_cursor#0
  [49] print_char_cursor#231 = print_line_cursor#0
  [50] call print_ln 
  to:main::@22
main::@22: scope:[main]  from main::@21
  [51] print_char_cursor#210 = print_line_cursor#0
  [52] call print_str 
  to:main::@3
main::@3: scope:[main]  from main::@22 main::@23
  [53] phi()
  [54] call keyboard_key_pressed 
  [55] keyboard_key_pressed::return#3 = keyboard_key_pressed::return#0
  to:main::@23
main::@23: scope:[main]  from main::@3
  [56] main::$22 = keyboard_key_pressed::return#3
  [57] if(main::$22==0) goto main::@3
  to:main::@4
main::@4: scope:[main]  from main::@23
  [58] phi()
  [59] call print_cls 
  to:main::@return
main::@return: scope:[main]  from main::@4
  [60] return 
  to:@return

void keyboard_init()
keyboard_init: scope:[keyboard_init]  from main
  [61] *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR) = $ff
  [62] *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_B_DDR) = 0
  to:keyboard_init::@return
keyboard_init::@return: scope:[keyboard_init]  from keyboard_init
  [63] return 
  to:@return

word mul8u(byte mul8u::a , byte mul8u::b)
mul8u: scope:[mul8u]  from main::fileEntry1 main::fileEntry2
  [64] mul8u::a#6 = phi( main::fileEntry1/main::fileEntry1_idx#0, main::fileEntry2/main::fileEntry2_idx#0 )
  to:mul8u::@1
mul8u::@1: scope:[mul8u]  from mul8u mul8u::@3
  [65] mul8u::mb#2 = phi( mul8u/(word)SIZEOF_ENTRY, mul8u::@3/mul8u::mb#1 )
  [65] mul8u::res#2 = phi( mul8u/0, mul8u::@3/mul8u::res#6 )
  [65] mul8u::a#3 = phi( mul8u/mul8u::a#6, mul8u::@3/mul8u::a#0 )
  [66] if(mul8u::a#3!=0) goto mul8u::@2
  to:mul8u::@return
mul8u::@return: scope:[mul8u]  from mul8u::@1
  [67] return 
  to:@return
mul8u::@2: scope:[mul8u]  from mul8u::@1
  [68] mul8u::$1 = mul8u::a#3 & 1
  [69] if(mul8u::$1==0) goto mul8u::@3
  to:mul8u::@4
mul8u::@4: scope:[mul8u]  from mul8u::@2
  [70] mul8u::res#1 = mul8u::res#2 + mul8u::mb#2
  to:mul8u::@3
mul8u::@3: scope:[mul8u]  from mul8u::@2 mul8u::@4
  [71] mul8u::res#6 = phi( mul8u::@2/mul8u::res#2, mul8u::@4/mul8u::res#1 )
  [72] mul8u::a#0 = mul8u::a#3 >> 1
  [73] mul8u::mb#1 = mul8u::mb#2 << 1
  to:mul8u::@1

void initEntry(byte* initEntry::entry , byte initEntry::n)
initEntry: scope:[initEntry]  from main::@5 main::@8
  [74] initEntry::n#10 = phi( main::@8/$11, main::@5/0 )
  [74] initEntry::entry#10 = phi( main::@8/initEntry::entry#1, main::@5/initEntry::entry#0 )
  to:initEntry::entryBufDisk1
initEntry::entryBufDisk1: scope:[initEntry]  from initEntry
  [75] phi()
  to:initEntry::@1
initEntry::@1: scope:[initEntry]  from initEntry::entryBufDisk1
  [76] initEntry::$1 = $1111 + initEntry::n#10
  [77] *((byte**)initEntry::entry#10) = (byte*)initEntry::$1
  to:initEntry::entryBufEdit1
initEntry::entryBufEdit1: scope:[initEntry]  from initEntry::@1
  [78] phi()
  to:initEntry::@2
initEntry::@2: scope:[initEntry]  from initEntry::entryBufEdit1
  [79] initEntry::$3 = $2222 + initEntry::n#10
  [80] ((byte**)initEntry::entry#10)[2] = (byte*)initEntry::$3
  to:initEntry::entryTsLen1
initEntry::entryTsLen1: scope:[initEntry]  from initEntry::@2
  [81] phi()
  to:initEntry::@3
initEntry::@3: scope:[initEntry]  from initEntry::entryTsLen1
  [82] initEntry::$5 = $3333 + initEntry::n#10
  [83] ((word*)initEntry::entry#10)[4] = initEntry::$5
  to:initEntry::entryTsOrder1
initEntry::entryTsOrder1: scope:[initEntry]  from initEntry::@3
  [84] phi()
  to:initEntry::@4
initEntry::@4: scope:[initEntry]  from initEntry::entryTsOrder1
  [85] initEntry::$7 = $4444 + initEntry::n#10
  [86] ((word**)initEntry::entry#10)[6] = (word*)initEntry::$7
  to:initEntry::entryTLastLink1
initEntry::entryTLastLink1: scope:[initEntry]  from initEntry::@4
  [87] phi()
  to:initEntry::@5
initEntry::@5: scope:[initEntry]  from initEntry::entryTLastLink1
  [88] initEntry::$9 = $55 + initEntry::n#10
  [89] initEntry::entry#10[8] = initEntry::$9
  to:initEntry::entrySLastLink1
initEntry::entrySLastLink1: scope:[initEntry]  from initEntry::@5
  [90] phi()
  to:initEntry::@6
initEntry::@6: scope:[initEntry]  from initEntry::entrySLastLink1
  [91] initEntry::$11 = $66 + initEntry::n#10
  [92] initEntry::entry#10[9] = initEntry::$11
  to:initEntry::entryBFlag1
initEntry::entryBFlag1: scope:[initEntry]  from initEntry::@6
  [93] phi()
  to:initEntry::@7
initEntry::@7: scope:[initEntry]  from initEntry::entryBFlag1
  [94] initEntry::$13 = $77 + initEntry::n#10
  [95] initEntry::entry#10[$a] = initEntry::$13
  to:initEntry::entryBError1
initEntry::entryBError1: scope:[initEntry]  from initEntry::@7
  [96] phi()
  to:initEntry::@8
initEntry::@8: scope:[initEntry]  from initEntry::entryBError1
  [97] initEntry::$15 = $88 + initEntry::n#10
  [98] initEntry::entry#10[$b] = initEntry::$15
  to:initEntry::entryUCross1
initEntry::entryUCross1: scope:[initEntry]  from initEntry::@8
  [99] phi()
  to:initEntry::@9
initEntry::@9: scope:[initEntry]  from initEntry::entryUCross1
  [100] initEntry::$17 = $9999 + initEntry::n#10
  [101] ((word*)initEntry::entry#10)[$c] = initEntry::$17
  to:initEntry::entryBAddrLo1
initEntry::entryBAddrLo1: scope:[initEntry]  from initEntry::@9
  [102] phi()
  to:initEntry::@10
initEntry::@10: scope:[initEntry]  from initEntry::entryBAddrLo1
  [103] initEntry::$19 = $aa + initEntry::n#10
  [104] initEntry::entry#10[$e] = initEntry::$19
  to:initEntry::entryBAddrHi1
initEntry::entryBAddrHi1: scope:[initEntry]  from initEntry::@10
  [105] phi()
  to:initEntry::@11
initEntry::@11: scope:[initEntry]  from initEntry::entryBAddrHi1
  [106] initEntry::$21 = $bb + initEntry::n#10
  [107] initEntry::entry#10[$f] = initEntry::$21
  to:initEntry::entryTHi1
initEntry::entryTHi1: scope:[initEntry]  from initEntry::@11
  [108] phi()
  to:initEntry::@12
initEntry::@12: scope:[initEntry]  from initEntry::entryTHi1
  [109] initEntry::$23 = $cc + initEntry::n#10
  [110] initEntry::entry#10[$10] = initEntry::$23
  to:initEntry::entryTLo1
initEntry::entryTLo1: scope:[initEntry]  from initEntry::@12
  [111] phi()
  to:initEntry::@13
initEntry::@13: scope:[initEntry]  from initEntry::entryTLo1
  [112] initEntry::$25 = $dd + initEntry::n#10
  [113] initEntry::entry#10[$11] = initEntry::$25
  to:initEntry::@return
initEntry::@return: scope:[initEntry]  from initEntry::@13
  [114] return 
  to:@return

void print_cls()
print_cls: scope:[print_cls]  from main::@2 main::@4 main::@9
  [115] phi()
  [116] call memset 
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls
  [117] return 
  to:@return

void print_str(byte* print_str::str)
print_str: scope:[print_str]  from main::@10 main::@15 main::@17 main::@22 printEntry printEntry::@15 printEntry::@17 printEntry::@19 printEntry::@21 printEntry::@23 printEntry::@25 printEntry::@27 printEntry::@29 printEntry::@31 printEntry::@33 printEntry::@35 printEntry::@37
  [118] print_char_cursor#167 = phi( main::@10/print_screen#0, main::@15/print_char_cursor#209, main::@17/print_screen#0, main::@22/print_char_cursor#210, printEntry/print_char_cursor#211, printEntry::@15/print_char_cursor#212, printEntry::@17/print_char_cursor#213, printEntry::@19/print_char_cursor#214, printEntry::@21/print_char_cursor#215, printEntry::@23/print_char_cursor#216, printEntry::@25/print_char_cursor#217, printEntry::@27/print_char_cursor#218, printEntry::@29/print_char_cursor#219, printEntry::@31/print_char_cursor#220, printEntry::@33/print_char_cursor#221, printEntry::@35/print_char_cursor#222, printEntry::@37/print_char_cursor#223 )
  [118] print_str::str#21 = phi( main::@10/main::str, main::@15/main::str1, main::@17/main::str2, main::@22/main::str1, printEntry/printEntry::str, printEntry::@15/printEntry::str1, printEntry::@17/printEntry::str2, printEntry::@19/printEntry::str3, printEntry::@21/printEntry::str4, printEntry::@23/printEntry::str5, printEntry::@25/printEntry::str6, printEntry::@27/printEntry::str7, printEntry::@29/printEntry::str8, printEntry::@31/printEntry::str9, printEntry::@33/printEntry::str10, printEntry::@35/printEntry::str11, printEntry::@37/printEntry::str12 )
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@3
  [119] print_char_cursor#1 = phi( print_str/print_char_cursor#167, print_str::@3/print_char_cursor#10 )
  [119] print_str::str#18 = phi( print_str/print_str::str#21, print_str::@3/print_str::str#0 )
  [120] if(0!=*print_str::str#18) goto print_str::@2
  to:print_str::@return
print_str::@return: scope:[print_str]  from print_str::@1
  [121] return 
  to:@return
print_str::@2: scope:[print_str]  from print_str::@1
  [122] print_char::ch#0 = *print_str::str#18
  [123] call print_char 
  to:print_str::@3
print_str::@3: scope:[print_str]  from print_str::@2
  [124] print_str::str#0 = ++ print_str::str#18
  to:print_str::@1

void print_ln()
print_ln: scope:[print_ln]  from main::@11 main::@12 main::@14 main::@18 main::@19 main::@21 printEntry::@14 printEntry::@16 printEntry::@18 printEntry::@20 printEntry::@22 printEntry::@24 printEntry::@26 printEntry::@28 printEntry::@30 printEntry::@32 printEntry::@34 printEntry::@36 printEntry::@38
  [125] print_char_cursor#146 = phi( main::@11/print_char_cursor#1, main::@12/print_char_cursor#227, main::@14/print_char_cursor#228, main::@18/print_char_cursor#1, main::@19/print_char_cursor#230, main::@21/print_char_cursor#231, printEntry::@14/print_char_cursor#10, printEntry::@16/print_char_cursor#10, printEntry::@18/print_char_cursor#10, printEntry::@20/print_char_cursor#10, printEntry::@22/print_char_cursor#10, printEntry::@24/print_char_cursor#10, printEntry::@26/print_char_cursor#10, printEntry::@28/print_char_cursor#10, printEntry::@30/print_char_cursor#10, printEntry::@32/print_char_cursor#10, printEntry::@34/print_char_cursor#10, printEntry::@36/print_char_cursor#10, printEntry::@38/print_char_cursor#10 )
  [125] print_line_cursor#65 = phi( main::@11/print_screen#0, main::@12/print_line_cursor#155, main::@14/print_line_cursor#156, main::@18/print_screen#0, main::@19/print_line_cursor#157, main::@21/print_line_cursor#158, printEntry::@14/print_line_cursor#159, printEntry::@16/print_line_cursor#160, printEntry::@18/print_line_cursor#161, printEntry::@20/print_line_cursor#162, printEntry::@22/print_line_cursor#163, printEntry::@24/print_line_cursor#164, printEntry::@26/print_line_cursor#165, printEntry::@28/print_line_cursor#166, printEntry::@30/print_line_cursor#167, printEntry::@32/print_line_cursor#168, printEntry::@34/print_line_cursor#169, printEntry::@36/print_line_cursor#170, printEntry::@38/print_line_cursor#171 )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@2
  [126] print_line_cursor#33 = phi( print_ln/print_line_cursor#65, print_ln::@2/print_line_cursor#173 )
  [127] print_line_cursor#0 = print_line_cursor#33 + $28
  [128] if(print_line_cursor#0<print_char_cursor#146) goto print_ln::@2
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@1
  [129] return 
  to:@return
print_ln::@2: scope:[print_ln]  from print_ln::@1
  [130] print_line_cursor#173 = print_line_cursor#0
  to:print_ln::@1

void printEntry(byte* printEntry::entry)
printEntry: scope:[printEntry]  from main::@13 main::@20
  [131] printEntry::entry#10 = phi( main::@13/printEntry::entry#0, main::@20/printEntry::entry#1 )
  [132] print_char_cursor#211 = print_line_cursor#0
  [133] call print_str 
  to:printEntry::entryBufDisk1
printEntry::entryBufDisk1: scope:[printEntry]  from printEntry
  [134] phi()
  to:printEntry::@1
printEntry::@1: scope:[printEntry]  from printEntry::entryBufDisk1
  [135] print_uint::w#7 = (word)*((byte**)printEntry::entry#10)
  [136] call print_uint 
  to:printEntry::@14
printEntry::@14: scope:[printEntry]  from printEntry::@1
  [137] print_line_cursor#159 = print_line_cursor#0
  [138] call print_ln 
  to:printEntry::@15
printEntry::@15: scope:[printEntry]  from printEntry::@14
  [139] print_char_cursor#212 = print_line_cursor#0
  [140] call print_str 
  to:printEntry::entryBufEdit1
printEntry::entryBufEdit1: scope:[printEntry]  from printEntry::@15
  [141] phi()
  to:printEntry::@2
printEntry::@2: scope:[printEntry]  from printEntry::entryBufEdit1
  [142] print_uint::w#8 = (word)((byte**)printEntry::entry#10)[2]
  [143] call print_uint 
  to:printEntry::@16
printEntry::@16: scope:[printEntry]  from printEntry::@2
  [144] print_line_cursor#160 = print_line_cursor#0
  [145] call print_ln 
  to:printEntry::@17
printEntry::@17: scope:[printEntry]  from printEntry::@16
  [146] print_char_cursor#213 = print_line_cursor#0
  [147] call print_str 
  to:printEntry::entryTsLen1
printEntry::entryTsLen1: scope:[printEntry]  from printEntry::@17
  [148] phi()
  to:printEntry::@3
printEntry::@3: scope:[printEntry]  from printEntry::entryTsLen1
  [149] print_uint::w#2 = ((word*)printEntry::entry#10)[4]
  [150] call print_uint 
  to:printEntry::@18
printEntry::@18: scope:[printEntry]  from printEntry::@3
  [151] print_line_cursor#161 = print_line_cursor#0
  [152] call print_ln 
  to:printEntry::@19
printEntry::@19: scope:[printEntry]  from printEntry::@18
  [153] print_char_cursor#214 = print_line_cursor#0
  [154] call print_str 
  to:printEntry::entryTsOrder1
printEntry::entryTsOrder1: scope:[printEntry]  from printEntry::@19
  [155] phi()
  to:printEntry::@4
printEntry::@4: scope:[printEntry]  from printEntry::entryTsOrder1
  [156] print_uint::w#10 = (word)((word**)printEntry::entry#10)[6]
  [157] call print_uint 
  to:printEntry::@20
printEntry::@20: scope:[printEntry]  from printEntry::@4
  [158] print_line_cursor#162 = print_line_cursor#0
  [159] call print_ln 
  to:printEntry::@21
printEntry::@21: scope:[printEntry]  from printEntry::@20
  [160] print_char_cursor#215 = print_line_cursor#0
  [161] call print_str 
  to:printEntry::entryTLastLink1
printEntry::entryTLastLink1: scope:[printEntry]  from printEntry::@21
  [162] phi()
  to:printEntry::@5
printEntry::@5: scope:[printEntry]  from printEntry::entryTLastLink1
  [163] print_uchar::b#2 = printEntry::entry#10[8]
  [164] call print_uchar 
  to:printEntry::@22
printEntry::@22: scope:[printEntry]  from printEntry::@5
  [165] print_line_cursor#163 = print_line_cursor#0
  [166] call print_ln 
  to:printEntry::@23
printEntry::@23: scope:[printEntry]  from printEntry::@22
  [167] print_char_cursor#216 = print_line_cursor#0
  [168] call print_str 
  to:printEntry::entrySLastLink1
printEntry::entrySLastLink1: scope:[printEntry]  from printEntry::@23
  [169] phi()
  to:printEntry::@6
printEntry::@6: scope:[printEntry]  from printEntry::entrySLastLink1
  [170] print_uchar::b#3 = printEntry::entry#10[9]
  [171] call print_uchar 
  to:printEntry::@24
printEntry::@24: scope:[printEntry]  from printEntry::@6
  [172] print_line_cursor#164 = print_line_cursor#0
  [173] call print_ln 
  to:printEntry::@25
printEntry::@25: scope:[printEntry]  from printEntry::@24
  [174] print_char_cursor#217 = print_line_cursor#0
  [175] call print_str 
  to:printEntry::entryBFlag1
printEntry::entryBFlag1: scope:[printEntry]  from printEntry::@25
  [176] phi()
  to:printEntry::@7
printEntry::@7: scope:[printEntry]  from printEntry::entryBFlag1
  [177] print_uchar::b#4 = printEntry::entry#10[$a]
  [178] call print_uchar 
  to:printEntry::@26
printEntry::@26: scope:[printEntry]  from printEntry::@7
  [179] print_line_cursor#165 = print_line_cursor#0
  [180] call print_ln 
  to:printEntry::@27
printEntry::@27: scope:[printEntry]  from printEntry::@26
  [181] print_char_cursor#218 = print_line_cursor#0
  [182] call print_str 
  to:printEntry::entryBError1
printEntry::entryBError1: scope:[printEntry]  from printEntry::@27
  [183] phi()
  to:printEntry::@8
printEntry::@8: scope:[printEntry]  from printEntry::entryBError1
  [184] print_uchar::b#5 = printEntry::entry#10[$b]
  [185] call print_uchar 
  to:printEntry::@28
printEntry::@28: scope:[printEntry]  from printEntry::@8
  [186] print_line_cursor#166 = print_line_cursor#0
  [187] call print_ln 
  to:printEntry::@29
printEntry::@29: scope:[printEntry]  from printEntry::@28
  [188] print_char_cursor#219 = print_line_cursor#0
  [189] call print_str 
  to:printEntry::entryUCross1
printEntry::entryUCross1: scope:[printEntry]  from printEntry::@29
  [190] phi()
  to:printEntry::@9
printEntry::@9: scope:[printEntry]  from printEntry::entryUCross1
  [191] print_uint::w#4 = ((word*)printEntry::entry#10)[$c]
  [192] call print_uint 
  to:printEntry::@30
printEntry::@30: scope:[printEntry]  from printEntry::@9
  [193] print_line_cursor#167 = print_line_cursor#0
  [194] call print_ln 
  to:printEntry::@31
printEntry::@31: scope:[printEntry]  from printEntry::@30
  [195] print_char_cursor#220 = print_line_cursor#0
  [196] call print_str 
  to:printEntry::entryBAddrLo1
printEntry::entryBAddrLo1: scope:[printEntry]  from printEntry::@31
  [197] phi()
  to:printEntry::@10
printEntry::@10: scope:[printEntry]  from printEntry::entryBAddrLo1
  [198] print_uchar::b#6 = printEntry::entry#10[$e]
  [199] call print_uchar 
  to:printEntry::@32
printEntry::@32: scope:[printEntry]  from printEntry::@10
  [200] print_line_cursor#168 = print_line_cursor#0
  [201] call print_ln 
  to:printEntry::@33
printEntry::@33: scope:[printEntry]  from printEntry::@32
  [202] print_char_cursor#221 = print_line_cursor#0
  [203] call print_str 
  to:printEntry::entryBAddrHi1
printEntry::entryBAddrHi1: scope:[printEntry]  from printEntry::@33
  [204] phi()
  to:printEntry::@11
printEntry::@11: scope:[printEntry]  from printEntry::entryBAddrHi1
  [205] print_uchar::b#7 = printEntry::entry#10[$f]
  [206] call print_uchar 
  to:printEntry::@34
printEntry::@34: scope:[printEntry]  from printEntry::@11
  [207] print_line_cursor#169 = print_line_cursor#0
  [208] call print_ln 
  to:printEntry::@35
printEntry::@35: scope:[printEntry]  from printEntry::@34
  [209] print_char_cursor#222 = print_line_cursor#0
  [210] call print_str 
  to:printEntry::entryTHi1
printEntry::entryTHi1: scope:[printEntry]  from printEntry::@35
  [211] phi()
  to:printEntry::@12
printEntry::@12: scope:[printEntry]  from printEntry::entryTHi1
  [212] print_uchar::b#8 = printEntry::entry#10[$10]
  [213] call print_uchar 
  to:printEntry::@36
printEntry::@36: scope:[printEntry]  from printEntry::@12
  [214] print_line_cursor#170 = print_line_cursor#0
  [215] call print_ln 
  to:printEntry::@37
printEntry::@37: scope:[printEntry]  from printEntry::@36
  [216] print_char_cursor#223 = print_line_cursor#0
  [217] call print_str 
  to:printEntry::entryTLo1
printEntry::entryTLo1: scope:[printEntry]  from printEntry::@37
  [218] phi()
  to:printEntry::@13
printEntry::@13: scope:[printEntry]  from printEntry::entryTLo1
  [219] print_uchar::b#9 = printEntry::entry#10[$11]
  [220] call print_uchar 
  to:printEntry::@38
printEntry::@38: scope:[printEntry]  from printEntry::@13
  [221] print_line_cursor#171 = print_line_cursor#0
  [222] call print_ln 
  to:printEntry::@return
printEntry::@return: scope:[printEntry]  from printEntry::@38
  [223] return 
  to:@return

byte keyboard_key_pressed(byte keyboard_key_pressed::key)
keyboard_key_pressed: scope:[keyboard_key_pressed]  from main::@1 main::@3
  [224] phi()
  [225] call keyboard_matrix_read 
  [226] keyboard_matrix_read::return#2 = keyboard_matrix_read::return#0
  to:keyboard_key_pressed::@1
keyboard_key_pressed::@1: scope:[keyboard_key_pressed]  from keyboard_key_pressed
  [227] keyboard_key_pressed::$2 = keyboard_matrix_read::return#2
  [228] keyboard_key_pressed::return#0 = keyboard_key_pressed::$2 & *(keyboard_matrix_col_bitmask+keyboard_key_pressed::colidx#0)
  to:keyboard_key_pressed::@return
keyboard_key_pressed::@return: scope:[keyboard_key_pressed]  from keyboard_key_pressed::@1
  [229] return 
  to:@return

void* memset(void* memset::str , byte memset::c , word memset::num)
memset: scope:[memset]  from print_cls
  [230] phi()
  to:memset::@1
memset::@1: scope:[memset]  from memset memset::@2
  [231] memset::dst#2 = phi( memset/(byte*)memset::str#0, memset::@2/memset::dst#1 )
  [232] if(memset::dst#2!=memset::end#0) goto memset::@2
  to:memset::@return
memset::@return: scope:[memset]  from memset::@1
  [233] return 
  to:@return
memset::@2: scope:[memset]  from memset::@1
  [234] *memset::dst#2 = memset::c#0
  [235] memset::dst#1 = ++ memset::dst#2
  to:memset::@1

void print_char(byte print_char::ch)
print_char: scope:[print_char]  from print_str::@2 print_uchar print_uchar::@1
  [236] print_char_cursor#83 = phi( print_str::@2/print_char_cursor#1, print_uchar/print_char_cursor#148, print_uchar::@1/print_char_cursor#10 )
  [236] print_char::ch#3 = phi( print_str::@2/print_char::ch#0, print_uchar/print_char::ch#1, print_uchar::@1/print_char::ch#2 )
  [237] *print_char_cursor#83 = print_char::ch#3
  [238] print_char_cursor#10 = ++ print_char_cursor#83
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  [239] return 
  to:@return

void print_uint(word print_uint::w)
print_uint: scope:[print_uint]  from printEntry::@1 printEntry::@2 printEntry::@3 printEntry::@4 printEntry::@9
  [240] print_uint::w#5 = phi( printEntry::@1/print_uint::w#7, printEntry::@2/print_uint::w#8, printEntry::@3/print_uint::w#2, printEntry::@4/print_uint::w#10, printEntry::@9/print_uint::w#4 )
  [241] print_uchar::b#0 = > print_uint::w#5
  [242] call print_uchar 
  to:print_uint::@1
print_uint::@1: scope:[print_uint]  from print_uint
  [243] print_uchar::b#1 = < print_uint::w#5
  [244] call print_uchar 
  to:print_uint::@return
print_uint::@return: scope:[print_uint]  from print_uint::@1
  [245] return 
  to:@return

void print_uchar(byte print_uchar::b)
print_uchar: scope:[print_uchar]  from printEntry::@10 printEntry::@11 printEntry::@12 printEntry::@13 printEntry::@5 printEntry::@6 printEntry::@7 printEntry::@8 print_uint print_uint::@1
  [246] print_char_cursor#148 = phi( printEntry::@10/print_char_cursor#1, printEntry::@11/print_char_cursor#1, printEntry::@12/print_char_cursor#1, printEntry::@13/print_char_cursor#1, printEntry::@5/print_char_cursor#1, printEntry::@6/print_char_cursor#1, printEntry::@7/print_char_cursor#1, printEntry::@8/print_char_cursor#1, print_uint/print_char_cursor#1, print_uint::@1/print_char_cursor#10 )
  [246] print_uchar::b#10 = phi( printEntry::@10/print_uchar::b#6, printEntry::@11/print_uchar::b#7, printEntry::@12/print_uchar::b#8, printEntry::@13/print_uchar::b#9, printEntry::@5/print_uchar::b#2, printEntry::@6/print_uchar::b#3, printEntry::@7/print_uchar::b#4, printEntry::@8/print_uchar::b#5, print_uint/print_uchar::b#0, print_uint::@1/print_uchar::b#1 )
  [247] print_uchar::$0 = print_uchar::b#10 >> 4
  [248] print_char::ch#1 = print_hextab[print_uchar::$0]
  [249] call print_char 
  to:print_uchar::@1
print_uchar::@1: scope:[print_uchar]  from print_uchar
  [250] print_uchar::$2 = print_uchar::b#10 & $f
  [251] print_char::ch#2 = print_hextab[print_uchar::$2]
  [252] call print_char 
  to:print_uchar::@return
print_uchar::@return: scope:[print_uchar]  from print_uchar::@1
  [253] return 
  to:@return

byte keyboard_matrix_read(byte keyboard_matrix_read::rowid)
keyboard_matrix_read: scope:[keyboard_matrix_read]  from keyboard_key_pressed
  [254] *((byte*)CIA1) = *(keyboard_matrix_row_bitmask+keyboard_key_pressed::rowidx#0)
  [255] keyboard_matrix_read::return#0 = ~ *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_B)
  to:keyboard_matrix_read::@return
keyboard_matrix_read::@return: scope:[keyboard_matrix_read]  from keyboard_matrix_read
  [256] return 
  to:@return


VARIABLE REGISTER WEIGHTS
void initEntry(byte* initEntry::entry , byte initEntry::n)
word~ initEntry::$1 11.0
byte~ initEntry::$11 22.0
byte~ initEntry::$13 22.0
byte~ initEntry::$15 22.0
word~ initEntry::$17 22.0
byte~ initEntry::$19 22.0
byte~ initEntry::$21 22.0
byte~ initEntry::$23 22.0
byte~ initEntry::$25 22.0
word~ initEntry::$3 11.0
word~ initEntry::$5 22.0
word~ initEntry::$7 11.0
byte~ initEntry::$9 22.0
byte* initEntry::entry
byte* initEntry::entry#0 4.0
byte* initEntry::entry#1 4.0
byte* initEntry::entry#10 2.3589743589743586
byte* initEntry::entryBAddrHi1_entry
byte* initEntry::entryBAddrHi1_return
byte* initEntry::entryBAddrLo1_entry
byte* initEntry::entryBAddrLo1_return
byte* initEntry::entryBError1_entry
byte* initEntry::entryBError1_return
byte* initEntry::entryBFlag1_entry
byte* initEntry::entryBFlag1_return
byte* initEntry::entryBufDisk1_entry
byte** initEntry::entryBufDisk1_return
byte* initEntry::entryBufEdit1_entry
byte** initEntry::entryBufEdit1_return
byte* initEntry::entrySLastLink1_entry
byte* initEntry::entrySLastLink1_return
byte* initEntry::entryTHi1_entry
byte* initEntry::entryTHi1_return
byte* initEntry::entryTLastLink1_entry
byte* initEntry::entryTLastLink1_return
byte* initEntry::entryTLo1_entry
byte* initEntry::entryTLo1_return
byte* initEntry::entryTsLen1_entry
word* initEntry::entryTsLen1_return
byte* initEntry::entryTsOrder1_entry
word** initEntry::entryTsOrder1_return
byte* initEntry::entryUCross1_entry
word* initEntry::entryUCross1_return
byte initEntry::n
byte initEntry::n#10 3.7631578947368434
void keyboard_init()
byte keyboard_key_pressed(byte keyboard_key_pressed::key)
byte~ keyboard_key_pressed::$2 202.0
byte keyboard_key_pressed::colidx
byte keyboard_key_pressed::key
byte keyboard_key_pressed::return
byte keyboard_key_pressed::return#0 30.75
byte keyboard_key_pressed::return#2 22.0
byte keyboard_key_pressed::return#3 22.0
byte keyboard_key_pressed::rowidx
byte keyboard_matrix_read(byte keyboard_matrix_read::rowid)
byte keyboard_matrix_read::return
byte keyboard_matrix_read::return#0 367.33333333333337
byte keyboard_matrix_read::return#2 202.0
byte keyboard_matrix_read::row_pressed_bits
byte keyboard_matrix_read::rowid
void main()
byte~ main::$20 22.0
byte~ main::$22 22.0
byte* main::entry1
byte* main::entry1#0 0.3157894736842105
byte* main::entry2
byte* main::entry2#0 0.17142857142857143
word~ main::fileEntry1_$0 4.0
byte main::fileEntry1_idx
byte* main::fileEntry1_return
word~ main::fileEntry2_$0 4.0
byte main::fileEntry2_idx
byte* main::fileEntry2_return
void* memset(void* memset::str , byte memset::c , word memset::num)
byte memset::c
byte* memset::dst
byte* memset::dst#1 2002.0
byte* memset::dst#2 1334.6666666666667
byte* memset::end
word memset::num
void* memset::return
void* memset::str
word mul8u(byte mul8u::a , byte mul8u::b)
byte~ mul8u::$1 202.0
byte mul8u::a
byte mul8u::a#0 101.0
byte mul8u::a#3 69.16666666666666
byte mul8u::a#6 11.0
byte mul8u::b
word mul8u::mb
word mul8u::mb#1 202.0
word mul8u::mb#2 43.285714285714285
word mul8u::res
word mul8u::res#1 202.0
word mul8u::res#2 43.85714285714286
word mul8u::res#6 101.0
word mul8u::return
word mul8u::return#2 4.0
word mul8u::return#3 4.0
void printEntry(byte* printEntry::entry)
byte* printEntry::entry
byte* printEntry::entry#0 4.0
byte* printEntry::entry#1 4.0
byte* printEntry::entry#10 1.0454545454545454
byte* printEntry::entryBAddrHi1_entry
byte* printEntry::entryBAddrHi1_return
byte* printEntry::entryBAddrLo1_entry
byte* printEntry::entryBAddrLo1_return
byte* printEntry::entryBError1_entry
byte* printEntry::entryBError1_return
byte* printEntry::entryBFlag1_entry
byte* printEntry::entryBFlag1_return
byte* printEntry::entryBufDisk1_entry
byte** printEntry::entryBufDisk1_return
byte* printEntry::entryBufEdit1_entry
byte** printEntry::entryBufEdit1_return
byte* printEntry::entrySLastLink1_entry
byte* printEntry::entrySLastLink1_return
byte* printEntry::entryTHi1_entry
byte* printEntry::entryTHi1_return
byte* printEntry::entryTLastLink1_entry
byte* printEntry::entryTLastLink1_return
byte* printEntry::entryTLo1_entry
byte* printEntry::entryTLo1_return
byte* printEntry::entryTsLen1_entry
word* printEntry::entryTsLen1_return
byte* printEntry::entryTsOrder1_entry
word** printEntry::entryTsOrder1_return
byte* printEntry::entryUCross1_entry
word* printEntry::entryUCross1_return
void print_char(byte print_char::ch)
byte print_char::ch
byte print_char::ch#0 2002.0
byte print_char::ch#1 2002.0
byte print_char::ch#2 2002.0
byte print_char::ch#3 13004.0
byte* print_char_cursor
byte* print_char_cursor#1 46.85714285714285
byte* print_char_cursor#10 314.02564102564105
byte* print_char_cursor#146 231.2
byte* print_char_cursor#148 430.33333333333354
byte* print_char_cursor#167 248.0
byte* print_char_cursor#209 4.0
byte* print_char_cursor#210 4.0
byte* print_char_cursor#211 22.0
byte* print_char_cursor#212 22.0
byte* print_char_cursor#213 22.0
byte* print_char_cursor#214 22.0
byte* print_char_cursor#215 22.0
byte* print_char_cursor#216 22.0
byte* print_char_cursor#217 22.0
byte* print_char_cursor#218 22.0
byte* print_char_cursor#219 22.0
byte* print_char_cursor#220 22.0
byte* print_char_cursor#221 22.0
byte* print_char_cursor#222 22.0
byte* print_char_cursor#223 22.0
byte* print_char_cursor#227 4.0
byte* print_char_cursor#228 4.0
byte* print_char_cursor#230 4.0
byte* print_char_cursor#231 4.0
byte* print_char_cursor#83 11502.5
void print_cls()
byte* print_line_cursor
byte* print_line_cursor#0 34.11340206185572
byte* print_line_cursor#155 2.0
byte* print_line_cursor#156 2.0
byte* print_line_cursor#157 2.0
byte* print_line_cursor#158 2.0
byte* print_line_cursor#159 22.0
byte* print_line_cursor#160 22.0
byte* print_line_cursor#161 22.0
byte* print_line_cursor#162 22.0
byte* print_line_cursor#163 22.0
byte* print_line_cursor#164 22.0
byte* print_line_cursor#165 22.0
byte* print_line_cursor#166 22.0
byte* print_line_cursor#167 22.0
byte* print_line_cursor#168 22.0
byte* print_line_cursor#169 22.0
byte* print_line_cursor#170 22.0
byte* print_line_cursor#171 22.0
byte* print_line_cursor#173 2002.0
byte* print_line_cursor#33 2103.0
byte* print_line_cursor#65 252.0
void print_ln()
byte* print_screen
void print_str(byte* print_str::str)
byte* print_str::str
byte* print_str::str#0 2002.0
byte* print_str::str#18 1026.25
byte* print_str::str#21 101.0
void print_uchar(byte print_uchar::b)
byte~ print_uchar::$0 2002.0
byte~ print_uchar::$2 2002.0
byte print_uchar::b
byte print_uchar::b#0 202.0
byte print_uchar::b#1 202.0
byte print_uchar::b#10 573.0
byte print_uchar::b#2 22.0
byte print_uchar::b#3 22.0
byte print_uchar::b#4 22.0
byte print_uchar::b#5 22.0
byte print_uchar::b#6 22.0
byte print_uchar::b#7 22.0
byte print_uchar::b#8 22.0
byte print_uchar::b#9 22.0
void print_uint(word print_uint::w)
word print_uint::w
word print_uint::w#10 22.0
word print_uint::w#2 22.0
word print_uint::w#4 22.0
word print_uint::w#5 85.66666666666666
word print_uint::w#7 22.0
word print_uint::w#8 22.0

Initial phi equivalence classes
[ mul8u::a#3 mul8u::a#6 mul8u::a#0 ]
[ mul8u::res#2 mul8u::res#6 mul8u::res#1 ]
[ mul8u::mb#2 mul8u::mb#1 ]
[ initEntry::entry#10 initEntry::entry#1 initEntry::entry#0 ]
[ initEntry::n#10 ]
[ print_str::str#18 print_str::str#21 print_str::str#0 ]
[ print_line_cursor#33 print_line_cursor#65 print_line_cursor#155 print_line_cursor#156 print_line_cursor#157 print_line_cursor#158 print_line_cursor#159 print_line_cursor#160 print_line_cursor#161 print_line_cursor#162 print_line_cursor#163 print_line_cursor#164 print_line_cursor#165 print_line_cursor#166 print_line_cursor#167 print_line_cursor#168 print_line_cursor#169 print_line_cursor#170 print_line_cursor#171 print_line_cursor#173 ]
[ printEntry::entry#10 printEntry::entry#0 printEntry::entry#1 ]
[ memset::dst#2 memset::dst#1 ]
[ print_char::ch#3 print_char::ch#0 print_char::ch#1 print_char::ch#2 ]
[ print_char_cursor#83 print_char_cursor#146 print_char_cursor#1 print_char_cursor#167 print_char_cursor#209 print_char_cursor#210 print_char_cursor#211 print_char_cursor#212 print_char_cursor#213 print_char_cursor#214 print_char_cursor#215 print_char_cursor#216 print_char_cursor#217 print_char_cursor#218 print_char_cursor#219 print_char_cursor#220 print_char_cursor#221 print_char_cursor#222 print_char_cursor#223 print_char_cursor#10 print_char_cursor#227 print_char_cursor#228 print_char_cursor#230 print_char_cursor#231 print_char_cursor#148 ]
[ print_uint::w#5 print_uint::w#7 print_uint::w#8 print_uint::w#2 print_uint::w#10 print_uint::w#4 ]
[ print_uchar::b#10 print_uchar::b#6 print_uchar::b#7 print_uchar::b#8 print_uchar::b#9 print_uchar::b#2 print_uchar::b#3 print_uchar::b#4 print_uchar::b#5 print_uchar::b#0 print_uchar::b#1 ]
Added variable mul8u::return#2 to live range equivalence class [ mul8u::return#2 ]
Added variable main::fileEntry1_$0 to live range equivalence class [ main::fileEntry1_$0 ]
Added variable main::entry1#0 to live range equivalence class [ main::entry1#0 ]
Added variable mul8u::return#3 to live range equivalence class [ mul8u::return#3 ]
Added variable main::fileEntry2_$0 to live range equivalence class [ main::fileEntry2_$0 ]
Added variable main::entry2#0 to live range equivalence class [ main::entry2#0 ]
Added variable keyboard_key_pressed::return#2 to live range equivalence class [ keyboard_key_pressed::return#2 ]
Added variable main::$20 to live range equivalence class [ main::$20 ]
Added variable keyboard_key_pressed::return#3 to live range equivalence class [ keyboard_key_pressed::return#3 ]
Added variable main::$22 to live range equivalence class [ main::$22 ]
Added variable mul8u::$1 to live range equivalence class [ mul8u::$1 ]
Added variable initEntry::$1 to live range equivalence class [ initEntry::$1 ]
Added variable initEntry::$3 to live range equivalence class [ initEntry::$3 ]
Added variable initEntry::$5 to live range equivalence class [ initEntry::$5 ]
Added variable initEntry::$7 to live range equivalence class [ initEntry::$7 ]
Added variable initEntry::$9 to live range equivalence class [ initEntry::$9 ]
Added variable initEntry::$11 to live range equivalence class [ initEntry::$11 ]
Added variable initEntry::$13 to live range equivalence class [ initEntry::$13 ]
Added variable initEntry::$15 to live range equivalence class [ initEntry::$15 ]
Added variable initEntry::$17 to live range equivalence class [ initEntry::$17 ]
Added variable initEntry::$19 to live range equivalence class [ initEntry::$19 ]
Added variable initEntry::$21 to live range equivalence class [ initEntry::$21 ]
Added variable initEntry::$23 to live range equivalence class [ initEntry::$23 ]
Added variable initEntry::$25 to live range equivalence class [ initEntry::$25 ]
Added variable print_line_cursor#0 to live range equivalence class [ print_line_cursor#0 ]
Added variable keyboard_matrix_read::return#2 to live range equivalence class [ keyboard_matrix_read::return#2 ]
Added variable keyboard_key_pressed::$2 to live range equivalence class [ keyboard_key_pressed::$2 ]
Added variable keyboard_key_pressed::return#0 to live range equivalence class [ keyboard_key_pressed::return#0 ]
Added variable print_uchar::$0 to live range equivalence class [ print_uchar::$0 ]
Added variable print_uchar::$2 to live range equivalence class [ print_uchar::$2 ]
Added variable keyboard_matrix_read::return#0 to live range equivalence class [ keyboard_matrix_read::return#0 ]
Complete equivalence classes
[ mul8u::a#3 mul8u::a#6 mul8u::a#0 ]
[ mul8u::res#2 mul8u::res#6 mul8u::res#1 ]
[ mul8u::mb#2 mul8u::mb#1 ]
[ initEntry::entry#10 initEntry::entry#1 initEntry::entry#0 ]
[ initEntry::n#10 ]
[ print_str::str#18 print_str::str#21 print_str::str#0 ]
[ print_line_cursor#33 print_line_cursor#65 print_line_cursor#155 print_line_cursor#156 print_line_cursor#157 print_line_cursor#158 print_line_cursor#159 print_line_cursor#160 print_line_cursor#161 print_line_cursor#162 print_line_cursor#163 print_line_cursor#164 print_line_cursor#165 print_line_cursor#166 print_line_cursor#167 print_line_cursor#168 print_line_cursor#169 print_line_cursor#170 print_line_cursor#171 print_line_cursor#173 ]
[ printEntry::entry#10 printEntry::entry#0 printEntry::entry#1 ]
[ memset::dst#2 memset::dst#1 ]
[ print_char::ch#3 print_char::ch#0 print_char::ch#1 print_char::ch#2 ]
[ print_char_cursor#83 print_char_cursor#146 print_char_cursor#1 print_char_cursor#167 print_char_cursor#209 print_char_cursor#210 print_char_cursor#211 print_char_cursor#212 print_char_cursor#213 print_char_cursor#214 print_char_cursor#215 print_char_cursor#216 print_char_cursor#217 print_char_cursor#218 print_char_cursor#219 print_char_cursor#220 print_char_cursor#221 print_char_cursor#222 print_char_cursor#223 print_char_cursor#10 print_char_cursor#227 print_char_cursor#228 print_char_cursor#230 print_char_cursor#231 print_char_cursor#148 ]
[ print_uint::w#5 print_uint::w#7 print_uint::w#8 print_uint::w#2 print_uint::w#10 print_uint::w#4 ]
[ print_uchar::b#10 print_uchar::b#6 print_uchar::b#7 print_uchar::b#8 print_uchar::b#9 print_uchar::b#2 print_uchar::b#3 print_uchar::b#4 print_uchar::b#5 print_uchar::b#0 print_uchar::b#1 ]
[ mul8u::return#2 ]
[ main::fileEntry1_$0 ]
[ main::entry1#0 ]
[ mul8u::return#3 ]
[ main::fileEntry2_$0 ]
[ main::entry2#0 ]
[ keyboard_key_pressed::return#2 ]
[ main::$20 ]
[ keyboard_key_pressed::return#3 ]
[ main::$22 ]
[ mul8u::$1 ]
[ initEntry::$1 ]
[ initEntry::$3 ]
[ initEntry::$5 ]
[ initEntry::$7 ]
[ initEntry::$9 ]
[ initEntry::$11 ]
[ initEntry::$13 ]
[ initEntry::$15 ]
[ initEntry::$17 ]
[ initEntry::$19 ]
[ initEntry::$21 ]
[ initEntry::$23 ]
[ initEntry::$25 ]
[ print_line_cursor#0 ]
[ keyboard_matrix_read::return#2 ]
[ keyboard_key_pressed::$2 ]
[ keyboard_key_pressed::return#0 ]
[ print_uchar::$0 ]
[ print_uchar::$2 ]
[ keyboard_matrix_read::return#0 ]
Allocated zp[1]:2 [ mul8u::a#3 mul8u::a#6 mul8u::a#0 ]
Allocated zp[2]:3 [ mul8u::res#2 mul8u::res#6 mul8u::res#1 ]
Allocated zp[2]:5 [ mul8u::mb#2 mul8u::mb#1 ]
Allocated zp[2]:7 [ initEntry::entry#10 initEntry::entry#1 initEntry::entry#0 ]
Allocated zp[1]:9 [ initEntry::n#10 ]
Allocated zp[2]:10 [ print_str::str#18 print_str::str#21 print_str::str#0 ]
Allocated zp[2]:12 [ print_line_cursor#33 print_line_cursor#65 print_line_cursor#155 print_line_cursor#156 print_line_cursor#157 print_line_cursor#158 print_line_cursor#159 print_line_cursor#160 print_line_cursor#161 print_line_cursor#162 print_line_cursor#163 print_line_cursor#164 print_line_cursor#165 print_line_cursor#166 print_line_cursor#167 print_line_cursor#168 print_line_cursor#169 print_line_cursor#170 print_line_cursor#171 print_line_cursor#173 ]
Allocated zp[2]:14 [ printEntry::entry#10 printEntry::entry#0 printEntry::entry#1 ]
Allocated zp[2]:16 [ memset::dst#2 memset::dst#1 ]
Allocated zp[1]:18 [ print_char::ch#3 print_char::ch#0 print_char::ch#1 print_char::ch#2 ]
Allocated zp[2]:19 [ print_char_cursor#83 print_char_cursor#146 print_char_cursor#1 print_char_cursor#167 print_char_cursor#209 print_char_cursor#210 print_char_cursor#211 print_char_cursor#212 print_char_cursor#213 print_char_cursor#214 print_char_cursor#215 print_char_cursor#216 print_char_cursor#217 print_char_cursor#218 print_char_cursor#219 print_char_cursor#220 print_char_cursor#221 print_char_cursor#222 print_char_cursor#223 print_char_cursor#10 print_char_cursor#227 print_char_cursor#228 print_char_cursor#230 print_char_cursor#231 print_char_cursor#148 ]
Allocated zp[2]:21 [ print_uint::w#5 print_uint::w#7 print_uint::w#8 print_uint::w#2 print_uint::w#10 print_uint::w#4 ]
Allocated zp[1]:23 [ print_uchar::b#10 print_uchar::b#6 print_uchar::b#7 print_uchar::b#8 print_uchar::b#9 print_uchar::b#2 print_uchar::b#3 print_uchar::b#4 print_uchar::b#5 print_uchar::b#0 print_uchar::b#1 ]
Allocated zp[2]:24 [ mul8u::return#2 ]
Allocated zp[2]:26 [ main::fileEntry1_$0 ]
Allocated zp[2]:28 [ main::entry1#0 ]
Allocated zp[2]:30 [ mul8u::return#3 ]
Allocated zp[2]:32 [ main::fileEntry2_$0 ]
Allocated zp[2]:34 [ main::entry2#0 ]
Allocated zp[1]:36 [ keyboard_key_pressed::return#2 ]
Allocated zp[1]:37 [ main::$20 ]
Allocated zp[1]:38 [ keyboard_key_pressed::return#3 ]
Allocated zp[1]:39 [ main::$22 ]
Allocated zp[1]:40 [ mul8u::$1 ]
Allocated zp[2]:41 [ initEntry::$1 ]
Allocated zp[2]:43 [ initEntry::$3 ]
Allocated zp[2]:45 [ initEntry::$5 ]
Allocated zp[2]:47 [ initEntry::$7 ]
Allocated zp[1]:49 [ initEntry::$9 ]
Allocated zp[1]:50 [ initEntry::$11 ]
Allocated zp[1]:51 [ initEntry::$13 ]
Allocated zp[1]:52 [ initEntry::$15 ]
Allocated zp[2]:53 [ initEntry::$17 ]
Allocated zp[1]:55 [ initEntry::$19 ]
Allocated zp[1]:56 [ initEntry::$21 ]
Allocated zp[1]:57 [ initEntry::$23 ]
Allocated zp[1]:58 [ initEntry::$25 ]
Allocated zp[2]:59 [ print_line_cursor#0 ]
Allocated zp[1]:61 [ keyboard_matrix_read::return#2 ]
Allocated zp[1]:62 [ keyboard_key_pressed::$2 ]
Allocated zp[1]:63 [ keyboard_key_pressed::return#0 ]
Allocated zp[1]:64 [ print_uchar::$0 ]
Allocated zp[1]:65 [ print_uchar::$2 ]
Allocated zp[1]:66 [ keyboard_matrix_read::return#0 ]
REGISTER UPLIFT POTENTIAL REGISTERS
Statement [4] mul8u::return#2 = mul8u::res#2 [ mul8u::return#2 ] (  [ mul8u::return#2 ] { { mul8u::return#2 = mul8u::res#2 } }  ) always clobbers reg byte a 
Statement [5] main::fileEntry1_$0 = mul8u::return#2 [ main::fileEntry1_$0 ] (  [ main::fileEntry1_$0 ] { }  ) always clobbers reg byte a 
Statement [6] main::entry1#0 = files + main::fileEntry1_$0 [ main::entry1#0 ] (  [ main::entry1#0 ] { }  ) always clobbers reg byte a 
Statement [9] mul8u::return#3 = mul8u::res#2 [ main::entry1#0 mul8u::return#3 ] (  [ main::entry1#0 mul8u::return#3 ] { { mul8u::return#3 = mul8u::res#2 } }  ) always clobbers reg byte a 
Statement [10] main::fileEntry2_$0 = mul8u::return#3 [ main::entry1#0 main::fileEntry2_$0 ] (  [ main::entry1#0 main::fileEntry2_$0 ] { }  ) always clobbers reg byte a 
Statement [11] main::entry2#0 = files + main::fileEntry2_$0 [ main::entry1#0 main::entry2#0 ] (  [ main::entry1#0 main::entry2#0 ] { }  ) always clobbers reg byte a 
Statement [12] initEntry::entry#0 = main::entry1#0 [ main::entry1#0 main::entry2#0 initEntry::entry#0 ] (  [ main::entry1#0 main::entry2#0 initEntry::entry#0 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  ) always clobbers reg byte a 
Statement [14] initEntry::entry#1 = main::entry2#0 [ main::entry1#0 main::entry2#0 initEntry::entry#1 ] (  [ main::entry1#0 main::entry2#0 initEntry::entry#1 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [22] print_line_cursor#155 = print_line_cursor#0 [ main::entry1#0 main::entry2#0 print_line_cursor#155 print_line_cursor#0 ] (  [ main::entry1#0 main::entry2#0 print_line_cursor#155 print_line_cursor#0 ] { { print_line_cursor#155 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#227 } }  ) always clobbers reg byte a 
Statement [23] print_char_cursor#227 = print_line_cursor#0 [ main::entry1#0 main::entry2#0 print_line_cursor#155 print_char_cursor#227 ] (  [ main::entry1#0 main::entry2#0 print_line_cursor#155 print_char_cursor#227 ] { { print_line_cursor#155 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#227 } }  ) always clobbers reg byte a 
Statement [25] printEntry::entry#0 = main::entry1#0 [ main::entry2#0 print_line_cursor#0 printEntry::entry#0 ] (  [ main::entry2#0 print_line_cursor#0 printEntry::entry#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } }  ) always clobbers reg byte a 
Statement [27] print_line_cursor#156 = print_line_cursor#0 [ main::entry2#0 print_line_cursor#0 print_line_cursor#156 ] (  [ main::entry2#0 print_line_cursor#0 print_line_cursor#156 ] { { print_line_cursor#156 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#228 } }  ) always clobbers reg byte a 
Statement [28] print_char_cursor#228 = print_line_cursor#0 [ main::entry2#0 print_line_cursor#156 print_char_cursor#228 ] (  [ main::entry2#0 print_line_cursor#156 print_char_cursor#228 ] { { print_line_cursor#156 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#228 } }  ) always clobbers reg byte a 
Statement [30] print_char_cursor#209 = print_line_cursor#0 [ main::entry2#0 print_char_cursor#209 ] (  [ main::entry2#0 print_char_cursor#209 ] { { print_char_cursor#167 = print_char_cursor#209 } }  ) always clobbers reg byte a 
Statement [43] print_line_cursor#157 = print_line_cursor#0 [ main::entry2#0 print_line_cursor#0 print_line_cursor#157 ] (  [ main::entry2#0 print_line_cursor#0 print_line_cursor#157 ] { { print_line_cursor#157 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#230 } }  ) always clobbers reg byte a 
Statement [44] print_char_cursor#230 = print_line_cursor#0 [ main::entry2#0 print_line_cursor#157 print_char_cursor#230 ] (  [ main::entry2#0 print_line_cursor#157 print_char_cursor#230 ] { { print_line_cursor#157 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#230 } }  ) always clobbers reg byte a 
Statement [46] printEntry::entry#1 = main::entry2#0 [ print_line_cursor#0 printEntry::entry#1 ] (  [ print_line_cursor#0 printEntry::entry#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [48] print_line_cursor#158 = print_line_cursor#0 [ print_line_cursor#0 print_line_cursor#158 ] (  [ print_line_cursor#0 print_line_cursor#158 ] { { print_line_cursor#158 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#231 } }  ) always clobbers reg byte a 
Statement [49] print_char_cursor#231 = print_line_cursor#0 [ print_line_cursor#158 print_char_cursor#231 ] (  [ print_line_cursor#158 print_char_cursor#231 ] { { print_line_cursor#158 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#231 } }  ) always clobbers reg byte a 
Statement [51] print_char_cursor#210 = print_line_cursor#0 [ print_char_cursor#210 ] (  [ print_char_cursor#210 ] { { print_char_cursor#167 = print_char_cursor#210 } }  ) always clobbers reg byte a 
Statement [61] *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR) = $ff [ ] ( keyboard_init:1 [ ] { }  ) always clobbers reg byte a 
Statement [62] *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_B_DDR) = 0 [ ] ( keyboard_init:1 [ ] { }  ) always clobbers reg byte a 
Statement [70] mul8u::res#1 = mul8u::res#2 + mul8u::mb#2 [ mul8u::a#3 mul8u::mb#2 mul8u::res#1 ] ( mul8u:3 [ mul8u::a#3 mul8u::mb#2 mul8u::res#1 ] { { mul8u::return#2 = mul8u::res#2 } }  mul8u:8 [ main::entry1#0 mul8u::a#3 mul8u::mb#2 mul8u::res#1 ] { { mul8u::return#3 = mul8u::res#2 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:2 [ mul8u::a#3 mul8u::a#6 mul8u::a#0 ]
Statement [76] initEntry::$1 = $1111 + initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$1 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$1 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$1 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:9 [ initEntry::n#10 ]
Statement [77] *((byte**)initEntry::entry#10) = (byte*)initEntry::$1 [ initEntry::entry#10 initEntry::n#10 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:9 [ initEntry::n#10 ]
Statement [79] initEntry::$3 = $2222 + initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$3 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$3 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$3 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [80] ((byte**)initEntry::entry#10)[2] = (byte*)initEntry::$3 [ initEntry::entry#10 initEntry::n#10 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a reg byte y 
Statement [82] initEntry::$5 = $3333 + initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$5 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$5 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$5 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [83] ((word*)initEntry::entry#10)[4] = initEntry::$5 [ initEntry::entry#10 initEntry::n#10 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a reg byte y 
Statement [85] initEntry::$7 = $4444 + initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$7 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$7 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$7 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [86] ((word**)initEntry::entry#10)[6] = (word*)initEntry::$7 [ initEntry::entry#10 initEntry::n#10 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a reg byte y 
Statement [88] initEntry::$9 = $55 + initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$9 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$9 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$9 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [89] initEntry::entry#10[8] = initEntry::$9 [ initEntry::entry#10 initEntry::n#10 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte y 
Statement [91] initEntry::$11 = $66 + initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$11 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$11 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$11 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [92] initEntry::entry#10[9] = initEntry::$11 [ initEntry::entry#10 initEntry::n#10 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte y 
Statement [94] initEntry::$13 = $77 + initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$13 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$13 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$13 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [95] initEntry::entry#10[$a] = initEntry::$13 [ initEntry::entry#10 initEntry::n#10 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte y 
Statement [97] initEntry::$15 = $88 + initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$15 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$15 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$15 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [98] initEntry::entry#10[$b] = initEntry::$15 [ initEntry::entry#10 initEntry::n#10 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte y 
Statement [100] initEntry::$17 = $9999 + initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$17 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$17 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$17 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [101] ((word*)initEntry::entry#10)[$c] = initEntry::$17 [ initEntry::entry#10 initEntry::n#10 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a reg byte y 
Statement [103] initEntry::$19 = $aa + initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$19 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$19 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$19 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [104] initEntry::entry#10[$e] = initEntry::$19 [ initEntry::entry#10 initEntry::n#10 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte y 
Statement [106] initEntry::$21 = $bb + initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$21 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$21 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$21 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [107] initEntry::entry#10[$f] = initEntry::$21 [ initEntry::entry#10 initEntry::n#10 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte y 
Statement [109] initEntry::$23 = $cc + initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$23 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$23 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$23 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [110] initEntry::entry#10[$10] = initEntry::$23 [ initEntry::entry#10 initEntry::n#10 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte y 
Statement [112] initEntry::$25 = $dd + initEntry::n#10 [ initEntry::entry#10 initEntry::$25 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::$25 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::$25 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [113] initEntry::entry#10[$11] = initEntry::$25 [ ] ( initEntry:13 [ main::entry1#0 main::entry2#0 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte y 
Statement [120] if(0!=*print_str::str#18) goto print_str::@2 [ print_str::str#18 print_char_cursor#1 ] ( print_str:19 [ main::entry1#0 main::entry2#0 print_str::str#18 print_char_cursor#1 ] { }  print_str:31 [ main::entry2#0 print_str::str#18 print_char_cursor#1 ] { { print_char_cursor#167 = print_char_cursor#209 } }  print_str:40 [ main::entry2#0 print_str::str#18 print_char_cursor#1 ] { }  print_str:52 [ print_str::str#18 print_char_cursor#1 ] { { print_char_cursor#167 = print_char_cursor#210 } }  printEntry:26::print_str:133 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#211 } }  printEntry:47::print_str:133 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#211 } }  printEntry:26::print_str:140 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#212 } }  printEntry:47::print_str:140 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#212 } }  printEntry:26::print_str:147 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#213 } }  printEntry:47::print_str:147 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#213 } }  printEntry:26::print_str:154 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#214 } }  printEntry:47::print_str:154 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#214 } }  printEntry:26::print_str:161 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#215 } }  printEntry:47::print_str:161 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#215 } }  printEntry:26::print_str:168 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#216 } }  printEntry:47::print_str:168 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#216 } }  printEntry:26::print_str:175 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#217 } }  printEntry:47::print_str:175 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#217 } }  printEntry:26::print_str:182 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#218 } }  printEntry:47::print_str:182 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#218 } }  printEntry:26::print_str:189 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#219 } }  printEntry:47::print_str:189 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#219 } }  printEntry:26::print_str:196 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#220 } }  printEntry:47::print_str:196 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#220 } }  printEntry:26::print_str:203 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#221 } }  printEntry:47::print_str:203 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#221 } }  printEntry:26::print_str:210 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#222 } }  printEntry:47::print_str:210 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#222 } }  printEntry:26::print_str:217 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#223 } }  printEntry:47::print_str:217 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#223 } }  ) always clobbers reg byte a reg byte y 
Statement [122] print_char::ch#0 = *print_str::str#18 [ print_str::str#18 print_char_cursor#1 print_char::ch#0 ] ( print_str:19 [ main::entry1#0 main::entry2#0 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  print_str:31 [ main::entry2#0 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { print_char_cursor#167 = print_char_cursor#209 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  print_str:40 [ main::entry2#0 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  print_str:52 [ print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { print_char_cursor#167 = print_char_cursor#210 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:133 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#211 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:133 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#211 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:140 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#212 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:140 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#212 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:147 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#213 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:147 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#213 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:154 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#214 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:154 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#214 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:161 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#215 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:161 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#215 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:168 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#216 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:168 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#216 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:175 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#217 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:175 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#217 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:182 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#218 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:182 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#218 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:189 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#219 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:189 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#219 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:196 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#220 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:196 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#220 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:203 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#221 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:203 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#221 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:210 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#222 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:210 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#222 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:217 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#223 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:217 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#223 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  ) always clobbers reg byte a reg byte y 
Statement [127] print_line_cursor#0 = print_line_cursor#33 + $28 [ print_line_cursor#0 print_char_cursor#146 ] ( print_ln:21 [ main::entry1#0 main::entry2#0 print_line_cursor#0 print_char_cursor#146 ] { { print_char_cursor#1 = print_char_cursor#146 } }  print_ln:24 [ main::entry1#0 main::entry2#0 print_line_cursor#0 print_char_cursor#146 ] { { print_line_cursor#155 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#227 } }  print_ln:29 [ main::entry2#0 print_line_cursor#0 print_char_cursor#146 ] { { print_line_cursor#156 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#228 } }  print_ln:42 [ main::entry2#0 print_line_cursor#0 print_char_cursor#146 ] { { print_char_cursor#1 = print_char_cursor#146 } }  print_ln:45 [ main::entry2#0 print_line_cursor#0 print_char_cursor#146 ] { { print_line_cursor#157 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#230 } }  print_ln:50 [ print_line_cursor#0 print_char_cursor#146 ] { { print_line_cursor#158 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#231 } }  printEntry:26::print_ln:138 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#159 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:138 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#159 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:145 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#160 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:145 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#160 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:152 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#161 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:152 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#161 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:159 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#162 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:159 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#162 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:166 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#163 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:166 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#163 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:173 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#164 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:173 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#164 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:180 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#165 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:180 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#165 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:187 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#166 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:187 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#166 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:194 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#167 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:194 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#167 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:201 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#168 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:201 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#168 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:208 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#169 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:208 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#169 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:215 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#170 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:215 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#170 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:222 [ main::entry2#0 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#171 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:222 [ print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#171 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [128] if(print_line_cursor#0<print_char_cursor#146) goto print_ln::@2 [ print_line_cursor#0 print_char_cursor#146 ] ( print_ln:21 [ main::entry1#0 main::entry2#0 print_line_cursor#0 print_char_cursor#146 ] { { print_char_cursor#1 = print_char_cursor#146 } }  print_ln:24 [ main::entry1#0 main::entry2#0 print_line_cursor#0 print_char_cursor#146 ] { { print_line_cursor#155 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#227 } }  print_ln:29 [ main::entry2#0 print_line_cursor#0 print_char_cursor#146 ] { { print_line_cursor#156 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#228 } }  print_ln:42 [ main::entry2#0 print_line_cursor#0 print_char_cursor#146 ] { { print_char_cursor#1 = print_char_cursor#146 } }  print_ln:45 [ main::entry2#0 print_line_cursor#0 print_char_cursor#146 ] { { print_line_cursor#157 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#230 } }  print_ln:50 [ print_line_cursor#0 print_char_cursor#146 ] { { print_line_cursor#158 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#231 } }  printEntry:26::print_ln:138 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#159 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:138 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#159 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:145 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#160 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:145 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#160 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:152 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#161 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:152 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#161 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:159 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#162 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:159 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#162 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:166 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#163 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:166 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#163 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:173 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#164 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:173 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#164 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:180 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#165 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:180 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#165 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:187 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#166 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:187 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#166 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:194 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#167 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:194 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#167 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:201 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#168 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:201 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#168 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:208 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#169 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:208 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#169 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:215 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#170 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:215 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#170 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:222 [ main::entry2#0 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#171 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:222 [ print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#171 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [130] print_line_cursor#173 = print_line_cursor#0 [ print_char_cursor#146 print_line_cursor#173 ] ( print_ln:21 [ main::entry1#0 main::entry2#0 print_char_cursor#146 print_line_cursor#173 ] { { print_char_cursor#1 = print_char_cursor#146 } }  print_ln:24 [ main::entry1#0 main::entry2#0 print_char_cursor#146 print_line_cursor#173 ] { { print_line_cursor#155 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#227 } }  print_ln:29 [ main::entry2#0 print_char_cursor#146 print_line_cursor#173 ] { { print_line_cursor#156 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#228 } }  print_ln:42 [ main::entry2#0 print_char_cursor#146 print_line_cursor#173 ] { { print_char_cursor#1 = print_char_cursor#146 } }  print_ln:45 [ main::entry2#0 print_char_cursor#146 print_line_cursor#173 ] { { print_line_cursor#157 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#230 } }  print_ln:50 [ print_char_cursor#146 print_line_cursor#173 ] { { print_line_cursor#158 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#231 } }  printEntry:26::print_ln:138 [ main::entry2#0 printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#159 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:138 [ printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#159 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:145 [ main::entry2#0 printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#160 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:145 [ printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#160 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:152 [ main::entry2#0 printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#161 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:152 [ printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#161 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:159 [ main::entry2#0 printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#162 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:159 [ printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#162 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:166 [ main::entry2#0 printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#163 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:166 [ printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#163 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:173 [ main::entry2#0 printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#164 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:173 [ printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#164 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:180 [ main::entry2#0 printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#165 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:180 [ printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#165 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:187 [ main::entry2#0 printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#166 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:187 [ printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#166 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:194 [ main::entry2#0 printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#167 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:194 [ printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#167 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:201 [ main::entry2#0 printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#168 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:201 [ printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#168 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:208 [ main::entry2#0 printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#169 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:208 [ printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#169 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:215 [ main::entry2#0 printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#170 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:215 [ printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#170 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:222 [ main::entry2#0 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#171 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:222 [ print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#171 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [132] print_char_cursor#211 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#211 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#211 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#211 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#211 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#211 } }  ) always clobbers reg byte a 
Statement [135] print_uint::w#7 = (word)*((byte**)printEntry::entry#10) [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#7 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#7 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#7 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#7 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#7 } }  ) always clobbers reg byte a reg byte y 
Statement [137] print_line_cursor#159 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#159 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#159 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#159 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#159 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#159 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [139] print_char_cursor#212 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#212 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#212 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#212 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#212 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#212 } }  ) always clobbers reg byte a 
Statement [142] print_uint::w#8 = (word)((byte**)printEntry::entry#10)[2] [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#8 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#8 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#8 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#8 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#8 } }  ) always clobbers reg byte a reg byte y 
Statement [144] print_line_cursor#160 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#160 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#160 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#160 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#160 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#160 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [146] print_char_cursor#213 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#213 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#213 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#213 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#213 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#213 } }  ) always clobbers reg byte a 
Statement [149] print_uint::w#2 = ((word*)printEntry::entry#10)[4] [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#2 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#2 = print_uint::w#5 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#2 = print_uint::w#5 } }  ) always clobbers reg byte a reg byte y 
Statement [151] print_line_cursor#161 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#161 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#161 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#161 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#161 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#161 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [153] print_char_cursor#214 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#214 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#214 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#214 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#214 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#214 } }  ) always clobbers reg byte a 
Statement [156] print_uint::w#10 = (word)((word**)printEntry::entry#10)[6] [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#10 = print_uint::w#5 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#10 = print_uint::w#5 } }  ) always clobbers reg byte a reg byte y 
Statement [158] print_line_cursor#162 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#162 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#162 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#162 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#162 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#162 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [160] print_char_cursor#215 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#215 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#215 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#215 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#215 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#215 } }  ) always clobbers reg byte a 
Statement [163] print_uchar::b#2 = printEntry::entry#10[8] [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#2 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#2 } { print_char_cursor#1 = print_char_cursor#148 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#2 } { print_char_cursor#1 = print_char_cursor#148 } }  ) always clobbers reg byte a reg byte y 
Statement [165] print_line_cursor#163 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#163 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#163 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#163 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#163 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#163 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [167] print_char_cursor#216 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#216 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#216 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#216 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#216 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#216 } }  ) always clobbers reg byte a 
Statement [170] print_uchar::b#3 = printEntry::entry#10[9] [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#3 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#3 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#3 } { print_char_cursor#1 = print_char_cursor#148 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#3 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#3 } { print_char_cursor#1 = print_char_cursor#148 } }  ) always clobbers reg byte a reg byte y 
Statement [172] print_line_cursor#164 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#164 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#164 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#164 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#164 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#164 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [174] print_char_cursor#217 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#217 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#217 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#217 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#217 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#217 } }  ) always clobbers reg byte a 
Statement [177] print_uchar::b#4 = printEntry::entry#10[$a] [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#4 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#4 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#4 } { print_char_cursor#1 = print_char_cursor#148 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#4 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#4 } { print_char_cursor#1 = print_char_cursor#148 } }  ) always clobbers reg byte a reg byte y 
Statement [179] print_line_cursor#165 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#165 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#165 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#165 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#165 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#165 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [181] print_char_cursor#218 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#218 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#218 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#218 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#218 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#218 } }  ) always clobbers reg byte a 
Statement [184] print_uchar::b#5 = printEntry::entry#10[$b] [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#5 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#5 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#5 } { print_char_cursor#1 = print_char_cursor#148 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#5 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#5 } { print_char_cursor#1 = print_char_cursor#148 } }  ) always clobbers reg byte a reg byte y 
Statement [186] print_line_cursor#166 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#166 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#166 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#166 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#166 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#166 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [188] print_char_cursor#219 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#219 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#219 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#219 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#219 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#219 } }  ) always clobbers reg byte a 
Statement [191] print_uint::w#4 = ((word*)printEntry::entry#10)[$c] [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#4 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#4 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#4 = print_uint::w#5 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#4 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#4 = print_uint::w#5 } }  ) always clobbers reg byte a reg byte y 
Statement [193] print_line_cursor#167 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#167 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#167 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#167 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#167 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#167 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [195] print_char_cursor#220 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#220 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#220 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#220 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#220 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#220 } }  ) always clobbers reg byte a 
Statement [198] print_uchar::b#6 = printEntry::entry#10[$e] [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#6 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#6 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#6 } { print_char_cursor#1 = print_char_cursor#148 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#6 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#6 } { print_char_cursor#1 = print_char_cursor#148 } }  ) always clobbers reg byte a reg byte y 
Statement [200] print_line_cursor#168 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#168 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#168 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#168 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#168 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#168 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [202] print_char_cursor#221 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#221 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#221 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#221 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#221 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#221 } }  ) always clobbers reg byte a 
Statement [205] print_uchar::b#7 = printEntry::entry#10[$f] [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#7 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#7 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#7 } { print_char_cursor#1 = print_char_cursor#148 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#7 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#7 } { print_char_cursor#1 = print_char_cursor#148 } }  ) always clobbers reg byte a reg byte y 
Statement [207] print_line_cursor#169 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#169 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#169 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#169 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#169 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#169 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [209] print_char_cursor#222 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#222 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#222 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#222 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#222 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#222 } }  ) always clobbers reg byte a 
Statement [212] print_uchar::b#8 = printEntry::entry#10[$10] [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#8 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#8 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#8 } { print_char_cursor#1 = print_char_cursor#148 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#8 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#8 } { print_char_cursor#1 = print_char_cursor#148 } }  ) always clobbers reg byte a reg byte y 
Statement [214] print_line_cursor#170 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#170 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#170 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#170 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#170 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#170 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [216] print_char_cursor#223 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#223 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#223 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#223 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#223 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#223 } }  ) always clobbers reg byte a 
Statement [219] print_uchar::b#9 = printEntry::entry#10[$11] [ print_line_cursor#0 print_char_cursor#1 print_uchar::b#9 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 print_uchar::b#9 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#9 } { print_char_cursor#1 = print_char_cursor#148 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 print_uchar::b#9 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#9 } { print_char_cursor#1 = print_char_cursor#148 } }  ) always clobbers reg byte a reg byte y 
Statement [221] print_line_cursor#171 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#171 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#171 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#171 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#171 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#171 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [232] if(memset::dst#2!=memset::end#0) goto memset::@2 [ memset::dst#2 ] ( print_cls:17::memset:116 [ main::entry1#0 main::entry2#0 memset::dst#2 ] { }  print_cls:38::memset:116 [ main::entry2#0 memset::dst#2 ] { }  print_cls:59::memset:116 [ memset::dst#2 ] { }  ) always clobbers reg byte a 
Statement [234] *memset::dst#2 = memset::c#0 [ memset::dst#2 ] ( print_cls:17::memset:116 [ main::entry1#0 main::entry2#0 memset::dst#2 ] { }  print_cls:38::memset:116 [ main::entry2#0 memset::dst#2 ] { }  print_cls:59::memset:116 [ memset::dst#2 ] { }  ) always clobbers reg byte a reg byte y 
Statement [237] *print_char_cursor#83 = print_char::ch#3 [ print_char_cursor#83 ] ( print_str:19::print_char:123 [ main::entry1#0 main::entry2#0 print_str::str#18 print_char_cursor#83 ] { { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  print_str:31::print_char:123 [ main::entry2#0 print_str::str#18 print_char_cursor#83 ] { { print_char_cursor#167 = print_char_cursor#209 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  print_str:40::print_char:123 [ main::entry2#0 print_str::str#18 print_char_cursor#83 ] { { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  print_str:52::print_char:123 [ print_str::str#18 print_char_cursor#83 ] { { print_char_cursor#167 = print_char_cursor#210 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:133::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#211 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:133::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#211 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:140::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#212 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:140::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#212 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:147::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#213 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:147::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#213 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:154::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#214 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:154::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#214 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:161::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#215 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:161::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#215 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:168::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#216 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:168::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#216 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:175::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#217 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:175::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#217 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:182::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#218 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:182::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#218 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:189::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#219 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:189::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#219 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:196::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#220 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:196::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#220 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:203::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#221 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:203::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#221 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:210::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#222 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:210::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#222 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:217::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#223 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:217::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#223 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_uchar:164::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#2 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:164::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#2 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:171::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#3 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:171::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#3 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:178::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#4 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:178::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#4 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:185::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#5 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:185::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#5 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:199::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#6 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:199::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#6 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:206::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#7 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:206::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#7 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:213::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#8 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:213::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#8 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:220::print_char:249 [ main::entry2#0 print_line_cursor#0 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#9 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:220::print_char:249 [ print_line_cursor#0 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#9 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:136::print_uchar:242::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:136::print_uchar:242::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:143::print_uchar:242::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:143::print_uchar:242::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:150::print_uchar:242::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:150::print_uchar:242::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:157::print_uchar:242::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:157::print_uchar:242::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:192::print_uchar:242::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:192::print_uchar:242::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:136::print_uchar:244::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:136::print_uchar:244::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:143::print_uchar:244::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:143::print_uchar:244::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:150::print_uchar:244::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:150::print_uchar:244::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:157::print_uchar:244::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:157::print_uchar:244::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:192::print_uchar:244::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:192::print_uchar:244::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:164::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#2 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:164::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#2 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:171::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#3 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:171::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#3 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:178::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#4 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:178::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#4 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:185::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#5 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:185::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#5 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:199::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#6 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:199::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#6 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:206::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#7 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:206::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#7 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:213::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#8 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:213::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#8 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:220::print_char:252 [ main::entry2#0 print_line_cursor#0 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#9 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:220::print_char:252 [ print_line_cursor#0 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#9 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uint:136::print_uchar:242::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uint:136::print_uchar:242::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uint:143::print_uchar:242::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uint:143::print_uchar:242::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uint:150::print_uchar:242::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uint:150::print_uchar:242::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uint:157::print_uchar:242::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uint:157::print_uchar:242::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uint:192::print_uchar:242::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uint:192::print_uchar:242::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uint:136::print_uchar:244::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:47::print_uint:136::print_uchar:244::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:26::print_uint:143::print_uchar:244::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:47::print_uint:143::print_uchar:244::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:26::print_uint:150::print_uchar:244::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:47::print_uint:150::print_uchar:244::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:26::print_uint:157::print_uchar:244::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:47::print_uint:157::print_uchar:244::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:26::print_uint:192::print_uchar:244::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:47::print_uint:192::print_uchar:244::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:23 [ print_uchar::b#10 print_uchar::b#6 print_uchar::b#7 print_uchar::b#8 print_uchar::b#9 print_uchar::b#2 print_uchar::b#3 print_uchar::b#4 print_uchar::b#5 print_uchar::b#0 print_uchar::b#1 ]
Statement [247] print_uchar::$0 = print_uchar::b#10 >> 4 [ print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] ( printEntry:26::print_uchar:164 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#2 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:164 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#2 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:171 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#3 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:171 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#3 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:178 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#4 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:178 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#4 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:185 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#5 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:185 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#5 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:199 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#6 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:199 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#6 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:206 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#7 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:206 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#7 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:213 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#8 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:213 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#8 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:220 [ main::entry2#0 print_line_cursor#0 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#9 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:220 [ print_line_cursor#0 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#9 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:136::print_uchar:242 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:136::print_uchar:242 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:143::print_uchar:242 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:143::print_uchar:242 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:150::print_uchar:242 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:150::print_uchar:242 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:157::print_uchar:242 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:157::print_uchar:242 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:192::print_uchar:242 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:192::print_uchar:242 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:136::print_uchar:244 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:136::print_uchar:244 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:143::print_uchar:244 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:143::print_uchar:244 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:150::print_uchar:244 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:150::print_uchar:244 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:157::print_uchar:244 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:157::print_uchar:244 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:192::print_uchar:244 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:192::print_uchar:244 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:23 [ print_uchar::b#10 print_uchar::b#6 print_uchar::b#7 print_uchar::b#8 print_uchar::b#9 print_uchar::b#2 print_uchar::b#3 print_uchar::b#4 print_uchar::b#5 print_uchar::b#0 print_uchar::b#1 ]
Statement [250] print_uchar::$2 = print_uchar::b#10 & $f [ print_char_cursor#10 print_uchar::$2 ] ( printEntry:26::print_uchar:164 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#2 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:164 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#2 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:171 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#3 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:171 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#3 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:178 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#4 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:178 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#4 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:185 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#5 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:185 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#5 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:199 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#6 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:199 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#6 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:206 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#7 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:206 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#7 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:213 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#8 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:213 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#8 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:220 [ main::entry2#0 print_line_cursor#0 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#9 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:220 [ print_line_cursor#0 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#9 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uint:136::print_uchar:242 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uint:136::print_uchar:242 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uint:143::print_uchar:242 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uint:143::print_uchar:242 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uint:150::print_uchar:242 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uint:150::print_uchar:242 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uint:157::print_uchar:242 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uint:157::print_uchar:242 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uint:192::print_uchar:242 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uint:192::print_uchar:242 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uint:136::print_uchar:244 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:47::print_uint:136::print_uchar:244 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:26::print_uint:143::print_uchar:244 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:47::print_uint:143::print_uchar:244 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:26::print_uint:150::print_uchar:244 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:47::print_uint:150::print_uchar:244 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:26::print_uint:157::print_uchar:244 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:47::print_uint:157::print_uchar:244 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:26::print_uint:192::print_uchar:244 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:47::print_uint:192::print_uchar:244 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  ) always clobbers reg byte a 
Statement [254] *((byte*)CIA1) = *(keyboard_matrix_row_bitmask+keyboard_key_pressed::rowidx#0) [ ] ( keyboard_key_pressed:33::keyboard_matrix_read:225 [ main::entry2#0 ] { { keyboard_key_pressed::return#0 = keyboard_key_pressed::return#2 } { keyboard_matrix_read::return#0 = keyboard_matrix_read::return#2 } }  keyboard_key_pressed:54::keyboard_matrix_read:225 [ ] { { keyboard_key_pressed::return#0 = keyboard_key_pressed::return#3 } { keyboard_matrix_read::return#0 = keyboard_matrix_read::return#2 } }  ) always clobbers reg byte a 
Statement [255] keyboard_matrix_read::return#0 = ~ *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_B) [ keyboard_matrix_read::return#0 ] ( keyboard_key_pressed:33::keyboard_matrix_read:225 [ main::entry2#0 keyboard_matrix_read::return#0 ] { { keyboard_key_pressed::return#0 = keyboard_key_pressed::return#2 } { keyboard_matrix_read::return#0 = keyboard_matrix_read::return#2 } }  keyboard_key_pressed:54::keyboard_matrix_read:225 [ keyboard_matrix_read::return#0 ] { { keyboard_key_pressed::return#0 = keyboard_key_pressed::return#3 } { keyboard_matrix_read::return#0 = keyboard_matrix_read::return#2 } }  ) always clobbers reg byte a 
Statement [4] mul8u::return#2 = mul8u::res#2 [ mul8u::return#2 ] (  [ mul8u::return#2 ] { { mul8u::return#2 = mul8u::res#2 } }  ) always clobbers reg byte a 
Statement [5] main::fileEntry1_$0 = mul8u::return#2 [ main::fileEntry1_$0 ] (  [ main::fileEntry1_$0 ] { }  ) always clobbers reg byte a 
Statement [6] main::entry1#0 = files + main::fileEntry1_$0 [ main::entry1#0 ] (  [ main::entry1#0 ] { }  ) always clobbers reg byte a 
Statement [9] mul8u::return#3 = mul8u::res#2 [ main::entry1#0 mul8u::return#3 ] (  [ main::entry1#0 mul8u::return#3 ] { { mul8u::return#3 = mul8u::res#2 } }  ) always clobbers reg byte a 
Statement [10] main::fileEntry2_$0 = mul8u::return#3 [ main::entry1#0 main::fileEntry2_$0 ] (  [ main::entry1#0 main::fileEntry2_$0 ] { }  ) always clobbers reg byte a 
Statement [11] main::entry2#0 = files + main::fileEntry2_$0 [ main::entry1#0 main::entry2#0 ] (  [ main::entry1#0 main::entry2#0 ] { }  ) always clobbers reg byte a 
Statement [12] initEntry::entry#0 = main::entry1#0 [ main::entry1#0 main::entry2#0 initEntry::entry#0 ] (  [ main::entry1#0 main::entry2#0 initEntry::entry#0 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  ) always clobbers reg byte a 
Statement [14] initEntry::entry#1 = main::entry2#0 [ main::entry1#0 main::entry2#0 initEntry::entry#1 ] (  [ main::entry1#0 main::entry2#0 initEntry::entry#1 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [22] print_line_cursor#155 = print_line_cursor#0 [ main::entry1#0 main::entry2#0 print_line_cursor#155 print_line_cursor#0 ] (  [ main::entry1#0 main::entry2#0 print_line_cursor#155 print_line_cursor#0 ] { { print_line_cursor#155 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#227 } }  ) always clobbers reg byte a 
Statement [23] print_char_cursor#227 = print_line_cursor#0 [ main::entry1#0 main::entry2#0 print_line_cursor#155 print_char_cursor#227 ] (  [ main::entry1#0 main::entry2#0 print_line_cursor#155 print_char_cursor#227 ] { { print_line_cursor#155 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#227 } }  ) always clobbers reg byte a 
Statement [25] printEntry::entry#0 = main::entry1#0 [ main::entry2#0 print_line_cursor#0 printEntry::entry#0 ] (  [ main::entry2#0 print_line_cursor#0 printEntry::entry#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } }  ) always clobbers reg byte a 
Statement [27] print_line_cursor#156 = print_line_cursor#0 [ main::entry2#0 print_line_cursor#0 print_line_cursor#156 ] (  [ main::entry2#0 print_line_cursor#0 print_line_cursor#156 ] { { print_line_cursor#156 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#228 } }  ) always clobbers reg byte a 
Statement [28] print_char_cursor#228 = print_line_cursor#0 [ main::entry2#0 print_line_cursor#156 print_char_cursor#228 ] (  [ main::entry2#0 print_line_cursor#156 print_char_cursor#228 ] { { print_line_cursor#156 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#228 } }  ) always clobbers reg byte a 
Statement [30] print_char_cursor#209 = print_line_cursor#0 [ main::entry2#0 print_char_cursor#209 ] (  [ main::entry2#0 print_char_cursor#209 ] { { print_char_cursor#167 = print_char_cursor#209 } }  ) always clobbers reg byte a 
Statement [43] print_line_cursor#157 = print_line_cursor#0 [ main::entry2#0 print_line_cursor#0 print_line_cursor#157 ] (  [ main::entry2#0 print_line_cursor#0 print_line_cursor#157 ] { { print_line_cursor#157 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#230 } }  ) always clobbers reg byte a 
Statement [44] print_char_cursor#230 = print_line_cursor#0 [ main::entry2#0 print_line_cursor#157 print_char_cursor#230 ] (  [ main::entry2#0 print_line_cursor#157 print_char_cursor#230 ] { { print_line_cursor#157 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#230 } }  ) always clobbers reg byte a 
Statement [46] printEntry::entry#1 = main::entry2#0 [ print_line_cursor#0 printEntry::entry#1 ] (  [ print_line_cursor#0 printEntry::entry#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [48] print_line_cursor#158 = print_line_cursor#0 [ print_line_cursor#0 print_line_cursor#158 ] (  [ print_line_cursor#0 print_line_cursor#158 ] { { print_line_cursor#158 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#231 } }  ) always clobbers reg byte a 
Statement [49] print_char_cursor#231 = print_line_cursor#0 [ print_line_cursor#158 print_char_cursor#231 ] (  [ print_line_cursor#158 print_char_cursor#231 ] { { print_line_cursor#158 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#231 } }  ) always clobbers reg byte a 
Statement [51] print_char_cursor#210 = print_line_cursor#0 [ print_char_cursor#210 ] (  [ print_char_cursor#210 ] { { print_char_cursor#167 = print_char_cursor#210 } }  ) always clobbers reg byte a 
Statement [61] *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR) = $ff [ ] ( keyboard_init:1 [ ] { }  ) always clobbers reg byte a 
Statement [62] *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_B_DDR) = 0 [ ] ( keyboard_init:1 [ ] { }  ) always clobbers reg byte a 
Statement [68] mul8u::$1 = mul8u::a#3 & 1 [ mul8u::res#2 mul8u::a#3 mul8u::mb#2 mul8u::$1 ] ( mul8u:3 [ mul8u::res#2 mul8u::a#3 mul8u::mb#2 mul8u::$1 ] { { mul8u::return#2 = mul8u::res#2 } }  mul8u:8 [ main::entry1#0 mul8u::res#2 mul8u::a#3 mul8u::mb#2 mul8u::$1 ] { { mul8u::return#3 = mul8u::res#2 } }  ) always clobbers reg byte a 
Statement [70] mul8u::res#1 = mul8u::res#2 + mul8u::mb#2 [ mul8u::a#3 mul8u::mb#2 mul8u::res#1 ] ( mul8u:3 [ mul8u::a#3 mul8u::mb#2 mul8u::res#1 ] { { mul8u::return#2 = mul8u::res#2 } }  mul8u:8 [ main::entry1#0 mul8u::a#3 mul8u::mb#2 mul8u::res#1 ] { { mul8u::return#3 = mul8u::res#2 } }  ) always clobbers reg byte a 
Statement [76] initEntry::$1 = $1111 + initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$1 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$1 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$1 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [77] *((byte**)initEntry::entry#10) = (byte*)initEntry::$1 [ initEntry::entry#10 initEntry::n#10 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a reg byte y 
Statement [79] initEntry::$3 = $2222 + initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$3 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$3 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$3 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [80] ((byte**)initEntry::entry#10)[2] = (byte*)initEntry::$3 [ initEntry::entry#10 initEntry::n#10 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a reg byte y 
Statement [82] initEntry::$5 = $3333 + initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$5 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$5 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$5 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [83] ((word*)initEntry::entry#10)[4] = initEntry::$5 [ initEntry::entry#10 initEntry::n#10 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a reg byte y 
Statement [85] initEntry::$7 = $4444 + initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$7 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$7 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$7 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [86] ((word**)initEntry::entry#10)[6] = (word*)initEntry::$7 [ initEntry::entry#10 initEntry::n#10 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a reg byte y 
Statement [88] initEntry::$9 = $55 + initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$9 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$9 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$9 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [89] initEntry::entry#10[8] = initEntry::$9 [ initEntry::entry#10 initEntry::n#10 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte y 
Statement [91] initEntry::$11 = $66 + initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$11 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$11 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$11 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [92] initEntry::entry#10[9] = initEntry::$11 [ initEntry::entry#10 initEntry::n#10 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte y 
Statement [94] initEntry::$13 = $77 + initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$13 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$13 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$13 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [95] initEntry::entry#10[$a] = initEntry::$13 [ initEntry::entry#10 initEntry::n#10 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte y 
Statement [97] initEntry::$15 = $88 + initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$15 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$15 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$15 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [98] initEntry::entry#10[$b] = initEntry::$15 [ initEntry::entry#10 initEntry::n#10 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte y 
Statement [100] initEntry::$17 = $9999 + initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$17 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$17 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$17 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [101] ((word*)initEntry::entry#10)[$c] = initEntry::$17 [ initEntry::entry#10 initEntry::n#10 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a reg byte y 
Statement [103] initEntry::$19 = $aa + initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$19 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$19 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$19 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [104] initEntry::entry#10[$e] = initEntry::$19 [ initEntry::entry#10 initEntry::n#10 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte y 
Statement [106] initEntry::$21 = $bb + initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$21 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$21 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$21 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [107] initEntry::entry#10[$f] = initEntry::$21 [ initEntry::entry#10 initEntry::n#10 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte y 
Statement [109] initEntry::$23 = $cc + initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$23 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$23 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$23 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [110] initEntry::entry#10[$10] = initEntry::$23 [ initEntry::entry#10 initEntry::n#10 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte y 
Statement [112] initEntry::$25 = $dd + initEntry::n#10 [ initEntry::entry#10 initEntry::$25 ] ( initEntry:13 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::$25 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::$25 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte a 
Statement [113] initEntry::entry#10[$11] = initEntry::$25 [ ] ( initEntry:13 [ main::entry1#0 main::entry2#0 ] { { initEntry::entry#0 = initEntry::entry#10 main::entry1#0 } }  initEntry:15 [ main::entry1#0 main::entry2#0 ] { { initEntry::entry#1 = initEntry::entry#10 main::entry2#0 } }  ) always clobbers reg byte y 
Statement [120] if(0!=*print_str::str#18) goto print_str::@2 [ print_str::str#18 print_char_cursor#1 ] ( print_str:19 [ main::entry1#0 main::entry2#0 print_str::str#18 print_char_cursor#1 ] { }  print_str:31 [ main::entry2#0 print_str::str#18 print_char_cursor#1 ] { { print_char_cursor#167 = print_char_cursor#209 } }  print_str:40 [ main::entry2#0 print_str::str#18 print_char_cursor#1 ] { }  print_str:52 [ print_str::str#18 print_char_cursor#1 ] { { print_char_cursor#167 = print_char_cursor#210 } }  printEntry:26::print_str:133 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#211 } }  printEntry:47::print_str:133 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#211 } }  printEntry:26::print_str:140 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#212 } }  printEntry:47::print_str:140 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#212 } }  printEntry:26::print_str:147 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#213 } }  printEntry:47::print_str:147 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#213 } }  printEntry:26::print_str:154 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#214 } }  printEntry:47::print_str:154 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#214 } }  printEntry:26::print_str:161 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#215 } }  printEntry:47::print_str:161 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#215 } }  printEntry:26::print_str:168 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#216 } }  printEntry:47::print_str:168 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#216 } }  printEntry:26::print_str:175 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#217 } }  printEntry:47::print_str:175 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#217 } }  printEntry:26::print_str:182 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#218 } }  printEntry:47::print_str:182 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#218 } }  printEntry:26::print_str:189 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#219 } }  printEntry:47::print_str:189 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#219 } }  printEntry:26::print_str:196 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#220 } }  printEntry:47::print_str:196 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#220 } }  printEntry:26::print_str:203 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#221 } }  printEntry:47::print_str:203 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#221 } }  printEntry:26::print_str:210 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#222 } }  printEntry:47::print_str:210 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#222 } }  printEntry:26::print_str:217 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#223 } }  printEntry:47::print_str:217 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#223 } }  ) always clobbers reg byte a reg byte y 
Statement [122] print_char::ch#0 = *print_str::str#18 [ print_str::str#18 print_char_cursor#1 print_char::ch#0 ] ( print_str:19 [ main::entry1#0 main::entry2#0 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  print_str:31 [ main::entry2#0 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { print_char_cursor#167 = print_char_cursor#209 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  print_str:40 [ main::entry2#0 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  print_str:52 [ print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { print_char_cursor#167 = print_char_cursor#210 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:133 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#211 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:133 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#211 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:140 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#212 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:140 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#212 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:147 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#213 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:147 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#213 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:154 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#214 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:154 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#214 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:161 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#215 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:161 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#215 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:168 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#216 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:168 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#216 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:175 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#217 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:175 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#217 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:182 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#218 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:182 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#218 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:189 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#219 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:189 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#219 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:196 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#220 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:196 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#220 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:203 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#221 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:203 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#221 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:210 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#222 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:210 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#222 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:217 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#223 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:217 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#1 print_char::ch#0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#223 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  ) always clobbers reg byte a reg byte y 
Statement [127] print_line_cursor#0 = print_line_cursor#33 + $28 [ print_line_cursor#0 print_char_cursor#146 ] ( print_ln:21 [ main::entry1#0 main::entry2#0 print_line_cursor#0 print_char_cursor#146 ] { { print_char_cursor#1 = print_char_cursor#146 } }  print_ln:24 [ main::entry1#0 main::entry2#0 print_line_cursor#0 print_char_cursor#146 ] { { print_line_cursor#155 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#227 } }  print_ln:29 [ main::entry2#0 print_line_cursor#0 print_char_cursor#146 ] { { print_line_cursor#156 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#228 } }  print_ln:42 [ main::entry2#0 print_line_cursor#0 print_char_cursor#146 ] { { print_char_cursor#1 = print_char_cursor#146 } }  print_ln:45 [ main::entry2#0 print_line_cursor#0 print_char_cursor#146 ] { { print_line_cursor#157 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#230 } }  print_ln:50 [ print_line_cursor#0 print_char_cursor#146 ] { { print_line_cursor#158 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#231 } }  printEntry:26::print_ln:138 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#159 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:138 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#159 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:145 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#160 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:145 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#160 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:152 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#161 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:152 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#161 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:159 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#162 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:159 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#162 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:166 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#163 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:166 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#163 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:173 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#164 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:173 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#164 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:180 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#165 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:180 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#165 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:187 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#166 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:187 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#166 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:194 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#167 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:194 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#167 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:201 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#168 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:201 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#168 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:208 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#169 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:208 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#169 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:215 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#170 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:215 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#170 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:222 [ main::entry2#0 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#171 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:222 [ print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#171 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [128] if(print_line_cursor#0<print_char_cursor#146) goto print_ln::@2 [ print_line_cursor#0 print_char_cursor#146 ] ( print_ln:21 [ main::entry1#0 main::entry2#0 print_line_cursor#0 print_char_cursor#146 ] { { print_char_cursor#1 = print_char_cursor#146 } }  print_ln:24 [ main::entry1#0 main::entry2#0 print_line_cursor#0 print_char_cursor#146 ] { { print_line_cursor#155 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#227 } }  print_ln:29 [ main::entry2#0 print_line_cursor#0 print_char_cursor#146 ] { { print_line_cursor#156 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#228 } }  print_ln:42 [ main::entry2#0 print_line_cursor#0 print_char_cursor#146 ] { { print_char_cursor#1 = print_char_cursor#146 } }  print_ln:45 [ main::entry2#0 print_line_cursor#0 print_char_cursor#146 ] { { print_line_cursor#157 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#230 } }  print_ln:50 [ print_line_cursor#0 print_char_cursor#146 ] { { print_line_cursor#158 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#231 } }  printEntry:26::print_ln:138 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#159 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:138 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#159 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:145 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#160 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:145 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#160 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:152 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#161 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:152 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#161 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:159 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#162 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:159 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#162 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:166 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#163 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:166 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#163 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:173 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#164 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:173 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#164 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:180 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#165 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:180 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#165 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:187 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#166 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:187 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#166 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:194 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#167 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:194 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#167 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:201 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#168 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:201 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#168 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:208 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#169 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:208 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#169 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:215 [ main::entry2#0 printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#170 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:215 [ printEntry::entry#10 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#170 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:222 [ main::entry2#0 print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#171 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:222 [ print_line_cursor#0 print_char_cursor#146 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#171 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [130] print_line_cursor#173 = print_line_cursor#0 [ print_char_cursor#146 print_line_cursor#173 ] ( print_ln:21 [ main::entry1#0 main::entry2#0 print_char_cursor#146 print_line_cursor#173 ] { { print_char_cursor#1 = print_char_cursor#146 } }  print_ln:24 [ main::entry1#0 main::entry2#0 print_char_cursor#146 print_line_cursor#173 ] { { print_line_cursor#155 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#227 } }  print_ln:29 [ main::entry2#0 print_char_cursor#146 print_line_cursor#173 ] { { print_line_cursor#156 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#228 } }  print_ln:42 [ main::entry2#0 print_char_cursor#146 print_line_cursor#173 ] { { print_char_cursor#1 = print_char_cursor#146 } }  print_ln:45 [ main::entry2#0 print_char_cursor#146 print_line_cursor#173 ] { { print_line_cursor#157 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#230 } }  print_ln:50 [ print_char_cursor#146 print_line_cursor#173 ] { { print_line_cursor#158 = print_line_cursor#65 } { print_char_cursor#146 = print_char_cursor#231 } }  printEntry:26::print_ln:138 [ main::entry2#0 printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#159 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:138 [ printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#159 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:145 [ main::entry2#0 printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#160 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:145 [ printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#160 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:152 [ main::entry2#0 printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#161 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:152 [ printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#161 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:159 [ main::entry2#0 printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#162 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:159 [ printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#162 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:166 [ main::entry2#0 printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#163 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:166 [ printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#163 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:173 [ main::entry2#0 printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#164 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:173 [ printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#164 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:180 [ main::entry2#0 printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#165 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:180 [ printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#165 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:187 [ main::entry2#0 printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#166 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:187 [ printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#166 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:194 [ main::entry2#0 printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#167 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:194 [ printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#167 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:201 [ main::entry2#0 printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#168 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:201 [ printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#168 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:208 [ main::entry2#0 printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#169 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:208 [ printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#169 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:215 [ main::entry2#0 printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#170 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:215 [ printEntry::entry#10 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#170 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:26::print_ln:222 [ main::entry2#0 print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#171 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47::print_ln:222 [ print_char_cursor#146 print_line_cursor#173 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#171 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [132] print_char_cursor#211 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#211 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#211 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#211 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#211 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#211 } }  ) always clobbers reg byte a 
Statement [135] print_uint::w#7 = (word)*((byte**)printEntry::entry#10) [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#7 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#7 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#7 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#7 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#7 } }  ) always clobbers reg byte a reg byte y 
Statement [137] print_line_cursor#159 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#159 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#159 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#159 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#159 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#159 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [139] print_char_cursor#212 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#212 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#212 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#212 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#212 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#212 } }  ) always clobbers reg byte a 
Statement [142] print_uint::w#8 = (word)((byte**)printEntry::entry#10)[2] [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#8 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#8 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#8 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#8 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#8 } }  ) always clobbers reg byte a reg byte y 
Statement [144] print_line_cursor#160 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#160 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#160 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#160 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#160 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#160 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [146] print_char_cursor#213 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#213 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#213 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#213 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#213 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#213 } }  ) always clobbers reg byte a 
Statement [149] print_uint::w#2 = ((word*)printEntry::entry#10)[4] [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#2 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#2 = print_uint::w#5 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#2 = print_uint::w#5 } }  ) always clobbers reg byte a reg byte y 
Statement [151] print_line_cursor#161 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#161 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#161 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#161 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#161 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#161 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [153] print_char_cursor#214 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#214 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#214 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#214 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#214 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#214 } }  ) always clobbers reg byte a 
Statement [156] print_uint::w#10 = (word)((word**)printEntry::entry#10)[6] [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#10 = print_uint::w#5 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#10 = print_uint::w#5 } }  ) always clobbers reg byte a reg byte y 
Statement [158] print_line_cursor#162 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#162 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#162 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#162 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#162 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#162 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [160] print_char_cursor#215 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#215 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#215 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#215 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#215 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#215 } }  ) always clobbers reg byte a 
Statement [163] print_uchar::b#2 = printEntry::entry#10[8] [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#2 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#2 } { print_char_cursor#1 = print_char_cursor#148 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#2 } { print_char_cursor#1 = print_char_cursor#148 } }  ) always clobbers reg byte a reg byte y 
Statement [165] print_line_cursor#163 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#163 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#163 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#163 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#163 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#163 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [167] print_char_cursor#216 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#216 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#216 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#216 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#216 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#216 } }  ) always clobbers reg byte a 
Statement [170] print_uchar::b#3 = printEntry::entry#10[9] [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#3 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#3 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#3 } { print_char_cursor#1 = print_char_cursor#148 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#3 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#3 } { print_char_cursor#1 = print_char_cursor#148 } }  ) always clobbers reg byte a reg byte y 
Statement [172] print_line_cursor#164 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#164 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#164 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#164 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#164 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#164 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [174] print_char_cursor#217 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#217 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#217 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#217 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#217 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#217 } }  ) always clobbers reg byte a 
Statement [177] print_uchar::b#4 = printEntry::entry#10[$a] [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#4 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#4 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#4 } { print_char_cursor#1 = print_char_cursor#148 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#4 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#4 } { print_char_cursor#1 = print_char_cursor#148 } }  ) always clobbers reg byte a reg byte y 
Statement [179] print_line_cursor#165 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#165 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#165 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#165 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#165 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#165 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [181] print_char_cursor#218 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#218 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#218 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#218 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#218 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#218 } }  ) always clobbers reg byte a 
Statement [184] print_uchar::b#5 = printEntry::entry#10[$b] [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#5 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#5 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#5 } { print_char_cursor#1 = print_char_cursor#148 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#5 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#5 } { print_char_cursor#1 = print_char_cursor#148 } }  ) always clobbers reg byte a reg byte y 
Statement [186] print_line_cursor#166 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#166 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#166 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#166 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#166 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#166 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [188] print_char_cursor#219 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#219 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#219 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#219 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#219 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#219 } }  ) always clobbers reg byte a 
Statement [191] print_uint::w#4 = ((word*)printEntry::entry#10)[$c] [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#4 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#4 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#4 = print_uint::w#5 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uint::w#4 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#4 = print_uint::w#5 } }  ) always clobbers reg byte a reg byte y 
Statement [193] print_line_cursor#167 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#167 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#167 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#167 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#167 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#167 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [195] print_char_cursor#220 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#220 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#220 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#220 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#220 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#220 } }  ) always clobbers reg byte a 
Statement [198] print_uchar::b#6 = printEntry::entry#10[$e] [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#6 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#6 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#6 } { print_char_cursor#1 = print_char_cursor#148 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#6 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#6 } { print_char_cursor#1 = print_char_cursor#148 } }  ) always clobbers reg byte a reg byte y 
Statement [200] print_line_cursor#168 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#168 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#168 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#168 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#168 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#168 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [202] print_char_cursor#221 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#221 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#221 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#221 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#221 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#221 } }  ) always clobbers reg byte a 
Statement [205] print_uchar::b#7 = printEntry::entry#10[$f] [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#7 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#7 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#7 } { print_char_cursor#1 = print_char_cursor#148 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#7 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#7 } { print_char_cursor#1 = print_char_cursor#148 } }  ) always clobbers reg byte a reg byte y 
Statement [207] print_line_cursor#169 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#169 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#169 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#169 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#169 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#169 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [209] print_char_cursor#222 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#222 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#222 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#222 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#222 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#222 } }  ) always clobbers reg byte a 
Statement [212] print_uchar::b#8 = printEntry::entry#10[$10] [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#8 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#8 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#8 } { print_char_cursor#1 = print_char_cursor#148 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 printEntry::entry#10 print_uchar::b#8 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#8 } { print_char_cursor#1 = print_char_cursor#148 } }  ) always clobbers reg byte a reg byte y 
Statement [214] print_line_cursor#170 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#170 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#170 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#170 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#170 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#170 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [216] print_char_cursor#223 = print_line_cursor#0 [ print_line_cursor#0 print_char_cursor#223 printEntry::entry#10 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#223 printEntry::entry#10 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#223 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#223 printEntry::entry#10 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#223 } }  ) always clobbers reg byte a 
Statement [219] print_uchar::b#9 = printEntry::entry#10[$11] [ print_line_cursor#0 print_char_cursor#1 print_uchar::b#9 ] ( printEntry:26 [ main::entry2#0 print_line_cursor#0 print_char_cursor#1 print_uchar::b#9 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#9 } { print_char_cursor#1 = print_char_cursor#148 } }  printEntry:47 [ print_line_cursor#0 print_char_cursor#1 print_uchar::b#9 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#9 } { print_char_cursor#1 = print_char_cursor#148 } }  ) always clobbers reg byte a reg byte y 
Statement [221] print_line_cursor#171 = print_line_cursor#0 [ print_char_cursor#10 print_line_cursor#171 ] ( printEntry:26 [ main::entry2#0 print_char_cursor#10 print_line_cursor#171 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_line_cursor#171 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  printEntry:47 [ print_char_cursor#10 print_line_cursor#171 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_line_cursor#171 = print_line_cursor#65 } { print_char_cursor#10 = print_char_cursor#146 } }  ) always clobbers reg byte a 
Statement [232] if(memset::dst#2!=memset::end#0) goto memset::@2 [ memset::dst#2 ] ( print_cls:17::memset:116 [ main::entry1#0 main::entry2#0 memset::dst#2 ] { }  print_cls:38::memset:116 [ main::entry2#0 memset::dst#2 ] { }  print_cls:59::memset:116 [ memset::dst#2 ] { }  ) always clobbers reg byte a 
Statement [234] *memset::dst#2 = memset::c#0 [ memset::dst#2 ] ( print_cls:17::memset:116 [ main::entry1#0 main::entry2#0 memset::dst#2 ] { }  print_cls:38::memset:116 [ main::entry2#0 memset::dst#2 ] { }  print_cls:59::memset:116 [ memset::dst#2 ] { }  ) always clobbers reg byte a reg byte y 
Statement [237] *print_char_cursor#83 = print_char::ch#3 [ print_char_cursor#83 ] ( print_str:19::print_char:123 [ main::entry1#0 main::entry2#0 print_str::str#18 print_char_cursor#83 ] { { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  print_str:31::print_char:123 [ main::entry2#0 print_str::str#18 print_char_cursor#83 ] { { print_char_cursor#167 = print_char_cursor#209 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  print_str:40::print_char:123 [ main::entry2#0 print_str::str#18 print_char_cursor#83 ] { { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  print_str:52::print_char:123 [ print_str::str#18 print_char_cursor#83 ] { { print_char_cursor#167 = print_char_cursor#210 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:133::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#211 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:133::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#211 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:140::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#212 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:140::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#212 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:147::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#213 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:147::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#213 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:154::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#214 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:154::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#214 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:161::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#215 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:161::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#215 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:168::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#216 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:168::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#216 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:175::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#217 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:175::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#217 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:182::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#218 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:182::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#218 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:189::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#219 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:189::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#219 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:196::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#220 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:196::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#220 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:203::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#221 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:203::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#221 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:210::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#222 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:210::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#222 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_str:217::print_char:123 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_char_cursor#167 = print_char_cursor#223 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:47::print_str:217::print_char:123 [ print_line_cursor#0 printEntry::entry#10 print_str::str#18 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_char_cursor#167 = print_char_cursor#223 } { print_char::ch#0 = print_char::ch#3 } { print_char_cursor#1 = print_char_cursor#83 } }  printEntry:26::print_uchar:164::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#2 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:164::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#2 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:171::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#3 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:171::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#3 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:178::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#4 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:178::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#4 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:185::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#5 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:185::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#5 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:199::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#6 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:199::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#6 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:206::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#7 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:206::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#7 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:213::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#8 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:213::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#8 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:220::print_char:249 [ main::entry2#0 print_line_cursor#0 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#9 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:220::print_char:249 [ print_line_cursor#0 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#9 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:136::print_uchar:242::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:136::print_uchar:242::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:143::print_uchar:242::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:143::print_uchar:242::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:150::print_uchar:242::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:150::print_uchar:242::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:157::print_uchar:242::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:157::print_uchar:242::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:192::print_uchar:242::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:192::print_uchar:242::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:136::print_uchar:244::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:136::print_uchar:244::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:143::print_uchar:244::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:143::print_uchar:244::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:150::print_uchar:244::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:150::print_uchar:244::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:157::print_uchar:244::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:157::print_uchar:244::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:192::print_uchar:244::print_char:249 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:192::print_uchar:244::print_char:249 [ print_line_cursor#0 printEntry::entry#10 print_uchar::b#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:164::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#2 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:164::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#2 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:171::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#3 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:171::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#3 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:178::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#4 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:178::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#4 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:185::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#5 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:185::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#5 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:199::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#6 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:199::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#6 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:206::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#7 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:206::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#7 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:213::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#8 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:213::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#8 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:220::print_char:252 [ main::entry2#0 print_line_cursor#0 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#9 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:220::print_char:252 [ print_line_cursor#0 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#9 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uint:136::print_uchar:242::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uint:136::print_uchar:242::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uint:143::print_uchar:242::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uint:143::print_uchar:242::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uint:150::print_uchar:242::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uint:150::print_uchar:242::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uint:157::print_uchar:242::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uint:157::print_uchar:242::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uint:192::print_uchar:242::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uint:192::print_uchar:242::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uint:136::print_uchar:244::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:47::print_uint:136::print_uchar:244::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:26::print_uint:143::print_uchar:244::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:47::print_uint:143::print_uchar:244::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:26::print_uint:150::print_uchar:244::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:47::print_uint:150::print_uchar:244::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:26::print_uint:157::print_uchar:244::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:47::print_uint:157::print_uchar:244::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:26::print_uint:192::print_uchar:244::print_char:252 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:47::print_uint:192::print_uchar:244::print_char:252 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#83 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  ) always clobbers reg byte y 
Statement [247] print_uchar::$0 = print_uchar::b#10 >> 4 [ print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] ( printEntry:26::print_uchar:164 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#2 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:164 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#2 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:171 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#3 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:171 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#3 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:178 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#4 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:178 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#4 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:185 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#5 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:185 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#5 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:199 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#6 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:199 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#6 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:206 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#7 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:206 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#7 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:213 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#8 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:213 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#8 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uchar:220 [ main::entry2#0 print_line_cursor#0 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#9 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uchar:220 [ print_line_cursor#0 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#9 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:136::print_uchar:242 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:136::print_uchar:242 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:143::print_uchar:242 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:143::print_uchar:242 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:150::print_uchar:242 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:150::print_uchar:242 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:157::print_uchar:242 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:157::print_uchar:242 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:192::print_uchar:242 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:192::print_uchar:242 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:136::print_uchar:244 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:136::print_uchar:244 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:143::print_uchar:244 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:143::print_uchar:244 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:150::print_uchar:244 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:150::print_uchar:244 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:157::print_uchar:244 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:157::print_uchar:244 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:26::print_uint:192::print_uchar:244 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  printEntry:47::print_uint:192::print_uchar:244 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#148 print_uchar::b#10 print_uchar::$0 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#1 = print_char::ch#3 } }  ) always clobbers reg byte a 
Statement [250] print_uchar::$2 = print_uchar::b#10 & $f [ print_char_cursor#10 print_uchar::$2 ] ( printEntry:26::print_uchar:164 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#2 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:164 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#2 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:171 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#3 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:171 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#3 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:178 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#4 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:178 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#4 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:185 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#5 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:185 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#5 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:199 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#6 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:199 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#6 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:206 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#7 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:206 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#7 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:213 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#8 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:213 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#8 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uchar:220 [ main::entry2#0 print_line_cursor#0 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uchar::b#10 = print_uchar::b#9 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uchar:220 [ print_line_cursor#0 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uchar::b#10 = print_uchar::b#9 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uint:136::print_uchar:242 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uint:136::print_uchar:242 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uint:143::print_uchar:242 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uint:143::print_uchar:242 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uint:150::print_uchar:242 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uint:150::print_uchar:242 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uint:157::print_uchar:242 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uint:157::print_uchar:242 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uint:192::print_uchar:242 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:47::print_uint:192::print_uchar:242 [ print_line_cursor#0 printEntry::entry#10 print_uint::w#5 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#0 = print_uchar::b#10 } { print_char_cursor#1 = print_char_cursor#148 } { print_char::ch#2 = print_char::ch#3 } { print_char_cursor#10 = print_char_cursor#83 } }  printEntry:26::print_uint:136::print_uchar:244 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:47::print_uint:136::print_uchar:244 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#7 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:26::print_uint:143::print_uchar:244 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:47::print_uint:143::print_uchar:244 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#5 = print_uint::w#8 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:26::print_uint:150::print_uchar:244 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:47::print_uint:150::print_uchar:244 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#2 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:26::print_uint:157::print_uchar:244 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:47::print_uint:157::print_uchar:244 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#10 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:26::print_uint:192::print_uchar:244 [ main::entry2#0 print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#0 = printEntry::entry#10 main::entry1#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  printEntry:47::print_uint:192::print_uchar:244 [ print_line_cursor#0 printEntry::entry#10 print_char_cursor#10 print_uchar::$2 ] { { printEntry::entry#1 = printEntry::entry#10 main::entry2#0 } { print_uint::w#4 = print_uint::w#5 } { print_uchar::b#1 = print_uchar::b#10 } { print_char_cursor#10 = print_char_cursor#148 print_char_cursor#83 } { print_char::ch#2 = print_char::ch#3 } }  ) always clobbers reg byte a 
Statement [254] *((byte*)CIA1) = *(keyboard_matrix_row_bitmask+keyboard_key_pressed::rowidx#0) [ ] ( keyboard_key_pressed:33::keyboard_matrix_read:225 [ main::entry2#0 ] { { keyboard_key_pressed::return#0 = keyboard_key_pressed::return#2 } { keyboard_matrix_read::return#0 = keyboard_matrix_read::return#2 } }  keyboard_key_pressed:54::keyboard_matrix_read:225 [ ] { { keyboard_key_pressed::return#0 = keyboard_key_pressed::return#3 } { keyboard_matrix_read::return#0 = keyboard_matrix_read::return#2 } }  ) always clobbers reg byte a 
Statement [255] keyboard_matrix_read::return#0 = ~ *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_B) [ keyboard_matrix_read::return#0 ] ( keyboard_key_pressed:33::keyboard_matrix_read:225 [ main::entry2#0 keyboard_matrix_read::return#0 ] { { keyboard_key_pressed::return#0 = keyboard_key_pressed::return#2 } { keyboard_matrix_read::return#0 = keyboard_matrix_read::return#2 } }  keyboard_key_pressed:54::keyboard_matrix_read:225 [ keyboard_matrix_read::return#0 ] { { keyboard_key_pressed::return#0 = keyboard_key_pressed::return#3 } { keyboard_matrix_read::return#0 = keyboard_matrix_read::return#2 } }  ) always clobbers reg byte a 
Potential registers zp[1]:2 [ mul8u::a#3 mul8u::a#6 mul8u::a#0 ] : zp[1]:2 , reg byte x , reg byte y , 
Potential registers zp[2]:3 [ mul8u::res#2 mul8u::res#6 mul8u::res#1 ] : zp[2]:3 , 
Potential registers zp[2]:5 [ mul8u::mb#2 mul8u::mb#1 ] : zp[2]:5 , 
Potential registers zp[2]:7 [ initEntry::entry#10 initEntry::entry#1 initEntry::entry#0 ] : zp[2]:7 , 
Potential registers zp[1]:9 [ initEntry::n#10 ] : zp[1]:9 , reg byte x , 
Potential registers zp[2]:10 [ print_str::str#18 print_str::str#21 print_str::str#0 ] : zp[2]:10 , 
Potential registers zp[2]:12 [ print_line_cursor#33 print_line_cursor#65 print_line_cursor#155 print_line_cursor#156 print_line_cursor#157 print_line_cursor#158 print_line_cursor#159 print_line_cursor#160 print_line_cursor#161 print_line_cursor#162 print_line_cursor#163 print_line_cursor#164 print_line_cursor#165 print_line_cursor#166 print_line_cursor#167 print_line_cursor#168 print_line_cursor#169 print_line_cursor#170 print_line_cursor#171 print_line_cursor#173 ] : zp[2]:12 , 
Potential registers zp[2]:14 [ printEntry::entry#10 printEntry::entry#0 printEntry::entry#1 ] : zp[2]:14 , 
Potential registers zp[2]:16 [ memset::dst#2 memset::dst#1 ] : zp[2]:16 , 
Potential registers zp[1]:18 [ print_char::ch#3 print_char::ch#0 print_char::ch#1 print_char::ch#2 ] : zp[1]:18 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:19 [ print_char_cursor#83 print_char_cursor#146 print_char_cursor#1 print_char_cursor#167 print_char_cursor#209 print_char_cursor#210 print_char_cursor#211 print_char_cursor#212 print_char_cursor#213 print_char_cursor#214 print_char_cursor#215 print_char_cursor#216 print_char_cursor#217 print_char_cursor#218 print_char_cursor#219 print_char_cursor#220 print_char_cursor#221 print_char_cursor#222 print_char_cursor#223 print_char_cursor#10 print_char_cursor#227 print_char_cursor#228 print_char_cursor#230 print_char_cursor#231 print_char_cursor#148 ] : zp[2]:19 , 
Potential registers zp[2]:21 [ print_uint::w#5 print_uint::w#7 print_uint::w#8 print_uint::w#2 print_uint::w#10 print_uint::w#4 ] : zp[2]:21 , 
Potential registers zp[1]:23 [ print_uchar::b#10 print_uchar::b#6 print_uchar::b#7 print_uchar::b#8 print_uchar::b#9 print_uchar::b#2 print_uchar::b#3 print_uchar::b#4 print_uchar::b#5 print_uchar::b#0 print_uchar::b#1 ] : zp[1]:23 , reg byte x , 
Potential registers zp[2]:24 [ mul8u::return#2 ] : zp[2]:24 , 
Potential registers zp[2]:26 [ main::fileEntry1_$0 ] : zp[2]:26 , 
Potential registers zp[2]:28 [ main::entry1#0 ] : zp[2]:28 , 
Potential registers zp[2]:30 [ mul8u::return#3 ] : zp[2]:30 , 
Potential registers zp[2]:32 [ main::fileEntry2_$0 ] : zp[2]:32 , 
Potential registers zp[2]:34 [ main::entry2#0 ] : zp[2]:34 , 
Potential registers zp[1]:36 [ keyboard_key_pressed::return#2 ] : zp[1]:36 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:37 [ main::$20 ] : zp[1]:37 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:38 [ keyboard_key_pressed::return#3 ] : zp[1]:38 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:39 [ main::$22 ] : zp[1]:39 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:40 [ mul8u::$1 ] : zp[1]:40 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:41 [ initEntry::$1 ] : zp[2]:41 , 
Potential registers zp[2]:43 [ initEntry::$3 ] : zp[2]:43 , 
Potential registers zp[2]:45 [ initEntry::$5 ] : zp[2]:45 , 
Potential registers zp[2]:47 [ initEntry::$7 ] : zp[2]:47 , 
Potential registers zp[1]:49 [ initEntry::$9 ] : zp[1]:49 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:50 [ initEntry::$11 ] : zp[1]:50 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:51 [ initEntry::$13 ] : zp[1]:51 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:52 [ initEntry::$15 ] : zp[1]:52 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:53 [ initEntry::$17 ] : zp[2]:53 , 
Potential registers zp[1]:55 [ initEntry::$19 ] : zp[1]:55 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:56 [ initEntry::$21 ] : zp[1]:56 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:57 [ initEntry::$23 ] : zp[1]:57 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:58 [ initEntry::$25 ] : zp[1]:58 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:59 [ print_line_cursor#0 ] : zp[2]:59 , 
Potential registers zp[1]:61 [ keyboard_matrix_read::return#2 ] : zp[1]:61 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:62 [ keyboard_key_pressed::$2 ] : zp[1]:62 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:63 [ keyboard_key_pressed::return#0 ] : zp[1]:63 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:64 [ print_uchar::$0 ] : zp[1]:64 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:65 [ print_uchar::$2 ] : zp[1]:65 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:66 [ keyboard_matrix_read::return#0 ] : zp[1]:66 , reg byte a , reg byte x , reg byte y , 

REGISTER UPLIFT SCOPES
Uplift Scope [print_char] 19,010: zp[1]:18 [ print_char::ch#3 print_char::ch#0 print_char::ch#1 print_char::ch#2 ] 
Uplift Scope [] 13,082.92: zp[2]:19 [ print_char_cursor#83 print_char_cursor#146 print_char_cursor#1 print_char_cursor#167 print_char_cursor#209 print_char_cursor#210 print_char_cursor#211 print_char_cursor#212 print_char_cursor#213 print_char_cursor#214 print_char_cursor#215 print_char_cursor#216 print_char_cursor#217 print_char_cursor#218 print_char_cursor#219 print_char_cursor#220 print_char_cursor#221 print_char_cursor#222 print_char_cursor#223 print_char_cursor#10 print_char_cursor#227 print_char_cursor#228 print_char_cursor#230 print_char_cursor#231 print_char_cursor#148 ] 4,651: zp[2]:12 [ print_line_cursor#33 print_line_cursor#65 print_line_cursor#155 print_line_cursor#156 print_line_cursor#157 print_line_cursor#158 print_line_cursor#159 print_line_cursor#160 print_line_cursor#161 print_line_cursor#162 print_line_cursor#163 print_line_cursor#164 print_line_cursor#165 print_line_cursor#166 print_line_cursor#167 print_line_cursor#168 print_line_cursor#169 print_line_cursor#170 print_line_cursor#171 print_line_cursor#173 ] 34.11: zp[2]:59 [ print_line_cursor#0 ] 
Uplift Scope [print_uchar] 2,002: zp[1]:64 [ print_uchar::$0 ] 2,002: zp[1]:65 [ print_uchar::$2 ] 1,153: zp[1]:23 [ print_uchar::b#10 print_uchar::b#6 print_uchar::b#7 print_uchar::b#8 print_uchar::b#9 print_uchar::b#2 print_uchar::b#3 print_uchar::b#4 print_uchar::b#5 print_uchar::b#0 print_uchar::b#1 ] 
Uplift Scope [memset] 3,336.67: zp[2]:16 [ memset::dst#2 memset::dst#1 ] 
Uplift Scope [print_str] 3,129.25: zp[2]:10 [ print_str::str#18 print_str::str#21 print_str::str#0 ] 
Uplift Scope [mul8u] 346.86: zp[2]:3 [ mul8u::res#2 mul8u::res#6 mul8u::res#1 ] 245.29: zp[2]:5 [ mul8u::mb#2 mul8u::mb#1 ] 202: zp[1]:40 [ mul8u::$1 ] 181.17: zp[1]:2 [ mul8u::a#3 mul8u::a#6 mul8u::a#0 ] 4: zp[2]:24 [ mul8u::return#2 ] 4: zp[2]:30 [ mul8u::return#3 ] 
Uplift Scope [keyboard_matrix_read] 367.33: zp[1]:66 [ keyboard_matrix_read::return#0 ] 202: zp[1]:61 [ keyboard_matrix_read::return#2 ] 
Uplift Scope [keyboard_key_pressed] 202: zp[1]:62 [ keyboard_key_pressed::$2 ] 30.75: zp[1]:63 [ keyboard_key_pressed::return#0 ] 22: zp[1]:36 [ keyboard_key_pressed::return#2 ] 22: zp[1]:38 [ keyboard_key_pressed::return#3 ] 
Uplift Scope [initEntry] 22: zp[2]:45 [ initEntry::$5 ] 22: zp[1]:49 [ initEntry::$9 ] 22: zp[1]:50 [ initEntry::$11 ] 22: zp[1]:51 [ initEntry::$13 ] 22: zp[1]:52 [ initEntry::$15 ] 22: zp[2]:53 [ initEntry::$17 ] 22: zp[1]:55 [ initEntry::$19 ] 22: zp[1]:56 [ initEntry::$21 ] 22: zp[1]:57 [ initEntry::$23 ] 22: zp[1]:58 [ initEntry::$25 ] 11: zp[2]:41 [ initEntry::$1 ] 11: zp[2]:43 [ initEntry::$3 ] 11: zp[2]:47 [ initEntry::$7 ] 10.36: zp[2]:7 [ initEntry::entry#10 initEntry::entry#1 initEntry::entry#0 ] 3.76: zp[1]:9 [ initEntry::n#10 ] 
Uplift Scope [print_uint] 195.67: zp[2]:21 [ print_uint::w#5 print_uint::w#7 print_uint::w#8 print_uint::w#2 print_uint::w#10 print_uint::w#4 ] 
Uplift Scope [main] 22: zp[1]:37 [ main::$20 ] 22: zp[1]:39 [ main::$22 ] 4: zp[2]:26 [ main::fileEntry1_$0 ] 4: zp[2]:32 [ main::fileEntry2_$0 ] 0.32: zp[2]:28 [ main::entry1#0 ] 0.17: zp[2]:34 [ main::entry2#0 ] 
Uplift Scope [printEntry] 9.05: zp[2]:14 [ printEntry::entry#10 printEntry::entry#0 printEntry::entry#1 ] 
Uplift Scope [RADIX] 
Uplift Scope [print_ln] 
Uplift Scope [print_cls] 
Uplift Scope [MOS6526_CIA] 
Uplift Scope [MOS6569_VICII] 
Uplift Scope [MOS6581_SID] 
Uplift Scope [keyboard_init] 

Uplifting [print_char] best 5975 combination reg byte a [ print_char::ch#3 print_char::ch#0 print_char::ch#1 print_char::ch#2 ] 
Uplifting [] best 5975 combination zp[2]:19 [ print_char_cursor#83 print_char_cursor#146 print_char_cursor#1 print_char_cursor#167 print_char_cursor#209 print_char_cursor#210 print_char_cursor#211 print_char_cursor#212 print_char_cursor#213 print_char_cursor#214 print_char_cursor#215 print_char_cursor#216 print_char_cursor#217 print_char_cursor#218 print_char_cursor#219 print_char_cursor#220 print_char_cursor#221 print_char_cursor#222 print_char_cursor#223 print_char_cursor#10 print_char_cursor#227 print_char_cursor#228 print_char_cursor#230 print_char_cursor#231 print_char_cursor#148 ] zp[2]:12 [ print_line_cursor#33 print_line_cursor#65 print_line_cursor#155 print_line_cursor#156 print_line_cursor#157 print_line_cursor#158 print_line_cursor#159 print_line_cursor#160 print_line_cursor#161 print_line_cursor#162 print_line_cursor#163 print_line_cursor#164 print_line_cursor#165 print_line_cursor#166 print_line_cursor#167 print_line_cursor#168 print_line_cursor#169 print_line_cursor#170 print_line_cursor#171 print_line_cursor#173 ] zp[2]:59 [ print_line_cursor#0 ] 
Uplifting [print_uchar] best 5949 combination reg byte a [ print_uchar::$0 ] reg byte x [ print_uchar::$2 ] reg byte x [ print_uchar::b#10 print_uchar::b#6 print_uchar::b#7 print_uchar::b#8 print_uchar::b#9 print_uchar::b#2 print_uchar::b#3 print_uchar::b#4 print_uchar::b#5 print_uchar::b#0 print_uchar::b#1 ] 
Uplifting [memset] best 5949 combination zp[2]:16 [ memset::dst#2 memset::dst#1 ] 
Uplifting [print_str] best 5949 combination zp[2]:10 [ print_str::str#18 print_str::str#21 print_str::str#0 ] 
Uplifting [mul8u] best 5853 combination zp[2]:3 [ mul8u::res#2 mul8u::res#6 mul8u::res#1 ] zp[2]:5 [ mul8u::mb#2 mul8u::mb#1 ] reg byte a [ mul8u::$1 ] reg byte x [ mul8u::a#3 mul8u::a#6 mul8u::a#0 ] zp[2]:24 [ mul8u::return#2 ] zp[2]:30 [ mul8u::return#3 ] 
Uplifting [keyboard_matrix_read] best 5841 combination reg byte a [ keyboard_matrix_read::return#0 ] reg byte a [ keyboard_matrix_read::return#2 ] 
Uplifting [keyboard_key_pressed] best 5652 combination reg byte a [ keyboard_key_pressed::$2 ] reg byte a [ keyboard_key_pressed::return#0 ] reg byte a [ keyboard_key_pressed::return#2 ] reg byte a [ keyboard_key_pressed::return#3 ] 
Limited combination testing to 100 combinations of 256 possible.
Uplifting [initEntry] best 5636 combination zp[2]:45 [ initEntry::$5 ] reg byte a [ initEntry::$9 ] reg byte a [ initEntry::$11 ] reg byte a [ initEntry::$13 ] reg byte a [ initEntry::$15 ] zp[2]:53 [ initEntry::$17 ] zp[1]:55 [ initEntry::$19 ] zp[1]:56 [ initEntry::$21 ] zp[1]:57 [ initEntry::$23 ] zp[1]:58 [ initEntry::$25 ] zp[2]:41 [ initEntry::$1 ] zp[2]:43 [ initEntry::$3 ] zp[2]:47 [ initEntry::$7 ] zp[2]:7 [ initEntry::entry#10 initEntry::entry#1 initEntry::entry#0 ] zp[1]:9 [ initEntry::n#10 ] 
Limited combination testing to 100 combinations of 131072 possible.
Uplifting [print_uint] best 5636 combination zp[2]:21 [ print_uint::w#5 print_uint::w#7 print_uint::w#8 print_uint::w#2 print_uint::w#10 print_uint::w#4 ] 
Uplifting [main] best 5516 combination reg byte a [ main::$20 ] reg byte a [ main::$22 ] zp[2]:26 [ main::fileEntry1_$0 ] zp[2]:32 [ main::fileEntry2_$0 ] zp[2]:28 [ main::entry1#0 ] zp[2]:34 [ main::entry2#0 ] 
Uplifting [printEntry] best 5516 combination zp[2]:14 [ printEntry::entry#10 printEntry::entry#0 printEntry::entry#1 ] 
Uplifting [RADIX] best 5516 combination 
Uplifting [print_ln] best 5516 combination 
Uplifting [print_cls] best 5516 combination 
Uplifting [MOS6526_CIA] best 5516 combination 
Uplifting [MOS6569_VICII] best 5516 combination 
Uplifting [MOS6581_SID] best 5516 combination 
Uplifting [keyboard_init] best 5516 combination 
Attempting to uplift remaining variables inzp[1]:55 [ initEntry::$19 ]
Uplifting [initEntry] best 5512 combination reg byte a [ initEntry::$19 ] 
Attempting to uplift remaining variables inzp[1]:56 [ initEntry::$21 ]
Uplifting [initEntry] best 5508 combination reg byte a [ initEntry::$21 ] 
Attempting to uplift remaining variables inzp[1]:57 [ initEntry::$23 ]
Uplifting [initEntry] best 5504 combination reg byte a [ initEntry::$23 ] 
Attempting to uplift remaining variables inzp[1]:58 [ initEntry::$25 ]
Uplifting [initEntry] best 5500 combination reg byte a [ initEntry::$25 ] 
Attempting to uplift remaining variables inzp[1]:9 [ initEntry::n#10 ]
Uplifting [initEntry] best 5481 combination reg byte x [ initEntry::n#10 ] 
Coalescing zero page register [ zp[2]:3 [ mul8u::res#2 mul8u::res#6 mul8u::res#1 ] ] with [ zp[2]:24 [ mul8u::return#2 ] ] - score: 1
Coalescing zero page register [ zp[2]:3 [ mul8u::res#2 mul8u::res#6 mul8u::res#1 mul8u::return#2 ] ] with [ zp[2]:30 [ mul8u::return#3 ] ] - score: 1
Coalescing zero page register [ zp[2]:14 [ printEntry::entry#10 printEntry::entry#0 printEntry::entry#1 ] ] with [ zp[2]:28 [ main::entry1#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:32 [ main::fileEntry2_$0 ] ] with [ zp[2]:34 [ main::entry2#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:3 [ mul8u::res#2 mul8u::res#6 mul8u::res#1 mul8u::return#2 mul8u::return#3 ] ] with [ zp[2]:26 [ main::fileEntry1_$0 ] ] - score: 1
Coalescing zero page register [ zp[2]:3 [ mul8u::res#2 mul8u::res#6 mul8u::res#1 mul8u::return#2 mul8u::return#3 main::fileEntry1_$0 ] ] with [ zp[2]:32 [ main::fileEntry2_$0 main::entry2#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:7 [ initEntry::entry#10 initEntry::entry#1 initEntry::entry#0 ] ] with [ zp[2]:5 [ mul8u::mb#2 mul8u::mb#1 ] ]
Coalescing zero page register [ zp[2]:12 [ print_line_cursor#33 print_line_cursor#65 print_line_cursor#155 print_line_cursor#156 print_line_cursor#157 print_line_cursor#158 print_line_cursor#159 print_line_cursor#160 print_line_cursor#161 print_line_cursor#162 print_line_cursor#163 print_line_cursor#164 print_line_cursor#165 print_line_cursor#166 print_line_cursor#167 print_line_cursor#168 print_line_cursor#169 print_line_cursor#170 print_line_cursor#171 print_line_cursor#173 ] ] with [ zp[2]:10 [ print_str::str#18 print_str::str#21 print_str::str#0 ] ]
Coalescing zero page register [ zp[2]:19 [ print_char_cursor#83 print_char_cursor#146 print_char_cursor#1 print_char_cursor#167 print_char_cursor#209 print_char_cursor#210 print_char_cursor#211 print_char_cursor#212 print_char_cursor#213 print_char_cursor#214 print_char_cursor#215 print_char_cursor#216 print_char_cursor#217 print_char_cursor#218 print_char_cursor#219 print_char_cursor#220 print_char_cursor#221 print_char_cursor#222 print_char_cursor#223 print_char_cursor#10 print_char_cursor#227 print_char_cursor#228 print_char_cursor#230 print_char_cursor#231 print_char_cursor#148 ] ] with [ zp[2]:16 [ memset::dst#2 memset::dst#1 ] ]
Coalescing zero page register [ zp[2]:41 [ initEntry::$1 ] ] with [ zp[2]:21 [ print_uint::w#5 print_uint::w#7 print_uint::w#8 print_uint::w#2 print_uint::w#10 print_uint::w#4 ] ]
Coalescing zero page register [ zp[2]:59 [ print_line_cursor#0 ] ] with [ zp[2]:43 [ initEntry::$3 ] ]
Coalescing zero page register [ zp[2]:12 [ print_line_cursor#33 print_line_cursor#65 print_line_cursor#155 print_line_cursor#156 print_line_cursor#157 print_line_cursor#158 print_line_cursor#159 print_line_cursor#160 print_line_cursor#161 print_line_cursor#162 print_line_cursor#163 print_line_cursor#164 print_line_cursor#165 print_line_cursor#166 print_line_cursor#167 print_line_cursor#168 print_line_cursor#169 print_line_cursor#170 print_line_cursor#171 print_line_cursor#173 print_str::str#18 print_str::str#21 print_str::str#0 ] ] with [ zp[2]:7 [ initEntry::entry#10 initEntry::entry#1 initEntry::entry#0 mul8u::mb#2 mul8u::mb#1 ] ]
Coalescing zero page register [ zp[2]:45 [ initEntry::$5 ] ] with [ zp[2]:19 [ print_char_cursor#83 print_char_cursor#146 print_char_cursor#1 print_char_cursor#167 print_char_cursor#209 print_char_cursor#210 print_char_cursor#211 print_char_cursor#212 print_char_cursor#213 print_char_cursor#214 print_char_cursor#215 print_char_cursor#216 print_char_cursor#217 print_char_cursor#218 print_char_cursor#219 print_char_cursor#220 print_char_cursor#221 print_char_cursor#222 print_char_cursor#223 print_char_cursor#10 print_char_cursor#227 print_char_cursor#228 print_char_cursor#230 print_char_cursor#231 print_char_cursor#148 memset::dst#2 memset::dst#1 ] ]
Allocated (was zp[2]:3) zp[2]:2 [ mul8u::res#2 mul8u::res#6 mul8u::res#1 mul8u::return#2 mul8u::return#3 main::fileEntry1_$0 main::fileEntry2_$0 main::entry2#0 ]
Allocated (was zp[2]:12) zp[2]:4 [ print_line_cursor#33 print_line_cursor#65 print_line_cursor#155 print_line_cursor#156 print_line_cursor#157 print_line_cursor#158 print_line_cursor#159 print_line_cursor#160 print_line_cursor#161 print_line_cursor#162 print_line_cursor#163 print_line_cursor#164 print_line_cursor#165 print_line_cursor#166 print_line_cursor#167 print_line_cursor#168 print_line_cursor#169 print_line_cursor#170 print_line_cursor#171 print_line_cursor#173 print_str::str#18 print_str::str#21 print_str::str#0 initEntry::entry#10 initEntry::entry#1 initEntry::entry#0 mul8u::mb#2 mul8u::mb#1 ]
Allocated (was zp[2]:14) zp[2]:6 [ printEntry::entry#10 printEntry::entry#0 printEntry::entry#1 main::entry1#0 ]
Allocated (was zp[2]:41) zp[2]:8 [ initEntry::$1 print_uint::w#5 print_uint::w#7 print_uint::w#8 print_uint::w#2 print_uint::w#10 print_uint::w#4 ]
Allocated (was zp[2]:45) zp[2]:10 [ initEntry::$5 print_char_cursor#83 print_char_cursor#146 print_char_cursor#1 print_char_cursor#167 print_char_cursor#209 print_char_cursor#210 print_char_cursor#211 print_char_cursor#212 print_char_cursor#213 print_char_cursor#214 print_char_cursor#215 print_char_cursor#216 print_char_cursor#217 print_char_cursor#218 print_char_cursor#219 print_char_cursor#220 print_char_cursor#221 print_char_cursor#222 print_char_cursor#223 print_char_cursor#10 print_char_cursor#227 print_char_cursor#228 print_char_cursor#230 print_char_cursor#231 print_char_cursor#148 memset::dst#2 memset::dst#1 ]
Allocated (was zp[2]:47) zp[2]:12 [ initEntry::$7 ]
Allocated (was zp[2]:53) zp[2]:14 [ initEntry::$17 ]
Allocated (was zp[2]:59) zp[2]:16 [ print_line_cursor#0 initEntry::$3 ]

ASSEMBLER BEFORE OPTIMIZATION
  // File Comments
// Implementing a semi-struct without the struct keyword by using pointer math and inline functions
//
// struct fileentry {
//    BYTE *bufDisk; // file position in disk buffer.
//    BYTE *bufEdit; // file edits
//    WORD tsLen; // num of sectors
//    TS *tsOrder;
//    BYTE tLastLink;
//    BYTE sLastLink;
//    BYTE bFlag;
//    BYTE bError;
//    WORD uCross; // num of crosslinked sectors
//    BYTE bAddrLo; // start address
//    BYTE bAddrHi;
//    BYTE tHi; // highest track
//    BYTE tLo; // lowest track
//    };
//    typedef struct fileentry ENTRY;
//    ENTRY files[MAX_FILES];
  // Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
  // Global Constants & labels
  .const KEY_SPACE = $3c
  // The size of a file ENTRY
  .const SIZEOF_ENTRY = $12
  // The maximal number of files
  .const MAX_FILES = $90
  .const OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR = 2
  .const OFFSET_STRUCT_MOS6526_CIA_PORT_B_DDR = 3
  .const OFFSET_STRUCT_MOS6526_CIA_PORT_B = 1
  // The CIA#1: keyboard matrix, joystick #1/#2
  .label CIA1 = $dc00
  .label print_screen = $400
  .label print_char_cursor = $a
  .label print_line_cursor = $10
  .label print_line_cursor_1 = 4
  // main
// Initialize 2 file entries and print them
main: {
    .const fileEntry1_idx = 1
    .const fileEntry2_idx = 2
    .label fileEntry1___0 = 2
    .label fileEntry2___0 = 2
    .label entry1 = 6
    .label entry2 = 2
    // [1] call keyboard_init 
    jsr keyboard_init
    // [2] phi from main to main::fileEntry1 [phi:main->main::fileEntry1]
  fileEntry1_from_main:
    jmp fileEntry1
    // main::fileEntry1
  fileEntry1:
    // [3] call mul8u 
    // [64] phi from main::fileEntry1 to mul8u [phi:main::fileEntry1->mul8u]
  mul8u_from_fileEntry1:
    // [64] phi mul8u::a#6 = main::fileEntry1_idx#0 [phi:main::fileEntry1->mul8u#0] -- vbuxx=vbuc1 
    ldx #fileEntry1_idx
    jsr mul8u
    // [4] mul8u::return#2 = mul8u::res#2
    jmp __b6
    // main::@6
  __b6:
    // [5] main::fileEntry1_$0 = mul8u::return#2
    // [6] main::entry1#0 = files + main::fileEntry1_$0 -- pbuz1=pbuc1_plus_vwuz2 
    clc
    lda.z fileEntry1___0
    adc #<files
    sta.z entry1
    lda.z fileEntry1___0+1
    adc #>files
    sta.z entry1+1
    // [7] phi from main::@6 to main::fileEntry2 [phi:main::@6->main::fileEntry2]
  fileEntry2_from___b6:
    jmp fileEntry2
    // main::fileEntry2
  fileEntry2:
    // [8] call mul8u 
    // [64] phi from main::fileEntry2 to mul8u [phi:main::fileEntry2->mul8u]
  mul8u_from_fileEntry2:
    // [64] phi mul8u::a#6 = main::fileEntry2_idx#0 [phi:main::fileEntry2->mul8u#0] -- vbuxx=vbuc1 
    ldx #fileEntry2_idx
    jsr mul8u
    // [9] mul8u::return#3 = mul8u::res#2
    jmp __b7
    // main::@7
  __b7:
    // [10] main::fileEntry2_$0 = mul8u::return#3
    // [11] main::entry2#0 = files + main::fileEntry2_$0 -- pbuz1=pbuc1_plus_vwuz1 
    clc
    lda.z entry2
    adc #<files
    sta.z entry2
    lda.z entry2+1
    adc #>files
    sta.z entry2+1
    jmp __b5
    // main::@5
  __b5:
    // [12] initEntry::entry#0 = main::entry1#0 -- pbuz1=pbuz2 
    lda.z entry1
    sta.z initEntry.entry
    lda.z entry1+1
    sta.z initEntry.entry+1
    // [13] call initEntry 
    // [74] phi from main::@5 to initEntry [phi:main::@5->initEntry]
  initEntry_from___b5:
    // [74] phi initEntry::n#10 = 0 [phi:main::@5->initEntry#0] -- vbuxx=vbuc1 
    ldx #0
    // [74] phi initEntry::entry#10 = initEntry::entry#0 [phi:main::@5->initEntry#1] -- register_copy 
    jsr initEntry
    jmp __b8
    // main::@8
  __b8:
    // [14] initEntry::entry#1 = main::entry2#0 -- pbuz1=pbuz2 
    lda.z entry2
    sta.z initEntry.entry
    lda.z entry2+1
    sta.z initEntry.entry+1
    // [15] call initEntry 
    // [74] phi from main::@8 to initEntry [phi:main::@8->initEntry]
  initEntry_from___b8:
    // [74] phi initEntry::n#10 = $11 [phi:main::@8->initEntry#0] -- vbuxx=vbuc1 
    ldx #$11
    // [74] phi initEntry::entry#10 = initEntry::entry#1 [phi:main::@8->initEntry#1] -- register_copy 
    jsr initEntry
    // [16] phi from main::@8 to main::@9 [phi:main::@8->main::@9]
  __b9_from___b8:
    jmp __b9
    // main::@9
  __b9:
    // [17] call print_cls 
    // [115] phi from main::@9 to print_cls [phi:main::@9->print_cls]
  print_cls_from___b9:
    jsr print_cls
    // [18] phi from main::@9 to main::@10 [phi:main::@9->main::@10]
  __b10_from___b9:
    jmp __b10
    // main::@10
  __b10:
    // [19] call print_str 
    // [118] phi from main::@10 to print_str [phi:main::@10->print_str]
  print_str_from___b10:
    // [118] phi print_char_cursor#167 = print_screen#0 [phi:main::@10->print_str#0] -- pbuz1=pbuc1 
    lda #<print_screen
    sta.z print_char_cursor
    lda #>print_screen
    sta.z print_char_cursor+1
    // [118] phi print_str::str#21 = main::str [phi:main::@10->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    // [20] phi from main::@10 to main::@11 [phi:main::@10->main::@11]
  __b11_from___b10:
    jmp __b11
    // main::@11
  __b11:
    // [21] call print_ln 
    // [125] phi from main::@11 to print_ln [phi:main::@11->print_ln]
  print_ln_from___b11:
    // [125] phi print_char_cursor#146 = print_char_cursor#1 [phi:main::@11->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_screen#0 [phi:main::@11->print_ln#1] -- pbuz1=pbuc1 
    lda #<print_screen
    sta.z print_line_cursor_1
    lda #>print_screen
    sta.z print_line_cursor_1+1
    jsr print_ln
    jmp __b12
    // main::@12
  __b12:
    // [22] print_line_cursor#155 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [23] print_char_cursor#227 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [24] call print_ln 
    // [125] phi from main::@12 to print_ln [phi:main::@12->print_ln]
  print_ln_from___b12:
    // [125] phi print_char_cursor#146 = print_char_cursor#227 [phi:main::@12->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#155 [phi:main::@12->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b13
    // main::@13
  __b13:
    // [25] printEntry::entry#0 = main::entry1#0
    // [26] call printEntry 
    // [131] phi from main::@13 to printEntry [phi:main::@13->printEntry]
  printEntry_from___b13:
    // [131] phi printEntry::entry#10 = printEntry::entry#0 [phi:main::@13->printEntry#0] -- register_copy 
    jsr printEntry
    jmp __b14
    // main::@14
  __b14:
    // [27] print_line_cursor#156 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [28] print_char_cursor#228 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [29] call print_ln 
    // [125] phi from main::@14 to print_ln [phi:main::@14->print_ln]
  print_ln_from___b14:
    // [125] phi print_char_cursor#146 = print_char_cursor#228 [phi:main::@14->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#156 [phi:main::@14->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b15
    // main::@15
  __b15:
    // [30] print_char_cursor#209 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [31] call print_str 
    // [118] phi from main::@15 to print_str [phi:main::@15->print_str]
  print_str_from___b15:
    // [118] phi print_char_cursor#167 = print_char_cursor#209 [phi:main::@15->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = main::str1 [phi:main::@15->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    // [32] phi from main::@15 main::@16 to main::@1 [phi:main::@15/main::@16->main::@1]
  __b1_from___b15:
  __b1_from___b16:
    jmp __b1
    // main::@1
  __b1:
    // [33] call keyboard_key_pressed 
    // [224] phi from main::@1 to keyboard_key_pressed [phi:main::@1->keyboard_key_pressed]
  keyboard_key_pressed_from___b1:
    jsr keyboard_key_pressed
    // [34] keyboard_key_pressed::return#2 = keyboard_key_pressed::return#0
    jmp __b16
    // main::@16
  __b16:
    // [35] main::$20 = keyboard_key_pressed::return#2
    // [36] if(main::$20==0) goto main::@1 -- vbuaa_eq_0_then_la1 
    cmp #0
    beq __b1_from___b16
    // [37] phi from main::@16 to main::@2 [phi:main::@16->main::@2]
  __b2_from___b16:
    jmp __b2
    // main::@2
  __b2:
    // [38] call print_cls 
    // [115] phi from main::@2 to print_cls [phi:main::@2->print_cls]
  print_cls_from___b2:
    jsr print_cls
    // [39] phi from main::@2 to main::@17 [phi:main::@2->main::@17]
  __b17_from___b2:
    jmp __b17
    // main::@17
  __b17:
    // [40] call print_str 
    // [118] phi from main::@17 to print_str [phi:main::@17->print_str]
  print_str_from___b17:
    // [118] phi print_char_cursor#167 = print_screen#0 [phi:main::@17->print_str#0] -- pbuz1=pbuc1 
    lda #<print_screen
    sta.z print_char_cursor
    lda #>print_screen
    sta.z print_char_cursor+1
    // [118] phi print_str::str#21 = main::str2 [phi:main::@17->print_str#1] -- pbuz1=pbuc1 
    lda #<str2
    sta.z print_str.str
    lda #>str2
    sta.z print_str.str+1
    jsr print_str
    // [41] phi from main::@17 to main::@18 [phi:main::@17->main::@18]
  __b18_from___b17:
    jmp __b18
    // main::@18
  __b18:
    // [42] call print_ln 
    // [125] phi from main::@18 to print_ln [phi:main::@18->print_ln]
  print_ln_from___b18:
    // [125] phi print_char_cursor#146 = print_char_cursor#1 [phi:main::@18->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_screen#0 [phi:main::@18->print_ln#1] -- pbuz1=pbuc1 
    lda #<print_screen
    sta.z print_line_cursor_1
    lda #>print_screen
    sta.z print_line_cursor_1+1
    jsr print_ln
    jmp __b19
    // main::@19
  __b19:
    // [43] print_line_cursor#157 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [44] print_char_cursor#230 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [45] call print_ln 
    // [125] phi from main::@19 to print_ln [phi:main::@19->print_ln]
  print_ln_from___b19:
    // [125] phi print_char_cursor#146 = print_char_cursor#230 [phi:main::@19->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#157 [phi:main::@19->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b20
    // main::@20
  __b20:
    // [46] printEntry::entry#1 = main::entry2#0 -- pbuz1=pbuz2 
    lda.z entry2
    sta.z printEntry.entry
    lda.z entry2+1
    sta.z printEntry.entry+1
    // [47] call printEntry 
    // [131] phi from main::@20 to printEntry [phi:main::@20->printEntry]
  printEntry_from___b20:
    // [131] phi printEntry::entry#10 = printEntry::entry#1 [phi:main::@20->printEntry#0] -- register_copy 
    jsr printEntry
    jmp __b21
    // main::@21
  __b21:
    // [48] print_line_cursor#158 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [49] print_char_cursor#231 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [50] call print_ln 
    // [125] phi from main::@21 to print_ln [phi:main::@21->print_ln]
  print_ln_from___b21:
    // [125] phi print_char_cursor#146 = print_char_cursor#231 [phi:main::@21->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#158 [phi:main::@21->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b22
    // main::@22
  __b22:
    // [51] print_char_cursor#210 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [52] call print_str 
    // [118] phi from main::@22 to print_str [phi:main::@22->print_str]
  print_str_from___b22:
    // [118] phi print_char_cursor#167 = print_char_cursor#210 [phi:main::@22->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = main::str1 [phi:main::@22->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    // [53] phi from main::@22 main::@23 to main::@3 [phi:main::@22/main::@23->main::@3]
  __b3_from___b22:
  __b3_from___b23:
    jmp __b3
    // main::@3
  __b3:
    // [54] call keyboard_key_pressed 
    // [224] phi from main::@3 to keyboard_key_pressed [phi:main::@3->keyboard_key_pressed]
  keyboard_key_pressed_from___b3:
    jsr keyboard_key_pressed
    // [55] keyboard_key_pressed::return#3 = keyboard_key_pressed::return#0
    jmp __b23
    // main::@23
  __b23:
    // [56] main::$22 = keyboard_key_pressed::return#3
    // [57] if(main::$22==0) goto main::@3 -- vbuaa_eq_0_then_la1 
    cmp #0
    beq __b3_from___b23
    // [58] phi from main::@23 to main::@4 [phi:main::@23->main::@4]
  __b4_from___b23:
    jmp __b4
    // main::@4
  __b4:
    // [59] call print_cls 
    // [115] phi from main::@4 to print_cls [phi:main::@4->print_cls]
  print_cls_from___b4:
    jsr print_cls
    jmp __breturn
    // main::@return
  __breturn:
    // [60] return 
    rts
    str: .text "** entry 1 **"
    .byte 0
    str1: .text "- press space -"
    .byte 0
    str2: .text "** entry 2 **"
    .byte 0
}
  // keyboard_init
// Initialize keyboard reading by setting CIA#$ Data Direction Registers
keyboard_init: {
    // [61] *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR) = $ff -- _deref_pbuc1=vbuc2 
    // Keyboard Matrix Columns Write Mode
    lda #$ff
    sta CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR
    // [62] *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_B_DDR) = 0 -- _deref_pbuc1=vbuc2 
    // Keyboard Matrix Columns Read Mode
    lda #0
    sta CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_B_DDR
    jmp __breturn
    // keyboard_init::@return
  __breturn:
    // [63] return 
    rts
}
  // mul8u
// Perform binary multiplication of two unsigned 8-bit chars into a 16-bit unsigned int
// mul8u(byte register(X) a)
mul8u: {
    .label mb = 4
    .label res = 2
    .label return = 2
    // [65] phi from mul8u to mul8u::@1 [phi:mul8u->mul8u::@1]
  __b1_from_mul8u:
    // [65] phi mul8u::mb#2 = (word)SIZEOF_ENTRY [phi:mul8u->mul8u::@1#0] -- vwuz1=vwuc1 
    lda #<SIZEOF_ENTRY
    sta.z mb
    lda #>SIZEOF_ENTRY
    sta.z mb+1
    // [65] phi mul8u::res#2 = 0 [phi:mul8u->mul8u::@1#1] -- vwuz1=vwuc1 
    lda #<0
    sta.z res
    lda #>0
    sta.z res+1
    // [65] phi mul8u::a#3 = mul8u::a#6 [phi:mul8u->mul8u::@1#2] -- register_copy 
    jmp __b1
    // mul8u::@1
  __b1:
    // [66] if(mul8u::a#3!=0) goto mul8u::@2 -- vbuxx_neq_0_then_la1 
    cpx #0
    bne __b2
    jmp __breturn
    // mul8u::@return
  __breturn:
    // [67] return 
    rts
    // mul8u::@2
  __b2:
    // [68] mul8u::$1 = mul8u::a#3 & 1 -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #1
    // [69] if(mul8u::$1==0) goto mul8u::@3 -- vbuaa_eq_0_then_la1 
    cmp #0
    beq __b3_from___b2
    jmp __b4
    // mul8u::@4
  __b4:
    // [70] mul8u::res#1 = mul8u::res#2 + mul8u::mb#2 -- vwuz1=vwuz1_plus_vwuz2 
    lda.z res
    clc
    adc.z mb
    sta.z res
    lda.z res+1
    adc.z mb+1
    sta.z res+1
    // [71] phi from mul8u::@2 mul8u::@4 to mul8u::@3 [phi:mul8u::@2/mul8u::@4->mul8u::@3]
  __b3_from___b2:
  __b3_from___b4:
    // [71] phi mul8u::res#6 = mul8u::res#2 [phi:mul8u::@2/mul8u::@4->mul8u::@3#0] -- register_copy 
    jmp __b3
    // mul8u::@3
  __b3:
    // [72] mul8u::a#0 = mul8u::a#3 >> 1 -- vbuxx=vbuxx_ror_1 
    txa
    lsr
    tax
    // [73] mul8u::mb#1 = mul8u::mb#2 << 1 -- vwuz1=vwuz1_rol_1 
    asl.z mb
    rol.z mb+1
    // [65] phi from mul8u::@3 to mul8u::@1 [phi:mul8u::@3->mul8u::@1]
  __b1_from___b3:
    // [65] phi mul8u::mb#2 = mul8u::mb#1 [phi:mul8u::@3->mul8u::@1#0] -- register_copy 
    // [65] phi mul8u::res#2 = mul8u::res#6 [phi:mul8u::@3->mul8u::@1#1] -- register_copy 
    // [65] phi mul8u::a#3 = mul8u::a#0 [phi:mul8u::@3->mul8u::@1#2] -- register_copy 
    jmp __b1
}
  // initEntry
// Set all values in the passed struct
// Sets the values to n, n+1, n... to help test that everything works as intended
// initEntry(byte* zp(4) entry, byte register(X) n)
initEntry: {
    .label __1 = 8
    .label __3 = $10
    .label __5 = $a
    .label __7 = $c
    .label __17 = $e
    .label entry = 4
    // [75] phi from initEntry to initEntry::entryBufDisk1 [phi:initEntry->initEntry::entryBufDisk1]
  entryBufDisk1_from_initEntry:
    jmp entryBufDisk1
    // initEntry::entryBufDisk1
  entryBufDisk1:
    jmp __b1
    // initEntry::@1
  __b1:
    // [76] initEntry::$1 = $1111 + initEntry::n#10 -- vwuz1=vwuc1_plus_vbuxx 
    txa
    clc
    adc #<$1111
    sta.z __1
    lda #>$1111
    adc #0
    sta.z __1+1
    // [77] *((byte**)initEntry::entry#10) = (byte*)initEntry::$1 -- _deref_qbuz1=pbuz2 
    ldy #0
    lda.z __1
    sta (entry),y
    iny
    lda.z __1+1
    sta (entry),y
    // [78] phi from initEntry::@1 to initEntry::entryBufEdit1 [phi:initEntry::@1->initEntry::entryBufEdit1]
  entryBufEdit1_from___b1:
    jmp entryBufEdit1
    // initEntry::entryBufEdit1
  entryBufEdit1:
    jmp __b2
    // initEntry::@2
  __b2:
    // [79] initEntry::$3 = $2222 + initEntry::n#10 -- vwuz1=vwuc1_plus_vbuxx 
    txa
    clc
    adc #<$2222
    sta.z __3
    lda #>$2222
    adc #0
    sta.z __3+1
    // [80] ((byte**)initEntry::entry#10)[2] = (byte*)initEntry::$3 -- qbuz1_derefidx_vbuc1=pbuz2 
    ldy #2
    lda.z __3
    sta (entry),y
    iny
    lda.z __3+1
    sta (entry),y
    // [81] phi from initEntry::@2 to initEntry::entryTsLen1 [phi:initEntry::@2->initEntry::entryTsLen1]
  entryTsLen1_from___b2:
    jmp entryTsLen1
    // initEntry::entryTsLen1
  entryTsLen1:
    jmp __b3
    // initEntry::@3
  __b3:
    // [82] initEntry::$5 = $3333 + initEntry::n#10 -- vwuz1=vwuc1_plus_vbuxx 
    txa
    clc
    adc #<$3333
    sta.z __5
    lda #>$3333
    adc #0
    sta.z __5+1
    // [83] ((word*)initEntry::entry#10)[4] = initEntry::$5 -- pwuz1_derefidx_vbuc1=vwuz2 
    ldy #4
    lda.z __5
    sta (entry),y
    iny
    lda.z __5+1
    sta (entry),y
    // [84] phi from initEntry::@3 to initEntry::entryTsOrder1 [phi:initEntry::@3->initEntry::entryTsOrder1]
  entryTsOrder1_from___b3:
    jmp entryTsOrder1
    // initEntry::entryTsOrder1
  entryTsOrder1:
    jmp __b4
    // initEntry::@4
  __b4:
    // [85] initEntry::$7 = $4444 + initEntry::n#10 -- vwuz1=vwuc1_plus_vbuxx 
    txa
    clc
    adc #<$4444
    sta.z __7
    lda #>$4444
    adc #0
    sta.z __7+1
    // [86] ((word**)initEntry::entry#10)[6] = (word*)initEntry::$7 -- qwuz1_derefidx_vbuc1=pwuz2 
    ldy #6
    lda.z __7
    sta (entry),y
    iny
    lda.z __7+1
    sta (entry),y
    // [87] phi from initEntry::@4 to initEntry::entryTLastLink1 [phi:initEntry::@4->initEntry::entryTLastLink1]
  entryTLastLink1_from___b4:
    jmp entryTLastLink1
    // initEntry::entryTLastLink1
  entryTLastLink1:
    jmp __b5
    // initEntry::@5
  __b5:
    // [88] initEntry::$9 = $55 + initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$55
    // [89] initEntry::entry#10[8] = initEntry::$9 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #8
    sta (entry),y
    // [90] phi from initEntry::@5 to initEntry::entrySLastLink1 [phi:initEntry::@5->initEntry::entrySLastLink1]
  entrySLastLink1_from___b5:
    jmp entrySLastLink1
    // initEntry::entrySLastLink1
  entrySLastLink1:
    jmp __b6
    // initEntry::@6
  __b6:
    // [91] initEntry::$11 = $66 + initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$66
    // [92] initEntry::entry#10[9] = initEntry::$11 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #9
    sta (entry),y
    // [93] phi from initEntry::@6 to initEntry::entryBFlag1 [phi:initEntry::@6->initEntry::entryBFlag1]
  entryBFlag1_from___b6:
    jmp entryBFlag1
    // initEntry::entryBFlag1
  entryBFlag1:
    jmp __b7
    // initEntry::@7
  __b7:
    // [94] initEntry::$13 = $77 + initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$77
    // [95] initEntry::entry#10[$a] = initEntry::$13 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #$a
    sta (entry),y
    // [96] phi from initEntry::@7 to initEntry::entryBError1 [phi:initEntry::@7->initEntry::entryBError1]
  entryBError1_from___b7:
    jmp entryBError1
    // initEntry::entryBError1
  entryBError1:
    jmp __b8
    // initEntry::@8
  __b8:
    // [97] initEntry::$15 = $88 + initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$88
    // [98] initEntry::entry#10[$b] = initEntry::$15 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #$b
    sta (entry),y
    // [99] phi from initEntry::@8 to initEntry::entryUCross1 [phi:initEntry::@8->initEntry::entryUCross1]
  entryUCross1_from___b8:
    jmp entryUCross1
    // initEntry::entryUCross1
  entryUCross1:
    jmp __b9
    // initEntry::@9
  __b9:
    // [100] initEntry::$17 = $9999 + initEntry::n#10 -- vwuz1=vwuc1_plus_vbuxx 
    txa
    clc
    adc #<$9999
    sta.z __17
    lda #>$9999
    adc #0
    sta.z __17+1
    // [101] ((word*)initEntry::entry#10)[$c] = initEntry::$17 -- pwuz1_derefidx_vbuc1=vwuz2 
    ldy #$c
    lda.z __17
    sta (entry),y
    iny
    lda.z __17+1
    sta (entry),y
    // [102] phi from initEntry::@9 to initEntry::entryBAddrLo1 [phi:initEntry::@9->initEntry::entryBAddrLo1]
  entryBAddrLo1_from___b9:
    jmp entryBAddrLo1
    // initEntry::entryBAddrLo1
  entryBAddrLo1:
    jmp __b10
    // initEntry::@10
  __b10:
    // [103] initEntry::$19 = $aa + initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$aa
    // [104] initEntry::entry#10[$e] = initEntry::$19 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #$e
    sta (entry),y
    // [105] phi from initEntry::@10 to initEntry::entryBAddrHi1 [phi:initEntry::@10->initEntry::entryBAddrHi1]
  entryBAddrHi1_from___b10:
    jmp entryBAddrHi1
    // initEntry::entryBAddrHi1
  entryBAddrHi1:
    jmp __b11
    // initEntry::@11
  __b11:
    // [106] initEntry::$21 = $bb + initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$bb
    // [107] initEntry::entry#10[$f] = initEntry::$21 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #$f
    sta (entry),y
    // [108] phi from initEntry::@11 to initEntry::entryTHi1 [phi:initEntry::@11->initEntry::entryTHi1]
  entryTHi1_from___b11:
    jmp entryTHi1
    // initEntry::entryTHi1
  entryTHi1:
    jmp __b12
    // initEntry::@12
  __b12:
    // [109] initEntry::$23 = $cc + initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$cc
    // [110] initEntry::entry#10[$10] = initEntry::$23 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #$10
    sta (entry),y
    // [111] phi from initEntry::@12 to initEntry::entryTLo1 [phi:initEntry::@12->initEntry::entryTLo1]
  entryTLo1_from___b12:
    jmp entryTLo1
    // initEntry::entryTLo1
  entryTLo1:
    jmp __b13
    // initEntry::@13
  __b13:
    // [112] initEntry::$25 = $dd + initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$dd
    // [113] initEntry::entry#10[$11] = initEntry::$25 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #$11
    sta (entry),y
    jmp __breturn
    // initEntry::@return
  __breturn:
    // [114] return 
    rts
}
  // print_cls
// Clear the screen. Also resets current line/char cursor.
print_cls: {
    // [116] call memset 
    // [230] phi from print_cls to memset [phi:print_cls->memset]
  memset_from_print_cls:
    jsr memset
    jmp __breturn
    // print_cls::@return
  __breturn:
    // [117] return 
    rts
}
  // print_str
// Print a zero-terminated string
// print_str(byte* zp(4) str)
print_str: {
    .label str = 4
    // [119] phi from print_str print_str::@3 to print_str::@1 [phi:print_str/print_str::@3->print_str::@1]
  __b1_from_print_str:
  __b1_from___b3:
    // [119] phi print_char_cursor#1 = print_char_cursor#167 [phi:print_str/print_str::@3->print_str::@1#0] -- register_copy 
    // [119] phi print_str::str#18 = print_str::str#21 [phi:print_str/print_str::@3->print_str::@1#1] -- register_copy 
    jmp __b1
    // print_str::@1
  __b1:
    // [120] if(0!=*print_str::str#18) goto print_str::@2 -- vbuc1_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (str),y
    cmp #0
    bne __b2
    jmp __breturn
    // print_str::@return
  __breturn:
    // [121] return 
    rts
    // print_str::@2
  __b2:
    // [122] print_char::ch#0 = *print_str::str#18 -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (str),y
    // [123] call print_char 
    // [236] phi from print_str::@2 to print_char [phi:print_str::@2->print_char]
  print_char_from___b2:
    // [236] phi print_char_cursor#83 = print_char_cursor#1 [phi:print_str::@2->print_char#0] -- register_copy 
    // [236] phi print_char::ch#3 = print_char::ch#0 [phi:print_str::@2->print_char#1] -- register_copy 
    jsr print_char
    jmp __b3
    // print_str::@3
  __b3:
    // [124] print_str::str#0 = ++ print_str::str#18 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    jmp __b1_from___b3
}
  // print_ln
// Print a newline
print_ln: {
    // [126] phi from print_ln print_ln::@2 to print_ln::@1 [phi:print_ln/print_ln::@2->print_ln::@1]
  __b1_from_print_ln:
  __b1_from___b2:
    // [126] phi print_line_cursor#33 = print_line_cursor#65 [phi:print_ln/print_ln::@2->print_ln::@1#0] -- register_copy 
    jmp __b1
    // print_ln::@1
  __b1:
    // [127] print_line_cursor#0 = print_line_cursor#33 + $28 -- pbuz1=pbuz2_plus_vbuc1 
    lda #$28
    clc
    adc.z print_line_cursor_1
    sta.z print_line_cursor
    lda #0
    adc.z print_line_cursor_1+1
    sta.z print_line_cursor+1
    // [128] if(print_line_cursor#0<print_char_cursor#146) goto print_ln::@2 -- pbuz1_lt_pbuz2_then_la1 
    lda.z print_line_cursor+1
    cmp.z print_char_cursor+1
    bcc __b2
    bne !+
    lda.z print_line_cursor
    cmp.z print_char_cursor
    bcc __b2
  !:
    jmp __breturn
    // print_ln::@return
  __breturn:
    // [129] return 
    rts
    // print_ln::@2
  __b2:
    // [130] print_line_cursor#173 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    jmp __b1_from___b2
}
  // printEntry
// Print the contents of a file entry
// printEntry(byte* zp(6) entry)
printEntry: {
    .label entry = 6
    // [132] print_char_cursor#211 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [133] call print_str 
    // [118] phi from printEntry to print_str [phi:printEntry->print_str]
  print_str_from_printEntry:
    // [118] phi print_char_cursor#167 = print_char_cursor#211 [phi:printEntry->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str [phi:printEntry->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    // [134] phi from printEntry to printEntry::entryBufDisk1 [phi:printEntry->printEntry::entryBufDisk1]
  entryBufDisk1_from_printEntry:
    jmp entryBufDisk1
    // printEntry::entryBufDisk1
  entryBufDisk1:
    jmp __b1
    // printEntry::@1
  __b1:
    // [135] print_uint::w#7 = (word)*((byte**)printEntry::entry#10) -- vwuz1=_deref_pwuz2 
    ldy #0
    lda (entry),y
    sta.z print_uint.w
    iny
    lda (entry),y
    sta.z print_uint.w+1
    // [136] call print_uint 
    // [240] phi from printEntry::@1 to print_uint [phi:printEntry::@1->print_uint]
  print_uint_from___b1:
    // [240] phi print_uint::w#5 = print_uint::w#7 [phi:printEntry::@1->print_uint#0] -- register_copy 
    jsr print_uint
    jmp __b14
    // printEntry::@14
  __b14:
    // [137] print_line_cursor#159 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [138] call print_ln 
    // [125] phi from printEntry::@14 to print_ln [phi:printEntry::@14->print_ln]
  print_ln_from___b14:
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@14->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#159 [phi:printEntry::@14->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b15
    // printEntry::@15
  __b15:
    // [139] print_char_cursor#212 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [140] call print_str 
    // [118] phi from printEntry::@15 to print_str [phi:printEntry::@15->print_str]
  print_str_from___b15:
    // [118] phi print_char_cursor#167 = print_char_cursor#212 [phi:printEntry::@15->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str1 [phi:printEntry::@15->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    // [141] phi from printEntry::@15 to printEntry::entryBufEdit1 [phi:printEntry::@15->printEntry::entryBufEdit1]
  entryBufEdit1_from___b15:
    jmp entryBufEdit1
    // printEntry::entryBufEdit1
  entryBufEdit1:
    jmp __b2
    // printEntry::@2
  __b2:
    // [142] print_uint::w#8 = (word)((byte**)printEntry::entry#10)[2] -- vwuz1=pwuz2_derefidx_vbuc1 
    ldy #2
    lda (entry),y
    sta.z print_uint.w
    iny
    lda (entry),y
    sta.z print_uint.w+1
    // [143] call print_uint 
    // [240] phi from printEntry::@2 to print_uint [phi:printEntry::@2->print_uint]
  print_uint_from___b2:
    // [240] phi print_uint::w#5 = print_uint::w#8 [phi:printEntry::@2->print_uint#0] -- register_copy 
    jsr print_uint
    jmp __b16
    // printEntry::@16
  __b16:
    // [144] print_line_cursor#160 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [145] call print_ln 
    // [125] phi from printEntry::@16 to print_ln [phi:printEntry::@16->print_ln]
  print_ln_from___b16:
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@16->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#160 [phi:printEntry::@16->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b17
    // printEntry::@17
  __b17:
    // [146] print_char_cursor#213 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [147] call print_str 
    // [118] phi from printEntry::@17 to print_str [phi:printEntry::@17->print_str]
  print_str_from___b17:
    // [118] phi print_char_cursor#167 = print_char_cursor#213 [phi:printEntry::@17->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str2 [phi:printEntry::@17->print_str#1] -- pbuz1=pbuc1 
    lda #<str2
    sta.z print_str.str
    lda #>str2
    sta.z print_str.str+1
    jsr print_str
    // [148] phi from printEntry::@17 to printEntry::entryTsLen1 [phi:printEntry::@17->printEntry::entryTsLen1]
  entryTsLen1_from___b17:
    jmp entryTsLen1
    // printEntry::entryTsLen1
  entryTsLen1:
    jmp __b3
    // printEntry::@3
  __b3:
    // [149] print_uint::w#2 = ((word*)printEntry::entry#10)[4] -- vwuz1=pwuz2_derefidx_vbuc1 
    ldy #4
    lda (entry),y
    sta.z print_uint.w
    iny
    lda (entry),y
    sta.z print_uint.w+1
    // [150] call print_uint 
    // [240] phi from printEntry::@3 to print_uint [phi:printEntry::@3->print_uint]
  print_uint_from___b3:
    // [240] phi print_uint::w#5 = print_uint::w#2 [phi:printEntry::@3->print_uint#0] -- register_copy 
    jsr print_uint
    jmp __b18
    // printEntry::@18
  __b18:
    // [151] print_line_cursor#161 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [152] call print_ln 
    // [125] phi from printEntry::@18 to print_ln [phi:printEntry::@18->print_ln]
  print_ln_from___b18:
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@18->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#161 [phi:printEntry::@18->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b19
    // printEntry::@19
  __b19:
    // [153] print_char_cursor#214 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [154] call print_str 
    // [118] phi from printEntry::@19 to print_str [phi:printEntry::@19->print_str]
  print_str_from___b19:
    // [118] phi print_char_cursor#167 = print_char_cursor#214 [phi:printEntry::@19->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str3 [phi:printEntry::@19->print_str#1] -- pbuz1=pbuc1 
    lda #<str3
    sta.z print_str.str
    lda #>str3
    sta.z print_str.str+1
    jsr print_str
    // [155] phi from printEntry::@19 to printEntry::entryTsOrder1 [phi:printEntry::@19->printEntry::entryTsOrder1]
  entryTsOrder1_from___b19:
    jmp entryTsOrder1
    // printEntry::entryTsOrder1
  entryTsOrder1:
    jmp __b4
    // printEntry::@4
  __b4:
    // [156] print_uint::w#10 = (word)((word**)printEntry::entry#10)[6] -- vwuz1=pwuz2_derefidx_vbuc1 
    ldy #6
    lda (entry),y
    sta.z print_uint.w
    iny
    lda (entry),y
    sta.z print_uint.w+1
    // [157] call print_uint 
    // [240] phi from printEntry::@4 to print_uint [phi:printEntry::@4->print_uint]
  print_uint_from___b4:
    // [240] phi print_uint::w#5 = print_uint::w#10 [phi:printEntry::@4->print_uint#0] -- register_copy 
    jsr print_uint
    jmp __b20
    // printEntry::@20
  __b20:
    // [158] print_line_cursor#162 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [159] call print_ln 
    // [125] phi from printEntry::@20 to print_ln [phi:printEntry::@20->print_ln]
  print_ln_from___b20:
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@20->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#162 [phi:printEntry::@20->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b21
    // printEntry::@21
  __b21:
    // [160] print_char_cursor#215 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [161] call print_str 
    // [118] phi from printEntry::@21 to print_str [phi:printEntry::@21->print_str]
  print_str_from___b21:
    // [118] phi print_char_cursor#167 = print_char_cursor#215 [phi:printEntry::@21->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str4 [phi:printEntry::@21->print_str#1] -- pbuz1=pbuc1 
    lda #<str4
    sta.z print_str.str
    lda #>str4
    sta.z print_str.str+1
    jsr print_str
    // [162] phi from printEntry::@21 to printEntry::entryTLastLink1 [phi:printEntry::@21->printEntry::entryTLastLink1]
  entryTLastLink1_from___b21:
    jmp entryTLastLink1
    // printEntry::entryTLastLink1
  entryTLastLink1:
    jmp __b5
    // printEntry::@5
  __b5:
    // [163] print_uchar::b#2 = printEntry::entry#10[8] -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #8
    lda (entry),y
    tax
    // [164] call print_uchar 
    // [246] phi from printEntry::@5 to print_uchar [phi:printEntry::@5->print_uchar]
  print_uchar_from___b5:
    // [246] phi print_char_cursor#148 = print_char_cursor#1 [phi:printEntry::@5->print_uchar#0] -- register_copy 
    // [246] phi print_uchar::b#10 = print_uchar::b#2 [phi:printEntry::@5->print_uchar#1] -- register_copy 
    jsr print_uchar
    jmp __b22
    // printEntry::@22
  __b22:
    // [165] print_line_cursor#163 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [166] call print_ln 
    // [125] phi from printEntry::@22 to print_ln [phi:printEntry::@22->print_ln]
  print_ln_from___b22:
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@22->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#163 [phi:printEntry::@22->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b23
    // printEntry::@23
  __b23:
    // [167] print_char_cursor#216 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [168] call print_str 
    // [118] phi from printEntry::@23 to print_str [phi:printEntry::@23->print_str]
  print_str_from___b23:
    // [118] phi print_char_cursor#167 = print_char_cursor#216 [phi:printEntry::@23->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str5 [phi:printEntry::@23->print_str#1] -- pbuz1=pbuc1 
    lda #<str5
    sta.z print_str.str
    lda #>str5
    sta.z print_str.str+1
    jsr print_str
    // [169] phi from printEntry::@23 to printEntry::entrySLastLink1 [phi:printEntry::@23->printEntry::entrySLastLink1]
  entrySLastLink1_from___b23:
    jmp entrySLastLink1
    // printEntry::entrySLastLink1
  entrySLastLink1:
    jmp __b6
    // printEntry::@6
  __b6:
    // [170] print_uchar::b#3 = printEntry::entry#10[9] -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #9
    lda (entry),y
    tax
    // [171] call print_uchar 
    // [246] phi from printEntry::@6 to print_uchar [phi:printEntry::@6->print_uchar]
  print_uchar_from___b6:
    // [246] phi print_char_cursor#148 = print_char_cursor#1 [phi:printEntry::@6->print_uchar#0] -- register_copy 
    // [246] phi print_uchar::b#10 = print_uchar::b#3 [phi:printEntry::@6->print_uchar#1] -- register_copy 
    jsr print_uchar
    jmp __b24
    // printEntry::@24
  __b24:
    // [172] print_line_cursor#164 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [173] call print_ln 
    // [125] phi from printEntry::@24 to print_ln [phi:printEntry::@24->print_ln]
  print_ln_from___b24:
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@24->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#164 [phi:printEntry::@24->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b25
    // printEntry::@25
  __b25:
    // [174] print_char_cursor#217 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [175] call print_str 
    // [118] phi from printEntry::@25 to print_str [phi:printEntry::@25->print_str]
  print_str_from___b25:
    // [118] phi print_char_cursor#167 = print_char_cursor#217 [phi:printEntry::@25->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str6 [phi:printEntry::@25->print_str#1] -- pbuz1=pbuc1 
    lda #<str6
    sta.z print_str.str
    lda #>str6
    sta.z print_str.str+1
    jsr print_str
    // [176] phi from printEntry::@25 to printEntry::entryBFlag1 [phi:printEntry::@25->printEntry::entryBFlag1]
  entryBFlag1_from___b25:
    jmp entryBFlag1
    // printEntry::entryBFlag1
  entryBFlag1:
    jmp __b7
    // printEntry::@7
  __b7:
    // [177] print_uchar::b#4 = printEntry::entry#10[$a] -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #$a
    lda (entry),y
    tax
    // [178] call print_uchar 
    // [246] phi from printEntry::@7 to print_uchar [phi:printEntry::@7->print_uchar]
  print_uchar_from___b7:
    // [246] phi print_char_cursor#148 = print_char_cursor#1 [phi:printEntry::@7->print_uchar#0] -- register_copy 
    // [246] phi print_uchar::b#10 = print_uchar::b#4 [phi:printEntry::@7->print_uchar#1] -- register_copy 
    jsr print_uchar
    jmp __b26
    // printEntry::@26
  __b26:
    // [179] print_line_cursor#165 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [180] call print_ln 
    // [125] phi from printEntry::@26 to print_ln [phi:printEntry::@26->print_ln]
  print_ln_from___b26:
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@26->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#165 [phi:printEntry::@26->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b27
    // printEntry::@27
  __b27:
    // [181] print_char_cursor#218 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [182] call print_str 
    // [118] phi from printEntry::@27 to print_str [phi:printEntry::@27->print_str]
  print_str_from___b27:
    // [118] phi print_char_cursor#167 = print_char_cursor#218 [phi:printEntry::@27->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str7 [phi:printEntry::@27->print_str#1] -- pbuz1=pbuc1 
    lda #<str7
    sta.z print_str.str
    lda #>str7
    sta.z print_str.str+1
    jsr print_str
    // [183] phi from printEntry::@27 to printEntry::entryBError1 [phi:printEntry::@27->printEntry::entryBError1]
  entryBError1_from___b27:
    jmp entryBError1
    // printEntry::entryBError1
  entryBError1:
    jmp __b8
    // printEntry::@8
  __b8:
    // [184] print_uchar::b#5 = printEntry::entry#10[$b] -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #$b
    lda (entry),y
    tax
    // [185] call print_uchar 
    // [246] phi from printEntry::@8 to print_uchar [phi:printEntry::@8->print_uchar]
  print_uchar_from___b8:
    // [246] phi print_char_cursor#148 = print_char_cursor#1 [phi:printEntry::@8->print_uchar#0] -- register_copy 
    // [246] phi print_uchar::b#10 = print_uchar::b#5 [phi:printEntry::@8->print_uchar#1] -- register_copy 
    jsr print_uchar
    jmp __b28
    // printEntry::@28
  __b28:
    // [186] print_line_cursor#166 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [187] call print_ln 
    // [125] phi from printEntry::@28 to print_ln [phi:printEntry::@28->print_ln]
  print_ln_from___b28:
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@28->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#166 [phi:printEntry::@28->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b29
    // printEntry::@29
  __b29:
    // [188] print_char_cursor#219 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [189] call print_str 
    // [118] phi from printEntry::@29 to print_str [phi:printEntry::@29->print_str]
  print_str_from___b29:
    // [118] phi print_char_cursor#167 = print_char_cursor#219 [phi:printEntry::@29->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str8 [phi:printEntry::@29->print_str#1] -- pbuz1=pbuc1 
    lda #<str8
    sta.z print_str.str
    lda #>str8
    sta.z print_str.str+1
    jsr print_str
    // [190] phi from printEntry::@29 to printEntry::entryUCross1 [phi:printEntry::@29->printEntry::entryUCross1]
  entryUCross1_from___b29:
    jmp entryUCross1
    // printEntry::entryUCross1
  entryUCross1:
    jmp __b9
    // printEntry::@9
  __b9:
    // [191] print_uint::w#4 = ((word*)printEntry::entry#10)[$c] -- vwuz1=pwuz2_derefidx_vbuc1 
    ldy #$c
    lda (entry),y
    sta.z print_uint.w
    iny
    lda (entry),y
    sta.z print_uint.w+1
    // [192] call print_uint 
    // [240] phi from printEntry::@9 to print_uint [phi:printEntry::@9->print_uint]
  print_uint_from___b9:
    // [240] phi print_uint::w#5 = print_uint::w#4 [phi:printEntry::@9->print_uint#0] -- register_copy 
    jsr print_uint
    jmp __b30
    // printEntry::@30
  __b30:
    // [193] print_line_cursor#167 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [194] call print_ln 
    // [125] phi from printEntry::@30 to print_ln [phi:printEntry::@30->print_ln]
  print_ln_from___b30:
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@30->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#167 [phi:printEntry::@30->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b31
    // printEntry::@31
  __b31:
    // [195] print_char_cursor#220 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [196] call print_str 
    // [118] phi from printEntry::@31 to print_str [phi:printEntry::@31->print_str]
  print_str_from___b31:
    // [118] phi print_char_cursor#167 = print_char_cursor#220 [phi:printEntry::@31->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str9 [phi:printEntry::@31->print_str#1] -- pbuz1=pbuc1 
    lda #<str9
    sta.z print_str.str
    lda #>str9
    sta.z print_str.str+1
    jsr print_str
    // [197] phi from printEntry::@31 to printEntry::entryBAddrLo1 [phi:printEntry::@31->printEntry::entryBAddrLo1]
  entryBAddrLo1_from___b31:
    jmp entryBAddrLo1
    // printEntry::entryBAddrLo1
  entryBAddrLo1:
    jmp __b10
    // printEntry::@10
  __b10:
    // [198] print_uchar::b#6 = printEntry::entry#10[$e] -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #$e
    lda (entry),y
    tax
    // [199] call print_uchar 
    // [246] phi from printEntry::@10 to print_uchar [phi:printEntry::@10->print_uchar]
  print_uchar_from___b10:
    // [246] phi print_char_cursor#148 = print_char_cursor#1 [phi:printEntry::@10->print_uchar#0] -- register_copy 
    // [246] phi print_uchar::b#10 = print_uchar::b#6 [phi:printEntry::@10->print_uchar#1] -- register_copy 
    jsr print_uchar
    jmp __b32
    // printEntry::@32
  __b32:
    // [200] print_line_cursor#168 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [201] call print_ln 
    // [125] phi from printEntry::@32 to print_ln [phi:printEntry::@32->print_ln]
  print_ln_from___b32:
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@32->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#168 [phi:printEntry::@32->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b33
    // printEntry::@33
  __b33:
    // [202] print_char_cursor#221 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [203] call print_str 
    // [118] phi from printEntry::@33 to print_str [phi:printEntry::@33->print_str]
  print_str_from___b33:
    // [118] phi print_char_cursor#167 = print_char_cursor#221 [phi:printEntry::@33->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str10 [phi:printEntry::@33->print_str#1] -- pbuz1=pbuc1 
    lda #<str10
    sta.z print_str.str
    lda #>str10
    sta.z print_str.str+1
    jsr print_str
    // [204] phi from printEntry::@33 to printEntry::entryBAddrHi1 [phi:printEntry::@33->printEntry::entryBAddrHi1]
  entryBAddrHi1_from___b33:
    jmp entryBAddrHi1
    // printEntry::entryBAddrHi1
  entryBAddrHi1:
    jmp __b11
    // printEntry::@11
  __b11:
    // [205] print_uchar::b#7 = printEntry::entry#10[$f] -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #$f
    lda (entry),y
    tax
    // [206] call print_uchar 
    // [246] phi from printEntry::@11 to print_uchar [phi:printEntry::@11->print_uchar]
  print_uchar_from___b11:
    // [246] phi print_char_cursor#148 = print_char_cursor#1 [phi:printEntry::@11->print_uchar#0] -- register_copy 
    // [246] phi print_uchar::b#10 = print_uchar::b#7 [phi:printEntry::@11->print_uchar#1] -- register_copy 
    jsr print_uchar
    jmp __b34
    // printEntry::@34
  __b34:
    // [207] print_line_cursor#169 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [208] call print_ln 
    // [125] phi from printEntry::@34 to print_ln [phi:printEntry::@34->print_ln]
  print_ln_from___b34:
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@34->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#169 [phi:printEntry::@34->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b35
    // printEntry::@35
  __b35:
    // [209] print_char_cursor#222 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [210] call print_str 
    // [118] phi from printEntry::@35 to print_str [phi:printEntry::@35->print_str]
  print_str_from___b35:
    // [118] phi print_char_cursor#167 = print_char_cursor#222 [phi:printEntry::@35->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str11 [phi:printEntry::@35->print_str#1] -- pbuz1=pbuc1 
    lda #<str11
    sta.z print_str.str
    lda #>str11
    sta.z print_str.str+1
    jsr print_str
    // [211] phi from printEntry::@35 to printEntry::entryTHi1 [phi:printEntry::@35->printEntry::entryTHi1]
  entryTHi1_from___b35:
    jmp entryTHi1
    // printEntry::entryTHi1
  entryTHi1:
    jmp __b12
    // printEntry::@12
  __b12:
    // [212] print_uchar::b#8 = printEntry::entry#10[$10] -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #$10
    lda (entry),y
    tax
    // [213] call print_uchar 
    // [246] phi from printEntry::@12 to print_uchar [phi:printEntry::@12->print_uchar]
  print_uchar_from___b12:
    // [246] phi print_char_cursor#148 = print_char_cursor#1 [phi:printEntry::@12->print_uchar#0] -- register_copy 
    // [246] phi print_uchar::b#10 = print_uchar::b#8 [phi:printEntry::@12->print_uchar#1] -- register_copy 
    jsr print_uchar
    jmp __b36
    // printEntry::@36
  __b36:
    // [214] print_line_cursor#170 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [215] call print_ln 
    // [125] phi from printEntry::@36 to print_ln [phi:printEntry::@36->print_ln]
  print_ln_from___b36:
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@36->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#170 [phi:printEntry::@36->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b37
    // printEntry::@37
  __b37:
    // [216] print_char_cursor#223 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [217] call print_str 
    // [118] phi from printEntry::@37 to print_str [phi:printEntry::@37->print_str]
  print_str_from___b37:
    // [118] phi print_char_cursor#167 = print_char_cursor#223 [phi:printEntry::@37->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str12 [phi:printEntry::@37->print_str#1] -- pbuz1=pbuc1 
    lda #<str12
    sta.z print_str.str
    lda #>str12
    sta.z print_str.str+1
    jsr print_str
    // [218] phi from printEntry::@37 to printEntry::entryTLo1 [phi:printEntry::@37->printEntry::entryTLo1]
  entryTLo1_from___b37:
    jmp entryTLo1
    // printEntry::entryTLo1
  entryTLo1:
    jmp __b13
    // printEntry::@13
  __b13:
    // [219] print_uchar::b#9 = printEntry::entry#10[$11] -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #$11
    lda (entry),y
    tax
    // [220] call print_uchar 
    // [246] phi from printEntry::@13 to print_uchar [phi:printEntry::@13->print_uchar]
  print_uchar_from___b13:
    // [246] phi print_char_cursor#148 = print_char_cursor#1 [phi:printEntry::@13->print_uchar#0] -- register_copy 
    // [246] phi print_uchar::b#10 = print_uchar::b#9 [phi:printEntry::@13->print_uchar#1] -- register_copy 
    jsr print_uchar
    jmp __b38
    // printEntry::@38
  __b38:
    // [221] print_line_cursor#171 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [222] call print_ln 
    // [125] phi from printEntry::@38 to print_ln [phi:printEntry::@38->print_ln]
  print_ln_from___b38:
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@38->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#171 [phi:printEntry::@38->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __breturn
    // printEntry::@return
  __breturn:
    // [223] return 
    rts
    str: .text "bufdisk   "
    .byte 0
    str1: .text "bufedit   "
    .byte 0
    str2: .text "tslen     "
    .byte 0
    str3: .text "tsorder   "
    .byte 0
    str4: .text "tlastlink   "
    .byte 0
    str5: .text "slastlink   "
    .byte 0
    str6: .text "bflag       "
    .byte 0
    str7: .text "berror      "
    .byte 0
    str8: .text "ucross    "
    .byte 0
    str9: .text "baddrlo     "
    .byte 0
    str10: .text "baddrhi     "
    .byte 0
    str11: .text "thi         "
    .byte 0
    str12: .text "tlo         "
    .byte 0
}
  // keyboard_key_pressed
// Determines whether a specific key is currently pressed by accessing the matrix directly
// The key is a keyboard code defined from the keyboard matrix by %00rrrccc, where rrr is the row ID (0-7) and ccc is the column ID (0-7)
// All keys exist as as KEY_XXX constants.
// Returns zero if the key is not pressed and a non-zero value if the key is currently pressed
keyboard_key_pressed: {
    .const colidx = KEY_SPACE&7
    .label rowidx = KEY_SPACE>>3
    // [225] call keyboard_matrix_read 
    jsr keyboard_matrix_read
    // [226] keyboard_matrix_read::return#2 = keyboard_matrix_read::return#0
    jmp __b1
    // keyboard_key_pressed::@1
  __b1:
    // [227] keyboard_key_pressed::$2 = keyboard_matrix_read::return#2
    // [228] keyboard_key_pressed::return#0 = keyboard_key_pressed::$2 & *(keyboard_matrix_col_bitmask+keyboard_key_pressed::colidx#0) -- vbuaa=vbuaa_band__deref_pbuc1 
    and keyboard_matrix_col_bitmask+colidx
    jmp __breturn
    // keyboard_key_pressed::@return
  __breturn:
    // [229] return 
    rts
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
memset: {
    .const c = ' '
    .const num = $3e8
    .label str = print_screen
    .label end = str+num
    .label dst = $a
    // [231] phi from memset to memset::@1 [phi:memset->memset::@1]
  __b1_from_memset:
    // [231] phi memset::dst#2 = (byte*)memset::str#0 [phi:memset->memset::@1#0] -- pbuz1=pbuc1 
    lda #<str
    sta.z dst
    lda #>str
    sta.z dst+1
    jmp __b1
    // memset::@1
  __b1:
    // [232] if(memset::dst#2!=memset::end#0) goto memset::@2 -- pbuz1_neq_pbuc1_then_la1 
    lda.z dst+1
    cmp #>end
    bne __b2
    lda.z dst
    cmp #<end
    bne __b2
    jmp __breturn
    // memset::@return
  __breturn:
    // [233] return 
    rts
    // memset::@2
  __b2:
    // [234] *memset::dst#2 = memset::c#0 -- _deref_pbuz1=vbuc1 
    lda #c
    ldy #0
    sta (dst),y
    // [235] memset::dst#1 = ++ memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [231] phi from memset::@2 to memset::@1 [phi:memset::@2->memset::@1]
  __b1_from___b2:
    // [231] phi memset::dst#2 = memset::dst#1 [phi:memset::@2->memset::@1#0] -- register_copy 
    jmp __b1
}
  // print_char
// Print a single char
// print_char(byte register(A) ch)
print_char: {
    // [237] *print_char_cursor#83 = print_char::ch#3 -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (print_char_cursor),y
    // [238] print_char_cursor#10 = ++ print_char_cursor#83 -- pbuz1=_inc_pbuz1 
    inc.z print_char_cursor
    bne !+
    inc.z print_char_cursor+1
  !:
    jmp __breturn
    // print_char::@return
  __breturn:
    // [239] return 
    rts
}
  // print_uint
// Print a unsigned int as HEX
// print_uint(word zp(8) w)
print_uint: {
    .label w = 8
    // [241] print_uchar::b#0 = > print_uint::w#5 -- vbuxx=_hi_vwuz1 
    ldx.z w+1
    // [242] call print_uchar 
    // [246] phi from print_uint to print_uchar [phi:print_uint->print_uchar]
  print_uchar_from_print_uint:
    // [246] phi print_char_cursor#148 = print_char_cursor#1 [phi:print_uint->print_uchar#0] -- register_copy 
    // [246] phi print_uchar::b#10 = print_uchar::b#0 [phi:print_uint->print_uchar#1] -- register_copy 
    jsr print_uchar
    jmp __b1
    // print_uint::@1
  __b1:
    // [243] print_uchar::b#1 = < print_uint::w#5 -- vbuxx=_lo_vwuz1 
    ldx.z w
    // [244] call print_uchar 
    // [246] phi from print_uint::@1 to print_uchar [phi:print_uint::@1->print_uchar]
  print_uchar_from___b1:
    // [246] phi print_char_cursor#148 = print_char_cursor#10 [phi:print_uint::@1->print_uchar#0] -- register_copy 
    // [246] phi print_uchar::b#10 = print_uchar::b#1 [phi:print_uint::@1->print_uchar#1] -- register_copy 
    jsr print_uchar
    jmp __breturn
    // print_uint::@return
  __breturn:
    // [245] return 
    rts
}
  // print_uchar
// Print a char as HEX
// print_uchar(byte register(X) b)
print_uchar: {
    // [247] print_uchar::$0 = print_uchar::b#10 >> 4 -- vbuaa=vbuxx_ror_4 
    txa
    lsr
    lsr
    lsr
    lsr
    // [248] print_char::ch#1 = print_hextab[print_uchar::$0] -- vbuaa=pbuc1_derefidx_vbuaa 
    tay
    lda print_hextab,y
    // [249] call print_char 
  // Table of hexadecimal digits
    // [236] phi from print_uchar to print_char [phi:print_uchar->print_char]
  print_char_from_print_uchar:
    // [236] phi print_char_cursor#83 = print_char_cursor#148 [phi:print_uchar->print_char#0] -- register_copy 
    // [236] phi print_char::ch#3 = print_char::ch#1 [phi:print_uchar->print_char#1] -- register_copy 
    jsr print_char
    jmp __b1
    // print_uchar::@1
  __b1:
    // [250] print_uchar::$2 = print_uchar::b#10 & $f -- vbuxx=vbuxx_band_vbuc1 
    lda #$f
    axs #0
    // [251] print_char::ch#2 = print_hextab[print_uchar::$2] -- vbuaa=pbuc1_derefidx_vbuxx 
    lda print_hextab,x
    // [252] call print_char 
    // [236] phi from print_uchar::@1 to print_char [phi:print_uchar::@1->print_char]
  print_char_from___b1:
    // [236] phi print_char_cursor#83 = print_char_cursor#10 [phi:print_uchar::@1->print_char#0] -- register_copy 
    // [236] phi print_char::ch#3 = print_char::ch#2 [phi:print_uchar::@1->print_char#1] -- register_copy 
    jsr print_char
    jmp __breturn
    // print_uchar::@return
  __breturn:
    // [253] return 
    rts
}
  // keyboard_matrix_read
// Read a single row of the keyboard matrix
// The row ID (0-7) of the keyboard matrix row to read. See the C64 key matrix for row IDs.
// Returns the keys pressed on the row as bits according to the C64 key matrix.
// Notice: If the C64 normal interrupt is still running it will occasionally interrupt right between the read & write
// leading to erroneous readings. You must disable the normal interrupt or sei/cli around calls to the keyboard matrix reader.
keyboard_matrix_read: {
    // [254] *((byte*)CIA1) = *(keyboard_matrix_row_bitmask+keyboard_key_pressed::rowidx#0) -- _deref_pbuc1=_deref_pbuc2 
    lda keyboard_matrix_row_bitmask+keyboard_key_pressed.rowidx
    sta CIA1
    // [255] keyboard_matrix_read::return#0 = ~ *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_B) -- vbuaa=_bnot__deref_pbuc1 
    lda CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_B
    eor #$ff
    jmp __breturn
    // keyboard_matrix_read::@return
  __breturn:
    // [256] return 
    rts
}
  // File Data
  print_hextab: .text "0123456789abcdef"
  // Keyboard row bitmask as expected by CIA#1 Port A when reading a specific keyboard matrix row (rows are numbered 0-7)
  keyboard_matrix_row_bitmask: .byte $fe, $fd, $fb, $f7, $ef, $df, $bf, $7f
  // Keyboard matrix column bitmasks for a specific keybooard matrix column when reading the keyboard. (columns are numbered 0-7)
  keyboard_matrix_col_bitmask: .byte 1, 2, 4, 8, $10, $20, $40, $80
  // All files
  files: .fill MAX_FILES*SIZEOF_ENTRY, 0

ASSEMBLER OPTIMIZATIONS
Removing instruction jmp fileEntry1
Removing instruction jmp __b6
Removing instruction jmp fileEntry2
Removing instruction jmp __b7
Removing instruction jmp __b5
Removing instruction jmp __b8
Removing instruction jmp __b9
Removing instruction jmp __b10
Removing instruction jmp __b11
Removing instruction jmp __b12
Removing instruction jmp __b13
Removing instruction jmp __b14
Removing instruction jmp __b15
Removing instruction jmp __b1
Removing instruction jmp __b16
Removing instruction jmp __b2
Removing instruction jmp __b17
Removing instruction jmp __b18
Removing instruction jmp __b19
Removing instruction jmp __b20
Removing instruction jmp __b21
Removing instruction jmp __b22
Removing instruction jmp __b3
Removing instruction jmp __b23
Removing instruction jmp __b4
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b4
Removing instruction jmp __b3
Removing instruction jmp entryBufDisk1
Removing instruction jmp __b1
Removing instruction jmp entryBufEdit1
Removing instruction jmp __b2
Removing instruction jmp entryTsLen1
Removing instruction jmp __b3
Removing instruction jmp entryTsOrder1
Removing instruction jmp __b4
Removing instruction jmp entryTLastLink1
Removing instruction jmp __b5
Removing instruction jmp entrySLastLink1
Removing instruction jmp __b6
Removing instruction jmp entryBFlag1
Removing instruction jmp __b7
Removing instruction jmp entryBError1
Removing instruction jmp __b8
Removing instruction jmp entryUCross1
Removing instruction jmp __b9
Removing instruction jmp entryBAddrLo1
Removing instruction jmp __b10
Removing instruction jmp entryBAddrHi1
Removing instruction jmp __b11
Removing instruction jmp entryTHi1
Removing instruction jmp __b12
Removing instruction jmp entryTLo1
Removing instruction jmp __b13
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp entryBufDisk1
Removing instruction jmp __b1
Removing instruction jmp __b14
Removing instruction jmp __b15
Removing instruction jmp entryBufEdit1
Removing instruction jmp __b2
Removing instruction jmp __b16
Removing instruction jmp __b17
Removing instruction jmp entryTsLen1
Removing instruction jmp __b3
Removing instruction jmp __b18
Removing instruction jmp __b19
Removing instruction jmp entryTsOrder1
Removing instruction jmp __b4
Removing instruction jmp __b20
Removing instruction jmp __b21
Removing instruction jmp entryTLastLink1
Removing instruction jmp __b5
Removing instruction jmp __b22
Removing instruction jmp __b23
Removing instruction jmp entrySLastLink1
Removing instruction jmp __b6
Removing instruction jmp __b24
Removing instruction jmp __b25
Removing instruction jmp entryBFlag1
Removing instruction jmp __b7
Removing instruction jmp __b26
Removing instruction jmp __b27
Removing instruction jmp entryBError1
Removing instruction jmp __b8
Removing instruction jmp __b28
Removing instruction jmp __b29
Removing instruction jmp entryUCross1
Removing instruction jmp __b9
Removing instruction jmp __b30
Removing instruction jmp __b31
Removing instruction jmp entryBAddrLo1
Removing instruction jmp __b10
Removing instruction jmp __b32
Removing instruction jmp __b33
Removing instruction jmp entryBAddrHi1
Removing instruction jmp __b11
Removing instruction jmp __b34
Removing instruction jmp __b35
Removing instruction jmp entryTHi1
Removing instruction jmp __b12
Removing instruction jmp __b36
Removing instruction jmp __b37
Removing instruction jmp entryTLo1
Removing instruction jmp __b13
Removing instruction jmp __b38
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction lda #>0
Removing instruction lda.z print_line_cursor+1
Succesful ASM optimization Pass5UnnecesaryLoadElimination
Replacing label __b1_from___b16 with __b1
Replacing label __b3_from___b23 with __b3
Replacing label __b3_from___b2 with __b3
Replacing label __b1_from___b3 with __b1
Replacing label __b1_from___b2 with __b1
Removing instruction fileEntry1_from_main:
Removing instruction mul8u_from_fileEntry1:
Removing instruction fileEntry2_from___b6:
Removing instruction mul8u_from_fileEntry2:
Removing instruction __b9_from___b8:
Removing instruction print_cls_from___b9:
Removing instruction __b10_from___b9:
Removing instruction print_str_from___b10:
Removing instruction __b11_from___b10:
Removing instruction print_ln_from___b11:
Removing instruction printEntry_from___b13:
Removing instruction __b1_from___b15:
Removing instruction __b1_from___b16:
Removing instruction keyboard_key_pressed_from___b1:
Removing instruction __b2_from___b16:
Removing instruction print_cls_from___b2:
Removing instruction __b17_from___b2:
Removing instruction print_str_from___b17:
Removing instruction __b18_from___b17:
Removing instruction print_ln_from___b18:
Removing instruction __b3_from___b22:
Removing instruction __b3_from___b23:
Removing instruction keyboard_key_pressed_from___b3:
Removing instruction __b4_from___b23:
Removing instruction print_cls_from___b4:
Removing instruction __b3_from___b2:
Removing instruction __b3_from___b4:
Removing instruction entryBufDisk1_from_initEntry:
Removing instruction entryBufDisk1:
Removing instruction entryBufEdit1_from___b1:
Removing instruction entryBufEdit1:
Removing instruction entryTsLen1_from___b2:
Removing instruction entryTsLen1:
Removing instruction entryTsOrder1_from___b3:
Removing instruction entryTsOrder1:
Removing instruction entryTLastLink1_from___b4:
Removing instruction entryTLastLink1:
Removing instruction entrySLastLink1_from___b5:
Removing instruction entrySLastLink1:
Removing instruction entryBFlag1_from___b6:
Removing instruction entryBFlag1:
Removing instruction entryBError1_from___b7:
Removing instruction entryBError1:
Removing instruction entryUCross1_from___b8:
Removing instruction entryUCross1:
Removing instruction entryBAddrLo1_from___b9:
Removing instruction entryBAddrLo1:
Removing instruction entryBAddrHi1_from___b10:
Removing instruction entryBAddrHi1:
Removing instruction entryTHi1_from___b11:
Removing instruction entryTHi1:
Removing instruction entryTLo1_from___b12:
Removing instruction entryTLo1:
Removing instruction __b1_from_print_str:
Removing instruction __b1_from___b3:
Removing instruction __b1_from_print_ln:
Removing instruction __b1_from___b2:
Removing instruction entryBufDisk1_from_printEntry:
Removing instruction entryBufDisk1:
Removing instruction entryBufEdit1_from___b15:
Removing instruction entryBufEdit1:
Removing instruction entryTsLen1_from___b17:
Removing instruction entryTsLen1:
Removing instruction entryTsOrder1_from___b19:
Removing instruction entryTsOrder1:
Removing instruction entryTLastLink1_from___b21:
Removing instruction entryTLastLink1:
Removing instruction entrySLastLink1_from___b23:
Removing instruction entrySLastLink1:
Removing instruction entryBFlag1_from___b25:
Removing instruction entryBFlag1:
Removing instruction entryBError1_from___b27:
Removing instruction entryBError1:
Removing instruction entryUCross1_from___b29:
Removing instruction entryUCross1:
Removing instruction entryBAddrLo1_from___b31:
Removing instruction entryBAddrLo1:
Removing instruction entryBAddrHi1_from___b33:
Removing instruction entryBAddrHi1:
Removing instruction entryTHi1_from___b35:
Removing instruction entryTHi1:
Removing instruction entryTLo1_from___b37:
Removing instruction entryTLo1:
Succesful ASM optimization Pass5RedundantLabelElimination
Removing instruction fileEntry1:
Removing instruction __b6:
Removing instruction fileEntry2:
Removing instruction __b7:
Removing instruction __b5:
Removing instruction initEntry_from___b5:
Removing instruction __b8:
Removing instruction initEntry_from___b8:
Removing instruction __b9:
Removing instruction __b10:
Removing instruction __b11:
Removing instruction __b12:
Removing instruction print_ln_from___b12:
Removing instruction __b13:
Removing instruction __b14:
Removing instruction print_ln_from___b14:
Removing instruction __b15:
Removing instruction print_str_from___b15:
Removing instruction __b16:
Removing instruction __b2:
Removing instruction __b17:
Removing instruction __b18:
Removing instruction __b19:
Removing instruction print_ln_from___b19:
Removing instruction __b20:
Removing instruction printEntry_from___b20:
Removing instruction __b21:
Removing instruction print_ln_from___b21:
Removing instruction __b22:
Removing instruction print_str_from___b22:
Removing instruction __b23:
Removing instruction __b4:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __b1_from_mul8u:
Removing instruction __breturn:
Removing instruction __b4:
Removing instruction __b1_from___b3:
Removing instruction __b1:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction __b5:
Removing instruction __b6:
Removing instruction __b7:
Removing instruction __b8:
Removing instruction __b9:
Removing instruction __b10:
Removing instruction __b11:
Removing instruction __b12:
Removing instruction __b13:
Removing instruction __breturn:
Removing instruction memset_from_print_cls:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction print_char_from___b2:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction print_str_from_printEntry:
Removing instruction __b1:
Removing instruction print_uint_from___b1:
Removing instruction __b14:
Removing instruction print_ln_from___b14:
Removing instruction __b15:
Removing instruction print_str_from___b15:
Removing instruction __b2:
Removing instruction print_uint_from___b2:
Removing instruction __b16:
Removing instruction print_ln_from___b16:
Removing instruction __b17:
Removing instruction print_str_from___b17:
Removing instruction __b3:
Removing instruction print_uint_from___b3:
Removing instruction __b18:
Removing instruction print_ln_from___b18:
Removing instruction __b19:
Removing instruction print_str_from___b19:
Removing instruction __b4:
Removing instruction print_uint_from___b4:
Removing instruction __b20:
Removing instruction print_ln_from___b20:
Removing instruction __b21:
Removing instruction print_str_from___b21:
Removing instruction __b5:
Removing instruction print_uchar_from___b5:
Removing instruction __b22:
Removing instruction print_ln_from___b22:
Removing instruction __b23:
Removing instruction print_str_from___b23:
Removing instruction __b6:
Removing instruction print_uchar_from___b6:
Removing instruction __b24:
Removing instruction print_ln_from___b24:
Removing instruction __b25:
Removing instruction print_str_from___b25:
Removing instruction __b7:
Removing instruction print_uchar_from___b7:
Removing instruction __b26:
Removing instruction print_ln_from___b26:
Removing instruction __b27:
Removing instruction print_str_from___b27:
Removing instruction __b8:
Removing instruction print_uchar_from___b8:
Removing instruction __b28:
Removing instruction print_ln_from___b28:
Removing instruction __b29:
Removing instruction print_str_from___b29:
Removing instruction __b9:
Removing instruction print_uint_from___b9:
Removing instruction __b30:
Removing instruction print_ln_from___b30:
Removing instruction __b31:
Removing instruction print_str_from___b31:
Removing instruction __b10:
Removing instruction print_uchar_from___b10:
Removing instruction __b32:
Removing instruction print_ln_from___b32:
Removing instruction __b33:
Removing instruction print_str_from___b33:
Removing instruction __b11:
Removing instruction print_uchar_from___b11:
Removing instruction __b34:
Removing instruction print_ln_from___b34:
Removing instruction __b35:
Removing instruction print_str_from___b35:
Removing instruction __b12:
Removing instruction print_uchar_from___b12:
Removing instruction __b36:
Removing instruction print_ln_from___b36:
Removing instruction __b37:
Removing instruction print_str_from___b37:
Removing instruction __b13:
Removing instruction print_uchar_from___b13:
Removing instruction __b38:
Removing instruction print_ln_from___b38:
Removing instruction __breturn:
Removing instruction __b1:
Removing instruction __breturn:
Removing instruction __b1_from_memset:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Removing instruction __breturn:
Removing instruction print_uchar_from_print_uint:
Removing instruction __b1:
Removing instruction print_uchar_from___b1:
Removing instruction __breturn:
Removing instruction print_char_from_print_uchar:
Removing instruction __b1:
Removing instruction print_char_from___b1:
Removing instruction __breturn:
Removing instruction __breturn:
Succesful ASM optimization Pass5UnusedLabelElimination

FINAL SYMBOL TABLE
const nomodify struct MOS6526_CIA* CIA1 = (struct MOS6526_CIA*) 56320
const nomodify byte KEY_SPACE = $3c
const nomodify byte MAX_FILES = $90
const byte OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR = 2
const byte OFFSET_STRUCT_MOS6526_CIA_PORT_B = 1
const byte OFFSET_STRUCT_MOS6526_CIA_PORT_B_DDR = 3
const byte RADIX::BINARY = 2
const byte RADIX::DECIMAL = $a
const byte RADIX::HEXADECIMAL = $10
const byte RADIX::OCTAL = 8
const nomodify byte SIZEOF_ENTRY = $12
const byte* files[(word)MAX_FILES*SIZEOF_ENTRY]  = { fill( (word)MAX_FILES*SIZEOF_ENTRY, 0) }
void initEntry(byte* initEntry::entry , byte initEntry::n)
word~ initEntry::$1 zp[2]:8 11.0
byte~ initEntry::$11 reg byte a 22.0
byte~ initEntry::$13 reg byte a 22.0
byte~ initEntry::$15 reg byte a 22.0
word~ initEntry::$17 zp[2]:14 22.0
byte~ initEntry::$19 reg byte a 22.0
byte~ initEntry::$21 reg byte a 22.0
byte~ initEntry::$23 reg byte a 22.0
byte~ initEntry::$25 reg byte a 22.0
word~ initEntry::$3 zp[2]:16 11.0
word~ initEntry::$5 zp[2]:10 22.0
word~ initEntry::$7 zp[2]:12 11.0
byte~ initEntry::$9 reg byte a 22.0
byte* initEntry::entry
byte* initEntry::entry#0 entry zp[2]:4 4.0
byte* initEntry::entry#1 entry zp[2]:4 4.0
byte* initEntry::entry#10 entry zp[2]:4 2.3589743589743586
byte* initEntry::entryBAddrHi1_entry
byte* initEntry::entryBAddrHi1_return
byte* initEntry::entryBAddrLo1_entry
byte* initEntry::entryBAddrLo1_return
byte* initEntry::entryBError1_entry
byte* initEntry::entryBError1_return
byte* initEntry::entryBFlag1_entry
byte* initEntry::entryBFlag1_return
byte* initEntry::entryBufDisk1_entry
byte** initEntry::entryBufDisk1_return
byte* initEntry::entryBufEdit1_entry
byte** initEntry::entryBufEdit1_return
byte* initEntry::entrySLastLink1_entry
byte* initEntry::entrySLastLink1_return
byte* initEntry::entryTHi1_entry
byte* initEntry::entryTHi1_return
byte* initEntry::entryTLastLink1_entry
byte* initEntry::entryTLastLink1_return
byte* initEntry::entryTLo1_entry
byte* initEntry::entryTLo1_return
byte* initEntry::entryTsLen1_entry
word* initEntry::entryTsLen1_return
byte* initEntry::entryTsOrder1_entry
word** initEntry::entryTsOrder1_return
byte* initEntry::entryUCross1_entry
word* initEntry::entryUCross1_return
byte initEntry::n
byte initEntry::n#10 reg byte x 3.7631578947368434
void keyboard_init()
byte keyboard_key_pressed(byte keyboard_key_pressed::key)
byte~ keyboard_key_pressed::$2 reg byte a 202.0
byte keyboard_key_pressed::colidx
const byte keyboard_key_pressed::colidx#0 colidx = KEY_SPACE&7
byte keyboard_key_pressed::key
byte keyboard_key_pressed::return
byte keyboard_key_pressed::return#0 reg byte a 30.75
byte keyboard_key_pressed::return#2 reg byte a 22.0
byte keyboard_key_pressed::return#3 reg byte a 22.0
byte keyboard_key_pressed::rowidx
const byte keyboard_key_pressed::rowidx#0 rowidx = KEY_SPACE>>3
const byte* keyboard_matrix_col_bitmask[8]  = { 1, 2, 4, 8, $10, $20, $40, $80 }
byte keyboard_matrix_read(byte keyboard_matrix_read::rowid)
byte keyboard_matrix_read::return
byte keyboard_matrix_read::return#0 reg byte a 367.33333333333337
byte keyboard_matrix_read::return#2 reg byte a 202.0
byte keyboard_matrix_read::row_pressed_bits
byte keyboard_matrix_read::rowid
const byte* keyboard_matrix_row_bitmask[8]  = { $fe, $fd, $fb, $f7, $ef, $df, $bf, $7f }
void main()
byte~ main::$20 reg byte a 22.0
byte~ main::$22 reg byte a 22.0
byte* main::entry1
byte* main::entry1#0 entry1 zp[2]:6 0.3157894736842105
byte* main::entry2
byte* main::entry2#0 entry2 zp[2]:2 0.17142857142857143
word~ main::fileEntry1_$0 zp[2]:2 4.0
byte main::fileEntry1_idx
const byte main::fileEntry1_idx#0 fileEntry1_idx = 1
byte* main::fileEntry1_return
word~ main::fileEntry2_$0 zp[2]:2 4.0
byte main::fileEntry2_idx
const byte main::fileEntry2_idx#0 fileEntry2_idx = 2
byte* main::fileEntry2_return
const byte* main::str[$e]  = "** entry 1 **"
const byte* main::str1[$10]  = "- press space -"
const byte* main::str2[$e]  = "** entry 2 **"
void* memset(void* memset::str , byte memset::c , word memset::num)
byte memset::c
const byte memset::c#0 c = ' '
byte* memset::dst
byte* memset::dst#1 dst zp[2]:10 2002.0
byte* memset::dst#2 dst zp[2]:10 1334.6666666666667
byte* memset::end
const byte* memset::end#0 end = (byte*)memset::str#0+memset::num#0
word memset::num
const word memset::num#0 num = $3e8
void* memset::return
void* memset::str
const void* memset::str#0 str = (void*)print_screen#0
word mul8u(byte mul8u::a , byte mul8u::b)
byte~ mul8u::$1 reg byte a 202.0
byte mul8u::a
byte mul8u::a#0 reg byte x 101.0
byte mul8u::a#3 reg byte x 69.16666666666666
byte mul8u::a#6 reg byte x 11.0
byte mul8u::b
word mul8u::mb
word mul8u::mb#1 mb zp[2]:4 202.0
word mul8u::mb#2 mb zp[2]:4 43.285714285714285
word mul8u::res
word mul8u::res#1 res zp[2]:2 202.0
word mul8u::res#2 res zp[2]:2 43.85714285714286
word mul8u::res#6 res zp[2]:2 101.0
word mul8u::return
word mul8u::return#2 return zp[2]:2 4.0
word mul8u::return#3 return zp[2]:2 4.0
void printEntry(byte* printEntry::entry)
byte* printEntry::entry
byte* printEntry::entry#0 entry zp[2]:6 4.0
byte* printEntry::entry#1 entry zp[2]:6 4.0
byte* printEntry::entry#10 entry zp[2]:6 1.0454545454545454
byte* printEntry::entryBAddrHi1_entry
byte* printEntry::entryBAddrHi1_return
byte* printEntry::entryBAddrLo1_entry
byte* printEntry::entryBAddrLo1_return
byte* printEntry::entryBError1_entry
byte* printEntry::entryBError1_return
byte* printEntry::entryBFlag1_entry
byte* printEntry::entryBFlag1_return
byte* printEntry::entryBufDisk1_entry
byte** printEntry::entryBufDisk1_return
byte* printEntry::entryBufEdit1_entry
byte** printEntry::entryBufEdit1_return
byte* printEntry::entrySLastLink1_entry
byte* printEntry::entrySLastLink1_return
byte* printEntry::entryTHi1_entry
byte* printEntry::entryTHi1_return
byte* printEntry::entryTLastLink1_entry
byte* printEntry::entryTLastLink1_return
byte* printEntry::entryTLo1_entry
byte* printEntry::entryTLo1_return
byte* printEntry::entryTsLen1_entry
word* printEntry::entryTsLen1_return
byte* printEntry::entryTsOrder1_entry
word** printEntry::entryTsOrder1_return
byte* printEntry::entryUCross1_entry
word* printEntry::entryUCross1_return
const byte* printEntry::str[$b]  = "bufdisk   "
const byte* printEntry::str1[$b]  = "bufedit   "
const byte* printEntry::str10[$d]  = "baddrhi     "
const byte* printEntry::str11[$d]  = "thi         "
const byte* printEntry::str12[$d]  = "tlo         "
const byte* printEntry::str2[$b]  = "tslen     "
const byte* printEntry::str3[$b]  = "tsorder   "
const byte* printEntry::str4[$d]  = "tlastlink   "
const byte* printEntry::str5[$d]  = "slastlink   "
const byte* printEntry::str6[$d]  = "bflag       "
const byte* printEntry::str7[$d]  = "berror      "
const byte* printEntry::str8[$b]  = "ucross    "
const byte* printEntry::str9[$d]  = "baddrlo     "
void print_char(byte print_char::ch)
byte print_char::ch
byte print_char::ch#0 reg byte a 2002.0
byte print_char::ch#1 reg byte a 2002.0
byte print_char::ch#2 reg byte a 2002.0
byte print_char::ch#3 reg byte a 13004.0
byte* print_char_cursor
byte* print_char_cursor#1 print_char_cursor zp[2]:10 46.85714285714285
byte* print_char_cursor#10 print_char_cursor zp[2]:10 314.02564102564105
byte* print_char_cursor#146 print_char_cursor zp[2]:10 231.2
byte* print_char_cursor#148 print_char_cursor zp[2]:10 430.33333333333354
byte* print_char_cursor#167 print_char_cursor zp[2]:10 248.0
byte* print_char_cursor#209 print_char_cursor zp[2]:10 4.0
byte* print_char_cursor#210 print_char_cursor zp[2]:10 4.0
byte* print_char_cursor#211 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#212 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#213 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#214 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#215 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#216 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#217 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#218 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#219 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#220 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#221 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#222 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#223 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#227 print_char_cursor zp[2]:10 4.0
byte* print_char_cursor#228 print_char_cursor zp[2]:10 4.0
byte* print_char_cursor#230 print_char_cursor zp[2]:10 4.0
byte* print_char_cursor#231 print_char_cursor zp[2]:10 4.0
byte* print_char_cursor#83 print_char_cursor zp[2]:10 11502.5
void print_cls()
const to_nomodify byte* print_hextab[]  = "0123456789abcdef"z
byte* print_line_cursor
byte* print_line_cursor#0 print_line_cursor zp[2]:16 34.11340206185572
byte* print_line_cursor#155 print_line_cursor_1 zp[2]:4 2.0
byte* print_line_cursor#156 print_line_cursor_1 zp[2]:4 2.0
byte* print_line_cursor#157 print_line_cursor_1 zp[2]:4 2.0
byte* print_line_cursor#158 print_line_cursor_1 zp[2]:4 2.0
byte* print_line_cursor#159 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#160 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#161 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#162 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#163 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#164 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#165 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#166 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#167 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#168 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#169 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#170 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#171 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#173 print_line_cursor_1 zp[2]:4 2002.0
byte* print_line_cursor#33 print_line_cursor_1 zp[2]:4 2103.0
byte* print_line_cursor#65 print_line_cursor_1 zp[2]:4 252.0
void print_ln()
byte* print_screen
const byte* print_screen#0 print_screen = (byte*) 1024
void print_str(byte* print_str::str)
byte* print_str::str
byte* print_str::str#0 str zp[2]:4 2002.0
byte* print_str::str#18 str zp[2]:4 1026.25
byte* print_str::str#21 str zp[2]:4 101.0
void print_uchar(byte print_uchar::b)
byte~ print_uchar::$0 reg byte a 2002.0
byte~ print_uchar::$2 reg byte x 2002.0
byte print_uchar::b
byte print_uchar::b#0 reg byte x 202.0
byte print_uchar::b#1 reg byte x 202.0
byte print_uchar::b#10 reg byte x 573.0
byte print_uchar::b#2 reg byte x 22.0
byte print_uchar::b#3 reg byte x 22.0
byte print_uchar::b#4 reg byte x 22.0
byte print_uchar::b#5 reg byte x 22.0
byte print_uchar::b#6 reg byte x 22.0
byte print_uchar::b#7 reg byte x 22.0
byte print_uchar::b#8 reg byte x 22.0
byte print_uchar::b#9 reg byte x 22.0
void print_uint(word print_uint::w)
word print_uint::w
word print_uint::w#10 w zp[2]:8 22.0
word print_uint::w#2 w zp[2]:8 22.0
word print_uint::w#4 w zp[2]:8 22.0
word print_uint::w#5 w zp[2]:8 85.66666666666666
word print_uint::w#7 w zp[2]:8 22.0
word print_uint::w#8 w zp[2]:8 22.0

reg byte x [ mul8u::a#3 mul8u::a#6 mul8u::a#0 ]
zp[2]:2 [ mul8u::res#2 mul8u::res#6 mul8u::res#1 mul8u::return#2 mul8u::return#3 main::fileEntry1_$0 main::fileEntry2_$0 main::entry2#0 ]
reg byte x [ initEntry::n#10 ]
zp[2]:4 [ print_line_cursor#33 print_line_cursor#65 print_line_cursor#155 print_line_cursor#156 print_line_cursor#157 print_line_cursor#158 print_line_cursor#159 print_line_cursor#160 print_line_cursor#161 print_line_cursor#162 print_line_cursor#163 print_line_cursor#164 print_line_cursor#165 print_line_cursor#166 print_line_cursor#167 print_line_cursor#168 print_line_cursor#169 print_line_cursor#170 print_line_cursor#171 print_line_cursor#173 print_str::str#18 print_str::str#21 print_str::str#0 initEntry::entry#10 initEntry::entry#1 initEntry::entry#0 mul8u::mb#2 mul8u::mb#1 ]
zp[2]:6 [ printEntry::entry#10 printEntry::entry#0 printEntry::entry#1 main::entry1#0 ]
reg byte a [ print_char::ch#3 print_char::ch#0 print_char::ch#1 print_char::ch#2 ]
reg byte x [ print_uchar::b#10 print_uchar::b#6 print_uchar::b#7 print_uchar::b#8 print_uchar::b#9 print_uchar::b#2 print_uchar::b#3 print_uchar::b#4 print_uchar::b#5 print_uchar::b#0 print_uchar::b#1 ]
reg byte a [ keyboard_key_pressed::return#2 ]
reg byte a [ main::$20 ]
reg byte a [ keyboard_key_pressed::return#3 ]
reg byte a [ main::$22 ]
reg byte a [ mul8u::$1 ]
zp[2]:8 [ initEntry::$1 print_uint::w#5 print_uint::w#7 print_uint::w#8 print_uint::w#2 print_uint::w#10 print_uint::w#4 ]
zp[2]:10 [ initEntry::$5 print_char_cursor#83 print_char_cursor#146 print_char_cursor#1 print_char_cursor#167 print_char_cursor#209 print_char_cursor#210 print_char_cursor#211 print_char_cursor#212 print_char_cursor#213 print_char_cursor#214 print_char_cursor#215 print_char_cursor#216 print_char_cursor#217 print_char_cursor#218 print_char_cursor#219 print_char_cursor#220 print_char_cursor#221 print_char_cursor#222 print_char_cursor#223 print_char_cursor#10 print_char_cursor#227 print_char_cursor#228 print_char_cursor#230 print_char_cursor#231 print_char_cursor#148 memset::dst#2 memset::dst#1 ]
zp[2]:12 [ initEntry::$7 ]
reg byte a [ initEntry::$9 ]
reg byte a [ initEntry::$11 ]
reg byte a [ initEntry::$13 ]
reg byte a [ initEntry::$15 ]
zp[2]:14 [ initEntry::$17 ]
reg byte a [ initEntry::$19 ]
reg byte a [ initEntry::$21 ]
reg byte a [ initEntry::$23 ]
reg byte a [ initEntry::$25 ]
zp[2]:16 [ print_line_cursor#0 initEntry::$3 ]
reg byte a [ keyboard_matrix_read::return#2 ]
reg byte a [ keyboard_key_pressed::$2 ]
reg byte a [ keyboard_key_pressed::return#0 ]
reg byte a [ print_uchar::$0 ]
reg byte x [ print_uchar::$2 ]
reg byte a [ keyboard_matrix_read::return#0 ]


FINAL ASSEMBLER
Score: 3913

  // File Comments
// Implementing a semi-struct without the struct keyword by using pointer math and inline functions
//
// struct fileentry {
//    BYTE *bufDisk; // file position in disk buffer.
//    BYTE *bufEdit; // file edits
//    WORD tsLen; // num of sectors
//    TS *tsOrder;
//    BYTE tLastLink;
//    BYTE sLastLink;
//    BYTE bFlag;
//    BYTE bError;
//    WORD uCross; // num of crosslinked sectors
//    BYTE bAddrLo; // start address
//    BYTE bAddrHi;
//    BYTE tHi; // highest track
//    BYTE tLo; // lowest track
//    };
//    typedef struct fileentry ENTRY;
//    ENTRY files[MAX_FILES];
  // Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
  // Global Constants & labels
  .const KEY_SPACE = $3c
  // The size of a file ENTRY
  .const SIZEOF_ENTRY = $12
  // The maximal number of files
  .const MAX_FILES = $90
  .const OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR = 2
  .const OFFSET_STRUCT_MOS6526_CIA_PORT_B_DDR = 3
  .const OFFSET_STRUCT_MOS6526_CIA_PORT_B = 1
  // The CIA#1: keyboard matrix, joystick #1/#2
  .label CIA1 = $dc00
  .label print_screen = $400
  .label print_char_cursor = $a
  .label print_line_cursor = $10
  .label print_line_cursor_1 = 4
  // main
// Initialize 2 file entries and print them
main: {
    .const fileEntry1_idx = 1
    .const fileEntry2_idx = 2
    .label fileEntry1___0 = 2
    .label fileEntry2___0 = 2
    .label entry1 = 6
    .label entry2 = 2
    // keyboard_init()
    // [1] call keyboard_init 
    jsr keyboard_init
    // [2] phi from main to main::fileEntry1 [phi:main->main::fileEntry1]
    // main::fileEntry1
    // mul8u(idx, SIZEOF_ENTRY)
    // [3] call mul8u 
    // [64] phi from main::fileEntry1 to mul8u [phi:main::fileEntry1->mul8u]
    // [64] phi mul8u::a#6 = main::fileEntry1_idx#0 [phi:main::fileEntry1->mul8u#0] -- vbuxx=vbuc1 
    ldx #fileEntry1_idx
    jsr mul8u
    // mul8u(idx, SIZEOF_ENTRY)
    // [4] mul8u::return#2 = mul8u::res#2
    // main::@6
    // [5] main::fileEntry1_$0 = mul8u::return#2
    // files+mul8u(idx, SIZEOF_ENTRY)
    // [6] main::entry1#0 = files + main::fileEntry1_$0 -- pbuz1=pbuc1_plus_vwuz2 
    clc
    lda.z fileEntry1___0
    adc #<files
    sta.z entry1
    lda.z fileEntry1___0+1
    adc #>files
    sta.z entry1+1
    // [7] phi from main::@6 to main::fileEntry2 [phi:main::@6->main::fileEntry2]
    // main::fileEntry2
    // mul8u(idx, SIZEOF_ENTRY)
    // [8] call mul8u 
    // [64] phi from main::fileEntry2 to mul8u [phi:main::fileEntry2->mul8u]
    // [64] phi mul8u::a#6 = main::fileEntry2_idx#0 [phi:main::fileEntry2->mul8u#0] -- vbuxx=vbuc1 
    ldx #fileEntry2_idx
    jsr mul8u
    // mul8u(idx, SIZEOF_ENTRY)
    // [9] mul8u::return#3 = mul8u::res#2
    // main::@7
    // [10] main::fileEntry2_$0 = mul8u::return#3
    // files+mul8u(idx, SIZEOF_ENTRY)
    // [11] main::entry2#0 = files + main::fileEntry2_$0 -- pbuz1=pbuc1_plus_vwuz1 
    clc
    lda.z entry2
    adc #<files
    sta.z entry2
    lda.z entry2+1
    adc #>files
    sta.z entry2+1
    // main::@5
    // initEntry(entry1,0x00)
    // [12] initEntry::entry#0 = main::entry1#0 -- pbuz1=pbuz2 
    lda.z entry1
    sta.z initEntry.entry
    lda.z entry1+1
    sta.z initEntry.entry+1
    // [13] call initEntry 
    // [74] phi from main::@5 to initEntry [phi:main::@5->initEntry]
    // [74] phi initEntry::n#10 = 0 [phi:main::@5->initEntry#0] -- vbuxx=vbuc1 
    ldx #0
    // [74] phi initEntry::entry#10 = initEntry::entry#0 [phi:main::@5->initEntry#1] -- register_copy 
    jsr initEntry
    // main::@8
    // initEntry(entry2,0x11)
    // [14] initEntry::entry#1 = main::entry2#0 -- pbuz1=pbuz2 
    lda.z entry2
    sta.z initEntry.entry
    lda.z entry2+1
    sta.z initEntry.entry+1
    // [15] call initEntry 
    // [74] phi from main::@8 to initEntry [phi:main::@8->initEntry]
    // [74] phi initEntry::n#10 = $11 [phi:main::@8->initEntry#0] -- vbuxx=vbuc1 
    ldx #$11
    // [74] phi initEntry::entry#10 = initEntry::entry#1 [phi:main::@8->initEntry#1] -- register_copy 
    jsr initEntry
    // [16] phi from main::@8 to main::@9 [phi:main::@8->main::@9]
    // main::@9
    // print_cls()
    // [17] call print_cls 
    // [115] phi from main::@9 to print_cls [phi:main::@9->print_cls]
    jsr print_cls
    // [18] phi from main::@9 to main::@10 [phi:main::@9->main::@10]
    // main::@10
    // print_str("** entry 1 **")
    // [19] call print_str 
    // [118] phi from main::@10 to print_str [phi:main::@10->print_str]
    // [118] phi print_char_cursor#167 = print_screen#0 [phi:main::@10->print_str#0] -- pbuz1=pbuc1 
    lda #<print_screen
    sta.z print_char_cursor
    lda #>print_screen
    sta.z print_char_cursor+1
    // [118] phi print_str::str#21 = main::str [phi:main::@10->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    // [20] phi from main::@10 to main::@11 [phi:main::@10->main::@11]
    // main::@11
    // print_ln()
    // [21] call print_ln 
    // [125] phi from main::@11 to print_ln [phi:main::@11->print_ln]
    // [125] phi print_char_cursor#146 = print_char_cursor#1 [phi:main::@11->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_screen#0 [phi:main::@11->print_ln#1] -- pbuz1=pbuc1 
    lda #<print_screen
    sta.z print_line_cursor_1
    lda #>print_screen
    sta.z print_line_cursor_1+1
    jsr print_ln
    // main::@12
    // [22] print_line_cursor#155 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [23] print_char_cursor#227 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_ln()
    // [24] call print_ln 
    // [125] phi from main::@12 to print_ln [phi:main::@12->print_ln]
    // [125] phi print_char_cursor#146 = print_char_cursor#227 [phi:main::@12->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#155 [phi:main::@12->print_ln#1] -- register_copy 
    jsr print_ln
    // main::@13
    // printEntry(entry1)
    // [25] printEntry::entry#0 = main::entry1#0
    // [26] call printEntry 
    // [131] phi from main::@13 to printEntry [phi:main::@13->printEntry]
    // [131] phi printEntry::entry#10 = printEntry::entry#0 [phi:main::@13->printEntry#0] -- register_copy 
    jsr printEntry
    // main::@14
    // [27] print_line_cursor#156 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [28] print_char_cursor#228 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_ln()
    // [29] call print_ln 
    // [125] phi from main::@14 to print_ln [phi:main::@14->print_ln]
    // [125] phi print_char_cursor#146 = print_char_cursor#228 [phi:main::@14->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#156 [phi:main::@14->print_ln#1] -- register_copy 
    jsr print_ln
    // main::@15
    // [30] print_char_cursor#209 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("- press space -")
    // [31] call print_str 
    // [118] phi from main::@15 to print_str [phi:main::@15->print_str]
    // [118] phi print_char_cursor#167 = print_char_cursor#209 [phi:main::@15->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = main::str1 [phi:main::@15->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    // [32] phi from main::@15 main::@16 to main::@1 [phi:main::@15/main::@16->main::@1]
    // main::@1
  __b1:
    // keyboard_key_pressed(KEY_SPACE)
    // [33] call keyboard_key_pressed 
    // [224] phi from main::@1 to keyboard_key_pressed [phi:main::@1->keyboard_key_pressed]
    jsr keyboard_key_pressed
    // keyboard_key_pressed(KEY_SPACE)
    // [34] keyboard_key_pressed::return#2 = keyboard_key_pressed::return#0
    // main::@16
    // [35] main::$20 = keyboard_key_pressed::return#2
    // while(keyboard_key_pressed(KEY_SPACE)==0)
    // [36] if(main::$20==0) goto main::@1 -- vbuaa_eq_0_then_la1 
    cmp #0
    beq __b1
    // [37] phi from main::@16 to main::@2 [phi:main::@16->main::@2]
    // main::@2
    // print_cls()
    // [38] call print_cls 
    // [115] phi from main::@2 to print_cls [phi:main::@2->print_cls]
    jsr print_cls
    // [39] phi from main::@2 to main::@17 [phi:main::@2->main::@17]
    // main::@17
    // print_str("** entry 2 **")
    // [40] call print_str 
    // [118] phi from main::@17 to print_str [phi:main::@17->print_str]
    // [118] phi print_char_cursor#167 = print_screen#0 [phi:main::@17->print_str#0] -- pbuz1=pbuc1 
    lda #<print_screen
    sta.z print_char_cursor
    lda #>print_screen
    sta.z print_char_cursor+1
    // [118] phi print_str::str#21 = main::str2 [phi:main::@17->print_str#1] -- pbuz1=pbuc1 
    lda #<str2
    sta.z print_str.str
    lda #>str2
    sta.z print_str.str+1
    jsr print_str
    // [41] phi from main::@17 to main::@18 [phi:main::@17->main::@18]
    // main::@18
    // print_ln()
    // [42] call print_ln 
    // [125] phi from main::@18 to print_ln [phi:main::@18->print_ln]
    // [125] phi print_char_cursor#146 = print_char_cursor#1 [phi:main::@18->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_screen#0 [phi:main::@18->print_ln#1] -- pbuz1=pbuc1 
    lda #<print_screen
    sta.z print_line_cursor_1
    lda #>print_screen
    sta.z print_line_cursor_1+1
    jsr print_ln
    // main::@19
    // [43] print_line_cursor#157 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [44] print_char_cursor#230 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_ln()
    // [45] call print_ln 
    // [125] phi from main::@19 to print_ln [phi:main::@19->print_ln]
    // [125] phi print_char_cursor#146 = print_char_cursor#230 [phi:main::@19->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#157 [phi:main::@19->print_ln#1] -- register_copy 
    jsr print_ln
    // main::@20
    // printEntry(entry2)
    // [46] printEntry::entry#1 = main::entry2#0 -- pbuz1=pbuz2 
    lda.z entry2
    sta.z printEntry.entry
    lda.z entry2+1
    sta.z printEntry.entry+1
    // [47] call printEntry 
    // [131] phi from main::@20 to printEntry [phi:main::@20->printEntry]
    // [131] phi printEntry::entry#10 = printEntry::entry#1 [phi:main::@20->printEntry#0] -- register_copy 
    jsr printEntry
    // main::@21
    // [48] print_line_cursor#158 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [49] print_char_cursor#231 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_ln()
    // [50] call print_ln 
    // [125] phi from main::@21 to print_ln [phi:main::@21->print_ln]
    // [125] phi print_char_cursor#146 = print_char_cursor#231 [phi:main::@21->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#158 [phi:main::@21->print_ln#1] -- register_copy 
    jsr print_ln
    // main::@22
    // [51] print_char_cursor#210 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("- press space -")
    // [52] call print_str 
    // [118] phi from main::@22 to print_str [phi:main::@22->print_str]
    // [118] phi print_char_cursor#167 = print_char_cursor#210 [phi:main::@22->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = main::str1 [phi:main::@22->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    // [53] phi from main::@22 main::@23 to main::@3 [phi:main::@22/main::@23->main::@3]
    // main::@3
  __b3:
    // keyboard_key_pressed(KEY_SPACE)
    // [54] call keyboard_key_pressed 
    // [224] phi from main::@3 to keyboard_key_pressed [phi:main::@3->keyboard_key_pressed]
    jsr keyboard_key_pressed
    // keyboard_key_pressed(KEY_SPACE)
    // [55] keyboard_key_pressed::return#3 = keyboard_key_pressed::return#0
    // main::@23
    // [56] main::$22 = keyboard_key_pressed::return#3
    // while(keyboard_key_pressed(KEY_SPACE)==0)
    // [57] if(main::$22==0) goto main::@3 -- vbuaa_eq_0_then_la1 
    cmp #0
    beq __b3
    // [58] phi from main::@23 to main::@4 [phi:main::@23->main::@4]
    // main::@4
    // print_cls()
    // [59] call print_cls 
    // [115] phi from main::@4 to print_cls [phi:main::@4->print_cls]
    jsr print_cls
    // main::@return
    // }
    // [60] return 
    rts
    str: .text "** entry 1 **"
    .byte 0
    str1: .text "- press space -"
    .byte 0
    str2: .text "** entry 2 **"
    .byte 0
}
  // keyboard_init
// Initialize keyboard reading by setting CIA#$ Data Direction Registers
keyboard_init: {
    // CIA1->PORT_A_DDR = $ff
    // [61] *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR) = $ff -- _deref_pbuc1=vbuc2 
    // Keyboard Matrix Columns Write Mode
    lda #$ff
    sta CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR
    // CIA1->PORT_B_DDR = $00
    // [62] *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_B_DDR) = 0 -- _deref_pbuc1=vbuc2 
    // Keyboard Matrix Columns Read Mode
    lda #0
    sta CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_B_DDR
    // keyboard_init::@return
    // }
    // [63] return 
    rts
}
  // mul8u
// Perform binary multiplication of two unsigned 8-bit chars into a 16-bit unsigned int
// mul8u(byte register(X) a)
mul8u: {
    .label mb = 4
    .label res = 2
    .label return = 2
    // [65] phi from mul8u to mul8u::@1 [phi:mul8u->mul8u::@1]
    // [65] phi mul8u::mb#2 = (word)SIZEOF_ENTRY [phi:mul8u->mul8u::@1#0] -- vwuz1=vwuc1 
    lda #<SIZEOF_ENTRY
    sta.z mb
    lda #>SIZEOF_ENTRY
    sta.z mb+1
    // [65] phi mul8u::res#2 = 0 [phi:mul8u->mul8u::@1#1] -- vwuz1=vwuc1 
    lda #<0
    sta.z res
    sta.z res+1
    // [65] phi mul8u::a#3 = mul8u::a#6 [phi:mul8u->mul8u::@1#2] -- register_copy 
    // mul8u::@1
  __b1:
    // while(a!=0)
    // [66] if(mul8u::a#3!=0) goto mul8u::@2 -- vbuxx_neq_0_then_la1 
    cpx #0
    bne __b2
    // mul8u::@return
    // }
    // [67] return 
    rts
    // mul8u::@2
  __b2:
    // a&1
    // [68] mul8u::$1 = mul8u::a#3 & 1 -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #1
    // if( (a&1) != 0)
    // [69] if(mul8u::$1==0) goto mul8u::@3 -- vbuaa_eq_0_then_la1 
    cmp #0
    beq __b3
    // mul8u::@4
    // res = res + mb
    // [70] mul8u::res#1 = mul8u::res#2 + mul8u::mb#2 -- vwuz1=vwuz1_plus_vwuz2 
    lda.z res
    clc
    adc.z mb
    sta.z res
    lda.z res+1
    adc.z mb+1
    sta.z res+1
    // [71] phi from mul8u::@2 mul8u::@4 to mul8u::@3 [phi:mul8u::@2/mul8u::@4->mul8u::@3]
    // [71] phi mul8u::res#6 = mul8u::res#2 [phi:mul8u::@2/mul8u::@4->mul8u::@3#0] -- register_copy 
    // mul8u::@3
  __b3:
    // a = a>>1
    // [72] mul8u::a#0 = mul8u::a#3 >> 1 -- vbuxx=vbuxx_ror_1 
    txa
    lsr
    tax
    // mb = mb<<1
    // [73] mul8u::mb#1 = mul8u::mb#2 << 1 -- vwuz1=vwuz1_rol_1 
    asl.z mb
    rol.z mb+1
    // [65] phi from mul8u::@3 to mul8u::@1 [phi:mul8u::@3->mul8u::@1]
    // [65] phi mul8u::mb#2 = mul8u::mb#1 [phi:mul8u::@3->mul8u::@1#0] -- register_copy 
    // [65] phi mul8u::res#2 = mul8u::res#6 [phi:mul8u::@3->mul8u::@1#1] -- register_copy 
    // [65] phi mul8u::a#3 = mul8u::a#0 [phi:mul8u::@3->mul8u::@1#2] -- register_copy 
    jmp __b1
}
  // initEntry
// Set all values in the passed struct
// Sets the values to n, n+1, n... to help test that everything works as intended
// initEntry(byte* zp(4) entry, byte register(X) n)
initEntry: {
    .label __1 = 8
    .label __3 = $10
    .label __5 = $a
    .label __7 = $c
    .label __17 = $e
    .label entry = 4
    // [75] phi from initEntry to initEntry::entryBufDisk1 [phi:initEntry->initEntry::entryBufDisk1]
    // initEntry::entryBufDisk1
    // initEntry::@1
    // 0x1111+n
    // [76] initEntry::$1 = $1111 + initEntry::n#10 -- vwuz1=vwuc1_plus_vbuxx 
    txa
    clc
    adc #<$1111
    sta.z __1
    lda #>$1111
    adc #0
    sta.z __1+1
    // *entryBufDisk(entry) = 0x1111+n
    // [77] *((byte**)initEntry::entry#10) = (byte*)initEntry::$1 -- _deref_qbuz1=pbuz2 
    ldy #0
    lda.z __1
    sta (entry),y
    iny
    lda.z __1+1
    sta (entry),y
    // [78] phi from initEntry::@1 to initEntry::entryBufEdit1 [phi:initEntry::@1->initEntry::entryBufEdit1]
    // initEntry::entryBufEdit1
    // initEntry::@2
    // 0x2222+n
    // [79] initEntry::$3 = $2222 + initEntry::n#10 -- vwuz1=vwuc1_plus_vbuxx 
    txa
    clc
    adc #<$2222
    sta.z __3
    lda #>$2222
    adc #0
    sta.z __3+1
    // *entryBufEdit(entry) = 0x2222+n
    // [80] ((byte**)initEntry::entry#10)[2] = (byte*)initEntry::$3 -- qbuz1_derefidx_vbuc1=pbuz2 
    ldy #2
    lda.z __3
    sta (entry),y
    iny
    lda.z __3+1
    sta (entry),y
    // [81] phi from initEntry::@2 to initEntry::entryTsLen1 [phi:initEntry::@2->initEntry::entryTsLen1]
    // initEntry::entryTsLen1
    // initEntry::@3
    // 0x3333+n
    // [82] initEntry::$5 = $3333 + initEntry::n#10 -- vwuz1=vwuc1_plus_vbuxx 
    txa
    clc
    adc #<$3333
    sta.z __5
    lda #>$3333
    adc #0
    sta.z __5+1
    // *entryTsLen(entry) = 0x3333+n
    // [83] ((word*)initEntry::entry#10)[4] = initEntry::$5 -- pwuz1_derefidx_vbuc1=vwuz2 
    ldy #4
    lda.z __5
    sta (entry),y
    iny
    lda.z __5+1
    sta (entry),y
    // [84] phi from initEntry::@3 to initEntry::entryTsOrder1 [phi:initEntry::@3->initEntry::entryTsOrder1]
    // initEntry::entryTsOrder1
    // initEntry::@4
    // 0x4444+n
    // [85] initEntry::$7 = $4444 + initEntry::n#10 -- vwuz1=vwuc1_plus_vbuxx 
    txa
    clc
    adc #<$4444
    sta.z __7
    lda #>$4444
    adc #0
    sta.z __7+1
    // *entryTsOrder(entry) = 0x4444+n
    // [86] ((word**)initEntry::entry#10)[6] = (word*)initEntry::$7 -- qwuz1_derefidx_vbuc1=pwuz2 
    ldy #6
    lda.z __7
    sta (entry),y
    iny
    lda.z __7+1
    sta (entry),y
    // [87] phi from initEntry::@4 to initEntry::entryTLastLink1 [phi:initEntry::@4->initEntry::entryTLastLink1]
    // initEntry::entryTLastLink1
    // initEntry::@5
    // 0x55+n
    // [88] initEntry::$9 = $55 + initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$55
    // *entryTLastLink(entry) = 0x55+n
    // [89] initEntry::entry#10[8] = initEntry::$9 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #8
    sta (entry),y
    // [90] phi from initEntry::@5 to initEntry::entrySLastLink1 [phi:initEntry::@5->initEntry::entrySLastLink1]
    // initEntry::entrySLastLink1
    // initEntry::@6
    // 0x66+n
    // [91] initEntry::$11 = $66 + initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$66
    // *entrySLastLink(entry) = 0x66+n
    // [92] initEntry::entry#10[9] = initEntry::$11 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #9
    sta (entry),y
    // [93] phi from initEntry::@6 to initEntry::entryBFlag1 [phi:initEntry::@6->initEntry::entryBFlag1]
    // initEntry::entryBFlag1
    // initEntry::@7
    // 0x77+n
    // [94] initEntry::$13 = $77 + initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$77
    // *entryBFlag(entry) = 0x77+n
    // [95] initEntry::entry#10[$a] = initEntry::$13 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #$a
    sta (entry),y
    // [96] phi from initEntry::@7 to initEntry::entryBError1 [phi:initEntry::@7->initEntry::entryBError1]
    // initEntry::entryBError1
    // initEntry::@8
    // 0x88+n
    // [97] initEntry::$15 = $88 + initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$88
    // *entryBError(entry) = 0x88+n
    // [98] initEntry::entry#10[$b] = initEntry::$15 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #$b
    sta (entry),y
    // [99] phi from initEntry::@8 to initEntry::entryUCross1 [phi:initEntry::@8->initEntry::entryUCross1]
    // initEntry::entryUCross1
    // initEntry::@9
    // 0x9999+n
    // [100] initEntry::$17 = $9999 + initEntry::n#10 -- vwuz1=vwuc1_plus_vbuxx 
    txa
    clc
    adc #<$9999
    sta.z __17
    lda #>$9999
    adc #0
    sta.z __17+1
    // *entryUCross(entry) = 0x9999+n
    // [101] ((word*)initEntry::entry#10)[$c] = initEntry::$17 -- pwuz1_derefidx_vbuc1=vwuz2 
    ldy #$c
    lda.z __17
    sta (entry),y
    iny
    lda.z __17+1
    sta (entry),y
    // [102] phi from initEntry::@9 to initEntry::entryBAddrLo1 [phi:initEntry::@9->initEntry::entryBAddrLo1]
    // initEntry::entryBAddrLo1
    // initEntry::@10
    // 0xaa+n
    // [103] initEntry::$19 = $aa + initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$aa
    // *entryBAddrLo(entry) = 0xaa+n
    // [104] initEntry::entry#10[$e] = initEntry::$19 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #$e
    sta (entry),y
    // [105] phi from initEntry::@10 to initEntry::entryBAddrHi1 [phi:initEntry::@10->initEntry::entryBAddrHi1]
    // initEntry::entryBAddrHi1
    // initEntry::@11
    // 0xbb+n
    // [106] initEntry::$21 = $bb + initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$bb
    // *entryBAddrHi(entry) = 0xbb+n
    // [107] initEntry::entry#10[$f] = initEntry::$21 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #$f
    sta (entry),y
    // [108] phi from initEntry::@11 to initEntry::entryTHi1 [phi:initEntry::@11->initEntry::entryTHi1]
    // initEntry::entryTHi1
    // initEntry::@12
    // 0xcc+n
    // [109] initEntry::$23 = $cc + initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$cc
    // *entryTHi(entry) = 0xcc+n
    // [110] initEntry::entry#10[$10] = initEntry::$23 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #$10
    sta (entry),y
    // [111] phi from initEntry::@12 to initEntry::entryTLo1 [phi:initEntry::@12->initEntry::entryTLo1]
    // initEntry::entryTLo1
    // initEntry::@13
    // 0xdd+n
    // [112] initEntry::$25 = $dd + initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$dd
    // *entryTLo(entry) = 0xdd+n
    // [113] initEntry::entry#10[$11] = initEntry::$25 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #$11
    sta (entry),y
    // initEntry::@return
    // }
    // [114] return 
    rts
}
  // print_cls
// Clear the screen. Also resets current line/char cursor.
print_cls: {
    // memset(print_screen, ' ', 1000)
    // [116] call memset 
    // [230] phi from print_cls to memset [phi:print_cls->memset]
    jsr memset
    // print_cls::@return
    // }
    // [117] return 
    rts
}
  // print_str
// Print a zero-terminated string
// print_str(byte* zp(4) str)
print_str: {
    .label str = 4
    // [119] phi from print_str print_str::@3 to print_str::@1 [phi:print_str/print_str::@3->print_str::@1]
    // [119] phi print_char_cursor#1 = print_char_cursor#167 [phi:print_str/print_str::@3->print_str::@1#0] -- register_copy 
    // [119] phi print_str::str#18 = print_str::str#21 [phi:print_str/print_str::@3->print_str::@1#1] -- register_copy 
    // print_str::@1
  __b1:
    // while(*str)
    // [120] if(0!=*print_str::str#18) goto print_str::@2 -- vbuc1_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (str),y
    cmp #0
    bne __b2
    // print_str::@return
    // }
    // [121] return 
    rts
    // print_str::@2
  __b2:
    // print_char(*(str++))
    // [122] print_char::ch#0 = *print_str::str#18 -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (str),y
    // [123] call print_char 
    // [236] phi from print_str::@2 to print_char [phi:print_str::@2->print_char]
    // [236] phi print_char_cursor#83 = print_char_cursor#1 [phi:print_str::@2->print_char#0] -- register_copy 
    // [236] phi print_char::ch#3 = print_char::ch#0 [phi:print_str::@2->print_char#1] -- register_copy 
    jsr print_char
    // print_str::@3
    // print_char(*(str++));
    // [124] print_str::str#0 = ++ print_str::str#18 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    jmp __b1
}
  // print_ln
// Print a newline
print_ln: {
    // [126] phi from print_ln print_ln::@2 to print_ln::@1 [phi:print_ln/print_ln::@2->print_ln::@1]
    // [126] phi print_line_cursor#33 = print_line_cursor#65 [phi:print_ln/print_ln::@2->print_ln::@1#0] -- register_copy 
    // print_ln::@1
  __b1:
    // print_line_cursor + $28
    // [127] print_line_cursor#0 = print_line_cursor#33 + $28 -- pbuz1=pbuz2_plus_vbuc1 
    lda #$28
    clc
    adc.z print_line_cursor_1
    sta.z print_line_cursor
    lda #0
    adc.z print_line_cursor_1+1
    sta.z print_line_cursor+1
    // while (print_line_cursor<print_char_cursor)
    // [128] if(print_line_cursor#0<print_char_cursor#146) goto print_ln::@2 -- pbuz1_lt_pbuz2_then_la1 
    cmp.z print_char_cursor+1
    bcc __b2
    bne !+
    lda.z print_line_cursor
    cmp.z print_char_cursor
    bcc __b2
  !:
    // print_ln::@return
    // }
    // [129] return 
    rts
    // print_ln::@2
  __b2:
    // [130] print_line_cursor#173 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    jmp __b1
}
  // printEntry
// Print the contents of a file entry
// printEntry(byte* zp(6) entry)
printEntry: {
    .label entry = 6
    // [132] print_char_cursor#211 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("bufdisk   ")
    // [133] call print_str 
    // [118] phi from printEntry to print_str [phi:printEntry->print_str]
    // [118] phi print_char_cursor#167 = print_char_cursor#211 [phi:printEntry->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str [phi:printEntry->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    // [134] phi from printEntry to printEntry::entryBufDisk1 [phi:printEntry->printEntry::entryBufDisk1]
    // printEntry::entryBufDisk1
    // printEntry::@1
    // [135] print_uint::w#7 = (word)*((byte**)printEntry::entry#10) -- vwuz1=_deref_pwuz2 
    ldy #0
    lda (entry),y
    sta.z print_uint.w
    iny
    lda (entry),y
    sta.z print_uint.w+1
    // print_uint((word)*entryBufDisk(entry))
    // [136] call print_uint 
    // [240] phi from printEntry::@1 to print_uint [phi:printEntry::@1->print_uint]
    // [240] phi print_uint::w#5 = print_uint::w#7 [phi:printEntry::@1->print_uint#0] -- register_copy 
    jsr print_uint
    // printEntry::@14
    // [137] print_line_cursor#159 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [138] call print_ln 
    // [125] phi from printEntry::@14 to print_ln [phi:printEntry::@14->print_ln]
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@14->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#159 [phi:printEntry::@14->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@15
    // [139] print_char_cursor#212 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("bufedit   ")
    // [140] call print_str 
    // [118] phi from printEntry::@15 to print_str [phi:printEntry::@15->print_str]
    // [118] phi print_char_cursor#167 = print_char_cursor#212 [phi:printEntry::@15->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str1 [phi:printEntry::@15->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    // [141] phi from printEntry::@15 to printEntry::entryBufEdit1 [phi:printEntry::@15->printEntry::entryBufEdit1]
    // printEntry::entryBufEdit1
    // printEntry::@2
    // [142] print_uint::w#8 = (word)((byte**)printEntry::entry#10)[2] -- vwuz1=pwuz2_derefidx_vbuc1 
    ldy #2
    lda (entry),y
    sta.z print_uint.w
    iny
    lda (entry),y
    sta.z print_uint.w+1
    // print_uint((word)*entryBufEdit(entry))
    // [143] call print_uint 
    // [240] phi from printEntry::@2 to print_uint [phi:printEntry::@2->print_uint]
    // [240] phi print_uint::w#5 = print_uint::w#8 [phi:printEntry::@2->print_uint#0] -- register_copy 
    jsr print_uint
    // printEntry::@16
    // [144] print_line_cursor#160 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [145] call print_ln 
    // [125] phi from printEntry::@16 to print_ln [phi:printEntry::@16->print_ln]
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@16->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#160 [phi:printEntry::@16->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@17
    // [146] print_char_cursor#213 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("tslen     ")
    // [147] call print_str 
    // [118] phi from printEntry::@17 to print_str [phi:printEntry::@17->print_str]
    // [118] phi print_char_cursor#167 = print_char_cursor#213 [phi:printEntry::@17->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str2 [phi:printEntry::@17->print_str#1] -- pbuz1=pbuc1 
    lda #<str2
    sta.z print_str.str
    lda #>str2
    sta.z print_str.str+1
    jsr print_str
    // [148] phi from printEntry::@17 to printEntry::entryTsLen1 [phi:printEntry::@17->printEntry::entryTsLen1]
    // printEntry::entryTsLen1
    // printEntry::@3
    // print_uint(*entryTsLen(entry))
    // [149] print_uint::w#2 = ((word*)printEntry::entry#10)[4] -- vwuz1=pwuz2_derefidx_vbuc1 
    ldy #4
    lda (entry),y
    sta.z print_uint.w
    iny
    lda (entry),y
    sta.z print_uint.w+1
    // [150] call print_uint 
    // [240] phi from printEntry::@3 to print_uint [phi:printEntry::@3->print_uint]
    // [240] phi print_uint::w#5 = print_uint::w#2 [phi:printEntry::@3->print_uint#0] -- register_copy 
    jsr print_uint
    // printEntry::@18
    // [151] print_line_cursor#161 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [152] call print_ln 
    // [125] phi from printEntry::@18 to print_ln [phi:printEntry::@18->print_ln]
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@18->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#161 [phi:printEntry::@18->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@19
    // [153] print_char_cursor#214 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("tsorder   ")
    // [154] call print_str 
    // [118] phi from printEntry::@19 to print_str [phi:printEntry::@19->print_str]
    // [118] phi print_char_cursor#167 = print_char_cursor#214 [phi:printEntry::@19->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str3 [phi:printEntry::@19->print_str#1] -- pbuz1=pbuc1 
    lda #<str3
    sta.z print_str.str
    lda #>str3
    sta.z print_str.str+1
    jsr print_str
    // [155] phi from printEntry::@19 to printEntry::entryTsOrder1 [phi:printEntry::@19->printEntry::entryTsOrder1]
    // printEntry::entryTsOrder1
    // printEntry::@4
    // [156] print_uint::w#10 = (word)((word**)printEntry::entry#10)[6] -- vwuz1=pwuz2_derefidx_vbuc1 
    ldy #6
    lda (entry),y
    sta.z print_uint.w
    iny
    lda (entry),y
    sta.z print_uint.w+1
    // print_uint((word)*entryTsOrder(entry))
    // [157] call print_uint 
    // [240] phi from printEntry::@4 to print_uint [phi:printEntry::@4->print_uint]
    // [240] phi print_uint::w#5 = print_uint::w#10 [phi:printEntry::@4->print_uint#0] -- register_copy 
    jsr print_uint
    // printEntry::@20
    // [158] print_line_cursor#162 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [159] call print_ln 
    // [125] phi from printEntry::@20 to print_ln [phi:printEntry::@20->print_ln]
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@20->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#162 [phi:printEntry::@20->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@21
    // [160] print_char_cursor#215 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("tlastlink   ")
    // [161] call print_str 
    // [118] phi from printEntry::@21 to print_str [phi:printEntry::@21->print_str]
    // [118] phi print_char_cursor#167 = print_char_cursor#215 [phi:printEntry::@21->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str4 [phi:printEntry::@21->print_str#1] -- pbuz1=pbuc1 
    lda #<str4
    sta.z print_str.str
    lda #>str4
    sta.z print_str.str+1
    jsr print_str
    // [162] phi from printEntry::@21 to printEntry::entryTLastLink1 [phi:printEntry::@21->printEntry::entryTLastLink1]
    // printEntry::entryTLastLink1
    // printEntry::@5
    // print_uchar(*entryTLastLink(entry))
    // [163] print_uchar::b#2 = printEntry::entry#10[8] -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #8
    lda (entry),y
    tax
    // [164] call print_uchar 
    // [246] phi from printEntry::@5 to print_uchar [phi:printEntry::@5->print_uchar]
    // [246] phi print_char_cursor#148 = print_char_cursor#1 [phi:printEntry::@5->print_uchar#0] -- register_copy 
    // [246] phi print_uchar::b#10 = print_uchar::b#2 [phi:printEntry::@5->print_uchar#1] -- register_copy 
    jsr print_uchar
    // printEntry::@22
    // [165] print_line_cursor#163 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [166] call print_ln 
    // [125] phi from printEntry::@22 to print_ln [phi:printEntry::@22->print_ln]
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@22->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#163 [phi:printEntry::@22->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@23
    // [167] print_char_cursor#216 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("slastlink   ")
    // [168] call print_str 
    // [118] phi from printEntry::@23 to print_str [phi:printEntry::@23->print_str]
    // [118] phi print_char_cursor#167 = print_char_cursor#216 [phi:printEntry::@23->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str5 [phi:printEntry::@23->print_str#1] -- pbuz1=pbuc1 
    lda #<str5
    sta.z print_str.str
    lda #>str5
    sta.z print_str.str+1
    jsr print_str
    // [169] phi from printEntry::@23 to printEntry::entrySLastLink1 [phi:printEntry::@23->printEntry::entrySLastLink1]
    // printEntry::entrySLastLink1
    // printEntry::@6
    // print_uchar(*entrySLastLink(entry))
    // [170] print_uchar::b#3 = printEntry::entry#10[9] -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #9
    lda (entry),y
    tax
    // [171] call print_uchar 
    // [246] phi from printEntry::@6 to print_uchar [phi:printEntry::@6->print_uchar]
    // [246] phi print_char_cursor#148 = print_char_cursor#1 [phi:printEntry::@6->print_uchar#0] -- register_copy 
    // [246] phi print_uchar::b#10 = print_uchar::b#3 [phi:printEntry::@6->print_uchar#1] -- register_copy 
    jsr print_uchar
    // printEntry::@24
    // [172] print_line_cursor#164 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [173] call print_ln 
    // [125] phi from printEntry::@24 to print_ln [phi:printEntry::@24->print_ln]
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@24->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#164 [phi:printEntry::@24->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@25
    // [174] print_char_cursor#217 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("bflag       ")
    // [175] call print_str 
    // [118] phi from printEntry::@25 to print_str [phi:printEntry::@25->print_str]
    // [118] phi print_char_cursor#167 = print_char_cursor#217 [phi:printEntry::@25->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str6 [phi:printEntry::@25->print_str#1] -- pbuz1=pbuc1 
    lda #<str6
    sta.z print_str.str
    lda #>str6
    sta.z print_str.str+1
    jsr print_str
    // [176] phi from printEntry::@25 to printEntry::entryBFlag1 [phi:printEntry::@25->printEntry::entryBFlag1]
    // printEntry::entryBFlag1
    // printEntry::@7
    // print_uchar(*entryBFlag(entry))
    // [177] print_uchar::b#4 = printEntry::entry#10[$a] -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #$a
    lda (entry),y
    tax
    // [178] call print_uchar 
    // [246] phi from printEntry::@7 to print_uchar [phi:printEntry::@7->print_uchar]
    // [246] phi print_char_cursor#148 = print_char_cursor#1 [phi:printEntry::@7->print_uchar#0] -- register_copy 
    // [246] phi print_uchar::b#10 = print_uchar::b#4 [phi:printEntry::@7->print_uchar#1] -- register_copy 
    jsr print_uchar
    // printEntry::@26
    // [179] print_line_cursor#165 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [180] call print_ln 
    // [125] phi from printEntry::@26 to print_ln [phi:printEntry::@26->print_ln]
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@26->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#165 [phi:printEntry::@26->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@27
    // [181] print_char_cursor#218 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("berror      ")
    // [182] call print_str 
    // [118] phi from printEntry::@27 to print_str [phi:printEntry::@27->print_str]
    // [118] phi print_char_cursor#167 = print_char_cursor#218 [phi:printEntry::@27->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str7 [phi:printEntry::@27->print_str#1] -- pbuz1=pbuc1 
    lda #<str7
    sta.z print_str.str
    lda #>str7
    sta.z print_str.str+1
    jsr print_str
    // [183] phi from printEntry::@27 to printEntry::entryBError1 [phi:printEntry::@27->printEntry::entryBError1]
    // printEntry::entryBError1
    // printEntry::@8
    // print_uchar(*entryBError(entry))
    // [184] print_uchar::b#5 = printEntry::entry#10[$b] -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #$b
    lda (entry),y
    tax
    // [185] call print_uchar 
    // [246] phi from printEntry::@8 to print_uchar [phi:printEntry::@8->print_uchar]
    // [246] phi print_char_cursor#148 = print_char_cursor#1 [phi:printEntry::@8->print_uchar#0] -- register_copy 
    // [246] phi print_uchar::b#10 = print_uchar::b#5 [phi:printEntry::@8->print_uchar#1] -- register_copy 
    jsr print_uchar
    // printEntry::@28
    // [186] print_line_cursor#166 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [187] call print_ln 
    // [125] phi from printEntry::@28 to print_ln [phi:printEntry::@28->print_ln]
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@28->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#166 [phi:printEntry::@28->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@29
    // [188] print_char_cursor#219 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("ucross    ")
    // [189] call print_str 
    // [118] phi from printEntry::@29 to print_str [phi:printEntry::@29->print_str]
    // [118] phi print_char_cursor#167 = print_char_cursor#219 [phi:printEntry::@29->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str8 [phi:printEntry::@29->print_str#1] -- pbuz1=pbuc1 
    lda #<str8
    sta.z print_str.str
    lda #>str8
    sta.z print_str.str+1
    jsr print_str
    // [190] phi from printEntry::@29 to printEntry::entryUCross1 [phi:printEntry::@29->printEntry::entryUCross1]
    // printEntry::entryUCross1
    // printEntry::@9
    // print_uint(*entryUCross(entry))
    // [191] print_uint::w#4 = ((word*)printEntry::entry#10)[$c] -- vwuz1=pwuz2_derefidx_vbuc1 
    ldy #$c
    lda (entry),y
    sta.z print_uint.w
    iny
    lda (entry),y
    sta.z print_uint.w+1
    // [192] call print_uint 
    // [240] phi from printEntry::@9 to print_uint [phi:printEntry::@9->print_uint]
    // [240] phi print_uint::w#5 = print_uint::w#4 [phi:printEntry::@9->print_uint#0] -- register_copy 
    jsr print_uint
    // printEntry::@30
    // [193] print_line_cursor#167 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [194] call print_ln 
    // [125] phi from printEntry::@30 to print_ln [phi:printEntry::@30->print_ln]
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@30->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#167 [phi:printEntry::@30->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@31
    // [195] print_char_cursor#220 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("baddrlo     ")
    // [196] call print_str 
    // [118] phi from printEntry::@31 to print_str [phi:printEntry::@31->print_str]
    // [118] phi print_char_cursor#167 = print_char_cursor#220 [phi:printEntry::@31->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str9 [phi:printEntry::@31->print_str#1] -- pbuz1=pbuc1 
    lda #<str9
    sta.z print_str.str
    lda #>str9
    sta.z print_str.str+1
    jsr print_str
    // [197] phi from printEntry::@31 to printEntry::entryBAddrLo1 [phi:printEntry::@31->printEntry::entryBAddrLo1]
    // printEntry::entryBAddrLo1
    // printEntry::@10
    // print_uchar(*entryBAddrLo(entry))
    // [198] print_uchar::b#6 = printEntry::entry#10[$e] -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #$e
    lda (entry),y
    tax
    // [199] call print_uchar 
    // [246] phi from printEntry::@10 to print_uchar [phi:printEntry::@10->print_uchar]
    // [246] phi print_char_cursor#148 = print_char_cursor#1 [phi:printEntry::@10->print_uchar#0] -- register_copy 
    // [246] phi print_uchar::b#10 = print_uchar::b#6 [phi:printEntry::@10->print_uchar#1] -- register_copy 
    jsr print_uchar
    // printEntry::@32
    // [200] print_line_cursor#168 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [201] call print_ln 
    // [125] phi from printEntry::@32 to print_ln [phi:printEntry::@32->print_ln]
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@32->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#168 [phi:printEntry::@32->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@33
    // [202] print_char_cursor#221 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("baddrhi     ")
    // [203] call print_str 
    // [118] phi from printEntry::@33 to print_str [phi:printEntry::@33->print_str]
    // [118] phi print_char_cursor#167 = print_char_cursor#221 [phi:printEntry::@33->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str10 [phi:printEntry::@33->print_str#1] -- pbuz1=pbuc1 
    lda #<str10
    sta.z print_str.str
    lda #>str10
    sta.z print_str.str+1
    jsr print_str
    // [204] phi from printEntry::@33 to printEntry::entryBAddrHi1 [phi:printEntry::@33->printEntry::entryBAddrHi1]
    // printEntry::entryBAddrHi1
    // printEntry::@11
    // print_uchar(*entryBAddrHi(entry))
    // [205] print_uchar::b#7 = printEntry::entry#10[$f] -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #$f
    lda (entry),y
    tax
    // [206] call print_uchar 
    // [246] phi from printEntry::@11 to print_uchar [phi:printEntry::@11->print_uchar]
    // [246] phi print_char_cursor#148 = print_char_cursor#1 [phi:printEntry::@11->print_uchar#0] -- register_copy 
    // [246] phi print_uchar::b#10 = print_uchar::b#7 [phi:printEntry::@11->print_uchar#1] -- register_copy 
    jsr print_uchar
    // printEntry::@34
    // [207] print_line_cursor#169 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [208] call print_ln 
    // [125] phi from printEntry::@34 to print_ln [phi:printEntry::@34->print_ln]
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@34->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#169 [phi:printEntry::@34->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@35
    // [209] print_char_cursor#222 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("thi         ")
    // [210] call print_str 
    // [118] phi from printEntry::@35 to print_str [phi:printEntry::@35->print_str]
    // [118] phi print_char_cursor#167 = print_char_cursor#222 [phi:printEntry::@35->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str11 [phi:printEntry::@35->print_str#1] -- pbuz1=pbuc1 
    lda #<str11
    sta.z print_str.str
    lda #>str11
    sta.z print_str.str+1
    jsr print_str
    // [211] phi from printEntry::@35 to printEntry::entryTHi1 [phi:printEntry::@35->printEntry::entryTHi1]
    // printEntry::entryTHi1
    // printEntry::@12
    // print_uchar(*entryTHi(entry))
    // [212] print_uchar::b#8 = printEntry::entry#10[$10] -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #$10
    lda (entry),y
    tax
    // [213] call print_uchar 
    // [246] phi from printEntry::@12 to print_uchar [phi:printEntry::@12->print_uchar]
    // [246] phi print_char_cursor#148 = print_char_cursor#1 [phi:printEntry::@12->print_uchar#0] -- register_copy 
    // [246] phi print_uchar::b#10 = print_uchar::b#8 [phi:printEntry::@12->print_uchar#1] -- register_copy 
    jsr print_uchar
    // printEntry::@36
    // [214] print_line_cursor#170 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [215] call print_ln 
    // [125] phi from printEntry::@36 to print_ln [phi:printEntry::@36->print_ln]
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@36->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#170 [phi:printEntry::@36->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@37
    // [216] print_char_cursor#223 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("tlo         ")
    // [217] call print_str 
    // [118] phi from printEntry::@37 to print_str [phi:printEntry::@37->print_str]
    // [118] phi print_char_cursor#167 = print_char_cursor#223 [phi:printEntry::@37->print_str#0] -- register_copy 
    // [118] phi print_str::str#21 = printEntry::str12 [phi:printEntry::@37->print_str#1] -- pbuz1=pbuc1 
    lda #<str12
    sta.z print_str.str
    lda #>str12
    sta.z print_str.str+1
    jsr print_str
    // [218] phi from printEntry::@37 to printEntry::entryTLo1 [phi:printEntry::@37->printEntry::entryTLo1]
    // printEntry::entryTLo1
    // printEntry::@13
    // print_uchar(*entryTLo(entry))
    // [219] print_uchar::b#9 = printEntry::entry#10[$11] -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #$11
    lda (entry),y
    tax
    // [220] call print_uchar 
    // [246] phi from printEntry::@13 to print_uchar [phi:printEntry::@13->print_uchar]
    // [246] phi print_char_cursor#148 = print_char_cursor#1 [phi:printEntry::@13->print_uchar#0] -- register_copy 
    // [246] phi print_uchar::b#10 = print_uchar::b#9 [phi:printEntry::@13->print_uchar#1] -- register_copy 
    jsr print_uchar
    // printEntry::@38
    // [221] print_line_cursor#171 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [222] call print_ln 
    // [125] phi from printEntry::@38 to print_ln [phi:printEntry::@38->print_ln]
    // [125] phi print_char_cursor#146 = print_char_cursor#10 [phi:printEntry::@38->print_ln#0] -- register_copy 
    // [125] phi print_line_cursor#65 = print_line_cursor#171 [phi:printEntry::@38->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@return
    // }
    // [223] return 
    rts
    str: .text "bufdisk   "
    .byte 0
    str1: .text "bufedit   "
    .byte 0
    str2: .text "tslen     "
    .byte 0
    str3: .text "tsorder   "
    .byte 0
    str4: .text "tlastlink   "
    .byte 0
    str5: .text "slastlink   "
    .byte 0
    str6: .text "bflag       "
    .byte 0
    str7: .text "berror      "
    .byte 0
    str8: .text "ucross    "
    .byte 0
    str9: .text "baddrlo     "
    .byte 0
    str10: .text "baddrhi     "
    .byte 0
    str11: .text "thi         "
    .byte 0
    str12: .text "tlo         "
    .byte 0
}
  // keyboard_key_pressed
// Determines whether a specific key is currently pressed by accessing the matrix directly
// The key is a keyboard code defined from the keyboard matrix by %00rrrccc, where rrr is the row ID (0-7) and ccc is the column ID (0-7)
// All keys exist as as KEY_XXX constants.
// Returns zero if the key is not pressed and a non-zero value if the key is currently pressed
keyboard_key_pressed: {
    .const colidx = KEY_SPACE&7
    .label rowidx = KEY_SPACE>>3
    // keyboard_matrix_read(rowidx)
    // [225] call keyboard_matrix_read 
    jsr keyboard_matrix_read
    // [226] keyboard_matrix_read::return#2 = keyboard_matrix_read::return#0
    // keyboard_key_pressed::@1
    // [227] keyboard_key_pressed::$2 = keyboard_matrix_read::return#2
    // keyboard_matrix_read(rowidx) & keyboard_matrix_col_bitmask[colidx]
    // [228] keyboard_key_pressed::return#0 = keyboard_key_pressed::$2 & *(keyboard_matrix_col_bitmask+keyboard_key_pressed::colidx#0) -- vbuaa=vbuaa_band__deref_pbuc1 
    and keyboard_matrix_col_bitmask+colidx
    // keyboard_key_pressed::@return
    // }
    // [229] return 
    rts
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
memset: {
    .const c = ' '
    .const num = $3e8
    .label str = print_screen
    .label end = str+num
    .label dst = $a
    // [231] phi from memset to memset::@1 [phi:memset->memset::@1]
    // [231] phi memset::dst#2 = (byte*)memset::str#0 [phi:memset->memset::@1#0] -- pbuz1=pbuc1 
    lda #<str
    sta.z dst
    lda #>str
    sta.z dst+1
    // memset::@1
  __b1:
    // for(char* dst = str; dst!=end; dst++)
    // [232] if(memset::dst#2!=memset::end#0) goto memset::@2 -- pbuz1_neq_pbuc1_then_la1 
    lda.z dst+1
    cmp #>end
    bne __b2
    lda.z dst
    cmp #<end
    bne __b2
    // memset::@return
    // }
    // [233] return 
    rts
    // memset::@2
  __b2:
    // *dst = c
    // [234] *memset::dst#2 = memset::c#0 -- _deref_pbuz1=vbuc1 
    lda #c
    ldy #0
    sta (dst),y
    // for(char* dst = str; dst!=end; dst++)
    // [235] memset::dst#1 = ++ memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [231] phi from memset::@2 to memset::@1 [phi:memset::@2->memset::@1]
    // [231] phi memset::dst#2 = memset::dst#1 [phi:memset::@2->memset::@1#0] -- register_copy 
    jmp __b1
}
  // print_char
// Print a single char
// print_char(byte register(A) ch)
print_char: {
    // *(print_char_cursor++) = ch
    // [237] *print_char_cursor#83 = print_char::ch#3 -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (print_char_cursor),y
    // *(print_char_cursor++) = ch;
    // [238] print_char_cursor#10 = ++ print_char_cursor#83 -- pbuz1=_inc_pbuz1 
    inc.z print_char_cursor
    bne !+
    inc.z print_char_cursor+1
  !:
    // print_char::@return
    // }
    // [239] return 
    rts
}
  // print_uint
// Print a unsigned int as HEX
// print_uint(word zp(8) w)
print_uint: {
    .label w = 8
    // print_uchar(>w)
    // [241] print_uchar::b#0 = > print_uint::w#5 -- vbuxx=_hi_vwuz1 
    ldx.z w+1
    // [242] call print_uchar 
    // [246] phi from print_uint to print_uchar [phi:print_uint->print_uchar]
    // [246] phi print_char_cursor#148 = print_char_cursor#1 [phi:print_uint->print_uchar#0] -- register_copy 
    // [246] phi print_uchar::b#10 = print_uchar::b#0 [phi:print_uint->print_uchar#1] -- register_copy 
    jsr print_uchar
    // print_uint::@1
    // print_uchar(<w)
    // [243] print_uchar::b#1 = < print_uint::w#5 -- vbuxx=_lo_vwuz1 
    ldx.z w
    // [244] call print_uchar 
    // [246] phi from print_uint::@1 to print_uchar [phi:print_uint::@1->print_uchar]
    // [246] phi print_char_cursor#148 = print_char_cursor#10 [phi:print_uint::@1->print_uchar#0] -- register_copy 
    // [246] phi print_uchar::b#10 = print_uchar::b#1 [phi:print_uint::@1->print_uchar#1] -- register_copy 
    jsr print_uchar
    // print_uint::@return
    // }
    // [245] return 
    rts
}
  // print_uchar
// Print a char as HEX
// print_uchar(byte register(X) b)
print_uchar: {
    // b>>4
    // [247] print_uchar::$0 = print_uchar::b#10 >> 4 -- vbuaa=vbuxx_ror_4 
    txa
    lsr
    lsr
    lsr
    lsr
    // print_char(print_hextab[b>>4])
    // [248] print_char::ch#1 = print_hextab[print_uchar::$0] -- vbuaa=pbuc1_derefidx_vbuaa 
    tay
    lda print_hextab,y
    // [249] call print_char 
  // Table of hexadecimal digits
    // [236] phi from print_uchar to print_char [phi:print_uchar->print_char]
    // [236] phi print_char_cursor#83 = print_char_cursor#148 [phi:print_uchar->print_char#0] -- register_copy 
    // [236] phi print_char::ch#3 = print_char::ch#1 [phi:print_uchar->print_char#1] -- register_copy 
    jsr print_char
    // print_uchar::@1
    // b&$f
    // [250] print_uchar::$2 = print_uchar::b#10 & $f -- vbuxx=vbuxx_band_vbuc1 
    lda #$f
    axs #0
    // print_char(print_hextab[b&$f])
    // [251] print_char::ch#2 = print_hextab[print_uchar::$2] -- vbuaa=pbuc1_derefidx_vbuxx 
    lda print_hextab,x
    // [252] call print_char 
    // [236] phi from print_uchar::@1 to print_char [phi:print_uchar::@1->print_char]
    // [236] phi print_char_cursor#83 = print_char_cursor#10 [phi:print_uchar::@1->print_char#0] -- register_copy 
    // [236] phi print_char::ch#3 = print_char::ch#2 [phi:print_uchar::@1->print_char#1] -- register_copy 
    jsr print_char
    // print_uchar::@return
    // }
    // [253] return 
    rts
}
  // keyboard_matrix_read
// Read a single row of the keyboard matrix
// The row ID (0-7) of the keyboard matrix row to read. See the C64 key matrix for row IDs.
// Returns the keys pressed on the row as bits according to the C64 key matrix.
// Notice: If the C64 normal interrupt is still running it will occasionally interrupt right between the read & write
// leading to erroneous readings. You must disable the normal interrupt or sei/cli around calls to the keyboard matrix reader.
keyboard_matrix_read: {
    // CIA1->PORT_A = keyboard_matrix_row_bitmask[rowid]
    // [254] *((byte*)CIA1) = *(keyboard_matrix_row_bitmask+keyboard_key_pressed::rowidx#0) -- _deref_pbuc1=_deref_pbuc2 
    lda keyboard_matrix_row_bitmask+keyboard_key_pressed.rowidx
    sta CIA1
    // ~CIA1->PORT_B
    // [255] keyboard_matrix_read::return#0 = ~ *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_B) -- vbuaa=_bnot__deref_pbuc1 
    lda CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_B
    eor #$ff
    // keyboard_matrix_read::@return
    // }
    // [256] return 
    rts
}
  // File Data
  print_hextab: .text "0123456789abcdef"
  // Keyboard row bitmask as expected by CIA#1 Port A when reading a specific keyboard matrix row (rows are numbered 0-7)
  keyboard_matrix_row_bitmask: .byte $fe, $fd, $fb, $f7, $ef, $df, $bf, $7f
  // Keyboard matrix column bitmasks for a specific keybooard matrix column when reading the keyboard. (columns are numbered 0-7)
  keyboard_matrix_col_bitmask: .byte 1, 2, 4, 8, $10, $20, $40, $80
  // All files
  files: .fill MAX_FILES*SIZEOF_ENTRY, 0

