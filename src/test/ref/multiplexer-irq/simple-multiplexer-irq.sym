const nomodify byte* BORDER_COLOR = (byte*) 53280
const nomodify struct MOS6526_CIA* CIA1 = (struct MOS6526_CIA*) 56320
const nomodify byte CIA_INTERRUPT_CLEAR = $7f
const nomodify byte* D011 = (byte*) 53265
const nomodify byte GREEN = 5
const nomodify byte* IRQ_ENABLE = (byte*) 53274
const nomodify byte IRQ_RASTER = 1
const nomodify byte* IRQ_STATUS = (byte*) 53273
const nomodify void()** KERNEL_IRQ = (void()**) 788
const byte OFFSET_STRUCT_MOS6526_CIA_INTERRUPT = $d
const nomodify byte PLEX_COUNT = $20
const byte* PLEX_FREE_YPOS[8]  = { fill( 8, 0) }
const byte* PLEX_PTR[PLEX_COUNT]  = { fill( PLEX_COUNT, 0) }
byte* PLEX_SCREEN_PTR
byte* PLEX_SCREEN_PTR#30 PLEX_SCREEN_PTR zp[2]:2 2.8857142857142857
const byte* PLEX_SORTED_IDX[PLEX_COUNT]  = { fill( PLEX_COUNT, 0) }
const word* PLEX_XPOS[PLEX_COUNT]  = { fill( PLEX_COUNT, 0) }
const byte* PLEX_YPOS[PLEX_COUNT]  = { fill( PLEX_COUNT, 0) }
const nomodify byte* RASTER = (byte*) 53266
const nomodify byte RED = 2
const byte* SPRITE[$40]  = kickasm {{ .var pic = LoadPicture("balloon.png", List().add($000000, $ffffff))
    .for (var y=0; y<21; y++)
        .for (var x=0;x<3; x++)
            .byte pic.getSinglecolorByte(x,y)
 }}
const nomodify byte* SPRITES_COLOR = (byte*) 53287
const nomodify byte* SPRITES_ENABLE = (byte*) 53269
const nomodify byte* SPRITES_XMSB = (byte*) 53264
const nomodify byte* SPRITES_XPOS = (byte*) 53248
const nomodify byte* SPRITES_YPOS = (byte*) 53249
const nomodify byte* VIC_CONTROL = (byte*) 53265
const nomodify byte VIC_DEN = $10
const nomodify byte VIC_RSEL = 8
const nomodify byte WHITE = 1
const byte* YSIN[$100]  = kickasm {{ .fill $100, round(139.5+89.5*sin(toRadians(360*i/256)))
 }}
void __start()
volatile bool framedone loadstore zp[1]:12 1222.8888888888887
void init()
byte~ init::$3 reg byte a 2002.0
byte init::ss
byte init::ss#1 reg byte x 1501.5
byte init::ss#2 reg byte x 1501.5
byte init::sx
byte init::sx#1 reg byte x 1501.5
byte init::sx#2 reg byte x 800.8
word init::xp
word init::xp#1 xp zp[2]:4 667.3333333333334
word init::xp#2 xp zp[2]:4 750.75
void loop()
byte loop::sin_idx
byte loop::sin_idx#1 sin_idx zp[1]:6 400.4
byte loop::sin_idx#6 sin_idx zp[1]:6 333.6666666666667
byte loop::sy
byte loop::sy#1 reg byte y 15001.5
byte loop::sy#2 reg byte y 10001.0
byte loop::y_idx
byte loop::y_idx#1 reg byte x 6667.333333333333
byte loop::y_idx#2 reg byte x 15502.0
byte loop::y_idx#3 reg byte x 2002.0
void main()
void plexInit(byte* plexInit::screen)
byte plexInit::i
byte plexInit::i#1 reg byte x 15001.5
byte plexInit::i#2 reg byte x 20002.0
byte* plexInit::plexSetScreen1_screen
byte* plexInit::screen
void plexShowSprite()
byte~ plexShowSprite::$11 reg byte x 101.0
byte~ plexShowSprite::$2 reg byte a 202.0
byte~ plexShowSprite::$3 reg byte a 202.0
byte~ plexShowSprite::$5 reg byte x 202.0
byte~ plexShowSprite::$6 reg byte a 202.0
byte~ plexShowSprite::$9 reg byte a 202.0
byte~ plexShowSprite::plexFreeAdd1_$0 reg byte a 202.0
byte~ plexShowSprite::plexFreeAdd1_$1 reg byte x 202.0
byte~ plexShowSprite::plexFreeAdd1_$2 reg byte a 202.0
byte plexShowSprite::plexFreeAdd1_ypos
byte plexShowSprite::plexFreeAdd1_ypos#0 reg byte a 151.5
byte plexShowSprite::plex_sprite_idx2
byte plexShowSprite::plex_sprite_idx2#0 plex_sprite_idx2 zp[1]:14 25.25
byte plexShowSprite::xpos_idx
byte plexShowSprite::xpos_idx#0 reg byte a 202.0
byte plexShowSprite::ypos
void plexSort()
byte plexSort::m
byte plexSort::m#1 m zp[1]:7 1500001.5
byte plexSort::m#2 m zp[1]:7 416667.0833333334
byte plexSort::nxt_idx
byte plexSort::nxt_idx#0 nxt_idx zp[1]:15 300000.30000000005
byte plexSort::nxt_y
byte plexSort::nxt_y#0 nxt_y zp[1]:16 1500000.375
byte plexSort::plexFreePrepare1_s
byte plexSort::plexFreePrepare1_s#1 reg byte x 1500001.5
byte plexSort::plexFreePrepare1_s#2 reg byte x 1500001.5
byte plexSort::s
byte plexSort::s#1 reg byte x 1.3666668333333332E7
byte plexSort::s#2 reg byte x 2000002.0
byte plexSort::s#3 reg byte x 2.05000025E7
byte plexSort::s#6 reg byte x 2000002.0
volatile byte plex_free_next loadstore zp[1]:11 312.6363636363636
interrupt(KERNEL_MIN) void plex_irq()
byte~ plex_irq::$4 zp[1]:13 11.0
byte plex_irq::plexFreeNextYpos1_return
byte plex_irq::plexFreeNextYpos1_return#0 reg byte x 4.0
byte plex_irq::rasterY
volatile byte plex_show_idx loadstore zp[1]:8 292.25
volatile byte plex_sprite_idx loadstore zp[1]:9 315.3636363636364
volatile byte plex_sprite_msb loadstore zp[1]:10 303.1142857142857

zp[2]:2 [ PLEX_SCREEN_PTR#30 ]
reg byte x [ init::sx#2 init::sx#1 ]
zp[2]:4 [ init::xp#2 init::xp#1 ]
reg byte x [ init::ss#2 init::ss#1 ]
zp[1]:6 [ loop::sin_idx#6 loop::sin_idx#1 ]
reg byte x [ loop::y_idx#2 loop::y_idx#3 loop::y_idx#1 ]
reg byte y [ loop::sy#2 loop::sy#1 ]
reg byte x [ plexInit::i#2 plexInit::i#1 ]
zp[1]:7 [ plexSort::m#2 plexSort::m#1 ]
reg byte x [ plexSort::s#3 plexSort::s#1 plexSort::s#6 ]
reg byte x [ plexSort::plexFreePrepare1_s#2 plexSort::plexFreePrepare1_s#1 ]
zp[1]:8 [ plex_show_idx ]
zp[1]:9 [ plex_sprite_idx ]
zp[1]:10 [ plex_sprite_msb ]
zp[1]:11 [ plex_free_next ]
zp[1]:12 [ framedone ]
reg byte x [ plex_irq::plexFreeNextYpos1_return#0 ]
zp[1]:13 [ plex_irq::$4 ]
zp[1]:14 [ plexShowSprite::plex_sprite_idx2#0 ]
reg byte a [ plexShowSprite::plexFreeAdd1_ypos#0 ]
reg byte a [ plexShowSprite::plexFreeAdd1_$0 ]
reg byte x [ plexShowSprite::plexFreeAdd1_$1 ]
reg byte a [ plexShowSprite::plexFreeAdd1_$2 ]
reg byte a [ plexShowSprite::xpos_idx#0 ]
reg byte x [ plexShowSprite::$11 ]
reg byte a [ plexShowSprite::$2 ]
reg byte a [ plexShowSprite::$3 ]
reg byte a [ plexShowSprite::$9 ]
reg byte x [ plexShowSprite::$5 ]
reg byte a [ plexShowSprite::$6 ]
reg byte a [ init::$3 ]
zp[1]:15 [ plexSort::nxt_idx#0 ]
zp[1]:16 [ plexSort::nxt_y#0 ]
reg byte x [ plexSort::s#2 ]
