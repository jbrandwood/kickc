@begin: scope:[]  from
  [0] phi() [ ] ( )
  to:@23
@23: scope:[]  from @begin
  [1] phi() [ ] ( )
  [2] call main param-assignment [ ] ( )
  to:@end
@end: scope:[]  from @23
  [3] phi() [ ] ( )
main: scope:[main]  from @23
  [4] phi() [ ] ( main:2 [ ] )
  [5] call sin16s_gen param-assignment [ ] ( main:2 [ ] )
  to:main::@3
main::@3: scope:[main]  from main
  [6] phi() [ ] ( main:2 [ ] )
  [7] call print_cls param-assignment [ ] ( main:2 [ ] )
  to:main::@1
main::@1: scope:[main]  from main::@3 main::@6
  [8] (byte*) char_cursor#46 ← phi( main::@3/(const byte*) SCREEN#0 main::@6/(byte*) char_cursor#2 ) [ main::st1#2 char_cursor#46 ] ( main:2 [ main::st1#2 char_cursor#46 ] )
  [8] (signed word*) main::st1#2 ← phi( main::@3/(const signed word[128]) main::sintab1#0 main::@6/(signed word*) main::st1#1 ) [ main::st1#2 char_cursor#46 ] ( main:2 [ main::st1#2 char_cursor#46 ] )
  [9] (signed word) print_sword::w#1 ← *((signed word*) main::st1#2) [ main::st1#2 char_cursor#46 print_sword::w#1 ] ( main:2 [ main::st1#2 char_cursor#46 print_sword::w#1 ] )
  [10] call print_sword param-assignment [ main::st1#2 char_cursor#12 ] ( main:2 [ main::st1#2 char_cursor#12 ] )
  to:main::@5
main::@5: scope:[main]  from main::@1
  [11] phi() [ main::st1#2 char_cursor#12 ] ( main:2 [ main::st1#2 char_cursor#12 ] )
  [12] call print_str param-assignment [ main::st1#2 char_cursor#2 ] ( main:2 [ main::st1#2 char_cursor#2 ] )
  to:main::@6
main::@6: scope:[main]  from main::@5
  [13] (signed word*) main::st1#1 ← (signed word*) main::st1#2 + (byte/signed byte/word/signed word/dword/signed dword) 2 [ main::st1#1 char_cursor#2 ] ( main:2 [ main::st1#1 char_cursor#2 ] )
  [14] if((signed word*) main::st1#1<(const signed word[128]) main::sintab1#0+(const word) main::wavelength#0*(byte/signed byte/word/signed word/dword/signed dword) 2) goto main::@1 [ main::st1#1 char_cursor#2 ] ( main:2 [ main::st1#1 char_cursor#2 ] )
  to:main::@return
main::@return: scope:[main]  from main::@6
  [15] return  [ ] ( main:2 [ ] )
  to:@return
print_str: scope:[print_str]  from main::@5
  [16] phi() [ char_cursor#12 ] ( main:2::print_str:12 [ main::st1#2 char_cursor#12 ] )
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@2
  [17] (byte*) char_cursor#2 ← phi( print_str/(byte*) char_cursor#12 print_str::@2/(byte*) char_cursor#1 ) [ char_cursor#2 print_str::str#2 ] ( main:2::print_str:12 [ main::st1#2 char_cursor#2 print_str::str#2 ] )
  [17] (byte*) print_str::str#2 ← phi( print_str/(const string) main::str print_str::@2/(byte*) print_str::str#0 ) [ char_cursor#2 print_str::str#2 ] ( main:2::print_str:12 [ main::st1#2 char_cursor#2 print_str::str#2 ] )
  [18] if(*((byte*) print_str::str#2)!=(byte) '@') goto print_str::@2 [ char_cursor#2 print_str::str#2 ] ( main:2::print_str:12 [ main::st1#2 char_cursor#2 print_str::str#2 ] )
  to:print_str::@return
print_str::@return: scope:[print_str]  from print_str::@1
  [19] return  [ char_cursor#2 ] ( main:2::print_str:12 [ main::st1#2 char_cursor#2 ] )
  to:@return
print_str::@2: scope:[print_str]  from print_str::@1
  [20] *((byte*) char_cursor#2) ← *((byte*) print_str::str#2) [ char_cursor#2 print_str::str#2 ] ( main:2::print_str:12 [ main::st1#2 char_cursor#2 print_str::str#2 ] )
  [21] (byte*) char_cursor#1 ← ++ (byte*) char_cursor#2 [ print_str::str#2 char_cursor#1 ] ( main:2::print_str:12 [ main::st1#2 print_str::str#2 char_cursor#1 ] )
  [22] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#2 [ print_str::str#0 char_cursor#1 ] ( main:2::print_str:12 [ main::st1#2 print_str::str#0 char_cursor#1 ] )
  to:print_str::@1
print_sword: scope:[print_sword]  from main::@1
  [23] if((signed word) print_sword::w#1>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto print_sword::@1 [ char_cursor#46 print_sword::w#1 ] ( main:2::print_sword:10 [ main::st1#2 char_cursor#46 print_sword::w#1 ] )
  to:print_sword::@2
print_sword::@2: scope:[print_sword]  from print_sword
  [24] phi() [ char_cursor#46 print_sword::w#1 ] ( main:2::print_sword:10 [ main::st1#2 char_cursor#46 print_sword::w#1 ] )
  [25] call print_char param-assignment [ print_sword::w#1 char_cursor#12 ] ( main:2::print_sword:10 [ main::st1#2 print_sword::w#1 char_cursor#12 ] )
  to:print_sword::@4
print_sword::@4: scope:[print_sword]  from print_sword::@2
  [26] (signed word) print_sword::w#0 ← - (signed word) print_sword::w#1 [ char_cursor#12 print_sword::w#0 ] ( main:2::print_sword:10 [ main::st1#2 char_cursor#12 print_sword::w#0 ] )
  to:print_sword::@1
print_sword::@1: scope:[print_sword]  from print_sword print_sword::@4
  [27] (byte*) char_cursor#41 ← phi( print_sword/(byte*) char_cursor#46 print_sword::@4/(byte*) char_cursor#12 ) [ print_sword::w#3 char_cursor#41 ] ( main:2::print_sword:10 [ main::st1#2 print_sword::w#3 char_cursor#41 ] )
  [27] (signed word) print_sword::w#3 ← phi( print_sword/(signed word) print_sword::w#1 print_sword::@4/(signed word) print_sword::w#0 ) [ print_sword::w#3 char_cursor#41 ] ( main:2::print_sword:10 [ main::st1#2 print_sword::w#3 char_cursor#41 ] )
  [28] call print_word param-assignment [ char_cursor#12 ] ( main:2::print_sword:10 [ main::st1#2 char_cursor#12 ] )
  to:print_sword::@return
print_sword::@return: scope:[print_sword]  from print_sword::@1
  [29] return  [ char_cursor#12 ] ( main:2::print_sword:10 [ main::st1#2 char_cursor#12 ] )
  to:@return
print_word: scope:[print_word]  from print_sword::@1
  [30] (byte) print_byte::b#0 ← > (word)(signed word) print_sword::w#3 [ print_sword::w#3 char_cursor#41 print_byte::b#0 ] ( main:2::print_sword:10::print_word:28 [ main::st1#2 print_sword::w#3 char_cursor#41 print_byte::b#0 ] )
  [31] call print_byte param-assignment [ char_cursor#12 print_sword::w#3 ] ( main:2::print_sword:10::print_word:28 [ main::st1#2 char_cursor#12 print_sword::w#3 ] )
  to:print_word::@1
print_word::@1: scope:[print_word]  from print_word
  [32] (byte) print_byte::b#1 ← < (word)(signed word) print_sword::w#3 [ char_cursor#12 print_byte::b#1 ] ( main:2::print_sword:10::print_word:28 [ main::st1#2 char_cursor#12 print_byte::b#1 ] )
  [33] call print_byte param-assignment [ char_cursor#12 ] ( main:2::print_sword:10::print_word:28 [ main::st1#2 char_cursor#12 ] )
  to:print_word::@return
print_word::@return: scope:[print_word]  from print_word::@1
  [34] return  [ char_cursor#12 ] ( main:2::print_sword:10::print_word:28 [ main::st1#2 char_cursor#12 ] )
  to:@return
print_byte: scope:[print_byte]  from print_word print_word::@1
  [35] (byte*) char_cursor#44 ← phi( print_word/(byte*) char_cursor#41 print_word::@1/(byte*) char_cursor#12 ) [ print_byte::b#2 char_cursor#44 ] ( main:2::print_sword:10::print_word:28::print_byte:31 [ main::st1#2 print_sword::w#3 print_byte::b#2 char_cursor#44 ] main:2::print_sword:10::print_word:28::print_byte:33 [ main::st1#2 print_byte::b#2 char_cursor#44 ] )
  [35] (byte) print_byte::b#2 ← phi( print_word/(byte) print_byte::b#0 print_word::@1/(byte) print_byte::b#1 ) [ print_byte::b#2 char_cursor#44 ] ( main:2::print_sword:10::print_word:28::print_byte:31 [ main::st1#2 print_sword::w#3 print_byte::b#2 char_cursor#44 ] main:2::print_sword:10::print_word:28::print_byte:33 [ main::st1#2 print_byte::b#2 char_cursor#44 ] )
  [36] (byte~) print_byte::$0 ← (byte) print_byte::b#2 >> (byte/signed byte/word/signed word/dword/signed dword) 4 [ print_byte::b#2 char_cursor#44 print_byte::$0 ] ( main:2::print_sword:10::print_word:28::print_byte:31 [ main::st1#2 print_sword::w#3 print_byte::b#2 char_cursor#44 print_byte::$0 ] main:2::print_sword:10::print_word:28::print_byte:33 [ main::st1#2 print_byte::b#2 char_cursor#44 print_byte::$0 ] )
  [37] (byte) print_char::ch#1 ← *((const string) print_byte::hextab#0 + (byte~) print_byte::$0) [ print_byte::b#2 char_cursor#44 print_char::ch#1 ] ( main:2::print_sword:10::print_word:28::print_byte:31 [ main::st1#2 print_sword::w#3 print_byte::b#2 char_cursor#44 print_char::ch#1 ] main:2::print_sword:10::print_word:28::print_byte:33 [ main::st1#2 print_byte::b#2 char_cursor#44 print_char::ch#1 ] )
  [38] call print_char param-assignment [ char_cursor#12 print_byte::b#2 ] ( main:2::print_sword:10::print_word:28::print_byte:31 [ main::st1#2 print_sword::w#3 char_cursor#12 print_byte::b#2 ] main:2::print_sword:10::print_word:28::print_byte:33 [ main::st1#2 char_cursor#12 print_byte::b#2 ] )
  to:print_byte::@1
print_byte::@1: scope:[print_byte]  from print_byte
  [39] (byte~) print_byte::$2 ← (byte) print_byte::b#2 & (byte/signed byte/word/signed word/dword/signed dword) 15 [ char_cursor#12 print_byte::$2 ] ( main:2::print_sword:10::print_word:28::print_byte:31 [ main::st1#2 print_sword::w#3 char_cursor#12 print_byte::$2 ] main:2::print_sword:10::print_word:28::print_byte:33 [ main::st1#2 char_cursor#12 print_byte::$2 ] )
  [40] (byte) print_char::ch#2 ← *((const string) print_byte::hextab#0 + (byte~) print_byte::$2) [ char_cursor#12 print_char::ch#2 ] ( main:2::print_sword:10::print_word:28::print_byte:31 [ main::st1#2 print_sword::w#3 char_cursor#12 print_char::ch#2 ] main:2::print_sword:10::print_word:28::print_byte:33 [ main::st1#2 char_cursor#12 print_char::ch#2 ] )
  [41] call print_char param-assignment [ char_cursor#12 ] ( main:2::print_sword:10::print_word:28::print_byte:31 [ main::st1#2 print_sword::w#3 char_cursor#12 ] main:2::print_sword:10::print_word:28::print_byte:33 [ main::st1#2 char_cursor#12 ] )
  to:print_byte::@return
print_byte::@return: scope:[print_byte]  from print_byte::@1
  [42] return  [ char_cursor#12 ] ( main:2::print_sword:10::print_word:28::print_byte:31 [ main::st1#2 print_sword::w#3 char_cursor#12 ] main:2::print_sword:10::print_word:28::print_byte:33 [ main::st1#2 char_cursor#12 ] )
  to:@return
print_char: scope:[print_char]  from print_byte print_byte::@1 print_sword::@2
  [43] (byte*) char_cursor#32 ← phi( print_byte/(byte*) char_cursor#44 print_byte::@1/(byte*) char_cursor#12 print_sword::@2/(byte*) char_cursor#46 ) [ print_char::ch#3 char_cursor#32 ] ( main:2::print_sword:10::print_char:25 [ main::st1#2 print_sword::w#1 print_char::ch#3 char_cursor#32 ] main:2::print_sword:10::print_word:28::print_byte:31::print_char:38 [ main::st1#2 print_sword::w#3 print_byte::b#2 print_char::ch#3 char_cursor#32 ] main:2::print_sword:10::print_word:28::print_byte:33::print_char:38 [ main::st1#2 print_byte::b#2 print_char::ch#3 char_cursor#32 ] main:2::print_sword:10::print_word:28::print_byte:31::print_char:41 [ main::st1#2 print_sword::w#3 print_char::ch#3 char_cursor#32 ] main:2::print_sword:10::print_word:28::print_byte:33::print_char:41 [ main::st1#2 print_char::ch#3 char_cursor#32 ] )
  [43] (byte) print_char::ch#3 ← phi( print_byte/(byte) print_char::ch#1 print_byte::@1/(byte) print_char::ch#2 print_sword::@2/(byte) '-' ) [ print_char::ch#3 char_cursor#32 ] ( main:2::print_sword:10::print_char:25 [ main::st1#2 print_sword::w#1 print_char::ch#3 char_cursor#32 ] main:2::print_sword:10::print_word:28::print_byte:31::print_char:38 [ main::st1#2 print_sword::w#3 print_byte::b#2 print_char::ch#3 char_cursor#32 ] main:2::print_sword:10::print_word:28::print_byte:33::print_char:38 [ main::st1#2 print_byte::b#2 print_char::ch#3 char_cursor#32 ] main:2::print_sword:10::print_word:28::print_byte:31::print_char:41 [ main::st1#2 print_sword::w#3 print_char::ch#3 char_cursor#32 ] main:2::print_sword:10::print_word:28::print_byte:33::print_char:41 [ main::st1#2 print_char::ch#3 char_cursor#32 ] )
  [44] *((byte*) char_cursor#32) ← (byte) print_char::ch#3 [ char_cursor#32 ] ( main:2::print_sword:10::print_char:25 [ main::st1#2 print_sword::w#1 char_cursor#32 ] main:2::print_sword:10::print_word:28::print_byte:31::print_char:38 [ main::st1#2 print_sword::w#3 print_byte::b#2 char_cursor#32 ] main:2::print_sword:10::print_word:28::print_byte:33::print_char:38 [ main::st1#2 print_byte::b#2 char_cursor#32 ] main:2::print_sword:10::print_word:28::print_byte:31::print_char:41 [ main::st1#2 print_sword::w#3 char_cursor#32 ] main:2::print_sword:10::print_word:28::print_byte:33::print_char:41 [ main::st1#2 char_cursor#32 ] )
  [45] (byte*) char_cursor#12 ← ++ (byte*) char_cursor#32 [ char_cursor#12 ] ( main:2::print_sword:10::print_char:25 [ main::st1#2 print_sword::w#1 char_cursor#12 ] main:2::print_sword:10::print_word:28::print_byte:31::print_char:38 [ main::st1#2 print_sword::w#3 print_byte::b#2 char_cursor#12 ] main:2::print_sword:10::print_word:28::print_byte:33::print_char:38 [ main::st1#2 print_byte::b#2 char_cursor#12 ] main:2::print_sword:10::print_word:28::print_byte:31::print_char:41 [ main::st1#2 print_sword::w#3 char_cursor#12 ] main:2::print_sword:10::print_word:28::print_byte:33::print_char:41 [ main::st1#2 char_cursor#12 ] )
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  [46] return  [ char_cursor#12 ] ( main:2::print_sword:10::print_char:25 [ main::st1#2 print_sword::w#1 char_cursor#12 ] main:2::print_sword:10::print_word:28::print_byte:31::print_char:38 [ main::st1#2 print_sword::w#3 print_byte::b#2 char_cursor#12 ] main:2::print_sword:10::print_word:28::print_byte:33::print_char:38 [ main::st1#2 print_byte::b#2 char_cursor#12 ] main:2::print_sword:10::print_word:28::print_byte:31::print_char:41 [ main::st1#2 print_sword::w#3 char_cursor#12 ] main:2::print_sword:10::print_word:28::print_byte:33::print_char:41 [ main::st1#2 char_cursor#12 ] )
  to:@return
print_cls: scope:[print_cls]  from main::@3
  [47] phi() [ ] ( main:2::print_cls:7 [ ] )
  to:print_cls::@1
print_cls::@1: scope:[print_cls]  from print_cls print_cls::@1
  [48] (byte*) print_cls::sc#2 ← phi( print_cls/(const byte*) SCREEN#0 print_cls::@1/(byte*) print_cls::sc#1 ) [ print_cls::sc#2 ] ( main:2::print_cls:7 [ print_cls::sc#2 ] )
  [49] *((byte*) print_cls::sc#2) ← (byte) ' ' [ print_cls::sc#2 ] ( main:2::print_cls:7 [ print_cls::sc#2 ] )
  [50] (byte*) print_cls::sc#1 ← ++ (byte*) print_cls::sc#2 [ print_cls::sc#1 ] ( main:2::print_cls:7 [ print_cls::sc#1 ] )
  [51] if((byte*) print_cls::sc#1!=(const byte*) SCREEN#0+(word/signed word/dword/signed dword) 1000) goto print_cls::@1 [ print_cls::sc#1 ] ( main:2::print_cls:7 [ print_cls::sc#1 ] )
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls::@1
  [52] return  [ ] ( main:2::print_cls:7 [ ] )
  to:@return
sin16s_gen: scope:[sin16s_gen]  from main
  [53] phi() [ ] ( main:2::sin16s_gen:5 [ ] )
  [54] call divr16u param-assignment [ divr16u::return#0 rem16u#1 ] ( main:2::sin16s_gen:5 [ divr16u::return#0 rem16u#1 ] )
  [55] (word) divr16u::return#2 ← (word) divr16u::return#0 [ divr16u::return#2 rem16u#1 ] ( main:2::sin16s_gen:5 [ divr16u::return#2 rem16u#1 ] )
  to:sin16s_gen::@11
sin16s_gen::@11: scope:[sin16s_gen]  from sin16s_gen
  [56] (word) sin16s_gen::stepi#0 ← (word) divr16u::return#2 [ sin16s_gen::stepi#0 rem16u#1 ] ( main:2::sin16s_gen:5 [ sin16s_gen::stepi#0 rem16u#1 ] )
  [57] (word) divr16u::rem#4 ← (word) rem16u#1 [ sin16s_gen::stepi#0 divr16u::rem#4 ] ( main:2::sin16s_gen:5 [ sin16s_gen::stepi#0 divr16u::rem#4 ] )
  [58] call divr16u param-assignment [ divr16u::return#0 sin16s_gen::stepi#0 ] ( main:2::sin16s_gen:5 [ divr16u::return#0 sin16s_gen::stepi#0 ] )
  [59] (word) divr16u::return#3 ← (word) divr16u::return#0 [ sin16s_gen::stepi#0 divr16u::return#3 ] ( main:2::sin16s_gen:5 [ sin16s_gen::stepi#0 divr16u::return#3 ] )
  to:sin16s_gen::@12
sin16s_gen::@12: scope:[sin16s_gen]  from sin16s_gen::@11
  [60] (word) sin16s_gen::stepf#0 ← (word) divr16u::return#3 [ sin16s_gen::stepi#0 sin16s_gen::stepf#0 ] ( main:2::sin16s_gen:5 [ sin16s_gen::stepi#0 sin16s_gen::stepf#0 ] )
  [61] (dword) sin16s_gen::step#0 ← (word) sin16s_gen::stepi#0 dw= (word) sin16s_gen::stepf#0 [ sin16s_gen::step#0 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 ] )
  to:sin16s_gen::@1
sin16s_gen::@1: scope:[sin16s_gen]  from sin16s_gen::@12 sin16s_gen::@5
  [62] (word) sin16s_gen::i#10 ← phi( sin16s_gen::@12/(byte/signed byte/word/signed word/dword/signed dword) 0 sin16s_gen::@5/(word) sin16s_gen::i#1 ) [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 ] )
  [62] (signed word*) sin16s_gen::sintab#10 ← phi( sin16s_gen::@12/(const signed word[128]) main::sintab1#0 sin16s_gen::@5/(signed word*) sin16s_gen::sintab#1 ) [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 ] )
  [62] (dword) sin16s_gen::x#10 ← phi( sin16s_gen::@12/(byte/signed byte/word/signed word/dword/signed dword) 0 sin16s_gen::@5/(dword) sin16s_gen::x#1 ) [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 ] )
  [63] (word) sin16s_gen::x1#0 ← > (dword) sin16s_gen::x#10 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::x1#0 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::x1#0 ] )
  [64] if((word) sin16s_gen::x1#0<(const word) PI_u4f12#0) goto sin16s_gen::@2 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::x1#0 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::x1#0 ] )
  to:sin16s_gen::@6
sin16s_gen::@6: scope:[sin16s_gen]  from sin16s_gen::@1
  [65] (word) sin16s_gen::x1#1 ← (word) sin16s_gen::x1#0 - (const word) PI_u4f12#0 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::x1#1 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::x1#1 ] )
  to:sin16s_gen::@2
sin16s_gen::@2: scope:[sin16s_gen]  from sin16s_gen::@1 sin16s_gen::@6
  [66] (byte) sin16s_gen::isUpper#10 ← phi( sin16s_gen::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 sin16s_gen::@6/(byte/signed byte/word/signed word/dword/signed dword) 1 ) [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::x1#3 sin16s_gen::isUpper#10 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::x1#3 sin16s_gen::isUpper#10 ] )
  [66] (word) sin16s_gen::x1#3 ← phi( sin16s_gen::@1/(word) sin16s_gen::x1#0 sin16s_gen::@6/(word) sin16s_gen::x1#1 ) [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::x1#3 sin16s_gen::isUpper#10 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::x1#3 sin16s_gen::isUpper#10 ] )
  [67] if((word) sin16s_gen::x1#3<(const word) PI_HALF_u4f12#0) goto sin16s_gen::@3 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::x1#3 sin16s_gen::isUpper#10 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::x1#3 sin16s_gen::isUpper#10 ] )
  to:sin16s_gen::@7
sin16s_gen::@7: scope:[sin16s_gen]  from sin16s_gen::@2
  [68] (word) sin16s_gen::x1#2 ← (const word) PI_u4f12#0 - (word) sin16s_gen::x1#3 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#2 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#2 ] )
  to:sin16s_gen::@3
sin16s_gen::@3: scope:[sin16s_gen]  from sin16s_gen::@2 sin16s_gen::@7
  [69] (word) sin16s_gen::x1#10 ← phi( sin16s_gen::@2/(word) sin16s_gen::x1#3 sin16s_gen::@7/(word) sin16s_gen::x1#2 ) [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 ] )
  [70] (word) mul_u4f12::v1#0 ← (word) sin16s_gen::x1#10 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::v1#0 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::v1#0 ] )
  [71] (word) mul_u4f12::v2#0 ← (word) sin16s_gen::x1#10 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::v1#0 mul_u4f12::v2#0 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::v1#0 mul_u4f12::v2#0 ] )
  [72] call mul_u4f12 param-assignment [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::return#10 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::return#10 ] )
  [73] (word) mul_u4f12::return#0 ← (word) mul_u4f12::return#10 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::return#0 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::return#0 ] )
  to:sin16s_gen::@13
sin16s_gen::@13: scope:[sin16s_gen]  from sin16s_gen::@3
  [74] (word) sin16s_gen::x2#0 ← (word) mul_u4f12::return#0 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x2#0 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x2#0 ] )
  [75] (word) mul_u4f12::v1#1 ← (word) sin16s_gen::x2#0 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::v1#1 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::v1#1 ] )
  [76] (word) mul_u4f12::v2#1 ← (word) sin16s_gen::x1#10 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::v1#1 mul_u4f12::v2#1 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::v1#1 mul_u4f12::v2#1 ] )
  [77] call mul_u4f12 param-assignment [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::return#10 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::return#10 ] )
  [78] (word) mul_u4f12::return#1 ← (word) mul_u4f12::return#10 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::return#1 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::return#1 ] )
  to:sin16s_gen::@14
sin16s_gen::@14: scope:[sin16s_gen]  from sin16s_gen::@13
  [79] (word) sin16s_gen::x3#0 ← (word) mul_u4f12::return#1 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 ] )
  [80] (word) mul16u::a#1 ← (word) sin16s_gen::x3#0 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 mul16u::a#1 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 mul16u::a#1 ] )
  [81] call mul16u param-assignment [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 mul16u::res#2 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 mul16u::res#2 ] )
  [82] (dword) mul16u::return#2 ← (dword) mul16u::res#2 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 mul16u::return#2 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 mul16u::return#2 ] )
  to:sin16s_gen::@15
sin16s_gen::@15: scope:[sin16s_gen]  from sin16s_gen::@14
  [83] (dword~) sin16s_gen::$14 ← (dword) mul16u::return#2 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 sin16s_gen::$14 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 sin16s_gen::$14 ] )
  [84] (word) sin16s_gen::x3_6#0 ← > (dword~) sin16s_gen::$14 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 sin16s_gen::x3_6#0 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 sin16s_gen::x3_6#0 ] )
  [85] (word) sin16s_gen::usinx#0 ← (word) sin16s_gen::x1#10 - (word) sin16s_gen::x3_6#0 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 sin16s_gen::usinx#0 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 sin16s_gen::usinx#0 ] )
  [86] (word) mul_u4f12::v1#2 ← (word) sin16s_gen::x3#0 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul_u4f12::v1#2 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul_u4f12::v1#2 ] )
  [87] (word) mul_u4f12::v2#2 ← (word) sin16s_gen::x1#10 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul_u4f12::v1#2 mul_u4f12::v2#2 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul_u4f12::v1#2 mul_u4f12::v2#2 ] )
  [88] call mul_u4f12 param-assignment [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::return#10 sin16s_gen::usinx#0 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::return#10 sin16s_gen::usinx#0 ] )
  [89] (word) mul_u4f12::return#2 ← (word) mul_u4f12::return#10 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul_u4f12::return#2 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul_u4f12::return#2 ] )
  to:sin16s_gen::@16
sin16s_gen::@16: scope:[sin16s_gen]  from sin16s_gen::@15
  [90] (word) sin16s_gen::x4#0 ← (word) mul_u4f12::return#2 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 sin16s_gen::x4#0 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 sin16s_gen::x4#0 ] )
  [91] (word) mul_u4f12::v1#3 ← (word) sin16s_gen::x4#0 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul_u4f12::v1#3 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul_u4f12::v1#3 ] )
  [92] (word) mul_u4f12::v2#3 ← (word) sin16s_gen::x1#10 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul_u4f12::v1#3 mul_u4f12::v2#3 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul_u4f12::v1#3 mul_u4f12::v2#3 ] )
  [93] call mul_u4f12 param-assignment [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 mul_u4f12::return#10 sin16s_gen::usinx#0 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 mul_u4f12::return#10 sin16s_gen::usinx#0 ] )
  [94] (word) mul_u4f12::return#3 ← (word) mul_u4f12::return#10 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul_u4f12::return#3 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul_u4f12::return#3 ] )
  to:sin16s_gen::@17
sin16s_gen::@17: scope:[sin16s_gen]  from sin16s_gen::@16
  [95] (word) sin16s_gen::x5#0 ← (word) mul_u4f12::return#3 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 sin16s_gen::x5#0 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 sin16s_gen::x5#0 ] )
  [96] (word) mul16u::a#2 ← (word) sin16s_gen::x5#0 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::a#2 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::a#2 ] )
  [97] call mul16u param-assignment [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 mul16u::res#2 sin16s_gen::usinx#0 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 mul16u::res#2 sin16s_gen::usinx#0 ] )
  [98] (dword) mul16u::return#3 ← (dword) mul16u::res#2 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::return#3 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::return#3 ] )
  to:sin16s_gen::@18
sin16s_gen::@18: scope:[sin16s_gen]  from sin16s_gen::@17
  [99] (dword~) sin16s_gen::$20 ← (dword) mul16u::return#3 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 sin16s_gen::$20 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 sin16s_gen::$20 ] )
  [100] (word) sin16s_gen::x5_128#0 ← > (dword~) sin16s_gen::$20 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 sin16s_gen::x5_128#0 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 sin16s_gen::x5_128#0 ] )
  [101] (word) sin16s_gen::usinx#1 ← (word) sin16s_gen::usinx#0 + (word) sin16s_gen::x5_128#0 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#1 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#1 ] )
  [102] if((byte) sin16s_gen::isUpper#10==(byte/signed byte/word/signed word/dword/signed dword) 0) goto sin16s_gen::@22 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::usinx#1 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::usinx#1 ] )
  to:sin16s_gen::@8
sin16s_gen::@8: scope:[sin16s_gen]  from sin16s_gen::@18
  [103] (signed word) sin16s_gen::sinx#1 ← - (signed word)(word) sin16s_gen::usinx#1 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::sinx#1 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::sinx#1 ] )
  to:sin16s_gen::@5
sin16s_gen::@5: scope:[sin16s_gen]  from sin16s_gen::@22 sin16s_gen::@8
  [104] (signed word) sin16s_gen::sinx#2 ← phi( sin16s_gen::@22/(signed word~) sin16s_gen::sinx#3 sin16s_gen::@8/(signed word) sin16s_gen::sinx#1 ) [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::sinx#2 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::sinx#2 ] )
  [105] *((signed word*) sin16s_gen::sintab#10) ← (signed word) sin16s_gen::sinx#2 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 ] )
  [106] (signed word*) sin16s_gen::sintab#1 ← (signed word*) sin16s_gen::sintab#10 + (byte/signed byte/word/signed word/dword/signed dword) 2 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::i#10 sin16s_gen::sintab#1 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::i#10 sin16s_gen::sintab#1 ] )
  [107] (dword) sin16s_gen::x#1 ← (dword) sin16s_gen::x#10 + (dword) sin16s_gen::step#0 [ sin16s_gen::step#0 sin16s_gen::i#10 sin16s_gen::x#1 sin16s_gen::sintab#1 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::i#10 sin16s_gen::x#1 sin16s_gen::sintab#1 ] )
  [108] (word) sin16s_gen::i#1 ← ++ (word) sin16s_gen::i#10 [ sin16s_gen::step#0 sin16s_gen::x#1 sin16s_gen::sintab#1 sin16s_gen::i#1 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#1 sin16s_gen::sintab#1 sin16s_gen::i#1 ] )
  [109] if((word) sin16s_gen::i#1<(const word) main::wavelength#0) goto sin16s_gen::@1 [ sin16s_gen::step#0 sin16s_gen::x#1 sin16s_gen::sintab#1 sin16s_gen::i#1 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#1 sin16s_gen::sintab#1 sin16s_gen::i#1 ] )
  to:sin16s_gen::@return
sin16s_gen::@return: scope:[sin16s_gen]  from sin16s_gen::@5
  [110] return  [ ] ( main:2::sin16s_gen:5 [ ] )
  to:@return
sin16s_gen::@22: scope:[sin16s_gen]  from sin16s_gen::@18
  [111] (signed word~) sin16s_gen::sinx#3 ← (signed word)(word) sin16s_gen::usinx#1 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::sinx#3 ] ( main:2::sin16s_gen:5 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::sinx#3 ] )
  to:sin16s_gen::@5
mul16u: scope:[mul16u]  from mul_u4f12 sin16s_gen::@14 sin16s_gen::@17
  [112] (word) mul16u::a#7 ← phi( mul_u4f12/(word) mul16u::a#3 sin16s_gen::@14/(word) mul16u::a#1 sin16s_gen::@17/(word) mul16u::a#2 ) [ mul16u::b#3 mul16u::a#7 ] ( main:2::sin16s_gen:5::mul16u:81 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 mul16u::b#3 mul16u::a#7 ] main:2::sin16s_gen:5::mul16u:97 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::b#3 mul16u::a#7 ] main:2::sin16s_gen:5::mul_u4f12:72::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::b#3 mul16u::a#7 ] main:2::sin16s_gen:5::mul_u4f12:77::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::b#3 mul16u::a#7 ] main:2::sin16s_gen:5::mul_u4f12:88::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul16u::b#3 mul16u::a#7 ] main:2::sin16s_gen:5::mul_u4f12:93::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::b#3 mul16u::a#7 ] )
  [112] (word) mul16u::b#3 ← phi( mul_u4f12/(word) mul16u::b#2 sin16s_gen::@14/(dword/signed dword) 65536/(byte/signed byte/word/signed word/dword/signed dword) 6 sin16s_gen::@17/(dword/signed dword) 65536/(byte/word/signed word/dword/signed dword) 128 ) [ mul16u::b#3 mul16u::a#7 ] ( main:2::sin16s_gen:5::mul16u:81 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 mul16u::b#3 mul16u::a#7 ] main:2::sin16s_gen:5::mul16u:97 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::b#3 mul16u::a#7 ] main:2::sin16s_gen:5::mul_u4f12:72::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::b#3 mul16u::a#7 ] main:2::sin16s_gen:5::mul_u4f12:77::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::b#3 mul16u::a#7 ] main:2::sin16s_gen:5::mul_u4f12:88::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul16u::b#3 mul16u::a#7 ] main:2::sin16s_gen:5::mul_u4f12:93::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::b#3 mul16u::a#7 ] )
  [113] (dword) mul16u::mb#0 ← ((dword)) (word) mul16u::b#3 [ mul16u::a#7 mul16u::mb#0 ] ( main:2::sin16s_gen:5::mul16u:81 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 mul16u::a#7 mul16u::mb#0 ] main:2::sin16s_gen:5::mul16u:97 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::a#7 mul16u::mb#0 ] main:2::sin16s_gen:5::mul_u4f12:72::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::a#7 mul16u::mb#0 ] main:2::sin16s_gen:5::mul_u4f12:77::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::a#7 mul16u::mb#0 ] main:2::sin16s_gen:5::mul_u4f12:88::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul16u::a#7 mul16u::mb#0 ] main:2::sin16s_gen:5::mul_u4f12:93::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::a#7 mul16u::mb#0 ] )
  to:mul16u::@1
mul16u::@1: scope:[mul16u]  from mul16u mul16u::@4
  [114] (dword) mul16u::mb#2 ← phi( mul16u/(dword) mul16u::mb#0 mul16u::@4/(dword) mul16u::mb#1 ) [ mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] ( main:2::sin16s_gen:5::mul16u:81 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] main:2::sin16s_gen:5::mul16u:97 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] main:2::sin16s_gen:5::mul_u4f12:72::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] main:2::sin16s_gen:5::mul_u4f12:77::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] main:2::sin16s_gen:5::mul_u4f12:88::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] main:2::sin16s_gen:5::mul_u4f12:93::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] )
  [114] (dword) mul16u::res#2 ← phi( mul16u/(byte/signed byte/word/signed word/dword/signed dword) 0 mul16u::@4/(dword) mul16u::res#6 ) [ mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] ( main:2::sin16s_gen:5::mul16u:81 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] main:2::sin16s_gen:5::mul16u:97 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] main:2::sin16s_gen:5::mul_u4f12:72::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] main:2::sin16s_gen:5::mul_u4f12:77::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] main:2::sin16s_gen:5::mul_u4f12:88::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] main:2::sin16s_gen:5::mul_u4f12:93::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] )
  [114] (word) mul16u::a#4 ← phi( mul16u/(word) mul16u::a#7 mul16u::@4/(word) mul16u::a#0 ) [ mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] ( main:2::sin16s_gen:5::mul16u:81 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] main:2::sin16s_gen:5::mul16u:97 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] main:2::sin16s_gen:5::mul_u4f12:72::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] main:2::sin16s_gen:5::mul_u4f12:77::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] main:2::sin16s_gen:5::mul_u4f12:88::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] main:2::sin16s_gen:5::mul_u4f12:93::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] )
  [115] if((word) mul16u::a#4!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto mul16u::@2 [ mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] ( main:2::sin16s_gen:5::mul16u:81 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] main:2::sin16s_gen:5::mul16u:97 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] main:2::sin16s_gen:5::mul_u4f12:72::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] main:2::sin16s_gen:5::mul_u4f12:77::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] main:2::sin16s_gen:5::mul_u4f12:88::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] main:2::sin16s_gen:5::mul_u4f12:93::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] )
  to:mul16u::@return
mul16u::@return: scope:[mul16u]  from mul16u::@1
  [116] return  [ mul16u::res#2 ] ( main:2::sin16s_gen:5::mul16u:81 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 mul16u::res#2 ] main:2::sin16s_gen:5::mul16u:97 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::res#2 ] main:2::sin16s_gen:5::mul_u4f12:72::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::res#2 ] main:2::sin16s_gen:5::mul_u4f12:77::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::res#2 ] main:2::sin16s_gen:5::mul_u4f12:88::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul16u::res#2 ] main:2::sin16s_gen:5::mul_u4f12:93::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::res#2 ] )
  to:@return
mul16u::@2: scope:[mul16u]  from mul16u::@1
  [117] (byte~) mul16u::$1 ← (word) mul16u::a#4 & (byte/signed byte/word/signed word/dword/signed dword) 1 [ mul16u::res#2 mul16u::a#4 mul16u::mb#2 mul16u::$1 ] ( main:2::sin16s_gen:5::mul16u:81 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 mul16u::res#2 mul16u::a#4 mul16u::mb#2 mul16u::$1 ] main:2::sin16s_gen:5::mul16u:97 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::res#2 mul16u::a#4 mul16u::mb#2 mul16u::$1 ] main:2::sin16s_gen:5::mul_u4f12:72::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::res#2 mul16u::a#4 mul16u::mb#2 mul16u::$1 ] main:2::sin16s_gen:5::mul_u4f12:77::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::res#2 mul16u::a#4 mul16u::mb#2 mul16u::$1 ] main:2::sin16s_gen:5::mul_u4f12:88::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul16u::res#2 mul16u::a#4 mul16u::mb#2 mul16u::$1 ] main:2::sin16s_gen:5::mul_u4f12:93::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::res#2 mul16u::a#4 mul16u::mb#2 mul16u::$1 ] )
  [118] if((byte~) mul16u::$1==(byte/signed byte/word/signed word/dword/signed dword) 0) goto mul16u::@4 [ mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] ( main:2::sin16s_gen:5::mul16u:81 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] main:2::sin16s_gen:5::mul16u:97 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] main:2::sin16s_gen:5::mul_u4f12:72::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] main:2::sin16s_gen:5::mul_u4f12:77::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] main:2::sin16s_gen:5::mul_u4f12:88::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] main:2::sin16s_gen:5::mul_u4f12:93::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::res#2 mul16u::a#4 mul16u::mb#2 ] )
  to:mul16u::@7
mul16u::@7: scope:[mul16u]  from mul16u::@2
  [119] (dword) mul16u::res#1 ← (dword) mul16u::res#2 + (dword) mul16u::mb#2 [ mul16u::a#4 mul16u::mb#2 mul16u::res#1 ] ( main:2::sin16s_gen:5::mul16u:81 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 mul16u::a#4 mul16u::mb#2 mul16u::res#1 ] main:2::sin16s_gen:5::mul16u:97 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::a#4 mul16u::mb#2 mul16u::res#1 ] main:2::sin16s_gen:5::mul_u4f12:72::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::a#4 mul16u::mb#2 mul16u::res#1 ] main:2::sin16s_gen:5::mul_u4f12:77::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::a#4 mul16u::mb#2 mul16u::res#1 ] main:2::sin16s_gen:5::mul_u4f12:88::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul16u::a#4 mul16u::mb#2 mul16u::res#1 ] main:2::sin16s_gen:5::mul_u4f12:93::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::a#4 mul16u::mb#2 mul16u::res#1 ] )
  to:mul16u::@4
mul16u::@4: scope:[mul16u]  from mul16u::@2 mul16u::@7
  [120] (dword) mul16u::res#6 ← phi( mul16u::@2/(dword) mul16u::res#2 mul16u::@7/(dword) mul16u::res#1 ) [ mul16u::a#4 mul16u::mb#2 mul16u::res#6 ] ( main:2::sin16s_gen:5::mul16u:81 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 mul16u::a#4 mul16u::mb#2 mul16u::res#6 ] main:2::sin16s_gen:5::mul16u:97 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::a#4 mul16u::mb#2 mul16u::res#6 ] main:2::sin16s_gen:5::mul_u4f12:72::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::a#4 mul16u::mb#2 mul16u::res#6 ] main:2::sin16s_gen:5::mul_u4f12:77::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::a#4 mul16u::mb#2 mul16u::res#6 ] main:2::sin16s_gen:5::mul_u4f12:88::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul16u::a#4 mul16u::mb#2 mul16u::res#6 ] main:2::sin16s_gen:5::mul_u4f12:93::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::a#4 mul16u::mb#2 mul16u::res#6 ] )
  [121] (word) mul16u::a#0 ← (word) mul16u::a#4 >> (byte/signed byte/word/signed word/dword/signed dword) 1 [ mul16u::mb#2 mul16u::a#0 mul16u::res#6 ] ( main:2::sin16s_gen:5::mul16u:81 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 mul16u::mb#2 mul16u::a#0 mul16u::res#6 ] main:2::sin16s_gen:5::mul16u:97 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::mb#2 mul16u::a#0 mul16u::res#6 ] main:2::sin16s_gen:5::mul_u4f12:72::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::mb#2 mul16u::a#0 mul16u::res#6 ] main:2::sin16s_gen:5::mul_u4f12:77::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::mb#2 mul16u::a#0 mul16u::res#6 ] main:2::sin16s_gen:5::mul_u4f12:88::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul16u::mb#2 mul16u::a#0 mul16u::res#6 ] main:2::sin16s_gen:5::mul_u4f12:93::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::mb#2 mul16u::a#0 mul16u::res#6 ] )
  [122] (dword) mul16u::mb#1 ← (dword) mul16u::mb#2 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ mul16u::a#0 mul16u::res#6 mul16u::mb#1 ] ( main:2::sin16s_gen:5::mul16u:81 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::x3#0 mul16u::a#0 mul16u::res#6 mul16u::mb#1 ] main:2::sin16s_gen:5::mul16u:97 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::a#0 mul16u::res#6 mul16u::mb#1 ] main:2::sin16s_gen:5::mul_u4f12:72::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::a#0 mul16u::res#6 mul16u::mb#1 ] main:2::sin16s_gen:5::mul_u4f12:77::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::a#0 mul16u::res#6 mul16u::mb#1 ] main:2::sin16s_gen:5::mul_u4f12:88::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul16u::a#0 mul16u::res#6 mul16u::mb#1 ] main:2::sin16s_gen:5::mul_u4f12:93::mul16u:126 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::a#0 mul16u::res#6 mul16u::mb#1 ] )
  to:mul16u::@1
mul_u4f12: scope:[mul_u4f12]  from sin16s_gen::@13 sin16s_gen::@15 sin16s_gen::@16 sin16s_gen::@3
  [123] (word) mul_u4f12::v2#4 ← phi( sin16s_gen::@13/(word) mul_u4f12::v2#1 sin16s_gen::@15/(word) mul_u4f12::v2#2 sin16s_gen::@16/(word) mul_u4f12::v2#3 sin16s_gen::@3/(word) mul_u4f12::v2#0 ) [ mul_u4f12::v1#4 mul_u4f12::v2#4 ] ( main:2::sin16s_gen:5::mul_u4f12:72 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::v1#4 mul_u4f12::v2#4 ] main:2::sin16s_gen:5::mul_u4f12:77 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::v1#4 mul_u4f12::v2#4 ] main:2::sin16s_gen:5::mul_u4f12:88 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul_u4f12::v1#4 mul_u4f12::v2#4 ] main:2::sin16s_gen:5::mul_u4f12:93 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul_u4f12::v1#4 mul_u4f12::v2#4 ] )
  [123] (word) mul_u4f12::v1#4 ← phi( sin16s_gen::@13/(word) mul_u4f12::v1#1 sin16s_gen::@15/(word) mul_u4f12::v1#2 sin16s_gen::@16/(word) mul_u4f12::v1#3 sin16s_gen::@3/(word) mul_u4f12::v1#0 ) [ mul_u4f12::v1#4 mul_u4f12::v2#4 ] ( main:2::sin16s_gen:5::mul_u4f12:72 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::v1#4 mul_u4f12::v2#4 ] main:2::sin16s_gen:5::mul_u4f12:77 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::v1#4 mul_u4f12::v2#4 ] main:2::sin16s_gen:5::mul_u4f12:88 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul_u4f12::v1#4 mul_u4f12::v2#4 ] main:2::sin16s_gen:5::mul_u4f12:93 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul_u4f12::v1#4 mul_u4f12::v2#4 ] )
  [124] (word) mul16u::a#3 ← (word) mul_u4f12::v1#4 [ mul16u::a#3 mul_u4f12::v2#4 ] ( main:2::sin16s_gen:5::mul_u4f12:72 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::a#3 mul_u4f12::v2#4 ] main:2::sin16s_gen:5::mul_u4f12:77 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::a#3 mul_u4f12::v2#4 ] main:2::sin16s_gen:5::mul_u4f12:88 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul16u::a#3 mul_u4f12::v2#4 ] main:2::sin16s_gen:5::mul_u4f12:93 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::a#3 mul_u4f12::v2#4 ] )
  [125] (word) mul16u::b#2 ← (word) mul_u4f12::v2#4 [ mul16u::b#2 mul16u::a#3 ] ( main:2::sin16s_gen:5::mul_u4f12:72 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::b#2 mul16u::a#3 ] main:2::sin16s_gen:5::mul_u4f12:77 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::b#2 mul16u::a#3 ] main:2::sin16s_gen:5::mul_u4f12:88 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul16u::b#2 mul16u::a#3 ] main:2::sin16s_gen:5::mul_u4f12:93 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::b#2 mul16u::a#3 ] )
  [126] call mul16u param-assignment [ mul16u::res#2 ] ( main:2::sin16s_gen:5::mul_u4f12:72 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::res#2 ] main:2::sin16s_gen:5::mul_u4f12:77 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::res#2 ] main:2::sin16s_gen:5::mul_u4f12:88 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul16u::res#2 ] main:2::sin16s_gen:5::mul_u4f12:93 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::res#2 ] )
  [127] (dword) mul16u::return#4 ← (dword) mul16u::res#2 [ mul16u::return#4 ] ( main:2::sin16s_gen:5::mul_u4f12:72 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::return#4 ] main:2::sin16s_gen:5::mul_u4f12:77 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul16u::return#4 ] main:2::sin16s_gen:5::mul_u4f12:88 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul16u::return#4 ] main:2::sin16s_gen:5::mul_u4f12:93 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul16u::return#4 ] )
  to:mul_u4f12::@2
mul_u4f12::@2: scope:[mul_u4f12]  from mul_u4f12
  [128] (dword~) mul_u4f12::$0 ← (dword) mul16u::return#4 [ mul_u4f12::$0 ] ( main:2::sin16s_gen:5::mul_u4f12:72 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::$0 ] main:2::sin16s_gen:5::mul_u4f12:77 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::$0 ] main:2::sin16s_gen:5::mul_u4f12:88 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul_u4f12::$0 ] main:2::sin16s_gen:5::mul_u4f12:93 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul_u4f12::$0 ] )
  [129] (dword~) mul_u4f12::$1 ← (dword~) mul_u4f12::$0 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ mul_u4f12::$1 ] ( main:2::sin16s_gen:5::mul_u4f12:72 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::$1 ] main:2::sin16s_gen:5::mul_u4f12:77 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::$1 ] main:2::sin16s_gen:5::mul_u4f12:88 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul_u4f12::$1 ] main:2::sin16s_gen:5::mul_u4f12:93 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul_u4f12::$1 ] )
  [130] (word) mul_u4f12::return#10 ← > (dword~) mul_u4f12::$1 [ mul_u4f12::return#10 ] ( main:2::sin16s_gen:5::mul_u4f12:72 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::return#10 ] main:2::sin16s_gen:5::mul_u4f12:77 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::return#10 ] main:2::sin16s_gen:5::mul_u4f12:88 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul_u4f12::return#10 ] main:2::sin16s_gen:5::mul_u4f12:93 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul_u4f12::return#10 ] )
  to:mul_u4f12::@return
mul_u4f12::@return: scope:[mul_u4f12]  from mul_u4f12::@2
  [131] return  [ mul_u4f12::return#10 ] ( main:2::sin16s_gen:5::mul_u4f12:72 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::return#10 ] main:2::sin16s_gen:5::mul_u4f12:77 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 mul_u4f12::return#10 ] main:2::sin16s_gen:5::mul_u4f12:88 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::x1#10 sin16s_gen::usinx#0 mul_u4f12::return#10 ] main:2::sin16s_gen:5::mul_u4f12:93 [ sin16s_gen::step#0 sin16s_gen::x#10 sin16s_gen::sintab#10 sin16s_gen::i#10 sin16s_gen::isUpper#10 sin16s_gen::usinx#0 mul_u4f12::return#10 ] )
  to:@return
divr16u: scope:[divr16u]  from sin16s_gen sin16s_gen::@11
  [132] (word) divr16u::divisor#6 ← phi( sin16s_gen/(const word) main::wavelength#0 sin16s_gen::@11/(const word) main::wavelength#0 ) [ divr16u::rem#10 divr16u::dividend#5 divr16u::divisor#6 ] ( main:2::sin16s_gen:5::divr16u:54 [ divr16u::rem#10 divr16u::dividend#5 divr16u::divisor#6 ] main:2::sin16s_gen:5::divr16u:58 [ sin16s_gen::stepi#0 divr16u::rem#10 divr16u::dividend#5 divr16u::divisor#6 ] )
  [132] (word) divr16u::dividend#5 ← phi( sin16s_gen/>(const dword) PI2_u4f28#0 sin16s_gen::@11/<(const dword) PI2_u4f28#0 ) [ divr16u::rem#10 divr16u::dividend#5 divr16u::divisor#6 ] ( main:2::sin16s_gen:5::divr16u:54 [ divr16u::rem#10 divr16u::dividend#5 divr16u::divisor#6 ] main:2::sin16s_gen:5::divr16u:58 [ sin16s_gen::stepi#0 divr16u::rem#10 divr16u::dividend#5 divr16u::divisor#6 ] )
  [132] (word) divr16u::rem#10 ← phi( sin16s_gen/(byte/signed byte/word/signed word/dword/signed dword) 0 sin16s_gen::@11/(word) divr16u::rem#4 ) [ divr16u::rem#10 divr16u::dividend#5 divr16u::divisor#6 ] ( main:2::sin16s_gen:5::divr16u:54 [ divr16u::rem#10 divr16u::dividend#5 divr16u::divisor#6 ] main:2::sin16s_gen:5::divr16u:58 [ sin16s_gen::stepi#0 divr16u::rem#10 divr16u::dividend#5 divr16u::divisor#6 ] )
  to:divr16u::@1
divr16u::@1: scope:[divr16u]  from divr16u divr16u::@3
  [133] (byte) divr16u::i#2 ← phi( divr16u/(byte/signed byte/word/signed word/dword/signed dword) 0 divr16u::@3/(byte) divr16u::i#1 ) [ divr16u::divisor#6 divr16u::rem#5 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 ] ( main:2::sin16s_gen:5::divr16u:54 [ divr16u::divisor#6 divr16u::rem#5 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 ] main:2::sin16s_gen:5::divr16u:58 [ sin16s_gen::stepi#0 divr16u::divisor#6 divr16u::rem#5 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 ] )
  [133] (word) divr16u::quotient#3 ← phi( divr16u/(byte/signed byte/word/signed word/dword/signed dword) 0 divr16u::@3/(word) divr16u::return#0 ) [ divr16u::divisor#6 divr16u::rem#5 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 ] ( main:2::sin16s_gen:5::divr16u:54 [ divr16u::divisor#6 divr16u::rem#5 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 ] main:2::sin16s_gen:5::divr16u:58 [ sin16s_gen::stepi#0 divr16u::divisor#6 divr16u::rem#5 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 ] )
  [133] (word) divr16u::dividend#3 ← phi( divr16u/(word) divr16u::dividend#5 divr16u::@3/(word) divr16u::dividend#0 ) [ divr16u::divisor#6 divr16u::rem#5 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 ] ( main:2::sin16s_gen:5::divr16u:54 [ divr16u::divisor#6 divr16u::rem#5 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 ] main:2::sin16s_gen:5::divr16u:58 [ sin16s_gen::stepi#0 divr16u::divisor#6 divr16u::rem#5 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 ] )
  [133] (word) divr16u::rem#5 ← phi( divr16u/(word) divr16u::rem#10 divr16u::@3/(word) divr16u::rem#11 ) [ divr16u::divisor#6 divr16u::rem#5 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 ] ( main:2::sin16s_gen:5::divr16u:54 [ divr16u::divisor#6 divr16u::rem#5 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 ] main:2::sin16s_gen:5::divr16u:58 [ sin16s_gen::stepi#0 divr16u::divisor#6 divr16u::rem#5 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 ] )
  [134] (word) divr16u::rem#0 ← (word) divr16u::rem#5 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 ] ( main:2::sin16s_gen:5::divr16u:54 [ divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 ] main:2::sin16s_gen:5::divr16u:58 [ sin16s_gen::stepi#0 divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 ] )
  [135] (byte~) divr16u::$1 ← > (word) divr16u::dividend#3 [ divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$1 ] ( main:2::sin16s_gen:5::divr16u:54 [ divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$1 ] main:2::sin16s_gen:5::divr16u:58 [ sin16s_gen::stepi#0 divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$1 ] )
  [136] (byte~) divr16u::$2 ← (byte~) divr16u::$1 & (byte/word/signed word/dword/signed dword) 128 [ divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$2 ] ( main:2::sin16s_gen:5::divr16u:54 [ divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$2 ] main:2::sin16s_gen:5::divr16u:58 [ sin16s_gen::stepi#0 divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$2 ] )
  [137] if((byte~) divr16u::$2==(byte/signed byte/word/signed word/dword/signed dword) 0) goto divr16u::@2 [ divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 ] ( main:2::sin16s_gen:5::divr16u:54 [ divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 ] main:2::sin16s_gen:5::divr16u:58 [ sin16s_gen::stepi#0 divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 ] )
  to:divr16u::@4
divr16u::@4: scope:[divr16u]  from divr16u::@1
  [138] (word) divr16u::rem#1 ← (word) divr16u::rem#0 | (byte/signed byte/word/signed word/dword/signed dword) 1 [ divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#1 ] ( main:2::sin16s_gen:5::divr16u:54 [ divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#1 ] main:2::sin16s_gen:5::divr16u:58 [ sin16s_gen::stepi#0 divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#1 ] )
  to:divr16u::@2
divr16u::@2: scope:[divr16u]  from divr16u::@1 divr16u::@4
  [139] (word) divr16u::rem#6 ← phi( divr16u::@1/(word) divr16u::rem#0 divr16u::@4/(word) divr16u::rem#1 ) [ divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#6 ] ( main:2::sin16s_gen:5::divr16u:54 [ divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#6 ] main:2::sin16s_gen:5::divr16u:58 [ sin16s_gen::stepi#0 divr16u::divisor#6 divr16u::dividend#3 divr16u::quotient#3 divr16u::i#2 divr16u::rem#6 ] )
  [140] (word) divr16u::dividend#0 ← (word) divr16u::dividend#3 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ divr16u::divisor#6 divr16u::quotient#3 divr16u::i#2 divr16u::dividend#0 divr16u::rem#6 ] ( main:2::sin16s_gen:5::divr16u:54 [ divr16u::divisor#6 divr16u::quotient#3 divr16u::i#2 divr16u::dividend#0 divr16u::rem#6 ] main:2::sin16s_gen:5::divr16u:58 [ sin16s_gen::stepi#0 divr16u::divisor#6 divr16u::quotient#3 divr16u::i#2 divr16u::dividend#0 divr16u::rem#6 ] )
  [141] (word) divr16u::quotient#1 ← (word) divr16u::quotient#3 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ divr16u::divisor#6 divr16u::i#2 divr16u::dividend#0 divr16u::rem#6 divr16u::quotient#1 ] ( main:2::sin16s_gen:5::divr16u:54 [ divr16u::divisor#6 divr16u::i#2 divr16u::dividend#0 divr16u::rem#6 divr16u::quotient#1 ] main:2::sin16s_gen:5::divr16u:58 [ sin16s_gen::stepi#0 divr16u::divisor#6 divr16u::i#2 divr16u::dividend#0 divr16u::rem#6 divr16u::quotient#1 ] )
  [142] if((word) divr16u::rem#6<(word) divr16u::divisor#6) goto divr16u::@3 [ divr16u::divisor#6 divr16u::i#2 divr16u::dividend#0 divr16u::rem#6 divr16u::quotient#1 ] ( main:2::sin16s_gen:5::divr16u:54 [ divr16u::divisor#6 divr16u::i#2 divr16u::dividend#0 divr16u::rem#6 divr16u::quotient#1 ] main:2::sin16s_gen:5::divr16u:58 [ sin16s_gen::stepi#0 divr16u::divisor#6 divr16u::i#2 divr16u::dividend#0 divr16u::rem#6 divr16u::quotient#1 ] )
  to:divr16u::@5
divr16u::@5: scope:[divr16u]  from divr16u::@2
  [143] (word) divr16u::quotient#2 ← ++ (word) divr16u::quotient#1 [ divr16u::divisor#6 divr16u::i#2 divr16u::dividend#0 divr16u::rem#6 divr16u::quotient#2 ] ( main:2::sin16s_gen:5::divr16u:54 [ divr16u::divisor#6 divr16u::i#2 divr16u::dividend#0 divr16u::rem#6 divr16u::quotient#2 ] main:2::sin16s_gen:5::divr16u:58 [ sin16s_gen::stepi#0 divr16u::divisor#6 divr16u::i#2 divr16u::dividend#0 divr16u::rem#6 divr16u::quotient#2 ] )
  [144] (word) divr16u::rem#2 ← (word) divr16u::rem#6 - (word) divr16u::divisor#6 [ divr16u::divisor#6 divr16u::i#2 divr16u::dividend#0 divr16u::quotient#2 divr16u::rem#2 ] ( main:2::sin16s_gen:5::divr16u:54 [ divr16u::divisor#6 divr16u::i#2 divr16u::dividend#0 divr16u::quotient#2 divr16u::rem#2 ] main:2::sin16s_gen:5::divr16u:58 [ sin16s_gen::stepi#0 divr16u::divisor#6 divr16u::i#2 divr16u::dividend#0 divr16u::quotient#2 divr16u::rem#2 ] )
  to:divr16u::@3
divr16u::@3: scope:[divr16u]  from divr16u::@2 divr16u::@5
  [145] (word) divr16u::return#0 ← phi( divr16u::@2/(word) divr16u::quotient#1 divr16u::@5/(word) divr16u::quotient#2 ) [ divr16u::return#0 divr16u::divisor#6 divr16u::i#2 divr16u::rem#11 divr16u::dividend#0 ] ( main:2::sin16s_gen:5::divr16u:54 [ divr16u::return#0 divr16u::divisor#6 divr16u::i#2 divr16u::rem#11 divr16u::dividend#0 ] main:2::sin16s_gen:5::divr16u:58 [ sin16s_gen::stepi#0 divr16u::return#0 divr16u::divisor#6 divr16u::i#2 divr16u::rem#11 divr16u::dividend#0 ] )
  [145] (word) divr16u::rem#11 ← phi( divr16u::@2/(word) divr16u::rem#6 divr16u::@5/(word) divr16u::rem#2 ) [ divr16u::return#0 divr16u::divisor#6 divr16u::i#2 divr16u::rem#11 divr16u::dividend#0 ] ( main:2::sin16s_gen:5::divr16u:54 [ divr16u::return#0 divr16u::divisor#6 divr16u::i#2 divr16u::rem#11 divr16u::dividend#0 ] main:2::sin16s_gen:5::divr16u:58 [ sin16s_gen::stepi#0 divr16u::return#0 divr16u::divisor#6 divr16u::i#2 divr16u::rem#11 divr16u::dividend#0 ] )
  [146] (byte) divr16u::i#1 ← ++ (byte) divr16u::i#2 [ divr16u::return#0 divr16u::divisor#6 divr16u::rem#11 divr16u::dividend#0 divr16u::i#1 ] ( main:2::sin16s_gen:5::divr16u:54 [ divr16u::return#0 divr16u::divisor#6 divr16u::rem#11 divr16u::dividend#0 divr16u::i#1 ] main:2::sin16s_gen:5::divr16u:58 [ sin16s_gen::stepi#0 divr16u::return#0 divr16u::divisor#6 divr16u::rem#11 divr16u::dividend#0 divr16u::i#1 ] )
  [147] if((byte) divr16u::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 16) goto divr16u::@1 [ divr16u::return#0 divr16u::divisor#6 divr16u::rem#11 divr16u::dividend#0 divr16u::i#1 ] ( main:2::sin16s_gen:5::divr16u:54 [ divr16u::return#0 divr16u::divisor#6 divr16u::rem#11 divr16u::dividend#0 divr16u::i#1 ] main:2::sin16s_gen:5::divr16u:58 [ sin16s_gen::stepi#0 divr16u::return#0 divr16u::divisor#6 divr16u::rem#11 divr16u::dividend#0 divr16u::i#1 ] )
  to:divr16u::@6
divr16u::@6: scope:[divr16u]  from divr16u::@3
  [148] (word) rem16u#1 ← (word) divr16u::rem#11 [ divr16u::return#0 rem16u#1 ] ( main:2::sin16s_gen:5::divr16u:54 [ divr16u::return#0 rem16u#1 ] main:2::sin16s_gen:5::divr16u:58 [ sin16s_gen::stepi#0 divr16u::return#0 rem16u#1 ] )
  to:divr16u::@return
divr16u::@return: scope:[divr16u]  from divr16u::@6
  [149] return  [ divr16u::return#0 rem16u#1 ] ( main:2::sin16s_gen:5::divr16u:54 [ divr16u::return#0 rem16u#1 ] main:2::sin16s_gen:5::divr16u:58 [ sin16s_gen::stepi#0 divr16u::return#0 rem16u#1 ] )
  to:@return
