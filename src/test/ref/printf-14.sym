(label) @1
(label) @2
(label) @begin
(label) @end
(const byte*) DIGITS[]  = (byte*) "0123456789abcdef"z
(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = (byte) 1
(const byte) RADIX::BINARY = (number) 2
(const byte) RADIX::DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL = (number) 8
(const byte*) RADIX_DECIMAL_VALUES_CHAR[]  = { (byte) $64, (byte) $a }
(const byte) SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = (byte) $c
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@return
(const byte) main::c = (byte) 7
(const byte*) main::str[(byte) 1]  = (byte*) ""
(void*()) memcpy((void*) memcpy::destination , (void*) memcpy::source , (word) memcpy::num)
(label) memcpy::@1
(label) memcpy::@2
(label) memcpy::@return
(void*) memcpy::destination
(const void*) memcpy::destination#0 destination = (void*) 1024
(byte*) memcpy::dst
(byte*) memcpy::dst#1 dst zp[2]:4 1.000000001E9
(byte*) memcpy::dst#2 dst zp[2]:4 1.000000001E9
(word) memcpy::num
(const word) memcpy::num#0 num = (word)(number) $28*(number) $19-(number) $28
(void*) memcpy::return
(void*) memcpy::source
(const void*) memcpy::source#0 source = (void*)(number) $400+(number) $28
(byte*) memcpy::src
(byte*) memcpy::src#1 src zp[2]:2 2.000000002E9
(byte*) memcpy::src#2 src zp[2]:2 1.000000001E9
(byte*) memcpy::src_end
(const byte*) memcpy::src_end#0 src_end = (byte*)(const void*) memcpy::source#0+(const word) memcpy::num#0
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(label) memset::@1
(label) memset::@2
(label) memset::@3
(label) memset::@return
(byte) memset::c
(byte) memset::c#4 reg byte x 1.25000000125E8
(byte*) memset::dst
(byte*) memset::dst#1 dst zp[2]:4 2.000000002E9
(byte*) memset::dst#2 dst zp[2]:4 1.3366666683333335E9
(byte*) memset::dst#4 dst zp[2]:4 2.0000002E7
(byte*) memset::end
(byte*) memset::end#0 end zp[2]:2 1.683333336666667E8
(word) memset::num
(word) memset::num#2 num zp[2]:2 1.0000001E7
(void*) memset::return
(void*) memset::str
(void*) memset::str#3 str zp[2]:4
(struct printf_buffer_number) printf_buffer loadstore mem[12] = {}
(const byte*) printf_buffer_number::digits[(number) $b]  = { fill( $b, 0) }
(byte) printf_buffer_number::sign
(void()) printf_char((byte) printf_char::ch)
(byte*~) printf_char::$6 zp[2]:12 2000002.0
(label) printf_char::@1
(label) printf_char::@2
(label) printf_char::@3
(label) printf_char::@4
(label) printf_char::@return
(byte) printf_char::ch
(byte) printf_char::ch#1 reg byte a 200002.0
(byte) printf_char::ch#2 reg byte a 2002.0
(byte) printf_char::ch#3 reg byte a 1101003.0
(void()) printf_cls()
(label) printf_cls::@1
(label) printf_cls::@return
(byte*) printf_cursor_ptr loadstore zp[2]:12 132077.54716981133
(byte) printf_cursor_x loadstore zp[1]:10 115386.71153846156
(byte) printf_cursor_y loadstore zp[1]:11 129631.66666666666
(byte) printf_format_number::justify_left
(byte) printf_format_number::min_length
(byte) printf_format_number::radix
(byte) printf_format_number::sign_always
(byte) printf_format_number::upper_case
(byte) printf_format_number::zero_padding
(byte) printf_format_string::justify_left
(byte) printf_format_string::min_length
(void()) printf_ln()
(byte*~) printf_ln::$0 zp[2]:12 2000002.0
(byte*~) printf_ln::$1 zp[2]:12 2000002.0
(label) printf_ln::@return
(void()) printf_number_buffer((byte) printf_number_buffer::buffer_sign , (byte*) printf_number_buffer::buffer_digits , (byte) printf_number_buffer::format_min_length , (byte) printf_number_buffer::format_justify_left , (byte) printf_number_buffer::format_sign_always , (byte) printf_number_buffer::format_zero_padding , (byte) printf_number_buffer::format_upper_case , (byte) printf_number_buffer::format_radix)
(label) printf_number_buffer::@1
(label) printf_number_buffer::@2
(label) printf_number_buffer::@3
(label) printf_number_buffer::@return
(struct printf_buffer_number) printf_number_buffer::buffer
(byte*) printf_number_buffer::buffer_digits
(const byte*) printf_number_buffer::buffer_digits#0 buffer_digits = (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
(byte) printf_number_buffer::buffer_sign
(byte) printf_number_buffer::buffer_sign#0 reg byte a 701.0
(struct printf_format_number) printf_number_buffer::format
(byte) printf_number_buffer::format_justify_left
(byte) printf_number_buffer::format_min_length
(byte) printf_number_buffer::format_radix
(byte) printf_number_buffer::format_sign_always
(byte) printf_number_buffer::format_upper_case
(byte) printf_number_buffer::format_zero_padding
(signed byte) printf_number_buffer::len
(signed byte) printf_number_buffer::padding
(void()) printf_str((byte*) printf_str::str)
(label) printf_str::@1
(label) printf_str::@2
(label) printf_str::@3
(label) printf_str::@4
(label) printf_str::@5
(label) printf_str::@return
(byte) printf_str::ch
(byte) printf_str::ch#0 reg byte a 100001.0
(byte*) printf_str::str
(byte*) printf_str::str#0 str zp[2]:8 42857.57142857143
(byte*) printf_str::str#4 str zp[2]:8 205002.5
(byte*) printf_str::str#6 str zp[2]:8 10001.0
(void()) printf_uchar((byte) printf_uchar::uvalue , (byte) printf_uchar::format_min_length , (byte) printf_uchar::format_justify_left , (byte) printf_uchar::format_sign_always , (byte) printf_uchar::format_zero_padding , (byte) printf_uchar::format_upper_case , (byte) printf_uchar::format_radix)
(label) printf_uchar::@1
(label) printf_uchar::@2
(label) printf_uchar::@return
(struct printf_format_number) printf_uchar::format
(byte) printf_uchar::format_justify_left
(byte) printf_uchar::format_min_length
(byte) printf_uchar::format_radix
(byte) printf_uchar::format_sign_always
(byte) printf_uchar::format_upper_case
(byte) printf_uchar::format_zero_padding
(byte) printf_uchar::uvalue
(void()) uctoa((byte) uctoa::value , (byte*) uctoa::buffer , (byte) uctoa::radix)
(label) uctoa::@1
(label) uctoa::@2
(label) uctoa::@3
(label) uctoa::@4
(label) uctoa::@5
(label) uctoa::@6
(label) uctoa::@7
(label) uctoa::@return
(byte*) uctoa::buffer
(byte*) uctoa::buffer#11 buffer zp[2]:8 3500.4999999999995
(byte*) uctoa::buffer#14 buffer zp[2]:8 15001.5
(byte*) uctoa::buffer#3 buffer zp[2]:8 2002.0
(byte*) uctoa::buffer#4 buffer zp[2]:8 20002.0
(byte) uctoa::digit
(byte) uctoa::digit#1 digit zp[1]:6 20002.0
(byte) uctoa::digit#2 digit zp[1]:6 3077.230769230769
(byte) uctoa::digit_value
(byte) uctoa::digit_value#0 digit_value zp[1]:14 6000.6
(byte*) uctoa::digit_values
(byte) uctoa::max_digits
(const byte) uctoa::max_digits#1 max_digits = (byte) 3
(byte) uctoa::radix
(byte) uctoa::started
(byte) uctoa::started#2 started zp[1]:7 6000.6
(byte) uctoa::started#4 started zp[1]:7 10001.0
(byte) uctoa::value
(byte) uctoa::value#0 reg byte x 10001.0
(byte) uctoa::value#2 reg byte x 6834.166666666666
(byte) uctoa::value#6 reg byte x 15001.5
(byte()) uctoa_append((byte*) uctoa_append::buffer , (byte) uctoa_append::value , (byte) uctoa_append::sub)
(label) uctoa_append::@1
(label) uctoa_append::@2
(label) uctoa_append::@3
(label) uctoa_append::@return
(byte*) uctoa_append::buffer
(byte*) uctoa_append::buffer#0 buffer zp[2]:8 13750.25
(byte) uctoa_append::digit
(byte) uctoa_append::digit#1 reg byte y 1.0000001E7
(byte) uctoa_append::digit#2 reg byte y 1.00500015E7
(byte) uctoa_append::return
(byte) uctoa_append::return#0 reg byte x 20002.0
(byte) uctoa_append::sub
(byte) uctoa_append::sub#0 sub zp[1]:14 3335000.5
(byte) uctoa_append::value
(byte) uctoa_append::value#0 reg byte x 36667.33333333333
(byte) uctoa_append::value#1 reg byte x 2.0000002E7
(byte) uctoa_append::value#2 reg byte x 5018334.166666666

reg byte a [ printf_char::ch#3 printf_char::ch#2 printf_char::ch#1 ]
reg byte x [ memset::c#4 ]
zp[2]:2 [ memcpy::src#2 memcpy::src#1 memset::num#2 memset::end#0 ]
zp[2]:4 [ memcpy::dst#2 memcpy::dst#1 memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 ]
zp[1]:6 [ uctoa::digit#2 uctoa::digit#1 ]
reg byte x [ uctoa::value#2 uctoa::value#6 uctoa::value#0 ]
zp[1]:7 [ uctoa::started#2 uctoa::started#4 ]
zp[2]:8 [ uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 uctoa::buffer#3 uctoa_append::buffer#0 printf_str::str#4 printf_str::str#6 printf_str::str#0 ]
reg byte x [ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ]
reg byte y [ uctoa_append::digit#2 uctoa_append::digit#1 ]
zp[1]:10 [ printf_cursor_x ]
zp[1]:11 [ printf_cursor_y ]
zp[2]:12 [ printf_cursor_ptr printf_char::$6 printf_ln::$0 printf_ln::$1 ]
reg byte a [ printf_str::ch#0 ]
reg byte a [ printf_number_buffer::buffer_sign#0 ]
zp[1]:14 [ uctoa::digit_value#0 uctoa_append::sub#0 ]
reg byte x [ uctoa_append::return#0 ]
mem[12] [ printf_buffer ]
