@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] (byte) printf_cursor_x ← (byte) 0
  [2] (byte) printf_cursor_y ← (byte) 0
  [3] (byte*) printf_cursor_ptr ← (byte*) 1024
  to:@2
@2: scope:[]  from @1
  [4] phi()
  [5] call main 
  to:@end
@end: scope:[]  from @2
  [6] phi()

(void()) main()
main: scope:[main]  from @2
  [7] phi()
  [8] call printf_cls 
  to:main::@1
main::@1: scope:[main]  from main
  [9] phi()
  [10] call printf_str 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [11] phi()
  [12] call printf_str 
  to:main::@return
main::@return: scope:[main]  from main::@2
  [13] return 
  to:@return

(void()) printf_str((byte*) printf_str::str)
printf_str: scope:[printf_str]  from main::@1 main::@2
  [14] (byte*) printf_str::str#5 ← phi( main::@1/(const byte*) main::str main::@2/(const byte*) main::str1 )
  to:printf_str::@1
printf_str::@1: scope:[printf_str]  from printf_str printf_str::@4 printf_str::@5
  [15] (byte*) printf_str::str#3 ← phi( printf_str/(byte*) printf_str::str#5 printf_str::@4/(byte*) printf_str::str#0 printf_str::@5/(byte*) printf_str::str#0 )
  to:printf_str::@2
printf_str::@2: scope:[printf_str]  from printf_str::@1
  [16] (byte) printf_str::ch#0 ← *((byte*) printf_str::str#3)
  [17] (byte*) printf_str::str#0 ← ++ (byte*) printf_str::str#3
  [18] if((byte) printf_str::ch#0!=(byte) 0) goto printf_str::@3
  to:printf_str::@return
printf_str::@return: scope:[printf_str]  from printf_str::@2
  [19] return 
  to:@return
printf_str::@3: scope:[printf_str]  from printf_str::@2
  [20] if((byte) printf_str::ch#0==(byte) '
') goto printf_str::@4
  to:printf_str::@5
printf_str::@5: scope:[printf_str]  from printf_str::@3
  [21] (byte) printf_char::ch#0 ← (byte) printf_str::ch#0
  [22] call printf_char 
  to:printf_str::@1
printf_str::@4: scope:[printf_str]  from printf_str::@3
  [23] phi()
  [24] call printf_ln 
  to:printf_str::@1

(void()) printf_ln()
printf_ln: scope:[printf_ln]  from printf_str::@4
  [25] (byte*~) printf_ln::$0 ← (byte*) printf_cursor_ptr - (byte) printf_cursor_x
  [26] (byte*~) printf_ln::$1 ← (byte*~) printf_ln::$0 + (byte) $28
  [27] (byte*) printf_cursor_ptr ← (byte*~) printf_ln::$1
  [28] (byte) printf_cursor_x ← (byte) 0
  [29] (byte) printf_cursor_y ← ++ (byte) printf_cursor_y
  to:printf_ln::@return
printf_ln::@return: scope:[printf_ln]  from printf_ln
  [30] return 
  to:@return

(void()) printf_char((byte) printf_char::ch)
printf_char: scope:[printf_char]  from printf_str::@5
  [31] *((byte*) printf_cursor_ptr) ← (byte) printf_char::ch#0
  [32] (byte*) printf_cursor_ptr ← ++ (byte*) printf_cursor_ptr
  [33] (byte) printf_cursor_x ← ++ (byte) printf_cursor_x
  [34] if((byte) printf_cursor_x!=(byte) $28) goto printf_char::@return
  to:printf_char::@1
printf_char::@1: scope:[printf_char]  from printf_char
  [35] (byte) printf_cursor_x ← (byte) 0
  [36] (byte) printf_cursor_y ← ++ (byte) printf_cursor_y
  [37] if((byte) printf_cursor_y!=(byte) $19) goto printf_char::@return
  to:printf_char::@2
printf_char::@2: scope:[printf_char]  from printf_char::@1
  [38] phi()
  [39] call memcpy 
  to:printf_char::@3
printf_char::@3: scope:[printf_char]  from printf_char::@2
  [40] phi()
  [41] call memset 
  to:printf_char::@4
printf_char::@4: scope:[printf_char]  from printf_char::@3
  [42] (byte*~) printf_char::$6 ← (byte*) printf_cursor_ptr - (byte) $28
  [43] (byte*) printf_cursor_ptr ← (byte*~) printf_char::$6
  [44] (byte) printf_cursor_y ← -- (byte) printf_cursor_y
  to:printf_char::@return
printf_char::@return: scope:[printf_char]  from printf_char printf_char::@1 printf_char::@4
  [45] return 
  to:@return

(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
memset: scope:[memset]  from printf_char::@3 printf_cls
  [46] (byte) memset::c#4 ← phi( printf_char::@3/(byte) ' ' printf_cls/(byte) ' ' )
  [46] (void*) memset::str#3 ← phi( printf_char::@3/(void*)(number) $400+(number) $28*(number) $19-(number) $28 printf_cls/(void*) 1024 )
  [46] (word) memset::num#2 ← phi( printf_char::@3/(byte) $28 printf_cls/(word)(number) $28*(number) $19 )
  [47] if((word) memset::num#2<=(byte) 0) goto memset::@return
  to:memset::@1
memset::@1: scope:[memset]  from memset
  [48] (byte*) memset::end#0 ← (byte*)(void*) memset::str#3 + (word) memset::num#2
  [49] (byte*) memset::dst#4 ← (byte*)(void*) memset::str#3
  to:memset::@2
memset::@2: scope:[memset]  from memset::@1 memset::@3
  [50] (byte*) memset::dst#2 ← phi( memset::@1/(byte*) memset::dst#4 memset::@3/(byte*) memset::dst#1 )
  [51] if((byte*) memset::dst#2!=(byte*) memset::end#0) goto memset::@3
  to:memset::@return
memset::@return: scope:[memset]  from memset memset::@2
  [52] return 
  to:@return
memset::@3: scope:[memset]  from memset::@2
  [53] *((byte*) memset::dst#2) ← (byte) memset::c#4
  [54] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2
  to:memset::@2

(void*()) memcpy((void*) memcpy::destination , (void*) memcpy::source , (word) memcpy::num)
memcpy: scope:[memcpy]  from printf_char::@2
  [55] phi()
  to:memcpy::@1
memcpy::@1: scope:[memcpy]  from memcpy memcpy::@2
  [56] (byte*) memcpy::dst#2 ← phi( memcpy/(byte*)(const void*) memcpy::destination#0 memcpy::@2/(byte*) memcpy::dst#1 )
  [56] (byte*) memcpy::src#2 ← phi( memcpy/(byte*)(const void*) memcpy::source#0 memcpy::@2/(byte*) memcpy::src#1 )
  [57] if((byte*) memcpy::src#2!=(const byte*) memcpy::src_end#0) goto memcpy::@2
  to:memcpy::@return
memcpy::@return: scope:[memcpy]  from memcpy::@1
  [58] return 
  to:@return
memcpy::@2: scope:[memcpy]  from memcpy::@1
  [59] *((byte*) memcpy::dst#2) ← *((byte*) memcpy::src#2)
  [60] (byte*) memcpy::dst#1 ← ++ (byte*) memcpy::dst#2
  [61] (byte*) memcpy::src#1 ← ++ (byte*) memcpy::src#2
  to:memcpy::@1

(void()) printf_cls()
printf_cls: scope:[printf_cls]  from main
  [62] phi()
  [63] call memset 
  to:printf_cls::@1
printf_cls::@1: scope:[printf_cls]  from printf_cls
  [64] (byte*) printf_cursor_ptr ← (byte*) 1024
  [65] (byte) printf_cursor_x ← (byte) 0
  [66] (byte) printf_cursor_y ← (byte) 0
  to:printf_cls::@return
printf_cls::@return: scope:[printf_cls]  from printf_cls::@1
  [67] return 
  to:@return
