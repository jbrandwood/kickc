constant byte* const DEFAULT_SCREEN = (byte*) 2048
constant const byte MEMORYBLOCK_4000 = 4
constant const byte MEMORYBLOCK_8000 = $10
void main()
byte~ main::$7 reg byte a 22.0
constant byte* main::BLOCK_4000 = (byte*) 16384
constant byte* main::BLOCK_8000 = (byte*) 32768
byte main::i
byte main::i#1 reg byte x 22.0
byte main::i#2 reg byte x 18.333333333333332
byte main::i1
byte main::i1#1 reg byte x 22.0
byte main::i1#2 reg byte x 13.75
void memoryRemap(byte memoryRemap::remapBlocks , word memoryRemap::lowerPageOffset , word memoryRemap::upperPageOffset)
byte~ memoryRemap::$0 reg byte a 202.0
byte~ memoryRemap::$1 zp[1]:20 67.33333333333333
byte~ memoryRemap::$2 reg byte a 202.0
byte~ memoryRemap::$3 reg byte a 202.0
byte~ memoryRemap::$4 reg byte a 202.0
byte~ memoryRemap::$5 reg byte a 202.0
byte~ memoryRemap::$6 zp[1]:9 67.33333333333333
byte~ memoryRemap::$7 reg byte a 202.0
byte~ memoryRemap::$8 reg byte a 202.0
byte~ memoryRemap::$9 reg byte a 202.0
volatile byte memoryRemap::aVal loadstore zp[1]:6 7.769230769230769
word memoryRemap::lowerPageOffset
word memoryRemap::lowerPageOffset#0 lowerPageOffset zp[2]:17 11.0
word memoryRemap::lowerPageOffset#2 lowerPageOffset zp[2]:17 53.25
byte memoryRemap::remapBlocks
byte memoryRemap::remapBlocks#0 reg byte z 7.333333333333333
byte memoryRemap::remapBlocks#2 reg byte z 21.299999999999997
word memoryRemap::upperPageOffset
word memoryRemap::upperPageOffset#0 upperPageOffset zp[2]:21 22.0
word memoryRemap::upperPageOffset#2 upperPageOffset zp[2]:21 19.363636363636363
volatile byte memoryRemap::xVal loadstore zp[1]:7 12.625
volatile byte memoryRemap::yVal loadstore zp[1]:8 16.833333333333332
volatile byte memoryRemap::zVal loadstore zp[1]:10 101.0
void memoryRemap256M(byte memoryRemap256M::remapBlocks , dword memoryRemap256M::lowerPageOffset , dword memoryRemap256M::upperPageOffset)
dword~ memoryRemap256M::$0 zp[4]:11 11.0
byte~ memoryRemap256M::$1 reg byte a 22.0
byte~ memoryRemap256M::$10 reg byte a 22.0
byte~ memoryRemap256M::$13 reg byte a 22.0
byte~ memoryRemap256M::$17 reg byte a 22.0
word~ memoryRemap256M::$4 zp[2]:17 22.0
byte~ memoryRemap256M::$5 reg byte a 22.0
byte~ memoryRemap256M::$6 zp[1]:20 5.5
word~ memoryRemap256M::$7 zp[2]:21 22.0
byte~ memoryRemap256M::$8 reg byte a 22.0
byte~ memoryRemap256M::$9 reg byte a 22.0
volatile byte memoryRemap256M::aVal loadstore zp[1]:19 1.0
volatile byte memoryRemap256M::lMb loadstore zp[1]:15 0.7333333333333333
dword memoryRemap256M::lowerPageOffset
dword memoryRemap256M::lowerPageOffset#2 lowerPageOffset zp[4]:2 3.666666666666667
byte memoryRemap256M::remapBlocks
byte memoryRemap256M::remapBlocks#2 reg byte z 1.4666666666666666
volatile byte memoryRemap256M::uMb loadstore zp[1]:16 0.7857142857142857
dword memoryRemap256M::upperPageOffset
volatile byte memoryRemap256M::xVal loadstore zp[1]:23 2.2
volatile byte memoryRemap256M::yVal loadstore zp[1]:24 2.75
volatile byte memoryRemap256M::zVal loadstore zp[1]:25 11.0
void memoryRemapBlock(byte memoryRemapBlock::blockPage , word memoryRemapBlock::memoryPage)
byte memoryRemapBlock::block
byte memoryRemapBlock::block#0 reg byte a 22.0
byte memoryRemapBlock::blockBits
byte memoryRemapBlock::blockBits#0 reg byte a 22.0
byte memoryRemapBlock::blockPage
byte memoryRemapBlock::blockPage#2 reg byte x 11.0
word memoryRemapBlock::memoryPage
word memoryRemapBlock::pageOffset
word memoryRemapBlock::pageOffset#0 pageOffset zp[2]:17 6.6000000000000005

reg byte x [ main::i#2 main::i#1 ]
reg byte x [ main::i1#2 main::i1#1 ]
reg byte x [ memoryRemapBlock::blockPage#2 ]
reg byte z [ memoryRemap::remapBlocks#2 memoryRemap::remapBlocks#0 ]
zp[4]:2 [ memoryRemap256M::lowerPageOffset#2 ]
reg byte z [ memoryRemap256M::remapBlocks#2 ]
reg byte a [ main::$7 ]
reg byte a [ memoryRemapBlock::block#0 ]
reg byte a [ memoryRemapBlock::blockBits#0 ]
reg byte a [ memoryRemap::$0 ]
zp[1]:6 [ memoryRemap::aVal ]
reg byte a [ memoryRemap::$2 ]
reg byte a [ memoryRemap::$3 ]
reg byte a [ memoryRemap::$4 ]
zp[1]:7 [ memoryRemap::xVal ]
reg byte a [ memoryRemap::$5 ]
zp[1]:8 [ memoryRemap::yVal ]
zp[1]:9 [ memoryRemap::$6 ]
reg byte a [ memoryRemap::$7 ]
reg byte a [ memoryRemap::$8 ]
reg byte a [ memoryRemap::$9 ]
zp[1]:10 [ memoryRemap::zVal ]
zp[4]:11 [ memoryRemap256M::$0 ]
reg byte a [ memoryRemap256M::$1 ]
zp[1]:15 [ memoryRemap256M::lMb ]
zp[1]:16 [ memoryRemap256M::uMb ]
zp[2]:17 [ memoryRemap256M::$4 memoryRemap::lowerPageOffset#2 memoryRemap::lowerPageOffset#0 memoryRemapBlock::pageOffset#0 ]
reg byte a [ memoryRemap256M::$5 ]
zp[1]:19 [ memoryRemap256M::aVal ]
zp[1]:20 [ memoryRemap256M::$6 memoryRemap::$1 ]
zp[2]:21 [ memoryRemap256M::$7 memoryRemap::upperPageOffset#2 memoryRemap::upperPageOffset#0 ]
reg byte a [ memoryRemap256M::$8 ]
reg byte a [ memoryRemap256M::$9 ]
reg byte a [ memoryRemap256M::$10 ]
zp[1]:23 [ memoryRemap256M::xVal ]
zp[1]:24 [ memoryRemap256M::yVal ]
reg byte a [ memoryRemap256M::$13 ]
reg byte a [ memoryRemap256M::$17 ]
zp[1]:25 [ memoryRemap256M::zVal ]
