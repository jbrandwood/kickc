(label) @1
(label) @begin
(label) @end
(const byte) OFFSET_STRUCT_PERSON_INITIALS = (byte) 1
(byte) Person::id
(const byte*) Person::initials[(number) 4]  = { fill( 4, 0) }
(const byte*) SCREEN = (byte*) 1024
(const byte) SIZEOF_STRUCT_PERSON = (byte) 5
(byte) idx
(byte) idx#10 reg byte x 1.0
(byte) idx#15 reg byte x 2.0
(byte) idx#4 reg byte x 3.0
(byte) idx#5 reg byte x 3.0
(byte) idx#6 reg byte x 2.0
(byte) idx#7 reg byte x 2.0
(byte) idx#8 reg byte x 3.0
(void()) main()
(label) main::@1
(label) main::@return
(struct Person*) main::person
(const struct Person*) main::person#1 person = (const struct Person*) persons+(const byte) SIZEOF_STRUCT_PERSON
(const struct Person*) persons[]  = { { id: (byte) 1, initials: (string) "jgr" }, { id: (byte) 8, initials: (string) "hbg" } }
(void()) print_person((struct Person*) print_person::person)
(byte~) print_person::$0 reg byte a 4.0
(byte*~) print_person::$3 zp[2]:4 4.0
(byte*~) print_person::$4 zp[2]:2 4.0
(label) print_person::@return
(struct Person*) print_person::person
(struct Person*) print_person::person#2 person zp[2]:2

zp[2]:2 [ print_person::person#2 print_person::$4 ]
reg byte x [ idx#15 idx#10 ]
reg byte a [ print_person::$0 ]
reg byte x [ idx#4 ]
reg byte x [ idx#5 ]
reg byte x [ idx#6 ]
zp[2]:4 [ print_person::$3 ]
reg byte x [ idx#7 ]
reg byte x [ idx#8 ]
