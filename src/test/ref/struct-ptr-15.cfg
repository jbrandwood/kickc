
void main()
main: scope:[main]  from
  [0] *((char *)(struct Point *)circles+OFFSET_STRUCT_CIRCLE_CENTER) = 2
  [1] *((char *)(struct Point *)circles+OFFSET_STRUCT_POINT_Y+OFFSET_STRUCT_CIRCLE_CENTER) = 3
  [2] *((char *)circles) = 5
  [3] *((char *)(struct Point *)circles+1*SIZEOF_STRUCT_CIRCLE+OFFSET_STRUCT_CIRCLE_CENTER) = 8
  [4] *((char *)(struct Point *)circles+1*SIZEOF_STRUCT_CIRCLE+OFFSET_STRUCT_POINT_Y+OFFSET_STRUCT_CIRCLE_CENTER) = 9
  [5] *((char *)circles+1*SIZEOF_STRUCT_CIRCLE) = $f
  to:main::@1
main::@1: scope:[main]  from main main::@1
  [6] main::i#2 = phi( main/0, main::@1/main::i#1 )
  [6] main::idx#3 = phi( main/0, main::@1/main::idx#2 )
  [6] main::ptr#2 = phi( main/circles, main::@1/main::ptr#1 )
  [7] main::x#0 = ((char *)(struct Point *)main::ptr#2)[OFFSET_STRUCT_CIRCLE_CENTER]
  [8] main::$28 = (struct Point *)main::ptr#2 + OFFSET_STRUCT_CIRCLE_CENTER
  [9] main::y#0 = ((char *)main::$28)[OFFSET_STRUCT_POINT_Y]
  [10] main::SCREEN[main::idx#3] = main::x#0
  [11] main::idx#1 = ++ main::idx#3
  [12] main::SCREEN[main::idx#1] = main::y#0
  [13] main::idx#2 = ++ main::idx#1
  [14] main::ptr#1 = main::ptr#2 + SIZEOF_STRUCT_CIRCLE
  [15] main::i#1 = ++ main::i#2
  [16] if(main::i#1!=2) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@1
  [17] return 
  to:@return
