@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] *((const nomodify byte*) SCREEN) ← (byte) '0'+(const byte) SIZEOF_STRUCT_POINT
  [5] *((const nomodify byte*) SCREEN+(byte) 1) ← (byte) '0'+(const byte) SIZEOF_STRUCT_CIRCLE
  [6] *((const nomodify byte*) SCREEN+(byte) 3) ← (byte) '0'+(const byte) SIZEOF_STRUCT_POINT
  [7] *((const nomodify byte*) SCREEN+(byte) 4) ← (byte) '0'+(const byte) SIZEOF_STRUCT_CIRCLE
  [8] *((const nomodify byte*) SCREEN+(byte) 6) ← (byte) '0'+(const nomodify byte) main::NUM_POINTS*(const byte) SIZEOF_STRUCT_POINT
  [9] *((const nomodify byte*) SCREEN+(byte) 7) ← (byte) '0'+(const nomodify byte) main::NUM_POINTS*(const byte) SIZEOF_STRUCT_POINT/(const byte) SIZEOF_STRUCT_POINT
  [10] *((const nomodify byte*) SCREEN+(byte) 8) ← (byte) '0'+(const nomodify byte) main::NUM_CIRCLES*(const byte) SIZEOF_STRUCT_CIRCLE
  [11] *((const nomodify byte*) SCREEN+(byte) 9) ← (byte) '0'+(const nomodify byte) main::NUM_CIRCLES*(const byte) SIZEOF_STRUCT_CIRCLE/(const byte) SIZEOF_STRUCT_CIRCLE
  to:main::@return
main::@return: scope:[main]  from main
  [12] return 
  to:@return
