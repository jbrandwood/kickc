(label) @1
(label) @begin
(label) @end
(const byte) OFFSET_STRUCT_POINT_Y = (byte) 1
(byte) Point::x
(byte) Point::y
(const nomodify byte*) SCREEN = (byte*) 1024
(struct Point()) getPoint((byte) getPoint::x , (byte) getPoint::y)
(label) getPoint::@return
(byte) getPoint::p_x
(byte) getPoint::p_y
(struct Point) getPoint::return
(byte) getPoint::return_x
(byte) getPoint::return_x#0 reg byte x 11.0
(byte) getPoint::return_x#1 reg byte x 11.0
(byte) getPoint::return_x#2 reg byte x 5.5
(byte) getPoint::return_y
(byte) getPoint::return_y#0 reg byte a 11.0
(byte) getPoint::return_y#1 reg byte a 11.0
(byte) getPoint::return_y#2 reg byte a 3.6666666666666665
(byte) getPoint::x
(byte) getPoint::y
(void()) main()
(byte~) main::$0_x reg byte x 11.0
(byte~) main::$0_y reg byte a 11.0
(byte~) main::$1_x reg byte x 11.0
(byte~) main::$1_y reg byte a 11.0
(label) main::@1
(label) main::@2
(label) main::@return
(struct Point) main::point1 loadstore zp[2]:2
(struct Point) main::point2 loadstore zp[2]:4

reg byte x [ getPoint::return_x#2 ]
reg byte a [ getPoint::return_y#2 ]
reg byte x [ getPoint::return_x#0 ]
reg byte a [ getPoint::return_y#0 ]
reg byte x [ main::$0_x ]
reg byte a [ main::$0_y ]
reg byte x [ getPoint::return_x#1 ]
reg byte a [ getPoint::return_y#1 ]
reg byte x [ main::$1_x ]
reg byte a [ main::$1_y ]
zp[2]:2 [ main::point1 ]
zp[2]:4 [ main::point2 ]
