
void __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] render_screen_showing = 0
  [2] score_bcd = 0
  [3] irq_raster_next = IRQ_RASTER_FIRST
  [4] irq_sprite_ypos = SPRITES_FIRST_YPOS+$15
  to:__start::__init1_toSpritePtr1
__start::__init1_toSpritePtr1: scope:[__start]  from __start::__init1
  [5] phi()
  to:__start::__init1_@1
__start::__init1_@1: scope:[__start]  from __start::__init1_toSpritePtr1
  [6] irq_sprite_ptr = __start::__init1_toSpritePtr1_return#0+3
  [7] irq_cnt = 0
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1_@1
  [8] phi()
  [9] call main 
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [10] return 
  to:@return

__interrupt(hardware_clobber) void sprites_irq()
sprites_irq: scope:[sprites_irq]  from
  asm { cld  }
  [12] sprites_irq::ypos#0 = irq_sprite_ypos
  [13] *SPRITES_YPOS = sprites_irq::ypos#0
  [14] *(SPRITES_YPOS+2) = sprites_irq::ypos#0
  [15] *(SPRITES_YPOS+4) = sprites_irq::ypos#0
  [16] *(SPRITES_YPOS+6) = sprites_irq::ypos#0
  [17] sprites_irq::$0 = irq_raster_next + 1
  [18] sprites_irq::raster_sprite_gfx_modify = sprites_irq::$0
  to:sprites_irq::@8
sprites_irq::@8: scope:[sprites_irq]  from sprites_irq sprites_irq::@8
  [19] if(*RASTER<sprites_irq::raster_sprite_gfx_modify) goto sprites_irq::@8
  to:sprites_irq::@9
sprites_irq::@9: scope:[sprites_irq]  from sprites_irq::@8
  [20] sprites_irq::ptr#0 = irq_sprite_ptr
  [21] if(render_screen_showing==0) goto sprites_irq::@1
  to:sprites_irq::@10
sprites_irq::@10: scope:[sprites_irq]  from sprites_irq::@9
  [22] *PLAYFIELD_SPRITE_PTRS_2 = sprites_irq::ptr#0
  [23] sprites_irq::ptr#3 = ++ sprites_irq::ptr#0
  [24] *(PLAYFIELD_SPRITE_PTRS_2+1) = sprites_irq::ptr#3
  [25] *(PLAYFIELD_SPRITE_PTRS_2+2) = sprites_irq::ptr#3
  [26] sprites_irq::ptr#4 = ++ sprites_irq::ptr#3
  [27] *(PLAYFIELD_SPRITE_PTRS_2+3) = sprites_irq::ptr#4
  to:sprites_irq::@2
sprites_irq::@2: scope:[sprites_irq]  from sprites_irq::@1 sprites_irq::@10
  [28] irq_cnt = ++ irq_cnt
  [29] if(irq_cnt==9) goto sprites_irq::@3
  to:sprites_irq::@6
sprites_irq::@6: scope:[sprites_irq]  from sprites_irq::@2
  [30] if(irq_cnt==$a) goto sprites_irq::@4
  to:sprites_irq::@7
sprites_irq::@7: scope:[sprites_irq]  from sprites_irq::@6
  [31] irq_raster_next = irq_raster_next + $14
  [32] irq_sprite_ypos = irq_sprite_ypos + $15
  [33] irq_sprite_ptr = irq_sprite_ptr + 3
  to:sprites_irq::@5
sprites_irq::@5: scope:[sprites_irq]  from sprites_irq::@11 sprites_irq::@4 sprites_irq::@7
  [34] *RASTER = irq_raster_next
  [35] *IRQ_STATUS = IRQ_RASTER
  to:sprites_irq::@return
sprites_irq::@return: scope:[sprites_irq]  from sprites_irq::@5
  [36] return 
  to:@return
sprites_irq::@4: scope:[sprites_irq]  from sprites_irq::@6
  [37] irq_cnt = 0
  [38] irq_raster_next = IRQ_RASTER_FIRST
  [39] irq_sprite_ypos = irq_sprite_ypos + $15
  [40] irq_sprite_ptr = irq_sprite_ptr + 3
  to:sprites_irq::@5
sprites_irq::@3: scope:[sprites_irq]  from sprites_irq::@2
  [41] irq_raster_next = irq_raster_next + $15
  [42] irq_sprite_ypos = SPRITES_FIRST_YPOS
  to:sprites_irq::toSpritePtr1
sprites_irq::toSpritePtr1: scope:[sprites_irq]  from sprites_irq::@3
  [43] phi()
  to:sprites_irq::@11
sprites_irq::@11: scope:[sprites_irq]  from sprites_irq::toSpritePtr1
  [44] irq_sprite_ptr = sprites_irq::toSpritePtr1_return#0
  to:sprites_irq::@5
sprites_irq::@1: scope:[sprites_irq]  from sprites_irq::@9
  [45] *PLAYFIELD_SPRITE_PTRS_1 = sprites_irq::ptr#0
  [46] sprites_irq::ptr#1 = ++ sprites_irq::ptr#0
  [47] *(PLAYFIELD_SPRITE_PTRS_1+1) = sprites_irq::ptr#1
  [48] *(PLAYFIELD_SPRITE_PTRS_1+2) = sprites_irq::ptr#1
  [49] sprites_irq::ptr#2 = ++ sprites_irq::ptr#1
  [50] *(PLAYFIELD_SPRITE_PTRS_1+3) = sprites_irq::ptr#2
  to:sprites_irq::@2

void main()
main: scope:[main]  from __start::@1
  [51] phi()
  to:main::sid_rnd_init1
main::sid_rnd_init1: scope:[main]  from main
  [52] *((word*)SID+OFFSET_STRUCT_MOS6581_SID_CH3_FREQ) = $ffff
  [53] *((byte*)SID+OFFSET_STRUCT_MOS6581_SID_CH3_CONTROL) = SID_CONTROL_NOISE
  to:main::@8
main::@8: scope:[main]  from main::sid_rnd_init1
  asm { sei  }
  [55] call render_init 
  to:main::@9
main::@9: scope:[main]  from main::@8
  [56] phi()
  [57] call sprites_init 
  to:main::@10
main::@10: scope:[main]  from main::@9
  [58] phi()
  [59] call sprites_irq_init 
  to:main::@11
main::@11: scope:[main]  from main::@10
  [60] phi()
  [61] call play_init 
  to:main::@12
main::@12: scope:[main]  from main::@11
  [62] phi()
  [63] call play_spawn_current 
  to:main::@13
main::@13: scope:[main]  from main::@12
  [64] phi()
  [65] call play_spawn_current 
  to:main::@14
main::@14: scope:[main]  from main::@13
  [66] phi()
  [67] call render_playfield 
  to:main::@15
main::@15: scope:[main]  from main::@14
  [68] current_ypos#97 = current_ypos#5
  [69] current_xpos#118 = current_xpos#100
  [70] current_piece_gfx#111 = (byte*)PIECES[play_spawn_current::$7]
  [71] current_piece_char#99 = current_piece_char#4
  [72] call render_moving 
  to:main::@16
main::@16: scope:[main]  from main::@15
  [73] next_piece_idx#79 = play_spawn_current::piece_idx#2
  [74] call render_next 
  to:main::@17
main::@17: scope:[main]  from main::@16
  [75] current_piece#103 = (byte*)PIECES[play_spawn_current::$7]
  [76] current_piece_gfx#122 = (byte*)PIECES[play_spawn_current::$7]
  to:main::@1
main::@1: scope:[main]  from main::@17 main::@25 main::@6
  [77] level_bcd#10 = phi( main::@17/0, main::@25/level_bcd#18, main::@6/level_bcd#18 )
  [77] level#25 = phi( main::@17/0, main::@25/level#18, main::@6/level#18 )
  [77] lines_bcd#20 = phi( main::@17/0, main::@25/lines_bcd#16, main::@6/lines_bcd#16 )
  [77] current_movedown_counter#17 = phi( main::@17/0, main::@25/current_movedown_counter#15, main::@6/current_movedown_counter#15 )
  [77] keyboard_events_size#20 = phi( main::@17/0, main::@25/keyboard_events_size#17, main::@6/keyboard_events_size#17 )
  [77] next_piece_idx#23 = phi( main::@17/play_spawn_current::piece_idx#2, main::@25/next_piece_idx#17, main::@6/next_piece_idx#17 )
  [77] game_over#22 = phi( main::@17/game_over#53, main::@25/game_over#16, main::@6/game_over#16 )
  [77] current_ypos#10 = phi( main::@17/current_ypos#5, main::@25/current_ypos#20, main::@6/current_ypos#20 )
  [77] current_xpos#13 = phi( main::@17/current_xpos#100, main::@25/current_xpos#2, main::@6/current_xpos#2 )
  [77] current_piece_gfx#12 = phi( main::@17/current_piece_gfx#122, main::@25/current_piece_gfx#19, main::@6/current_piece_gfx#19 )
  [77] current_orientation#12 = phi( main::@17/0, main::@25/current_orientation#18, main::@6/current_orientation#18 )
  [77] current_piece_char#23 = phi( main::@17/current_piece_char#4, main::@25/current_piece_char#17, main::@6/current_piece_char#17 )
  [77] current_piece#23 = phi( main::@17/current_piece#103, main::@25/current_piece#16, main::@6/current_piece#16 )
  [77] current_movedown_slow#13 = phi( main::@17/current_movedown_slow#0, main::@25/current_movedown_slow#22, main::@6/current_movedown_slow#22 )
  [77] render_screen_render#19 = phi( main::@17/$20, main::@25/render_screen_render#12, main::@6/render_screen_render#19 )
  [77] render_screen_show#17 = phi( main::@17/0, main::@25/render_screen_show#14, main::@6/render_screen_show#17 )
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2
  [78] if(*RASTER!=$ff) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  [79] phi()
  [80] call render_show 
  to:main::@18
main::@18: scope:[main]  from main::@3
  [81] phi()
  [82] call keyboard_event_scan 
  to:main::@19
main::@19: scope:[main]  from main::@18
  [83] phi()
  [84] call keyboard_event_get 
  [85] keyboard_event_get::return#3 = keyboard_event_get::return#2
  to:main::@20
main::@20: scope:[main]  from main::@19
  [86] main::key_event#0 = keyboard_event_get::return#3
  [87] if(game_over#22==0) goto main::@4
  to:main::@5
main::@5: scope:[main]  from main::@20 main::@5
  [88] *BORDER_COLOR = ++ *BORDER_COLOR
  to:main::@5
main::@4: scope:[main]  from main::@20
  [89] play_movement::key_event#0 = main::key_event#0
  [90] call play_movement 
  [91] play_movement::return#3 = play_movement::return#2
  to:main::@21
main::@21: scope:[main]  from main::@4
  [92] main::render#1 = play_movement::return#3
  to:main::@6
main::@6: scope:[main]  from main::@21
  [93] if(main::render#1==0) goto main::@1
  to:main::@7
main::@7: scope:[main]  from main::@6
  [94] render_screen_render#63 = render_screen_render#19
  [95] call render_playfield 
  to:main::@22
main::@22: scope:[main]  from main::@7
  [96] current_ypos#98 = current_ypos#20
  [97] render_screen_render#64 = render_screen_render#19
  [98] current_xpos#119 = current_xpos#2
  [99] current_piece_gfx#112 = current_piece_gfx#19
  [100] current_piece_char#100 = current_piece_char#17
  [101] call render_moving 
  to:main::@23
main::@23: scope:[main]  from main::@22
  [102] render_screen_render#65 = render_screen_render#19
  [103] next_piece_idx#80 = next_piece_idx#17
  [104] call render_next 
  to:main::@24
main::@24: scope:[main]  from main::@23
  [105] phi()
  [106] call render_score 
  to:main::@25
main::@25: scope:[main]  from main::@24
  [107] phi()
  [108] call render_screen_swap 
  to:main::@1

void render_init()
render_init: scope:[render_init]  from main::@8
  [109] phi()
  to:render_init::vicSelectGfxBank1
render_init::vicSelectGfxBank1: scope:[render_init]  from render_init
  [110] *((byte*)CIA2+OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR) = 3
  to:render_init::vicSelectGfxBank1_toDd001
render_init::vicSelectGfxBank1_toDd001: scope:[render_init]  from render_init::vicSelectGfxBank1
  [111] phi()
  to:render_init::vicSelectGfxBank1_@1
render_init::vicSelectGfxBank1_@1: scope:[render_init]  from render_init::vicSelectGfxBank1_toDd001
  [112] *((byte*)CIA2) = render_init::vicSelectGfxBank1_toDd001_return#0
  to:render_init::@2
render_init::@2: scope:[render_init]  from render_init::vicSelectGfxBank1_@1
  [113] *D011 = VICII_ECM|VICII_DEN|VICII_RSEL|3
  [114] *BORDER_COLOR = BLACK
  [115] *BG_COLOR = BLACK
  [116] *BG_COLOR1 = *PIECES_COLORS_1
  [117] *BG_COLOR2 = *PIECES_COLORS_2
  [118] *BG_COLOR3 = GREY
  [119] call render_screen_original 
  to:render_init::@3
render_init::@3: scope:[render_init]  from render_init::@2
  [120] phi()
  [121] call render_screen_original 
  to:render_init::@1
render_init::@1: scope:[render_init]  from render_init::@1 render_init::@3
  [122] render_init::li_2#2 = phi( render_init::@1/render_init::li_2#1, render_init::@3/PLAYFIELD_SCREEN_2+2*$28+$10 )
  [122] render_init::li_1#2 = phi( render_init::@1/render_init::li_1#1, render_init::@3/PLAYFIELD_SCREEN_1+2*$28+$10 )
  [122] render_init::i#2 = phi( render_init::@1/render_init::i#1, render_init::@3/0 )
  [123] render_init::$5 = render_init::i#2 << 1
  [124] screen_lines_1[render_init::$5] = render_init::li_1#2
  [125] screen_lines_2[render_init::$5] = render_init::li_2#2
  [126] render_init::li_1#1 = render_init::li_1#2 + $28
  [127] render_init::li_2#1 = render_init::li_2#2 + $28
  [128] render_init::i#1 = ++ render_init::i#2
  [129] if(render_init::i#1!=PLAYFIELD_LINES-1+1) goto render_init::@1
  to:render_init::@return
render_init::@return: scope:[render_init]  from render_init::@1
  [130] return 
  to:@return

void sprites_init()
sprites_init: scope:[sprites_init]  from main::@9
  [131] *SPRITES_ENABLE = $f
  [132] *SPRITES_MC = 0
  [133] *SPRITES_EXPAND_Y = *SPRITES_MC
  [134] *SPRITES_EXPAND_X = *SPRITES_EXPAND_Y
  to:sprites_init::@1
sprites_init::@1: scope:[sprites_init]  from sprites_init sprites_init::@1
  [135] sprites_init::xpos#2 = phi( sprites_init/$18+$f*8, sprites_init::@1/sprites_init::xpos#1 )
  [135] sprites_init::s#2 = phi( sprites_init/0, sprites_init::@1/sprites_init::s#1 )
  [136] sprites_init::s2#0 = sprites_init::s#2 << 1
  [137] SPRITES_XPOS[sprites_init::s2#0] = sprites_init::xpos#2
  [138] SPRITES_COLOR[sprites_init::s#2] = BLACK
  [139] sprites_init::xpos#1 = sprites_init::xpos#2 + $18
  [140] sprites_init::s#1 = ++ sprites_init::s#2
  [141] if(sprites_init::s#1!=4) goto sprites_init::@1
  to:sprites_init::@return
sprites_init::@return: scope:[sprites_init]  from sprites_init::@1
  [142] return 
  to:@return

void sprites_irq_init()
sprites_irq_init: scope:[sprites_irq_init]  from main::@10
  asm { sei  }
  [144] *IRQ_STATUS = IRQ_RASTER
  asm { ldaCIA1_INTERRUPT  }
  [146] *PROCPORT_DDR = PROCPORT_DDR_MEMORY_MASK
  [147] *PROCPORT = PROCPORT_RAM_IO
  [148] *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_INTERRUPT) = CIA_INTERRUPT_CLEAR
  [149] *VICII_CONTROL = *VICII_CONTROL & $7f
  [150] *RASTER = IRQ_RASTER_FIRST
  [151] *IRQ_ENABLE = IRQ_RASTER
  [152] *HARDWARE_IRQ = &sprites_irq
  asm { cli  }
  to:sprites_irq_init::@return
sprites_irq_init::@return: scope:[sprites_irq_init]  from sprites_irq_init
  [154] return 
  to:@return

void play_init()
play_init: scope:[play_init]  from main::@11
  [155] phi()
  to:play_init::@1
play_init::@1: scope:[play_init]  from play_init play_init::@1
  [156] play_init::idx#2 = phi( play_init/0, play_init::@1/play_init::idx#1 )
  [156] play_init::pli#2 = phi( play_init/playfield, play_init::@1/play_init::pli#1 )
  [156] play_init::j#2 = phi( play_init/0, play_init::@1/play_init::j#1 )
  [157] play_init::$2 = play_init::j#2 << 1
  [158] playfield_lines[play_init::$2] = play_init::pli#2
  [159] playfield_lines_idx[play_init::j#2] = play_init::idx#2
  [160] play_init::pli#1 = play_init::pli#2 + PLAYFIELD_COLS
  [161] play_init::idx#1 = play_init::idx#2 + PLAYFIELD_COLS
  [162] play_init::j#1 = ++ play_init::j#2
  [163] if(play_init::j#1!=PLAYFIELD_LINES-1+1) goto play_init::@1
  to:play_init::@2
play_init::@2: scope:[play_init]  from play_init::@1
  [164] *(playfield_lines_idx+PLAYFIELD_LINES) = PLAYFIELD_COLS*PLAYFIELD_LINES
  [165] current_movedown_slow#0 = *MOVEDOWN_SLOW_SPEEDS
  to:play_init::@3
play_init::@3: scope:[play_init]  from play_init::@2 play_init::@3
  [166] play_init::b#2 = phi( play_init::@2/0, play_init::@3/play_init::b#1 )
  [167] play_init::$3 = play_init::b#2 << 2
  [168] score_add_bcd[play_init::$3] = SCORE_BASE_BCD[play_init::$3]
  [169] play_init::b#1 = ++ play_init::b#2
  [170] if(play_init::b#1!=5) goto play_init::@3
  to:play_init::@return
play_init::@return: scope:[play_init]  from play_init::@3
  [171] return 
  to:@return

void play_spawn_current()
play_spawn_current: scope:[play_spawn_current]  from main::@12 main::@13 play_move_down::@16
  [172] game_over#66 = phi( main::@12/0, main::@13/game_over#53, play_move_down::@16/game_over#22 )
  [172] next_piece_idx#18 = phi( main::@12/0, main::@13/play_spawn_current::piece_idx#2, play_move_down::@16/next_piece_idx#23 )
  [173] play_spawn_current::current_piece_idx#0 = next_piece_idx#18
  [174] play_spawn_current::$7 = play_spawn_current::current_piece_idx#0 << 1
  [175] current_piece_char#4 = PIECES_CHARS[play_spawn_current::current_piece_idx#0]
  [176] current_xpos#100 = PIECES_START_X[play_spawn_current::current_piece_idx#0]
  [177] current_ypos#5 = PIECES_START_Y[play_spawn_current::current_piece_idx#0]
  [178] play_collision::xpos#4 = current_xpos#100
  [179] play_collision::ypos#4 = current_ypos#5
  [180] current_piece#102 = (byte*)PIECES[play_spawn_current::$7]
  [181] call play_collision 
  [182] play_collision::return#10 = play_collision::return#15
  to:play_spawn_current::@4
play_spawn_current::@4: scope:[play_spawn_current]  from play_spawn_current
  [183] play_spawn_current::$1 = play_collision::return#10
  [184] if(play_spawn_current::$1!=COLLISION_PLAYFIELD) goto play_spawn_current::@5
  to:play_spawn_current::@1
play_spawn_current::@5: scope:[play_spawn_current]  from play_spawn_current::@4
  [185] phi()
  to:play_spawn_current::@1
play_spawn_current::@1: scope:[play_spawn_current]  from play_spawn_current::@4 play_spawn_current::@5
  [186] game_over#53 = phi( play_spawn_current::@4/1, play_spawn_current::@5/game_over#66 )
  to:play_spawn_current::@2
play_spawn_current::@2: scope:[play_spawn_current]  from play_spawn_current::@1 play_spawn_current::@3
  [187] play_spawn_current::piece_idx#2 = phi( play_spawn_current::@1/7, play_spawn_current::@3/play_spawn_current::piece_idx#1 )
  [188] if(play_spawn_current::piece_idx#2==7) goto play_spawn_current::sid_rnd1
  to:play_spawn_current::@return
play_spawn_current::@return: scope:[play_spawn_current]  from play_spawn_current::@2
  [189] return 
  to:@return
play_spawn_current::sid_rnd1: scope:[play_spawn_current]  from play_spawn_current::@2
  [190] play_spawn_current::sid_rnd1_return#0 = *((byte*)SID+OFFSET_STRUCT_MOS6581_SID_CH3_OSC)
  to:play_spawn_current::@3
play_spawn_current::@3: scope:[play_spawn_current]  from play_spawn_current::sid_rnd1
  [191] play_spawn_current::piece_idx#1 = play_spawn_current::sid_rnd1_return#0 & 7
  to:play_spawn_current::@2

void render_playfield()
render_playfield: scope:[render_playfield]  from main::@14 main::@7
  [192] render_screen_render#24 = phi( main::@14/$20, main::@7/render_screen_render#63 )
  to:render_playfield::@1
render_playfield::@1: scope:[render_playfield]  from render_playfield render_playfield::@3
  [193] render_playfield::i#3 = phi( render_playfield/PLAYFIELD_COLS*2, render_playfield::@3/render_playfield::i#1 )
  [193] render_playfield::l#2 = phi( render_playfield/2, render_playfield::@3/render_playfield::l#1 )
  [194] render_playfield::$0 = render_screen_render#24 + render_playfield::l#2
  [195] render_playfield::$3 = render_playfield::$0 << 1
  [196] render_playfield::screen_line#0 = screen_lines_1[render_playfield::$3]
  to:render_playfield::@2
render_playfield::@2: scope:[render_playfield]  from render_playfield::@1 render_playfield::@2
  [197] render_playfield::c#2 = phi( render_playfield::@1/0, render_playfield::@2/render_playfield::c#1 )
  [197] render_playfield::screen_line#2 = phi( render_playfield::@1/render_playfield::screen_line#0, render_playfield::@2/render_playfield::screen_line#1 )
  [197] render_playfield::i#2 = phi( render_playfield::@1/render_playfield::i#3, render_playfield::@2/render_playfield::i#1 )
  [198] *render_playfield::screen_line#2 = playfield[render_playfield::i#2]
  [199] render_playfield::screen_line#1 = ++ render_playfield::screen_line#2
  [200] render_playfield::i#1 = ++ render_playfield::i#2
  [201] render_playfield::c#1 = ++ render_playfield::c#2
  [202] if(render_playfield::c#1!=PLAYFIELD_COLS-1+1) goto render_playfield::@2
  to:render_playfield::@3
render_playfield::@3: scope:[render_playfield]  from render_playfield::@2
  [203] render_playfield::l#1 = ++ render_playfield::l#2
  [204] if(render_playfield::l#1!=PLAYFIELD_LINES-1+1) goto render_playfield::@1
  to:render_playfield::@return
render_playfield::@return: scope:[render_playfield]  from render_playfield::@3
  [205] return 
  to:@return

void render_moving()
render_moving: scope:[render_moving]  from main::@15 main::@22
  [206] current_piece_char#70 = phi( main::@15/current_piece_char#99, main::@22/current_piece_char#100 )
  [206] current_piece_gfx#66 = phi( main::@15/current_piece_gfx#111, main::@22/current_piece_gfx#112 )
  [206] current_xpos#61 = phi( main::@15/current_xpos#118, main::@22/current_xpos#119 )
  [206] render_screen_render#35 = phi( main::@15/$20, main::@22/render_screen_render#64 )
  [206] current_ypos#14 = phi( main::@15/current_ypos#97, main::@22/current_ypos#98 )
  [207] render_moving::ypos#0 = current_ypos#14
  to:render_moving::@1
render_moving::@1: scope:[render_moving]  from render_moving render_moving::@3
  [208] render_moving::l#4 = phi( render_moving/0, render_moving::@3/render_moving::l#1 )
  [208] render_moving::i#3 = phi( render_moving/0, render_moving::@3/render_moving::i#8 )
  [208] render_moving::ypos#2 = phi( render_moving/render_moving::ypos#0, render_moving::@3/render_moving::ypos#1 )
  [209] if(render_moving::ypos#2>=1+1) goto render_moving::@2
  to:render_moving::@7
render_moving::@7: scope:[render_moving]  from render_moving::@1
  [210] render_moving::i#1 = render_moving::i#3 + 4
  to:render_moving::@3
render_moving::@3: scope:[render_moving]  from render_moving::@5 render_moving::@7
  [211] render_moving::i#8 = phi( render_moving::@5/render_moving::i#2, render_moving::@7/render_moving::i#1 )
  [212] render_moving::ypos#1 = ++ render_moving::ypos#2
  [213] render_moving::l#1 = ++ render_moving::l#4
  [214] if(render_moving::l#1!=4) goto render_moving::@1
  to:render_moving::@return
render_moving::@return: scope:[render_moving]  from render_moving::@3
  [215] return 
  to:@return
render_moving::@2: scope:[render_moving]  from render_moving::@1
  [216] render_moving::$1 = render_screen_render#35 + render_moving::ypos#2
  [217] render_moving::$6 = render_moving::$1 << 1
  [218] render_moving::screen_line#0 = screen_lines_1[render_moving::$6]
  [219] render_moving::xpos#0 = current_xpos#61
  to:render_moving::@4
render_moving::@4: scope:[render_moving]  from render_moving::@2 render_moving::@5
  [220] render_moving::c#2 = phi( render_moving::@2/0, render_moving::@5/render_moving::c#1 )
  [220] render_moving::xpos#2 = phi( render_moving::@2/render_moving::xpos#0, render_moving::@5/render_moving::xpos#1 )
  [220] render_moving::i#4 = phi( render_moving::@2/render_moving::i#3, render_moving::@5/render_moving::i#2 )
  [221] render_moving::current_cell#0 = current_piece_gfx#66[render_moving::i#4]
  [222] render_moving::i#2 = ++ render_moving::i#4
  [223] if(render_moving::current_cell#0==0) goto render_moving::@5
  to:render_moving::@6
render_moving::@6: scope:[render_moving]  from render_moving::@4
  [224] render_moving::screen_line#0[render_moving::xpos#2] = current_piece_char#70
  to:render_moving::@5
render_moving::@5: scope:[render_moving]  from render_moving::@4 render_moving::@6
  [225] render_moving::xpos#1 = ++ render_moving::xpos#2
  [226] render_moving::c#1 = ++ render_moving::c#2
  [227] if(render_moving::c#1!=4) goto render_moving::@4
  to:render_moving::@3

void render_next()
render_next: scope:[render_next]  from main::@16 main::@23
  [228] next_piece_idx#13 = phi( main::@16/next_piece_idx#79, main::@23/next_piece_idx#80 )
  [228] render_screen_render#16 = phi( main::@16/$20, main::@23/render_screen_render#65 )
  [229] if(render_screen_render#16==0) goto render_next::@1
  to:render_next::@2
render_next::@1: scope:[render_next]  from render_next
  [230] phi()
  to:render_next::@2
render_next::@2: scope:[render_next]  from render_next render_next::@1
  [231] render_next::screen_next_area#11 = phi( render_next::@1/PLAYFIELD_SCREEN_1+render_next::next_area_offset, render_next/PLAYFIELD_SCREEN_2+render_next::next_area_offset )
  [232] render_next::$6 = next_piece_idx#13 << 1
  [233] render_next::next_piece_char#0 = PIECES_NEXT_CHARS[next_piece_idx#13]
  [234] render_next::next_piece_gfx#8 = (byte*)PIECES[render_next::$6]
  to:render_next::@3
render_next::@3: scope:[render_next]  from render_next::@2 render_next::@8
  [235] render_next::l#7 = phi( render_next::@2/0, render_next::@8/render_next::l#1 )
  [235] render_next::screen_next_area#10 = phi( render_next::@2/render_next::screen_next_area#11, render_next::@8/render_next::screen_next_area#4 )
  [235] render_next::next_piece_gfx#3 = phi( render_next::@2/render_next::next_piece_gfx#8, render_next::@8/render_next::next_piece_gfx#1 )
  to:render_next::@4
render_next::@4: scope:[render_next]  from render_next::@3 render_next::@6
  [236] render_next::c#2 = phi( render_next::@3/0, render_next::@6/render_next::c#1 )
  [236] render_next::screen_next_area#5 = phi( render_next::@3/render_next::screen_next_area#10, render_next::@6/render_next::screen_next_area#3 )
  [236] render_next::next_piece_gfx#2 = phi( render_next::@3/render_next::next_piece_gfx#3, render_next::@6/render_next::next_piece_gfx#1 )
  [237] render_next::cell#0 = *render_next::next_piece_gfx#2
  [238] render_next::next_piece_gfx#1 = ++ render_next::next_piece_gfx#2
  [239] if(render_next::cell#0!=0) goto render_next::@5
  to:render_next::@7
render_next::@7: scope:[render_next]  from render_next::@4
  [240] *render_next::screen_next_area#5 = 0
  to:render_next::@6
render_next::@6: scope:[render_next]  from render_next::@5 render_next::@7
  [241] render_next::screen_next_area#3 = ++ render_next::screen_next_area#5
  [242] render_next::c#1 = ++ render_next::c#2
  [243] if(render_next::c#1!=4) goto render_next::@4
  to:render_next::@8
render_next::@8: scope:[render_next]  from render_next::@6
  [244] render_next::screen_next_area#4 = render_next::screen_next_area#3 + $24
  [245] render_next::l#1 = ++ render_next::l#7
  [246] if(render_next::l#1!=4) goto render_next::@3
  to:render_next::@return
render_next::@return: scope:[render_next]  from render_next::@8
  [247] return 
  to:@return
render_next::@5: scope:[render_next]  from render_next::@4
  [248] *render_next::screen_next_area#5 = render_next::next_piece_char#0
  to:render_next::@6

void render_show()
render_show: scope:[render_show]  from main::@3
  [249] if(render_screen_show#17==0) goto render_show::toD0181
  to:render_show::toD0182
render_show::toD0182: scope:[render_show]  from render_show
  [250] phi()
  to:render_show::@1
render_show::@1: scope:[render_show]  from render_show::toD0181 render_show::toD0182
  [251] render_show::d018val#3 = phi( render_show::toD0181/render_show::toD0181_return#0, render_show::toD0182/render_show::toD0182_return#0 )
  [252] *D018 = render_show::d018val#3
  [253] *BG_COLOR1 = PIECES_COLORS_1[level#25]
  [254] *BG_COLOR2 = PIECES_COLORS_2[level#25]
  [255] render_screen_showing = render_screen_show#17
  to:render_show::@return
render_show::@return: scope:[render_show]  from render_show::@1
  [256] return 
  to:@return
render_show::toD0181: scope:[render_show]  from render_show
  [257] phi()
  to:render_show::@1

void keyboard_event_scan()
keyboard_event_scan: scope:[keyboard_event_scan]  from main::@18
  [258] phi()
  to:keyboard_event_scan::@7
keyboard_event_scan::@7: scope:[keyboard_event_scan]  from keyboard_event_scan keyboard_event_scan::@8
  [259] keyboard_events_size#32 = phi( keyboard_event_scan/keyboard_events_size#20, keyboard_event_scan::@8/keyboard_events_size#14 )
  [259] keyboard_event_scan::keycode#11 = phi( keyboard_event_scan/0, keyboard_event_scan::@8/keyboard_event_scan::keycode#13 )
  [259] keyboard_event_scan::row#2 = phi( keyboard_event_scan/0, keyboard_event_scan::@8/keyboard_event_scan::row#1 )
  [260] keyboard_matrix_read::rowid#0 = keyboard_event_scan::row#2
  [261] call keyboard_matrix_read 
  [262] keyboard_matrix_read::return#2 = keyboard_matrix_read::return#0
  to:keyboard_event_scan::@19
keyboard_event_scan::@19: scope:[keyboard_event_scan]  from keyboard_event_scan::@7
  [263] keyboard_event_scan::row_scan#0 = keyboard_matrix_read::return#2
  [264] if(keyboard_event_scan::row_scan#0!=keyboard_scan_values[keyboard_event_scan::row#2]) goto keyboard_event_scan::@9
  to:keyboard_event_scan::@16
keyboard_event_scan::@16: scope:[keyboard_event_scan]  from keyboard_event_scan::@19
  [265] keyboard_event_scan::keycode#1 = keyboard_event_scan::keycode#11 + 8
  to:keyboard_event_scan::@8
keyboard_event_scan::@8: scope:[keyboard_event_scan]  from keyboard_event_scan::@15 keyboard_event_scan::@16
  [266] keyboard_events_size#14 = phi( keyboard_event_scan::@15/keyboard_events_size#31, keyboard_event_scan::@16/keyboard_events_size#32 )
  [266] keyboard_event_scan::keycode#13 = phi( keyboard_event_scan::@15/keyboard_event_scan::keycode#14, keyboard_event_scan::@16/keyboard_event_scan::keycode#1 )
  [267] keyboard_event_scan::row#1 = ++ keyboard_event_scan::row#2
  [268] if(keyboard_event_scan::row#1!=8) goto keyboard_event_scan::@7
  to:keyboard_event_scan::@17
keyboard_event_scan::@17: scope:[keyboard_event_scan]  from keyboard_event_scan::@8
  [269] phi()
  [270] call keyboard_event_pressed 
  [271] keyboard_event_pressed::return#0 = keyboard_event_pressed::return#11
  to:keyboard_event_scan::@20
keyboard_event_scan::@20: scope:[keyboard_event_scan]  from keyboard_event_scan::@17
  [272] keyboard_event_scan::$0 = keyboard_event_pressed::return#0
  [273] if(keyboard_event_scan::$0==0) goto keyboard_event_scan::@1
  to:keyboard_event_scan::@18
keyboard_event_scan::@18: scope:[keyboard_event_scan]  from keyboard_event_scan::@20
  [274] phi()
  to:keyboard_event_scan::@1
keyboard_event_scan::@1: scope:[keyboard_event_scan]  from keyboard_event_scan::@18 keyboard_event_scan::@20
  [275] phi()
  [276] call keyboard_event_pressed 
  [277] keyboard_event_pressed::return#1 = keyboard_event_pressed::return#11
  to:keyboard_event_scan::@21
keyboard_event_scan::@21: scope:[keyboard_event_scan]  from keyboard_event_scan::@1
  [278] keyboard_event_scan::$3 = keyboard_event_pressed::return#1
  [279] if(keyboard_event_scan::$3==0) goto keyboard_event_scan::@2
  to:keyboard_event_scan::@4
keyboard_event_scan::@4: scope:[keyboard_event_scan]  from keyboard_event_scan::@21
  [280] phi()
  to:keyboard_event_scan::@2
keyboard_event_scan::@2: scope:[keyboard_event_scan]  from keyboard_event_scan::@21 keyboard_event_scan::@4
  [281] phi()
  [282] call keyboard_event_pressed 
  [283] keyboard_event_pressed::return#2 = keyboard_event_pressed::return#11
  to:keyboard_event_scan::@22
keyboard_event_scan::@22: scope:[keyboard_event_scan]  from keyboard_event_scan::@2
  [284] keyboard_event_scan::$6 = keyboard_event_pressed::return#2
  [285] if(keyboard_event_scan::$6==0) goto keyboard_event_scan::@3
  to:keyboard_event_scan::@5
keyboard_event_scan::@5: scope:[keyboard_event_scan]  from keyboard_event_scan::@22
  [286] phi()
  to:keyboard_event_scan::@3
keyboard_event_scan::@3: scope:[keyboard_event_scan]  from keyboard_event_scan::@22 keyboard_event_scan::@5
  [287] phi()
  [288] call keyboard_event_pressed 
  [289] keyboard_event_pressed::return#10 = keyboard_event_pressed::return#11
  to:keyboard_event_scan::@23
keyboard_event_scan::@23: scope:[keyboard_event_scan]  from keyboard_event_scan::@3
  [290] keyboard_event_scan::$9 = keyboard_event_pressed::return#10
  [291] if(keyboard_event_scan::$9==0) goto keyboard_event_scan::@return
  to:keyboard_event_scan::@6
keyboard_event_scan::@6: scope:[keyboard_event_scan]  from keyboard_event_scan::@23
  [292] phi()
  to:keyboard_event_scan::@return
keyboard_event_scan::@return: scope:[keyboard_event_scan]  from keyboard_event_scan::@23 keyboard_event_scan::@6
  [293] return 
  to:@return
keyboard_event_scan::@9: scope:[keyboard_event_scan]  from keyboard_event_scan::@10 keyboard_event_scan::@19
  [294] keyboard_events_size#11 = phi( keyboard_event_scan::@10/keyboard_events_size#31, keyboard_event_scan::@19/keyboard_events_size#32 )
  [294] keyboard_event_scan::keycode#10 = phi( keyboard_event_scan::@10/keyboard_event_scan::keycode#14, keyboard_event_scan::@19/keyboard_event_scan::keycode#11 )
  [294] keyboard_event_scan::col#2 = phi( keyboard_event_scan::@10/keyboard_event_scan::col#1, keyboard_event_scan::@19/0 )
  [295] keyboard_event_scan::$15 = keyboard_event_scan::row_scan#0 ^ keyboard_scan_values[keyboard_event_scan::row#2]
  [296] keyboard_event_scan::$16 = keyboard_event_scan::$15 & keyboard_matrix_col_bitmask[keyboard_event_scan::col#2]
  [297] if(keyboard_event_scan::$16==0) goto keyboard_event_scan::@10
  to:keyboard_event_scan::@12
keyboard_event_scan::@12: scope:[keyboard_event_scan]  from keyboard_event_scan::@9
  [298] if(keyboard_events_size#11==8) goto keyboard_event_scan::@10
  to:keyboard_event_scan::@13
keyboard_event_scan::@13: scope:[keyboard_event_scan]  from keyboard_event_scan::@12
  [299] keyboard_event_scan::event_type#0 = keyboard_event_scan::row_scan#0 & keyboard_matrix_col_bitmask[keyboard_event_scan::col#2]
  [300] if(keyboard_event_scan::event_type#0==0) goto keyboard_event_scan::@11
  to:keyboard_event_scan::@14
keyboard_event_scan::@14: scope:[keyboard_event_scan]  from keyboard_event_scan::@13
  [301] keyboard_events[keyboard_events_size#11] = keyboard_event_scan::keycode#10
  [302] keyboard_events_size#1 = ++ keyboard_events_size#11
  to:keyboard_event_scan::@10
keyboard_event_scan::@10: scope:[keyboard_event_scan]  from keyboard_event_scan::@11 keyboard_event_scan::@12 keyboard_event_scan::@14 keyboard_event_scan::@9
  [303] keyboard_events_size#31 = phi( keyboard_event_scan::@9/keyboard_events_size#11, keyboard_event_scan::@11/keyboard_events_size#0, keyboard_event_scan::@12/keyboard_events_size#11, keyboard_event_scan::@14/keyboard_events_size#1 )
  [304] keyboard_event_scan::keycode#14 = ++ keyboard_event_scan::keycode#10
  [305] keyboard_event_scan::col#1 = ++ keyboard_event_scan::col#2
  [306] if(keyboard_event_scan::col#1!=8) goto keyboard_event_scan::@9
  to:keyboard_event_scan::@15
keyboard_event_scan::@15: scope:[keyboard_event_scan]  from keyboard_event_scan::@10
  [307] keyboard_scan_values[keyboard_event_scan::row#2] = keyboard_event_scan::row_scan#0
  to:keyboard_event_scan::@8
keyboard_event_scan::@11: scope:[keyboard_event_scan]  from keyboard_event_scan::@13
  [308] keyboard_event_scan::$23 = keyboard_event_scan::keycode#10 | $40
  [309] keyboard_events[keyboard_events_size#11] = keyboard_event_scan::$23
  [310] keyboard_events_size#0 = ++ keyboard_events_size#11
  to:keyboard_event_scan::@10

byte keyboard_event_get()
keyboard_event_get: scope:[keyboard_event_get]  from main::@19
  [311] if(keyboard_events_size#14==0) goto keyboard_event_get::@return
  to:keyboard_event_get::@1
keyboard_event_get::@1: scope:[keyboard_event_get]  from keyboard_event_get
  [312] keyboard_events_size#3 = -- keyboard_events_size#14
  [313] keyboard_event_get::return#1 = keyboard_events[keyboard_events_size#3]
  to:keyboard_event_get::@return
keyboard_event_get::@return: scope:[keyboard_event_get]  from keyboard_event_get keyboard_event_get::@1
  [314] keyboard_events_size#17 = phi( keyboard_event_get/keyboard_events_size#14, keyboard_event_get::@1/keyboard_events_size#3 )
  [314] keyboard_event_get::return#2 = phi( keyboard_event_get/$ff, keyboard_event_get::@1/keyboard_event_get::return#1 )
  [315] return 
  to:@return

byte play_movement(byte play_movement::key_event)
play_movement: scope:[play_movement]  from main::@4
  [316] play_move_down::key_event#0 = play_movement::key_event#0
  [317] call play_move_down 
  [318] play_move_down::return#0 = play_move_down::return#3
  to:play_movement::@2
play_movement::@2: scope:[play_movement]  from play_movement
  [319] play_movement::render#1 = play_move_down::return#0
  [320] if(game_over#16==0) goto play_movement::@1
  to:play_movement::@return
play_movement::@return: scope:[play_movement]  from play_movement::@2 play_movement::@4
  [321] current_xpos#2 = phi( play_movement::@2/current_xpos#23, play_movement::@4/current_xpos#27 )
  [321] current_piece_gfx#19 = phi( play_movement::@2/current_piece_gfx#21, play_movement::@4/current_piece_gfx#22 )
  [321] current_orientation#18 = phi( play_movement::@2/current_orientation#21, play_movement::@4/current_orientation#26 )
  [321] play_movement::return#2 = phi( play_movement::@2/play_movement::render#1, play_movement::@4/play_movement::return#0 )
  [322] return 
  to:@return
play_movement::@1: scope:[play_movement]  from play_movement::@2
  [323] play_move_leftright::key_event#0 = play_movement::key_event#0
  [324] call play_move_leftright 
  [325] play_move_leftright::return#0 = play_move_leftright::return#2
  to:play_movement::@3
play_movement::@3: scope:[play_movement]  from play_movement::@1
  [326] play_movement::$3 = play_move_leftright::return#0
  [327] play_movement::render#2 = play_movement::render#1 + play_movement::$3
  [328] play_move_rotate::key_event#0 = play_movement::key_event#0
  [329] call play_move_rotate 
  [330] play_move_rotate::return#0 = play_move_rotate::return#2
  to:play_movement::@4
play_movement::@4: scope:[play_movement]  from play_movement::@3
  [331] play_movement::$4 = play_move_rotate::return#0
  [332] play_movement::return#0 = play_movement::render#2 + play_movement::$4
  to:play_movement::@return

void render_score()
render_score: scope:[render_score]  from main::@24
  [333] if(render_screen_render#19==0) goto render_score::@1
  to:render_score::@2
render_score::@1: scope:[render_score]  from render_score
  [334] phi()
  to:render_score::@2
render_score::@2: scope:[render_score]  from render_score render_score::@1
  [335] render_score::screen#3 = phi( render_score::@1/PLAYFIELD_SCREEN_1, render_score/PLAYFIELD_SCREEN_2 )
  [336] render_bcd::screen#0 = render_score::screen#3
  [337] render_bcd::bcd#0 = *(render_score::score_bytes+2)
  [338] call render_bcd 
  to:render_score::@3
render_score::@3: scope:[render_score]  from render_score::@2
  [339] render_bcd::screen#1 = render_score::screen#3
  [340] render_bcd::bcd#1 = *(render_score::score_bytes+1)
  [341] call render_bcd 
  to:render_score::@4
render_score::@4: scope:[render_score]  from render_score::@3
  [342] render_bcd::screen#2 = render_score::screen#3
  [343] render_bcd::bcd#2 = *render_score::score_bytes
  [344] call render_bcd 
  to:render_score::@5
render_score::@5: scope:[render_score]  from render_score::@4
  [345] render_bcd::bcd#3 = > lines_bcd#16
  [346] render_bcd::screen#3 = render_score::screen#3
  [347] call render_bcd 
  to:render_score::@6
render_score::@6: scope:[render_score]  from render_score::@5
  [348] render_bcd::bcd#4 = < lines_bcd#16
  [349] render_bcd::screen#4 = render_score::screen#3
  [350] call render_bcd 
  to:render_score::@7
render_score::@7: scope:[render_score]  from render_score::@6
  [351] render_bcd::screen#5 = render_score::screen#3
  [352] render_bcd::bcd#5 = level_bcd#18
  [353] call render_bcd 
  to:render_score::@return
render_score::@return: scope:[render_score]  from render_score::@7
  [354] return 
  to:@return

void render_screen_swap()
render_screen_swap: scope:[render_screen_swap]  from main::@25
  [355] render_screen_render#12 = render_screen_render#19 ^ $20
  [356] render_screen_show#14 = render_screen_show#17 ^ $20
  to:render_screen_swap::@return
render_screen_swap::@return: scope:[render_screen_swap]  from render_screen_swap
  [357] return 
  to:@return

void render_screen_original(byte* render_screen_original::screen)
render_screen_original: scope:[render_screen_original]  from render_init::@2 render_init::@3
  [358] render_screen_original::screen#9 = phi( render_init::@2/PLAYFIELD_SCREEN_1, render_init::@3/PLAYFIELD_SCREEN_2 )
  to:render_screen_original::@1
render_screen_original::@1: scope:[render_screen_original]  from render_screen_original render_screen_original::@5
  [359] render_screen_original::y#6 = phi( render_screen_original/0, render_screen_original::@5/render_screen_original::y#1 )
  [359] render_screen_original::ocols#4 = phi( render_screen_original/PLAYFIELD_COLORS_ORIGINAL+$20*2, render_screen_original::@5/render_screen_original::ocols#1 )
  [359] render_screen_original::oscr#4 = phi( render_screen_original/PLAYFIELD_SCREEN_ORIGINAL+$20*2, render_screen_original::@5/render_screen_original::oscr#1 )
  [359] render_screen_original::cols#7 = phi( render_screen_original/COLS, render_screen_original::@5/render_screen_original::cols#3 )
  [359] render_screen_original::screen#8 = phi( render_screen_original/render_screen_original::screen#9, render_screen_original::@5/render_screen_original::screen#10 )
  to:render_screen_original::@2
render_screen_original::@2: scope:[render_screen_original]  from render_screen_original::@1 render_screen_original::@2
  [360] render_screen_original::x#4 = phi( render_screen_original::@1/0, render_screen_original::@2/render_screen_original::x#1 )
  [360] render_screen_original::cols#4 = phi( render_screen_original::@1/render_screen_original::cols#7, render_screen_original::@2/render_screen_original::cols#1 )
  [360] render_screen_original::screen#5 = phi( render_screen_original::@1/render_screen_original::screen#8, render_screen_original::@2/render_screen_original::screen#2 )
  [361] *render_screen_original::screen#5 = render_screen_original::SPACE
  [362] render_screen_original::screen#2 = ++ render_screen_original::screen#5
  [363] *render_screen_original::cols#4 = BLACK
  [364] render_screen_original::cols#1 = ++ render_screen_original::cols#4
  [365] render_screen_original::x#1 = ++ render_screen_original::x#4
  [366] if(render_screen_original::x#1!=4) goto render_screen_original::@2
  to:render_screen_original::@3
render_screen_original::@3: scope:[render_screen_original]  from render_screen_original::@2 render_screen_original::@3
  [367] render_screen_original::x#5 = phi( render_screen_original::@2/render_screen_original::x#1, render_screen_original::@3/render_screen_original::x#2 )
  [367] render_screen_original::cols#5 = phi( render_screen_original::@2/render_screen_original::cols#1, render_screen_original::@3/render_screen_original::cols#2 )
  [367] render_screen_original::ocols#2 = phi( render_screen_original::@2/render_screen_original::ocols#4, render_screen_original::@3/render_screen_original::ocols#1 )
  [367] render_screen_original::screen#6 = phi( render_screen_original::@2/render_screen_original::screen#2, render_screen_original::@3/render_screen_original::screen#3 )
  [367] render_screen_original::oscr#2 = phi( render_screen_original::@2/render_screen_original::oscr#4, render_screen_original::@3/render_screen_original::oscr#1 )
  [368] *render_screen_original::screen#6 = *render_screen_original::oscr#2
  [369] render_screen_original::screen#3 = ++ render_screen_original::screen#6
  [370] render_screen_original::oscr#1 = ++ render_screen_original::oscr#2
  [371] *render_screen_original::cols#5 = *render_screen_original::ocols#2
  [372] render_screen_original::cols#2 = ++ render_screen_original::cols#5
  [373] render_screen_original::ocols#1 = ++ render_screen_original::ocols#2
  [374] render_screen_original::x#2 = ++ render_screen_original::x#5
  [375] if(render_screen_original::x#2!=$24) goto render_screen_original::@3
  to:render_screen_original::@4
render_screen_original::@4: scope:[render_screen_original]  from render_screen_original::@3 render_screen_original::@4
  [376] render_screen_original::x#6 = phi( render_screen_original::@3/render_screen_original::x#2, render_screen_original::@4/render_screen_original::x#3 )
  [376] render_screen_original::cols#6 = phi( render_screen_original::@3/render_screen_original::cols#2, render_screen_original::@4/render_screen_original::cols#3 )
  [376] render_screen_original::screen#7 = phi( render_screen_original::@3/render_screen_original::screen#3, render_screen_original::@4/render_screen_original::screen#10 )
  [377] *render_screen_original::screen#7 = render_screen_original::SPACE
  [378] render_screen_original::screen#10 = ++ render_screen_original::screen#7
  [379] *render_screen_original::cols#6 = BLACK
  [380] render_screen_original::cols#3 = ++ render_screen_original::cols#6
  [381] render_screen_original::x#3 = ++ render_screen_original::x#6
  [382] if(render_screen_original::x#3!=$28) goto render_screen_original::@4
  to:render_screen_original::@5
render_screen_original::@5: scope:[render_screen_original]  from render_screen_original::@4
  [383] render_screen_original::y#1 = ++ render_screen_original::y#6
  [384] if(render_screen_original::y#1!=$19) goto render_screen_original::@1
  to:render_screen_original::@return
render_screen_original::@return: scope:[render_screen_original]  from render_screen_original::@5
  [385] return 
  to:@return

byte play_collision(byte play_collision::xpos , byte play_collision::ypos , byte play_collision::orientation)
play_collision: scope:[play_collision]  from play_move_down::@8 play_move_leftright::@1 play_move_leftright::@3 play_move_rotate::@3 play_spawn_current
  [386] play_collision::xpos#6 = phi( play_move_down::@8/play_collision::xpos#0, play_move_leftright::@1/play_collision::xpos#1, play_move_leftright::@3/play_collision::xpos#2, play_move_rotate::@3/play_collision::xpos#3, play_spawn_current/play_collision::xpos#4 )
  [386] play_collision::yp#0 = phi( play_move_down::@8/play_collision::ypos#0, play_move_leftright::@1/play_collision::ypos#1, play_move_leftright::@3/play_collision::ypos#2, play_move_rotate::@3/play_collision::ypos#3, play_spawn_current/play_collision::ypos#4 )
  [386] play_collision::orientation#5 = phi( play_move_down::@8/play_collision::orientation#0, play_move_leftright::@1/play_collision::orientation#1, play_move_leftright::@3/play_collision::orientation#2, play_move_rotate::@3/play_collision::orientation#3, play_spawn_current/0 )
  [386] current_piece#18 = phi( play_move_down::@8/current_piece#98, play_move_leftright::@1/current_piece#99, play_move_leftright::@3/current_piece#100, play_move_rotate::@3/current_piece#101, play_spawn_current/current_piece#102 )
  [387] play_collision::piece_gfx#0 = current_piece#18 + play_collision::orientation#5
  to:play_collision::@1
play_collision::@1: scope:[play_collision]  from play_collision play_collision::@9
  [388] play_collision::l#6 = phi( play_collision/0, play_collision::@9/play_collision::l#1 )
  [388] play_collision::i#3 = phi( play_collision/0, play_collision::@9/play_collision::i#10 )
  [388] play_collision::yp#2 = phi( play_collision/play_collision::yp#0, play_collision::@9/play_collision::yp#1 )
  [389] play_collision::$14 = play_collision::yp#2 << 1
  [390] play_collision::playfield_line#0 = playfield_lines[play_collision::$14]
  [391] play_collision::xp#8 = play_collision::xpos#6
  to:play_collision::@2
play_collision::@2: scope:[play_collision]  from play_collision::@1 play_collision::@10
  [392] play_collision::c#2 = phi( play_collision::@1/0, play_collision::@10/play_collision::c#1 )
  [392] play_collision::xp#2 = phi( play_collision::@1/play_collision::xp#8, play_collision::@10/play_collision::xp#1 )
  [392] play_collision::i#2 = phi( play_collision::@1/play_collision::i#3, play_collision::@10/play_collision::i#12 )
  [393] play_collision::i#1 = ++ play_collision::i#2
  [394] if(play_collision::piece_gfx#0[play_collision::i#2]==0) goto play_collision::@3
  to:play_collision::@7
play_collision::@7: scope:[play_collision]  from play_collision::@2
  [395] if(play_collision::yp#2<PLAYFIELD_LINES) goto play_collision::@4
  to:play_collision::@return
play_collision::@4: scope:[play_collision]  from play_collision::@7
  [396] play_collision::$5 = play_collision::xp#2 & $80
  [397] if(play_collision::$5==0) goto play_collision::@5
  to:play_collision::@return
play_collision::@5: scope:[play_collision]  from play_collision::@4
  [398] if(play_collision::xp#2<PLAYFIELD_COLS) goto play_collision::@6
  to:play_collision::@return
play_collision::@6: scope:[play_collision]  from play_collision::@5
  [399] if(play_collision::playfield_line#0[play_collision::xp#2]==0) goto play_collision::@3
  to:play_collision::@return
play_collision::@return: scope:[play_collision]  from play_collision::@4 play_collision::@5 play_collision::@6 play_collision::@7 play_collision::@8
  [400] play_collision::return#15 = phi( play_collision::@7/COLLISION_BOTTOM, play_collision::@8/COLLISION_NONE, play_collision::@4/COLLISION_LEFT, play_collision::@5/COLLISION_RIGHT, play_collision::@6/COLLISION_PLAYFIELD )
  [401] return 
  to:@return
play_collision::@3: scope:[play_collision]  from play_collision::@2 play_collision::@6
  [402] play_collision::xp#1 = ++ play_collision::xp#2
  [403] play_collision::c#1 = ++ play_collision::c#2
  [404] if(play_collision::c#1!=4) goto play_collision::@10
  to:play_collision::@8
play_collision::@8: scope:[play_collision]  from play_collision::@3
  [405] play_collision::yp#1 = ++ play_collision::yp#2
  [406] play_collision::l#1 = ++ play_collision::l#6
  [407] if(play_collision::l#1!=4) goto play_collision::@9
  to:play_collision::@return
play_collision::@9: scope:[play_collision]  from play_collision::@8
  [408] play_collision::i#10 = play_collision::i#1
  to:play_collision::@1
play_collision::@10: scope:[play_collision]  from play_collision::@3
  [409] play_collision::i#12 = play_collision::i#1
  to:play_collision::@2

byte keyboard_matrix_read(byte keyboard_matrix_read::rowid)
keyboard_matrix_read: scope:[keyboard_matrix_read]  from keyboard_event_scan::@7
  [410] *((byte*)CIA1) = keyboard_matrix_row_bitmask[keyboard_matrix_read::rowid#0]
  [411] keyboard_matrix_read::return#0 = ~ *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_B)
  to:keyboard_matrix_read::@return
keyboard_matrix_read::@return: scope:[keyboard_matrix_read]  from keyboard_matrix_read
  [412] return 
  to:@return

byte keyboard_event_pressed(byte keyboard_event_pressed::keycode)
keyboard_event_pressed: scope:[keyboard_event_pressed]  from keyboard_event_scan::@1 keyboard_event_scan::@17 keyboard_event_scan::@2 keyboard_event_scan::@3 play_move_down::@1
  [413] keyboard_event_pressed::keycode#5 = phi( keyboard_event_scan::@1/KEY_RSHIFT, keyboard_event_scan::@17/KEY_LSHIFT, keyboard_event_scan::@2/KEY_CTRL, keyboard_event_scan::@3/KEY_COMMODORE, play_move_down::@1/KEY_SPACE )
  [414] keyboard_event_pressed::$0 = keyboard_event_pressed::keycode#5 >> 3
  [415] keyboard_event_pressed::row_bits#0 = keyboard_scan_values[keyboard_event_pressed::$0]
  [416] keyboard_event_pressed::$1 = keyboard_event_pressed::keycode#5 & 7
  [417] keyboard_event_pressed::return#11 = keyboard_event_pressed::row_bits#0 & keyboard_matrix_col_bitmask[keyboard_event_pressed::$1]
  to:keyboard_event_pressed::@return
keyboard_event_pressed::@return: scope:[keyboard_event_pressed]  from keyboard_event_pressed
  [418] return 
  to:@return

byte play_move_down(byte play_move_down::key_event)
play_move_down: scope:[play_move_down]  from play_movement
  [419] current_movedown_counter#13 = ++ current_movedown_counter#17
  [420] if(play_move_down::key_event#0!=KEY_SPACE) goto play_move_down::@1
  to:play_move_down::@4
play_move_down::@4: scope:[play_move_down]  from play_move_down
  [421] phi()
  to:play_move_down::@1
play_move_down::@1: scope:[play_move_down]  from play_move_down play_move_down::@4
  [422] play_move_down::movedown#10 = phi( play_move_down/0, play_move_down::@4/1 )
  [423] call keyboard_event_pressed 
  [424] keyboard_event_pressed::return#12 = keyboard_event_pressed::return#11
  to:play_move_down::@12
play_move_down::@12: scope:[play_move_down]  from play_move_down::@1
  [425] play_move_down::$2 = keyboard_event_pressed::return#12
  [426] if(play_move_down::$2==0) goto play_move_down::@2
  to:play_move_down::@5
play_move_down::@5: scope:[play_move_down]  from play_move_down::@12
  [427] if(current_movedown_counter#13<current_movedown_fast) goto play_move_down::@2
  to:play_move_down::@6
play_move_down::@6: scope:[play_move_down]  from play_move_down::@5
  [428] play_move_down::movedown#2 = ++ play_move_down::movedown#10
  to:play_move_down::@2
play_move_down::@2: scope:[play_move_down]  from play_move_down::@12 play_move_down::@5 play_move_down::@6
  [429] play_move_down::movedown#7 = phi( play_move_down::@12/play_move_down::movedown#10, play_move_down::@5/play_move_down::movedown#10, play_move_down::@6/play_move_down::movedown#2 )
  [430] if(current_movedown_counter#13<current_movedown_slow#13) goto play_move_down::@3
  to:play_move_down::@7
play_move_down::@7: scope:[play_move_down]  from play_move_down::@2
  [431] play_move_down::movedown#3 = ++ play_move_down::movedown#7
  to:play_move_down::@3
play_move_down::@3: scope:[play_move_down]  from play_move_down::@2 play_move_down::@7
  [432] play_move_down::movedown#6 = phi( play_move_down::@2/play_move_down::movedown#7, play_move_down::@7/play_move_down::movedown#3 )
  [433] if(play_move_down::movedown#6==0) goto play_move_down::@return
  to:play_move_down::@8
play_move_down::@8: scope:[play_move_down]  from play_move_down::@3
  [434] play_collision::ypos#0 = current_ypos#10 + 1
  [435] play_collision::xpos#0 = current_xpos#13
  [436] play_collision::orientation#0 = current_orientation#12
  [437] current_piece#98 = current_piece#23
  [438] call play_collision 
  [439] play_collision::return#0 = play_collision::return#15
  to:play_move_down::@13
play_move_down::@13: scope:[play_move_down]  from play_move_down::@8
  [440] play_move_down::$12 = play_collision::return#0
  [441] if(play_move_down::$12==COLLISION_NONE) goto play_move_down::@10
  to:play_move_down::@9
play_move_down::@9: scope:[play_move_down]  from play_move_down::@13
  [442] phi()
  [443] call play_lock_current 
  to:play_move_down::@14
play_move_down::@14: scope:[play_move_down]  from play_move_down::@9
  [444] phi()
  [445] call play_remove_lines 
  [446] play_remove_lines::return#0 = play_remove_lines::removed#7
  to:play_move_down::@15
play_move_down::@15: scope:[play_move_down]  from play_move_down::@14
  [447] play_move_down::removed#0 = play_remove_lines::return#0
  [448] play_update_score::removed#0 = play_move_down::removed#0
  [449] call play_update_score 
  to:play_move_down::@16
play_move_down::@16: scope:[play_move_down]  from play_move_down::@15
  [450] phi()
  [451] call play_spawn_current 
  to:play_move_down::@17
play_move_down::@17: scope:[play_move_down]  from play_move_down::@16
  [452] current_piece#95 = (byte*)PIECES[play_spawn_current::$7]
  [453] current_piece_gfx#116 = (byte*)PIECES[play_spawn_current::$7]
  to:play_move_down::@11
play_move_down::@11: scope:[play_move_down]  from play_move_down::@10 play_move_down::@17
  [454] next_piece_idx#32 = phi( play_move_down::@10/next_piece_idx#23, play_move_down::@17/play_spawn_current::piece_idx#2 )
  [454] game_over#29 = phi( play_move_down::@10/game_over#22, play_move_down::@17/game_over#53 )
  [454] current_xpos#45 = phi( play_move_down::@10/current_xpos#13, play_move_down::@17/current_xpos#100 )
  [454] current_piece_gfx#37 = phi( play_move_down::@10/current_piece_gfx#12, play_move_down::@17/current_piece_gfx#116 )
  [454] current_orientation#39 = phi( play_move_down::@10/current_orientation#12, play_move_down::@17/0 )
  [454] current_piece_char#31 = phi( play_move_down::@10/current_piece_char#23, play_move_down::@17/current_piece_char#4 )
  [454] current_piece#30 = phi( play_move_down::@10/current_piece#23, play_move_down::@17/current_piece#95 )
  [454] level_bcd#33 = phi( play_move_down::@10/level_bcd#10, play_move_down::@17/level_bcd#20 )
  [454] current_movedown_slow#39 = phi( play_move_down::@10/current_movedown_slow#13, play_move_down::@17/current_movedown_slow#24 )
  [454] level#35 = phi( play_move_down::@10/level#25, play_move_down::@17/level#20 )
  [454] lines_bcd#28 = phi( play_move_down::@10/lines_bcd#20, play_move_down::@17/lines_bcd#18 )
  [454] current_ypos#40 = phi( play_move_down::@10/current_ypos#2, play_move_down::@17/current_ypos#5 )
  to:play_move_down::@return
play_move_down::@return: scope:[play_move_down]  from play_move_down::@11 play_move_down::@3
  [455] next_piece_idx#17 = phi( play_move_down::@11/next_piece_idx#32, play_move_down::@3/next_piece_idx#23 )
  [455] game_over#16 = phi( play_move_down::@11/game_over#29, play_move_down::@3/game_over#22 )
  [455] current_xpos#23 = phi( play_move_down::@11/current_xpos#45, play_move_down::@3/current_xpos#13 )
  [455] current_piece_gfx#21 = phi( play_move_down::@11/current_piece_gfx#37, play_move_down::@3/current_piece_gfx#12 )
  [455] current_orientation#21 = phi( play_move_down::@11/current_orientation#39, play_move_down::@3/current_orientation#12 )
  [455] current_piece_char#17 = phi( play_move_down::@11/current_piece_char#31, play_move_down::@3/current_piece_char#23 )
  [455] current_piece#16 = phi( play_move_down::@11/current_piece#30, play_move_down::@3/current_piece#23 )
  [455] level_bcd#18 = phi( play_move_down::@11/level_bcd#33, play_move_down::@3/level_bcd#10 )
  [455] current_movedown_slow#22 = phi( play_move_down::@11/current_movedown_slow#39, play_move_down::@3/current_movedown_slow#13 )
  [455] level#18 = phi( play_move_down::@11/level#35, play_move_down::@3/level#25 )
  [455] lines_bcd#16 = phi( play_move_down::@11/lines_bcd#28, play_move_down::@3/lines_bcd#20 )
  [455] current_ypos#20 = phi( play_move_down::@11/current_ypos#40, play_move_down::@3/current_ypos#10 )
  [455] current_movedown_counter#15 = phi( play_move_down::@11/0, play_move_down::@3/current_movedown_counter#13 )
  [455] play_move_down::return#3 = phi( play_move_down::@11/1, play_move_down::@3/0 )
  [456] return 
  to:@return
play_move_down::@10: scope:[play_move_down]  from play_move_down::@13
  [457] current_ypos#2 = ++ current_ypos#10
  to:play_move_down::@11

byte play_move_leftright(byte play_move_leftright::key_event)
play_move_leftright: scope:[play_move_leftright]  from play_movement::@1
  [458] if(play_move_leftright::key_event#0==KEY_COMMA) goto play_move_leftright::@1
  to:play_move_leftright::@2
play_move_leftright::@2: scope:[play_move_leftright]  from play_move_leftright
  [459] if(play_move_leftright::key_event#0!=KEY_DOT) goto play_move_leftright::@return
  to:play_move_leftright::@3
play_move_leftright::@3: scope:[play_move_leftright]  from play_move_leftright::@2
  [460] play_collision::xpos#2 = current_xpos#23 + 1
  [461] play_collision::ypos#2 = current_ypos#20
  [462] play_collision::orientation#2 = current_orientation#21
  [463] current_piece#100 = current_piece#16
  [464] call play_collision 
  [465] play_collision::return#13 = play_collision::return#15
  to:play_move_leftright::@7
play_move_leftright::@7: scope:[play_move_leftright]  from play_move_leftright::@3
  [466] play_move_leftright::$4 = play_collision::return#13
  [467] if(play_move_leftright::$4!=COLLISION_NONE) goto play_move_leftright::@return
  to:play_move_leftright::@4
play_move_leftright::@4: scope:[play_move_leftright]  from play_move_leftright::@7
  [468] current_xpos#5 = ++ current_xpos#23
  to:play_move_leftright::@return
play_move_leftright::@return: scope:[play_move_leftright]  from play_move_leftright::@2 play_move_leftright::@4 play_move_leftright::@5 play_move_leftright::@6 play_move_leftright::@7
  [469] current_xpos#27 = phi( play_move_leftright::@2/current_xpos#23, play_move_leftright::@4/current_xpos#5, play_move_leftright::@5/current_xpos#7, play_move_leftright::@6/current_xpos#23, play_move_leftright::@7/current_xpos#23 )
  [469] play_move_leftright::return#2 = phi( play_move_leftright::@2/0, play_move_leftright::@4/1, play_move_leftright::@5/1, play_move_leftright::@6/0, play_move_leftright::@7/0 )
  [470] return 
  to:@return
play_move_leftright::@1: scope:[play_move_leftright]  from play_move_leftright
  [471] play_collision::xpos#1 = current_xpos#23 - 1
  [472] play_collision::ypos#1 = current_ypos#20
  [473] play_collision::orientation#1 = current_orientation#21
  [474] current_piece#99 = current_piece#16
  [475] call play_collision 
  [476] play_collision::return#1 = play_collision::return#15
  to:play_move_leftright::@6
play_move_leftright::@6: scope:[play_move_leftright]  from play_move_leftright::@1
  [477] play_move_leftright::$8 = play_collision::return#1
  [478] if(play_move_leftright::$8!=COLLISION_NONE) goto play_move_leftright::@return
  to:play_move_leftright::@5
play_move_leftright::@5: scope:[play_move_leftright]  from play_move_leftright::@6
  [479] current_xpos#7 = -- current_xpos#23
  to:play_move_leftright::@return

byte play_move_rotate(byte play_move_rotate::key_event)
play_move_rotate: scope:[play_move_rotate]  from play_movement::@3
  [480] if(play_move_rotate::key_event#0==KEY_Z) goto play_move_rotate::@1
  to:play_move_rotate::@4
play_move_rotate::@4: scope:[play_move_rotate]  from play_move_rotate
  [481] if(play_move_rotate::key_event#0==KEY_X) goto play_move_rotate::@2
  to:play_move_rotate::@return
play_move_rotate::@return: scope:[play_move_rotate]  from play_move_rotate::@4 play_move_rotate::@5 play_move_rotate::@6
  [482] current_piece_gfx#22 = phi( play_move_rotate::@6/current_piece_gfx#21, play_move_rotate::@4/current_piece_gfx#21, play_move_rotate::@5/current_piece_gfx#6 )
  [482] current_orientation#26 = phi( play_move_rotate::@6/current_orientation#21, play_move_rotate::@4/current_orientation#21, play_move_rotate::@5/current_orientation#6 )
  [482] play_move_rotate::return#2 = phi( play_move_rotate::@6/0, play_move_rotate::@4/0, play_move_rotate::@5/1 )
  [483] return 
  to:@return
play_move_rotate::@2: scope:[play_move_rotate]  from play_move_rotate::@4
  [484] play_move_rotate::$5 = current_orientation#21 + $10
  [485] play_move_rotate::orientation#2 = play_move_rotate::$5 & $3f
  to:play_move_rotate::@3
play_move_rotate::@3: scope:[play_move_rotate]  from play_move_rotate::@1 play_move_rotate::@2
  [486] play_move_rotate::orientation#3 = phi( play_move_rotate::@1/play_move_rotate::orientation#1, play_move_rotate::@2/play_move_rotate::orientation#2 )
  [487] play_collision::xpos#3 = current_xpos#27
  [488] play_collision::ypos#3 = current_ypos#20
  [489] play_collision::orientation#3 = play_move_rotate::orientation#3
  [490] current_piece#101 = current_piece#16
  [491] call play_collision 
  [492] play_collision::return#14 = play_collision::return#15
  to:play_move_rotate::@6
play_move_rotate::@6: scope:[play_move_rotate]  from play_move_rotate::@3
  [493] play_move_rotate::$2 = play_collision::return#14
  [494] if(play_move_rotate::$2!=COLLISION_NONE) goto play_move_rotate::@return
  to:play_move_rotate::@5
play_move_rotate::@5: scope:[play_move_rotate]  from play_move_rotate::@6
  [495] current_orientation#6 = play_move_rotate::orientation#3
  [496] current_piece_gfx#6 = current_piece#16 + current_orientation#6
  to:play_move_rotate::@return
play_move_rotate::@1: scope:[play_move_rotate]  from play_move_rotate
  [497] play_move_rotate::$7 = current_orientation#21 - $10
  [498] play_move_rotate::orientation#1 = play_move_rotate::$7 & $3f
  to:play_move_rotate::@3

void render_bcd(byte* render_bcd::screen , word render_bcd::offset , byte render_bcd::bcd , byte render_bcd::only_low)
render_bcd: scope:[render_bcd]  from render_score::@2 render_score::@3 render_score::@4 render_score::@5 render_score::@6 render_score::@7
  [499] render_bcd::bcd#6 = phi( render_score::@2/render_bcd::bcd#0, render_score::@3/render_bcd::bcd#1, render_score::@4/render_bcd::bcd#2, render_score::@5/render_bcd::bcd#3, render_score::@6/render_bcd::bcd#4, render_score::@7/render_bcd::bcd#5 )
  [499] render_bcd::only_low#6 = phi( render_score::@2/0, render_score::@3/0, render_score::@4/0, render_score::@5/1, render_score::@6/0, render_score::@7/0 )
  [499] render_bcd::offset#6 = phi( render_score::@2/render_score::score_offset, render_score::@3/render_score::score_offset+2, render_score::@4/render_score::score_offset+4, render_score::@5/render_score::lines_offset, render_score::@6/render_score::lines_offset+1, render_score::@7/render_score::level_offset )
  [499] render_bcd::screen#6 = phi( render_score::@2/render_bcd::screen#0, render_score::@3/render_bcd::screen#1, render_score::@4/render_bcd::screen#2, render_score::@5/render_bcd::screen#3, render_score::@6/render_bcd::screen#4, render_score::@7/render_bcd::screen#5 )
  [500] render_bcd::screen_pos#0 = render_bcd::screen#6 + render_bcd::offset#6
  [501] if(render_bcd::only_low#6!=0) goto render_bcd::@1
  to:render_bcd::@2
render_bcd::@2: scope:[render_bcd]  from render_bcd
  [502] render_bcd::$5 = render_bcd::bcd#6 >> 4
  [503] render_bcd::$6 = render_bcd::ZERO_CHAR + render_bcd::$5
  [504] *render_bcd::screen_pos#0 = render_bcd::$6
  [505] render_bcd::screen_pos#2 = ++ render_bcd::screen_pos#0
  to:render_bcd::@1
render_bcd::@1: scope:[render_bcd]  from render_bcd render_bcd::@2
  [506] render_bcd::screen_pos#3 = phi( render_bcd/render_bcd::screen_pos#0, render_bcd::@2/render_bcd::screen_pos#2 )
  [507] render_bcd::$3 = render_bcd::bcd#6 & $f
  [508] render_bcd::$4 = render_bcd::ZERO_CHAR + render_bcd::$3
  [509] *render_bcd::screen_pos#3 = render_bcd::$4
  to:render_bcd::@return
render_bcd::@return: scope:[render_bcd]  from render_bcd::@1
  [510] return 
  to:@return

void play_lock_current()
play_lock_current: scope:[play_lock_current]  from play_move_down::@9
  [511] play_lock_current::yp#0 = current_ypos#10
  to:play_lock_current::@1
play_lock_current::@1: scope:[play_lock_current]  from play_lock_current play_lock_current::@6
  [512] play_lock_current::l#6 = phi( play_lock_current/0, play_lock_current::@6/play_lock_current::l#1 )
  [512] play_lock_current::i#3 = phi( play_lock_current/0, play_lock_current::@6/play_lock_current::i#7 )
  [512] play_lock_current::yp#2 = phi( play_lock_current/play_lock_current::yp#0, play_lock_current::@6/play_lock_current::yp#1 )
  [513] play_lock_current::$4 = play_lock_current::yp#2 << 1
  [514] play_lock_current::playfield_line#0 = playfield_lines[play_lock_current::$4]
  [515] play_lock_current::xp#0 = current_xpos#13
  to:play_lock_current::@2
play_lock_current::@2: scope:[play_lock_current]  from play_lock_current::@1 play_lock_current::@7
  [516] play_lock_current::c#2 = phi( play_lock_current::@1/0, play_lock_current::@7/play_lock_current::c#1 )
  [516] play_lock_current::xp#2 = phi( play_lock_current::@1/play_lock_current::xp#0, play_lock_current::@7/play_lock_current::xp#1 )
  [516] play_lock_current::i#2 = phi( play_lock_current::@1/play_lock_current::i#3, play_lock_current::@7/play_lock_current::i#9 )
  [517] play_lock_current::i#1 = ++ play_lock_current::i#2
  [518] if(current_piece_gfx#12[play_lock_current::i#2]==0) goto play_lock_current::@3
  to:play_lock_current::@4
play_lock_current::@4: scope:[play_lock_current]  from play_lock_current::@2
  [519] play_lock_current::playfield_line#0[play_lock_current::xp#2] = current_piece_char#23
  to:play_lock_current::@3
play_lock_current::@3: scope:[play_lock_current]  from play_lock_current::@2 play_lock_current::@4
  [520] play_lock_current::xp#1 = ++ play_lock_current::xp#2
  [521] play_lock_current::c#1 = ++ play_lock_current::c#2
  [522] if(play_lock_current::c#1!=4) goto play_lock_current::@7
  to:play_lock_current::@5
play_lock_current::@5: scope:[play_lock_current]  from play_lock_current::@3
  [523] play_lock_current::yp#1 = ++ play_lock_current::yp#2
  [524] play_lock_current::l#1 = ++ play_lock_current::l#6
  [525] if(play_lock_current::l#1!=4) goto play_lock_current::@6
  to:play_lock_current::@return
play_lock_current::@return: scope:[play_lock_current]  from play_lock_current::@5
  [526] return 
  to:@return
play_lock_current::@6: scope:[play_lock_current]  from play_lock_current::@5
  [527] play_lock_current::i#7 = play_lock_current::i#1
  to:play_lock_current::@1
play_lock_current::@7: scope:[play_lock_current]  from play_lock_current::@3
  [528] play_lock_current::i#9 = play_lock_current::i#1
  to:play_lock_current::@2

byte play_remove_lines()
play_remove_lines: scope:[play_remove_lines]  from play_move_down::@14
  [529] phi()
  to:play_remove_lines::@1
play_remove_lines::@1: scope:[play_remove_lines]  from play_remove_lines play_remove_lines::@6
  [530] play_remove_lines::removed#11 = phi( play_remove_lines/0, play_remove_lines::@6/play_remove_lines::removed#7 )
  [530] play_remove_lines::y#8 = phi( play_remove_lines/0, play_remove_lines::@6/play_remove_lines::y#1 )
  [530] play_remove_lines::w#12 = phi( play_remove_lines/PLAYFIELD_LINES*PLAYFIELD_COLS-1, play_remove_lines::@6/play_remove_lines::w#11 )
  [530] play_remove_lines::r#3 = phi( play_remove_lines/PLAYFIELD_LINES*PLAYFIELD_COLS-1, play_remove_lines::@6/play_remove_lines::r#1 )
  to:play_remove_lines::@2
play_remove_lines::@2: scope:[play_remove_lines]  from play_remove_lines::@1 play_remove_lines::@3
  [531] play_remove_lines::full#4 = phi( play_remove_lines::@1/1, play_remove_lines::@3/play_remove_lines::full#2 )
  [531] play_remove_lines::x#2 = phi( play_remove_lines::@1/0, play_remove_lines::@3/play_remove_lines::x#1 )
  [531] play_remove_lines::w#4 = phi( play_remove_lines::@1/play_remove_lines::w#12, play_remove_lines::@3/play_remove_lines::w#1 )
  [531] play_remove_lines::r#2 = phi( play_remove_lines::@1/play_remove_lines::r#3, play_remove_lines::@3/play_remove_lines::r#1 )
  [532] play_remove_lines::c#0 = playfield[play_remove_lines::r#2]
  [533] play_remove_lines::r#1 = -- play_remove_lines::r#2
  [534] if(play_remove_lines::c#0!=0) goto play_remove_lines::@9
  to:play_remove_lines::@3
play_remove_lines::@9: scope:[play_remove_lines]  from play_remove_lines::@2
  [535] phi()
  to:play_remove_lines::@3
play_remove_lines::@3: scope:[play_remove_lines]  from play_remove_lines::@2 play_remove_lines::@9
  [536] play_remove_lines::full#2 = phi( play_remove_lines::@9/play_remove_lines::full#4, play_remove_lines::@2/0 )
  [537] playfield[play_remove_lines::w#4] = play_remove_lines::c#0
  [538] play_remove_lines::w#1 = -- play_remove_lines::w#4
  [539] play_remove_lines::x#1 = ++ play_remove_lines::x#2
  [540] if(play_remove_lines::x#1!=PLAYFIELD_COLS-1+1) goto play_remove_lines::@2
  to:play_remove_lines::@4
play_remove_lines::@4: scope:[play_remove_lines]  from play_remove_lines::@3
  [541] if(play_remove_lines::full#2!=1) goto play_remove_lines::@6
  to:play_remove_lines::@5
play_remove_lines::@5: scope:[play_remove_lines]  from play_remove_lines::@4
  [542] play_remove_lines::w#2 = play_remove_lines::w#1 + PLAYFIELD_COLS
  [543] play_remove_lines::removed#1 = ++ play_remove_lines::removed#11
  to:play_remove_lines::@6
play_remove_lines::@6: scope:[play_remove_lines]  from play_remove_lines::@4 play_remove_lines::@5
  [544] play_remove_lines::removed#7 = phi( play_remove_lines::@4/play_remove_lines::removed#11, play_remove_lines::@5/play_remove_lines::removed#1 )
  [544] play_remove_lines::w#11 = phi( play_remove_lines::@4/play_remove_lines::w#1, play_remove_lines::@5/play_remove_lines::w#2 )
  [545] play_remove_lines::y#1 = ++ play_remove_lines::y#8
  [546] if(play_remove_lines::y#1!=PLAYFIELD_LINES-1+1) goto play_remove_lines::@1
  to:play_remove_lines::@7
play_remove_lines::@7: scope:[play_remove_lines]  from play_remove_lines::@6 play_remove_lines::@8
  [547] play_remove_lines::w#6 = phi( play_remove_lines::@6/play_remove_lines::w#11, play_remove_lines::@8/play_remove_lines::w#3 )
  [548] if(play_remove_lines::w#6!=$ff) goto play_remove_lines::@8
  to:play_remove_lines::@return
play_remove_lines::@return: scope:[play_remove_lines]  from play_remove_lines::@7
  [549] return 
  to:@return
play_remove_lines::@8: scope:[play_remove_lines]  from play_remove_lines::@7
  [550] playfield[play_remove_lines::w#6] = 0
  [551] play_remove_lines::w#3 = -- play_remove_lines::w#6
  to:play_remove_lines::@7

void play_update_score(byte play_update_score::removed)
play_update_score: scope:[play_update_score]  from play_move_down::@15
  [552] if(play_update_score::removed#0==0) goto play_update_score::@return
  to:play_update_score::@1
play_update_score::@1: scope:[play_update_score]  from play_update_score
  [553] play_update_score::$2 = < lines_bcd#20
  [554] play_update_score::lines_before#0 = play_update_score::$2 & $f0
  [555] play_update_score::$9 = play_update_score::removed#0 << 2
  [556] play_update_score::add_bcd#0 = score_add_bcd[play_update_score::$9]
  asm { sed  }
  [558] lines_bcd#31 = lines_bcd#20 + play_update_score::removed#0
  [559] score_bcd = score_bcd + play_update_score::add_bcd#0
  asm { cld  }
  [561] play_update_score::$4 = < lines_bcd#31
  [562] play_update_score::lines_after#0 = play_update_score::$4 & $f0
  [563] if(play_update_score::lines_before#0==play_update_score::lines_after#0) goto play_update_score::@return
  to:play_update_score::@2
play_update_score::@2: scope:[play_update_score]  from play_update_score::@1
  [564] phi()
  [565] call play_increase_level 
  to:play_update_score::@return
play_update_score::@return: scope:[play_update_score]  from play_update_score play_update_score::@1 play_update_score::@2
  [566] level_bcd#20 = phi( play_update_score/level_bcd#10, play_update_score::@1/level_bcd#10, play_update_score::@2/level_bcd#63 )
  [566] current_movedown_slow#24 = phi( play_update_score/current_movedown_slow#13, play_update_score::@1/current_movedown_slow#13, play_update_score::@2/current_movedown_slow#67 )
  [566] level#20 = phi( play_update_score/level#25, play_update_score::@1/level#25, play_update_score::@2/level#22 )
  [566] lines_bcd#18 = phi( play_update_score/lines_bcd#20, play_update_score::@1/lines_bcd#31, play_update_score::@2/lines_bcd#31 )
  [567] return 
  to:@return

void play_increase_level()
play_increase_level: scope:[play_increase_level]  from play_update_score::@2
  [568] level#22 = ++ level#25
  [569] if(level#22>=$1d+1) goto play_increase_level::@1
  to:play_increase_level::@3
play_increase_level::@3: scope:[play_increase_level]  from play_increase_level
  [570] current_movedown_slow#9 = MOVEDOWN_SLOW_SPEEDS[level#22]
  to:play_increase_level::@1
play_increase_level::@1: scope:[play_increase_level]  from play_increase_level play_increase_level::@3
  [571] current_movedown_slow#67 = phi( play_increase_level/1, play_increase_level::@3/current_movedown_slow#9 )
  [572] level_bcd#22 = ++ level_bcd#10
  [573] play_increase_level::$1 = level_bcd#22 & $f
  [574] if(play_increase_level::$1!=$a) goto play_increase_level::@2
  to:play_increase_level::@4
play_increase_level::@4: scope:[play_increase_level]  from play_increase_level::@1
  [575] level_bcd#7 = level_bcd#22 + 6
  to:play_increase_level::@2
play_increase_level::@2: scope:[play_increase_level]  from play_increase_level::@1 play_increase_level::@4
  [576] level_bcd#63 = phi( play_increase_level::@1/level_bcd#22, play_increase_level::@4/level_bcd#7 )
  asm { sed  }
  to:play_increase_level::@5
play_increase_level::@5: scope:[play_increase_level]  from play_increase_level::@2 play_increase_level::@5
  [578] play_increase_level::b#2 = phi( play_increase_level::@2/0, play_increase_level::@5/play_increase_level::b#1 )
  [579] play_increase_level::$5 = play_increase_level::b#2 << 2
  [580] score_add_bcd[play_increase_level::$5] = score_add_bcd[play_increase_level::$5] + SCORE_BASE_BCD[play_increase_level::$5]
  [581] play_increase_level::b#1 = ++ play_increase_level::b#2
  [582] if(play_increase_level::b#1!=5) goto play_increase_level::@5
  to:play_increase_level::@6
play_increase_level::@6: scope:[play_increase_level]  from play_increase_level::@5
  asm { cld  }
  to:play_increase_level::@return
play_increase_level::@return: scope:[play_increase_level]  from play_increase_level::@6
  [584] return 
  to:@return
