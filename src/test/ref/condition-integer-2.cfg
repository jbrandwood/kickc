@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@2
  [5] (byte) idx#15 ← phi( main/(byte) 0 main::@2/(byte) idx#1 )
  [5] (byte) main::i#2 ← phi( main/(byte) 2 main::@2/(byte) main::i#1 )
  [6] if((byte) 0!=(byte) main::i#2) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@1
  [7] *((const nomodify byte*) SCREEN + (byte) idx#15) ← (byte) ' '
  [8] (byte) idx#2 ← ++ (byte) idx#15
  to:main::@4
main::@4: scope:[main]  from main::@3 main::@5
  [9] (byte) idx#10 ← phi( main::@3/(byte) idx#2 main::@5/(byte) idx#3 )
  [9] (byte) main::j#2 ← phi( main::@3/(byte) 3 main::@5/(byte) main::j#1 )
  [10] (byte) main::j#1 ← -- (byte) main::j#2
  [11] if((byte) 0!=(byte) main::j#1) goto main::@5
  to:main::@6
main::@6: scope:[main]  from main::@4
  [12] *((const nomodify byte*) SCREEN + (byte) idx#10) ← (byte) ' '
  [13] (byte) idx#4 ← ++ (byte) idx#10
  to:main::@7
main::@7: scope:[main]  from main::@6 main::@7
  [14] (byte) idx#12 ← phi( main::@7/(byte) idx#13 main::@6/(byte) idx#4 )
  [14] (byte) main::k#2 ← phi( main::@7/(byte) main::k#1 main::@6/(byte) 2 )
  [15] *((const nomodify byte*) SCREEN + (byte) idx#12) ← (byte) main::k#2
  [16] (byte) idx#13 ← ++ (byte) idx#12
  [17] (byte) main::k#1 ← -- (byte) main::k#2
  [18] if((byte) 0!=(byte) main::k#1) goto main::@7
  to:main::@return
main::@return: scope:[main]  from main::@7
  [19] return 
  to:@return
main::@5: scope:[main]  from main::@4
  [20] *((const nomodify byte*) SCREEN + (byte) idx#10) ← (byte) main::j#1
  [21] (byte) idx#3 ← ++ (byte) idx#10
  to:main::@4
main::@2: scope:[main]  from main::@1
  [22] *((const nomodify byte*) SCREEN + (byte) idx#15) ← (byte) main::i#2
  [23] (byte) idx#1 ← ++ (byte) idx#15
  [24] (byte) main::i#1 ← -- (byte) main::i#2
  to:main::@1
