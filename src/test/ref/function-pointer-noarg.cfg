@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] *((const byte*) main::SCREEN#0) ← <(word)&(void()) fn1()
  [5] *((const byte*) main::SCREEN#0+(byte) 1) ← >(word)&(void()) fn1()
  [6] *((const byte*) main::SCREEN#0+(byte) 2) ← <(word)&(void()) fn2()
  [7] *((const byte*) main::SCREEN#0+(byte) 3) ← >(word)&(void()) fn2()
  to:main::@return
main::@return: scope:[main]  from main
  [8] return 
  to:@return

(void()) fn2()
fn2: scope:[fn2]  from
  [9] *((const byte*) fn2::BGCOL#0) ← ++ *((const byte*) fn2::BGCOL#0)
  to:fn2::@return
fn2::@return: scope:[fn2]  from fn2
  [10] return 
  to:@return

(void()) fn1()
fn1: scope:[fn1]  from
  [11] *((const byte*) fn1::BORDERCOL#0) ← ++ *((const byte*) fn1::BORDERCOL#0)
  to:fn1::@return
fn1::@return: scope:[fn1]  from fn1
  [12] return 
  to:@return
